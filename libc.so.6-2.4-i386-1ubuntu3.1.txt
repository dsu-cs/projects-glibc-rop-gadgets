


Gadgets
=======


0x000a3e0d: aaa; adc al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; test al, 0xf9; call dword ptr [eax - 0x18]; 
0x0019106b: aaa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00080fde: aaa; add al, byte ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0014454d: aaa; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00169481: aaa; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017532c: aaa; add esp, 0x18; pop ebx; ret; 
0x0009f3ed: aaa; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e50ab: aaa; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000c0c34: aaa; call ebx; 
0x000c0b97: aaa; call esi; 
0x00185452: aaa; clc; jmp dword ptr [esi - 0x70]; 
0x00107385: aaa; cmp edi, edi; dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0006abfa: aaa; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00040aca: aaa; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000c19a7: aaa; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000fadb6: aaa; pop eax; stc; call dword ptr [eax + 0x55]; 
0x00173ea5: aaa; push eax; cld; call dword ptr [eax - 0x73]; 
0x0014f17e: aaa; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0014e845: aaa; push ebp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0017207f: aaa; stc; call dword ptr [edi + 0x52]; 
0x00165728: aaa; std; jmp dword ptr [esi - 0x70]; 
0x00077fb0: aaa; sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x000fa3d9: aad 0; add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00108f3a: aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008d07a: aad 0x66; nop; nop; nop; ret; 
0x0013ae51: aad 0x72; and esp, dword ptr [esi - 0x7d]; jns 0x13ae5a; add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x00164f59: aad 0x72; stc; call dword ptr [eax - 0x18]; 
0x00098f27: aad 0x83; in al, dx; or al, 0x8d; xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; stc; ret 0xfffe; 
0x001327ca: aad 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00061031: aad 0x83; ret 0x101; 
0x000a934a: aad 0x83; ret 0x3801; 
0x00131d25: aad 0x83; ret 0x8901; 
0x00156ba2: aad 0x83; ret 0xeb18; 
0x000f9cc4: aad 0x89; fnstcw word ptr [ecx]; ret; 
0x0005987e: aad 0x89; ret 0xe889; 
0x000e6ec5: aad 0xf3; jmp dword ptr [esi - 0x70]; 
0x000a9d99: aad 0xf6; push esi; inc ecx; jnp 0xa9da4; cmove eax, edx; ret; 
0x0015b975: aad 0xfd; jmp dword ptr [esi - 0x70]; 
0x0016e2ef: aad 0xff; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00050bc2: aad 1; ret 0xd889; 
0x0006d087: aad 3; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x00110f7e: aam 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d6bc8: aam 0; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0011a288: aam 0x14; stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x000414e2: aam 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000d18ee: aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x0009e3f6: aam 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0010fba8: aam 0x41; bnd jmp dword ptr [esi - 0x70]; 
0x0008280b: aam 0x52; push ebx; push esi; call eax; 
0x000a3b6e: aam 0x53; stc; call dword ptr [eax - 0x18]; 
0x000e6bc5: aam 0x56; call eax; 
0x00183708: aam 0x57; sti; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00084541: aam 0x58; stc; call dword ptr [eax - 0x18]; 
0x000302a6: aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x001ac9c5: aam 0x81; loope 0x1ac9c9; add byte ptr [eax], dl; add dh, dh; ret 0xf07; 
0x000ace72: aam 0x83; ret 0x3901; 
0x001583d7: aam 0x83; ret 0x8014; 
0x000ac433: aam 0x83; ret 0xf01; 
0x0005bd6b: aam 0x83; ret; 
0x000277c7: aam 0x89; ret; 
0x000fa4c8: aam 0x8c; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00027429: aam 0x8d; xchg byte ptr [eax + eax*4], al; stc; call dword ptr [eax - 0x73]; 
0x00077d58: aam 0x8e; stc; call dword ptr [eax - 0x73]; 
0x000c20b3: aam 0xab; stc; call dword ptr [eax - 0x18]; 
0x000c20b3: aam 0xab; stc; call dword ptr [eax - 0x18]; ret; 
0x00150731: aam 0xc2; stc; call dword ptr [eax - 0x73]; 
0x0016bd08: aam 0xd1; cld; jmp dword ptr [esi - 0x70]; 
0x0003b408: aam 0xda; verr word ptr [esi - 0x70]; nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x000b814e: aam 0xdc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00136e18: aam 0xdc; out dx, eax; inc dword ptr [ebx - 0x72afef3c]; xchg byte ptr [esi + 0x66], bl; stc; call dword ptr [ebx + 0x50]; 
0x00025b6a: aam 0xeb; ret 0x9066; 
0x001aadd2: aam 0xf7; out 0x89, al; ret; 
0x000d7003: aam 0xf; lahf; ret; 
0x000d093e: aam 0xf; mov dword ptr [ecx], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0018b9f3: aam 0xfa; jmp dword ptr [esi - 0x70]; 
0x0017ba36: aam 0xfb; jmp dword ptr [esi - 0x70]; 
0x0016ba16: aam 0xfc; jmp dword ptr [esi - 0x70]; 
0x00045f46: aam 0xfd; jmp dword ptr [esi - 0x70]; 
0x000c0a28: aam 1; add byte ptr [eax], al; ret; 
0x000d06a3: aam 1; ret 0x1689; 
0x000d0469: aam 1; ret 0x5389; 
0x00106834: aam 9; stc; inc dword ptr [ecx]; retf; jmp ebx; 
0x0019088b: aas; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001112ed: aas; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000a998d: aas; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00061093: aas; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00108425: aas; add byte ptr [eax], al; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x0008ebac: aas; add byte ptr [eax], al; ja 0x8ebb8; ret; 
0x001a3392: aas; add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0010846e: aas; add byte ptr [eax], al; push eax; call 0x8d660; call dword ptr [esi]; 
0x00067943: aas; add byte ptr [ebx - 0x5d74b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e920d: aas; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00145fc4: aas; add esp, 0x1c; ret; 
0x000cacdd: aas; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00027493: aas; cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x0014f1f5: aas; in eax, dx; jmp dword ptr [ebp - 0x77]; 
0x001907d3: aas; inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3332: aas; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x000f756e: aas; jne 0xf7589; mov eax, 1; ret; 
0x000a4883: aas; lea esi, [esi]; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x000b6d03: aas; lock adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008b1e0: aas; mov dword ptr [ebx + 0x1a7c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0008ccd7: aas; mov eax, dword ptr [0x448b001a]; and al, 4; cmp dword ptr [eax], 1; je 0x8cce8; ret; 
0x000b85bd: aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0012aa90: aas; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00142836: aas; push -7; call dword ptr [eax + 0x51]; 
0x00025fd6: aas; push cs; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0012abd6: aas; ret 0x10; 
0x0019cefd: aas; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00047f25: aas; stc; call dword ptr [eax + 0x56]; 
0x00056aac: aas; stc; call dword ptr [eax + 0x57]; 
0x00035359: aas; stc; call dword ptr [eax - 0x18]; 
0x0003f28c: aas; stc; call dword ptr [ebx + 0x50]; 
0x00047ef8: aas; stc; call dword ptr [ebx + 0x6a]; 
0x00056a78: aas; stc; call dword ptr [esi + 0x6a]; 
0x0005f263: aas; stc; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x0003f9ce: aas; stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0005bb67: aas; stc; jmp dword ptr [ebp - 0x75]; 
0x000f3d92: aas; sti; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0009e3f5: adc ah, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000c20b2: adc ah, 0xab; stc; call dword ptr [eax - 0x18]; 
0x000c20b2: adc ah, 0xab; stc; call dword ptr [eax - 0x18]; ret; 
0x00150730: adc ah, 0xc2; stc; call dword ptr [eax - 0x73]; 
0x000c0a27: adc ah, 1; add byte ptr [eax], al; ret; 
0x0019f2f2: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x000a3deb: adc al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x000a3e0e: adc al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; test al, 0xf9; call dword ptr [eax - 0x18]; 
0x00107b19: adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0009f1d1: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x00050cbb: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000ed8e1: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed8e1: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x00108c63: adc al, 0; add byte ptr [eax], al; jne 0x108caa; add esp, 0x28; pop ebx; ret; 
0x00108cf6: adc al, 0; add byte ptr [eax], al; jne 0x108d42; add esp, 0x28; pop ebx; ret; 
0x00108f53: adc al, 0; add byte ptr [eax], al; jne 0x108f9a; add esp, 0x28; pop ebx; ret; 
0x0010adaf: adc al, 0; add byte ptr [eax], al; jne 0x10ae5b; add esp, 0x68; pop ebx; ret; 
0x0010fe28: adc al, 0; add byte ptr [eax], al; jne 0x10fe46; add esp, 0x78; pop ebx; ret; 
0x0011b1ba: adc al, 0; add byte ptr [eax], al; jne 0x11b1c7; movzx eax, al; add esp, 0x4c; ret; 
0x0011d59e: adc al, 0; add byte ptr [eax], al; jne 0x11d5a9; add esp, 0x38; pop ebx; ret; 
0x0011d60e: adc al, 0; add byte ptr [eax], al; jne 0x11d619; add esp, 0x38; pop ebx; ret; 
0x0011eae2: adc al, 0; add byte ptr [eax], al; jne 0x11eaf3; add esp, 0x1c; ret; 
0x00120151: adc al, 0; add byte ptr [eax], al; jne 0x12015f; add esp, 0x418; pop ebx; ret; 
0x00120c43: adc al, 0; add byte ptr [eax], al; jne 0x120c4e; add esp, 0x38; pop ebx; ret; 
0x00121062: adc al, 0; add byte ptr [eax], al; jne 0x12106c; add esp, 0x1c; ret; 
0x00121add: adc al, 0; add byte ptr [eax], al; jne 0x121aff; add esp, 0x1018; pop ebx; ret; 
0x00122765: adc al, 0; add byte ptr [eax], al; jne 0x12276f; add esp, 0x1c; ret; 
0x00126fe6: adc al, 0; add byte ptr [eax], al; jne 0x127032; add esp, 0x28; pop ebx; ret; 
0x00127086: adc al, 0; add byte ptr [eax], al; jne 0x1270d2; add esp, 0x28; pop ebx; ret; 
0x00128b11: adc al, 0; add byte ptr [eax], al; jne 0x128b1b; add esp, 0x3c; ret; 
0x00128f88: adc al, 0; add byte ptr [eax], al; jne 0x128f92; add esp, 0x1c; ret; 
0x0012ca6c: adc al, 0; add byte ptr [eax], al; jne 0x12ca92; add esp, 0x28; pop ebx; ret; 
0x0012cb91: adc al, 0; add byte ptr [eax], al; jne 0x12cbb2; add esp, 0x18; pop ebx; ret; 
0x0012cc11: adc al, 0; add byte ptr [eax], al; jne 0x12cc32; add esp, 0x18; pop ebx; ret; 
0x0012cecc: adc al, 0; add byte ptr [eax], al; jne 0x12cef2; add esp, 0x18; pop ebx; ret; 
0x0012db2c: adc al, 0; add byte ptr [eax], al; jne 0x12db52; add esp, 0x18; pop ebx; ret; 
0x0012dc33: adc al, 0; add byte ptr [eax], al; jne 0x12dc3d; add esp, 0x1c; ret; 
0x0012dca1: adc al, 0; add byte ptr [eax], al; jne 0x12dcc2; add esp, 0x18; pop ebx; ret; 
0x0012dd2c: adc al, 0; add byte ptr [eax], al; jne 0x12dd52; add esp, 0x28; pop ebx; ret; 
0x0012de34: adc al, 0; add byte ptr [eax], al; jne 0x12de3e; add esp, 0x7c; ret; 
0x001387d1: adc al, 0; add byte ptr [eax], al; jne 0x1387e5; add esp, 0x2c; ret; 
0x00139971: adc al, 0; add byte ptr [eax], al; jne 0x139985; add esp, 0x2c; ret; 
0x00143a2e: adc al, 0; add byte ptr [eax], al; jne 0x143a44; add esp, 0x18; pop ebx; ret; 
0x00143a76: adc al, 0; add byte ptr [eax], al; jne 0x143a80; add esp, 0x1c; ret; 
0x00143ac5: adc al, 0; add byte ptr [eax], al; jne 0x143acf; add esp, 0x1c; ret; 
0x001458be: adc al, 0; add byte ptr [eax], al; jne 0x145904; add esp, 0x118; pop ebx; ret; 
0x0014595e: adc al, 0; add byte ptr [eax], al; jne 0x1459c0; add esp, 0x118; pop ebx; ret; 
0x00145a1e: adc al, 0; add byte ptr [eax], al; jne 0x145a6b; add esp, 0x118; pop ebx; ret; 
0x00145abe: adc al, 0; add byte ptr [eax], al; jne 0x145aed; add esp, 0x11c; ret; 
0x00145fbf: adc al, 0; add byte ptr [eax], al; jne 0x146004; add esp, 0x1c; ret; 
0x001499d2: adc al, 0; add byte ptr [eax], al; jne 0x1499df; movzx eax, ax; add esp, 0x2c; ret; 
0x0014df62: adc al, 0; add byte ptr [eax], al; jne 0x14df6d; add esp, 0x28; pop ebx; ret; 
0x00151874: adc al, 0; add byte ptr [eax], al; jne 0x15187e; add esp, 0x1c; ret; 
0x00168e97: adc al, 0; add byte ptr [eax], al; jne 0x168ea2; add esp, 0x28; pop ebx; ret; 
0x0016ebb5: adc al, 0; add byte ptr [eax], al; jne 0x16ec2b; add esp, 0x18; pop ebx; ret; 
0x00171c1e: adc al, 0; add byte ptr [eax], al; jne 0x171c37; add esp, 0x1c; ret; 
0x00171d4a: adc al, 0; add byte ptr [eax], al; jne 0x171d5f; add esp, 0x28; pop ebx; ret; 
0x00171dea: adc al, 0; add byte ptr [eax], al; jne 0x171dff; add esp, 0x28; pop ebx; ret; 
0x0017211e: adc al, 0; add byte ptr [eax], al; jne 0x172137; add esp, 0x1c; ret; 
0x001721a1: adc al, 0; add byte ptr [eax], al; jne 0x1721b7; add esp, 0x18; pop ebx; ret; 
0x00172fa4: adc al, 0; add byte ptr [eax], al; jne 0x172fae; add esp, 0x4c; ret; 
0x00173014: adc al, 0; add byte ptr [eax], al; jne 0x17301e; add esp, 0x4c; ret; 
0x00173084: adc al, 0; add byte ptr [eax], al; jne 0x17308e; add esp, 0x4c; ret; 
0x001730f4: adc al, 0; add byte ptr [eax], al; jne 0x1730fe; add esp, 0x4c; ret; 
0x00173157: adc al, 0; add byte ptr [eax], al; jne 0x173161; add esp, 0x4c; ret; 
0x001731b7: adc al, 0; add byte ptr [eax], al; jne 0x1731c1; add esp, 0x4c; ret; 
0x00173224: adc al, 0; add byte ptr [eax], al; jne 0x17322e; add esp, 0x4c; ret; 
0x001732a4: adc al, 0; add byte ptr [eax], al; jne 0x1732ae; add esp, 0x4c; ret; 
0x00173785: adc al, 0; add byte ptr [eax], al; jne 0x17378f; add esp, 0x1c; ret; 
0x001737cd: adc al, 0; add byte ptr [eax], al; jne 0x173804; add esp, 0x1c; ret; 
0x00174efe: adc al, 0; add byte ptr [eax], al; jne 0x174f08; add esp, 0x2c; ret; 
0x00174f90: adc al, 0; add byte ptr [eax], al; jne 0x174ff9; add esp, 0x18; pop ebx; ret; 
0x00175070: adc al, 0; add byte ptr [eax], al; jne 0x1750d9; add esp, 0x18; pop ebx; ret; 
0x00175327: adc al, 0; add byte ptr [eax], al; jne 0x175364; add esp, 0x18; pop ebx; ret; 
0x001753b7: adc al, 0; add byte ptr [eax], al; jne 0x1753f4; add esp, 0x18; pop ebx; ret; 
0x00175461: adc al, 0; add byte ptr [eax], al; jne 0x175483; add esp, 0x18; pop ebx; ret; 
0x001754e9: adc al, 0; add byte ptr [eax], al; jne 0x17551f; add esp, 0x18; pop ebx; ret; 
0x0017557d: adc al, 0; add byte ptr [eax], al; jne 0x1755c4; add esp, 0x18; pop ebx; ret; 
0x00175d67: adc al, 0; add byte ptr [eax], al; jne 0x175da4; add esp, 0x18; pop ebx; ret; 
0x00175df7: adc al, 0; add byte ptr [eax], al; jne 0x175e34; add esp, 0x18; pop ebx; ret; 
0x00175e87: adc al, 0; add byte ptr [eax], al; jne 0x175ec4; add esp, 0x18; pop ebx; ret; 
0x00175f17: adc al, 0; add byte ptr [eax], al; jne 0x175f54; add esp, 0x18; pop ebx; ret; 
0x0017657e: adc al, 0; add byte ptr [eax], al; jne 0x17658b; movzx eax, al; add esp, 0x1c; ret; 
0x001765ce: adc al, 0; add byte ptr [eax], al; jne 0x1765db; movzx eax, al; add esp, 0x1c; ret; 
0x00176628: adc al, 0; add byte ptr [eax], al; jne 0x176633; add esp, 0x18; pop ebx; ret; 
0x001766c8: adc al, 0; add byte ptr [eax], al; jne 0x1766d3; add esp, 0x18; pop ebx; ret; 
0x0017b793: adc al, 0; add byte ptr [eax], al; jne 0x17b7c4; add esp, 0x18; pop ebx; ret; 
0x0017d2c6: adc al, 0; add byte ptr [eax], al; jne 0x17d2e1; add esp, 0x18; pop ebx; ret; 
0x0017d340: adc al, 0; add byte ptr [eax], al; jne 0x17d359; add esp, 0x18; pop ebx; ret; 
0x001800b9: adc al, 0; add byte ptr [eax], al; jne 0x1800c4; add esp, 0x28; pop ebx; ret; 
0x0018292d: adc al, 0; add byte ptr [eax], al; jne 0x182938; add esp, 0x18; pop ebx; ret; 
0x00185695: adc al, 0; add byte ptr [eax], al; jne 0x18569f; add esp, 0x1c; ret; 
0x0018b6a0: adc al, 0; add byte ptr [eax], al; jne 0x18b6c7; add esp, 0x18; pop ebx; ret; 
0x0018b9e7: adc al, 0; add byte ptr [eax], al; jne 0x18b9f1; add esp, 0x2c; ret; 
0x000254a9: adc al, 0; add byte ptr [eax], al; jne 0x254b3; add esp, 0x1c; ret; 
0x0003a8c5: adc al, 0; add byte ptr [eax], al; jne 0x3a8d3; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bdb4: adc al, 0; add byte ptr [eax], al; jne 0x3bdbf; add esp, 0x18; pop ebx; ret; 
0x0003c807: adc al, 0; add byte ptr [eax], al; jne 0x3c81f; add esp, 0x98; pop ebx; ret; 
0x0003c9ac: adc al, 0; add byte ptr [eax], al; jne 0x3c9ec; add esp, 0x28; pop ebx; ret; 
0x0003cd64: adc al, 0; add byte ptr [eax], al; jne 0x3cd72; add esp, 0x128; pop ebx; ret; 
0x0003d2ef: adc al, 0; add byte ptr [eax], al; jne 0x3d307; add esp, 0x98; pop ebx; ret; 
0x0003d35f: adc al, 0; add byte ptr [eax], al; jne 0x3d377; add esp, 0x98; pop ebx; ret; 
0x0003d3d8: adc al, 0; add byte ptr [eax], al; jne 0x3d3e5; add esp, 0x9c; ret; 
0x0003d856: adc al, 0; add byte ptr [eax], al; jne 0x3d860; add esp, 0x1c; ret; 
0x0003e8a8: adc al, 0; add byte ptr [eax], al; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9bb: adc al, 0; add byte ptr [eax], al; jne 0x3e9c5; add esp, 0x1c; ret; 
0x0003fe7b: adc al, 0; add byte ptr [eax], al; jne 0x3fe85; add esp, 0x1c; ret; 
0x00040088: adc al, 0; add byte ptr [eax], al; jne 0x40092; add esp, 0x1c; ret; 
0x00040236: adc al, 0; add byte ptr [eax], al; jne 0x40240; add esp, 0x2c; ret; 
0x00040338: adc al, 0; add byte ptr [eax], al; jne 0x40342; add esp, 0x1c; ret; 
0x000403bb: adc al, 0; add byte ptr [eax], al; jne 0x403c5; add esp, 0x1c; ret; 
0x00041359: adc al, 0; add byte ptr [eax], al; jne 0x41394; add esp, 0x18; pop ebx; ret; 
0x000527e6: adc al, 0; add byte ptr [eax], al; jne 0x527f0; add esp, 0x2c; ret; 
0x0005a004: adc al, 0; add byte ptr [eax], al; jne 0x5a017; add esp, 0x1c; ret; 
0x0005e811: adc al, 0; add byte ptr [eax], al; jne 0x5e82e; add esp, 0x78; pop ebx; ret; 
0x00060684: adc al, 0; add byte ptr [eax], al; jne 0x60692; add esp, 0x1018; pop ebx; ret; 
0x00060703: adc al, 0; add byte ptr [eax], al; jne 0x6070e; add esp, 0x78; pop ebx; ret; 
0x00085b7e: adc al, 0; add byte ptr [eax], al; jne 0x85b98; add esp, 0x28; pop ebx; ret; 
0x00090989: adc al, 0; add byte ptr [eax], al; jne 0x90993; add esp, 0x2c; ret; 
0x00095385: adc al, 0; add byte ptr [eax], al; jne 0x95390; add esp, 0x28; pop ebx; ret; 
0x00095423: adc al, 0; add byte ptr [eax], al; jne 0x9542e; add esp, 0x28; pop ebx; ret; 
0x000966b9: adc al, 0; add byte ptr [eax], al; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b19: adc al, 0; add byte ptr [eax], al; jne 0x96b23; add esp, 0x2c; ret; 
0x00097045: adc al, 0; add byte ptr [eax], al; jne 0x9704f; add esp, 0x2c; ret; 
0x00097495: adc al, 0; add byte ptr [eax], al; jne 0x9749f; add esp, 0x2c; ret; 
0x0009a1b2: adc al, 0; add byte ptr [eax], al; jne 0x9a1ff; add esp, 0x38; pop ebx; ret; 
0x0009a420: adc al, 0; add byte ptr [eax], al; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a68c: adc al, 0; add byte ptr [eax], al; jne 0x9a6b7; add esp, 0x2c; ret; 
0x0009a8cc: adc al, 0; add byte ptr [eax], al; jne 0x9a8f7; add esp, 0x18; pop ebx; ret; 
0x0009c562: adc al, 0; add byte ptr [eax], al; jne 0x9c56d; add esp, 0x28; pop ebx; ret; 
0x0009daba: adc al, 0; add byte ptr [eax], al; jne 0x9dac5; add esp, 0x28; pop ebx; ret; 
0x0009e01a: adc al, 0; add byte ptr [eax], al; jne 0x9e025; add esp, 0x38; pop ebx; ret; 
0x000c35e9: adc al, 0; add byte ptr [eax], al; jne 0xc3614; add esp, 0x18; pop ebx; ret; 
0x000d7b76: adc al, 0; add byte ptr [eax], al; jne 0xd7b8f; add esp, 0x28; pop ebx; ret; 
0x000d7bfa: adc al, 0; add byte ptr [eax], al; jne 0xd7c04; add esp, 0x1c; ret; 
0x000d7c44: adc al, 0; add byte ptr [eax], al; jne 0xd7c4f; add esp, 0x38; pop ebx; ret; 
0x000d7ca6: adc al, 0; add byte ptr [eax], al; jne 0xd7cb1; add esp, 0x48; pop ebx; ret; 
0x000d8f1a: adc al, 0; add byte ptr [eax], al; jne 0xd8f25; add esp, 0x28; pop ebx; ret; 
0x000d917f: adc al, 0; add byte ptr [eax], al; jne 0xd91c2; add esp, 0x28; pop ebx; ret; 
0x000d94f3: adc al, 0; add byte ptr [eax], al; jne 0xd9510; add esp, 0x38; pop ebx; ret; 
0x000e232e: adc al, 0; add byte ptr [eax], al; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47ae: adc al, 0; add byte ptr [eax], al; jne 0xe47b8; add esp, 0x1c; ret; 
0x000e48e2: adc al, 0; add byte ptr [eax], al; jne 0xe491a; add esp, 0x28; pop ebx; ret; 
0x000e4ad0: adc al, 0; add byte ptr [eax], al; jne 0xe4adb; add esp, 0x28; pop ebx; ret; 
0x000e58a6: adc al, 0; add byte ptr [eax], al; jne 0xe58b4; add esp, 0xe8; pop ebx; ret; 
0x000e5918: adc al, 0; add byte ptr [eax], al; jne 0xe5926; add esp, 0xe8; pop ebx; ret; 
0x000e59bc: adc al, 0; add byte ptr [eax], al; jne 0xe59ca; add esp, 0xe8; pop ebx; ret; 
0x000ec8db: adc al, 0; add byte ptr [eax], al; jne 0xec8ef; add esp, 0x1c; ret; 
0x000edbe8: adc al, 0; add byte ptr [eax], al; jne 0xedc06; add esp, 0x78; pop ebx; ret; 
0x000f0698: adc al, 0; add byte ptr [eax], al; jne 0xf06b6; add esp, 0x78; pop ebx; ret; 
0x000f1468: adc al, 0; add byte ptr [eax], al; jne 0xf1486; add esp, 0x78; pop ebx; ret; 
0x000f3f08: adc al, 0; add byte ptr [eax], al; jne 0xf3f26; add esp, 0x78; pop ebx; ret; 
0x000f4ce8: adc al, 0; add byte ptr [eax], al; jne 0xf4d06; add esp, 0x78; pop ebx; ret; 
0x00121aab: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e5e4e: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x0005265e: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00112244: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00072ac9: adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00057144: adc al, 0; add byte ptr [ebx - 0x361f43], cl; dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x0006886a: adc al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x00067f63: adc al, 0; add byte ptr [ebx - 0x58f7b], cl; dec dword ptr [ecx - 0x59373]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0004de6a: adc al, 0; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0003cea3: adc al, 0; add eax, 0x1f9f6f; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003ce83: adc al, 0; add eax, 0x1f9f8f; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00034503: adc al, 0; add eax, 0x20290f; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x000344e3: adc al, 0; add eax, 0x20292f; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x000344c3: adc al, 0; add eax, 0x20294f; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x0016c56b: adc al, 0x11; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x16c560; pop ebx; ret; 
0x00085389: adc al, 0x19; ret 0xc889; 
0x001488be: adc al, 0x1a; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x000544d9: adc al, 0x24; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00182d1e: adc al, 0x24; ret; 
0x00168a01: adc al, 0x24; sub esp, 8; lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x00168a1d: adc al, 0x24; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x00131b34: adc al, 0x29; ret 0x478b; 
0x0012ddb0: adc al, 0x29; ret 0xca39; 
0x00094e21: adc al, 0x29; ret; 
0x00083923: adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x001322f5: adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00180e46: adc al, 0x39; fimul word ptr [edi]; xchg edx, eax; ret; 
0x0009b549: adc al, 0x39; or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0008dd0b: adc al, 0x39; ret 0x1074; 
0x00051f0d: adc al, 0x39; ret 0x4674; 
0x0003183d: adc al, 0x39; ret 0x4d0f; 
0x0016d4f4: adc al, 0x39; ret 0x4e0f; 
0x0007023f: adc al, 0x39; ret 0x840f; 
0x000a191a: adc al, 0x39; ret 0x850f; 
0x00051c53: adc al, 0x39; ret; 
0x00165a48: adc al, 0x39; ror byte ptr [edi], 1; dec esp; ret 0xec83; 
0x0009d28b: adc al, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00031ae5: adc al, 0x3c; stc; call dword ptr [eax - 0x18]; 
0x00112702: adc al, 0x47; adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001176a2: adc al, 0x50; mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00117c5a: adc al, 0x50; push 1; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00117f9d: adc al, 0x50; push 2; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00117e7e: adc al, 0x50; push 5; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0005e974: adc al, 0x50; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016857a: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; 
0x0016857a: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x000edbfe: adc al, 0x52; push eax; call dword ptr [ecx + 0x20]; 
0x001695b4: adc al, 0x52; push ebx; call dword ptr [eax + 0x14]; 
0x001691a2: adc al, 0x53; call dword ptr [eax + 0x10]; 
0x00173349: adc al, 0x53; call dword ptr [eax]; 
0x0014f7e8: adc al, 0x55; call edi; 
0x001688a9: adc al, 0x56; call dword ptr [eax + 4]; 
0x0008c8c0: adc al, 0x56; push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0012fabe: adc al, 0x5b; pop edi; ret; 
0x000ad6fd: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0003ffb6: adc al, 0x5b; pop esi; pop edi; ret; 
0x0002fc74: adc al, 0x5b; pop esi; ret; 
0x0007fa70: adc al, 0x5e; pop edi; jmp eax; 
0x000b7443: adc al, 0x5f; pop esi; pop ebx; ret; 
0x000ddfa3: adc al, 0x66; or dword ptr [esp + 0x58], 0x46890408; adc cl, ch; ret 0xffed; 
0x000a454a: adc al, 0x69; stc; call dword ptr [eax + 0x6a]; 
0x0009e6c3: adc al, 0x69; stc; call dword ptr [eax - 0x18]; 
0x00108d82: adc al, 0x6a; add byte ptr [edx], ch; call 0x108d50; add esp, 0x1c; ret; 
0x0017d26c: adc al, 0x6a; add cl, byte ptr [ebp - 0x6893b80]; call dword ptr [eax - 0x18]; 
0x000a4187: adc al, 0x6a; add dword ptr [ebx - 0x72cbdba4], ecx; sbb dword ptr [esi], 0x54; stc; call dword ptr [eax - 0x18]; 
0x0009c582: adc al, 0x6a; add edi, edi; je 0x9c5ac; sbb al, 0xe8; ret 0xfff0; 
0x0015ba8a: adc al, 0x70; stc; call dword ptr [eax - 0x18]; 
0x0015bc0a: adc al, 0x70; stc; call dword ptr [eax - 0x73]; 
0x0017e3a7: adc al, 0x73; out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00098f4e: adc al, 0x74; pop es; ret; 
0x0003739d: adc al, 0x77; arpl word ptr [edi], cx; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77d2c]; add esi, edi; jmp esi; 
0x000ec672: adc al, 0x77; dec ebx; mov edi, dword ptr [edx + eax*4 - 0x6fcf8]; add edi, edx; jmp edi; 
0x00036e1e: adc al, 0x77; push cs; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77d80]; add esi, edi; jmp esi; 
0x00036de3: adc al, 0x77; push cs; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77dd4]; add esi, edi; jmp esi; 
0x00036d1b: adc al, 0x77; push cs; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e7c]; add esi, edi; jmp esi; 
0x000374e4: adc al, 0x77; push eax; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77bdc]; add edx, edi; jmp edx; 
0x000be262: adc al, 0x7e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00152e24: adc al, 0x81; les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00182d5e: adc al, 0x81; setne al; movzx eax, al; ret; 
0x000961cb: adc al, 0x83; cli; add dword ptr [ebp + 0x1f], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00041002: adc al, 0x83; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x001665d2: adc al, 0x83; in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; sub byte ptr [edi + 0x72], 0xf9; call dword ptr [eax + 0x57]; 
0x000dcb81: adc al, 0x83; jle 0xdcb95; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x00169eed: adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00085b83: adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x00113930: adc al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002c7f7: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008ba4c: adc al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00084faf: adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000592ba: adc al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000a71a5: adc al, 0x83; ret 0x8301; 
0x0006fff4: adc al, 0x83; ret 0x8904; 
0x00095934: adc al, 0x83; ret; 
0x00028a88: adc al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000a971b: adc al, 0x83; stc; or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97db: adc al, 0x83; stc; or byte ptr [edi + 0x2a], dh; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x0017f935: adc al, 0x85; sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x0007ecbb: adc al, 0x88; sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00077e6c: adc al, 0x89; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000aaa5d: adc al, 0x89; call 0x5d6a08bf; ret; 
0x0017618c: adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x0009ef78: adc al, 0x89; dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0012c930: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000e4d2a: adc al, 0x89; inc esp; and al, 0x18; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x001756b7: adc al, 0x89; je 0x1756df; adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0003bece: adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x000ed388: adc al, 0x89; push ebx; adc al, 0x8d; or byte ptr [ebp + 0x40], 0xf9; call dword ptr [eax - 0x77]; 
0x0008bbd8: adc al, 0x89; push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000591ca: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x0011f559: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000e9473: adc al, 0x89; ret 0x2db9; 
0x00078fd4: adc al, 0x89; ret 0x4489; 
0x000f97b4: adc al, 0x89; ret 0x478b; 
0x001419cf: adc al, 0x89; ret 0x689; 
0x0013d412: adc al, 0x89; ret 0x998b; 
0x00092543: adc al, 0x89; ret 0xa165; 
0x00140a16: adc al, 0x89; ret 0xc085; 
0x00097eed: adc al, 0x89; ret 0xc389; 
0x0010daba: adc al, 0x89; ret 0xc483; 
0x0014c376: adc al, 0x89; ret 0xc985; 
0x00184d03: adc al, 0x89; ret 0xca29; 
0x00097ea3: adc al, 0x89; ret 0xca83; 
0x00097e63: adc al, 0x89; ret 0xe283; 
0x00097ffa: adc al, 0x89; ret 0xfbd1; 
0x0002b092: adc al, 0x89; ret; 
0x00143489: adc al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000876b4: adc al, 0x8b; adc esi, esi; ret 0xf08; 
0x0011c909: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012c159: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c239: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001226c9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ff9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00120609: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd99: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0014bcbf: adc al, 0x8b; dec esp; ret 0x3904; 
0x00169eea: adc al, 0x8b; inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00080b6b: adc al, 0x8b; inc esi; adc al, 0xe9; ret; 
0x00024d3c: adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0012dd09: adc al, 0x8b; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d892: adc al, 0x8b; inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000be596: adc al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb110: adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x001893bd: adc al, 0x8b; pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x00126742: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011dff7: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00111902: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b282: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c332: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfb2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c032: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdd2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c192: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bff2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bec2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c202: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012ad02: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270f2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241c2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x001206a2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012b2ab: adc al, 0x8b; pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011df77: adc al, 0x8b; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0009d589: adc al, 0x8b; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00087887: adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x00039e9a: adc al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x00184bb7: adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4972; 
0x0012e050: adc al, 0x8b; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0011b82d: adc al, 0x8b; push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00060426: adc al, 0x8b; push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0018b82e: adc al, 0x8b; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e53e: adc al, 0x8b; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00106766: adc al, 0x8b; push esp; ret; 
0x0016694c: adc al, 0x8d; adc byte ptr [ebp + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x000c21af: adc al, 0x8d; add al, 0x98; pop ebx; pop esi; ret; 
0x001662ec: adc al, 0x8d; add byte ptr [edi + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x000a04fd: adc al, 0x8d; and ah, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x0016769c: adc al, 0x8d; cmp byte ptr [esi + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x001501a6: adc al, 0x8d; cwde; fsubr dword ptr [ebp - 7]; call dword ptr [ebx - 0x73]; 
0x00099134: adc al, 0x8d; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00147af5: adc al, 0x8d; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x001816c6: adc al, 0x8d; inc edx; dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x000ed38b: adc al, 0x8d; or byte ptr [ebp + 0x40], 0xf9; call dword ptr [eax - 0x77]; 
0x000a03e8: adc al, 0x8d; sbb al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x0005913f: adc al, 0x8d; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax + 0x6a]; 
0x0014c444: adc al, 0x8d; sub dword ptr [eax - 0x40], -7; call dword ptr [eax - 0x73]; 
0x000397a6: adc al, 0x8d; test edi, eax; stc; call dword ptr [eax + 0x53]; 
0x0003f624: adc al, 0x8d; test esp, ebx; cmp al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x001502aa: adc al, 0x8d; xchg byte ptr [edi + 0x39], ah; stc; call dword ptr [eax + 0x53]; 
0x00046d25: adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000ed65b: adc al, 0x8d; xchg dword ptr [eax], edi; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x001577b9: adc al, 0x8d; xchg dword ptr [ebx + 0x6f], edi; stc; call dword ptr [eax + 0x55]; 
0x000ed58e: adc al, 0x8d; xchg dword ptr [esi + 0x57], esp; stc; call dword ptr [eax - 0x73]; 
0x00154c38: adc al, 0x8d; xchg eax, eax; ret; 
0x0016fa16: adc al, 0x8d; xchg ebp, eax; je 0x16fa15; call dword ptr [eax + 0x53]; 
0x0010625f: adc al, 0x8d; xchg esi, eax; inc eax; pop eax; stc; call dword ptr [edx - 1]; 
0x0016501c: adc al, 0x8d; xor bl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x001672ec: adc al, 0x8d; xor byte ptr [eax + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x00157cde: adc al, 0x8d; xor byte ptr [ebp + 0x6f], 0xf9; call dword ptr [eax + 0x55]; 
0x00117ee8: adc al, 0x8d; xor cl, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0011cc02: adc al, 0xa2; adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0017630a: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0010aeb0: adc al, 0xb8; jb 0x10aeb4; add byte ptr [eax], al; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0008d617: adc al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00139e63: adc al, 0xb9; stc; call dword ptr [eax - 0x18]; 
0x0012c9a1: adc al, 0xbb; adc al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00175a47: adc al, 0xca; stc; call dword ptr [eax - 0x73]; 
0x0018b6c8: adc al, 0xd8; cli; jmp dword ptr [esi - 0x70]; 
0x0015b4c8: adc al, 0xda; std; jmp dword ptr [esi - 0x70]; 
0x000fc8a2: adc al, 0xe8; call 0x840fc881; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000fc8b5: adc al, 0xe8; in eax, 0x68; inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x0013c956: adc al, 0xe8; mov ebp, 0x81000463; ret; 
0x0007ad06: adc al, 0xe8; or eax, 0x81001080; ret; 
0x001a0b06: adc al, 0xe8; or eax, 0x81fffe22; ret; 
0x0008da83: adc al, 0xe8; pop ss; push edi; stc; jmp dword ptr [ebp - 0x39]; 
0x00116e43: adc al, 0xe8; push edi; ret; 
0x00039bc8: adc al, 0xe8; ret 0xeb5; 
0x000c34f6: adc al, 0xe8; sbb eax, 0x81000bf8; ret; 
0x0015cce6: adc al, 0xe8; sub eax, 0x81000260; ret; 
0x0007dae6: adc al, 0xe8; sub eax, 0x81001052; ret; 
0x0014ce6f: adc al, 0xe8; xor esp, dword ptr [ebx - 0x13]; dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x000952d8: adc al, 0xe9; leave; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00080b6e: adc al, 0xe9; ret; 
0x00164ba1: adc al, 0xeb; adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x00100a2c: adc al, 0xeb; or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x0008c986: adc al, 0xeb; ret; 
0x000d2905: adc al, 0xf6; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0011de71: adc al, 0xf6; ret 0x7540; 
0x001191e9: adc al, 0xf9; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x000de2a7: adc al, 0xf; inc edx; ret 0x4c80; 
0x000427bb: adc al, 0xf; mov ebp, 0x1ff183c9; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00047f75: adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001122f9: adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000d6bc5: adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x00036db6: adc al, 0xf; xchg dword ptr [edi + 0xf000005], ebp; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x000f804b: adc al, 0xf; xchg dword ptr [edi - 0x74ffffff], ecx; mov word ptr [edi - 0x6fa20], es; add ecx, edi; jmp ecx; 
0x0016d135: adc al, 0xf; xchg edx, eax; ret 0xd689; 
0x0013b62b: adc al, 0xf; xchg esp, eax; ret; 
0x00082a15: adc al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x001292d2: adc al, 0xff; je 0x1292fa; sbb byte ptr [edx], ch; call 0x129520; add esp, 0x1c; ret; 
0x001650d0: adc al, 0xff; je 0x1650f8; and al, 0x89; ret; 
0x00168d11: adc al, 0xff; je 0x168d39; adc al, 0xff; je 0x168d3d; je 0x168d6b; call dword ptr [ecx]; 
0x00168d15: adc al, 0xff; je 0x168d3d; je 0x168d6b; call dword ptr [ecx]; 
0x0017d23c: adc al, 0xff; je 0x17d264; sbb byte ptr [ebp - 0x6893b80], cl; call dword ptr [eax - 0x18]; 
0x00024d38: adc al, 0xff; je 0x24d60; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0003e966: adc al, 0xff; je 0x3e98e; sbb byte ptr [eax + 0x50], dl; call 0x3e9d0; add esp, 0x1c; ret; 
0x000e308d: adc al, 0xff; je 0xe30b5; xor byte ptr [ecx], ch; ret; 
0x0007d0ab: adc al, 0xff; jne 0x7d0bb; push esi; call dword ptr [ebx + 0x2c]; 
0x00127a7e: adc al, 1; add al, ch; pop edx; pop esi; cld; call dword ptr [eax - 0x73]; 
0x000344eb: adc al, 1; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x0003c60d: adc al, 1; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x000c0a17: adc al, 1; add byte ptr [eax], al; ret; 
0x000a9485: adc al, 1; cmp edx, ebx; je 0xa9480; pop ebx; ret; 
0x00175fc9: adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000e47c8: adc al, 1; je 0xe47d0; add esp, 0xc; ret; 
0x000e4898: adc al, 1; je 0xe48a0; add esp, 0xc; ret; 
0x000f9ce2: adc al, 1; ret 0xd089; 
0x00194c55: adc al, 1; retf 0xc801; call 0x182d19; add ebx, 0x40271; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c75: adc al, 1; retf 0xc801; call 0x182d19; add ebx, 0x41091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008dd5c: adc al, 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008dc61: adc al, 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x001762f6: adc al, 4; mov eax, 1; ret; 
0x0017b26a: adc al, 5; add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x00146057: adc al, 8; pop ebx; mov eax, edx; ret; 
0x0012f419: adc al, 9; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00050970: adc al, 9; ret 0x874; 
0x000a050d: adc al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc byte ptr [edi + 0x52], 0xf9; call dword ptr [eax - 0x18]; 
0x0004196a: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0012b93a: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012c9a3: adc al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00072a5b: adc al, byte ptr [eax]; add byte ptr [ebx - 0x5137b], cl; inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x000358b1: adc al, byte ptr [eax]; add byte ptr [ecx - 0x977b], cl; call dword ptr [eax - 0x73]; 
0x0003c09a: adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x00110eb9: adc al, byte ptr [eax]; push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00110f29: adc al, byte ptr [eax]; push ebx; mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010fbc1: adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00108b5f: adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00112704: adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000fabbc: adc al, byte ptr [ebp - 0x557af001]; add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x00174f2d: adc al, byte ptr [ebx + 0x1d7401f8]; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00154d0c: adc al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00112784: adc al, byte ptr [ebx + 0x5e5b54c4]; ret; 
0x0011cce4: adc al, byte ptr [ebx + 0x5e5b64c4]; ret; 
0x001125a4: adc al, byte ptr [ebx + 0x5e5b74c4]; ret; 
0x0008ca05: adc al, byte ptr [ebx - 0x2776fb3c]; pop ebx; pop esi; ret; 
0x001a85c7: adc al, byte ptr [ebx - 0xd7cfe1e]; add dword ptr [ecx], ecx; retf 0xb60f; ret 0x4589; 
0x000a9720: adc al, byte ptr [ebx]; test byte ptr [eax - 0x71208], cl; jmp eax; 
0x0003d554: adc al, byte ptr [ecx + 0x220c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000b7cca: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e2a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bd83d: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b668a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b67ea: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7cea: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e4a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b66aa: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b680a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7d0a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e6a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b66ca: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b682a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7b99: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e8a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6579: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b684a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b3512: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000af132: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b3552: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af172: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3572: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000af192: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b32c2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b3502: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b50ed: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001a5ba2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd683: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0cfd: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef02: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1d27: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000af122: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b7e22: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b67e2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7e42: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b6802: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7e62: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b6822: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7e82: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6842: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b3592: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af1b2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b35b2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af1d2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b35d2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af1f2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000baf92: adc al, byte ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be3e5: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf82: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b72b2: adc al, byte ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00151ad6: adc al, ch; cmp eax, 0x81000312; ret; 
0x0009b5d6: adc al, ch; cmp eax, 0x81000e77; ret; 
0x000896d6: adc al, ch; cmp eax, 0x81000f96; ret; 
0x0005a8d6: adc al, ch; cmp eax, 0x81001284; ret; 
0x000be1bc: adc al, ch; imul ecx, dword ptr [ebx + 0xc], 0; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baebc: adc al, ch; imul edi, dword ptr [esi + 0xc], 0; add ecx, 0x10b0b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0016cc53: adc al, ch; inc edi; inc ebx; cli; jmp dword ptr [ebp - 0x77]; 
0x000b8e73: adc al, ch; mov ah, 0x9e; or al, 0; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7773: adc al, ch; mov ah, 0xb5; or al, 0; add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e86: adc al, ch; mov eax, dword ptr [0x81000c9e]; shl dword ptr [eax + edx*8 + 0xc030010], 0x99; jmp ecx; 
0x000b7786: adc al, ch; mov eax, dword ptr [0x81000cb5]; rol dword ptr [esi + 0x10], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016eb56: adc al, ch; mov ebp, 0x81000141; ret; 
0x000f7656: adc al, ch; mov ebp, 0x810008b6; ret; 
0x00083956: adc al, ch; mov ebp, 0x81000ff3; ret; 
0x00082b56: adc al, ch; mov ebp, 0x81001001; ret; 
0x0016f306: adc al, ch; or eax, 0x8100013a; ret; 
0x00089506: adc al, ch; or eax, 0x81000f98; ret; 
0x000b8e57: adc al, ch; rcr byte ptr [esi - 0x3e7efff4], 1; rcl eax, cl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00132ea7: adc al, ch; ret; 
0x000b7757: adc al, ch; sal byte ptr [ebp - 0x3e7efff4], 1; jae 0xb7747; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001320f6: adc al, ch; sbb eax, 0x8100050c; ret; 
0x0007f9f6: adc al, ch; sbb eax, 0x81001033; ret; 
0x00132880: adc al, ch; stosb byte ptr es:[edi], al; je 0x13287c; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0015a4e6: adc al, ch; sub eax, 0x81000288; ret; 
0x000f75e6: adc al, ch; sub eax, 0x810008b7; ret; 
0x000871e6: adc al, ch; sub eax, 0x81000fbb; ret; 
0x0007ffe6: adc al, ch; sub eax, 0x8100102d; ret; 
0x0003bee6: adc al, ch; sub eax, 0x8100146e; ret; 
0x001848e6: adc al, ch; sub eax, 0x81ffffe4; ret; 
0x000bf5a5: adc al, dh; ret; 
0x0018ba33: adc bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0009456a: adc bh, al; stc; jmp dword ptr [esi - 0x70]; 
0x00162e96: adc bh, al; xor dword ptr [ebp], 0; add bl, ch; mov dword ptr [0xfd6038e8], eax; jmp dword ptr [esi - 0x70]; 
0x00191c58: adc bh, bh; inc dword ptr [ecx + 0x42e35c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191a49: adc bh, bh; inc dword ptr [ecx + 0x43044c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191a93: adc bh, bh; inc dword ptr [ecx + 0x4317ac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0011a8f9: adc bh, bh; je 0x11a921; and byte ptr [ebx - 0x72cbdbbc], cl; and byte ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x001483f4: adc bh, bh; je 0x14841c; sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0015e2a4: adc bh, bh; je 0x15e2cc; xor al, 0xe8; ret 0xfeec; 
0x001688a5: adc bh, bh; je 0x1688cd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0015d5ab: adc bh, bh; xor al, 0x24; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001546db: adc bh, bh; xor al, 0x24; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0008e245: adc bh, byte ptr [eax + 0x16]; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x00109645: adc bh, byte ptr [ecx]; fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x000a3dbc: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0x508d; 
0x000a1c5c: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x00025345: adc bh, dh; fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x000fc6ec: adc bh, dh; push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x00103d64: adc bh, dh; ret 0x30f; 
0x00145ae5: adc bh, dh; rol cl, 1; call 0xe8dc460d; out dx, al; xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x0015a31d: adc bl, 0x6f; stc; call dword ptr [eax - 1]; 
0x0003b554: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003b783: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0003b549: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000b8ac2: adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0019ec0d: adc bl, byte ptr [esi + 0x5d]; pop ebx; xor eax, eax; ret; 
0x0008d078: adc bl, ch; aad 0x66; nop; nop; nop; ret; 
0x0007d10d: adc bl, ch; int 0x80; 
0x00183b23: adc bl, ch; int 0xe8; mov ch, 0x53; sti; jmp dword ptr [esi - 0x70]; 
0x000a1c7d: adc bl, ch; jnp 0x59952cce; add al, 0xf6; ret; 
0x0016f428: adc bl, ch; mov ah, 0xe8; mov al, 0x9a; cld; call dword ptr [ebp + 0x57]; 
0x0008b4ac: adc bl, ch; mov al, byte ptr [0x930c838d]; stc; call dword ptr [eax - 0x73]; 
0x0014cb49: adc bl, ch; mov byte ptr [0xffef5fe8], al; jmp dword ptr [esi - 0x70]; 
0x00171a8c: adc bl, ch; mov ecx, 0xcec8390; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0010814c: adc bl, ch; mov es, word ptr [ebx - 0x7c72f314]; inc esi; pop eax; stc; call dword ptr [eax - 0x18]; 
0x001694b6: adc bl, ch; mov esp, 0xfcfa22e8; jmp dword ptr [esi - 0x70]; 
0x0013f952: adc bl, ch; ret 0x86e8; 
0x0012e92a: adc bl, ch; ret 0xaee8; 
0x00173801: adc bl, ch; ret 0xd7e8; 
0x0007d725: adc bl, ch; ret; 
0x000a482d: adc bl, ch; sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x001669f5: adc bl, ch; shr al, 0xe3; and al, 0xfd; dec dword ptr [ebp + 0x1ce80076]; ret; 
0x0016f9dd: adc bl, ch; shr eax, 0xfb; xchg esp, eax; cld; jmp dword ptr [esi - 0x70]; 
0x000bb0e6: adc bl, dh; movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb0a7: adc bl, dh; movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb268: adc bl, dh; movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb168: adc bl, dh; movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ce13e: adc bl, dl; call 0xa83165ce; add byte ptr [eax], al; add cl, ch; ret; 
0x00137bc1: adc byte ptr [0x3ff], bh; ja 0x137bd0; sar eax, 5; add esp, 0xc; ret; 
0x0003b413: adc byte ptr [0x80000000], ah; ret; 
0x00126746: adc byte ptr [eax + 0x101], bh; call dword ptr gs:[0x10]; 
0x0011dffb: adc byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0011df07: adc byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00111906: adc byte ptr [eax + 0x12a], bh; call dword ptr gs:[0x10]; 
0x0011b286: adc byte ptr [eax + 0x12f], bh; call dword ptr gs:[0x10]; 
0x0012c336: adc byte ptr [eax + 0x155], bh; call dword ptr gs:[0x10]; 
0x0012bfb6: adc byte ptr [eax + 0x15], bh; call dword ptr gs:[0x10]; 
0x0012c036: adc byte ptr [eax + 0x1ad], bh; call dword ptr gs:[0x10]; 
0x0012bdd6: adc byte ptr [eax + 0x1af], bh; call dword ptr gs:[0x10]; 
0x00129c78: adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x0012c196: adc byte ptr [eax + 0x1b8], bh; call dword ptr gs:[0x10]; 
0x0012bff6: adc byte ptr [eax + 0x1ba], bh; call dword ptr gs:[0x10]; 
0x0011de87: adc byte ptr [eax + 0x27b880ce], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00128fbb: adc byte ptr [eax + 0x3e], bh; call dword ptr gs:[0x10]; 
0x000be593: adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb10d: adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000be617: adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb191: adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x000ace6c: adc byte ptr [eax + 0x458b1104], cl; aam 0x83; ret 0x3901; 
0x000b8ba4: adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x001244ed: adc byte ptr [eax + 0x52], 0xff; je 0x124517; sbb al, 0xe8; push edi; ret 0xfff3; 
0x000b7440: adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x000b74c4: adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000b75c4: adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x0012446b: adc byte ptr [eax + 0x6a], 0; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x0014f7e1: adc byte ptr [eax + 0x6a], dl; add bh, bh; je 0x14f80c; adc al, 0x55; call edi; 
0x0012bec6: adc byte ptr [eax + 0x80], bh; call dword ptr gs:[0x10]; 
0x0012c206: adc byte ptr [eax + 0xa7], bh; call dword ptr gs:[0x10]; 
0x0012ad06: adc byte ptr [eax + 0xac], bh; call dword ptr gs:[0x10]; 
0x001270f6: adc byte ptr [eax + 0xe2], bh; call dword ptr gs:[0x10]; 
0x001241c6: adc byte ptr [eax + 0xe3], bh; call dword ptr gs:[0x10]; 
0x001206a6: adc byte ptr [eax + 0xe4], bh; call dword ptr gs:[0x10]; 
0x000963bb: adc byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fe42: adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00090c7e: adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000e47e0: adc byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x0012089e: adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x0007b4cf: adc byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0016b85c: adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x0012f0d7: adc byte ptr [eax + 1], bh; ret; 
0x0003450b: adc byte ptr [eax + eax + 0x3650000], 5; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0005ace1: adc byte ptr [eax + eax*8 + 0x5d8b2a74], al; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x001110c5: adc byte ptr [eax + eax*8 - 0x137c1b8b], al; or al, 0x8d; xchg byte ptr [eax - 0x4e], ch; stc; call dword ptr [eax - 0x18]; 
0x00098a3a: adc byte ptr [eax + eax*8 - 0x3fceee8c], al; add esp, 8; pop ebx; ret; 
0x00193b6f: adc byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193cdc: adc byte ptr [eax + eax], al; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0011eb09: adc byte ptr [eax + eax], dl; push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x1c; ret; 
0x000c91e7: adc byte ptr [eax - 0x18], dl; ret 0x684; 
0x00024f1c: adc byte ptr [eax - 0x25], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6889380], cl; call dword ptr [eax + 0x6a]; 
0x0014c9ce: adc byte ptr [eax - 0x40], 0xf9; call dword ptr [eax + 0x68]; 
0x0014c895: adc byte ptr [eax - 0x40], 0xf9; call dword ptr [eax - 0x73]; 
0x00159ab3: adc byte ptr [eax - 0x5f], 0; add byte ptr [eax - 0x18], dl; ret 0xf33a; 
0x00061a5f: adc byte ptr [eax - 0x73], 0xf9; call dword ptr [eax - 0x18]; 
0x0011fb00: adc byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x5a], -7; call dword ptr [eax - 1]; 
0x0016f7c7: adc byte ptr [eax - 0x73], dl; sbb eax, -0x39; stc; call dword ptr [eax - 0x73]; 
0x00136e1e: adc byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x66], bl; stc; call dword ptr [ebx + 0x50]; 
0x00057cff: adc byte ptr [eax - 0x75], 0x85; ror cl, 0xff; call dword ptr [edi + 0x50]; 
0x00098860: adc byte ptr [eax - 0x76f48aff], ch; ret 0xca83; 
0x000c07ce: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0013a312: adc byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011096d: adc byte ptr [eax], 0xb2; stc; call dword ptr [eax + 0x68]; 
0x0008eee8: adc byte ptr [eax], ah; je 0x8eef8; add esp, 4; pop ebx; pop esi; ret; 
0x000bf5d5: adc byte ptr [eax], ah; ret; 
0x000a20eb: adc byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg esp, eax; push edx; stc; call dword ptr [eax - 0x18]; 
0x0005a038: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x00089f2a: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x00098771: adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0011dc36: adc byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00098640: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, ecx; ret; 
0x00042962: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000e4938: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, -0x26; jne 0xe494d; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00110ecc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x110ee0; pop ebx; ret; 
0x00110f3c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x110f50; pop ebx; ret; 
0x001112fc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x111310; pop ebx; ret; 
0x0011b23c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11b250; pop ebx; ret; 
0x0011b74c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11b760; pop ebx; ret; 
0x0011bdba: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11bdd0; pop ebx; ret; 
0x0011c948: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11c958; pop ebx; ret; 
0x0011cfec: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11d000; pop ebx; ret; 
0x0011d4e8: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11d4f8; pop ebx; ret; 
0x0011d988: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11d998; pop ebx; ret; 
0x0011edac: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11edc0; pop ebx; ret; 
0x0011edfc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11ee10; pop ebx; ret; 
0x00120b4c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120b60; pop ebx; ret; 
0x00127d8c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x127da0; pop ebx; ret; 
0x0012a0d8: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12a0e8; pop ebx; ret; 
0x0012a71c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12a730; pop ebx; ret; 
0x0012a883: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0012a97c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12a990; pop ebx; ret; 
0x0012b96c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12b980; pop ebx; ret; 
0x0012bbfc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12bc10; pop ebx; ret; 
0x0003c42d: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x3c440; pop ebx; ret; 
0x000603dc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x603f0; pop ebx; ret; 
0x0009cf78: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9cf88; pop ebx; ret; 
0x0009dea0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9deb0; pop ebx; ret; 
0x000d92ba: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xd92d0; pop ebx; ret; 
0x00108c08: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0016a16a: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016a0ae: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016a0c2: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0012d7d8: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003c3f2: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011d4be: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; ret; 
0x000f830c: adc byte ptr [eax], al; add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x0011d95e: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000e7b85: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0008d67a: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000975b9: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x000423a0: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x001a4a6b: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0009a218: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008e892: adc byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00122e01: adc byte ptr [eax], al; add byte ptr [ebp - 0x69ef47d], cl; call dword ptr [edx + 0x52]; 
0x00122de7: adc byte ptr [eax], al; add byte ptr [ebp - 0x69f187d], cl; call dword ptr [ecx + 0x51]; 
0x000a1eb0: adc byte ptr [eax], al; add byte ptr [ebp - 0x6ae8479], cl; call dword ptr [eax - 0x73]; 
0x00027087: adc byte ptr [eax], al; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x210fd36d], cl; call dword ptr [edx + 0x50]; 
0x0011b13d: adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0019d83e: adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00069d48: adc byte ptr [eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00130e18: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00060d66: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x001136e0: adc byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x000280e6: adc byte ptr [eax], al; add byte ptr [edx + 0x50], dl; call 0x96410; add esp, 0x1c; ret; 
0x0007add2: adc byte ptr [eax], al; add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00101ade: adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000bfadb: adc byte ptr [eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000b6c47: adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6b20: adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0002709c: adc byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0012a879: adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012a879: adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0012fc78: adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0002f37d: adc byte ptr [eax], al; nop; call 0x182d21; add eax, 0x207a8f; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0012b959: adc byte ptr [eax], al; push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012bbe9: adc byte ptr [eax], al; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a969: adc byte ptr [eax], al; push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a709: adc byte ptr [eax], al; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a0c9: adc byte ptr [eax], al; push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00127dcf: adc byte ptr [eax], al; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001949a4: adc byte ptr [eax], bh; ret 0x840f; 
0x0016a1cd: adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x001453b7: adc byte ptr [eax], cl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0011b13c: adc byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000bf5c5: adc byte ptr [eax], dl; ret; 
0x00122b63: adc byte ptr [ebp + 0x14840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6a4427d], cl; call dword ptr [eax + 0x55]; 
0x00122dfb: adc byte ptr [ebp + 0x1b840fc0], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x69ef47d], cl; call dword ptr [edx + 0x52]; 
0x00122b99: adc byte ptr [ebp + 0x26840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6a3b57d], cl; call dword ptr [eax + 0x55]; 
0x0008839d: adc byte ptr [ebp + 0x292e78c0], al; ret; 
0x000c247a: adc byte ptr [ebp + 0x29d975db], al; ret; 
0x0008dffa: adc byte ptr [ebp + 0x313974d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00027aaa: adc byte ptr [ebp + 0x3840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00131bd7: adc byte ptr [ebp + 0x39010544], cl; ret; 
0x00109641: adc byte ptr [ebp + 0x391278db], al; fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x000c3d01: adc byte ptr [ebp + 0x391a74db], al; ret; 
0x00124f37: adc byte ptr [ebp + 0x391c74c0], al; ret; 
0x000c3c88: adc byte ptr [ebp + 0x392374db], al; ret; 
0x0013b212: adc byte ptr [ebp + 0x3c880ff6], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x00077dca: adc byte ptr [ebp + 0x47899804], cl; add al, 0x29; fnsave dword ptr [ebx + ecx*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x00122c56: adc byte ptr [ebp + 0x50840fc0], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; call ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x0007bec4: adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x00122d45: adc byte ptr [ebp + 0x58840fc0], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6a0087d], cl; call dword ptr [edx + 0x52]; 
0x0007e917: adc byte ptr [ebp + 0x5889045a], cl; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00087220: adc byte ptr [ebp + 0x5b0b74c0], al; pop esi; pop edi; ret; 
0x0003e844: adc byte ptr [ebp + 0x5bc775db], al; pop esi; pop edi; ret; 
0x0003640c: adc byte ptr [ebp + 0x5bcf75ff], al; pop esi; pop edi; ret; 
0x0015a51a: adc byte ptr [ebp + 0x5be175f6], al; pop esi; pop edi; ret; 
0x0013c7ec: adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x00107c05: adc byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x00127cd9: adc byte ptr [ebp + 0x5e5bf865], cl; pop ebp; ret; 
0x000b8a9d: adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000b8abf: adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000b8afd: adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000b8b81: adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000b8c91: adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x00151436: adc byte ptr [ebp + 0x71840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; les ebp, ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x0016694e: adc byte ptr [ebp + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x00166a1e: adc byte ptr [ebp + 0x73], 0xf9; call dword ptr [eax - 0x18]; 
0x00166982: adc byte ptr [ebp + 0x73], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x00170898: adc byte ptr [ebp + 0x7840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000da7ea: adc byte ptr [ebp + 0x7d840fc0], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cmp ecx, edi; call dword ptr [eax + 0x56]; 
0x0007de5f: adc byte ptr [ebp + 0x889044a], cl; mov eax, dword ptr [edx]; ret; 
0x0014d18c: adc byte ptr [ebp + 0xf0974c0], al; lahf; ret; 
0x0008d048: adc byte ptr [ebp + 0xf1375d2], al; add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x000f786f: adc byte ptr [ebp + 0xf1c2444], cl; inc esp; ret 0x4c89; 
0x000412a1: adc byte ptr [ebp + 0xff089c0], al; dec eax; ret 0x9387; 
0x00099947: adc byte ptr [ebp + 0xff0fe48], cl; mov cl, 0xa; jne 0x99942; xor eax, eax; pop ebx; ret; 
0x00092334: adc byte ptr [ebp + 9], dh; xor eax, eax; add esp, 0xc; ret; 
0x0013d0b9: adc byte ptr [ebp - 0x14728b40], al; ret 0x838b; 
0x00098ce4: adc byte ptr [ebp - 0x16588a40], al; ret 0xfffe; 
0x0009dc26: adc byte ptr [ebp - 0x198a137d], cl; call dword ptr [eax - 0x73]; 
0x00093b39: adc byte ptr [ebp - 0x1a33537d], cl; call dword ptr [eax - 0x73]; 
0x00092e3a: adc byte ptr [ebp - 0x1a40d380], cl; call dword ptr [eax - 0x73]; 
0x000b58a3: adc byte ptr [ebp - 0x1b160fa5], cl; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000a5c84: adc byte ptr [ebp - 0x1c7bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x0002febe: adc byte ptr [ebp - 0x2071d37d], cl; call dword ptr [eax - 1]; 
0x000c189e: adc byte ptr [ebp - 0x2f6d7240], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00057691: adc byte ptr [ebp - 0x35f34b], cl; call dword ptr [eax - 0x48]; 
0x00122eb1: adc byte ptr [ebp - 0x37bf040], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d017d], cl; call dword ptr [edx + 0x52]; 
0x001634de: adc byte ptr [ebp - 0x397bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x001011b1: adc byte ptr [ebp - 0x3a7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0017bf73: adc byte ptr [ebp - 0x3b7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; cdq; jbe 0x17bf7d; call dword ptr [edx - 0x77]; 
0x0016ae58: adc byte ptr [ebp - 0x3d6af040], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0016a900: adc byte ptr [ebp - 0x3f6af040], al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x001524ad: adc byte ptr [ebp - 0x3f6bf040], al; add esp, 0xc; ret; 
0x00146eb4: adc byte ptr [ebp - 0x3f7c7eec], cl; add dword ptr [ecx + 0x2c706], ecx; add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x00032b38: adc byte ptr [ebp - 0x3f7cfe88], cl; sbb al, 0x89; out 0x89, al; ret 0x25; 
0x001717bd: adc byte ptr [ebp - 0x427af040], al; xor ebx, ebp; dec dword ptr [ebx - 0x76f7db8c]; ret; 
0x0017c7b3: adc byte ptr [ebp - 0x437bf040], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; cdq; jbe 0x17c7bd; call dword ptr [ecx - 0x77]; 
0x0017bf58: adc byte ptr [ebp - 0x487bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x5472f714], al; mov dh, 0x76; stc; call dword ptr [ebp + 0x56]; 
0x00142e71: adc byte ptr [ebp - 0x48f0f3a8], cl; jmp dword ptr [esi - 0x77]; 
0x00122bea: adc byte ptr [ebp - 0x527bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6a2f87d], cl; call dword ptr [eax + 0x55]; 
0x00122e97: adc byte ptr [ebp - 0x547bf040], al; or al, 0; add byte ptr [ebp - 0x69d557d], cl; call dword ptr [ecx + 0x51]; 
0x00122d2b: adc byte ptr [ebp - 0x547bf040], al; or al, byte ptr [eax]; add byte ptr [ebp - 0x6a03e7d], cl; call dword ptr [ecx + 0x51]; 
0x00122c71: adc byte ptr [ebp - 0x557bf040], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ebx; call dword ptr [eax + 0x55]; 
0x00159b49: adc byte ptr [ebp - 0x63aa379], cl; call dword ptr [eax - 0x73]; 
0x0015a197: adc byte ptr [ebp - 0x63acb7a], cl; call dword ptr [eax - 0x73]; 
0x0017159c: adc byte ptr [ebp - 0x647bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00096a44: adc byte ptr [ebp - 0x66c5b80], cl; call dword ptr [eax - 0x18]; 
0x00080226: adc byte ptr [ebp - 0x66cf37d], cl; call dword ptr [eax - 0x73]; 
0x0017680f: adc byte ptr [ebp - 0x68a487a], cl; call dword ptr [eax - 0x73]; 
0x001718eb: adc byte ptr [ebp - 0x68b3a79], cl; call dword ptr [eax - 0x73]; 
0x00174e0a: adc byte ptr [ebp - 0x68b7e79], cl; call dword ptr [eax - 0x73]; 
0x00175826: adc byte ptr [ebp - 0x68b7e7d], cl; call dword ptr [eax - 0x73]; 
0x001665d9: adc byte ptr [ebp - 0x68d9080], cl; call dword ptr [eax + 0x57]; 
0x0015d45e: adc byte ptr [ebp - 0x68fac6e], cl; call dword ptr [edx + 0x50]; 
0x0015d502: adc byte ptr [ebp - 0x68fac80], cl; call dword ptr [eax - 1]; 
0x00113880: adc byte ptr [ebp - 0x6a60d80], cl; call dword ptr [eax - 0x18]; 
0x0010dcd9: adc byte ptr [ebp - 0x6a66680], cl; call dword ptr [eax + 0x6a]; 
0x0010dcbd: adc byte ptr [ebp - 0x6a68079], cl; call dword ptr [eax - 0x73]; 
0x0005f945: adc byte ptr [ebp - 0x6bd9a7d], cl; call dword ptr [ecx + 0x50]; 
0x0013ec4c: adc byte ptr [ebp - 0x6bfb26a], cl; call dword ptr [edx - 0x46]; 
0x00140a0a: adc byte ptr [ebp - 0x7277f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x00138bba: adc byte ptr [ebp - 0x727bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00099042: adc byte ptr [ebp - 0x72c68b40], al; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00169553: adc byte ptr [ebp - 0x746f8b40], al; inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x001524d3: adc byte ptr [ebp - 0x74bf8b25], al; add eax, dword ptr [ebp - 0x72c58b40]; mov dl, 0x90; ret; 
0x0012a9c4: adc byte ptr [ebp - 0x74d08b2e], al; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000fd39e: adc byte ptr [ebp - 0x74d28740], al; push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x0010b2c4: adc byte ptr [ebp - 0x74dd8b40], al; jns 0x8dca9e96; adc eax, -0x4f; stc; call dword ptr [eax - 0x73]; 
0x000f7a9a: adc byte ptr [ebp - 0x74e28b40], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6a7fd80], cl; call dword ptr [eax + 0x53]; 
0x00175d50: adc byte ptr [ebp - 0x74efdbb4], cl; inc edx; add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x00175310: adc byte ptr [ebp - 0x74efdbb4], cl; inc edx; add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x001a479d: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x00170ded: adc byte ptr [ebp - 0x757bf040], al; add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x000345d7: adc byte ptr [ebp - 0x76238a40], al; ret; 
0x0017c514: adc byte ptr [ebp - 0x76388a40], al; ret 0x838b; 
0x00150b78: adc byte ptr [ebp - 0x76c88b40], al; ret 0x488d; 
0x0012f115: adc byte ptr [ebp - 0x76e78b40], al; ret; 
0x00152679: adc byte ptr [ebp - 0x77], ah; pop ebx; pop esi; pop edi; ret; 
0x0019d837: adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00198733: adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0011f88f: adc byte ptr [ebp - 0x7a7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000b0b4c: adc byte ptr [ebp - 0x7af0efb6], cl; mov al, byte ptr [0x5b5f0000]; ret; 
0x0008a620: adc byte ptr [ebp - 0x7af78a2e], al; ror byte ptr [edi], 0x84; pop ebx; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00122de1: adc byte ptr [ebp - 0x7b7bf040], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x69f187d], cl; call dword ptr [ecx + 0x51]; 
0x0015cf23: adc byte ptr [ebp - 0x7c178a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00173846: adc byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0003fabb: adc byte ptr [ebp - 0x7c1b8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00025f5c: adc byte ptr [ebp - 0x7c1c8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016c71f: adc byte ptr [ebp - 0x7c1c8b40], al; in al, dx; or byte ptr [ebp - 0xc1eb379], cl; call dword ptr [eax - 0x73]; 
0x0016baa9: adc byte ptr [ebp - 0x7c248b40], al; in al, dx; add al, 0x83; ret; 
0x000c24e5: adc byte ptr [ebp - 0x7c298a25], al; les ecx, ptr [ecx + ebp]; ret; 
0x0016931b: adc byte ptr [ebp - 0x7c348b40], al; ret; 
0x00027f13: adc byte ptr [ebp - 0x7c478a40], al; in al, dx; or al, 0x8d; test dword ptr [eax + 0x39], edi; stc; call dword ptr [edi - 1]; 
0x0016874c: adc byte ptr [ebp - 0x7c498b40], al; in al, dx; or byte ptr [ebp - 0xc1eb379], cl; call dword ptr [eax - 0x73]; 
0x0018b4d0: adc byte ptr [ebp - 0x7c548b40], al; in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x5a; stc; call dword ptr [eax + 0x53]; 
0x00169eb1: adc byte ptr [ebp - 0x7c5a8b40], al; ret; 
0x001699e3: adc byte ptr [ebp - 0x7c5b8b40], al; in al, dx; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0016a058: adc byte ptr [ebp - 0x7c5b8b40], al; ret; 
0x000f7ab7: adc byte ptr [ebp - 0x7c6b8a40], al; in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000fa713: adc byte ptr [ebp - 0x7c878b40], al; in al, dx; or byte ptr [ebp - 0x6a7e07d], cl; call dword ptr [eax + 0x55]; 
0x000fa818: adc byte ptr [ebp - 0x7c998b40], al; in al, dx; or byte ptr [ebp - 0x6b0bf7d], cl; call dword ptr [eax + 0x55]; 
0x0016fa26: adc byte ptr [ebp - 0x7ca28a40], al; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0014989b: adc byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x00148d3b: adc byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x00128a1d: adc byte ptr [ebp - 0x7cc18b40], al; ret; 
0x0016f3c6: adc byte ptr [ebp - 0x7cc28b40], al; in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00174054: adc byte ptr [ebp - 0x7cc98b40], al; in al, dx; or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x001577c9: adc byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or byte ptr [ebp - 0x6aec979], cl; call dword ptr [eax + 0x53]; 
0x0016c7ce: adc byte ptr [ebp - 0x7cd28b40], al; in al, dx; add al, 0x83; ret; 
0x001210be: adc byte ptr [ebp - 0x7cd38740], al; in al, dx; add al, 0x89; ret; 
0x0017f8e5: adc byte ptr [ebp - 0x7cd98b25], al; in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x0017f85e: adc byte ptr [ebp - 0x7cda8b25], al; in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x00033284: adc byte ptr [ebp - 0x7ce08b40], al; in al, dx; or byte ptr [ebp - 0x67bd37b], cl; call dword ptr [eax + 0x56]; 
0x00133188: adc byte ptr [ebp - 0x7ce48b40], al; ret; 
0x00137593: adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x0016bad8: adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x00152496: adc byte ptr [ebp - 0x7ce78b2e], al; in al, dx; or byte ptr [ebp - 0x6abcf7f], cl; call dword ptr [eax + 0x52]; 
0x00182e8d: adc byte ptr [ebp - 0x7cf18a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00128a8d: adc byte ptr [ebp - 0x7cf18b40], al; ret; 
0x00169f16: adc byte ptr [ebp - 0x7cf28a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013865e: adc byte ptr [ebp - 0x7cf28b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0012cf1f: adc byte ptr [ebp - 0x7cf38740], al; les ecx, ptr [eax]; pop ebx; ret; 
0x001110a9: adc byte ptr [ebp - 0x7cf58a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00060fc2: adc byte ptr [ebp - 0x7cf68a40], al; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0003c3c2: adc byte ptr [ebp - 0x7cf68a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0015cbe2: adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x0003c133: adc byte ptr [ebp - 0x7cf78a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00181be4: adc byte ptr [ebp - 0x7cf88a2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000418e4: adc byte ptr [ebp - 0x7cf88b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000379ac: adc byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 0x75]; 
0x001686be: adc byte ptr [ebp - 0xce8437d], cl; call dword ptr [eax - 0x73]; 
0x0015c9fe: adc byte ptr [ebp - 0xda4537d], cl; call dword ptr [eax - 0x73]; 
0x00158891: adc byte ptr [ebp - 0xe0a5369], cl; call dword ptr [edx + 0x6a]; 
0x000a4855: adc byte ptr [ebx + 0x10], dh; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa4850; xor eax, eax; ret; 
0x001721f4: adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00086533: adc byte ptr [ebx + 0x120245c], cl; ret; 
0x000ca46f: adc byte ptr [ebx + 0x12e957e8], al; idiv bh; call dword ptr [edi + 0x6a]; 
0x0011ff81: adc byte ptr [ebx + 0x1ac83], cl; add byte ptr [ebx + 0xfcb3], cl; add bh, bh; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x000e6f8f: adc byte ptr [ebx + 0x1b7f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x0016af8b: adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010a90b: adc byte ptr [ebx + 0x1f772dfd], al; mov eax, dword ptr [ebx + ebp*4 - 0x6f150]; add eax, ebx; jmp eax; 
0x0017b87a: adc byte ptr [ebx + 0x207f01fa], al; add esp, 0x18; pop ebx; ret; 
0x000e6719: adc byte ptr [ebx + 0x217f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000e6298: adc byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004117f: adc byte ptr [ebx + 0x237f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0017b8f6: adc byte ptr [ebx + 0x247f01fa], al; add esp, 0x18; pop ebx; ret; 
0x000924cd: adc byte ptr [ebx + 0x257f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0017bb1c: adc byte ptr [ebx + 0x267f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008c1ee: adc byte ptr [ebx + 0x2890853], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0016cec9: adc byte ptr [ebx + 0x2914244c], cl; ret 0xca39; 
0x0006d742: adc byte ptr [ebx + 0x291c245c], cl; ret; 
0x00096416: adc byte ptr [ebx + 0x2e28310], cl; je 0x96428; xor eax, eax; add esp, 0xc; ret; 
0x001567ce: adc byte ptr [ebx + 0x311c2454], cl; dec dword ptr [ebx + 0x392c244c]; ret; 
0x000a7395: adc byte ptr [ebx + 0x39082444], cl; ret; 
0x000a88b9: adc byte ptr [ebx + 0x390c244c], cl; ret 0x840f; 
0x000e5dd9: adc byte ptr [ebx + 0x390c245c], cl; ret 0x470f; 
0x000f935f: adc byte ptr [ebx + 0x39202454], cl; ret; 
0x0003e89d: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b0: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x001718d7: adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001727d9: adc byte ptr [ebx + 0x478b0cec], al; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00185400: adc byte ptr [ebx + 0x4c48303], cl; pop ebx; pop esi; jmp eax; 
0x001721f9: adc byte ptr [ebx + 0x508b0cec], al; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00175d54: adc byte ptr [ebx + 0x52510442], cl; call dword ptr [eax + 0x24]; 
0x00175314: adc byte ptr [ebx + 0x52510442], cl; call dword ptr [eax + 4]; 
0x000bf412: adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000be348: adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0018187c: adc byte ptr [ebx + 0x5c8b0038], al; and al, 0x14; jne 0x181890; pop ebx; ret; 
0x000baf15: adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x00081401: adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x00039b3c: adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00026044: adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00024fd3: adc byte ptr [ebx + 0x5e5b04c4], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007f7ef: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0009f6a3: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0003ba26: adc byte ptr [ebx + 0x5e5b18c4], al; pop edi; ret; 
0x00027597: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0008bd30: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; jmp eax; 
0x000a2d0b: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0016bcf6: adc byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00029cba: adc byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0002aee4: adc byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x0016a5ce: adc byte ptr [ebx + 0x5e], bl; jmp eax; 
0x0005ffb8: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002f610: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009ae56: adc byte ptr [ebx + 0x5e], bl; ret; 
0x0017377d: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x0003e8a0: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b3: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x000254a1: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x254b3; add esp, 0x1c; ret; 
0x00128f80: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0018568d: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x0003fe73: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x00040080: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x00040330: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b3: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x000d7bf2: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000e2326: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47a6: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x00174ef6: adc byte ptr [ebx + 0x651c2444], cl; sub eax, dword ptr [0x14]; jne 0x174f08; add esp, 0x2c; ret; 
0x001387c9: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x00139969: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x0018b9df: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0004022e: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x000527de: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x00090981: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x000966b1: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b11: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x0009703d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x0009748d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x0017300c: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x17301e; add esp, 0x4c; ret; 
0x0017307c: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x17308e; add esp, 0x4c; ret; 
0x001730ec: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1730fe; add esp, 0x4c; ret; 
0x0017314f: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x173161; add esp, 0x4c; ret; 
0x001731af: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1731c1; add esp, 0x4c; ret; 
0x0017321c: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x17322e; add esp, 0x4c; ret; 
0x0017329c: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1732ae; add esp, 0x4c; ret; 
0x00172f9c: adc byte ptr [ebx + 0x653c2454], cl; sub edx, dword ptr [0x14]; jne 0x172fae; add esp, 0x4c; ret; 
0x001096a6: adc byte ptr [ebx + 0x66082444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000be1b9: adc byte ptr [ebx + 0x6be810c0], al; dec ebx; or al, 0; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baeb9: adc byte ptr [ebx + 0x6be810c0], al; jle 0xbaecd; add byte ptr [ecx + 0x10b0b2c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0015cb28: adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax + 0x55]; 
0x0015d504: adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax - 1]; 
0x0012027e: adc byte ptr [ebx + 0x74c08500], cl; inc ebx; call eax; 
0x00181be2: adc byte ptr [ebx + 0x75d28510], cl; pop es; add esp, 8; pop ebx; ret; 
0x00150d6a: adc byte ptr [ebx + 0x87f01fa], al; ret; 
0x0009ff81: adc byte ptr [ebx + 0x974fff8], al; add esp, 0xc; ret; 
0x00096418: adc byte ptr [ebx + 0xa7402e2], al; xor eax, eax; add esp, 0xc; ret; 
0x0012cfb1: adc byte ptr [ebx + 0xa], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017b6d6: adc byte ptr [ebx + 0xc74fff8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00093307: adc byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00047f71: adc byte ptr [ebx + 0xf142454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0006249b: adc byte ptr [ebx + 0xf2c244c], cl; mov dh, 0x94; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x001763c5: adc byte ptr [ebx + 8], dh; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0012d671: adc byte ptr [ebx + 9], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010e37d: adc byte ptr [ebx - 0x16b3db94], cl; ret 0xfff8; 
0x0015c558: adc byte ptr [ebx - 0x16f7dbac], cl; ret; 
0x0015be44: adc byte ptr [ebx - 0x16fbdbbc], cl; retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x001011d3: adc byte ptr [ebx - 0x17cbdbbc], cl; ret; 
0x000a5067: adc byte ptr [ebx - 0x18], dl; mov dl, 0xb4; sti; dec dword ptr [ecx - 0x4517dbe4]; add esi, edi; jmp dword ptr [esi - 0x70]; 
0x00079307: adc byte ptr [ebx - 0x19b77a44], cl; clc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0017fa7b: adc byte ptr [ebx - 0x2776cf3c], al; pop ebx; pop esi; pop edi; ret; 
0x0016a7f2: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; jmp eax; 
0x0016a986: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000d2b54: adc byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000813fe: adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x0016919c: adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x00146f5c: adc byte ptr [ebx - 0x3b7cfe18], al; add al, 0x5b; pop esi; ret; 
0x00168671: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x168682; sub esp, 0xc; push esi; call eax; 
0x00168b24: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x168b35; sub esp, 0xc; push esi; call eax; 
0x00169a03: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x169a14; sub esp, 0xc; push edi; call eax; 
0x00169c0e: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x169ade; sub esp, 0xc; push esi; call eax; 
0x0016df55: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16df66; sub esp, 0xc; push esi; call eax; 
0x0016f599: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16f5aa; sub esp, 0xc; push edi; call eax; 
0x001708b3: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x1708c4; sub esp, 0xc; push ebp; call eax; 
0x00096237: adc byte ptr [ebx - 0x3f7af7bd], cl; je 0x96251; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000a4857: adc byte ptr [ebx - 0x3f7afbc0], cl; jne 0xa4850; xor eax, eax; ret; 
0x00132eff: adc byte ptr [ebx - 0x3f7c2bb3], cl; sbb al, 0x89; out 0x89, al; ret; 
0x0008e546: adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0009adb2: adc byte ptr [ebx - 0x3fe6fe08], al; pop ebx; pop esi; pop edi; ret; 
0x000b8165: adc byte ptr [ebx - 0x43f0ef15], al; shr al, cl; mov esp, 0x81000cab; shr dword ptr [edi + 0x30010dc], 0xc; xchg ecx, eax; jmp ecx; 
0x001226cd: adc byte ptr [ebx - 0x47f3dba4], cl; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bd9d: adc byte ptr [ebx - 0x47f3dba4], cl; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123ffd: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012060d: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c15d: adc byte ptr [ebx - 0x47f3dba4], cl; test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011c90d: adc byte ptr [ebx - 0x47f3dba4], cl; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00076473: adc byte ptr [ebx - 0x4f76b], cl; inc dword ptr [ebp - 0x47bf040]; or eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x000773b6: adc byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx - 0x77]; 
0x001701a6: adc byte ptr [ebx - 0x57cf7b7], cl; emms; adc dword ptr [ebx], eax; test byte ptr [eax - 0x6c910], dl; jmp eax; 
0x000684ee: adc byte ptr [ebx - 0x58b6b], cl; inc dword ptr [ebp + 0xfc389c0]; test byte ptr [eax], cl; xor al, byte ptr [eax]; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x000c9167: adc byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x00146664: adc byte ptr [ebx - 0x6272f314], al; je 0x1466d7; stc; call dword ptr [ebx - 0x18]; 
0x000992bd: adc byte ptr [ebx - 0x69f00208], al; ret; 
0x000473a2: adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00163757: adc byte ptr [ebx - 0x6bf00008], al; ret 0xd4e9; 
0x0007b5b5: adc byte ptr [ebx - 0x6bf00008], al; ret; 
0x0017652d: adc byte ptr [ebx - 0x6bf0fe08], al; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00060c6b: adc byte ptr [ebx - 0x6c72f714], al; inc eax; stc; call dword ptr [esi + 0x52]; 
0x001343a2: adc byte ptr [ebx - 0x72affb14], al; or dword ptr [ebx], 0x66; stc; call dword ptr [eax + 0x56]; 
0x0010f83f: adc byte ptr [ebx - 0x748bdbac], cl; jl 0x10f86b; sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x10f7d4; ret; 
0x00184bb0: adc byte ptr [ebx - 0x74dfdb8c], cl; inc esi; adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4972; 
0x00087880: adc byte ptr [ebx - 0x74dfdba4], cl; inc ebx; adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x000876b0: adc byte ptr [ebx - 0x74ebdb8c], cl; adc esi, esi; ret 0xf08; 
0x0009d585: adc byte ptr [ebx - 0x74ebdbac], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0012c424: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b784: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d514: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d024: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111334: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c094: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be04: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be64: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111054: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f444: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129254: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf74: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc34: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125054: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd14: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd44: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c064: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b74: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed934: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed904: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f74: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124314: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124024: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124054: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120634: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00175682: adc byte ptr [ebx - 0x75], bl; inc eax; or al, 0x5e; pop edi; jmp eax; 
0x001756bb: adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0007fa6c: adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0007fbbc: adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00087678: adc byte ptr [ebx - 0x75], bl; inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x001021fa: adc byte ptr [ebx - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x0012d063: adc byte ptr [ebx - 0x76bfdbbc], cl; inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dd51b: adc byte ptr [ebx - 0x76c3dbb4], cl; ret; 
0x0011beef: adc byte ptr [ebx - 0x76e7db8c], cl; retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0011b593: adc byte ptr [ebx - 0x76ebdbb4], cl; ret; 
0x000a0d1d: adc byte ptr [ebx - 0x76efdb84], cl; ret 0xfa29; 
0x0017b3da: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0x408d; 
0x00094166: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0xe283; 
0x0003fd76: adc byte ptr [ebx - 0x76f7dbb4], cl; ret 0xc085; 
0x001097e5: adc byte ptr [ebx - 0x76fbdbbc], cl; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000804e3: adc byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000b1403: adc byte ptr [ebx - 0x79f0ef15], al; cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0014743c: adc byte ptr [ebx - 0x7a72f714], al; push edi; stc; call dword ptr [eax + 0x52]; 
0x00158df1: adc byte ptr [ebx - 0x7ae7dbac], cl; ror byte ptr [edi], 0x85; ret 0xfffb; 
0x0010bfb4: adc byte ptr [ebx - 0x7af00008], al; ret; 
0x001207f6: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6a5706a], cl; call dword ptr [edx - 0x77]; 
0x00120815: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6a56d6a], cl; call dword ptr [edx - 0x77]; 
0x0017d157: adc byte ptr [ebx - 0x7af7dbac], cl; sal byte ptr [eax + esi - 0x7d], 0xec; or byte ptr [ebp - 0x689754a], cl; call dword ptr [esi + 0x53]; 
0x0017c7d2: adc byte ptr [ebx - 0x7afbdbb4], cl; ror byte ptr [edi], 0x84; sub dword ptr [eax + eax], eax; add byte ptr [ebx - 0x4c72f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x00072e2f: adc byte ptr [ebx - 0x7bf00008], al; sub ebx, dword ptr [eax + eax]; add byte ptr [ecx], al; ret; 
0x001412d2: adc byte ptr [ebx - 0x7c2c76ed], cl; ret 0x8303; 
0x0017d666: adc byte ptr [ebx - 0x7c72f714], al; mov dh, 0x76; stc; call dword ptr [ebp + 0x50]; 
0x000a9717: adc byte ptr [ebx - 0x7cebdba4], cl; stc; or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97d7: adc byte ptr [ebx - 0x7cebdba4], cl; stc; or byte ptr [edi + 0x2a], dh; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x0006032d: adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x0003c4d2: adc byte ptr [ebx - 0x7cf3dbbc], cl; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005b5e4: adc byte ptr [ebx - 0x876b], cl; inc dword ptr [ecx]; ret 0x5589; 
0x0017ab56: adc byte ptr [ebx - 0xdb7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00142474: adc byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0007de5a: adc byte ptr [ebx], bh; push eax; add al, 0x73; adc byte ptr [ebp + 0x889044a], cl; mov eax, dword ptr [edx]; ret; 
0x0016b0ba: adc byte ptr [ebx], ch; inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0011aa52: adc byte ptr [ebx], dh; dec eax; add al, 9; retf 0x940f; ret 0x540a; 
0x000a89e7: adc byte ptr [ecx + 0x3118244c], cl; rol byte ptr [ecx], cl; ret; 
0x000a8353: adc byte ptr [ecx + 0x3118244c], cl; shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x000a8727: adc byte ptr [ecx + 0x3118247c], cl; ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x001842c5: adc byte ptr [ecx + 0x39042444], cl; ret 0x9174; 
0x0008621d: adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x001696c2: adc byte ptr [ecx + 0x4438bc6], cl; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0016cb2c: adc byte ptr [ecx + 0x446ce8c7], cl; cli; jmp dword ptr [ebp - 0x77]; 
0x000be677: adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb1d4: adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000be6a7: adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb1f4: adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x00085703: adc byte ptr [ecx + 0x4538903], cl; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x000b8c14: adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0007eaf1: adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x000e700b: adc byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000e5238: adc byte ptr [ecx + 0x4f8b184e], cl; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000843b4: adc byte ptr [ecx + 0x50890853], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00175d81: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x20]; 
0x00174fb9: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x0007e91d: adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0008bc37: adc byte ptr [ecx + 0x5b0c244c], cl; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x0007db1e: adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x00182af9: adc byte ptr [ecx + 0x5bd08930], cl; pop esi; ret; 
0x0005b088: adc byte ptr [ecx + 0x5bf08903], cl; pop esi; pop edi; ret; 
0x000a48da: adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x00084134: adc byte ptr [ecx + 0x5e5b0450], cl; ret; 
0x000da087: adc byte ptr [ecx + 0x5e5b0470], cl; pop edi; ret; 
0x0009ae53: adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x0003ffb3: adc byte ptr [ecx + 0x5e5b145a], cl; pop edi; ret; 
0x0005a92c: adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x000b7504: adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000b7524: adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x0018081e: adc byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x0013a8bc: adc byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x000c352b: adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x001480d4: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000993ae: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0014320b: adc byte ptr [ecx + 0x6a], 0xf9; call dword ptr [eax + 0x53]; 
0x000a1e40: adc byte ptr [ecx + 0x718d0134], cl; or cl, ch; imul edi, ecx, 0x878dffff; call dword ptr [edx - 7]; 
0x00082a62: adc byte ptr [ecx + 0x74c085c7], cl; jae 0x829ed; in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0010dcab: adc byte ptr [ecx + 0x74ff85f8], cl; add eax, 0x75003f80; sbb eax, 0x8b056a56; jl 0x10dce1; adc byte ptr [ebp - 0x6a68079], cl; call dword ptr [eax - 0x73]; 
0x00060e16: adc byte ptr [ecx + 0x78c085c3], cl; cmp eax, dword ptr [ebx - 0x7972f714]; lodsd eax, dword ptr [esi]; inc edx; stc; call dword ptr [eax + 0x53]; 
0x000ad2e3: adc byte ptr [ecx + 0x7e183d1], cl; add eax, dword ptr [eax + ecx*4 - 0x71194]; jmp eax; 
0x0005a7fe: adc byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x0013d3db: adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x2ec3; 
0x000389b7: adc byte ptr [ecx + 0xfc085c1], cl; test byte ptr [ebp - 0x77000000], ch; ret 0xab8b; 
0x00074121: adc byte ptr [ecx + 0xfc085c3], cl; test ch, bl; sub al, byte ptr [eax]; add byte ptr [ebx - 0x5177b], cl; call ecx; 
0x0015d4f1: adc byte ptr [ecx + 0xfc085c7], cl; test dword ptr [eax + eax - 0x137d0000], ecx; or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax - 1]; 
0x001826ae: adc byte ptr [ecx + 0xfc085d8], cl; inc esp; ret 0x178b; 
0x0014b38d: adc byte ptr [ecx + 0xfdb85f2], cl; test byte ptr [edi - 0xa000000], ch; ret 0xf08; 
0x0011f349: adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x00135fe6: adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax + 0x6a]; 
0x0009e6c2: adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0013936b: adc byte ptr [ecx - 0x16f3dbb4], cl; pop ebx; jg 0x139367; jmp dword ptr [esi - 0x70]; 
0x0013930b: adc byte ptr [ecx - 0x16f3dbb4], cl; retf; lodsb al, byte ptr [esi]; hlt; jmp dword ptr [esi - 0x70]; 
0x00098e2e: adc byte ptr [ecx - 0x18], dl; pop ebx; ret; 
0x00055ac0: adc byte ptr [ecx - 0x361f43], cl; dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x000d2e6a: adc byte ptr [ecx - 0x365f4b], cl; push dword ptr [ecx]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x0003e79e: adc byte ptr [ecx - 0x3fcef7ba], cl; pop ebx; pop esi; pop edi; ret; 
0x0005a03e: adc byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x000ee7a1: adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x001273b5: adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013f4bb: adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00176181: adc byte ptr [ecx - 0x537672e8], cl; idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x000ee6c6: adc byte ptr [ecx - 0x5eb7b], cl; call dword ptr [esi - 0x18]; 
0x000f57c6: adc byte ptr [ecx - 0x5fb7b], cl; call dword ptr [esi - 0x18]; 
0x001460a0: adc byte ptr [ecx - 0x72fd9532], cl; add dword ptr [edi], 0x3d; stc; call dword ptr [eax + 0x51]; 
0x0012002a: adc byte ptr [ecx - 0x73], dl; mov ebx, dword ptr [ebx + 0x69]; stc; call dword ptr [ecx + 0x50]; 
0x0007ab14: adc byte ptr [ecx - 0x74f3dbb4], cl; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000e0864: adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x448b; 
0x000e1efb: adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x7e9; 
0x000e1ea6: adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0xcae9; 
0x000a11a4: adc byte ptr [ecx - 0x76dfdb84], cl; ret 0xcaeb; 
0x00094b8a: adc byte ptr [ecx - 0x76efdbb4], cl; ret 0xc74; 
0x0002dd25: adc byte ptr [ecx - 0x76f3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0018b2ac: adc byte ptr [ecx - 0x76f7dbbc], cl; fcomp dword ptr [ebx - 0x17]; xchg ebp, ecx; clc; jmp dword ptr [esi - 0x70]; 
0x0012c57c: adc byte ptr [ecx - 0x7a3fce3e], cl; sal byte ptr [eax + eax*2 - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x649d779], cl; call dword ptr [eax + 0x55]; 
0x000fd393: adc byte ptr [ecx - 0x7c27d608], cl; ret; 
0x000a441b: adc byte ptr [ecx - 0x7c3fcef0], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x001665ce: adc byte ptr [ecx - 0x7cebdbb4], cl; in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; sub byte ptr [edi + 0x72], 0xf9; call dword ptr [eax + 0x57]; 
0x000ff153: adc byte ptr [ecx - 0x7cefdba4], cl; ret 0x3904; 
0x0005b103: adc byte ptr [ecx - 0x9343], cl; dec dword ptr [eax - 0xad73]; dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xa74b]; jmp dword ptr [ebp - 0x75]; 
0x000814d4: adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x00169561: adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x169579; push ebx; call dword ptr [esi + 0x14]; 
0x00032962: adc byte ptr [ecx - 0xe37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0017a95c: adc byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0005b00b: adc byte ptr [ecx - 0xf766efc], cl; pop ebx; pop esi; pop edi; ret; 
0x0011ed98: adc byte ptr [ecx], 0; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c2174: adc byte ptr [ecx], 0x55; stc; call dword ptr [eax - 0x18]; 
0x00081ded: adc byte ptr [ecx], ah; ret 0xfa83; 
0x00110e76: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0014567a: adc byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00110e9a: adc byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000be976: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x000ffd0c: adc byte ptr [ecx], al; ret 0x448b; 
0x000a0e1c: adc byte ptr [ecx], al; ret 0x4c8b; 
0x000810d6: adc byte ptr [ecx], al; ret 0x562b; 
0x000bf185: adc byte ptr [ecx], al; ret 0x67c; 
0x00143f15: adc byte ptr [ecx], al; ret 0x6fe9; 
0x0017eead: adc byte ptr [ecx], al; ret 0xcdb8; 
0x0007e3b6: adc byte ptr [ecx], al; ret; 
0x00191d56: adc byte ptr [ecx], al; retf 0xc801; call 0x182d19; add ebx, 0x42df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191c51: adc byte ptr [ecx], al; retf 0xc801; call 0x182d19; add ebx, 0x42e35; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fd46: adc byte ptr [ecx], al; retf 0xc801; call 0x182d19; add ebx, 0x44b80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fc41: adc byte ptr [ecx], al; retf 0xc801; call 0x182d19; add ebx, 0x44bc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dd46: adc byte ptr [ecx], al; retf 0xc801; call 0x182d19; add ebx, 0x46900; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dc41: adc byte ptr [ecx], al; retf 0xc801; call 0x182d19; add ebx, 0x46945; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a1ed3: adc byte ptr [ecx], bh; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x00108893: adc byte ptr [ecx], bh; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0008788a: adc byte ptr [ecx], bh; ret 0x2773; 
0x000a811d: adc byte ptr [ecx], bh; ret 0x2e74; 
0x00184bba: adc byte ptr [ecx], bh; ret 0x4972; 
0x0014dbe5: adc byte ptr [ecx], bh; ret 0x6674; 
0x000a243c: adc byte ptr [ecx], bh; ret 0x820f; 
0x000c5dc7: adc byte ptr [ecx], bh; ret 0x840f; 
0x0002cbd7: adc byte ptr [ecx], bh; ret 0x850f; 
0x0006fd34: adc byte ptr [ecx], bh; ret 0x8c0f; 
0x000fe075: adc byte ptr [ecx], bh; ret 0xad75; 
0x0014c175: adc byte ptr [ecx], bh; ret 0xea75; 
0x00024c38: adc byte ptr [ecx], bh; ret; 
0x0008ae27: adc byte ptr [ecx], bh; sal byte ptr [ebp - 0xc], 1; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x000c2589: adc byte ptr [ecx], bh; sal dword ptr [ebp + 0xc], 1; ret; 
0x0007fe77: adc byte ptr [ecx], bh; sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000aa3b7: adc byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000a4901: adc byte ptr [ecx], ch; ret 0x408b; 
0x000da9d3: adc byte ptr [ecx], ch; ret 0x880f; 
0x00041450: adc byte ptr [ecx], ch; ret 0xc269; 
0x000a5e95: adc byte ptr [ecx], ch; ret 0xc8d; 
0x001a3969: adc byte ptr [ecx], ch; ret 0xe183; 
0x00088730: adc byte ptr [ecx], ch; ret 0xfa39; 
0x00038421: adc byte ptr [ecx], ch; ret; 
0x00063d40: adc byte ptr [ecx], cl; ret 0x540b; 
0x00132c14: adc byte ptr [ecx], cl; ret; 
0x0013a84d: adc byte ptr [ecx], dh; fucomi st(3); ret 0x8d2e; 
0x0013a2a9: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0007ff73: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0016bd53: adc byte ptr [ecx], dh; ret; 
0x00132316: adc byte ptr [ecx], dh; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x0016ae7f: adc byte ptr [ecx], dh; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x00135b88: adc byte ptr [ecx], dh; rol byte ptr [ebx - 0x2f76fb3c], cl; pop ebx; pop esi; ret; 
0x0002fc27: adc byte ptr [edi + 0x3b], 0xf9; call dword ptr [eax - 0x18]; 
0x000a0512: adc byte ptr [edi + 0x52], 0xf9; call dword ptr [eax - 0x18]; 
0x000b516f: adc byte ptr [edi + 0x5b], bl; ret; 
0x000b73bd: adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad94a: adc byte ptr [edi + 0x5e], bl; ret; 
0x00024f4b: adc byte ptr [edi + edi*2 - 7], 0xff; ret; 
0x0009903c: adc byte ptr [edi - 0x3b7cfff9], cl; adc byte ptr [ebp - 0x72c68b40], al; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00170de3: adc byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call eax; 
0x0018c697: adc byte ptr [edi], cl; add byte ptr [edx - 0x4c], 0xfa; jmp dword ptr [esi - 0x70]; 
0x0018fa17: adc byte ptr [edi], cl; add dl, 0x80; cli; jmp dword ptr [esi - 0x70]; 
0x0018da17: adc byte ptr [edi], cl; add dl, 0xa0; cli; jmp dword ptr [esi - 0x70]; 
0x0018c017: adc byte ptr [edi], cl; add dl, 0xba; cli; jmp dword ptr [esi - 0x70]; 
0x001919f7: adc byte ptr [edi], cl; and dl, 0x60; cli; jmp dword ptr [esi - 0x70]; 
0x001a486d: adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0006f4e2: adc byte ptr [edi], cl; dec ecx; fistp qword ptr [ecx]; ret 0x8d0f; 
0x000ad5a8: adc byte ptr [edi], cl; inc edi; ret 0x5350; 
0x000a8e9f: adc byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x00042877: adc byte ptr [edi], cl; mov ebp, 0x1ff383db; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x0004739b: adc byte ptr [edi], cl; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00046f27: adc byte ptr [edi], cl; mov esi, 0x243c83db; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x000beea2: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000b8168: adc byte ptr [edi], cl; mov esp, 0xabbce8d2; or al, 0; add ecx, 0x10dcaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017a2ec: adc byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x001a383d: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x000a68ab: adc byte ptr [edi], cl; test byte ptr [ecx - 0x7cffffff], bl; ret 0xe901; 
0x001a456e: adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x00145db5: adc byte ptr [edi], cl; test dword ptr [ecx + eax - 0x137d0000], eax; or al, 0x8d; adc dword ptr [ebx], 0x6b; stc; call dword ptr [eax - 0x18]; 
0x000b85e0: adc byte ptr [edi], cl; test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b6f6d: adc byte ptr [edi], cl; test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x001a47f2: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x000b0b4f: adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x001a46d2: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x000d6bb0: adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b4f40: adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00076bbe: adc byte ptr [edi], cl; test edx, esp; mov bl, 0xff; inc dword ptr [ebx - 0x51b73]; inc dword ptr [ecx + ecx*4]; ret; 
0x001a2acb: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001a03c3: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0019ef3c: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x00141801: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x001472b4: adc byte ptr [edi], cl; xchg esp, eax; ret 0xa3c; 
0x00046f2e: adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x000c5612: adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x0013ad5c: adc byte ptr [edi], cl; xchg esp, eax; ret; 
0x0018d267: adc byte ptr [edi], cl; xor byte ptr [edx - 0x58], 0xfa; jmp dword ptr [esi - 0x70]; 
0x00175441: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 4]; 
0x00175479: adc byte ptr [edx + 0x51], dl; call dword ptr [eax]; 
0x00175b0f: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x20]; 
0x0016edbb: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x24]; 
0x001751a9: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x00175146: adc byte ptr [edx + 0x53], dl; call dword ptr [eax]; 
0x0013a9ca: adc byte ptr [edx + 0x56], dl; call eax; 
0x0013a8f9: adc byte ptr [edx + 0x57], dl; call eax; 
0x0003d962: adc byte ptr [edx + 0xa], ch; push 0; push dword ptr [esp + 0x1c]; call 0x50a00; add esp, 0x1c; ret; 
0x00122254: adc byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007aad2: adc byte ptr [edx + 1], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a9f0; add esp, 0x1c; ret; 
0x00034b32: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x18]; push 0; call 0x34af0; add esp, 0x1c; ret; 
0x00034b12: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x34af0; add esp, 0x1c; ret; 
0x00169f52: adc byte ptr [edx + 8], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x175610; add esp, 0x1c; ret; 
0x00156392: adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x00085bcb: adc byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00132006: adc byte ptr [edx - 0x75], dl; inc esi; sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x0010ad32: adc byte ptr [edx], ch; push dword ptr [esp + 0x18]; push -1; call 0x10b230; add esp, 0x1c; ret; 
0x0003d1c2: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d150; add esp, 0x1c; ret; 
0x0007d7d2: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a9f0; add esp, 0x1c; ret; 
0x0016899e: adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00131f8c: adc byte ptr [edx], dl; out dx, eax; dec dword ptr [ecx + 0x8e82434]; adc ch, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0007fbc0: adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x001424ce: adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0019f307: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0019c5c3: adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001a346a: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001a3482: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bee3d: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000fadde: adc byte ptr [esi + ecx - 0x77], dh; ret 0xef89; 
0x00149d80: adc byte ptr [esi - 0x3f], ah; ret 0x908; 
0x000be648: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bb1b5: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x000b8bc5: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b74e5: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001811c1: adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00031ae4: adc byte ptr [esp + edi], 0xf9; call dword ptr [eax - 0x18]; 
0x000a1eaf: adc byte ptr fs:[eax], al; add byte ptr [ebp - 0x6ae8479], cl; call dword ptr [eax - 0x73]; 
0x00131f8d: adc ch, bh; dec dword ptr [ecx + 0x8e82434]; adc ch, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00131f95: adc ch, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0014a87f: adc ch, byte ptr [ecx]; ret 0xd101; 
0x00128e6a: adc ch, byte ptr [edi - 0x7c720010]; cwde; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x000e674a: adc ch, byte ptr [edi - 6]; jmp dword ptr [esi - 0x70]; 
0x0006aec5: adc ch, cl; ret; 
0x000b6eea: adc cl, byte ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0016dbe4: adc cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00140899: adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00164ba3: adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x000a64f1: adc cl, byte ptr [ebp - 0x95e437e]; inc dword ptr [eax - 0x6d72fd1b]; mov word ptr [eax + ebp*8 - 0x3dbbf001], cs; ret; 
0x000a9c51: adc cl, byte ptr [ebp - 0x9ad237e]; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x89; call 0xc24eac63; ret; 
0x000a6fc1: adc cl, byte ptr [ebp - 0x9d2337e]; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x88; call 0xc24e7fd3; ret; 
0x000a7cb1: adc cl, byte ptr [ebp - 0xa00c37e]; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe896; inc esp; ret 0x66c3; 
0x00098f49: adc cl, byte ptr [ebx + 0x144a3908]; je 0x98f58; ret; 
0x0012f0d5: adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x0009ef75: adc cl, byte ptr [ecx + 0x4b891459]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000b3436: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3596: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af056: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1b6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b35b6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af1d6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b35d6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af1f6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0016afce: adc cl, byte ptr [edi]; retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x000bb016: adc cl, byte ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007dc83: adc cl, ch; adc eax, 0x89ffffff; ret; 
0x00082a0b: adc cl, ch; add eax, 0x89ffffff; ret; 
0x00128dc0: adc cl, ch; cmp ch, 0xff; dec dword ptr [ebp - 0x64a677d]; call dword ptr [eax - 0x73]; 
0x0007a0a9: adc cl, ch; cmp esi, -1; call dword ptr [eax - 0x76f3137d]; ret; 
0x0007af9b: adc cl, ch; mov al, byte ptr [0x89fffffe]; ret; 
0x0007a98b: adc cl, ch; mov ebp, 0x89fffffe; ret; 
0x00127aef: adc cl, ch; mov edx, 0x89fffffd; ret; 
0x00174825: adc cl, ch; or eax, 0xe8ffffff; mov al, 0x46; cld; call dword ptr [eax - 0x73]; 
0x0007a57b: adc cl, ch; push 0x89ffffff; ret; 
0x0002fe54: adc cl, ch; push 0x8dffffff; or eax, 0xffffff82; stc; call dword ptr [eax - 0x73]; 
0x000ddfad: adc cl, ch; ret 0xffed; 
0x0005bf58: adc cl, ch; ret 0xfff3; 
0x00064dc7: adc cl, ch; ret; 
0x0011adb1: adc cl, ch; retf 0xfffe; jmp dword ptr [ebp - 0x75]; 
0x00085ecb: adc cl, ch; sbb eax, 0x89ffffff; ret; 
0x00176ace: adc cl, ch; sbb eax, 0xe8ffffff; pop es; and al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x00024896: adc cl, ch; xlatb; test al, 0x11; add byte ptr [ebp - 0x699f27d], cl; call dword ptr [edi + 0x57]; 
0x0010f719: adc dh, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0014baf5: adc dh, byte ptr [ecx]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0005a948: adc dh, dh; add ah, byte ptr [eax]; je 0x5a958; add esp, 0xc; ret; 
0x00077c18: adc dh, dh; add ah, byte ptr [eax]; je 0x77c28; add esp, 0xc; ret; 
0x0008a126: adc dh, dh; push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00111613: adc dh, dh; ret 0x7549; 
0x000a3168: adc dh, dh; ret 0xf04; 
0x00150319: adc dh, dh; ret 0xf20; 
0x0005dea6: adc dh, dh; ret 0xf40; 
0x0013cbe2: adc dh, dh; ret; 
0x0013d43f: adc dl, byte ptr [ebx - 0x18]; fidiv dword ptr [eax]; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0005a76a: adc dl, byte ptr [esi - 0x79720003]; jl 0x5a6fb; stc; call dword ptr [eax - 0x73]; 
0x00153484: adc dword ptr [eax + 0x500000a0], -0x73; sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x0011fb03: adc dword ptr [eax + 0x5a], -7; call dword ptr [eax - 1]; 
0x00097eff: adc dword ptr [eax + eax*4 - 0x15], esi; out 0x8b, al; jl 0x97f2b; adc al, 0x89; ret; 
0x001938bb: adc dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00041224: adc dword ptr [eax + ebx], 0; add byte ptr [eax - 0x18], dl; push ecx; ret; 
0x0015ba89: adc dword ptr [eax + esi*2], -7; call dword ptr [eax - 0x18]; 
0x0015bc09: adc dword ptr [eax + esi*2], -7; call dword ptr [eax - 0x73]; 
0x0016c56c: adc dword ptr [eax - 0x27c600b0], ecx; jne 0x16c560; pop ebx; ret; 
0x000dbcd1: adc dword ptr [eax - 0x52], -7; call dword ptr [eax - 0x73]; 
0x00172b19: adc dword ptr [eax - 0x7cffffff], -0x3c; add al, 0x5b; pop esi; ret; 
0x0018598b: adc dword ptr [eax - 0xe], edx; jmp dword ptr [esi - 0x70]; 
0x000f7f50: adc dword ptr [eax - 1], edi; ret; 
0x0007a29f: adc dword ptr [eax - 6], -1; call dword ptr [eax - 0x73]; 
0x000dbd03: adc dword ptr [eax], -0x52; stc; call dword ptr [eax - 0x18]; 
0x000a11e3: adc dword ptr [eax], -0x5f; stc; call dword ptr [eax - 0x18]; 
0x000ed004: adc dword ptr [eax], 0x6afff9b0; add eax, 0x34818d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x000a1e8c: adc dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esi, esi; push edx; stc; call dword ptr [eax - 0x18]; 
0x0003310b: adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012d5c8: adc dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00072ac1: adc dword ptr [eax], eax; add byte ptr [ebp - 0x47bf040], al; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0017d691: adc dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0010d422: adc dword ptr [eax], eax; add byte ptr [ebx - 0x72f7db84], cl; xchg esp, ebp; mov cl, 0xf9; call dword ptr [eax + 0x68]; 
0x00031955: adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x840f; 
0x000318ef: adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x000e710c: adc dword ptr [eax], eax; and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00121419: adc dword ptr [eax], eax; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x121429; ret; 
0x0013c764: adc dword ptr [eax], eax; pop ebx; ret; 
0x0011bda9: adc dword ptr [eax], eax; push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0011c939: adc dword ptr [eax], eax; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f649: adc dword ptr [eax], eax; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011d4d9: adc dword ptr [eax], eax; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011ed99: adc dword ptr [eax], eax; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011d979: adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b229: adc dword ptr [eax], eax; push ebx; mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001266f4: adc dword ptr [eax], eax; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c8bf: adc dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011cc04: adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001583cf: adc dword ptr [ebp + 0x39e074c9], eax; or dh, byte ptr [esp + edx*8 - 0x7d]; ret 0x8014; 
0x00122b3a: adc dword ptr [ebp + 0x61], -7; call dword ptr [eax + 0x55]; 
0x00120454: adc dword ptr [ebp + 0x6f], -7; call dword ptr [eax + 0x6a]; 
0x0011f554: adc dword ptr [ebp + 8], esi; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00097fac: adc dword ptr [ebp + eax*8 - 0x15], esi; out 0x89, eax; ret 0xe283; 
0x001526fe: adc dword ptr [ebp - 0x77], esp; pop ebx; pop esi; pop edi; ret; 
0x000c1dea: adc dword ptr [ebp - 7], edx; call dword ptr [eax - 0x18]; 
0x0012f70d: adc dword ptr [ebp - 7], esp; call dword ptr [eax + 0x57]; 
0x0008e243: adc dword ptr [ebx + 0x16b812], ecx; add byte ptr [eax], al; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0016a96b: adc dword ptr [ebx + 0x26a0000], 0x68; pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0016b43f: adc dword ptr [ebx + 0x29342454], ecx; ret 0xfa01; 
0x0012a9ec: adc dword ptr [ebx + 0x4a7426fa], eax; pop ebx; pop esi; ret; 
0x00122b55: adc dword ptr [ebx + 0x5b], -7; call dword ptr [eax + 0x55]; 
0x00182bc5: adc dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0016b2b2: adc dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x0011e00e: adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000f8726: adc dword ptr [ebx + 0x5e], ebx; ret; 
0x0002fba6: adc dword ptr [ebx + 0xc7403f8], eax; add esp, 8; pop ebx; ret; 
0x001ad986: adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x00097eb4: adc dword ptr [ebx + ecx*8 - 0x15], esi; out 0x89, eax; ret 0xe283; 
0x0015d812: adc dword ptr [ebx - 0x17acf314], eax; in al, 0x28; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x0015d474: adc dword ptr [ebx - 0x17aff314], eax; sub byte ptr [edx + eax], 0; mov dword ptr [esp], ebp; call edi; 
0x00038988: adc dword ptr [ebx - 0x3e7ccf16], eax; add dword ptr [ebx - 0x69f0f606], eax; ret 0xb60f; 
0x0019f29e: adc dword ptr [ebx - 0x48], ebx; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19f2a9; neg eax; ret; 
0x00172b96: adc dword ptr [ebx - 0x6bfafb3c], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00172b06: adc dword ptr [ebx - 0x6ffafb3c], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007abc6: adc dword ptr [ebx - 0x74f7dbbc], ecx; push esp; and al, 0xc; add esp, 0x1c; ret; 
0x0009baee: adc dword ptr [ebx - 0x74fbdbbc], ecx; test al, 0x9c; cmp eax, dword ptr [eax]; add cl, ch; sar esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x000fa7e3: adc dword ptr [ebx], 0x58; stc; call dword ptr [eax + 0x55]; 
0x00145dc0: adc dword ptr [ebx], 0x6b; stc; call dword ptr [eax - 0x18]; 
0x000c00b2: adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x001701ae: adc dword ptr [ebx], eax; test byte ptr [eax - 0x6c910], dl; jmp eax; 
0x000322eb: adc dword ptr [ecx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x0005f962: adc dword ptr [ecx + 0x42], -7; call dword ptr [eax + 0x6a]; 
0x000a4549: adc dword ptr [ecx + ebp*2], -7; call dword ptr [eax + 0x6a]; 
0x001ad983: adc dword ptr [ecx - 0x7cfbee8c], ecx; ret 0x3908; 
0x00122b8b: adc dword ptr [ecx], 0x5c; stc; call dword ptr [eax + 0x55]; 
0x0012f70c: adc dword ptr [ecx], 0x65; stc; call dword ptr [eax + 0x57]; 
0x00027fb6: adc dword ptr [ecx], eax; ret 0xc083; 
0x000701ee: adc dword ptr [ecx], eax; ret; 
0x00175f96: adc dword ptr [ecx], ebp; ret 0x4189; 
0x0009ffd4: adc dword ptr [ecx], edi; ret 0x2373; 
0x0013c034: adc dword ptr [ecx], edi; ret 0x460f; 
0x000fba8e: adc dword ptr [ecx], esi; rol byte ptr [eax + 0xf004d7e], cl; xchg ebp, eax; ret 0xd201; 
0x000b8aa0: adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000bae18: adc dword ptr [edi + 0xc], edi; add byte ptr [ecx + 0x10b158c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012fcc0: adc dword ptr [edi + eax*2 - 0x7c9a0000], 0x5b015804; ret; 
0x0018de04: adc dword ptr [edi - 1], ecx; inc dword ptr [ecx + 0x46788c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001aa583: adc dword ptr [edi], ecx; test dword ptr [0x8bfffffd], esp; dec ebp; mov esp, 0x830fca39; ret; 
0x0008dd5b: adc dword ptr [edx + eax], 0x10000; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00117ff7: adc dword ptr [edx - 7], ebx; call dword ptr [eax - 0x18]; 
0x0009fc12: adc dword ptr [edx - 7], edx; call dword ptr [eax - 0x18]; 
0x00191a92: adc dword ptr [edx], -1; inc dword ptr [ecx + 0x4317ac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0005ab66: adc dword ptr [edx], 0xabc38100; ret 0x1d; 
0x000c7b2a: adc dword ptr [esi + eax*4 - 7], 0x4be850ff; ret 0xfff6; 
0x000b0fb1: adc dword ptr [esi - 0x77], esp; push ecx; add al, 0x5b; ret; 
0x0005f7cc: adc dword ptr [esi], 0x42; stc; call dword ptr [eax + 0x6a]; 
0x000be118: adc dword ptr [esp + ecx], ecx; add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00123fae: adc dword ptr cs:[eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c00b1: adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0010b2d0: adc eax, -0x4f; stc; call dword ptr [eax - 0x73]; 
0x000e4937: adc eax, 0x10; cmp eax, -0x26; jne 0xe494d; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00110ecb: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x110ee0; pop ebx; ret; 
0x00110f3b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x110f50; pop ebx; ret; 
0x001112fb: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x111310; pop ebx; ret; 
0x0011b23b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11b250; pop ebx; ret; 
0x0011b74b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11b760; pop ebx; ret; 
0x0011bdb9: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11bdd0; pop ebx; ret; 
0x0011c947: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11c958; pop ebx; ret; 
0x0011cfeb: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11d000; pop ebx; ret; 
0x0011d4e7: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11d4f8; pop ebx; ret; 
0x0011d987: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11d998; pop ebx; ret; 
0x0011edab: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11edc0; pop ebx; ret; 
0x0011edfb: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11ee10; pop ebx; ret; 
0x00120b4b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120b60; pop ebx; ret; 
0x00127d8b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x127da0; pop ebx; ret; 
0x0012a0d7: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12a0e8; pop ebx; ret; 
0x0012a71b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12a730; pop ebx; ret; 
0x0012a882: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0012a97b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12a990; pop ebx; ret; 
0x0012b96b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12b980; pop ebx; ret; 
0x0012bbfb: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12bc10; pop ebx; ret; 
0x0003c42c: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x3c440; pop ebx; ret; 
0x000603db: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x603f0; pop ebx; ret; 
0x0009cf77: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9cf88; pop ebx; ret; 
0x0009de9f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9deb0; pop ebx; ret; 
0x000d92b9: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xd92d0; pop ebx; ret; 
0x00108c07: adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003c3f1: adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011d4bd: adc eax, 0x10; mov ebx, edx; ret; 
0x000f830b: adc eax, 0x10; neg eax; pop ebx; ret; 
0x0011d95d: adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x000e7b84: adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0008d679: adc eax, 0x10; pop ebx; pop esi; ret; 
0x0013b40e: adc eax, 0x10; pop ebx; ret; 
0x0009a217: adc eax, 0x10; ret; 
0x00108c62: adc eax, 0x14; jne 0x108caa; add esp, 0x28; pop ebx; ret; 
0x00108cf5: adc eax, 0x14; jne 0x108d42; add esp, 0x28; pop ebx; ret; 
0x00108f52: adc eax, 0x14; jne 0x108f9a; add esp, 0x28; pop ebx; ret; 
0x0010adae: adc eax, 0x14; jne 0x10ae5b; add esp, 0x68; pop ebx; ret; 
0x0010fe27: adc eax, 0x14; jne 0x10fe46; add esp, 0x78; pop ebx; ret; 
0x0011b1b9: adc eax, 0x14; jne 0x11b1c7; movzx eax, al; add esp, 0x4c; ret; 
0x0011d59d: adc eax, 0x14; jne 0x11d5a9; add esp, 0x38; pop ebx; ret; 
0x0011d60d: adc eax, 0x14; jne 0x11d619; add esp, 0x38; pop ebx; ret; 
0x0011eae1: adc eax, 0x14; jne 0x11eaf3; add esp, 0x1c; ret; 
0x00120c42: adc eax, 0x14; jne 0x120c4e; add esp, 0x38; pop ebx; ret; 
0x00121061: adc eax, 0x14; jne 0x12106c; add esp, 0x1c; ret; 
0x00121adc: adc eax, 0x14; jne 0x121aff; add esp, 0x1018; pop ebx; ret; 
0x00122764: adc eax, 0x14; jne 0x12276f; add esp, 0x1c; ret; 
0x00126fe5: adc eax, 0x14; jne 0x127032; add esp, 0x28; pop ebx; ret; 
0x00127085: adc eax, 0x14; jne 0x1270d2; add esp, 0x28; pop ebx; ret; 
0x00128b10: adc eax, 0x14; jne 0x128b1b; add esp, 0x3c; ret; 
0x00128f87: adc eax, 0x14; jne 0x128f92; add esp, 0x1c; ret; 
0x0012ca6b: adc eax, 0x14; jne 0x12ca92; add esp, 0x28; pop ebx; ret; 
0x0012cb90: adc eax, 0x14; jne 0x12cbb2; add esp, 0x18; pop ebx; ret; 
0x0012cc10: adc eax, 0x14; jne 0x12cc32; add esp, 0x18; pop ebx; ret; 
0x0012cecb: adc eax, 0x14; jne 0x12cef2; add esp, 0x18; pop ebx; ret; 
0x0012db2b: adc eax, 0x14; jne 0x12db52; add esp, 0x18; pop ebx; ret; 
0x0012dc32: adc eax, 0x14; jne 0x12dc3d; add esp, 0x1c; ret; 
0x0012dca0: adc eax, 0x14; jne 0x12dcc2; add esp, 0x18; pop ebx; ret; 
0x0012dd2b: adc eax, 0x14; jne 0x12dd52; add esp, 0x28; pop ebx; ret; 
0x0012de33: adc eax, 0x14; jne 0x12de3e; add esp, 0x7c; ret; 
0x001387d0: adc eax, 0x14; jne 0x1387e5; add esp, 0x2c; ret; 
0x00139970: adc eax, 0x14; jne 0x139985; add esp, 0x2c; ret; 
0x00143a2d: adc eax, 0x14; jne 0x143a44; add esp, 0x18; pop ebx; ret; 
0x00143a75: adc eax, 0x14; jne 0x143a80; add esp, 0x1c; ret; 
0x00143ac4: adc eax, 0x14; jne 0x143acf; add esp, 0x1c; ret; 
0x001458bd: adc eax, 0x14; jne 0x145904; add esp, 0x118; pop ebx; ret; 
0x0014595d: adc eax, 0x14; jne 0x1459c0; add esp, 0x118; pop ebx; ret; 
0x00145a1d: adc eax, 0x14; jne 0x145a6b; add esp, 0x118; pop ebx; ret; 
0x00145abd: adc eax, 0x14; jne 0x145aed; add esp, 0x11c; ret; 
0x00145fbe: adc eax, 0x14; jne 0x146004; add esp, 0x1c; ret; 
0x001499d1: adc eax, 0x14; jne 0x1499df; movzx eax, ax; add esp, 0x2c; ret; 
0x0014df61: adc eax, 0x14; jne 0x14df6d; add esp, 0x28; pop ebx; ret; 
0x00168e96: adc eax, 0x14; jne 0x168ea2; add esp, 0x28; pop ebx; ret; 
0x0016ebb4: adc eax, 0x14; jne 0x16ec2b; add esp, 0x18; pop ebx; ret; 
0x00171c1d: adc eax, 0x14; jne 0x171c37; add esp, 0x1c; ret; 
0x00171d49: adc eax, 0x14; jne 0x171d5f; add esp, 0x28; pop ebx; ret; 
0x00171de9: adc eax, 0x14; jne 0x171dff; add esp, 0x28; pop ebx; ret; 
0x0017211d: adc eax, 0x14; jne 0x172137; add esp, 0x1c; ret; 
0x001721a0: adc eax, 0x14; jne 0x1721b7; add esp, 0x18; pop ebx; ret; 
0x00172fa3: adc eax, 0x14; jne 0x172fae; add esp, 0x4c; ret; 
0x00174f8f: adc eax, 0x14; jne 0x174ff9; add esp, 0x18; pop ebx; ret; 
0x0017506f: adc eax, 0x14; jne 0x1750d9; add esp, 0x18; pop ebx; ret; 
0x00175326: adc eax, 0x14; jne 0x175364; add esp, 0x18; pop ebx; ret; 
0x001753b6: adc eax, 0x14; jne 0x1753f4; add esp, 0x18; pop ebx; ret; 
0x00175460: adc eax, 0x14; jne 0x175483; add esp, 0x18; pop ebx; ret; 
0x001754e8: adc eax, 0x14; jne 0x17551f; add esp, 0x18; pop ebx; ret; 
0x0017557c: adc eax, 0x14; jne 0x1755c4; add esp, 0x18; pop ebx; ret; 
0x00175d66: adc eax, 0x14; jne 0x175da4; add esp, 0x18; pop ebx; ret; 
0x00175df6: adc eax, 0x14; jne 0x175e34; add esp, 0x18; pop ebx; ret; 
0x00175e86: adc eax, 0x14; jne 0x175ec4; add esp, 0x18; pop ebx; ret; 
0x00175f16: adc eax, 0x14; jne 0x175f54; add esp, 0x18; pop ebx; ret; 
0x0017657d: adc eax, 0x14; jne 0x17658b; movzx eax, al; add esp, 0x1c; ret; 
0x001765cd: adc eax, 0x14; jne 0x1765db; movzx eax, al; add esp, 0x1c; ret; 
0x00176627: adc eax, 0x14; jne 0x176633; add esp, 0x18; pop ebx; ret; 
0x001766c7: adc eax, 0x14; jne 0x1766d3; add esp, 0x18; pop ebx; ret; 
0x0017b792: adc eax, 0x14; jne 0x17b7c4; add esp, 0x18; pop ebx; ret; 
0x0017d2c5: adc eax, 0x14; jne 0x17d2e1; add esp, 0x18; pop ebx; ret; 
0x0017d33f: adc eax, 0x14; jne 0x17d359; add esp, 0x18; pop ebx; ret; 
0x001800b8: adc eax, 0x14; jne 0x1800c4; add esp, 0x28; pop ebx; ret; 
0x0018292c: adc eax, 0x14; jne 0x182938; add esp, 0x18; pop ebx; ret; 
0x00185694: adc eax, 0x14; jne 0x18569f; add esp, 0x1c; ret; 
0x0018b69f: adc eax, 0x14; jne 0x18b6c7; add esp, 0x18; pop ebx; ret; 
0x0018b9e6: adc eax, 0x14; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0003c806: adc eax, 0x14; jne 0x3c81f; add esp, 0x98; pop ebx; ret; 
0x0003c9ab: adc eax, 0x14; jne 0x3c9ec; add esp, 0x28; pop ebx; ret; 
0x0003cd63: adc eax, 0x14; jne 0x3cd72; add esp, 0x128; pop ebx; ret; 
0x0003d2ee: adc eax, 0x14; jne 0x3d307; add esp, 0x98; pop ebx; ret; 
0x0003d35e: adc eax, 0x14; jne 0x3d377; add esp, 0x98; pop ebx; ret; 
0x0003d3d7: adc eax, 0x14; jne 0x3d3e5; add esp, 0x9c; ret; 
0x0003d855: adc eax, 0x14; jne 0x3d860; add esp, 0x1c; ret; 
0x0003fe7a: adc eax, 0x14; jne 0x3fe85; add esp, 0x1c; ret; 
0x00040087: adc eax, 0x14; jne 0x40092; add esp, 0x1c; ret; 
0x00040235: adc eax, 0x14; jne 0x40240; add esp, 0x2c; ret; 
0x00040337: adc eax, 0x14; jne 0x40342; add esp, 0x1c; ret; 
0x000403ba: adc eax, 0x14; jne 0x403c5; add esp, 0x1c; ret; 
0x00041358: adc eax, 0x14; jne 0x41394; add esp, 0x18; pop ebx; ret; 
0x000527e5: adc eax, 0x14; jne 0x527f0; add esp, 0x2c; ret; 
0x0005a003: adc eax, 0x14; jne 0x5a017; add esp, 0x1c; ret; 
0x00060683: adc eax, 0x14; jne 0x60692; add esp, 0x1018; pop ebx; ret; 
0x00060702: adc eax, 0x14; jne 0x6070e; add esp, 0x78; pop ebx; ret; 
0x00090988: adc eax, 0x14; jne 0x90993; add esp, 0x2c; ret; 
0x00095384: adc eax, 0x14; jne 0x95390; add esp, 0x28; pop ebx; ret; 
0x00095422: adc eax, 0x14; jne 0x9542e; add esp, 0x28; pop ebx; ret; 
0x000966b8: adc eax, 0x14; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b18: adc eax, 0x14; jne 0x96b23; add esp, 0x2c; ret; 
0x00097044: adc eax, 0x14; jne 0x9704f; add esp, 0x2c; ret; 
0x00097494: adc eax, 0x14; jne 0x9749f; add esp, 0x2c; ret; 
0x0009a1b1: adc eax, 0x14; jne 0x9a1ff; add esp, 0x38; pop ebx; ret; 
0x0009a41f: adc eax, 0x14; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a68b: adc eax, 0x14; jne 0x9a6b7; add esp, 0x2c; ret; 
0x0009a8cb: adc eax, 0x14; jne 0x9a8f7; add esp, 0x18; pop ebx; ret; 
0x0009c561: adc eax, 0x14; jne 0x9c56d; add esp, 0x28; pop ebx; ret; 
0x0009dab9: adc eax, 0x14; jne 0x9dac5; add esp, 0x28; pop ebx; ret; 
0x0009e019: adc eax, 0x14; jne 0x9e025; add esp, 0x38; pop ebx; ret; 
0x000c35e8: adc eax, 0x14; jne 0xc3614; add esp, 0x18; pop ebx; ret; 
0x000d7b75: adc eax, 0x14; jne 0xd7b8f; add esp, 0x28; pop ebx; ret; 
0x000d7bf9: adc eax, 0x14; jne 0xd7c04; add esp, 0x1c; ret; 
0x000d7c43: adc eax, 0x14; jne 0xd7c4f; add esp, 0x38; pop ebx; ret; 
0x000d7ca5: adc eax, 0x14; jne 0xd7cb1; add esp, 0x48; pop ebx; ret; 
0x000d917e: adc eax, 0x14; jne 0xd91c2; add esp, 0x28; pop ebx; ret; 
0x000d94f2: adc eax, 0x14; jne 0xd9510; add esp, 0x38; pop ebx; ret; 
0x000e232d: adc eax, 0x14; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47ad: adc eax, 0x14; jne 0xe47b8; add esp, 0x1c; ret; 
0x000e48e1: adc eax, 0x14; jne 0xe491a; add esp, 0x28; pop ebx; ret; 
0x000e4acf: adc eax, 0x14; jne 0xe4adb; add esp, 0x28; pop ebx; ret; 
0x000e58a5: adc eax, 0x14; jne 0xe58b4; add esp, 0xe8; pop ebx; ret; 
0x000e5917: adc eax, 0x14; jne 0xe5926; add esp, 0xe8; pop ebx; ret; 
0x000e59bb: adc eax, 0x14; jne 0xe59ca; add esp, 0xe8; pop ebx; ret; 
0x000ec8da: adc eax, 0x14; jne 0xec8ef; add esp, 0x1c; ret; 
0x000edbe7: adc eax, 0x14; jne 0xedc06; add esp, 0x78; pop ebx; ret; 
0x000f0697: adc eax, 0x14; jne 0xf06b6; add esp, 0x78; pop ebx; ret; 
0x000f1467: adc eax, 0x14; jne 0xf1486; add esp, 0x78; pop ebx; ret; 
0x000f3f07: adc eax, 0x14; jne 0xf3f26; add esp, 0x78; pop ebx; ret; 
0x000f4ce7: adc eax, 0x14; jne 0xf4d06; add esp, 0x78; pop ebx; ret; 
0x00024ac6: adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x000254c3: adc eax, 0x194f0500; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024f63: adc eax, 0x1eaf0500; and dword ptr [eax], eax; lea eax, [eax - 0x680b4]; ret; 
0x00024f43: adc eax, 0x1ecf0500; and dword ptr [eax], eax; lea eax, [eax - 0x680ac]; ret; 
0x00024b33: adc eax, 0x22df0500; and dword ptr [eax], eax; mov edx, dword ptr [eax + 0x118]; test edx, edx; je 0x24b45; ret; 
0x00026f76: adc eax, 0x241c8900; call edi; 
0x00026027: adc eax, 0x241c8900; call esi; 
0x0002619e: adc eax, 0x241c8900; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00026848: adc eax, 0x241c8900; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0002f338: adc eax, 0x24348900; call ebx; 
0x000bec1a: adc eax, 0x29c0bc0f; ret 0x860f; 
0x001523c7: adc eax, 0x2efffff6; lea esi, [esi]; xor eax, eax; ret; 
0x0013c424: adc eax, 0x3900768d; sal dword ptr [eax + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x0017d2cb: adc eax, 0x5b18c483; ret; 
0x0007eea2: adc eax, 0x5b20c483; pop esi; pop edi; ret; 
0x0012c5d1: adc eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x00082821: adc eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000b12c8: adc eax, 0x5bfffffe; ret; 
0x00093bac: adc eax, 0x68; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008caec: adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008cb23: adc eax, 0x78; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0008d4ef: adc eax, 0x78; pop ebx; ret; 
0x0002f383: adc eax, 0x7a8f0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0008cbc5: adc eax, 0x7c; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8cbd8; ret; 
0x0008cba7: adc eax, 0x7c; pop ebx; ret; 
0x000ad09c: adc eax, 0x8300768d; ret 0x8b20; 
0x00028343: adc eax, 0x8301c083; ret 0x8901; 
0x0013c5da: adc eax, 0x8303e8c1; call 0x1564de5; mov eax, 2; ret; 
0x000a6934: adc eax, 0x83e87401; ret 0x8b01; 
0x00025e9b: adc eax, 0x86f0300; mov dword ptr [esp], ebp; call esi; 
0x000dc3c7: adc eax, 0x89000002; ret; 
0x0008e9d2: adc eax, 0x8908418b; ret; 
0x0007dc85: adc eax, 0x89ffffff; ret; 
0x0007217a: adc eax, 0x8d8b0000; call 0x8a07217e; ret; 
0x0019d39e: adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00191755: adc eax, 0xc381ffff; mov eax, 0x3000430; sbb al, 0x8b; jmp ebx; 
0x00025fd3: adc eax, 0xe3f0500; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00025fb3: adc eax, 0xe5f0500; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000d6b4a: adc eax, 0xf390e8b; jne 0xd6ca0; pop edi; pop esi; ret; 
0x001519ba: adc eax, 0xf883c931; add dh, byte ptr [ebp + 6]; mov eax, ecx; ret; 
0x000a24bc: adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ah, dh; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000a2499: adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; push ebx; stc; call dword ptr [eax - 0x18]; 
0x000a264d: adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebp; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0003ff59: adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000eeb0b: adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f238b: adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0019d5ee: adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00066376: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x58f7b], cl; dec dword ptr [edi]; mov dh, 0xdb; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x001716cc: adc eax, dword ptr [eax]; add byte ptr [ecx - 0x7e7c723b], cl; je 0x1716cf; call dword ptr [ecx + 0x6a]; 
0x000be44c: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafd9: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be46c: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baff9: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be3e9: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf86: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000f8219: adc eax, dword ptr [eax]; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xf8230; ret; 
0x000be42d: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafba: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be48e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb01b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4ae: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb03b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4ce: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb05b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008ec11: adc eax, dword ptr [ebp - 0x74cd8b2e]; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008e97c: adc eax, dword ptr [ebp - 0x7ce08a2e]; pushal; or dh, bh; xor eax, eax; ret; 
0x00168c5b: adc eax, dword ptr [ebx + 0x488b0cec]; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00025c8a: adc eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0009871d: adc eax, dword ptr [ebx + 0x5e5b24c4]; ret; 
0x0016ba00: adc eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00172598: adc eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0009e608: adc eax, dword ptr [ebx - 0x177c0f20]; add ecx, eax; call 0x1ca6919; mov dword ptr [edx + 0x388], eax; ret; 
0x001a550c: adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x00084083: adc eax, dword ptr [ecx + 0x824c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000b1026: adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000b1036: adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000b1046: adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000b1056: adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000b0fe2: adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b1002: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b1012: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b0ff2: adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b1022: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b1032: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b1042: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b1052: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b0fd2: adc eax, dword ptr [ecx]; pop ebx; ret; 
0x000a468f: adc eax, dword ptr [ecx]; ret 0x1089; 
0x000b76a6: adc eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000b76b6: adc eax, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000b7642: adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000b8996: adc eax, dword ptr [edi]; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000b72c9: adc eax, dword ptr [edi]; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b7309: adc eax, dword ptr [edi]; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b7329: adc eax, dword ptr [edi]; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000b72ea: adc eax, dword ptr [edi]; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b76a2: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b734b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b76b2: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b736b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b738b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b72b6: adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000b7ccf: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e2f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000bd842: adc eax, dword ptr [edx + 5]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b668f: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000b67ef: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000b7cef: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e4f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000bd862: adc eax, dword ptr [edx + 6]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b66af: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000b680f: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000b7d0f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e6f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000bd882: adc eax, dword ptr [edx + 7]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b66cf: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b682f: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b7b9e: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e8f: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b657e: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b684f: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b620b: adc eax, dword ptr [edx]; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b32c6: adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000b3506: adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000b50f1: adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000ba909: adc eax, dword ptr [edx]; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ba929: adc eax, dword ptr [edx]; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b33d9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b3519: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000aeff9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000af139: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000bda52: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3419: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b3559: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af039: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000af179: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3309: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b3579: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b5129: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b0d39: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef49: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b1cb2: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000af199: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000ba949: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ba969: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001a5ba6: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd687: adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d01: adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef06: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000b1d2b: adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000af126: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000b33fa: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b353a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000af01a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000af15a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b343b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b359b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af05b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1bb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b345b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35bb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af07b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000af1db: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b347b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35db: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af09b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b1c5e: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000af1fb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b5166: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bd6da: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d76: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ba82a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b7cc6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e26: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b6686: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b67e6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7ce6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e46: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b66a6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b6806: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7d06: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e66: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b66c6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b6826: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7b95: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e86: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6575: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b6846: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00059d28: adc eax, edi; add byte ptr [edi], ch; jbe 0x59cb9; ret 0x40c7; 
0x00145dc1: adc ebp, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x000be5b2: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb12f: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5d2: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb14f: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000fa7e4: adc ebx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x0008a1dc: adc ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0016325e: adc ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000b8ae0: adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d6c8c: adc ebx, dword ptr [edi + 0x5e]; ret; 
0x000b745f: adc ebx, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000b8b5f: adc ebx, dword ptr [edi + 0xf]; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b747f: adc ebx, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x000399a9: adc ecx, 0x3e; stc; call dword ptr [eax - 0x18]; 
0x00065378: adc ecx, dword ptr [eax + 0x5f5e5b08]; ret; 
0x000be492: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb01f: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4b2: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb03f: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4d2: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb05f: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005c82b: adc ecx, dword ptr [ebp - 0x700b686c]; clc; call dword ptr [edx + 0x51]; 
0x000b8653: adc ecx, dword ptr [ebp - 0x7af0ec81]; mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x00035dc3: adc ecx, dword ptr [ebp - 0x7affd98c]; sal byte ptr [ebp + 0x2a], 0x83; ret; 
0x0013cc8b: adc ecx, dword ptr [ebp - 0x7cf3f7b4]; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0003315a: adc ecx, dword ptr [ebx + 0x5b208354]; mov eax, edx; ret; 
0x00090aec: adc ecx, dword ptr [ebx - 0x11f7cff]; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0008f6f9: adc ecx, dword ptr [ecx + 0x3e8c1d0]; je 0x8f730; mov eax, edi; call dword ptr gs:[0x10]; 
0x000715f9: adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x00084385: adc ecx, dword ptr [ecx - 0x3b7cfbad]; add al, 0x5b; pop esi; ret; 
0x0008bbd4: adc ecx, dword ptr [ecx - 0x76ebdbb4]; push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000b8a2f: adc ecx, dword ptr [edi + 5]; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000b734f: adc ecx, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000b736f: adc ecx, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000b738f: adc ecx, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x0008d04c: adc ecx, dword ptr [edi]; add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x00147aed: adc ecx, dword ptr [edi]; mov dh, 0x53; add dword ptr [ecx - 0x72ebdbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00142284: adc ecx, dword ptr [edi]; mov edi, 0x39fe735c; ret; 
0x000b8656: adc ecx, dword ptr [edi]; test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x0008f655: adc ecx, dword ptr [edi]; xchg esp, eax; ret 0xb60f; 
0x0008fd95: adc ecx, dword ptr [edi]; xchg esp, eax; ret 0xc689; 
0x000b343f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b359f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000af05f: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000af1bf: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000b345f: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35bf: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000af07f: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000af1df: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000b347f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35df: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000af09f: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b1c62: adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000af1ff: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b516a: adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bdaae: adc ecx, dword ptr [edx + 8]; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000bd6de: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d7a: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000ba82e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0015360f: adc edi, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x0013de67: adc edi, dword ptr [ecx]; ret 0x6474; 
0x0010ee41: adc edi, ecx; inc dword ptr [ecx]; int1; jmp ecx; 
0x00191b52: adc edi, edi; inc dword ptr [ecx + 0x42ffbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003ffef: adc edx, 0; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00025349: adc edx, 0; neg edx; ret; 
0x0011f62e: adc edx, 0; ret; 
0x000be615: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb18f: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be675: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1d2: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6a5: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1f2: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5f2: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb16f: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be646: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1b3: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b8b7f: adc edx, dword ptr [edi + 0x10]; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b74c2: adc edx, dword ptr [edi + 0x10]; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b7502: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b7522: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b74e3: adc edx, dword ptr [edi + 0x10]; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b749f: adc edx, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0008c941: adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x000b6b18: adc edx, eax; or al, 0; add ecx, 0x10f1a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00160e2b: adc esi, 0x71; stc; call dword ptr [eax - 0x18]; 
0x0003badc: adc esi, dword ptr [ebp + 0x11]; fadd st(0); add esp, 8; pop ebx; ret; 
0x0008cf0a: adc esi, dword ptr [ebp + 0x43]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000995e3: adc esi, dword ptr [ebp + 0xa]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0009990b: adc esi, dword ptr [ebp + 0xa]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0010acac: adc esi, dword ptr [ecx]; rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x00150969: adc esi, dword ptr [esi + ebp*8]; dec dword ptr [ebp - 0x17acff8a]; mov dword ptr [0x81000323], eax; ret; 
0x000814d8: adc esi, esi; ret 0x7502; 
0x00081436: adc esi, esi; ret 0xf08; 
0x001384d0: adc esi, esi; ret 0xf20; 
0x0011a287: adc esp, 0x14; stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x000a3b6d: adc esp, 0x53; stc; call dword ptr [eax - 0x18]; 
0x001739d3: adc esp, ebp; call dword ptr [eax - 0x73]; 
0x0013a70b: add ah, 0; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x0017d242: add ah, 0x76; stc; call dword ptr [eax - 0x18]; 
0x000a5059: add ah, 0xa9; stc; call dword ptr [eax + 0x68]; 
0x0009597c: add ah, ah; stc; call dword ptr [ebp + 0x57]; 
0x00064f06: add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x0006478e: add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x00064008: add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x00063b13: add ah, al; mov eax, dword ptr [esp + 0x4c]; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00106777: add ah, bh; dec dword ptr [ecx]; retf 0x5489; ret; 
0x0005a94a: add ah, byte ptr [eax]; je 0x5a958; add esp, 0xc; ret; 
0x00077c1a: add ah, byte ptr [eax]; je 0x77c28; add esp, 0xc; ret; 
0x0013262b: add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000b7cc7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e27: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b6687: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b67e7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7ce7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e47: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b66a7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b6807: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7d07: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e67: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b66c7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b6827: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7b96: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e87: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6576: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b6847: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b343c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b359c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000af05c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000af1bc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000b345c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35bc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000af07c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000af1dc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000b347c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35dc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000af09c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b1c5f: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000af1fc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b5167: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bd6db: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d77: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000ba82b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x001483fc: add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x000bfe30: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bfe99: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000b34e3: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000af103: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b7265: add ah, byte ptr [esi - 0x77]; js 0x5e6a74c5; pop ebx; ret; 
0x00164d99: add ah, dh; call dword ptr [ebp + 0x6a]; 
0x000e718f: add ah, dh; mov eax, edx; call dword ptr gs:[0x10]; 
0x000c0ad6: add al, 0; add al, ch; ret 0xf626; 
0x000a9ed5: add al, 0; add al, ch; ret; 
0x0015d5b1: add al, 0; add bh, bh; je 0x15d5db; or al, 0x55; call edi; 
0x000a19d9: add al, 0; add bl, ch; ret 0x9066; 
0x000e8aa6: add al, 0; add byte ptr [eax - 0x73], dl; or dword ptr [eax], 0xffffffaf; stc; call dword ptr [eax - 0x18]; 
0x0014b791: add al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [edi + edi*4], -7; call dword ptr [eax - 0x18]; 
0x00049873: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + eax*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x0004979a: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, eax; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0009eb40: add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0008ec9c: add al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x00180e0b: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x1deb; 
0x00055038: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00111d88: add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x001829f5: add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0009dcf7: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00023002: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x0011d8b4: add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001a498e: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x000d6f21: add al, 0; add byte ptr [eax], al; ret; 
0x001682c2: add al, 0; add byte ptr [ebp - 0x68d6a7d], cl; call dword ptr [eax - 0x18]; 
0x001219c3: add al, 0; add byte ptr [ebp - 0x6a53f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016fd0e: add al, 0; add byte ptr [ebp - 0x74d7dbb4], cl; push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x000a4171: add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x00142821: add al, 0; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x00170df3: add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x00023460: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00059dcd: add al, 0; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a1c77: add al, 0; add byte ptr [ebx - 0x14efdb94], cl; jnp 0x59952cce; add al, 0xf6; ret; 
0x0015461d: add al, 0; add byte ptr [ebx - 0x287872e8], cl; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x00057a9f: add al, 0; add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x0011a833: add al, 0; add byte ptr [ebx - 0x47dfdba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0017c7dc: add al, 0; add byte ptr [ebx - 0x4c72f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x00031d90: add al, 0; add byte ptr [ebx - 0x69934474], cl; idiv edi; add ecx, ebx; jmp ecx; 
0x00122b33: add al, 0; add byte ptr [ebx - 0x7c72f714], al; push ebp; popal; stc; call dword ptr [eax + 0x55]; 
0x0005007e: add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x00130818: add al, 0; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000ee793: add al, 0; add byte ptr [ecx - 0x46f7b], cl; dec dword ptr [ebx + 0x458b084d]; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0012750f: add al, 0; add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; 
0x00136b3f: add al, 0; add byte ptr [ecx], al; call eax; 
0x0006fda2: add al, 0; add byte ptr [ecx], al; ret; 
0x001427f3: add al, 0; add byte ptr [ecx], bh; ret 0x1988; 
0x001735d0: add al, 0; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00065905: add al, 0; add byte ptr [ecx], bh; ret; 
0x000a74c7: add al, 0; add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x00139b6b: add al, 0; add byte ptr [ecx], ch; ret 0xc031; 
0x00049059: add al, 0; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b722b: add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00132aec: add al, 0; add byte ptr [edx], al; call eax; 
0x00081c85: add al, 0; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00087c35: add al, 0; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x000ee1eb: add al, 0; add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f52eb: add al, 0; add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00109e6a: add al, 0; add dh, dh; ret 0xf20; 
0x001492f8: add al, 0; add dh, dh; ret; 
0x0013a703: add al, 0; add eax, 0xfc70f; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x0018c049: add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018da43: add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018daa8: add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0003cee3: add al, 0; je 0x3cf00; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x000a9846: add al, 0; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000a9786: add al, 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000e9bb1: add al, 0; or byte ptr [edi], 0xa3; ret 0x830f; 
0x001487f5: add al, 0x1a; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x0009e062: add al, 0x1b; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 8]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x00054174: add al, 0x24; add eax, 0xd; add esp, 4; jmp eax; 
0x00054466: add al, 0x24; add esp, 0xc; ret; 
0x0003bd13: add al, 0x24; add esp, 4; ret; 
0x0003ba93: add al, 0x24; add esp, 8; ret; 
0x00181bfa: add al, 0x24; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001718de: add al, 0x24; call dword ptr [edx + 0x10]; 
0x00154668: add al, 0x24; call eax; 
0x0009e3ca: add al, 0x24; call esi; 
0x00054499: add al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x000337e7: add al, 0x24; mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x337f9; call eax; 
0x0003bc86: add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0012d501: add al, 0x24; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000fbe3d: add al, 0x24; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f760]; jmp eax; 
0x000fbd5f: add al, 0x24; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x00052931: add al, 0x24; ret; 
0x000780e8: add al, 0x29; fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x00144a1c: add al, 0x29; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x0005d1ed: add al, 0x29; fmul dword ptr [ebx - 0x8b63]; call dword ptr [eax - 0x75]; 
0x00077dd0: add al, 0x29; fnsave dword ptr [ebx + ecx*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x000873ef: add al, 0x29; ret 0x5052; 
0x0016e510: add al, 0x29; ret 0xd285; 
0x00180a24: add al, 0x29; ret 0xea39; 
0x000815cc: add al, 0x29; ret 0xfac1; 
0x000312d6: add al, 0x29; ret; 
0x000eed73: add al, 0x29; ror byte ptr [ecx - 0x49f7b], 1; call dword ptr [eax + 0x6a]; 
0x001324b3: add al, 0x2b; inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x00034d7c: add al, 0x2b; inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001808b5: add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x00182543: add al, 0x2b; inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x0016add5: add al, 0x2e; lea esi, [esi]; nop; mov eax, 1; ret; 
0x00172626: add al, 0x30; add byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0007e461: add al, 0x31; pop esi; pop edi; pop ebp; ret; 
0x000417e0: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0008aeb3: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0016bd42: add al, 0x31; ret 0xd889; 
0x00150d63: add al, 0x31; rol byte ptr [ebx + 0x108704c0], cl; cmp edx, 1; jg 0x150d78; ret; 
0x000a6ece: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xd14], dl; ret; 
0x000a6eae: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xe34], dl; ret; 
0x0012f0c3: add al, 0x31; ror byte ptr [ebx + 0x3980044a], 0; je 0x12f0d0; ret; 
0x000d6f63: add al, 0x31; ror byte ptr [ebx + 0x75c9850a], 0x1e; ret; 
0x000dc0d2: add al, 0x31; sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00109f12: add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00023266: add al, 0x31; sar byte ptr [ebx + 1], cl; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0014454c: add al, 0x37; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a93fe: add al, 0x39; fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x000a93ba: add al, 0x39; fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x000d996a: add al, 0x39; ret 0x45c7; 
0x0005f158: add al, 0x39; ret 0x4d0f; 
0x000928e7: add al, 0x39; ret 0x6f72; 
0x00028d93: add al, 0x39; ret 0x840f; 
0x001a9565: add al, 0x39; ret 0x850f; 
0x000d0d19: add al, 0x39; ret 0x8f0f; 
0x00028cd6: add al, 0x39; ret 0x9173; 
0x001842c9: add al, 0x39; ret 0x9174; 
0x0018080a: add al, 0x39; ret 0xc919; 
0x000c6c5c: add al, 0x39; ret 0xee72; 
0x000fd1f4: add al, 0x39; ret 0xf775; 
0x00047b88: add al, 0x39; ret; 
0x0008b7d5: add al, 0x39; retf 0x1673; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000c2595: add al, 0x39; retf 0x474; test edx, edx; jne 0xc2590; ret; 
0x00054e28: add al, 0x39; sal dword ptr [ebp - 0xd], 0x8b; push ebp; or al, 0xf7; ret 0; 
0x000f8697: add al, 0x3b; push ebx; add al, 0x74; xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000f756c: add al, 0x3c; aas; jne 0xf7589; mov eax, 1; ret; 
0x00159024: add al, 0x3c; jg 0x159037; inc esp; ret 0x8489; 
0x0013c7ee: add al, 0x3e; pop ebx; pop esi; pop edi; ret; 
0x000fabc6: add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000341d9: add al, 0x50; and eax, 0x1000; ret; 
0x000341a9: add al, 0x50; and eax, 0x100; ret; 
0x00034179: add al, 0x50; and eax, 0x2000; ret; 
0x000340c9: add al, 0x50; and eax, 0x200; ret; 
0x00034129: add al, 0x50; and eax, 0x4000; ret; 
0x00034049: add al, 0x50; and eax, 0x400; ret; 
0x000340f9: add al, 0x50; and eax, 0x8000; ret; 
0x00034099: add al, 0x50; and eax, 0x800; ret; 
0x00034269: add al, 0x50; and eax, 1; ret; 
0x00034079: add al, 0x50; and eax, 2; ret; 
0x00034159: add al, 0x50; and eax, 4; ret; 
0x00034029: add al, 0x50; and eax, 8; ret; 
0x00168c61: add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00168dfa: add al, 0x50; call dword ptr [edx + 0x10]; 
0x0017196c: add al, 0x50; call dword ptr [edx + 0x14]; 
0x00151380: add al, 0x50; call edi; 
0x0017586f: add al, 0x50; push dword ptr [esp + 0x1c]; call 0x1756e0; add esp, 0x1c; ret; 
0x00059eb9: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x65310; add esp, 0x1c; ret; 
0x0007edc9: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71590; add esp, 0x1c; ret; 
0x00024dcd: add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008869e: add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0017565c: add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00175695: add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x00081cec: add al, 0x50; push edx; push esi; call ecx; 
0x00127ea9: add al, 0x51; push 3; push ebx; call edx; 
0x0016fd17: add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x00087d25: add al, 0x51; push eax; push esi; call edx; 
0x001727d1: add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x00175d57: add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x00175317: add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x000826cc: add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0008890a: add al, 0x52; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0016ae39: add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0016ae74: add al, 0x52; push ebx; call dword ptr [eax]; 
0x00169080: add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016923f: add al, 0x53; call dword ptr [eax]; 
0x0007ce72: add al, 0x53; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007ab53: add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00077fb3: add al, 0x53; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0017572f: add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x000419d3: add al, 0x53; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000861ce: add al, 0x55; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00038984: add al, 0x56; or byte ptr [ecx + edx - 0x7d], dh; ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0007c7b0: add al, 0x56; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00085f8c: add al, 0x56; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0007e2f9: add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024e82: add al, 0x56; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000860fc: add al, 0x56; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0016eda5: add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0007bf42: add al, 0x56; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007e638: add al, 0x56; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x001727df: add al, 0x57; call dword ptr [eax + 0x10]; 
0x00127e51: add al, 0x57; push 0; push ebx; call esi; 
0x00127e65: add al, 0x57; push 1; push ebx; call esi; 
0x00127e78: add al, 0x57; push 2; push ebx; call esi; 
0x0007e20a: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007ae93: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00169590: add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x001219c7: add al, 0x5a; stc; jmp dword ptr [ebp - 0x75]; 
0x00121e30: add al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00081404: add al, 0x5b; pop esi; jmp eax; 
0x0014558c: add al, 0x5b; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00184987: add al, 0x5b; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x00039b3f: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0005a731: add al, 0x5b; pop esi; pop edi; ret; 
0x00025f63: add al, 0x5b; pop esi; ret; 
0x00024fd6: add al, 0x5b; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00089375: add al, 0x5b; ret; 
0x0019e93b: add al, 0x5d; pop ebx; ret; 
0x0019e942: add al, 0x5e; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0008eb27: add al, 0x5e; pop edi; ret; 
0x001941e0: add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001922da: add al, 0x5f; call 0x182d19; add ebx, 0x427af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019028a: add al, 0x5f; call 0x182d19; add ebx, 0x4457f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e28a: add al, 0x5f; call 0x182d19; add ebx, 0x462ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00132550: add al, 0x5f; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x000954dc: add al, 0x5f; pop ebp; ret; 
0x000b50c3: add al, 0x5f; pop ebx; ret; 
0x000b7289: add al, 0x5f; pop esi; pop ebx; ret; 
0x000b339c: add al, 0x5f; ret; 
0x0011d95a: add al, 0x65; call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x0013b9eb: add al, 0x65; mov dword ptr [ebp], edx; mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0008cb20: add al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x000dce4a: add al, 0x66; cmp esi, 0x840f0400; ret; 
0x001097c3: add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000b33a7: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000b34e7: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000bd76a: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefd7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000af107: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b7c69: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b7dc9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b6629: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b6789: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00174f4d: add al, 0x66; nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0013a734: add al, 0x66; rol eax, 8; ret; 
0x0007bec2: add al, 0x6a; adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x0008ac3b: add al, 0x6a; add byte ptr [edx], ch; push esi; call dword ptr [ebp + 0x2c]; 
0x0013e622: add al, 0x6a; add dword ptr [ebx - 0x72e7dbbc], ecx; sbb ah, 0x3c; stc; call dword ptr [eax + 0x55]; 
0x000ec88c: add al, 0x6a; add eax, 0x34818d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0005f7ba: add al, 0x6a; add eax, 0x34838d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00134f02: add al, 0x6a; add eax, 0x65f3978d; stc; call dword ptr [edx + 0x50]; 
0x001357e5: add al, 0x6a; add eax, 0x6629808d; stc; call dword ptr [eax - 0x75]; 
0x00134688: add al, 0x6a; add eax, 0x664a808d; stc; call dword ptr [eax - 0x75]; 
0x00136e04: add al, 0x6a; add eax, 0x7e4c868d; stc; call dword ptr [eax - 0x75]; 
0x00136f0c: add al, 0x6a; add eax, 0x7e4c878d; stc; call dword ptr [eax - 0x75]; 
0x001437a8: add al, 0x6a; add eax, 0x8d8134ff; xor byte ptr [esp + eax*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000ece36: add al, 0x6a; add eax, 0xaf70838d; stc; call dword ptr [eax - 0x73]; 
0x00134c40: add al, 0x6a; add eax, 0xb844808d; stc; call dword ptr [eax - 0x75]; 
0x00135898: add al, 0x6a; add eax, 0xb87c808d; stc; call dword ptr [eax + 0x6a]; 
0x00107a6c: add al, 0x6a; add eax, 0xcc03848d; or bh, cl; call dword ptr [eax - 0x73]; 
0x00174e9f: add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00174e9f: add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0017689f: add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x0014c365: add al, 0x6a; or byte ptr [ebp - 0x18], dl; and cl, byte ptr [ebx + 0x4b8bfff5]; sbb byte ptr [ebx + 0x478910c4], al; adc al, 0x89; ret 0xc985; 
0x000a9938: add al, 0x6b; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0007de5d: add al, 0x73; adc byte ptr [ebp + 0x889044a], cl; mov eax, dword ptr [edx]; ret; 
0x0007dc9f: add al, 0x73; push cs; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x00029662: add al, 0x74; adc eax, 0x8301c083; ret 0x8901; 
0x0009c0ee: add al, 0x74; fmul dword ptr [ebp - 0x666c379]; call dword ptr [eax - 0x73]; 
0x000f82f9: add al, 0x74; push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00028a82: add al, 0x74; sbb byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00029082: add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00065af9: add al, 0x74; sbb ecx, dword ptr [ebx - 0x5af7b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x00169d3a: add al, 0x74; stc; call dword ptr [eax - 0x73]; 
0x0009fd90: add al, 0x74; sub eax, 0x8d04ec83; test dword ptr [eax + 0x52], ecx; stc; call dword ptr [eax + 0x53]; 
0x00077d21: add al, 0x74; xor al, byte ptr [ebx + 0x1b804c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000f869a: add al, 0x74; xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x001a2933: add al, 0x75; dec esi; add eax, 0xb; ret; 
0x00137149: add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000d1bc5: add al, 0x75; pop ds; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x0017b059: add al, 0x75; test byte ptr [ebx - 0x74c7dba4], cl; inc esi; or byte ptr [ecx], al; ret; 
0x001a068b: add al, 0x76; ret; 
0x00034305: add al, 0x7f; setbe al; ret; 
0x0012f0c8: add al, 0x80; cmp dword ptr [eax], eax; je 0x12f0d0; ret; 
0x0008f315: add al, 0x80; int1; add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0009e842: add al, 0x80; int1; call dword ptr [edx + 0x51]; 
0x0002742c: add al, 0x80; stc; call dword ptr [eax - 0x73]; 
0x000d85ed: add al, 0x81; les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00085c23: add al, 0x83; and bh, cl; ret; 
0x000dd854: add al, 0x83; call 0xf17148b; xchg dword ptr [eax - 0x7c00000a], edx; ret; 
0x0005f92c: add al, 0x83; clc; sbb dword ptr [edi + 0xe], esi; mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x0008ccde: add al, 0x83; cmp byte ptr [ecx], al; je 0x8cce8; ret; 
0x0009aef0: add al, 0x83; cmp dword ptr [edx], eax; je 0x9aeb2; pop ebx; pop esi; ret; 
0x0016897f: add al, 0x83; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x0016955a: add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0005b6da: add al, 0x83; in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00166f50: add al, 0x83; in al, dx; or byte ptr [ebp - 0x68d907d], cl; call dword ptr [eax + 0x55]; 
0x0016a334: add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x001762f3: add al, 0x83; inc eax; adc al, 4; mov eax, 1; ret; 
0x00093a4f: add al, 0x83; inc edx; add al, 1; add esp, 0xc; ret; 
0x00086b9c: add al, 0x83; jp 0x86bd8; jmp dword ptr [ebp - 0x75]; 
0x00034d7f: add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00174ff2: add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x0002518b: add al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00146052: add al, 0x83; les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0002fc0d: add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000a4f3b: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0003e921: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008a4dc: add al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00078699: add al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00078549: add al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016919f: add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00196ccd: add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x00193bcd: add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x000c51f6: add al, 0x83; mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x000c02ec: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000c02ef: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x0008eab3: add al, 0x83; pushal; or bl, bh; xor eax, eax; ret; 
0x0016f2e0: add al, 0x83; rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00180062: add al, 0x83; ret 0x105; 
0x000414cc: add al, 0x83; ret 0x3904; 
0x001ad987: add al, 0x83; ret 0x3908; 
0x0013cdb0: add al, 0x83; ret 0x8108; 
0x0002ef66: add al, 0x83; ret 0x8301; 
0x0005b7c2: add al, 0x83; ret 0x8304; 
0x000d6ff2: add al, 0x83; ret 0x8310; 
0x000bffc3: add al, 0x83; ret 0x8404; 
0x000539ca: add al, 0x83; ret 0x8501; 
0x000c4582: add al, 0x83; ret 0x8504; 
0x00135ae5: add al, 0x83; ret 0x8518; 
0x00046ce3: add al, 0x83; ret 0x8901; 
0x001634ea: add al, 0x83; ret 0x8902; 
0x00052f64: add al, 0x83; ret 0x8904; 
0x000bfd51: add al, 0x83; ret 0x8b04; 
0x000534ed: add al, 0x83; ret 0x8d04; 
0x000e34c1: add al, 0x83; ret 0x930; 
0x001a678b: add al, 0x83; ret 0xd304; 
0x000fcc42: add al, 0x83; ret 0xe804; 
0x00030d53: add al, 0x83; ret; 
0x000c2592: add al, 0x83; rol byte ptr [ecx + edi], 0xca; je 0xc259e; test edx, edx; jne 0xc2590; ret; 
0x0005e4e1: add al, 0x83; rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x00029088: add al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0002dd2f: add al, 0x83; rol byte ptr [edx], 0x39; ret 0x820f; 
0x000ad097: add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000fc6ef: add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x0014c3a4: add al, 0x83; ror byte ptr [eax], 0x83; ret 0x8908; 
0x00168574: add al, 0x83; shr byte ptr [eax], 0xff; jo 0x16858f; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00031c7f: add al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x001633d6: add al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000d6f8d: add al, 0x85; leave; jne 0xd6f70; add eax, 1; ret; 
0x00026c3a: add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x0017c7d6: add al, 0x85; ror byte ptr [edi], 0x84; sub dword ptr [eax + eax], eax; add byte ptr [ebx - 0x4c72f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x00165538: add al, 0x85; ror byte ptr [edi], 0x85; ret 1; 
0x0005daaa: add al, 0x85; ror byte ptr [edi], 0x9f; ret; 
0x000a1398: add al, 0x85; ror byte ptr [edi], cl; test byte ptr [edi - 0x72fffffd], dl; pop edx; or dh, dh; ret; 
0x00096187: add al, 0x85; sal byte ptr [ebp + 0xc], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0012896f: add al, 0x85; sal byte ptr [ebp + 4], cl; ret; 
0x0012894b: add al, 0x85; sal byte ptr [ebp + 8], cl; ret; 
0x0014d482: add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x00146c24: add al, 0x85; sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x000d7079: add al, 0x85; sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x000c2599: add al, 0x85; sal byte ptr [ebp - 0xe], cl; ret; 
0x000423d3: add al, 0x85; sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x00123f8f: add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0009805e: add al, 0x85; sar byte ptr [eax + 0xd], 0x89; xor ah, 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x000e4b5f: add al, 0x85; sar byte ptr [ecx + 0x64], cl; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000f9d81: add al, 0x85; test byte ptr [edi], -0x7c; mov edx, 0x89000000; ret; 
0x00150d68: add al, 0x87; adc byte ptr [ebx + 0x87f01fa], al; ret; 
0x000c00af: add al, 0x88; adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000aefc6: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000b3396: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0005ac4c: add al, 0x88; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000544d7: add al, 0x89; adc al, 0x24; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x000715f7: add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x001718dc: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0008d71e: add al, 0x89; add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000a9857: add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000cad7c: add al, 0x89; add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000bd74c: add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000aefc9: add al, 0x89; clc; pop edi; ret; 
0x001184ca: add al, 0x89; dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0x11f8836d], cl; call dword ptr [edx - 0x73]; 
0x00139edc: add al, 0x89; dec edi; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x00175ca2: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00175c7a: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016adca: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016adf2: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0016a7f5: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0013c90e: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00130c47: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0008ca08: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0010e4c3: add al, 0x89; fidivr word ptr [ecx]; ret; 
0x0016af88: add al, 0x89; inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00109202: add al, 0x89; inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000814d1: add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x000b6527: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000b6766: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b67c6: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b7d96: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x000591c4: add al, 0x89; inc edx; or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x000ddfaa: add al, 0x89; inc esi; adc cl, ch; ret 0xffed; 
0x00077c01: add al, 0x89; inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000871ca: add al, 0x89; inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x00125234: add al, 0x89; inc esp; and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125ad4: add al, 0x89; inc esp; and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0012d23b: add al, 0x89; inc esp; and al, 0xc; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012d1fd: add al, 0x89; inc esp; and al, 0xc; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x000e4e42: add al, 0x89; inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000b7284: add al, 0x89; js 0x5e6a76e3; pop ebx; ret; 
0x0012d4f7: add al, 0x89; loope 0x12d484; ret 0x448b; 
0x00109811: add al, 0x89; nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x001097e9: add al, 0x89; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000be38a: add al, 0x89; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000baf44: add al, 0x89; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0007fa9a: add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x000b7295: add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0007e91a: add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0007f33f: add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x001184cd: add al, 0x89; push eax; or byte ptr [ebp - 0x11f8836d], cl; call dword ptr [edx - 0x73]; 
0x00132209: add al, 0x89; push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0016ed1b: add al, 0x89; push edi; push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0008cb58: add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000a974c: add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0015013a: add al, 0x89; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x001754ad: add al, 0x89; ret 0x18b; 
0x0012d03c: add al, 0x89; ret 0x448b; 
0x0002971f: add al, 0x89; ret 0x4c89; 
0x0006f2f1: add al, 0x89; ret 0x5d8d; 
0x0006f143: add al, 0x89; ret 0x6b8b; 
0x0013607e: add al, 0x89; ret 0x8589; 
0x000600da: add al, 0x89; ret 0xca29; 
0x0006006c: add al, 0x89; ret 0xda29; 
0x001280fc: add al, 0x89; ret 0xe083; 
0x0009c13f: add al, 0x89; ret 0xe281; 
0x0009b02e: add al, 0x89; ret 0xe283; 
0x00122f1d: add al, 0x89; ret 0xeac1; 
0x000a0eec: add al, 0x89; ret 0xf089; 
0x0003bbbf: add al, 0x89; ret 0xff25; 
0x0003f2db: add al, 0x89; ret; 
0x000b121b: add al, 0x89; rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xb10e1; pop ebx; ret; 
0x0003d5c3: add al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x66c3; 
0x000b6769: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b6609: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0003cc69: add al, 0x8a; setne al; movzx eax, al; ret; 
0x00090c7c: add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0008c93f: add al, 0x8b; adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x00182897: add al, 0x8b; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00084f63: add al, 0x8b; add byte ptr [0x200], ah; ret; 
0x0009e5ee: add al, 0x8b; add byte ptr [0x3fc], bh; jbe 0x9e600; ret; 
0x00084f13: add al, 0x8b; add byte ptr [0x804], ah; ret; 
0x0009e62e: add al, 0x8b; add byte ptr [0xffff], bh; jbe 0x9e640; ret; 
0x0009e67e: add al, 0x8b; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x00098a83: add al, 0x8b; add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc03a8d19; ret; 
0x0007f625: add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x000bd732: add al, 0x8b; add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x000ba882: add al, 0x8b; add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0010730d: add al, 0x8b; cmp byte ptr [eax - 0x75000000], 0x10; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x0007f30b: add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x000311b9: add al, 0x8b; dec esp; ret; 
0x00034487: add al, 0x8b; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x001828b3: add al, 0x8b; inc eax; dec esp; ret; 
0x0011e663: add al, 0x8b; inc eax; or byte ptr [0x100f], ah; ret; 
0x0013733e: add al, 0x8b; inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00182943: add al, 0x8b; inc eax; pop eax; ret; 
0x001828e3: add al, 0x8b; inc eax; pop esp; ret; 
0x001828d3: add al, 0x8b; inc eax; push eax; ret; 
0x00182953: add al, 0x8b; inc eax; push esp; ret; 
0x00173f5f: add al, 0x8b; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x0005ace8: add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0008c656: add al, 0x8b; inc ebx; or bh, bh; je 0x8c681; xor byte ptr [edx + 0x51], dl; call eax; 
0x0010a0c2: add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x000b67c9: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b6669: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000b7de9: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b67a9: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0016aa9a: add al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x16aaae; push edi; call dword ptr [eax + 0x10]; 
0x0006e0d3: add al, 0x8b; inc edi; or byte ptr [ecx], bh; ret 0x840f; 
0x0008b803: add al, 0x8b; inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0012cea9: add al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cad8: add al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000be3ae: add al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x0003bbde: add al, 0x8b; inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008e6f6: add al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000baf5b: add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0013ec48: add al, 0x8b; je 0x13ec70; adc byte ptr [ebp - 0x6bfb26a], cl; call dword ptr [edx - 0x46]; 
0x0005ae0b: add al, 0x8b; je 0x5ae33; or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x000e41f8: add al, 0x8b; je 0xe4220; cmp byte ptr [ecx], ch; ret 0xc889; 
0x0010e4bf: add al, 0x8b; jl 0x10e4e7; add al, 0x89; fidivr word ptr [ecx]; ret; 
0x00039e96: add al, 0x8b; jl 0x39ebe; adc al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x00081a8f: add al, 0x8b; jl 0x81ab7; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0013729e: add al, 0x8b; jns 0x1372aa; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0003bfc2: add al, 0x8b; js 0x3bfce; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0003c012: add al, 0x8b; js 0x3c01e; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0008c132: add al, 0x8b; mov ah, 0x82; push 0x1fff8e9; salc; jmp esi; 
0x00025625: add al, 0x8b; mov esp, 0xf791ec81; inc dword ptr [ecx]; iretd; jmp edi; 
0x00106fd2: add al, 0x8b; mov word ptr [eax - 0x6f5e8], ss; add ecx, eax; jmp ecx; 
0x0019bfe7: add al, 0x8b; mov word ptr [ebx - 0x85474], cs; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x001493bf: add al, 0x8b; pop eax; or byte ptr [ebp + 0x26850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x001492ef: add al, 0x8b; pop eax; or byte ptr [ebp + 0x40850fed], al; add al, 0; add dh, dh; ret; 
0x0014965d: add al, 0x8b; pop eax; or dh, dh; ret; 
0x0016ebc2: add al, 0x8b; pop edx; and al, 0x83; ret 0x8b18; 
0x0006f93a: add al, 0x8b; pop esp; xchg ebp, eax; add byte ptr [ecx], al; ret; 
0x000d5949: add al, 0x8b; popfd; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x0009e7a2: add al, 0x8b; push edx; or al, 0x83; ret; 
0x0009eb82: add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00175659: add al, 0x8b; push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00175692: add al, 0x8b; push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x00088624: add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x001893b9: add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001695b0: add al, 0x8b; push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00107f06: add al, 0x8b; push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00176303: add al, 0x8b; push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00110e93: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001828c3: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017674b: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0008e9b3: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001097d3: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00120e50: add al, 0x8b; push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0008ae43: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00182883: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f83: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0009baf2: add al, 0x8b; test al, 0x9c; cmp eax, dword ptr [eax]; add cl, ch; sar esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x0016d53b: add al, 0x8b; xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0014d8f3: add al, 0x8b; xor ecx, dword ptr [ecx - 0x476dbe4]; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x0014b781: add al, 0x8d; cmp dword ptr [edi + edi*4], -7; call dword ptr [eax - 0x73]; 
0x0008ae06: add al, 0x8d; dec eax; xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8ae28; ret; 
0x000539c3: add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x0006f2ee: add al, 0x8d; dec edx; add al, 0x89; ret 0x5d8d; 
0x00175d7d: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x00174fb5: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x000e4e3e: add al, 0x8d; dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000534b6: add al, 0x8d; inc edi; add al, 0xf; xchg edx, eax; ret; 
0x000b3399: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000a97fc: add al, 0x8d; inc edx; pop es; pop ebx; pop esi; ret; 
0x000b7b4a: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000b7d99: add al, 0x8d; inc edx; pop es; ret; 
0x000426d4: add al, 0x8d; inc edx; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x0013cfff: add al, 0x8d; inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x0013a7bb: add al, 0x8d; mov ds, word ptr [edi]; push 0x868dfff9; sub ch, byte ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x00127274: add al, 0x8d; mov ecx, dword ptr [esi + edx]; stc; jmp dword ptr [ebp - 0x75]; 
0x0009fe71: add al, 0x8d; or dword ptr [eax + 0x52], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x00027a1e: add al, 0x8d; or dword ptr [eax + esi*8], 0xffffffde; call dword ptr [eax - 0x73]; 
0x00182546: add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x000426e3: add al, 0x8d; push eax; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x00175b0b: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016edb7: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001751a5: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x00175142: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x0017543d: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00175475: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x00175779: add al, 0x8d; push esp; and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x00175af5: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0017512d: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x001754c5: add al, 0x8d; push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0009fd95: add al, 0x8d; test dword ptr [eax + 0x52], ecx; stc; call dword ptr [eax + 0x53]; 
0x0013d5c2: add al, 0x8d; test dword ptr [eax + 0x6afff968], esp; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0013eb5b: add al, 0x8d; test dword ptr [ebp + 0x40], ecx; stc; call dword ptr [eax - 0x77]; 
0x000a5402: add al, 0x8d; test dword ptr [ebp + 0x6afff954], ecx; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0016909a: add al, 0x8d; xchg byte ptr [edx + 0x6afff973], bh; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00090d0f: add al, 0x8d; xchg eax, eax; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x000a9bd9: add al, 0x8d; xchg edx, eax; insb byte ptr es:[edi], dx; mov eax, 0x450ffff6; ret 0x66c3; 
0x000a9e09: add al, 0x8d; xchg edx, eax; insb byte ptr es:[edi], dx; mov edi, 0x450ffff6; ret 0x66c3; 
0x000a6e09: add al, 0x8d; xchg edx, eax; or al, 0xcb; idiv bh; cmovne eax, edx; ret; 
0x0009f4d9: add al, 0x8d; xchg esp, edi; push ecx; stc; call dword ptr [eax + 0x53]; 
0x00077e77: add al, 0x8f; stc; call dword ptr [eax - 0x73]; 
0x0007a584: add al, 0x90; cli; jmp dword ptr [esi - 0x70]; 
0x00182889: add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x00182899: add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000c4a7d: add al, 0x90; pop edi; pop ebp; ret; 
0x0003421c: add al, 0x90; ret; 
0x0005b00d: add al, 0x91; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00064795: add al, 0x97; mov edi, ecx; jmp eax; 
0x000c21b1: add al, 0x98; pop ebx; pop esi; ret; 
0x0003e857: add al, 0x99; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0003cbb5: add al, 0x9a; xor eax, eax; pop ebx; ret; 
0x000a0489: add al, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x00092f1b: add al, 0xa8; add dword ptr [eax + ebx - 0x7d], esi; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x000975b3: add al, 0xa8; add dword ptr [ebp - 0x32], esi; mov eax, 0x10; pop ebx; ret; 
0x0010b476: add al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x00168802: add al, 0xb8; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x001801ba: add al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x0005aa62: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x001762f7: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000f821e: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xf8230; ret; 
0x0011d4b5: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011d4b5: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00108d59: add al, 0xb8; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b1a5: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b1a5: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012c129: add al, 0xb8; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00111ab0: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011dc2f: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000ec939: add al, 0xb8; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00127155: add al, 0xb8; jae 0x127159; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c265: add al, 0xb8; je 0x12c269; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c3c9: add al, 0xb8; jge 0x12c3ce; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c3f5: add al, 0xb8; jle 0x12c3fa; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bc65: add al, 0xb8; jno 0x12bc69; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126cf9: add al, 0xb8; jns 0x126cfd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010acf5: add al, 0xb8; jp 0x10acf9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008ed87: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097784: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097691: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012abb5: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012abb5: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012c0c9: add al, 0xb8; mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00110f05: add al, 0xb8; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e4a23: add al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000e4b7e: add al, 0xb8; or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00111ed9: add al, 0xb8; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a44a2: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008ea67: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x67602fa], al; ret; 
0x0009d6f6: add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e71b5: add al, 0xb8; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001112c5: add al, 0xb8; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed8b5: add al, 0xb8; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001116b5: add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bc89: add al, 0xb8; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003d726: add al, 0xb8; xor eax, 0x31000001; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x0011f505: add al, 0xb8; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009005e: add al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00139e54: add al, 0xba; stc; call dword ptr [eax - 0x73]; 
0x0012d7d6: add al, 0xbb; adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d5c6: add al, 0xbb; adc dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0014db45: add al, 0xbd; sldt word ptr [eax]; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x00054171: add al, 0xc0; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x000a97a7: add al, 0xc6; inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000704c3: add al, 0xc7; inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000704d3: add al, 0xc7; inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000704f3: add al, 0xc7; inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070503: add al, 0xc7; inc esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070573: add al, 0xc7; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070513: add al, 0xc7; inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006f79d: add al, 0xc7; inc esp; and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0017f219: add al, 0xcb; stc; call dword ptr [eax - 0x73]; 
0x0003b4bd: add al, 0xd9; loope 0x3b4b7; les eax, ptr [edx]; je 0x3b4c7; fchs; ret; 
0x0003b83d: add al, 0xd9; loope 0x3b837; les eax, ptr [edx]; je 0x3b847; fchs; ret; 
0x0003bd0e: add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0003b787: add al, 0xd9; std; fstp st(1); ret; 
0x00166947: add al, 0xd; add byte ptr [ebx - 0x7f72eb14], al; push ebp; jae 0x16694b; call dword ptr [eax + 0x6a]; 
0x000544de: add al, 0xdb; sub al, 0x24; add esp, 0x1c; ret; 
0x00054464: add al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x0007877e: add al, 0xe4; clc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0014991f: add al, 0xe8; cmp esi, dword ptr [eax + eax]; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x000303ee: add al, 0xe8; lodsb al, byte ptr [esi]; sub eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x0013ee87: add al, 0xe8; ret; 
0x00185989: add al, 0xe9; adc dword ptr [eax - 0xe], edx; jmp dword ptr [esi - 0x70]; 
0x001523c5: add al, 0xe9; adc eax, 0x2efffff6; lea esi, [esi]; xor eax, eax; ret; 
0x000f3d8f: add al, 0xe9; cmp edi, dword ptr [edi]; sti; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000f12ef: add al, 0xe9; fld xword ptr [ecx - 5]; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000f4b6f: add al, 0xe9; pop ebx; xor ebx, edi; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000d7b28: add al, 0xe9; ret 0xfffe; 
0x0015be48: add al, 0xe9; retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x000f051f: add al, 0xe9; stosd dword ptr es:[edi], eax; ja 0xf051f; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00101387: add al, 0xe9; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x000a61b4: add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x00094a73: add al, 0xeb; clc; dec dword ptr [ebp - 0x15fef3a1]; jmp edx; 
0x0013ab51: add al, 0xeb; mov ecx, 0xffe387e8; jmp dword ptr [esi - 0x70]; 
0x00023ebb: add al, 0xeb; ret 0x1de8; 
0x00023fc5: add al, 0xeb; ret; 
0x0009309e: add al, 0xeb; xchg byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x001373f0: add al, 0xf0; call dword ptr [edx - 0x3f]; 
0x00098613: add al, 0xf0; dec dword ptr [eax]; jne 0x98620; xor eax, eax; ret; 
0x0010131c: add al, 0xf6; ret 0x7401; 
0x000a1c70: add al, 0xf6; ret; 
0x00092465: add al, 0xf7; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000c02f2: add al, 0xf7; ret 0; 
0x0015830c: add al, 0xf7; ret 0xfffd; 
0x000ffe63: add al, 0xf7; ret; 
0x0014c0ee: add al, 0xf9; call dword ptr [eax - 0x73]; 
0x0012121b: add al, 0xf; dec edi; ret; 
0x00028859: add al, 0xf; inc ebp; ret 0x4489; 
0x000a9d9f: add al, 0xf; inc esp; ret 0x66c3; 
0x0005de78: add al, 0xf; lahf; ret; 
0x001096a3: add al, 0xf; mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0003e09c: add al, 0xf; mov bh, 0x83; push esi; stc; jmp dword ptr [esi - 0x77]; 
0x00089a16: add al, 0xf; mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x00089855: add al, 0xf; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00084f23: add al, 0xf; mov dh, 0; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00084f43: add al, 0xf; mov dh, 0; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00085c33: add al, 0xf; mov dh, 0; shr al, 4; and eax, 1; ret; 
0x00085c43: add al, 0xf; mov dh, 0; shr al, 5; and eax, 1; ret; 
0x0008a231: add al, 0xf; mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000391b7: add al, 0xf; mov dh, 0xc0; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x00132188: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0016ba5f: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00085ca1: add al, 0xf; mov dh, 2; ret; 
0x000d8195: add al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0019edc7: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00040a7a: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x5750; 
0x00039ea0: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x7c8b; 
0x0004092a: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x00041005: add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x001583c0: add al, 0xf; test byte ptr [ecx - 0x7d000000], al; ret 0x8014; 
0x001a3e64: add al, 0xf; test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001a470b: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x000d6b65: add al, 0xf; test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000b0a7b: add al, 0xf; test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b83fc: add al, 0xf; test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0002ebb3: add al, 0xf; xchg dword ptr [eax + 0x9000000], esp; ret; 
0x00053373: add al, 0xf; xchg edx, eax; ret 0x789; 
0x000534b9: add al, 0xf; xchg edx, eax; ret; 
0x00152a46: add al, 0xf; xchg esp, eax; ret 0x448b; 
0x0005a06a: add al, 0xf; xchg esp, eax; ret 0x48b; 
0x001a7e40: add al, 0xf; xchg esp, eax; ret 0x9584; 
0x0009a13d: add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00083ca5: add al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00178a78: add al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x0017560a: add al, 0xff; and byte ptr [ebp - 0x17a8ff8a], cl; call esi; 
0x0016adfa: add al, 0xff; and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0019285e: add al, 0xff; inc dword ptr [ecx + 0x4222fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016ae4b: add al, 0xff; je 0x16ae73; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016ae95: add al, 0xff; je 0x16aebd; sbb al, 0x53; call dword ptr [eax]; 
0x000408dd: add al, 0xff; je 0x40905; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00040992: add al, 0xff; je 0x409ba; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00040a0a: add al, 0xff; je 0x40a32; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00040ac2: add al, 0xff; je 0x40aea; or bh, bh; push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0007abad: add al, 0xff; je 0x7abd5; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007d0a8: add al, 0xff; jne 0x7d0c0; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x001802b6: add al, 0xff; push dword ptr ss:[ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00175caa: add al, 0xff; pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0017fcb1: add al, 0xff; xchg edx, eax; add byte ptr [ebx], 0; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x000d7daf: add al, 0xff; xor al, ch; cmp dword ptr [edi], esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d7d0f: add al, 0xff; xor al, ch; fldenv [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d7dfc: add al, 0xff; xor al, ch; in al, dx; add byte ptr es:[eax], al; add esp, 0x1c; ret; 
0x000d7d5c: add al, 0xff; xor al, ch; mov word ptr [edi], fs; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0015f689: add al, 0xff; xor byte ptr [ebp - 0x68ec77a], cl; call dword ptr [eax + 0x6a]; 
0x00120450: add al, 0xff; xor byte ptr [ebp - 0x690aa7d], cl; call dword ptr [eax + 0x6a]; 
0x001202d0: add al, 0xff; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax + 0x6a]; 
0x001840ef: add al, 0xff; xor byte ptr [esi - 0x18], dl; clc; mov ch, bh; jmp dword ptr [ecx]; 
0x00181349: add al, 0xff; xor edi, edi; jne 0x18134f; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00180331: add al, 0xff; xor edi, edi; push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00172a92: add al, 1; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0009e0ff: add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d88d2: add al, 1; add byte ptr [eax], al; mov dword ptr [esp + 0x34], eax; push eax; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000d6b98: add al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000c08f9: add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00093a52: add al, 1; add esp, 0xc; ret; 
0x00059e5a: add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00127869: add al, 1; fcom dword ptr [eax - 0x73]; xchg dl, ah; arpl cx, di; call dword ptr [eax + 0x57]; 
0x0009de93: add al, 1; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009def6: add al, 1; fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0016b0c0: add al, 1; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a7656: add al, 1; ret 0x78e9; 
0x0016b1a7: add al, 1; ret 0xc129; 
0x000c51fc: add al, 1; ret; 
0x001a5bfd: add al, 1; shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00172b09: add al, 5; nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00172b99: add al, 5; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00084f17: add al, 8; add byte ptr [eax], al; ret; 
0x0003ff1f: add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x00193217: add al, 8; pop edi; call 0x182d19; add ebx, 0x41871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00063334: add al, 9; ret 0xb70f; 
0x0011aa55: add al, 9; retf 0x940f; ret 0x540a; 
0x0003f2ba: add al, 9; ror byte ptr [ebx + 0x9082454], 1; ret 0xd389; 
0x00084f26: add al, al; call 0x1e8d22f; xor eax, 1; ret; 
0x00084f46: add al, al; call 0x1e8d250; xor eax, 1; ret; 
0x00085c36: add al, al; call 0x1e8df41; ret; 
0x00085c46: add al, al; call 0x1e8df52; ret; 
0x0013d0f8: add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0013d3d7: add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0008d720: add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000fa42a: add al, bh; jmp dword ptr [esi + 0xb]; 
0x000b71fa: add al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x00142820: add al, byte ptr [eax + eax]; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x001427f2: add al, byte ptr [eax + eax]; add byte ptr [ecx], bh; ret 0x1988; 
0x00194a91: add al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194cbc: add al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000e838e: add al, byte ptr [eax - 0x6bf0a206]; ret 0xb60f; 
0x0009b46b: add al, byte ptr [eax]; add bl, ch; fisttp word ptr [ebp - 0x6672f7b]; call dword ptr [eax - 0x73]; 
0x001a2b2f: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x001a2b1e: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00091b6e: add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00090ccc: add al, byte ptr [eax]; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x001a2ac7: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000b5238: add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001a2ad8: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a2ae9: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000dbcfe: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc dword ptr [eax], -0x52; stc; call dword ptr [eax - 0x18]; 
0x000a0484: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add al, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x00150a83: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add byte ptr [edx], 0x6e; stc; call dword ptr [eax - 0x18]; 
0x000dbd1d: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x0005d13d: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and ah, 0x8a; stc; call dword ptr [eax - 0x18]; 
0x000a03f8: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and ah, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x0002869b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and edx, 0x3a; stc; call dword ptr [eax - 0x18]; 
0x000d01c4: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax - 0x56], -7; call dword ptr [eax - 0x18]; 
0x0005d118: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or byte ptr [ebx + ecx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0005d167: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebp + 0x41], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0014ca26: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb byte ptr [eax], 0xc0; stc; call dword ptr [eax - 0x18]; 
0x000a041b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub byte ptr [edi + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0002c385: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0009fc0c: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], dl; push edx; stc; call dword ptr [eax - 0x18]; 
0x0014a174: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*4], bl; stc; call dword ptr [eax - 0x18]; 
0x0009fb9f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi], ch; push edx; stc; call dword ptr [eax - 0x18]; 
0x00029989: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dl, ah; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00092194: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x6c], ebp; stc; call dword ptr [eax - 0x18]; 
0x000497e0: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], esi; stc; call dword ptr [eax - 0x18]; 
0x0005d0f3: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ecx*4 - 7], ebx; call dword ptr [eax - 0x18]; 
0x00028daf: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edx, esp; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x000dbcdf: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor dword ptr [ebx], 0x56; stc; call dword ptr [eax - 0x18]; 
0x0005d18c: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor dword ptr [esi], 0x41; stc; call dword ptr [eax - 0x18]; 
0x00146ebe: add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x0008dbc4: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x00082c3c: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0007a018: add al, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret; 
0x00170a92: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00170102: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016d565: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016e142: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00182a01: add al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00042012: add al, byte ptr [eax]; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x000963cf: add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007802a: add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [eax + 0x18], edx; ret; 
0x000419db: add al, byte ptr [eax]; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012f4da: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012e537: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00091a73: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009303a: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00090ef7: add al, byte ptr [eax]; add byte ptr [eax], al; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00041ff2: add al, byte ptr [eax]; add byte ptr [eax], al; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x000420c3: add al, byte ptr [eax]; add byte ptr [eax], al; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0016a5b3: add al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000d6f01: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x00121b3f: add al, byte ptr [eax]; add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x000e6181: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00120ef1: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x00109bbd: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00109f77: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0008d5af: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008d61e: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00090cc6: add al, byte ptr [eax]; add byte ptr [ebp + 0x22096], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x00135957: add al, byte ptr [eax]; add byte ptr [ebp + 0x24], dh; pop ebx; pop esi; pop edi; ret; 
0x0009a0bf: add al, byte ptr [eax]; add byte ptr [ebp - 0x19cd937d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0009a0cb: add al, byte ptr [eax]; add byte ptr [ebp - 0x19ced37d], cl; call dword ptr [ecx + 0x50]; 
0x00073c8d: add al, byte ptr [eax]; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0005f76e: add al, byte ptr [eax]; add byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax + 0x68]; 
0x0014c9d6: add al, byte ptr [eax]; add byte ptr [ebp - 0x693827e], cl; call dword ptr [eax - 0x73]; 
0x0014a648: add al, byte ptr [eax]; add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x00144a16: add al, byte ptr [eax]; add byte ptr [ebx + 0x29042454], cl; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x00061798: add al, byte ptr [eax]; add byte ptr [ebx + 0x3182444], cl; test byte ptr [eax - 0x73134], dl; jmp eax; 
0x0014a0fb: add al, byte ptr [eax]; add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x00086312: add al, byte ptr [eax]; add byte ptr [ebx + 0x448d08ec], al; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000d0076: add al, byte ptr [eax]; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0005d75b: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003d558: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00079f05: add al, byte ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x000391b1: add al, byte ptr [eax]; add byte ptr [ebx + 0xf04244c], cl; mov dh, 0xc0; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x00099e8b: add al, byte ptr [eax]; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000d3961: add al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0002d457: add al, byte ptr [eax]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002a622: add al, byte ptr [eax]; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jp 0x2a627; call dword ptr [eax - 0x73]; 
0x00128b6e: add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cmc; arpl cx, di; call dword ptr [eax + 0x56]; 
0x000da7f0: add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cmp ecx, edi; call dword ptr [eax + 0x56]; 
0x001570e1: add al, byte ptr [eax]; add byte ptr [ebx - 0x7cebdb8c], cl; ret 0x8301; 
0x00080fdf: add al, byte ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008c1bc: add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x00130a68: add al, byte ptr [eax]; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000c3031: add al, byte ptr [eax]; add byte ptr [ecx - 0x76a7dbac], cl; ret 0x448b; 
0x0004866e: add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0004794e: add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0008dd5d: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0008dc62: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00136bf3: add al, byte ptr [eax]; add byte ptr [ecx], al; call edx; 
0x000bec23: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x000fb913: add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x00094df5: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x4f0f; 
0x0008a30a: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000b0de7: add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0010195d: add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x00096216: add al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x0014a546: add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x001811bb: add al, byte ptr [eax]; add byte ptr [edi], cl; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00037425: add al, byte ptr [eax]; add byte ptr [edi], cl; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77c84]; add esi, edi; jmp esi; 
0x0003678a: add al, byte ptr [eax]; add byte ptr [edi], cl; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77ed0]; add esi, edi; jmp esi; 
0x00101926: add al, byte ptr [eax]; add byte ptr [edi], cl; sahf; ret 0xd201; 
0x00050bbd: add al, byte ptr [eax]; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00132d12: add al, byte ptr [eax]; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x00184e7f: add al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000796c4: add al, byte ptr [eax]; add dh, dh; ret 0xf04; 
0x0005c0ec: add al, byte ptr [eax]; add dh, dh; ret 0xf10; 
0x000a317f: add al, byte ptr [eax]; add dh, dh; ret; 
0x000ee431: add al, byte ptr [eax]; add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x0009e84c: add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00060329: add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00154662: add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x001547e4: add al, byte ptr [eax]; add esp, 0x10; mov eax, ebx; call eax; 
0x00059d05: add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0006053c: add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x0013cfcb: add al, byte ptr [eax]; jne 0x13cfd5; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0015d81a: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x0015d47c: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call edi; 
0x0015d66b: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x0015cb46: add al, byte ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000a9731: add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x0013ce0f: add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000a9767: add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x00084172: add al, byte ptr [eax]; pop ebx; ret; 
0x00097fa0: add al, byte ptr [ebp + 0x39b875ff]; ret 0xd574; 
0x001447b3: add al, byte ptr [ebp - 0x76c98b37]; ret; 
0x0016e30b: add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x0007e429: add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x0008e70d: add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x00089ab8: add al, byte ptr [ebx + 0x5a8d08ec]; add dword ptr [eax + 0x56], edx; call dword ptr [ebp + 0xc]; 
0x0013c6aa: add al, byte ptr [ebx + 0x5e5b04c4]; pop edi; pop ebp; ret; 
0x0008c1f3: add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0012ff76: add al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0007e402: add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0008fbbc: add al, byte ptr [ebx + 0xe7403f8]; pop ebx; pop esi; pop edi; ret; 
0x0008e7bf: add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x000638b4: add al, byte ptr [ebx - 0x57ccf16]; or dword ptr [edi], ecx; xchg dword ptr [edx - 0x76000008], esi; ret 0xc083; 
0x0013b2a1: add al, byte ptr [ebx - 0x68f0f008]; ret; 
0x000e47da: add al, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0017f93b: add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x000dc0c1: add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x00038521: add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000ad053: add al, byte ptr [ecx]; jne 0xad040; pop ebx; pop esi; pop edi; ret; 
0x0004767d: add al, byte ptr [ecx]; ret 0x448b; 
0x0002f703: add al, byte ptr [ecx]; ret 0x9539; 
0x000e0f1b: add al, byte ptr [ecx]; ret 0xd329; 
0x000e3452: add al, byte ptr [ecx]; ret 0xd729; 
0x000d39f3: add al, byte ptr [ecx]; ret 0xd889; 
0x000cc382: add al, byte ptr [ecx]; ret; 
0x000d6e94: add al, byte ptr [edx + edx*8 - 0x2e77e88c]; and cl, 0xf; je 0xd6ec0; ret; 
0x001a2b2e: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x000a03f7: add al, byte ptr ds:[eax]; add byte ptr [eax - 0x73], dl; and ah, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x001493c7: add al, byte ptr es:[eax]; add dh, dh; ret; 
0x0009903a: add al, ch; adc byte ptr [edi - 0x3b7cfff9], cl; adc byte ptr [ebp - 0x72c68b40], al; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0008892f: add al, ch; call 0x810898d9; ret 0xe4df; 
0x00115a2f: add al, ch; call 0x81116108; ret 0x13df; 
0x00139e2f: add al, ch; call 0x8113a2c4; ret 0xcfdf; 
0x00155e0b: add al, ch; call ecx; 
0x0013a97f: add al, ch; cwde; add dword ptr [eax + eax], -0x7f; ret 0xc48f; 
0x0013df8b: add al, ch; dec edi; stc; cli; jmp dword ptr [esi - 0x3f]; 
0x00025fcf: add al, ch; dec esp; int 0x15; add byte ptr [0x210e3f], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0002cc8e: add al, ch; dec esp; ret 0x10; 
0x00173ecf: add al, ch; fild dword ptr [esi - 0x10]; inc dword ptr [ebx - 0x17aaeb3c]; ret 0xeaf2; 
0x0009306f: add al, ch; imul ebp, dword ptr [eax + 0x4f8b0005], 0x68; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0018c1e5: add al, ch; imul edi, edi, -1; add ebx, 0x47f25; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0012e525: add al, ch; inc byte ptr [edi + 5]; add byte ptr [ecx + 0x1088e9c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0003ce9f: add al, ch; jl 0x3cf01; adc al, 0; add eax, 0x1f9f6f; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0018da4f: add al, ch; les edx, ptr [edx - 1]; inc dword ptr [ecx + 0x46cfbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00182b5f: add al, ch; mov eax, 0x81000001; ret 0x42af; 
0x0016c05f: add al, ch; mov eax, 0x8100016c; ret 0xadaf; 
0x0005275f: add al, ch; mov eax, 0x81001305; ret 0x46af; 
0x0018c158: add al, ch; mov ebx, 0x81ffff6b; ret; 
0x0018c857: add al, ch; mov esp, 0x81ffff64; ret; 
0x000b6c1f: add al, ch; or cl, al; or al, 0; add ecx, 0x10f09b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00127a80: add al, ch; pop edx; pop esi; cld; call dword ptr [eax - 0x73]; 
0x000c09af: add al, ch; push 0x81000c23; ret 0x645f; 
0x000999e2: add al, ch; push 0x890006ef; xor dword ptr [edx + eax - 0x3b7d0000], 0x18; pop ebx; ret; 
0x000e48a8: add al, ch; ret 0; 
0x00024fa8: add al, ch; ret 0xc21; 
0x000a50f8: add al, ch; ret 0xd49; 
0x0013e5e8: add al, ch; ret 0xf39f; 
0x001568e8: add al, ch; ret 0xf525; 
0x000c0ad8: add al, ch; ret 0xf626; 
0x0014aa48: add al, ch; ret 0xfe25; 
0x00082047: add al, ch; ret; 
0x00134c20: add al, ch; retf 0xffdb; dec dword ptr [ebx - 0x3b7cf78b]; adc byte ptr [ecx], cl; ret; 
0x00039e5e: add al, ch; sbb al, 0xa8; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x001396df: add al, ch; sti; jecxz 0x1396e3; jmp dword ptr [esi - 0x70]; 
0x000be1ff: add al, ch; sub byte ptr [ebx + 0xc], cl; add byte ptr [ecx + 0x107defc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0014f1f2: add al, ch; test al, 0x3f; in eax, dx; jmp dword ptr [ebp - 0x77]; 
0x000a50f3: add al, ch; xchg dword ptr [ecx + 0xd], ecx; add al, ch; ret 0xd49; 
0x00089877: add al, ch; xchg ebx, eax; ret 0xffff; 
0x0007e426: add al, cl; stc; add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x0008cfe9: add al, dh; cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x000a3226: add al, dh; dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a3829: add al, dh; dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009edda: add al, dh; dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000a2edd: add al, dh; dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000a9825: add al, dh; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x0009e3f3: add bh, al; adc ah, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0009d289: add bh, al; adc al, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00085bc9: add bh, al; adc byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00082c3a: add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0007a016: add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret; 
0x0016a137: add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x000a27ff: add bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00078522: add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000a0ce5: add bh, al; add dword ptr [eax], ecx; add byte ptr [eax], al; add cl, ch; ret; 
0x0017d401: add bh, al; add ebp, dword ptr [edi]; jbe 0x17d38c; in al, dx; add al, 0x83; ret; 
0x0008b2ed: add bh, al; cmp byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00151d3d: add bh, al; cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x00151c2d: add bh, al; cmp dword ptr [eax], 0x7f; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00151cb5: add bh, al; cmp eax, 0x6e; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x001a9a97: add bh, al; inc ebp; test byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x458b; 
0x001401ef: add bh, al; inc ebx; sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x00055035: add bh, al; inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0009eb3d: add bh, al; inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0012a0a4: add bh, al; inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00111d85: add bh, al; inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000585e4: add bh, al; inc esi; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0015641f: add bh, al; inc esi; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00165b9e: add bh, al; inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008af5a: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00089452: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0006f737: add bh, al; inc esp; and al, 0x14; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0006faf7: add bh, al; inc esp; and al, 0x14; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x0006f174: add bh, al; inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x000632b7: add bh, al; inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006ee5a: add bh, al; inc esp; and al, 0x30; add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x0006f31f: add bh, al; inc esp; and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0009d3b4: add bh, al; inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eea47: add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0010a60f: add bh, al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x0008b269: add bh, al; xor byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000bfa92: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000bf8ee: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x00192c7e: add bh, bh; inc dword ptr [ecx + 0x41e0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192a85: add bh, bh; inc dword ptr [ecx + 0x42008c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010ad34: add bh, bh; je 0x10ad5c; sbb byte ptr [edx - 1], ch; call 0x10b230; add esp, 0x1c; ret; 
0x00117fa0: add bh, bh; je 0x117fc8; sub al, 0xff; ja 0x117fb4; call dword ptr [edi + 0x24]; 
0x00119010: add bh, bh; je 0x119038; sub al, 0xff; ja 0x119024; call dword ptr [edi + 0x24]; 
0x0011a0b0: add bh, bh; je 0x11a0d8; sub al, 0xff; ja 0x11a0c4; call dword ptr [edi + 0x24]; 
0x0011eb0c: add bh, bh; je 0x11eb34; sbb al, 0xe8; mov dl, byte ptr [eax + eax]; add esp, 0x1c; ret; 
0x0012444a: add bh, bh; je 0x124472; sbb al, 0xe8; cld; ret 0xfff3; 
0x00124528: add bh, bh; je 0x124550; sbb al, 0xe8; push ds; ret 0xfff3; 
0x0014f7e4: add bh, bh; je 0x14f80c; adc al, 0x55; call edi; 
0x00159be4: add bh, bh; je 0x159c0c; push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0015d5b3: add bh, bh; je 0x15d5db; or al, 0x55; call edi; 
0x00173478: add bh, bh; je 0x1734a0; sbb al, 0x53; call eax; 
0x0018134e: add bh, bh; je 0x181376; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00182e24: add bh, bh; je 0x182e4c; sbb al, 0xe8; xor byte ptr [esi - 0x3b7c0015], 0x1c; ret; 
0x0003a90c: add bh, bh; jg 0x3a891; ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x00170d9b: add bh, bh; jne 0x170def; push edi; call dword ptr [eax + 0x14]; 
0x00082808: add bh, bh; jne 0x827e0; push edx; push ebx; push esi; call eax; 
0x000a4b87: add bh, bh; mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x6567f80], cl; call dword ptr [eax + 0x68]; 
0x0018bffa: add bh, bh; nop; jl 0x18c002; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00098fb4: add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x0011ff8d: add bh, bh; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x0005f730: add bh, byte ptr [eax + 1]; ret; 
0x000e7bea: add bh, byte ptr [eax - 1]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00060452: add bh, byte ptr [eax - 1]; pop ebx; pop esi; pop edi; ret; 
0x0009d5aa: add bh, byte ptr [eax - 1]; pop ebx; pop esi; ret; 
0x0003c44a: add bh, byte ptr [eax - 1]; pop ebx; ret; 
0x00024f05: add bh, byte ptr [eax - 1]; ret; 
0x0009a87a: add bh, byte ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x000299c2: add bh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x0007225c: add bh, byte ptr [ecx]; fnstenv [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x0013ccd5: add bh, byte ptr [ecx]; rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x0002dd32: add bh, byte ptr [ecx]; ret 0x820f; 
0x00030c5d: add bh, byte ptr [ecx]; ret 0xf072; 
0x0006c531: add bh, byte ptr [ecx]; ret; 
0x0010abd9: add bh, byte ptr [ecx]; ror byte ptr [edi], 1; dec edi; ret 0xdce9; 
0x0017d7fb: add bh, byte ptr [edi + 0xa]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001750da: add bh, byte ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x000a3b75: add bh, cl; dec dword ptr [ebp - 0x657977d]; call dword ptr [eax - 0x73]; 
0x000a321f: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a3822: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009edd3: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000e4f1e: add bh, dh; fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x000a2ed6: add bh, dh; fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x00024efa: add bh, dh; fmul dword ptr [ebx + 0xa492]; add byte ptr [ebp - 0x77], ah; add bh, byte ptr [eax - 1]; ret; 
0x0009d5a5: add bh, dh; fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; pop esi; ret; 
0x0003c445: add bh, dh; fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; ret; 
0x0012a895: add bh, dh; fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; ret; 
0x000c62bb: add bh, dh; in eax, 0x89; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000d39e9: add bh, dh; out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x0014a650: add bh, dh; ret 0; 
0x000bf4c5: add bh, dh; ret 0x3f; 
0x0018c0f8: add bh, dh; ret 0xf; 
0x000bff21: add bh, dh; ret 3; 
0x000e492b: add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00093a93: add bh, dl; dec dword ptr [ebp - 0x682937f]; call dword ptr [eax - 0x73]; 
0x0011fbb0: add bh, dl; dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x00093ab2: add bh, dl; jmp dword ptr [esi - 0x70]; 
0x000ed8db: add bl, al; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ed8eb: add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ec91b: add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ec90b: add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x0004d68f: add bl, bl; lodsd eax, dword ptr [esi]; dec esp; sar ecx, 1; jmp dword ptr [ebp - 0x39]; 
0x000f7aaa: add bl, byte ptr [eax - 7]; call dword ptr [eax + 0x53]; 
0x000f7b07: add bl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x000a9688: add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0007fa9e: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0008b7dc: add bl, byte ptr [ebx + 0x5e]; ret; 
0x000b726b: add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x001940c0: add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0018dfea: add bl, byte ptr [edi - 0x18]; sub byte ptr [ebp - 1], cl; inc dword ptr [ecx + 0x4659fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007e49d: add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x0007fc0e: add bl, byte ptr [esi + 0x5f]; ret; 
0x001a59c7: add bl, byte ptr [esi - 0x7d]; ret 0x8308; 
0x000e7189: add bl, ch; add eax, 0x26748d; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x00028df1: add bl, ch; fisttp dword ptr [ebx - 0x72c3db84]; xchg esp, ebp; jnp 0x28df6; call dword ptr [eax - 0x73]; 
0x0002a993: add bl, ch; fisttp dword ptr [ebx - 0x72c7db84]; xchg dword ptr [eax - 0x7e], ebx; stc; call dword ptr [eax - 0x73]; 
0x0009b46d: add bl, ch; fisttp word ptr [ebp - 0x6672f7b]; call dword ptr [eax - 0x73]; 
0x0012264a: add bl, ch; fmul qword ptr [ebp - 0x17acff8a]; ret; 
0x00169424: add bl, ch; fucomi st(0); mov ah, 0xfa; cld; jmp dword ptr [esi - 0x70]; 
0x0016bd04: add bl, ch; jecxz 0x16bcf0; aam 0xd1; cld; jmp dword ptr [esi - 0x70]; 
0x0018b638: add bl, ch; mov byte ptr [0xfad8a0e8], al; call dword ptr [ebx - 0x7d]; 
0x00162ea0: add bl, ch; mov dword ptr [0xfd6038e8], eax; jmp dword ptr [esi - 0x70]; 
0x000848d4: add bl, ch; mov dword ptr [ecx - 0x71e163d], ecx; stc; jmp dword ptr [esi - 0x70]; 
0x0007b474: add bl, ch; mov dword ptr [ecx - 0x7cfc163d], ecx; cli; jmp dword ptr [esi - 0x70]; 
0x0011e65c: add bl, ch; out 0x90, al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00146ec2: add bl, ch; ret 0x148d; 
0x0016b353: add bl, ch; ret 0x85e8; 
0x000a19db: add bl, ch; ret 0x9066; 
0x000e24cc: add bl, ch; ret; 
0x000a4609: add bl, ch; xchg edx, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x000b333f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000aef7f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000af20f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bb06f: add bl, dh; movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be72f: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb26c: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6cf: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb20c: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6ef: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb22c: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be70f: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb24c: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b76bf: add bl, dh; movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000b76cf: add bl, dh; movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x00112f4a: add bl, dl; call 0x29130fd4; ret; 
0x0011492a: add bl, dl; call 0x291329b4; ret; 
0x0011630a: add bl, dl; call 0x29134394; ret; 
0x0012fc74: add byte ptr [0x10719f], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0009e654: add byte ptr [0x1987bf], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x394], edx; ret; 
0x0009e5c4: add byte ptr [0x19884f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x358], edx; ret; 
0x0009e5a4: add byte ptr [0x19886f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x35c], edx; ret; 
0x0009e574: add byte ptr [0x19889f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e554: add byte ptr [0x1988bf], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0009e524: add byte ptr [0x1988ef], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4f4: add byte ptr [0x19891f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e4c4: add byte ptr [0x19894f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x354], edx; ret; 
0x0009d284: add byte ptr [0x199b8f], al; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x00093ae4: add byte ptr [0x1a332f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00093ac4: add byte ptr [0x1a334f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000929a4: add byte ptr [0x1a446f], al; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008ccb4: add byte ptr [0x1aa15f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008cc94: add byte ptr [0x1aa17f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008cc74: add byte ptr [0x1aa19f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc54: add byte ptr [0x1aa1bf], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008b154: add byte ptr [0x1abcbf], al; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003cea4: add byte ptr [0x1f9f6f], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003ce84: add byte ptr [0x1f9f8f], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x001a334f: add byte ptr [0x1ff], ah; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x00084f65: add byte ptr [0x200], ah; ret; 
0x00034504: add byte ptr [0x20290f], al; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x000344e4: add byte ptr [0x20292f], al; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x000344c4: add byte ptr [0x20294f], al; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x00033d44: add byte ptr [0x2030cf], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002f384: add byte ptr [0x207a8f], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00025fd4: add byte ptr [0x210e3f], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00025fb4: add byte ptr [0x210e5f], al; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000254c4: add byte ptr [0x21194f], al; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024f64: add byte ptr [0x211eaf], al; lea eax, [eax - 0x680b4]; ret; 
0x00024f44: add byte ptr [0x211ecf], al; lea eax, [eax - 0x680ac]; ret; 
0x00024b34: add byte ptr [0x2122df], al; mov edx, dword ptr [eax + 0x118]; test edx, edx; je 0x24b45; ret; 
0x0009e5f0: add byte ptr [0x3fc], bh; jbe 0x9e600; ret; 
0x00084f15: add byte ptr [0x804], ah; ret; 
0x0016d568: add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0014d464: add byte ptr [0xe99af], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x14d487; ret; 
0x000960a9: add byte ptr [0xf000dff], ah; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00145d44: add byte ptr [0xf10cf], al; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr gs:[eax]; ret; 
0x0013a704: add byte ptr [0xfc70f], al; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x001a326a: add byte ptr [0xff], ah; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a32a1: add byte ptr [0xfff], ah; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a32da: add byte ptr [0xffff], ah; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0009e630: add byte ptr [0xffff], bh; jbe 0x9e640; ret; 
0x00124359: add byte ptr [0xfffff000], ah; or eax, edx; ret; 
0x00108b74: add byte ptr [0xfffff000], bh; ja 0x108b80; pop ebx; pop esi; ret; 
0x0010fbd2: add byte ptr [0xfffff000], bh; ja 0x10fbe0; pop ebx; pop esi; ret; 
0x00110ecf: add byte ptr [0xfffff000], bh; ja 0x110ee0; pop ebx; ret; 
0x00110f3f: add byte ptr [0xfffff000], bh; ja 0x110f50; pop ebx; ret; 
0x00110fc9: add byte ptr [0xfffff000], bh; ja 0x111020; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011121d: add byte ptr [0xfffff000], bh; ja 0x111270; add esp, 0x14; pop ebx; pop esi; ret; 
0x001112ff: add byte ptr [0xfffff000], bh; ja 0x111310; pop ebx; ret; 
0x00112715: add byte ptr [0xfffff000], bh; ja 0x112720; pop ebx; pop esi; ret; 
0x0011b23f: add byte ptr [0xfffff000], bh; ja 0x11b250; pop ebx; ret; 
0x0011b74f: add byte ptr [0xfffff000], bh; ja 0x11b760; pop ebx; ret; 
0x0011bdbd: add byte ptr [0xfffff000], bh; ja 0x11bdd0; pop ebx; ret; 
0x0011c8d4: add byte ptr [0xfffff000], bh; ja 0x11c8e0; pop ebx; pop esi; ret; 
0x0011c94b: add byte ptr [0xfffff000], bh; ja 0x11c958; pop ebx; ret; 
0x0011c999: add byte ptr [0xfffff000], bh; ja 0x11c9a8; pop ebx; pop esi; pop edi; ret; 
0x0011c9e9: add byte ptr [0xfffff000], bh; ja 0x11c9f8; pop ebx; pop esi; pop edi; ret; 
0x0011cc15: add byte ptr [0xfffff000], bh; ja 0x11cc20; pop ebx; pop esi; ret; 
0x0011cfef: add byte ptr [0xfffff000], bh; ja 0x11d000; pop ebx; ret; 
0x0011d4eb: add byte ptr [0xfffff000], bh; ja 0x11d4f8; pop ebx; ret; 
0x0011d98b: add byte ptr [0xfffff000], bh; ja 0x11d998; pop ebx; ret; 
0x0011de9b: add byte ptr [0xfffff000], bh; ja 0x11dec0; pop ebx; pop esi; pop edi; ret; 
0x0011df18: add byte ptr [0xfffff000], bh; ja 0x11df30; pop ebx; pop esi; pop edi; ret; 
0x0011df8a: add byte ptr [0xfffff000], bh; ja 0x11dfb0; pop ebx; pop esi; pop edi; ret; 
0x0011e007: add byte ptr [0xfffff000], bh; ja 0x11e020; pop ebx; pop esi; pop edi; ret; 
0x0011e0c4: add byte ptr [0xfffff000], bh; ja 0x11e0d0; pop ebx; pop esi; ret; 
0x0011e434: add byte ptr [0xfffff000], bh; ja 0x11e440; pop ebx; pop esi; ret; 
0x0011edaf: add byte ptr [0xfffff000], bh; ja 0x11edc0; pop ebx; ret; 
0x0011edff: add byte ptr [0xfffff000], bh; ja 0x11ee10; pop ebx; ret; 
0x0011ef05: add byte ptr [0xfffff000], bh; ja 0x11ef18; pop ebx; pop esi; pop edi; ret; 
0x0011ef55: add byte ptr [0xfffff000], bh; ja 0x11ef68; pop ebx; pop esi; pop edi; ret; 
0x00120579: add byte ptr [0xfffff000], bh; ja 0x1205d0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00120aa9: add byte ptr [0xfffff000], bh; ja 0x120b00; add esp, 0x14; pop ebx; pop esi; ret; 
0x00120b4f: add byte ptr [0xfffff000], bh; ja 0x120b60; pop ebx; ret; 
0x00120ba4: add byte ptr [0xfffff000], bh; ja 0x120bb0; pop ebx; pop esi; ret; 
0x00123fc4: add byte ptr [0xfffff000], bh; ja 0x123fd0; pop ebx; pop esi; ret; 
0x00126706: add byte ptr [0xfffff000], bh; ja 0x126718; pop ebx; pop esi; ret; 
0x00127d8f: add byte ptr [0xfffff000], bh; ja 0x127da0; pop ebx; ret; 
0x00127de4: add byte ptr [0xfffff000], bh; ja 0x127df0; pop ebx; pop esi; ret; 
0x0012a0db: add byte ptr [0xfffff000], bh; ja 0x12a0e8; pop ebx; ret; 
0x0012a71f: add byte ptr [0xfffff000], bh; ja 0x12a730; pop ebx; ret; 
0x0012a886: add byte ptr [0xfffff000], bh; ja 0x12a890; ret; 
0x0012a97f: add byte ptr [0xfffff000], bh; ja 0x12a990; pop ebx; ret; 
0x0012ac3e: add byte ptr [0xfffff000], bh; ja 0x12ac68; pop ebx; pop esi; pop edi; ret; 
0x0012aed9: add byte ptr [0xfffff000], bh; ja 0x12aee8; pop ebx; pop esi; pop edi; ret; 
0x0012b179: add byte ptr [0xfffff000], bh; ja 0x12b188; pop ebx; pop esi; pop edi; ret; 
0x0012b2ba: add byte ptr [0xfffff000], bh; ja 0x12b2d0; pop ebx; pop esi; pop edi; ret; 
0x0012b96f: add byte ptr [0xfffff000], bh; ja 0x12b980; pop ebx; ret; 
0x0012bbff: add byte ptr [0xfffff000], bh; ja 0x12bc10; pop ebx; ret; 
0x00189435: add byte ptr [0xfffff000], bh; ja 0x189440; pop ebx; pop esi; ret; 
0x0003c430: add byte ptr [0xfffff000], bh; ja 0x3c440; pop ebx; ret; 
0x0003c48e: add byte ptr [0xfffff000], bh; ja 0x3c4e0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000603df: add byte ptr [0xfffff000], bh; ja 0x603f0; pop ebx; ret; 
0x00060439: add byte ptr [0xfffff000], bh; ja 0x60448; pop ebx; pop esi; pop edi; ret; 
0x0008db6c: add byte ptr [0xfffff000], bh; ja 0x8db80; pop ebx; pop esi; pop edi; ret; 
0x0009628f: add byte ptr [0xfffff000], bh; ja 0x962a0; pop ebx; pop esi; pop edi; ret; 
0x0009cf7b: add byte ptr [0xfffff000], bh; ja 0x9cf88; pop ebx; ret; 
0x0009d594: add byte ptr [0xfffff000], bh; ja 0x9d5a0; pop ebx; pop esi; ret; 
0x0009dea3: add byte ptr [0xfffff000], bh; ja 0x9deb0; pop ebx; ret; 
0x000d92bd: add byte ptr [0xfffff000], bh; ja 0xd92d0; pop ebx; ret; 
0x000e5dee: add byte ptr [0xfffff000], bh; ja 0xe5e00; pop ebx; pop esi; ret; 
0x000f8274: add byte ptr [0xfffff000], bh; ja 0xf82c0; add esp, 0x18; pop ebx; ret; 
0x00108c0b: add byte ptr [0xfffff001], bh; jae 0x24ef0; ret; 
0x0013d107: add byte ptr [0xffffff], ah; ret; 
0x0009876f: add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x000e4f60: add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x001a5b8e: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b0fce: add byte ptr [eax + 0x1130f66], dl; pop ebx; ret; 
0x0009d2d3: add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012a87a: add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x0012a87a: add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0011179d: add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x001115d6: add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x0002f37e: add byte ptr [eax + 0x15399ce8], dl; add byte ptr [0x207a8f], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0008ecaf: add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008eed7: add byte ptr [eax + 0x16], bh; ret; 
0x000ba83f: add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000ba87f: add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000e4cc1: add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000e4f01: add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0016941e: add byte ptr [eax + 0x1b8], dl; add bl, ch; fucomi st(0); mov ah, 0xfa; cld; jmp dword ptr [esi - 0x70]; 
0x00111742: add byte ptr [eax + 0x1c4], bh; call dword ptr gs:[0x10]; 
0x000ad690: add byte ptr [eax + 0x1e8850f], 0; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x000f7de5: add byte ptr [eax + 0x20], bh; cmp dword ptr gs:[edx], 0x26; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000be31f: add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x000b348e: add byte ptr [eax + 0x288018a], dl; lea eax, [edx]; ret; 
0x000b7d1e: add byte ptr [eax + 0x288018a], dl; mov eax, edx; ret; 
0x00120e7e: add byte ptr [eax + 0x35c808b], dl; add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0011e89a: add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x0011e8c2: add byte ptr [eax + 0x36], bh; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f7ec7: add byte ptr [eax + 0x40], bh; ret; 
0x000be50d: add byte ptr [eax + 0x448b1070], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb087: add byte ptr [eax + 0x448b1070], cl; and al, 8; pop esi; ret; 
0x0016f2e9: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0016f2e9: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0015a38a: add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x00169bf7: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0016a631: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00169cfb: add byte ptr [eax + 0x5a], bl; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000a60ce: add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x000b75df: add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000b760e: add byte ptr [eax + 0x5e5f1789], dl; pop ebx; ret; 
0x0008ea9f: add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x000b75fe: add byte ptr [eax + 0x5fff5789], dl; pop esi; pop ebx; ret; 
0x0012b81e: add byte ptr [eax + 0x60245c8b], dl; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x000b349e: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000af0be: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000dc04f: add byte ptr [eax + 0x68], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x0007bebe: add byte ptr [eax + 0x6a04ec83], dl; adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x0008611e: add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [edi - 0x18]; 
0x0008611e: add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [edi - 0x18]; inc ebp; ret 0xffff; 
0x000895ae: add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x0012bb97: add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012a917: add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012a6ae: add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010aff2: add byte ptr [eax + 0x72], bh; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0010af9e: add byte ptr [eax + 0x72], bh; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0012e0ff: add byte ptr [eax + 0x75], bh; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0012e14f: add byte ptr [eax + 0x75], bh; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012ecda: add byte ptr [eax + 0x75], bh; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00193b7e: add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x001a2b31: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x001a2b20: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x001a2b0f: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0003fb19: add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x0012f587: add byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0010937e: add byte ptr [eax + 0x9b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00091b70: add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00090cce: add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0003c297: add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c33e: add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0009b983: add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001099ca: add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000984af: add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00059f4e: add byte ptr [eax + 0xc74c085], dl; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x001a4a35: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000930a7: add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x001a49c8: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001a4a2b: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00093685: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00094436: add byte ptr [eax + 0xf0], bh; mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009be36: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008dd8d: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0009558b: add byte ptr [eax + 0xf0], bh; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009658c: add byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fa67: add byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000934c3: add byte ptr [eax + 0xf0], bh; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008db54: add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00095dce: add byte ptr [eax + 0xf0b8], dl; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014648e: add byte ptr [eax + 0xf2cfa80], dl; xchg ebp, eax; ret; 
0x000ba8ef: add byte ptr [eax + 0xf66087a], cl; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00093cce: add byte ptr [eax + 0xf], al; test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x000d6eaf: add byte ptr [eax + 0xfe580f5], cl; je 0xd6ed0; add eax, 2; ret; 
0x0009a277: add byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x000f7f45: add byte ptr [eax + 1], bh; cmp dword ptr gs:[edx], 0x26; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x001981af: add byte ptr [eax + 1], bh; ja 0x1981b9; neg eax; ret; 
0x0019edef: add byte ptr [eax + 1], bh; ja 0x19edf9; neg eax; ret; 
0x000d6ccf: add byte ptr [eax + 1], bh; jg 0xd6cd9; neg eax; ret; 
0x00172628: add byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x000a4867: add byte ptr [eax + 1], bh; ret; 
0x0004209f: add byte ptr [eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x001829ff: add byte ptr [eax + 2], bh; add esp, 0xc; ret; 
0x000929e7: add byte ptr [eax + 3], bh; ret; 
0x001a498c: add byte ptr [eax + 4], bh; pop edi; ret; 
0x0013b9ef: add byte ptr [eax + 6], bh; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x001a49e5: add byte ptr [eax + 8], bh; pop edi; ret; 
0x00097e5d: add byte ptr [eax + eax*2 - 0x75], dh; je 0x97e87; adc al, 0x89; ret 0xe283; 
0x001a525f: add byte ptr [eax + eax*8 + 0x1a80c74], al; jne 0x1a5280; lea eax, [ecx + 4]; ret; 
0x0013ac39: add byte ptr [eax + eax], 0x81; ret; 
0x0018c048: add byte ptr [eax + eax], 3; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0015d5b0: add byte ptr [eax + eax], al; add bh, bh; je 0x15d5db; or al, 0x55; call edi; 
0x00130817: add byte ptr [eax + eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0012750e: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; 
0x001735cf: add byte ptr [eax + eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00066c09: add byte ptr [eax + eax], al; add byte ptr [ecx], bh; ret; 
0x00139b6a: add byte ptr [eax + eax], al; add byte ptr [ecx], ch; ret 0xc031; 
0x00194e72: add byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013cb7a: add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011f678: add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0016a139: add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x00097f4d: add byte ptr [eax + ecx*2 - 0x75], dh; je 0x97f77; adc al, 0x89; ret 0xe283; 
0x001517bd: add byte ptr [eax - 0x12b7b], cl; call dword ptr [edx - 0x18]; 
0x001479ef: add byte ptr [eax - 0x162676ed], cl; ret 0xfffb; 
0x001a2ac9: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001729a7: add byte ptr [eax - 0x18], dl; bound edi, qword ptr [edx]; bnd jmp dword ptr [ebp - 0x75]; 
0x0011a6dd: add byte ptr [eax - 0x18], dl; cmp al, 0x2f; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00172a2f: add byte ptr [eax - 0x18], dl; fidivr dword ptr [ecx]; bnd jmp dword ptr [ebp - 0x75]; 
0x00172bc7: add byte ptr [eax - 0x18], dl; inc edx; cmp dl, dh; jmp dword ptr [ebp - 0x75]; 
0x00181988: add byte ptr [eax - 0x18], dl; int1; mov ebx, 0xc483fff0; adc bl, ch; ret; 
0x0017b9a0: add byte ptr [eax - 0x18], dl; mov ecx, 0x83fff11c; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00161220: add byte ptr [eax - 0x18], dl; pop ecx; ret; 
0x00172aaf: add byte ptr [eax - 0x18], dl; pop edx; cmp edx, esi; jmp dword ptr [ebp - 0x75]; 
0x00181a28: add byte ptr [eax - 0x18], dl; push ecx; mov ebx, 0xc483fff0; adc bl, ch; ret; 
0x00041228: add byte ptr [eax - 0x18], dl; push ecx; ret; 
0x00159ab7: add byte ptr [eax - 0x18], dl; ret 0xf33a; 
0x0014c996: add byte ptr [eax - 0x18], dl; ret; 
0x00172b37: add byte ptr [eax - 0x18], dl; sar byte ptr [eax], cl; bnd jmp dword ptr [ebp - 0x75]; 
0x0013943e: add byte ptr [eax - 0x196418], dl; jmp dword ptr [esi - 0x70]; 
0x001394ee: add byte ptr [eax - 0x1a1418], dl; jmp dword ptr [esi - 0x70]; 
0x000d3fed: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x00057f8a: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; call dword ptr [eax - 1]; 
0x000575e8: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x00130b07: add byte ptr [eax - 0x27770000], al; pop ebx; pop esi; pop edi; ret; 
0x000b4e62: add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001a2ada: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001ab7e6: add byte ptr [eax - 0x2f517], al; dec dword ptr [ebp + 0x7d8b0076]; mov al, 0x39; ret; 
0x001a2aeb: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0011f628: add byte ptr [eax - 0x37fea1a5], al; adc edx, 0; ret; 
0x000c3dfe: add byte ptr [eax - 0x3f7cf775], dl; add al, 0x83; ret 0x8b04; 
0x000fd1ee: add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x000f9f5a: add byte ptr [eax - 0x3f7cf8f4], cl; add dword ptr [ecx], edi; ret; 
0x0019f0ce: add byte ptr [eax - 0x3fcea0a2], dl; pop ebp; ret; 
0x001a2ece: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x001a5159: add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001687fe: add byte ptr [eax - 0x47fb3b7d], dl; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a449e: add byte ptr [eax - 0x47fb3b7d], dl; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00147971: add byte ptr [eax - 0x48], al; add byte ptr [edi], cl; inc esp; ret; 
0x000db653: add byte ptr [eax - 0x54], ch; ret 0xf0; 
0x000ec54e: add byte ptr [eax - 0x6128418], dl; inc dword ptr [ebx - 0x17a8f314]; ret 0x644; 
0x00148eff: add byte ptr [eax - 0x6bf0d106], al; ret 0xc083; 
0x000bee6e: add byte ptr [eax - 0x723f43f1], dl; inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0012793e: add byte ptr [eax - 0x72f3137d], dl; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x0011f78e: add byte ptr [eax - 0x72f3137d], dl; xchg byte ptr [esi], ah; push esi; stc; call dword ptr [eax - 0x18]; 
0x0015239e: add byte ptr [eax - 0x72f3137d], dl; xor byte ptr [eax - 0x3d], 0xf9; call dword ptr [eax - 0x18]; 
0x001207de: add byte ptr [eax - 0x72f7137d], dl; xchg esi, eax; mov dword ptr [edx - 7], ebx; call dword ptr [edx - 0x77]; 
0x000c2171: add byte ptr [eax - 0x73], dl; adc byte ptr [ecx], 0x55; stc; call dword ptr [eax - 0x18]; 
0x0002fc24: add byte ptr [eax - 0x73], dl; adc byte ptr [edi + 0x3b], 0xf9; call dword ptr [eax - 0x18]; 
0x000a050f: add byte ptr [eax - 0x73], dl; adc byte ptr [edi + 0x52], 0xf9; call dword ptr [eax - 0x18]; 
0x00031ae1: add byte ptr [eax - 0x73], dl; adc byte ptr [esp + edi], 0xf9; call dword ptr [eax - 0x18]; 
0x00153481: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x500000a0], -0x73; sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x000dbd00: add byte ptr [eax - 0x73], dl; adc dword ptr [eax], -0x52; stc; call dword ptr [eax - 0x18]; 
0x000a11e0: add byte ptr [eax - 0x73], dl; adc dword ptr [eax], -0x5f; stc; call dword ptr [eax - 0x18]; 
0x000322e8: add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x000c7b27: add byte ptr [eax - 0x73], dl; adc dword ptr [esi + eax*4 - 7], 0x4be850ff; ret 0xfff6; 
0x000a3b6a: add byte ptr [eax - 0x73], dl; adc esp, 0x53; stc; call dword ptr [eax - 0x18]; 
0x000a0486: add byte ptr [eax - 0x73], dl; add al, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x00150a85: add byte ptr [eax - 0x73], dl; add byte ptr [edx], 0x6e; stc; call dword ptr [eax - 0x18]; 
0x000dbd1f: add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x00146b0d: add byte ptr [eax - 0x73], dl; add esp, 0x6b; stc; call dword ptr [eax - 0x18]; 
0x0005d13f: add byte ptr [eax - 0x73], dl; and ah, 0x8a; stc; call dword ptr [eax - 0x18]; 
0x000a03fa: add byte ptr [eax - 0x73], dl; and ah, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x000c214e: add byte ptr [eax - 0x73], dl; and al, 0x54; stc; call dword ptr [eax - 0x18]; 
0x00059f9b: add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x00157368: add byte ptr [eax - 0x73], dl; and dword ptr [eax - 0x3c], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001574e7: add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0002869d: add byte ptr [eax - 0x73], dl; and edx, 0x3a; stc; call dword ptr [eax - 0x18]; 
0x0012486f: add byte ptr [eax - 0x73], dl; cmp ah, 0xd9; out dx, al; call dword ptr [eax - 0x73]; 
0x00031b06: add byte ptr [eax - 0x73], dl; cmp bh, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x000d01c6: add byte ptr [eax - 0x73], dl; cmp dword ptr [eax - 0x56], -7; call dword ptr [eax - 0x18]; 
0x00080238: add byte ptr [eax - 0x73], dl; cmp dword ptr [edx + 0x4e], -7; call dword ptr [eax - 0x18]; 
0x0008b4c0: add byte ptr [eax - 0x73], dl; cmp dword ptr [edx + 0x4e], -7; call dword ptr [eax - 0x18]; mov dl, 0x88; cli; jmp dword ptr [esi - 0x70]; 
0x0015f7c8: add byte ptr [eax - 0x73], dl; cmp dword ptr [edx + edi*2], -0xf; call dword ptr [eax - 0x73]; 
0x001784b4: add byte ptr [eax - 0x73], dl; cmp eax, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x0015e44f: add byte ptr [eax - 0x73], dl; cmp esp, 0x78; int1; call dword ptr [eax - 0x73]; 
0x00169fc4: add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x000c212b: add byte ptr [eax - 0x73], dl; or byte ptr [ebx + ebp*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0005d11a: add byte ptr [eax - 0x73], dl; or byte ptr [ebx + ecx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00151a93: add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x6e], 0xf9; call dword ptr [eax - 0x18]; 
0x0015347a: add byte ptr [eax - 0x73], dl; or dword ptr [eax + 0x500000a0], 0xffffff8d; adc dword ptr [eax + 0x500000a0], -0x73; sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x000e8aa8: add byte ptr [eax - 0x73], dl; or dword ptr [eax], 0xffffffaf; stc; call dword ptr [eax - 0x18]; 
0x0005d169: add byte ptr [eax - 0x73], dl; or dword ptr [ebp + 0x41], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0014ca28: add byte ptr [eax - 0x73], dl; sbb byte ptr [eax], 0xc0; stc; call dword ptr [eax - 0x18]; 
0x00161058: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x5c], 0; add byte ptr [eax - 0x73], dl; sbb esp, 0x7a; int1; call dword ptr [eax - 0x73]; 
0x001722c0: add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + 0x75], -7; call dword ptr [eax + 0x6a]; 
0x0014b793: add byte ptr [eax - 0x73], dl; sbb dword ptr [edi + edi*4], -7; call dword ptr [eax - 0x18]; 
0x00153488: add byte ptr [eax - 0x73], dl; sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x0015730a: add byte ptr [eax - 0x73], dl; sbb dword ptr [esp + eax*8], -7; call dword ptr [eax - 0x18]; 
0x00161ec8: add byte ptr [eax - 0x73], dl; sbb dword ptr [esp + edi*2], -0xf; call dword ptr [eax - 0x73]; 
0x001573ce: add byte ptr [eax - 0x73], dl; sbb eax, -0x3c; stc; call dword ptr [eax - 0x18]; 
0x00157339: add byte ptr [eax - 0x73], dl; sbb eax, -0x3d; stc; call dword ptr [eax - 0x18]; 
0x00161e1f: add byte ptr [eax - 0x73], dl; sbb esp, -0x4f; bnd call dword ptr [eax - 0x18]; 
0x0015f71f: add byte ptr [eax - 0x73], dl; sbb esp, -0x76; bnd call dword ptr [eax - 0x18]; 
0x00152618: add byte ptr [eax - 0x73], dl; sbb esp, 0x75; int1; call dword ptr [eax - 0x73]; 
0x0016105f: add byte ptr [eax - 0x73], dl; sbb esp, 0x7a; int1; call dword ptr [eax - 0x73]; 
0x0014c92b: add byte ptr [eax - 0x73], dl; sub al, 0xbf; stc; call dword ptr [eax - 0x18]; 
0x000a041d: add byte ptr [eax - 0x73], dl; sub byte ptr [edi + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00152611: add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; sbb esp, 0x75; int1; call dword ptr [eax - 0x73]; 
0x0015256f: add byte ptr [eax - 0x73], dl; sub dword ptr [ecx + edi*4], -0xf; call dword ptr [eax - 0x18]; 
0x0014d430: add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], 0x6d; stc; call dword ptr [eax - 0x18]; 
0x0005facf: add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x63], -7; call dword ptr [eax + 0x6a]; 
0x000a309a: add byte ptr [eax - 0x73], dl; sub dword ptr [esi + 0x53], -7; call dword ptr [eax - 0x18]; 
0x0013a383: add byte ptr [eax - 0x73], dl; sub ecx, 0x67; stc; call dword ptr [eax + 0x6a]; 
0x00095270: add byte ptr [eax - 0x73], dl; test dword ptr [edx + 0x50], esi; stc; call dword ptr [eax - 0x18]; 
0x000a24be: add byte ptr [eax - 0x73], dl; xchg ah, dh; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000d5987: add byte ptr [eax - 0x73], dl; xchg al, bh; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x0014cfed: add byte ptr [eax - 0x73], dl; xchg bl, bh; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00058eb4: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*2], ch; stc; call dword ptr [eax - 0x18]; 
0x000a249b: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; push ebx; stc; call dword ptr [eax - 0x18]; 
0x0002c387: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x000dfe56: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x56], dh; stc; call dword ptr [eax - 0x18]; 
0x0002743b: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x39], bl; stc; call dword ptr [eax - 0x18]; 
0x00058e6a: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx], al; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0005d24c: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x41], ch; stc; call dword ptr [eax - 0x18]; 
0x0010ec19: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x59], al; stc; call dword ptr [eax - 0x18]; 
0x00176b33: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x73], ch; stc; call dword ptr [eax + 0x6a]; 
0x0017a929: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x76], ah; stc; call dword ptr [eax - 0x18]; 
0x0002b646: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + eax*4 - 7], ah; call dword ptr [eax - 0x18]; 
0x0014240e: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], cl; push -7; call dword ptr [eax - 0x18]; 
0x0009fc0e: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], dl; push edx; stc; call dword ptr [eax - 0x18]; 
0x000921b8: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ecx*2 - 7], bh; call dword ptr [eax - 0x18]; 
0x0014a176: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*4], bl; stc; call dword ptr [eax - 0x18]; 
0x0009fba1: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi], ch; push edx; stc; call dword ptr [eax - 0x18]; 
0x0009376e: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x50], dh; stc; call dword ptr [eax - 0x18]; 
0x000299be: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], al; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00026fbd: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bl; cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x0014d00c: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], cl; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0002746b: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x39], cl; stc; call dword ptr [eax - 0x18]; 
0x00058e45: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00150740: add byte ptr [eax - 0x73], dl; xchg cl, bh; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0002c2f4: add byte ptr [eax - 0x73], dl; xchg dh, cl; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x0002998b: add byte ptr [eax - 0x73], dl; xchg dl, ah; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00150763: add byte ptr [eax - 0x73], dl; xchg dl, bh; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00058f72: add byte ptr [eax - 0x73], dl; xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x00087080: add byte ptr [eax - 0x73], dl; xchg dl, dl; dec esi; stc; call dword ptr [eax - 0x18]; 
0x0009c4ff: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x51], ecx; stc; call dword ptr [eax - 0x18]; 
0x00049756: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + eax*2], ebp; stc; call dword ptr [eax - 0x18]; 
0x000a3ded: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x00134244: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x49], ebx; stc; call dword ptr [eax - 0x18]; 
0x000a2a0f: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x5b], esi; stc; call dword ptr [eax - 0x18]; 
0x0009acdd: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x68], ecx; stc; call dword ptr [eax - 0x18]; 
0x00092196: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x6c], ebp; stc; call dword ptr [eax - 0x18]; 
0x000a3e10: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], eax; test al, 0xf9; call dword ptr [eax - 0x18]; 
0x000a264f: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebp; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0017f26e: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; ja 0x17f26e; call dword ptr [eax - 0x18]; 
0x0010d03d: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + 0x59], ecx; stc; call dword ptr [eax - 0x18]; 
0x000497e2: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], esi; stc; call dword ptr [eax - 0x18]; 
0x000c413e: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0005d0f5: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ecx*4 - 7], ebx; call dword ptr [eax - 0x18]; 
0x00049852: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], eax; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00165718: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], ebx; jae 0x165718; call dword ptr [eax - 0x18]; 
0x0010e774: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x59], eax; stc; call dword ptr [eax - 0x18]; 
0x0017ae0a: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x76], esp; stc; call dword ptr [eax - 0x18]; 
0x0002aa5a: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + eax*4 - 7], esp; call dword ptr [eax - 0x18]; 
0x0002a9ce: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002a9f1: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + eax*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0010e6ba: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ebx*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0009ca25: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ebx*4], ebx; stc; call dword ptr [eax - 0x18]; 
0x00049805: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ebx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000921da: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ecx; push eax; stc; call dword ptr [eax - 0x18]; 
0x00049875: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + eax*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x00092254: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ecx*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x001342ad: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + esi*4 - 7], edi; call dword ptr [eax - 0x18]; 
0x0002748f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], edi; cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x0017f29f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], esp; ja 0x17f29f; call dword ptr [eax - 0x18]; 
0x000498bb: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x00179b4c: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edi; jae 0x179b4c; call dword ptr [eax + 0x6a]; 
0x00179fbd: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edi; jae 0x179fbd; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x000a2d71: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edi; stc; call dword ptr [eax - 0x18]; 
0x0004979c: add byte ptr [eax - 0x73], dl; xchg eax, eax; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x000a2a95: add byte ptr [eax - 0x73], dl; xchg eax, ebx; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00177892: add byte ptr [eax - 0x73], dl; xchg eax, edi; jb 0x177892; call dword ptr [eax + 0x6a]; 
0x00049579: add byte ptr [eax - 0x73], dl; xchg eax, edi; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x0017f24b: add byte ptr [eax - 0x73], dl; xchg ebx, esi; jbe 0x17f24b; call dword ptr [eax - 0x18]; 
0x000921fc: add byte ptr [eax - 0x73], dl; xchg edi, ebx; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000498de: add byte ptr [eax - 0x73], dl; xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00028db1: add byte ptr [eax - 0x73], dl; xchg edx, esp; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00159b5b: add byte ptr [eax - 0x73], dl; xchg edx, esp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00049779: add byte ptr [eax - 0x73], dl; xchg esi, ebp; aas; stc; call dword ptr [eax - 0x18]; 
0x00029f31: add byte ptr [eax - 0x73], dl; xchg esi, ecx; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x001656f5: add byte ptr [eax - 0x73], dl; xchg esi, edi; jb 0x1656f5; call dword ptr [eax - 0x18]; 
0x000a1e8e: add byte ptr [eax - 0x73], dl; xchg esi, esi; push edx; stc; call dword ptr [eax - 0x18]; 
0x00092174: add byte ptr [eax - 0x73], dl; xchg esp, eax; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000a20ed: add byte ptr [eax - 0x73], dl; xchg esp, eax; push edx; stc; call dword ptr [eax - 0x18]; 
0x00030e65: add byte ptr [eax - 0x73], dl; xchg esp, ecx; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00134221: add byte ptr [eax - 0x73], dl; xchg esp, ecx; stc; call dword ptr [eax - 0x18]; 
0x00092152: add byte ptr [eax - 0x73], dl; xchg esp, edx; pop eax; stc; call dword ptr [eax - 0x18]; 
0x00031b5a: add byte ptr [eax - 0x73], dl; xor cl, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x000dbce1: add byte ptr [eax - 0x73], dl; xor dword ptr [ebx], 0x56; stc; call dword ptr [eax - 0x18]; 
0x000944ff: add byte ptr [eax - 0x73], dl; xor dword ptr [edx + 0x50], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00094560: add byte ptr [eax - 0x73], dl; xor dword ptr [edx*4 - 0x17af0007], 0x12; clc; stc; jmp dword ptr [esi - 0x70]; 
0x0005d18e: add byte ptr [eax - 0x73], dl; xor dword ptr [esi], 0x41; stc; call dword ptr [eax - 0x18]; 
0x0014d840: add byte ptr [eax - 0x73], dl; xor esp, 0xffffffc0; stc; call dword ptr [eax - 0x18]; 
0x0014d840: add byte ptr [eax - 0x73], dl; xor esp, 0xffffffc0; stc; call dword ptr [eax - 0x18]; xor ah, byte ptr [ebp - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0011223d: add byte ptr [eax - 0x749af732], al; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x001848de: add byte ptr [eax - 0x74aca9a9], dl; je 0x18490a; adc al, ch; sub eax, 0x81ffffe4; ret; 
0x0007ffde: add byte ptr [eax - 0x74aca9a9], dl; je 0x8000a; adc al, ch; sub eax, 0x8100102d; ret; 
0x000894fe: add byte ptr [eax - 0x74aca9a9], dl; je 0x8952a; adc al, ch; or eax, 0x81000f98; ret; 
0x0017333e: add byte ptr [eax - 0x74f7137d], dl; inc ebx; or bh, bh; je 0x17336d; adc al, 0x53; call dword ptr [eax]; 
0x0007af1e: add byte ptr [eax - 0x74f7137d], dl; pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00056127: add byte ptr [eax - 0x75], dl; add cl, byte ptr [ecx - 0x365f6b]; dec dword ptr [ebp - 0x700b7c7c]; clc; call dword ptr [eax + 0x51]; 
0x00133113: add byte ptr [eax - 0x75], dl; inc ebp; mov esp, 0x6585808d; stc; call dword ptr [eax - 1]; 
0x00159acf: add byte ptr [eax - 0x75], dl; je 0x159af8; sbb al, 0x8d; xchg byte ptr [edi + 0x6f], ah; stc; call dword ptr [eax - 0x18]; 
0x000ecd9e: add byte ptr [eax - 0x7663ba75], dl; jecxz 0xecd29; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0008dbd0: add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000b0fae: add byte ptr [eax - 0x7699ee77], dl; push ecx; add al, 0x5b; ret; 
0x000d883a: add byte ptr [eax - 0x76bbdbac], cl; ret; 
0x0008db35: add byte ptr [eax - 0x76c58bc0], ch; ret 0xe283; 
0x0018331e: add byte ptr [eax - 0x76f3137d], dl; ret; 
0x00182e9e: add byte ptr [eax - 0x77c2dcf], dl; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x000ad68e: add byte ptr [eax - 0x7af07f80], 0xe8; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x00181cdc: add byte ptr [eax - 0x7af0cf06], al; ret; 
0x0005de6e: add byte ptr [eax - 0x7afc147d], dl; fisttp dword ptr [ecx + 0xf04245c]; lahf; ret; 
0x000374b6: add byte ptr [eax - 0x7bf0ce06], al; ret 0; 
0x000964e7: add byte ptr [eax - 0x7c308bfc], ch; in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x000420e0: add byte ptr [eax - 0x7c3642f1], al; int1; pop ds; shr eax, cl; ret; 
0x00174abe: add byte ptr [eax - 0x7ccd49f1], dl; ret 0x8301; 
0x0012f23e: add byte ptr [eax - 0x7cf7af77], dl; rcl byte ptr [eax], 0x83; ret 0x890c; 
0x000c14c3: add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x00098668: add byte ptr [eax - 0x7d000000], 0xe0; cmp dword ptr [ebx + 0x17408f8], eax; ret; 
0x00031890: add byte ptr [eax - 0x7f72fff8], al; cmp al, 0x83; stc; call dword ptr [eax - 0x18]; 
0x001382fe: add byte ptr [eax - 0x82418], dl; jmp dword ptr [esi - 0x70]; 
0x00110fde: add byte ptr [eax - 0x8461418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x001383fe: add byte ptr [eax - 0x92418], dl; jmp dword ptr [esi - 0x70]; 
0x0012058e: add byte ptr [eax - 0x93bc418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00120abe: add byte ptr [eax - 0x940f418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x0005b83c: add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x000257bc: add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x0008a16f: add byte ptr [eax - 1], bh; mov edx, eax; ret; 
0x000e815f: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00098f14: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003c1ec: add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003cbcc: add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c18c: add byte ptr [eax - 1], bh; ret; 
0x00025ccb: add byte ptr [eax - 1], dl; jae 0x25cd4; call edi; 
0x0002ac4a: add byte ptr [eax - 1], dl; je 0x2ac73; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002b8c7: add byte ptr [eax - 1], dl; je 0x2b8f0; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x0002ceff: add byte ptr [eax - 1], dl; je 0x2cf28; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002e2db: add byte ptr [eax - 1], dl; je 0x2e304; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0018c854: add byte ptr [eax], 0; add al, ch; mov esp, 0x81ffff64; ret; 
0x0010af9b: add byte ptr [eax], 0; add byte ptr [eax + 0x72], bh; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x00097e5a: add byte ptr [eax], 0; add byte ptr [eax + eax*2 - 0x75], dh; je 0x97e87; adc al, 0x89; ret 0xe283; 
0x00097f4a: add byte ptr [eax], 0; add byte ptr [eax + ecx*2 - 0x75], dh; je 0x97f77; adc al, 0x89; ret 0xe283; 
0x000c450a: add byte ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0008dbcd: add byte ptr [eax], 0; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0008db32: add byte ptr [eax], 0; add byte ptr [eax - 0x76c58bc0], ch; ret 0xe283; 
0x0002cefc: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2cf28; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002e2d8: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2e304; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00092330: add byte ptr [eax], 0; add byte ptr [eax], dl; jne 0x92340; xor eax, eax; add esp, 0xc; ret; 
0x00158bf1: add byte ptr [eax], 0; add byte ptr [ebp + 0x41880fd2], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00097e54: add byte ptr [eax], 0; add byte ptr [ebx + 0x8080], cl; add byte ptr [eax + eax*2 - 0x75], dh; je 0x97e87; adc al, 0x89; ret 0xe283; 
0x00097f44: add byte ptr [eax], 0; add byte ptr [ebx + 0x8080], cl; add byte ptr [eax + ecx*2 - 0x75], dh; je 0x97f77; adc al, 0x89; ret 0xe283; 
0x00089ed3: add byte ptr [eax], 0; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x89ed0; ret; 
0x0010b9ec: add byte ptr [eax], 0; add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ebx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00095004: add byte ptr [eax], 0; add byte ptr [ecx - 0x16f3dbbc], cl; ret; 
0x0013cdb8: add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x0008d5aa: add byte ptr [eax], 0; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000fd991: add byte ptr [eax], 0; add dh, dh; ret 0x7540; 
0x000fdaed: add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x00130b08: add byte ptr [eax], 0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000340fd: add byte ptr [eax], 0; ret; 
0x00059f98: add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x000c20a2: add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x00049df6: add byte ptr [eax], 0xf; xchg ebp, eax; ret 0xea83; 
0x0003417c: add byte ptr [eax], ah; add byte ptr [eax], al; ret; 
0x00092332: add byte ptr [eax], al; adc byte ptr [ebp + 9], dh; xor eax, eax; add esp, 0xc; ret; 
0x000a9bd7: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; insb byte ptr es:[edi], dx; mov eax, 0x450ffff6; ret 0x66c3; 
0x000a9e07: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; insb byte ptr es:[edi], dx; mov edi, 0x450ffff6; ret 0x66c3; 
0x0013d0f6: add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0013d3d5: add byte ptr [eax], al; add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0014a544: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x0008892d: add byte ptr [eax], al; add al, ch; call 0x810898d9; ret 0xe4df; 
0x00115a2d: add byte ptr [eax], al; add al, ch; call 0x81116108; ret 0x13df; 
0x00139e2d: add byte ptr [eax], al; add al, ch; call 0x8113a2c4; ret 0xcfdf; 
0x0012e523: add byte ptr [eax], al; add al, ch; inc byte ptr [edi + 5]; add byte ptr [ecx + 0x1088e9c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0005275d: add byte ptr [eax], al; add al, ch; mov eax, 0x81001305; ret 0x46af; 
0x0018c156: add byte ptr [eax], al; add al, ch; mov ebx, 0x81ffff6b; ret; 
0x0018c855: add byte ptr [eax], al; add al, ch; mov esp, 0x81ffff64; ret; 
0x000999e0: add byte ptr [eax], al; add al, ch; push 0x890006ef; xor dword ptr [edx + eax - 0x3b7d0000], 0x18; pop ebx; ret; 
0x00024fa6: add byte ptr [eax], al; add al, ch; ret 0xc21; 
0x0014aa46: add byte ptr [eax], al; add al, ch; ret 0xfe25; 
0x00111c05: add byte ptr [eax], al; add al, ch; ret; 
0x001396dd: add byte ptr [eax], al; add al, ch; sti; jecxz 0x1396e3; jmp dword ptr [esi - 0x70]; 
0x00085bc7: add byte ptr [eax], al; add bh, al; adc byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007a014: add byte ptr [eax], al; add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret; 
0x00078520: add byte ptr [eax], al; add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000a0ce3: add byte ptr [eax], al; add bh, al; add dword ptr [eax], ecx; add byte ptr [eax], al; add cl, ch; ret; 
0x0008b2eb: add byte ptr [eax], al; add bh, al; cmp byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00151d3b: add byte ptr [eax], al; add bh, al; cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x000eea45: add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0010a60d: add byte ptr [eax], al; add bh, al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x0008b267: add byte ptr [eax], al; add bh, al; xor byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00173476: add byte ptr [eax], al; add bh, bh; je 0x1734a0; sbb al, 0x53; call eax; 
0x00170d99: add byte ptr [eax], al; add bh, bh; jne 0x170def; push edi; call dword ptr [eax + 0x14]; 
0x0011ff8b: add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x000a321d: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a3820: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009edd1: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000e4f1c: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x0003c443: add byte ptr [eax], al; add bh, dh; fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; ret; 
0x0012a893: add byte ptr [eax], al; add bh, dh; fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; ret; 
0x000bf4c3: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x000ed8d9: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ed8e9: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ec919: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ec909: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x0004d68d: add byte ptr [eax], al; add bl, bl; lodsd eax, dword ptr [esi]; dec esp; sar ecx, 1; jmp dword ptr [ebp - 0x39]; 
0x000e7187: add byte ptr [eax], al; add bl, ch; add eax, 0x26748d; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x00169422: add byte ptr [eax], al; add bl, ch; fucomi st(0); mov ah, 0xfa; cld; jmp dword ptr [esi - 0x70]; 
0x0016bd02: add byte ptr [eax], al; add bl, ch; jecxz 0x16bcf0; aam 0xd1; cld; jmp dword ptr [esi - 0x70]; 
0x0018b636: add byte ptr [eax], al; add bl, ch; mov byte ptr [0xfad8a0e8], al; call dword ptr [ebx - 0x7d]; 
0x00162e9e: add byte ptr [eax], al; add bl, ch; mov dword ptr [0xfd6038e8], eax; jmp dword ptr [esi - 0x70]; 
0x000848d2: add byte ptr [eax], al; add bl, ch; mov dword ptr [ecx - 0x71e163d], ecx; stc; jmp dword ptr [esi - 0x70]; 
0x0007b472: add byte ptr [eax], al; add bl, ch; mov dword ptr [ecx - 0x7cfc163d], ecx; cli; jmp dword ptr [esi - 0x70]; 
0x00146ec0: add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x0016b351: add byte ptr [eax], al; add bl, ch; ret 0x85e8; 
0x000e24ca: add byte ptr [eax], al; add bl, ch; ret; 
0x001a5bbd: add byte ptr [eax], al; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00112f48: add byte ptr [eax], al; add bl, dl; call 0x29130fd4; ret; 
0x00114928: add byte ptr [eax], al; add bl, dl; call 0x291329b4; ret; 
0x00116308: add byte ptr [eax], al; add bl, dl; call 0x29134394; ret; 
0x0016d566: add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001a3268: add byte ptr [eax], al; add byte ptr [0xff], ah; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a329f: add byte ptr [eax], al; add byte ptr [0xfff], ah; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a32d8: add byte ptr [eax], al; add byte ptr [0xffff], ah; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x00108b72: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x108b80; pop ebx; pop esi; ret; 
0x0010fbd0: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10fbe0; pop ebx; pop esi; ret; 
0x00110ecd: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x110ee0; pop ebx; ret; 
0x00110f3d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x110f50; pop ebx; ret; 
0x001112fd: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x111310; pop ebx; ret; 
0x00112713: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x112720; pop ebx; pop esi; ret; 
0x0011b23d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11b250; pop ebx; ret; 
0x0011b74d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11b760; pop ebx; ret; 
0x0011bdbb: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11bdd0; pop ebx; ret; 
0x0011c8d2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11c8e0; pop ebx; pop esi; ret; 
0x0011c949: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11c958; pop ebx; ret; 
0x0011cc13: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11cc20; pop ebx; pop esi; ret; 
0x0011cfed: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11d000; pop ebx; ret; 
0x0011d4e9: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11d4f8; pop ebx; ret; 
0x0011d989: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11d998; pop ebx; ret; 
0x0011e0c2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11e0d0; pop ebx; pop esi; ret; 
0x0011e432: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11e440; pop ebx; pop esi; ret; 
0x0011edad: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11edc0; pop ebx; ret; 
0x0011edfd: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11ee10; pop ebx; ret; 
0x00120b4d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120b60; pop ebx; ret; 
0x00120ba2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120bb0; pop ebx; pop esi; ret; 
0x00123fc2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x123fd0; pop ebx; pop esi; ret; 
0x00126704: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x126718; pop ebx; pop esi; ret; 
0x00127d8d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x127da0; pop ebx; ret; 
0x00127de2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x127df0; pop ebx; pop esi; ret; 
0x0012a0d9: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12a0e8; pop ebx; ret; 
0x0012a71d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12a730; pop ebx; ret; 
0x0012a884: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12a890; ret; 
0x0012a97d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12a990; pop ebx; ret; 
0x0012b96d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12b980; pop ebx; ret; 
0x0012bbfd: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12bc10; pop ebx; ret; 
0x00189433: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x189440; pop ebx; pop esi; ret; 
0x0003c42e: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x3c440; pop ebx; ret; 
0x000603dd: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x603f0; pop ebx; ret; 
0x0009cf79: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x9cf88; pop ebx; ret; 
0x0009d592: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x9d5a0; pop ebx; pop esi; ret; 
0x0009dea1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x9deb0; pop ebx; ret; 
0x000d92bb: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xd92d0; pop ebx; ret; 
0x000e5dec: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xe5e00; pop ebx; pop esi; ret; 
0x000f8272: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf82c0; add esp, 0x18; pop ebx; ret; 
0x00108c09: add byte ptr [eax], al; add byte ptr [0xfffff001], bh; jae 0x24ef0; ret; 
0x0009876d: add byte ptr [eax], al; add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x000e4f5e: add byte ptr [eax], al; add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x001a5b8c: add byte ptr [eax], al; add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b0fcc: add byte ptr [eax], al; add byte ptr [eax + 0x1130f66], dl; pop ebx; ret; 
0x0009d2d1: add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011179b: add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x001115d4: add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x0008ecad: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008eed5: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x000e4cbf: add byte ptr [eax], al; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000e4eff: add byte ptr [eax], al; add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00111740: add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; call dword ptr gs:[0x10]; 
0x000f7de3: add byte ptr [eax], al; add byte ptr [eax + 0x20], bh; cmp dword ptr gs:[edx], 0x26; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000be31d: add byte ptr [eax], al; add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x000b348c: add byte ptr [eax], al; add byte ptr [eax + 0x288018a], dl; lea eax, [edx]; ret; 
0x000b7d1c: add byte ptr [eax], al; add byte ptr [eax + 0x288018a], dl; mov eax, edx; ret; 
0x000a60cc: add byte ptr [eax], al; add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x0008ea9d: add byte ptr [eax], al; add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x000b349c: add byte ptr [eax], al; add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000af0bc: add byte ptr [eax], al; add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000dc04d: add byte ptr [eax], al; add byte ptr [eax + 0x68], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x0008611c: add byte ptr [eax], al; add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [edi - 0x18]; 
0x0008611c: add byte ptr [eax], al; add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [edi - 0x18]; inc ebp; ret 0xffff; 
0x000895ac: add byte ptr [eax], al; add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x0012a6ac: add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010aff0: add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0010af9c: add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0012e0fd: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0012e14d: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012ecd8: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00193b7c: add byte ptr [eax], al; add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x001a2b0d: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0003fb17: add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x0012f585: add byte ptr [eax], al; add byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0009b981: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001099c8: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000984ad: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x001a4a33: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000930a5: add byte ptr [eax], al; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x001a49c6: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001a4a29: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0009be34: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008db52: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00095dcc: add byte ptr [eax], al; add byte ptr [eax + 0xf0b8], dl; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014648c: add byte ptr [eax], al; add byte ptr [eax + 0xf2cfa80], dl; xchg ebp, eax; ret; 
0x00093ccc: add byte ptr [eax], al; add byte ptr [eax + 0xf], al; test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x000d6ead: add byte ptr [eax], al; add byte ptr [eax + 0xfe580f5], cl; je 0xd6ed0; add eax, 2; ret; 
0x0009a275: add byte ptr [eax], al; add byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x000f7f43: add byte ptr [eax], al; add byte ptr [eax + 1], bh; cmp dword ptr gs:[edx], 0x26; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x000a4865: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x000929e5: add byte ptr [eax], al; add byte ptr [eax + 3], bh; ret; 
0x001a498a: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x001a49e3: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x00097e5b: add byte ptr [eax], al; add byte ptr [eax + eax*2 - 0x75], dh; je 0x97e87; adc al, 0x89; ret 0xe283; 
0x00097f4b: add byte ptr [eax], al; add byte ptr [eax + ecx*2 - 0x75], dh; je 0x97f77; adc al, 0x89; ret 0xe283; 
0x001479ed: add byte ptr [eax], al; add byte ptr [eax - 0x162676ed], cl; ret 0xfffb; 
0x0013943c: add byte ptr [eax], al; add byte ptr [eax - 0x196418], dl; jmp dword ptr [esi - 0x70]; 
0x001394ec: add byte ptr [eax], al; add byte ptr [eax - 0x1a1418], dl; jmp dword ptr [esi - 0x70]; 
0x000d3feb: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x00057f88: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; call dword ptr [eax - 1]; 
0x000575e6: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x0011f626: add byte ptr [eax], al; add byte ptr [eax - 0x37fea1a5], al; adc edx, 0; ret; 
0x000c3dfc: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cf775], dl; add al, 0x83; ret 0x8b04; 
0x000fd1ec: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x001a5157: add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0014796f: add byte ptr [eax], al; add byte ptr [eax - 0x48], al; add byte ptr [edi], cl; inc esp; ret; 
0x000ec54c: add byte ptr [eax], al; add byte ptr [eax - 0x6128418], dl; inc dword ptr [ebx - 0x17a8f314]; ret 0x644; 
0x00148efd: add byte ptr [eax], al; add byte ptr [eax - 0x6bf0d106], al; ret 0xc083; 
0x000bee6c: add byte ptr [eax], al; add byte ptr [eax - 0x723f43f1], dl; inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0012793c: add byte ptr [eax], al; add byte ptr [eax - 0x72f3137d], dl; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x0011f78c: add byte ptr [eax], al; add byte ptr [eax - 0x72f3137d], dl; xchg byte ptr [esi], ah; push esi; stc; call dword ptr [eax - 0x18]; 
0x0015239c: add byte ptr [eax], al; add byte ptr [eax - 0x72f3137d], dl; xor byte ptr [eax - 0x3d], 0xf9; call dword ptr [eax - 0x18]; 
0x001207dc: add byte ptr [eax], al; add byte ptr [eax - 0x72f7137d], dl; xchg esi, eax; mov dword ptr [edx - 7], ebx; call dword ptr [edx - 0x77]; 
0x000c216f: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc byte ptr [ecx], 0x55; stc; call dword ptr [eax - 0x18]; 
0x0002fc22: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc byte ptr [edi + 0x3b], 0xf9; call dword ptr [eax - 0x18]; 
0x000322e6: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x000c214c: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and al, 0x54; stc; call dword ptr [eax - 0x18]; 
0x00080236: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [edx + 0x4e], -7; call dword ptr [eax - 0x18]; 
0x000c2129: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; or byte ptr [ebx + ebp*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0014cfeb: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg bl, bh; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0010ec17: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x59], al; stc; call dword ptr [eax - 0x18]; 
0x0017a927: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x76], ah; stc; call dword ptr [eax - 0x18]; 
0x00026fbb: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bl; cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x0014d00a: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], cl; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0015073e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg cl, bh; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0009c4fd: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x51], ecx; stc; call dword ptr [eax - 0x18]; 
0x0009acdb: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x68], ecx; stc; call dword ptr [eax - 0x18]; 
0x000c413c: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0010e772: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x59], eax; stc; call dword ptr [eax - 0x18]; 
0x0017ae08: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x76], esp; stc; call dword ptr [eax - 0x18]; 
0x0009ca23: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ebx*4], ebx; stc; call dword ptr [eax - 0x18]; 
0x0017f249: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ebx, esi; jbe 0x17f24b; call dword ptr [eax - 0x18]; 
0x00092172: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg esp, eax; dec edi; stc; call dword ptr [eax - 0x18]; 
0x001848dc: add byte ptr [eax], al; add byte ptr [eax - 0x74aca9a9], dl; je 0x18490a; adc al, ch; sub eax, 0x81ffffe4; ret; 
0x0007ffdc: add byte ptr [eax], al; add byte ptr [eax - 0x74aca9a9], dl; je 0x8000a; adc al, ch; sub eax, 0x8100102d; ret; 
0x000894fc: add byte ptr [eax], al; add byte ptr [eax - 0x74aca9a9], dl; je 0x8952a; adc al, ch; or eax, 0x81000f98; ret; 
0x0007af1c: add byte ptr [eax], al; add byte ptr [eax - 0x74f7137d], dl; pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00056125: add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; add cl, byte ptr [ecx - 0x365f6b]; dec dword ptr [ebp - 0x700b7c7c]; clc; call dword ptr [eax + 0x51]; 
0x000ecd9c: add byte ptr [eax], al; add byte ptr [eax - 0x7663ba75], dl; jecxz 0xecd29; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0008dbce: add byte ptr [eax], al; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000b0fac: add byte ptr [eax], al; add byte ptr [eax - 0x7699ee77], dl; push ecx; add al, 0x5b; ret; 
0x0008db33: add byte ptr [eax], al; add byte ptr [eax - 0x76c58bc0], ch; ret 0xe283; 
0x0018331c: add byte ptr [eax], al; add byte ptr [eax - 0x76f3137d], dl; ret; 
0x00182e9c: add byte ptr [eax], al; add byte ptr [eax - 0x77c2dcf], dl; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x00181cda: add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x0005de6c: add byte ptr [eax], al; add byte ptr [eax - 0x7afc147d], dl; fisttp dword ptr [ecx + 0xf04245c]; lahf; ret; 
0x000374b4: add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ce06], al; ret 0; 
0x000420de: add byte ptr [eax], al; add byte ptr [eax - 0x7c3642f1], al; int1; pop ds; shr eax, cl; ret; 
0x00174abc: add byte ptr [eax], al; add byte ptr [eax - 0x7ccd49f1], dl; ret 0x8301; 
0x0012f23c: add byte ptr [eax], al; add byte ptr [eax - 0x7cf7af77], dl; rcl byte ptr [eax], 0x83; ret 0x890c; 
0x000c14c1: add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x001382fc: add byte ptr [eax], al; add byte ptr [eax - 0x82418], dl; jmp dword ptr [esi - 0x70]; 
0x00110fdc: add byte ptr [eax], al; add byte ptr [eax - 0x8461418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x001383fc: add byte ptr [eax], al; add byte ptr [eax - 0x92418], dl; jmp dword ptr [esi - 0x70]; 
0x0012058c: add byte ptr [eax], al; add byte ptr [eax - 0x93bc418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00120abc: add byte ptr [eax], al; add byte ptr [eax - 0x940f418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x000257ba: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00098f12: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003c1ea: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003cbca: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c18a: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0002b8c5: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2b8f0; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x0002cefd: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2cf28; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002e2d9: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2e304; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0010b9ea: add byte ptr [eax], al; add byte ptr [eax], 0; add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ebx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00049df4: add byte ptr [eax], al; add byte ptr [eax], 0xf; xchg ebp, eax; ret 0xea83; 
0x00162e9c: add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; mov dword ptr [0xfd6038e8], eax; jmp dword ptr [esi - 0x70]; 
0x0018ba35: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0007efe5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x00109c5f: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0xac24bc], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c6bdf: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0002fed5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00088a4e: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001099d5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00151baa: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0002300a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00151202: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0007bfa4: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a40], 0; ret; 
0x00109c60: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 0xac], edi; call dword ptr gs:[0x10]; 
0x000a2834: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008d725: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0016a877: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0007bfae: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007efe7: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x0014cb28: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000da6ed: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00151f05: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a2835: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00150a69: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0008dbc6: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0009f2f4: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x1988f37a], cl; call dword ptr [eax + 0x57]; 
0x00109c61: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0xac24bc], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a2801: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0008b295: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x1a7482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x000d996f: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x0016a878: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x000c6be1: add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x001a4a7c: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001a3f7c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x1a3fd0; lea eax, [ecx + 0xa]; ret; 
0x001a3f8c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x1a3fd0; lea eax, [ecx + 0xb]; ret; 
0x001a3f9c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x1a3fd0; lea eax, [ecx + 0xd]; ret; 
0x001a3fac: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x1a3fd0; lea eax, [ecx + 0xe]; ret; 
0x001a3fbc: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x1a3fd0; lea eax, [ecx + 0xf]; ret; 
0x001a3f0c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 1; jl 0x1a3fd0; lea eax, [ecx + 1]; ret; 
0x001a3f5c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 7; jl 0x1a3fd0; lea eax, [ecx + 7]; ret; 
0x001a3f6c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 9; jl 0x1a3fd0; lea eax, [ecx + 9]; ret; 
0x0009624a: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00078525: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002fed7: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0008af5e: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00150a50: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x00095314: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x00088a50: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0017d9c4: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000961dc: add byte ptr [eax], al; add byte ptr [eax], al; and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x000bee5c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000bf5ac: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000bee7c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bee4c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bf5cc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bf12c: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bf13c: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0018fa4c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x182d19; add ebx, 0x44f7b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008b14c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x182d21; add eax, 0x1abcbf; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x000b825c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x182d2d; add ecx, 0x10dbbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008ee40: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00151bac: add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00097c47: add byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; ret; 
0x0008e24e: add byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x0009b54f: add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0002300c: add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x000632bc: add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006ee5f: add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x00063495: add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0019f5f3: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x19fd70; pop ebx; ret; 
0x0019f42c: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x19fd86; pop ebx; ret; 
0x001a0d6b: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a0fb0; pop ebx; ret; 
0x001a2425: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a2650; pop ebx; ret; 
0x001a24e2: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a2670; pop ebx; ret; 
0x001a524c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001a54cc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x0009dde4: add byte ptr [eax], al; add byte ptr [eax], al; lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x00110e2c: add byte ptr [eax], al; add byte ptr [eax], al; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001a4a75: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d6ec8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x001a3d28: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a3d38: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a3d48: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a3d58: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a3d68: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a3cc8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a3cd8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a3ce8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a3cf8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a3d08: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a5246: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a3d18: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a2d19: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a2d29: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a2d39: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a2d49: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a2d59: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a2c98: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a2ca9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a2cb9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a2cc9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a2cd9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a2ce9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a2cf9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a2d09: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001a3179: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a3169: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a3159: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a3149: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a31e9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001a31d9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001a31c9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001a54d9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001a31b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001a31a9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001a3199: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001a3189: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a2c88: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001a4388: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a4398: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a43a8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a43b8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a4328: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a4338: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a4348: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a4358: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a4368: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a4378: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000b0f56: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008a168: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; mov edx, eax; ret; 
0x000a44b5: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x001685a5: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000342e8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00176315: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x001828a6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001a5219: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b0f68: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x0008d085: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x001a2d69: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x0008b165: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a2957: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a5287: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a4317: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x0008b127: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000d6ee7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x0008b177: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x000910b7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b0f47: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x001687a7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; ret; 
0x000bebe7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000baefc: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b0f5c: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008e884: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00078023: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0008b2ea: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1a7c], 0; ret; 
0x0008ec9d: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x00151204: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x00089f7c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00107f1d: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00097bb6: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00098f54: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], edx; ret; 
0x0014ba52: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00107f16: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00089f83: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x0008e88b: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0016a171: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0003cb16: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0016a14c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016a15c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0005a039: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0017e41c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x0009ae5c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x000b0fbc: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b0f8c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0007bfa6: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a40], 0; ret; 
0x00085bc6: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a54], 0; ret; 
0x0008b266: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a74], 0; ret; 
0x0009e63c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x390], eax; ret; 
0x00059f3c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx], 0; ret; 
0x00109c62: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 0xac], edi; call dword ptr gs:[0x10]; 
0x0009876c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x10; add esp, 0xc; ret; 
0x0008ecac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x0008eed4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x000dc04c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0003fb16: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012f584: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000930a4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0003cef4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0009a274: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x000a4864: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x000929e4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 3; ret; 
0x00120efc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x3c]; pop ebx; ret; 
0x001085fc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10854b; call eax; 
0x001086b4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10859a; call eax; 
0x0010865c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10854b; call eax; 
0x00168998: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x001a5b7c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000c09dc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00084ffc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00084ecc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x001a492c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0008eaac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0008ebb4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0017631c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x001828ac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0018294c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x001828dc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x001828bc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008b18c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x001a527c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000bdabc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001a384c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00024d6c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b1bec: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x000dbf4c: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0008ee34: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0009b4b1: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0012ad9d: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0006348b: add byte ptr [eax], al; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x0008f31d: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00084f04: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 1; mov eax, edx; ret; 
0x000e4964: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00175f6c: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x001a5bbc: add byte ptr [eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b0ffc: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b100c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b0fec: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b101c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0019810c: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x000d6f9a: add byte ptr [eax], al; add byte ptr [eax], al; nop; add eax, 2; ret; 
0x000bf5ba: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bf11a: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000704ea: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x0008e99b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x0008511a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0008274b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0xffffffff; ret; 
0x0016adda: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x000d6efa: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000d6f0a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d6f1a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d6f2a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x0013b4cb: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d6f3a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d6f4a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x000b0fcb: add byte ptr [eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0013d3ea: add byte ptr [eax], al; add byte ptr [eax], al; nop; movzx eax, dl; ret; 
0x001a0c6a: add byte ptr [eax], al; add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x0008b13a: add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x0016858b: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; add esp, 0xc; ret; 
0x0014582b: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0008b11a: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0008e98c: add byte ptr [eax], al; add byte ptr [eax], al; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0007f9bf: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000a2836: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008d727: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0019f2ac: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0004010d: add byte ptr [eax], al; add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0011bf10: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x000b6d3c: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00111d89: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000bb27c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x001a540c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x00174039: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0016a879: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00170d98: add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [ebp + 0x50]; push edi; call dword ptr [eax + 0x14]; 
0x000254d3: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008a2a4: add byte ptr [eax], al; add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x000e6bbc: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x00169534: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00171adc: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a47e4: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x0008b296: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x1a74], eax; cmp eax, 1; jg 0x8b2b0; ret; 
0x00182a0c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000342fc: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0012ddcc: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x000421e4: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x001a00ec: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000bf26c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0003cb1c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00193e9d: add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00092331: add byte ptr [eax], al; add byte ptr [eax], dl; jne 0x92340; xor eax, eax; add esp, 0xc; ret; 
0x00143a2f: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x18; pop ebx; ret; 
0x0019fd5a: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x00112780: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011cce0: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x001125a0: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0003c808: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x98; pop ebx; ret; 
0x0017d341: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x18; pop ebx; ret; 
0x00171c1f: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x1c; ret; 
0x00098719: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d7b77: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x0008407f: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x824; pop ebx; pop esi; ret; 
0x00085b7f: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x0017d2c7: add byte ptr [eax], al; add byte ptr [ebp + 0x15], dh; add esp, 0x18; pop ebx; ret; 
0x000d94f4: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x38; pop ebx; ret; 
0x0011ca9a: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0005e812: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x78; pop ebx; ret; 
0x0011f155: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x000edbe9: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x78; pop ebx; ret; 
0x0009e492: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x0008f225: add byte ptr [eax], al; add byte ptr [ebp + 0x19], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00059dc5: add byte ptr [eax], al; add byte ptr [ebp + 0x19], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x00171c9d: add byte ptr [eax], al; add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x000d6cca: add byte ptr [eax], al; add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x0012cb92: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0x18; pop ebx; ret; 
0x00121ade: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x1018; pop ebx; ret; 
0x00175462: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x0011b6fd: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000dbda7: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011f2cf: add byte ptr [eax], al; add byte ptr [ebp + 0x20], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012cecd: add byte ptr [eax], al; add byte ptr [ebp + 0x20], dh; add esp, 0x18; pop ebx; ret; 
0x0012ca6d: add byte ptr [eax], al; add byte ptr [ebp + 0x20], dh; add esp, 0x28; pop ebx; ret; 
0x0011f05d: add byte ptr [eax], al; add byte ptr [ebp + 0x20], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0018b6a1: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x18; pop ebx; ret; 
0x0009a421: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x2c; ret; 
0x0009a8cd: add byte ptr [eax], al; add byte ptr [ebp + 0x25], dh; add esp, 0x18; pop ebx; ret; 
0x0009a68d: add byte ptr [eax], al; add byte ptr [ebp + 0x25], dh; add esp, 0x2c; ret; 
0x001a4a76: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x000a44b6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x001685a6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 1; ret; 
0x00176316: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008d086: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; ret; 
0x0008b166: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x00061241: add byte ptr [eax], al; add byte ptr [ebp + 0x290578c9], al; fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x00145abf: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x0003d3d2: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d3e5; add esp, 0x9c; ret; 
0x0017b794: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; add esp, 0x18; pop ebx; ret; 
0x001a2640: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x00111ff2: add byte ptr [eax], al; add byte ptr [ebp + 0x2d], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x001754ea: add byte ptr [eax], al; add byte ptr [ebp + 0x30], dh; add esp, 0x18; pop ebx; ret; 
0x001737ce: add byte ptr [eax], al; add byte ptr [ebp + 0x31], dh; add esp, 0x1c; ret; 
0x00099686: add byte ptr [eax], al; add byte ptr [ebp + 0x31], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000e48e3: add byte ptr [eax], al; add byte ptr [ebp + 0x32], dh; add esp, 0x28; pop ebx; ret; 
0x0017b9fb: add byte ptr [eax], al; add byte ptr [ebp + 0x34], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004135a: add byte ptr [eax], al; add byte ptr [ebp + 0x35], dh; add esp, 0x18; pop ebx; ret; 
0x0016b3ab: add byte ptr [eax], al; add byte ptr [ebp + 0x36], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111e89: add byte ptr [eax], al; add byte ptr [ebp + 0x36], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0016947d: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00175328: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x18; pop ebx; ret; 
0x00099727: add byte ptr [eax], al; add byte ptr [ebp + 0x38], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x001442b6: add byte ptr [eax], al; add byte ptr [ebp + 0x396374ed], al; ret; 
0x0009eb42: add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0003c9ad: add byte ptr [eax], al; add byte ptr [ebp + 0x3a], dh; add esp, 0x28; pop ebx; ret; 
0x0009a527: add byte ptr [eax], al; add byte ptr [ebp + 0x3b], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d7b1c: add byte ptr [eax], al; add byte ptr [ebp + 0x3d0c90], cl; add byte ptr [ebx - 0x16fbdbbc], cl; ret 0xfffe; 
0x000d9180: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; add esp, 0x28; pop ebx; ret; 
0x00110b38: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x001a0f6e: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000dc106: add byte ptr [eax], al; add byte ptr [ebp + 0x3e8c8a], cl; add byte ptr [ebp - 0x15f1136e], cl; call dword ptr [ecx + 0x52]; 
0x00110e1f: add byte ptr [eax], al; add byte ptr [ebp + 0x3e], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00145fc0: add byte ptr [eax], al; add byte ptr [ebp + 0x3f], dh; add esp, 0x1c; ret; 
0x001458bf: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x00158bf2: add byte ptr [eax], al; add byte ptr [ebp + 0x41880fd2], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0017557e: add byte ptr [eax], al; add byte ptr [ebp + 0x41], dh; add esp, 0x18; pop ebx; ret; 
0x00108c64: add byte ptr [eax], al; add byte ptr [ebp + 0x41], dh; add esp, 0x28; pop ebx; ret; 
0x0009aa4c: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x001401f4: add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x000fd5da: add byte ptr [eax], al; add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x0007c19a: add byte ptr [eax], al; add byte ptr [ebp + 0x458b0076], cl; cmp byte ptr [ecx], bh; ret; 
0x0019fd26: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x0008c5aa: add byte ptr [eax], al; add byte ptr [ebp + 0x46], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00108cf7: add byte ptr [eax], al; add byte ptr [ebp + 0x46], dh; add esp, 0x28; pop ebx; ret; 
0x0003c6f3: add byte ptr [eax], al; add byte ptr [ebp + 0x46], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x001a2cca: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; add al, 0x5f; ret; 
0x001a54da: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cld; pop edi; ret; 
0x001a31aa: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cli; pop edi; ret; 
0x001a316a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cmc; pop edi; ret; 
0x001a2d3a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; or al, 0x5f; ret; 
0x001a314a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; pop edi; ret; 
0x001a2d5a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; push cs; pop edi; ret; 
0x001a2cea: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; push es; pop edi; ret; 
0x001a319a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; stc; pop edi; ret; 
0x001a31ca: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; std; pop edi; ret; 
0x001a31ba: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; sti; pop edi; ret; 
0x00145a1f: add byte ptr [eax], al; add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x0009a1b3: add byte ptr [eax], al; add byte ptr [ebp + 0x47], dh; add esp, 0x38; pop ebx; ret; 
0x0017f8ff: add byte ptr [eax], al; add byte ptr [ebp + 0x48], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0005b7ba: add byte ptr [eax], al; add byte ptr [ebp + 0x4a8b0076], cl; add al, 0x83; ret 0x8304; 
0x0008c43c: add byte ptr [eax], al; add byte ptr [ebp + 0x4c], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00171963: add byte ptr [eax], al; add byte ptr [ebp + 0x5128244c], cl; push 4; push eax; call dword ptr [edx + 0x14]; 
0x00108ddc: add byte ptr [eax], al; add byte ptr [ebp + 0x51], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0013a8f3: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0013a9c4: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x000d9235: add byte ptr [eax], al; add byte ptr [ebp + 0x52], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011dc17: add byte ptr [eax], al; add byte ptr [ebp + 0x56], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00184d61: add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000e7134: add byte ptr [eax], al; add byte ptr [ebp + 0x58896c58], cl; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0014595f: add byte ptr [eax], al; add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x0011b06a: add byte ptr [eax], al; add byte ptr [ebp + 0x5c], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0013a9e8: add byte ptr [eax], al; add byte ptr [ebp + 0x5d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011d95f: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x00175bd5: add byte ptr [eax], al; add byte ptr [ebp + 0x62], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00174f91: add byte ptr [eax], al; add byte ptr [ebp + 0x63], dh; add esp, 0x18; pop ebx; ret; 
0x000b0f69: add byte ptr [eax], al; add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; pop ebx; ret; 
0x001089c2: add byte ptr [eax], al; add byte ptr [ebp + 0x6d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016ebb6: add byte ptr [eax], al; add byte ptr [ebp + 0x70], dh; add esp, 0x18; pop ebx; ret; 
0x00175ae5: add byte ptr [eax], al; add byte ptr [ebp + 0x72], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d9962: add byte ptr [eax], al; add byte ptr [ebp + 0x7d890875], cl; add al, 0x39; ret 0x45c7; 
0x0011f1e2: add byte ptr [eax], al; add byte ptr [ebp + 0x7d], dh; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0007f826: add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0003c29f: add byte ptr [eax], al; add byte ptr [ebp + 0xa02494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e5a51: add byte ptr [eax], al; add byte ptr [ebp + 0xa], dh; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x001a2b07: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00146ed7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx + 0x75ff0cec], al; add byte ptr [ebx - 0x4d17fb3b], al; ret 0xffed; 
0x00172c97: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx + 0x788dff38], al; or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x0009ebd7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00116df7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x17a9f314], al; xchg edi, eax; ret; 
0x001828a7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x0011eae3: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x0008e248: add byte ptr [eax], al; add byte ptr [ebp + 0xbad2], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x00042d3a: add byte ptr [eax], al; add byte ptr [ebp + 0xc8d0076], cl; mov dh, 0x83; ret 0x8d01; 
0x0005a005: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x0011f39d: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x000ec8dc: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x1c; ret; 
0x001387d2: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x2c; ret; 
0x00042826: add byte ptr [eax], al; add byte ptr [ebp + 0xf0674d2], al; mov ebp, 0x1ff083c2; ret; 
0x00094dea: add byte ptr [eax], al; add byte ptr [ebp + 0xf0a0054], cl; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00171d4b: add byte ptr [eax], al; add byte ptr [ebp + 0xf], dh; add esp, 0x28; pop ebx; ret; 
0x000254cd: add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000254aa: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x00040237: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x00128b12: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x3c; ret; 
0x00172fa5: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x0012de35: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x7c; ret; 
0x0003bdb5: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x00095386: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x0009e01b: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000d7ca7: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x00060704: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x0008cda1: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003d1a5: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120cd5: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x001764dc: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0012ce6c: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000dc2b5: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0003d3d9: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x0017657f: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0011b1bb: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x001499d3: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x00060685: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0003cd65: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x128; pop ebx; ret; 
0x00120152: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x000e58a7: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0003a8c6: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c606: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c0f5: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00054a54: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000a4030: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x0003c79a: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x001a0fa2: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x000a996a: add byte ptr [eax], al; add byte ptr [ebp - 0x17acff8a], cl; mov dword ptr [0x81000d93], eax; ret; 
0x00182b59: add byte ptr [eax], al; add byte ptr [ebp - 0x17ffd98c], cl; mov eax, 0x81000001; ret 0x42af; 
0x0008545d: add byte ptr [eax], al; add byte ptr [ebp - 0x18], dl; ret; 
0x00154ef4: add byte ptr [eax], al; add byte ptr [ebp - 0x23687240], al; cmp al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00024aec: add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000d59c0: add byte ptr [eax], al; add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x001a521a: add byte ptr [eax], al; add byte ptr [ebp - 0x3776ff8a], cl; ret; 
0x0014dbdd: add byte ptr [eax], al; add byte ptr [ebp - 0x387cfeba], cl; adc byte ptr [ecx], bh; ret 0x6674; 
0x00082f33: add byte ptr [eax], al; add byte ptr [ebp - 0x39], ah; add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000517c1: add byte ptr [eax], al; add byte ptr [ebp - 0x39], ah; add byte ptr [edx], ah; add byte ptr [eax], al; add cl, ch; ret; 
0x0003cc9d: add byte ptr [eax], al; add byte ptr [ebp - 0x39], ah; add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00114073: add byte ptr [eax], al; add byte ptr [ebp - 0x39], ah; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003c183: add byte ptr [eax], al; add byte ptr [ebp - 0x39], ah; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x001228fb: add byte ptr [eax], al; add byte ptr [ebp - 0x39], ah; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008416a: add byte ptr [eax], al; add byte ptr [ebp - 0x39fc8b37], al; add al, byte ptr [eax]; pop ebx; ret; 
0x00131d19: add byte ptr [eax], al; add byte ptr [ebp - 0x39ffd98c], cl; inc edx; jmp dword ptr [eax]; 
0x00121b40: add byte ptr [eax], al; add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x001a2d6a: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; pop edi; ret; 
0x001726dd: add byte ptr [eax], al; add byte ptr [ebp - 0x46], dl; add byte ptr [edi], ch; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0012a673: add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002907a: add byte ptr [eax], al; add byte ptr [ebp - 0x57cff8a], cl; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000a5055: add byte ptr [eax], al; add byte ptr [ebp - 0x6563b80], cl; call dword ptr [eax + 0x68]; 
0x000a4b8c: add byte ptr [eax], al; add byte ptr [ebp - 0x6567f80], cl; call dword ptr [eax + 0x68]; 
0x0014bf64: add byte ptr [eax], al; add byte ptr [ebp - 0x693827d], cl; call dword ptr [eax - 0x73]; 
0x0014bdbf: add byte ptr [eax], al; add byte ptr [ebp - 0x694117d], cl; call dword ptr [eax - 0x73]; 
0x0005f87d: add byte ptr [eax], al; add byte ptr [ebp - 0x696a47d], cl; call dword ptr [ebp + 0x50]; 
0x00033e75: add byte ptr [eax], al; add byte ptr [ebp - 0x699f27d], cl; call dword ptr [esi - 1]; 
0x0011b01d: add byte ptr [eax], al; add byte ptr [ebp - 0x6a5da7a], cl; call dword ptr [eax - 0x18]; 
0x0003999c: add byte ptr [eax], al; add byte ptr [ebp - 0x6a9ff55], cl; inc dword ptr [ebx - 0x7c72f314]; sar dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x0009c9c1: add byte ptr [eax], al; add byte ptr [ebp - 0x6ae9e79], cl; call dword ptr [eax - 0x73]; 
0x00094734: add byte ptr [eax], al; add byte ptr [ebp - 0x6afa27a], cl; call dword ptr [eax - 0x73]; 
0x0009391a: add byte ptr [eax], al; add byte ptr [ebp - 0x6afaa7a], cl; call dword ptr [eax - 0x73]; 
0x0005bb61: add byte ptr [eax], al; add byte ptr [ebp - 0x6c07242], cl; jmp dword ptr [ebp - 0x75]; 
0x0007efe9: add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x001a3d09: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; pop es; ret; 
0x001a3d59: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push cs; ret; 
0x001a3cf9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push es; ret; 
0x001a43b9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push cs; ret; 
0x001a4359: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push es; ret; 
0x001a2c89: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; pop es; pop edi; ret; 
0x00108e66: add byte ptr [eax], al; add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00108db6: add byte ptr [eax], al; add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00127061: add byte ptr [eax], al; add byte ptr [ebp - 0x74cf8a40], al; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00126fc1: add byte ptr [eax], al; add byte ptr [ebp - 0x74cf8a40], al; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00108cd1: add byte ptr [eax], al; add byte ptr [ebp - 0x74cf8a40], al; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00108f2e: add byte ptr [eax], al; add byte ptr [ebp - 0x74d48a40], al; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00108c3e: add byte ptr [eax], al; add byte ptr [ebp - 0x74d48a40], al; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00120a93: add byte ptr [eax], al; add byte ptr [ebp - 0x74d98a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120563: add byte ptr [eax], al; add byte ptr [ebp - 0x74d98a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00110fb3: add byte ptr [eax], al; add byte ptr [ebp - 0x74d98a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x000342e9: add byte ptr [eax], al; add byte ptr [ebp - 0x74ffd98c], cl; inc esp; and al, 4; and eax, 0x7f; ret; 
0x00100989: add byte ptr [eax], al; add byte ptr [ebp - 0x74ffd98c], cl; or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x00081a38: add byte ptr [eax], al; add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x0013d2dc: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x548d9804], cl; add ch, byte ptr [ecx - 0xcb17]; jmp dword ptr [esi - 0x70]; 
0x00140f50: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; add cl, ch; ret 0xfffe; 
0x00071cb9: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; add dword ptr [ecx - 0x5577b], ecx; jmp dword ptr [ebp - 0x39]; 
0x0011e8c5: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; das; call dword ptr gs:[0x10]; 
0x0009856e: add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x000e494a: add byte ptr [eax], al; add byte ptr [ebp - 0x76e88b40], al; ret 0xf75b; 
0x000aa0b9: add byte ptr [eax], al; add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x001137ed: add byte ptr [eax], al; add byte ptr [ebp - 0x777bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x00152149: add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00024f00: add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; add bh, byte ptr [eax - 1]; ret; 
0x0003e81f: add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; pop ss; push dword ptr [ebx + 4]; call eax; 
0x0009c0e5: add byte ptr [eax], al; add byte ptr [ebp - 0x7c228b40], al; clc; add al, 0x74; fmul dword ptr [ebp - 0x666c379]; call dword ptr [eax - 0x73]; 
0x000b139d: add byte ptr [eax], al; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x0012c59c: add byte ptr [eax], al; add byte ptr [ebp - 0x7cdd8b2e], al; in al, dx; or byte ptr [ebp - 0x649ef79], cl; call dword ptr [eax + 0x55]; 
0x00060c65: add byte ptr [eax], al; add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6bf986d], cl; call dword ptr [esi + 0x52]; 
0x0010da89: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x001208d9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebp - 0x6903f7d], cl; call dword ptr [eax - 0x73]; 
0x000a19a9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x000a8759: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x00049209: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8b01; 
0x000470f9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf01; 
0x0002bc19: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x000fc5c9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x0019e8b9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x000f7de8: add byte ptr [eax], al; add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000f7f48: add byte ptr [eax], al; add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x000f8233: add byte ptr [eax], al; add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; je 0xf8228; mov eax, 0xffffffff; ret; 
0x00193fa9: add byte ptr [eax], al; add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x0007f82c: add byte ptr [eax], al; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x001a28f9: add byte ptr [eax], al; add byte ptr [ebp - 0x9ffd98c], cl; ret 0x7510; 
0x00173955: add byte ptr [eax], al; add byte ptr [ebp - 0xc33437d], cl; call dword ptr [eax - 0x73]; 
0x0016e205: add byte ptr [eax], al; add byte ptr [ebp - 0xc8a637d], cl; call dword ptr [eax - 0x73]; 
0x001578e2: add byte ptr [eax], al; add byte ptr [ebp - 0xe0a9379], cl; call dword ptr [eax + 0x6a]; 
0x00157e26: add byte ptr [eax], al; add byte ptr [ebp - 0xe0a937a], cl; call dword ptr [eax + 0x6a]; 
0x00108c02: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011d4b8: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x0013b409: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0009a212: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0014aeb9: add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0006f12c: add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x00099129: add byte ptr [eax], al; add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0007e5ad: add byte ptr [eax], al; add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00120f1c: add byte ptr [eax], al; add byte ptr [ebx + 0x10880], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00112ff2: add byte ptr [eax], al; add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x0017eea7: add byte ptr [eax], al; add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x00105e15: add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0x44c7; 
0x000e7108: add byte ptr [eax], al; add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00172b15: add byte ptr [eax], al; add byte ptr [ebx + 0x19083], cl; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00172ba5: add byte ptr [eax], al; add byte ptr [ebx + 0x1a083], cl; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001a38ed: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a490d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a3fad: add byte ptr [eax], al; add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0005aa5d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00112430: add byte ptr [eax], al; add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000e19d6: add byte ptr [eax], al; add byte ptr [ebx + 0x290c247c], cl; retf 0x490f; ret 0x1c8d; 
0x0006de37: add byte ptr [eax], al; add byte ptr [ebx + 0x2964247c], cl; ret; 
0x0011f419: add byte ptr [eax], al; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x001a38dd: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a48fd: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a3f9d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x0009303b: add byte ptr [eax], al; add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x000920e6: add byte ptr [eax], al; add byte ptr [ebx + 0x310c244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091a74: add byte ptr [eax], al; add byte ptr [ebx + 0x310c244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0012bb5e: add byte ptr [eax], al; add byte ptr [ebx + 0x327401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012a8de: add byte ptr [eax], al; add byte ptr [ebx + 0x327401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0013518d: add byte ptr [eax], al; add byte ptr [ebx + 0x390c1e5c], cl; ret 0x820f; 
0x00050bd3: add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0006e13a: add byte ptr [eax], al; add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x0006fd2e: add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret 0x8c0f; 
0x00051b9b: add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret; 
0x0012120f: add byte ptr [eax], al; add byte ptr [ebx + 0x3940247c], cl; fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x00106312: add byte ptr [eax], al; add byte ptr [ebx + 0x39782444], cl; ret 0x4f0f; 
0x001a38cd: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a48ed: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a3f8d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x0012f60d: add byte ptr [eax], al; add byte ptr [ebx + 0x3f096], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000a1494: add byte ptr [eax], al; add byte ptr [ebx + 0x418d4451], cl; cmp byte ptr [ecx + 0x39142444], cl; ret 0x840f; 
0x00085dc8: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396374c9], al; ret; 
0x0007db78: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x397374c9], al; ret; 
0x0008313e: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x49840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0007ae17: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x2f7bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00183f18: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebx, 0x39000000; ret; 
0x0007e6ad: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov esi, 0x39000000; ret; 
0x00083418: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; ret; 
0x0007c823: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4857], cl; or byte ptr [ebp + 0x393074c9], al; ret; 
0x0016889d: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x1688cd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016ae8d: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x16aebd; sbb al, 0x53; call dword ptr [eax]; 
0x0017353c: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x17356c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00169535: add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0004196b: add byte ptr [eax], al; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x00032afd: add byte ptr [eax], al; add byte ptr [ebx + 0x440f06f8], al; ret 0xc89; 
0x000a416b: add byte ptr [eax], al; add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x000d0d10: add byte ptr [eax], al; add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00079d8c: add byte ptr [eax], al; add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000432ae: add byte ptr [eax], al; add byte ptr [ebx + 0x450ffffa], al; ret 0x4489; 
0x00065df5: add byte ptr [eax], al; add byte ptr [ebx + 0x450ffffa], al; ret 0x8589; 
0x000e6bbd: add byte ptr [eax], al; add byte ptr [ebx + 0x458b0cec], al; aam 0x56; call eax; 
0x001a87ac: add byte ptr [eax], al; add byte ptr [ebx + 0x45c7a87d], cl; test byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd189; 
0x00135add: add byte ptr [eax], al; add byte ptr [ebx + 0x4a8b01c0], al; add al, 0x83; ret 0x8518; 
0x001a38bd: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x001a48dd: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x001a3f7d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x0016e143: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00170a93: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00170103: add byte ptr [eax], al; add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00152a3d: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00173142: add byte ptr [eax], al; add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x00171412: add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0009e79d: add byte ptr [eax], al; add byte ptr [ebx + 0x528b046a], cl; or al, 0x83; ret; 
0x0012b25c: add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x0012d17e: add byte ptr [eax], al; add byte ptr [ebx + 0x548b240c], cl; and al, 4; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00088699: add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x001aa0d5: add byte ptr [eax], al; add byte ptr [ebx + 0x558bb045], cl; les ecx, ptr [ecx]; ret 0xfa09; 
0x0007b0d5: add byte ptr [eax], al; add byte ptr [ebx + 0x568901ea], al; add al, 0x39; ret; 
0x0008861f: add byte ptr [eax], al; add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x001727cc: add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x000861c9: add byte ptr [eax], al; add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x001a38ad: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x001a48cd: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x001a3f6d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x0007b6d5: add byte ptr [eax], al; add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0008af5f: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00078673: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00078526: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e4e16: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0009df34: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00168fe7: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00169113: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x000d19fe: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0010b09a: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0011c91b: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x000d6d44: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000ffb52: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x0014d4fa: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x00137365: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0002be90: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x00024bec: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007b4d2: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005aa65: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001a492d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0012fab9: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x00150a51: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x001424c9: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x0003c6fb: add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x000f8302: add byte ptr [eax], al; add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x00042766: add byte ptr [eax], al; add byte ptr [ebx + 0x674fff2], al; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008ea6a: add byte ptr [eax], al; add byte ptr [ebx + 0x67602fa], al; ret; 
0x00168999: add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x001a389d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x001a48bd: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x001a3f5d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x00132adf: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x1c; push 0; push 0x2000004; call eax; 
0x001688ce: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00146edd: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff0cec], al; add byte ptr [ebx - 0x4d17fb3b], al; ret 0xffed; 
0x00172c9d: add byte ptr [eax], al; add byte ptr [ebx + 0x788dff38], al; or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x0009e39d: add byte ptr [eax], al; add byte ptr [ebx + 0x7c8b28ec], al; and al, 0x3c; lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x0007a6b1: add byte ptr [eax], al; add byte ptr [ebx + 0x7d8be045], cl; in al, 0x89; ret; 
0x0010aff5: add byte ptr [eax], al; add byte ptr [ebx + 0x80249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00097e55: add byte ptr [eax], al; add byte ptr [ebx + 0x8080], cl; add byte ptr [eax + eax*2 - 0x75], dh; je 0x97e87; adc al, 0x89; ret 0xe283; 
0x00097f45: add byte ptr [eax], al; add byte ptr [ebx + 0x8080], cl; add byte ptr [eax + ecx*2 - 0x75], dh; je 0x97f77; adc al, 0x89; ret 0xe283; 
0x0008dbc8: add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0005a162: add byte ptr [eax], al; add byte ptr [ebx + 0x88901e9], al; mov eax, edx; add esp, 0xc; ret; 
0x00120279: add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x1202c8; call eax; 
0x0012039d: add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x120448; call eax; 
0x001114cd: add byte ptr [eax], al; add byte ptr [ebx + 0x94248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; call dword ptr gs:[0x10]; 
0x001114d4: add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a788: add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00069c7c: add byte ptr [eax], al; add byte ptr [ebx + 0xa4b8], cl; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x001a38fd: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a491d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x001a3fbd: add byte ptr [eax], al; add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x00111794: add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00111739: add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x1c4; call dword ptr gs:[0x10]; 
0x0012de76: add byte ptr [eax], al; add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012954c: add byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e4939: add byte ptr [eax], al; add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00146d58: add byte ptr [eax], al; add byte ptr [ebx + 0xc8b10c4], al; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x001718c9: add byte ptr [eax], al; add byte ptr [ebx + 0xcec8300], cl; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0017bf3d: add byte ptr [eax], al; add byte ptr [ebx + 0xdd4b3], cl; add byte ptr [ebx - 0x4472f714], al; test al, 0x76; stc; call dword ptr [edi + 0x56]; 
0x0017c779: add byte ptr [eax], al; add byte ptr [ebx + 0xdd4bb], cl; add byte ptr [ebx - 0x4c72f714], al; test al, 0x76; stc; call dword ptr [esi + 0x57]; 
0x0012e102: add byte ptr [eax], al; add byte ptr [ebx + 0xe], bh; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00107193: add byte ptr [eax], al; add byte ptr [ebx + 0xf00903c], al; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x0005ee45: add byte ptr [eax], al; add byte ptr [ebx + 0xf242454], cl; mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x001849bd: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x00091a6f: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093036: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00090ef3: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00109bb9: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00109f73: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0018b8b8: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x0012e5fa: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000a4460: add byte ptr [eax], al; add byte ptr [ebx + ebp - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ab997a], cl; call dword ptr [ebx + 0x50]; 
0x001715a2: add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0018495d: add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00168b0c: add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00109f7f: add byte ptr [eax], al; add byte ptr [ebx - 0x14373], cl; jmp dword ptr [ebp - 1]; 
0x00094a6d: add byte ptr [eax], al; add byte ptr [ebx - 0x14fb7a6c], cl; clc; dec dword ptr [ebp - 0x15fef3a1]; jmp edx; 
0x001a8af5: add byte ptr [eax], al; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x0009ebdd: add byte ptr [eax], al; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00116dfd: add byte ptr [eax], al; add byte ptr [ebx - 0x17a9f314], al; xchg edi, eax; ret; 
0x0007de6d: add byte ptr [eax], al; add byte ptr [ebx - 0x17aee714], al; ja 0x7de92; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000793f6: add byte ptr [eax], al; add byte ptr [ebx - 0x18536a44], cl; clc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x000ed86d: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov dword ptr [0x81000954], eax; ret; 
0x00092bb5: add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0006f36c: add byte ptr [eax], al; add byte ptr [ebx - 0x27b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x00092e19: add byte ptr [eax], al; add byte ptr [ebx - 0x27cc61b], al; or byte ptr [ebp + ecx*4 - 0x15], dh; ret 0x8d2e; 
0x00175119: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x00122257: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00150135: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x00105419: add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x0005694d: add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000d50ad: add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00057e5d: add byte ptr [eax], al; add byte ptr [ebx - 0x36277b], al; jmp eax; 
0x000567ed: add byte ptr [eax], al; add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x7d379]; call dword ptr [eax - 0x73]; 
0x000d4f40: add byte ptr [eax], al; add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000d36c4: add byte ptr [eax], al; add byte ptr [ebx - 0x365773], cl; dec dword ptr [ecx - 0x36737b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x00052860: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x0002603f: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00089ed4: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x89ed0; ret; 
0x0008cbc7: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7adbc0], cl; jne 0x8cbd8; ret; 
0x0010865d: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10854b; call eax; 
0x001085fd: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10854b; call eax; 
0x001086b5: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10859a; call eax; 
0x0017d9c5: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00040278: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0017bf9c: add byte ptr [eax], al; add byte ptr [ebx - 0x4472f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [edi + 0x56]; 
0x0014364d: add byte ptr [eax], al; add byte ptr [ebx - 0x44f73], cl; dec dword ptr [ebx - 0x4536b]; jmp dword ptr [ebp - 0x75]; 
0x0010c6e9: add byte ptr [eax], al; add byte ptr [ebx - 0x46b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000ef90d: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000ef65b: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x0003c41e: add byte ptr [eax], al; add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011c5d8: add byte ptr [eax], al; add byte ptr [ebx - 0x47abdbb4], cl; sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x000609e5: add byte ptr [eax], al; add byte ptr [ebx - 0x47afdb8c], cl; call dword ptr [ebx - 0x59]; 
0x000a9ecc: add byte ptr [eax], al; add byte ptr [ebx - 0x4800f314], al; mov byte ptr [eax + eax], al; add al, ch; ret; 
0x0013dddd: add byte ptr [eax], al; add byte ptr [ebx - 0x48f0fb14], al; ret; 
0x000fbe17: add byte ptr [eax], al; add byte ptr [ebx - 0x49f0dbe4], cl; rol byte ptr [ebx], 0x9c; add dword ptr [edi + eax - 7], -1; jmp ebx; 
0x0008c12d: add byte ptr [eax], al; add byte ptr [ebx - 0x4b74fbbd], cl; sub byte ptr [eax - 0x17], 0xf8; inc dword ptr [ecx]; salc; jmp esi; 
0x0012f41d: add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x00072375: add byte ptr [eax], al; add byte ptr [ebx - 0x4ff7b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x722c8], bl; jmp eax; 
0x00072780: add byte ptr [eax], al; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x00074add: add byte ptr [eax], al; add byte ptr [ebx - 0x51f73], cl; jmp dword ptr [ebp - 0x39]; 
0x00071d5d: add byte ptr [eax], al; add byte ptr [ebx - 0x53b73], cl; dec dword ptr [ecx - 0x50363]; dec dword ptr [ebx - 0x51343]; dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x75]; 
0x0017bf5e: add byte ptr [eax], al; add byte ptr [ebx - 0x5472f714], al; mov dh, 0x76; stc; call dword ptr [ebp + 0x56]; 
0x000684dc: add byte ptr [eax], al; add byte ptr [ebx - 0x58f63], cl; call dword ptr [ecx + 0x50]; 
0x00067122: add byte ptr [eax], al; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0009708b: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x00096475: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0017d13e: add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; cdq; jbe 0x17d142; call dword ptr [edx - 0x77]; 
0x0010df0b: add byte ptr [eax], al; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x00158a4e: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fd08], al; ret; 
0x00048cab: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xc639; 
0x000c70be: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x0017bf79: add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; cdq; jbe 0x17bf7d; call dword ptr [edx - 0x77]; 
0x0002fcf0: add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; jle 0x2fd35; stc; call dword ptr [edx + 0x50]; 
0x0007a9cc: add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0013a7b6: add byte ptr [eax], al; add byte ptr [ebx - 0x7172fb14], al; pop ds; push 0x868dfff9; sub ch, byte ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x00173585: add byte ptr [eax], al; add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0010b9ed: add byte ptr [eax], al; add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ebx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0009f082: add byte ptr [eax], al; add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x00028ccd: add byte ptr [eax], al; add byte ptr [ebx - 0x72f7dbac], cl; inc ebx; add al, 0x39; ret 0x9173; 
0x000539bd: add byte ptr [eax], al; add byte ptr [ebx - 0x72fb6984], cl; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000485a3: add byte ptr [eax], al; add byte ptr [ebx - 0x7374dbfc], cl; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x001a3f0d: add byte ptr [eax], al; add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0012726f: add byte ptr [eax], al; add byte ptr [ebx - 0x7472fb14], al; or al, 0x16; stc; jmp dword ptr [ebp - 0x75]; 
0x0012ad9e: add byte ptr [eax], al; add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000dbf4d: add byte ptr [eax], al; add byte ptr [ebx - 0x749fdba4], cl; push esp; and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0002c206: add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdb8c], cl; jl 0x2c234; and al, 0x89; ret 0xf229; 
0x000cd6f4: add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000c6d74: add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0012e04a: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0018b828: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e538: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012a70e: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x000603ce: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0004f534: add byte ptr [eax], al; add byte ptr [ebx - 0x74f7dbbc], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x001828ad: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x001828dd: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop esp; ret; 
0x0018294d: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push esp; ret; 
0x001828bd: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x001025e0: add byte ptr [eax], al; add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x0015e29c: add byte ptr [eax], al; add byte ptr [ebx - 0x76cfdbbc], cl; adc bh, bh; je 0x15e2cc; xor al, 0xe8; ret 0xfeec; 
0x0013bc4e: add byte ptr [eax], al; add byte ptr [ebx - 0x76e3db84], cl; ret; 
0x0008d188: add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dbac], cl; ret; 
0x00097e9d: add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdb84], cl; ret 0xca83; 
0x00140a10: add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x0014c6dd: add byte ptr [eax], al; add byte ptr [ebx - 0x76efdb94], cl; ret 0x7e8d; 
0x000aeecd: add byte ptr [eax], al; add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x001760fc: add byte ptr [eax], al; add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000fa3db: add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000306d5: add byte ptr [eax], al; add byte ptr [ebx - 0x7872f314], al; mov bl, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x0009634e: add byte ptr [eax], al; add byte ptr [ebx - 0x7872f314], al; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0002ebae: add byte ptr [eax], al; add byte ptr [ebx - 0x78f0fb05], al; mov al, byte ptr [0x9000000]; ret; 
0x00169095: add byte ptr [eax], al; add byte ptr [ebx - 0x7972fb14], al; mov edx, 0x6afff973; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x001278c5: add byte ptr [eax], al; add byte ptr [ebx - 0x7972fb14], al; pushfd; mov ah, 0xf9; call dword ptr [edi - 0x7f]; 
0x0016392f: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f314], al; jl 0x1639ab; stc; call dword ptr [eax - 0x18]; 
0x0013d515: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; cmp ecx, edi; call dword ptr [eax + 0x53]; 
0x00049122: add byte ptr [eax], al; add byte ptr [ebx - 0x7aa3dbbc], cl; ror byte ptr [edi], 0x84; ret 2; 
0x001521a4: add byte ptr [eax], al; add byte ptr [ebx - 0x7ad7dbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x00176505: add byte ptr [eax], al; add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 8], cl; add esp, 0xc; ret; 
0x00152490: add byte ptr [eax], al; add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6abcf7f], cl; call dword ptr [eax + 0x52]; 
0x0005e17d: add byte ptr [eax], al; add byte ptr [ebx - 0x7afbdbbc], cl; ror byte ptr [edi], 0x9f; ret; 
0x001a49d0: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x000a42fc: add byte ptr [eax], al; add byte ptr [ebx - 0x7c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000e7828: add byte ptr [eax], al; add byte ptr [ebx - 0x7c3976e6], cl; ret 0x8304; 
0x000e7948: add byte ptr [eax], al; add byte ptr [ebx - 0x7c3e76c6], cl; ret 0x8304; 
0x0016fe7d: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; cdq; pop ecx; stc; call dword ptr [edi + 0x56]; 
0x00122265: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; cmp ecx, edi; call dword ptr [eax - 0x73]; 
0x000da27d: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; out dx, eax; push ebp; stc; call dword ptr [eax + 0x56]; 
0x0002fd0e: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; test byte ptr [ebx], bh; stc; call dword ptr [eax - 1]; 
0x0009fe6c: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72fb14], al; dec eax; push edx; stc; call dword ptr [eax + 0x56]; 
0x0004f53f: add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000cd6ff: add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000485ad: add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c6d7f: add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0010bcb5: add byte ptr [eax], al; add byte ptr [ebx - 0x7cdfdbbc], cl; ret; 
0x0010dbcd: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7dbbc], cl; ret; 
0x0004dadd: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78a4], cl; ret; 
0x001634e4: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x0008eaad: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbbc], cl; pushal; or bl, bh; xor eax, eax; ret; 
0x00059e55: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfefbbe], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013ffb5: add byte ptr [eax], al; add byte ptr [ebx - 0x877b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0005b600: add byte ptr [eax], al; add byte ptr [ebx - 0x8b63], cl; dec dword ptr [edi]; dec esi; ret 0xec83; 
0x001a80d2: add byte ptr [eax], al; add byte ptr [ebx - 0x8f63], cl; dec dword ptr [ebx - 0xa343]; call ebx; 
0x0005b33d: add byte ptr [eax], al; add byte ptr [ebx - 0x9343], cl; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x001ab82d: add byte ptr [eax], al; add byte ptr [ebx - 0xa77b], cl; dec dword ptr [ecx - 0xa167bbb]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0007ae8e: add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x7aea0; push esi; call dword ptr [ebx + 0x1c]; 
0x0007d19a: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x000a472c: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0xa475a; call eax; 
0x0007ce6d: add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; jne 0x7ce5b; push esi; call dword ptr [eax + 0x2c]; 
0x0007cf02: add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; jne 0x7cef0; push esi; call dword ptr [eax + 0x2c]; 
0x0016fb24: add byte ptr [eax], al; add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x001403ad: add byte ptr [eax], al; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000a9e63: add byte ptr [eax], al; add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00126d54: add byte ptr [eax], al; add byte ptr [ebx - 1], bh; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0016fe44: add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0012e107: add byte ptr [eax], al; add byte ptr [ecx + 0x100bafe], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121aac: add byte ptr [eax], al; add byte ptr [ecx + 0x100c249c], cl; add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011dc32: add byte ptr [eax], al; add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x000e5e4f: add byte ptr [eax], al; add byte ptr [ecx + 0x13c248c], cl; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x00112245: add byte ptr [eax], al; add byte ptr [ecx + 0x18c24ac], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0009fe8f: add byte ptr [eax], al; add byte ptr [ecx + 0x1c829f2], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x000f7dd0: add byte ptr [eax], al; add byte ptr [ecx + 0x23683efa], al; xchg ecx, eax; jne 0xf7e40; ret; 
0x00064054: add byte ptr [eax], al; add byte ptr [ecx + 0x2444c7cf], cl; inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0010aeb3: add byte ptr [eax], al; add byte ptr [ecx + 0x24948be9], cl; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c515: add byte ptr [eax], al; add byte ptr [ecx + 0x31242444], cl; shr byte ptr [edx], 0x8d; xchg esp, esp; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x00092549: add byte ptr [eax], al; add byte ptr [ecx + 0x31582444], cl; rcl byte ptr [edx - 0x18], 0xd8; ret 0xffff; 
0x000b0fbd: add byte ptr [eax], al; add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x0011eb78: add byte ptr [eax], al; add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00061614: add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x0006cf04: add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x00126845: add byte ptr [eax], al; add byte ptr [ecx + 0x39d8f7f0], cl; ret; 
0x0008eba6: add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 7], dh; ret; 
0x0010553f: add byte ptr [eax], al; add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x0005a03a: add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x000277bf: add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x0011e8bb: add byte ptr [eax], al; add byte ptr [ecx + 0x5401], bh; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x0011eb41: add byte ptr [eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009f1d3: add byte ptr [eax], al; add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x0007ab1c: add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000b837d: add byte ptr [eax], al; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x0007ad35: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0012a016: add byte ptr [eax], al; add byte ptr [ecx + 0x7c891a3c], cl; sbb al, byte ptr [ebx + eax*4]; ret; 
0x00129c07: add byte ptr [eax], al; add byte ptr [ecx + 0x7fffffff], bh; mov esi, 5; call dword ptr gs:[0x10]; 
0x00096321: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008d5a6: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008ca91: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008dd61: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0017ff73: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000910e4: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x000963be: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008dd90: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00093e7b: add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0009f2f6: add byte ptr [eax], al; add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x1988f37a], cl; call dword ptr [eax + 0x57]; 
0x0003b0f7: add byte ptr [eax], al; add byte ptr [ecx + 0xa024bc], al; add byte ptr [eax], al; push eax; ret; 
0x00171a59: add byte ptr [eax], al; add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001099c1: add byte ptr [eax], al; add byte ptr [ecx + 0xac2484], cl; add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00109c63: add byte ptr [eax], al; add byte ptr [ecx + 0xac24bc], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003c4ab: add byte ptr [eax], al; add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e712f: add byte ptr [eax], al; add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00095dd2: add byte ptr [eax], al; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001854b8: add byte ptr [eax], al; add byte ptr [ecx + 1], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000958c7: add byte ptr [eax], al; add byte ptr [ecx + 7], bh; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003c480: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0009558e: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000536a2: add byte ptr [eax], al; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00098416: add byte ptr [eax], al; add byte ptr [ecx + ebx*8 - 0x77], dh; ret 0xe083; 
0x00053bc2: add byte ptr [eax], al; add byte ptr [ecx + edi - 0x7d], dh; ret; 
0x0016f82f: add byte ptr [eax], al; add byte ptr [ecx - 0x13b7b], cl; call dword ptr [eax - 0x18]; 
0x00095005: add byte ptr [eax], al; add byte ptr [ecx - 0x16f3dbbc], cl; ret; 
0x00093bae: add byte ptr [eax], al; add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x00096468: add byte ptr [eax], al; add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xb8870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00058914: add byte ptr [eax], al; add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x0005805a: add byte ptr [eax], al; add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax - 0x73]; 
0x000d4cd5: add byte ptr [eax], al; add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000d571a: add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x00176037: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x00176007: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x00059e6b: add byte ptr [eax], al; add byte ptr [ecx - 0x3b7cf7a6], cl; add al, 0x5b; pop esi; ret; 
0x0009759f: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x0008ec9e: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x001434ae: add byte ptr [eax], al; add byte ptr [ecx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0003d24e: add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e5ff: add byte ptr [eax], al; add byte ptr [ecx - 0x47e7dbbc], cl; jne 0x12e609; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001273c8: add byte ptr [eax], al; add byte ptr [ecx - 0x49f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000ca6e6: add byte ptr [eax], al; add byte ptr [ecx - 0x4d7bf033], cl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x00073def: add byte ptr [eax], al; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x00074010: add byte ptr [eax], al; add byte ptr [ecx - 0x50343], cl; jmp dword ptr [ebp - 0x75]; 
0x0006928b: add byte ptr [eax], al; add byte ptr [ecx - 0x59373], cl; call dword ptr [ebx - 0x75]; 
0x0008caee: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9adfb0], cl; jl 0x8caf8; add byte ptr [eax], al; ret; 
0x0008cb25: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9af3b0], cl; js 0x8cb2f; add byte ptr [eax], al; ret; 
0x0002f3b8: add byte ptr [eax], al; add byte ptr [ecx - 0x7287dbbc], cl; add dword ptr [ecx + 0x3b], -7; call dword ptr [eax - 0x18]; 
0x00165420: add byte ptr [eax], al; add byte ptr [ecx - 0x72a7dbbc], cl; xor ebx, 0x72; stc; call dword ptr [eax - 0x18]; 
0x0004e90c: add byte ptr [eax], al; add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x0004f600: add byte ptr [eax], al; add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x0003f035: add byte ptr [eax], al; add byte ptr [ecx - 0x72bbdbbc], cl; test esp, ecx; jg 0x3f021; call dword ptr [eax - 0x73]; 
0x0002cd4a: add byte ptr [eax], al; add byte ptr [ecx - 0x72c7dbbc], cl; inc edi; and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x00027a84: add byte ptr [eax], al; add byte ptr [ecx - 0x72cbdbac], cl; xchg edi, eax; cmp ecx, edi; call dword ptr [edx + 0x50]; 
0x0002aaea: add byte ptr [eax], al; add byte ptr [ecx - 0x72cbdbbc], cl; inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x00048663: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x00047943: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004baf4: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x7de9; 
0x0004ae2f: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x00029fca: add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x0003edf5: add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; or dword ptr [edi + edi], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0005d35b: add byte ptr [eax], al; add byte ptr [ecx - 0x7483dbb4], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x00129651: add byte ptr [eax], al; add byte ptr [ecx - 0x7497dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0008cae4: add byte ptr [eax], al; add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0009ae5d: add byte ptr [eax], al; add byte ptr [ecx - 0x7576efbf], cl; test al, 0x3b; add byte ptr [eax], al; ret; 
0x0014db48: add byte ptr [eax], al; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x000e60b5: add byte ptr [eax], al; add byte ptr [ecx - 0x7693dba4], cl; ret; 
0x0011f309: add byte ptr [eax], al; add byte ptr [ecx - 0x76b3dba4], cl; ret; 
0x000a5c8a: add byte ptr [eax], al; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x00088ab6: add byte ptr [eax], al; add byte ptr [ecx - 0x76c7dba4], cl; ret; 
0x00071046: add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x44c7; 
0x000cce5f: add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x8d2e; 
0x000cd7f0: add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0xb0e9; 
0x000a009a: add byte ptr [eax], al; add byte ptr [ecx - 0x76d3dba4], cl; ret; 
0x00168ec6: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dba4], cl; ret; 
0x0009b986: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbb4], cl; retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x000c5cf7: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x448b; 
0x000ca021: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x7ce9; 
0x000c965d: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x8d2e; 
0x000c6e64: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xcce9; 
0x00099835: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdba4], cl; ret; 
0x0004baff: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x7de9; 
0x0004ae3a: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0016f386: add byte ptr [eax], al; add byte ptr [ecx - 0x76e3dba4], cl; ret; 
0x0009f025: add byte ptr [eax], al; add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x00040ef8: add byte ptr [eax], al; add byte ptr [ecx - 0x76efdbb4], cl; ret; 
0x00092588: add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xc889; 
0x000c9c66: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbac], cl; ret 0xf129; 
0x0016d56b: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0012d4f1: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x12d484; ret 0x448b; 
0x0012f101: add byte ptr [eax], al; add byte ptr [ecx - 0x78721bbb], cl; clc; stc; call dword ptr [eax - 0x18]; 
0x001434a5: add byte ptr [eax], al; add byte ptr [ecx - 0x78741bbb], cl; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x001273bf: add byte ptr [eax], al; add byte ptr [ecx - 0x79741bbb], cl; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x49f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0016367d: add byte ptr [eax], al; add byte ptr [ecx - 0x7c2e7623], cl; ret; 
0x0002972d: add byte ptr [eax], al; add byte ptr [ecx - 0x7c3c76f5], cl; ret 0x3904; 
0x0013f4c5: add byte ptr [eax], al; add byte ptr [ecx - 0x7c721bbb], cl; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x000dd19d: add byte ptr [eax], al; add byte ptr [ecx - 0x7cc7dbbc], cl; inc esp; and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x00182708: add byte ptr [eax], al; add byte ptr [ecx - 0x7cef79a4], cl; rol byte ptr [ecx], 0x83; ret 0x8308; 
0x0016c8c5: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax - 1]; 
0x000a09e5: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf7743d], cl; ret 0xc101; 
0x00168979: add byte ptr [eax], al; add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00087c25: add byte ptr [eax], al; add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x000cc0ca: add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c570a: add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x0004010e: add byte ptr [eax], al; add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0013fe74: add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x0010a4d6: add byte ptr [eax], al; add byte ptr [ecx - 0x9b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00095184: add byte ptr [eax], al; add byte ptr [ecx - 0x9cefba9], cl; xor edx, edx; call dword ptr gs:[0x10]; 
0x0017a3d4: add byte ptr [eax], al; add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x000d1d25: add byte ptr [eax], al; add byte ptr [ecx - 0xf76f7b0], cl; pop ebx; pop esi; ret; 
0x000c04e9: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x000c0726: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x0008eb21: add byte ptr [eax], al; add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x000be8d1: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0013bd52: add byte ptr [eax], al; add byte ptr [ecx], al; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x0009f45a: add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x00180e0d: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x1deb; 
0x000fe966: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x000d8029: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x848b; 
0x000624a5: add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000ca411: add byte ptr [eax], al; add byte ptr [ecx], al; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x000c72cf: add byte ptr [eax], al; add byte ptr [ecx], al; ror byte ptr [ebx + 0x296c2454], 1; ret; 
0x001583bb: add byte ptr [eax], al; add byte ptr [ecx], bh; inc edx; add al, 0xf; test byte ptr [ecx - 0x7d000000], al; ret 0x8014; 
0x00118119: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1772; 
0x000279f8: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x0004c895: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x000d9b43: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x470f; 
0x0011fae7: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00097094: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6574; 
0x000977df: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6a74; 
0x00096707: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x7274; 
0x0014086b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x0009647e: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00095bd7: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x850f; 
0x0014dc3b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xa875; 
0x000a70d6: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc072; 
0x000a7193: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc372; 
0x0003dedc: add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00130054: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x00150bad: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x0010aab8: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xfae9; 
0x00049672: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x0013c38a: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x0015684c: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000f9cc0: add byte ptr [eax], al; add byte ptr [ecx], ch; aad 0x89; fnstcw word ptr [ecx]; ret; 
0x000fd8d1: add byte ptr [eax], al; add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x86eb; 
0x000d1273: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x00056379: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3b8; 
0x000e035e: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x001a9a9c: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x458b; 
0x001ae959: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x45c7; 
0x000e3973: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000e1295: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x478b; 
0x000a0e0d: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x48d; 
0x0004c72c: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000e1d3b: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x748d; 
0x000d0080: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000ded68: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x0004959e: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xcb29; 
0x0002f1a7: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd089; 
0x000d96d1: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x001a87b6: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd189; 
0x000aad57: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd301; 
0x000abd35: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd601; 
0x000a80b7: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd701; 
0x001a7d2a: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xe2c1; 
0x00025223: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xe3d3; 
0x000e4299: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf089; 
0x000dc9d4: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x00030206: add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000e067b: add byte ptr [eax], al; add byte ptr [ecx], ch; retf 0x490f; ret 0xc101; 
0x001aa48f: add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0x550b; 
0x0002ebb7: add byte ptr [eax], al; add byte ptr [ecx], cl; ret; 
0x0009798b: add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x001a73b2: add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [ebx - 0x177ce010]; or al, 0x89; ret 0xe283; 
0x00024d63: add byte ptr [eax], al; add byte ptr [ecx], dh; fld xword ptr [esi]; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0008db57: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x000963c3: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ed8a: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008dd95: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001854bd: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x0008f581: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000934c6: add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x000a36ba: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00092ce4: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x000a3769: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x00049ded: add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [ecx - 0x7fffff19], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x00092d43: add byte ptr [eax], al; add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x0008e73f: add byte ptr [eax], al; add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x00109f78: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0012ecdd: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [eax + 0x18bb01ce], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00095b49: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b297: add byte ptr [eax], al; add byte ptr [edi + 0x1a7482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0003ebe6: add byte ptr [eax], al; add byte ptr [edi + 0x1fa8317], al; jg 0x3ecb0; call eax; 
0x0002506d: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; jmp eax; 
0x00151ac4: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; ret; 
0x000b6d3d: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d6bb4: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0011bf11: add byte ptr [eax], al; add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000d6cd2: add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x0019c0a2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x001999f2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x001a0102: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x001981b2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x001a0c88: add byte ptr [eax], al; add byte ptr [edi + 3], bh; neg eax; ret; 
0x001a0fb3: add byte ptr [eax], al; add byte ptr [edi + 8], bh; neg eax; ret; 
0x000d6ca2: add byte ptr [eax], al; add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x00109c8a: add byte ptr [eax], al; add byte ptr [edi + edi*2 - 0x7d], dh; jmp dword ptr [esi]; 
0x00063cb8: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0x4489; 
0x000e1de5: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0xc8d; 
0x000563aa: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret 0xdb31; 
0x0009b63f: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0003dee8: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret; 
0x001016b9: add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x00124428: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x0009b550: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x0008eaa2: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000d9971: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00093095: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x4489; 
0x0009e69b: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x8188; 
0x00097c48: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x90c3; 
0x000984cc: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x0013cdb9: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x000d79e0: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0xc501; 
0x000428c2: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000a6086: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000311af: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xf289; 
0x0017b2c5: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x000420c4: add byte ptr [eax], al; add byte ptr [edi], cl; mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x001076e2: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0005d99d: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x51; or al, 0xf6; ret 0xf01; 
0x0013c845: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000375c9: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x77ae0]; add edx, edi; jmp edx; 
0x00041ff3: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x000bea84: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000bee5d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000bae6d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x00042076: add byte ptr [eax], al; add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000c26e5: add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x948b; 
0x001808c6: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [ecx - 0x77000000], al; ret 0xe283; 
0x0018087d: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [edx - 0x77000000], ch; ret 0xe283; 
0x0019fb2d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0019f42d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0010d41c: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax - 0x74ffffef], edx; jl 0x10d44c; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax + 0x68]; 
0x0009df2e: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ecx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012b526: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], edx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a0eea: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0019fbd8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0019f9f8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0019f4c8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0019f822: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0010d01f: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp - 0x74ffffeb], ecx; jl 0x10d04f; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax - 0x73]; 
0x0015a18b: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp - 0x74fffffe], ebx; je 0x15a1bb; adc byte ptr [ebp - 0x63acb7a], cl; call dword ptr [eax - 0x73]; 
0x0016910d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019f5f4: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x0019f6fc: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x001a0e5e: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0010d5fb: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx - 0x74fffff1], esi; jl 0x10d62b; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax + 0x68]; 
0x0019f671: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0011b324: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi - 0x7d000000], ebx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0010adb0: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x7d000000], esp; les ebp, ptr [eax + 0x5b]; ret; 
0x0010b094: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], edi; les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0010a849: add byte ptr [eax], al; add byte ptr [edi], cl; test ebp, ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x64e5f7d], cl; call dword ptr [eax - 0x73]; 
0x0019fddd: add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ebx; clc; int1; call dword ptr [ebx - 0x18]; 
0x001a02dd: add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ecx; hlt; int1; call dword ptr [ebx - 0x18]; 
0x00199bed: add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ecx; pop edx; bnd call dword ptr [ebx - 0x18]; 
0x00040eb9: add byte ptr [eax], al; add byte ptr [edi], cl; test esi, edx; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x00089f2c: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x00066999: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00054dd0: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x00044853: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00117e05: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x478b; 
0x00045619: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x7c83; 
0x00079f62: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00079f4c: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x001a0acf: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000f7e48: add byte ptr [eax], al; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x00168907: add byte ptr [eax], al; add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0008f31e: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0009658f: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097787: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009498a: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096971: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fb6e: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008db5e: add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0017ff78: add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084f05: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, edx; ret; 
0x000910e9: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0014d4f5: add byte ptr [eax], al; add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008d668: add byte ptr [eax], al; add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008fe45: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095b44: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f5b5: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fa6a: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008f8db: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096947: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d5ab: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008d61a: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0012f55f: add byte ptr [eax], al; add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x0008c3cd: add byte ptr [eax], al; add byte ptr [edx - 0x77], dl; ret; 
0x000bff30: add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0017403a: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00088139: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0016a87a: add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00052f9a: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000b0ffd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b100d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b0fed: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b101d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x001a098d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0018c0ed: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x000bed6f: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000bf048: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bf06d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00090ef8: add byte ptr [eax], al; add byte ptr [esi + 8], bh; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x000920f1: add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0003c29a: add byte ptr [eax], al; add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0002326b: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0003cfe7: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003c341: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000d6f9b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; add eax, 2; ret; 
0x0012094b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000bf5bb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bf11b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000e4a1b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; lea ebp, [esp + 4]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000af0ab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000704eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x0008511b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0008b10b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0xffffffff; ret; 
0x0016addb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 1; ret; 
0x000d6efb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 2; ret; 
0x000d6f0b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 3; ret; 
0x000d6f1b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 4; ret; 
0x000d6f2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 5; ret; 
0x000d6f3b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 6; ret; 
0x000d6f4b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 7; ret; 
0x00175c9b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0016adeb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0018ba2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00148a2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov ecx, dword ptr [esp + 0x1c]; mov edx, dword ptr [ecx - 0x6e5c4]; add edx, ecx; jmp edx; 
0x000b35eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b0fdb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0013d3eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movzx eax, dl; ret; 
0x001a0c6b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; pop ebx; xor eax, eax; ret; 
0x0008b13b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; ret; 
0x0008b11b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x00049b46: add byte ptr [eax], al; add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x0013b625: add byte ptr [eax], al; add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x001a2958: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; add eax, 1; ret; 
0x001a5288: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a4318: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0008b128: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000d6ee8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ret; 
0x0008b178: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x000910b8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b0f48: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; pop ebx; ret; 
0x001687a8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; ret; 
0x000bebe8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; ret; 
0x0008ccf1: add byte ptr [eax], al; add cl, al; call 0x1e95005; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x000a1c57: add byte ptr [eax], al; add cl, al; call 0xfda5572; inc edi; ret 0xc083; 
0x000a1d71: add byte ptr [eax], al; add cl, al; call 0xfda568c; inc edi; ret 0xc083; 
0x000a3db7: add byte ptr [eax], al; add cl, al; call 0xfda76d2; inc edi; ret 0x508d; 
0x0007ac86: add byte ptr [eax], al; add cl, al; ret 0x6509; 
0x00024ac8: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x00128cc8: add byte ptr [eax], al; add cl, al; ret 0xf009; 
0x000a0d2a: add byte ptr [eax], al; add cl, byte ptr [edi]; inc esp; ret 0x938b; 
0x000cd786: add byte ptr [eax], al; add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x001aa0f6: add byte ptr [eax], al; add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0004ca2e: add byte ptr [eax], al; add cl, ch; mov edx, 0x8bffffe6; jl 0x4ca5d; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x000734d5: add byte ptr [eax], al; add cl, ch; pop esi; jecxz 0x734db; dec dword ptr [ebx - 0x5077b]; jmp dword ptr [ebp - 0x77]; 
0x000a2103: add byte ptr [eax], al; add cl, ch; push 0x8dfffff8; xchg dword ptr [ecx + ebp*4], ecx; stc; call dword ptr [eax + 0x68]; 
0x0004f5c2: add byte ptr [eax], al; add cl, ch; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x000f32e6: add byte ptr [eax], al; add cl, ch; ret 0xfff1; 
0x001abf98: add byte ptr [eax], al; add cl, ch; ret 0xfff5; 
0x0010322e: add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x000e3d9a: add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000f8155: add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0003de4a: add byte ptr [eax], al; add cl, ch; ret; 
0x00067de6: add byte ptr [eax], al; add cl, ch; sub ah, 0xff; jmp dword ptr [esi - 0x70]; 
0x00042dd1: add byte ptr [eax], al; add cl, dl; call 0x21060e5d; ret 0xb60f; 
0x000fabc2: add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x001a3c86: add byte ptr [eax], al; add dh, dh; les eax, ptr [edx]; jne 0x1a3d20; lea eax, [ecx + 8]; ret; 
0x001a3caf: add byte ptr [eax], al; add dh, dh; les esp, ptr [eax]; jne 0x1a3d50; lea eax, [ecx + 0xc]; ret; 
0x0007df65: add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x001a20eb: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x00031dab: add byte ptr [eax], al; add dh, dh; ret 0x7503; 
0x000b920d: add byte ptr [eax], al; add dh, dh; ret 0x7510; 
0x00137e15: add byte ptr [eax], al; add dh, dh; ret 0x7520; 
0x000fd992: add byte ptr [eax], al; add dh, dh; ret 0x7540; 
0x0005d7d0: add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x000990b9: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00040ebf: add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x001a47cc: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x0014b395: add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x001a515f: add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001a46cd: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x001a47f6: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x000fdaee: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0005d366: add byte ptr [eax], al; add dh, dh; ret; 
0x00023277: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009e584: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e534: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4d4: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e504: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x370], edx; ret; 
0x0008dd5e: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008dc63: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a6e47: add byte ptr [eax], al; add dword ptr [ebp - 0xaa7736e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00138907: add byte ptr [eax], al; add dword ptr [ebp - 0xaa7836e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0008b1f4: add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0008eb22: add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x001502a4: add byte ptr [eax], al; add dword ptr [ebx - 0x72ebdb8c], ecx; xchg byte ptr [edi + 0x39], ah; stc; call dword ptr [eax + 0x53]; 
0x000c099d: add byte ptr [eax], al; add dword ptr [edi + eax - 0x7d], esi; mov byte ptr [eax + 0x100003c], dl; xor eax, eax; pop ebx; ret; 
0x00059e56: add byte ptr [eax], al; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00170a94: add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00170104: add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016d567: add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001a4710: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x001a4739: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x001a4a7e: add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001a46c3: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x001a46e9: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x0016e144: add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00170ae1: add byte ptr [eax], al; add eax, dword ptr [eax + edx*4 - 0x6c8d0]; jmp eax; 
0x0012f81d: add byte ptr [eax], al; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000254ce: add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x000be8d2: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x0008dd9d: add byte ptr [eax], al; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00090efe: add byte ptr [eax], al; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x001727cd: add byte ptr [eax], al; add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x001a3dac: add byte ptr [eax], al; add edx, 0; jl 0x1a3fd0; mov eax, ecx; ret; 
0x001a3f7e: add byte ptr [eax], al; add edx, 0xa; jl 0x1a3fd0; lea eax, [ecx + 0xa]; ret; 
0x001a3f8e: add byte ptr [eax], al; add edx, 0xb; jl 0x1a3fd0; lea eax, [ecx + 0xb]; ret; 
0x001a3ef9: add byte ptr [eax], al; add edx, 0xc; jl 0x1a3fd0; lea eax, [ecx + 0xc]; ret; 
0x001a3f9e: add byte ptr [eax], al; add edx, 0xd; jl 0x1a3fd0; lea eax, [ecx + 0xd]; ret; 
0x001a3fae: add byte ptr [eax], al; add edx, 0xe; jl 0x1a3fd0; lea eax, [ecx + 0xe]; ret; 
0x001a3fbe: add byte ptr [eax], al; add edx, 0xf; jl 0x1a3fd0; lea eax, [ecx + 0xf]; ret; 
0x001a3f0e: add byte ptr [eax], al; add edx, 1; jl 0x1a3fd0; lea eax, [ecx + 1]; ret; 
0x0014384c: add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x001a3e96: add byte ptr [eax], al; add edx, 4; jl 0x1a3fd0; lea eax, [ecx + 4]; ret; 
0x001a3f5e: add byte ptr [eax], al; add edx, 7; jl 0x1a3fd0; lea eax, [ecx + 7]; ret; 
0x001a3ecf: add byte ptr [eax], al; add edx, 8; jl 0x1a3fd0; lea eax, [ecx + 8]; ret; 
0x001a3f6e: add byte ptr [eax], al; add edx, 9; jl 0x1a3fd0; lea eax, [ecx + 9]; ret; 
0x000400b7: add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00026040: add byte ptr [eax], al; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0009624c: add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000e47dc: add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0012027a: add byte ptr [eax], al; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x1202c8; call eax; 
0x0012039e: add byte ptr [eax], al; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x120448; call eax; 
0x0002579e: add byte ptr [eax], al; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00078674: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001424ca: add byte ptr [eax], al; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000c21ab: add byte ptr [eax], al; add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x0017511a: add byte ptr [eax], al; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0012faba: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop edi; ret; 
0x00078527: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004196c: add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x00120527: add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0002fed9: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0003310d: add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008f1b6: add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x0015ca37: add byte ptr [eax], al; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x000823cf: add byte ptr [eax], al; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009df35: add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011fa2e: add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00034b08: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00168fe8: add byte ptr [eax], al; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00169114: add byte ptr [eax], al; add esp, 0x34; pop ebx; pop esi; ret; 
0x000c0b3d: add byte ptr [eax], al; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0010b09b: add byte ptr [eax], al; add esp, 0x64; pop ebx; pop esi; ret; 
0x0010adb7: add byte ptr [eax], al; add esp, 0x68; pop ebx; ret; 
0x0008efb3: add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x00171a5a: add byte ptr [eax], al; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00134b1e: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013502b: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x0013381f: add byte ptr [eax], al; add esp, 0xc; push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x001335f3: add byte ptr [eax], al; add esp, 0xc; push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0005a962: add byte ptr [eax], al; add esp, 0xc; ret; 
0x000ec659: add byte ptr [eax], al; add esp, 0xd0; pop ebx; pop esi; pop edi; ret; 
0x00054179: add byte ptr [eax], al; add esp, 4; jmp eax; 
0x0008140e: add byte ptr [eax], al; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0005aa5e: add byte ptr [eax], al; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00092bb6: add byte ptr [eax], al; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00150136: add byte ptr [eax], al; add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x000a9e64: add byte ptr [eax], al; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0008af60: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00150a52: add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x00040279: add byte ptr [eax], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00095316: add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x001383eb: add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00122258: add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0003bb2c: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0017d9c6: add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0012fcc3: add byte ptr [eax], al; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x000961de: add byte ptr [eax], al; and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x0009866b: add byte ptr [eax], al; and eax, 0x39; cmp eax, 8; je 0x98676; ret; 
0x001a3238: add byte ptr [eax], al; and eax, 0xf; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a3269: add byte ptr [eax], al; and eax, 0xff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a32a0: add byte ptr [eax], al; and eax, 0xfff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a32d9: add byte ptr [eax], al; and eax, 0xffff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x00124358: add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x001a32ee: add byte ptr [eax], al; and eax, 1; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x000344b2: add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000bee5e: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000bf5ae: add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000bee7e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bee4e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bf5ce: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bea03: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000bf12e: add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bf13e: add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00042014: add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x000999e1: add byte ptr [eax], al; call 0x108950; mov dword ptr [ebx + 0x2b4], eax; add esp, 0x18; pop ebx; ret; 
0x0002fe9c: add byte ptr [eax], al; call 0x128960; add esp, 0x1c; ret; 
0x00041f61: add byte ptr [eax], al; call 0x128980; mov dword ptr [ebx + 0x1894], 0; add esp, 0x18; pop ebx; ret; 
0x0018fa4e: add byte ptr [eax], al; call 0x182d19; add ebx, 0x44f7b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018da4e: add byte ptr [eax], al; call 0x182d19; add ebx, 0x46cfb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c856: add byte ptr [eax], al; call 0x182d19; add ebx, 0x47b33; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c6be: add byte ptr [eax], al; call 0x182d19; add ebx, 0x47c4b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c1e4: add byte ptr [eax], al; call 0x182d19; add ebx, 0x47f25; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c03e: add byte ptr [eax], al; call 0x182d19; add ebx, 0x4804b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0008b14e: add byte ptr [eax], al; call 0x182d21; add eax, 0x1abcbf; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003ce9e: add byte ptr [eax], al; call 0x182d21; add eax, 0x1f9f6f; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x00025fce: add byte ptr [eax], al; call 0x182d21; add eax, 0x210e3f; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000be1fe: add byte ptr [eax], al; call 0x182d2d; add ecx, 0x107def; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b825e: add byte ptr [eax], al; call 0x182d2d; add ecx, 0x10dbbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6c1e: add byte ptr [eax], al; call 0x182d2d; add ecx, 0x10f09b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a537b: add byte ptr [eax], al; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000c0ad7: add byte ptr [eax], al; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003819f: add byte ptr [eax], al; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00124822: add byte ptr [eax], al; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x0015c9d2: add byte ptr [eax], al; call 0x231a8; mov dword ptr [ebx + 0xa220], eax; add esp, 0x18; pop ebx; ret; 
0x00052970: add byte ptr [eax], al; call 0x52930; jmp eax; 
0x0009d117: add byte ptr [eax], al; call 0x9d080; mov dword ptr [esp], esi; call ebx; 
0x001699f1: add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x0018bff9: add byte ptr [eax], al; call dword ptr [eax + 0x37c]; add esp, 0x1c; ret; 
0x000a4618: add byte ptr [eax], al; call dword ptr [eax]; 
0x0002327b: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a87e: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0003c428: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x3c440; pop ebx; ret; 
0x0009de9b: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9deb0; pop ebx; ret; 
0x00108c03: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003c3ed: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011d4b9: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000e7b80: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0013b40a: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009a213: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0003ebf2: add byte ptr [eax], al; call eax; 
0x00182edb: add byte ptr [eax], al; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0010837c: add byte ptr [eax], al; call ecx; 
0x00151bae: add byte ptr [eax], al; call esi; 
0x0009e69c: add byte ptr [eax], al; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x00097c49: add byte ptr [eax], al; cmova eax, edx; ret; 
0x000e5c33: add byte ptr [eax], al; cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0013cdba: add byte ptr [eax], al; cmovb eax, edx; ret; 
0x00098642: add byte ptr [eax], al; cmove eax, ecx; ret; 
0x000428c3: add byte ptr [eax], al; cmove eax, edx; ret; 
0x0008eaa3: add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00077b7b: add byte ptr [eax], al; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00124429: add byte ptr [eax], al; cmovne ebx, eax; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00103b7d: add byte ptr [eax], al; cmp al, 0x16; je 0x1049ce; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x00147970: add byte ptr [eax], al; cmp byte ptr [eax + 0xffffff], 0xf; inc esp; ret; 
0x000b4e61: add byte ptr [eax], al; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x001a4a2a: add byte ptr [eax], al; cmp byte ptr [edx + 0xb], 0; je 0x1a4ab2; mov eax, 0xc; pop edi; ret; 
0x0019f4c2: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x19fd86; pop ebx; ret; 
0x001a2598: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x1a2670; pop ebx; ret; 
0x00024ae7: add byte ptr [eax], al; cmp dword ptr [ecx + 0x94], edx; jne 0x24abe; ret; 
0x000f7ce9: add byte ptr [eax], al; cmp dword ptr gs:[eax], 0x26; jne 0xf7d90; mov eax, edx; pop ebx; ret; 
0x000f7de9: add byte ptr [eax], al; cmp dword ptr gs:[edx], 0x26; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000f7f49: add byte ptr [eax], al; cmp dword ptr gs:[edx], 0x26; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x000f8234: add byte ptr [eax], al; cmp dword ptr gs:[edx], 0x26; je 0xf8228; mov eax, 0xffffffff; ret; 
0x000e493a: add byte ptr [eax], al; cmp eax, -0x26; jne 0xe494d; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000ec66e: add byte ptr [eax], al; cmp eax, 0x14; ja 0xec6c0; mov edi, dword ptr [edx + eax*4 - 0x6fcf8]; add edi, edx; jmp edi; 
0x000f8047: add byte ptr [eax], al; cmp eax, 0x14; ja 0xf81e1; mov ecx, dword ptr [edi + eax*4 - 0x6fa20]; add ecx, edi; jmp ecx; 
0x000c09c2: add byte ptr [eax], al; cmp eax, 0xc; ja 0xc0aa0; mov ecx, dword ptr [edx + eax*4 - 0x70c9c]; add ecx, edx; jmp ecx; 
0x00108b73: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x108b80; pop ebx; pop esi; ret; 
0x0010fbd1: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10fbe0; pop ebx; pop esi; ret; 
0x00110ece: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x110ee0; pop ebx; ret; 
0x00110f3e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x110f50; pop ebx; ret; 
0x001112fe: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x111310; pop ebx; ret; 
0x00112714: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x112720; pop ebx; pop esi; ret; 
0x0011b23e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11b250; pop ebx; ret; 
0x0011b74e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11b760; pop ebx; ret; 
0x0011bdbc: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11bdd0; pop ebx; ret; 
0x0011c8d3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11c8e0; pop ebx; pop esi; ret; 
0x0011c94a: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11c958; pop ebx; ret; 
0x0011cc14: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11cc20; pop ebx; pop esi; ret; 
0x0011cfee: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11d000; pop ebx; ret; 
0x0011d4ea: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11d4f8; pop ebx; ret; 
0x0011d98a: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11d998; pop ebx; ret; 
0x0011e0c3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11e0d0; pop ebx; pop esi; ret; 
0x0011e433: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11e440; pop ebx; pop esi; ret; 
0x0011edae: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11edc0; pop ebx; ret; 
0x0011edfe: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11ee10; pop ebx; ret; 
0x00120b4e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120b60; pop ebx; ret; 
0x00120ba3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120bb0; pop ebx; pop esi; ret; 
0x00123fc3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123fd0; pop ebx; pop esi; ret; 
0x00126705: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x126718; pop ebx; pop esi; ret; 
0x00127d8e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x127da0; pop ebx; ret; 
0x00127de3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x127df0; pop ebx; pop esi; ret; 
0x0012a0da: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12a0e8; pop ebx; ret; 
0x0012a71e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12a730; pop ebx; ret; 
0x0012a885: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0012a97e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12a990; pop ebx; ret; 
0x0012b96e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12b980; pop ebx; ret; 
0x0012bbfe: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12bc10; pop ebx; ret; 
0x00189434: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x189440; pop ebx; pop esi; ret; 
0x0003c42f: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x3c440; pop ebx; ret; 
0x000603de: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x603f0; pop ebx; ret; 
0x0009cf7a: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9cf88; pop ebx; ret; 
0x0009d593: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9d5a0; pop ebx; pop esi; ret; 
0x0009dea2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9deb0; pop ebx; ret; 
0x000d92bc: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xd92d0; pop ebx; ret; 
0x000e5ded: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xe5e00; pop ebx; pop esi; ret; 
0x000f8273: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf82c0; add esp, 0x18; pop ebx; ret; 
0x00108c0a: add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x00108426: add byte ptr [eax], al; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x00127366: add byte ptr [eax], al; cmp eax, 1; jg 0x127378; add esp, 8; pop ebx; ret; 
0x00151e5c: add byte ptr [eax], al; cmp eax, 1; jg 0x151e88; add esp, 8; pop ebx; ret; 
0x0017b7fb: add byte ptr [eax], al; cmp eax, 1; jg 0x17b828; add esp, 8; pop ebx; ret; 
0x0017b96b: add byte ptr [eax], al; cmp eax, 1; jg 0x17b998; add esp, 8; pop ebx; ret; 
0x0008b29e: add byte ptr [eax], al; cmp eax, 1; jg 0x8b2b0; ret; 
0x000da4b1: add byte ptr [eax], al; cmp eax, 1; jg 0xda4d8; add esp, 8; pop ebx; ret; 
0x000e7253: add byte ptr [eax], al; cmp ecx, 0x2f; ja 0xe75d0; mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x00128eb6: add byte ptr [eax], al; cmp ecx, 1; jg 0x128ee8; add esp, 8; pop ebx; ret; 
0x000e7224: add byte ptr [eax], al; cmp ecx, 5; ja 0xe72e1; mov eax, dword ptr [esi + ecx*4 - 0x700b0]; add eax, esi; jmp eax; 
0x0009104d: add byte ptr [eax], al; cmp ecx, eax; cmovb ecx, eax; mov eax, 0x182; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012a8df: add byte ptr [eax], al; cmp edi, 1; je 0x12a918; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012bb5f: add byte ptr [eax], al; cmp edi, 1; je 0x12bb98; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0008eba7: add byte ptr [eax], al; cmp edx, 0x3fff; ja 0x8ebb8; ret; 
0x0010a71d: add byte ptr [eax], al; cmp edx, 0x51; ja 0x10a930; mov eax, dword ptr [ebx + edx*4 - 0x6f390]; add eax, ebx; jmp eax; 
0x000f7dd1: add byte ptr [eax], al; cmp edx, 0x9123683e; jne 0xf7e40; ret; 
0x000602dc: add byte ptr [eax], al; cmp edx, 1; jg 0x60318; add esp, 0x18; pop ebx; ret; 
0x0008ea6b: add byte ptr [eax], al; cmp edx, 2; jbe 0x8ea78; ret; 
0x00061790: add byte ptr [eax], al; cmp edx, 7; ja 0x61a48; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x0006d080: add byte ptr [eax], al; cmp edx, 7; ja 0x6d460; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x00130055: add byte ptr [eax], al; cmp edx, ecx; jb 0x13005f; cmp ecx, edx; sbb eax, eax; ret; 
0x00180251: add byte ptr [eax], al; cmp edx, ecx; jb 0x18025b; cmp ecx, edx; sbb eax, eax; ret; 
0x00150bae: add byte ptr [eax], al; cmp edx, ecx; jne 0x150ba0; add esp, 8; pop ebx; ret; 
0x00151b99: add byte ptr [eax], al; das; je 0x151c02; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00151db9: add byte ptr [eax], al; das; je 0x151e22; mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x000bf8ed: add byte ptr [eax], al; inc dword ptr [eax]; je 0xbf8f4; inc eax; pop edi; ret; 
0x000961d4: add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x0003c203: add byte ptr [eax], al; int 0x80; 
0x0010ad14: add byte ptr [eax], al; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x00137bc5: add byte ptr [eax], al; ja 0x137bd0; sar eax, 5; add esp, 0xc; ret; 
0x001831e8: add byte ptr [eax], al; ja 0x1833e0; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0018476e: add byte ptr [eax], al; ja 0x184850; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x001848bb: add byte ptr [eax], al; ja 0x1848d0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x001981b3: add byte ptr [eax], al; ja 0x1981b9; neg eax; ret; 
0x001999f3: add byte ptr [eax], al; ja 0x1999f9; neg eax; pop ebp; ret; 
0x0019c0a3: add byte ptr [eax], al; ja 0x19c0a9; neg eax; add esp, 4; pop ebx; ret; 
0x0019edf3: add byte ptr [eax], al; ja 0x19edf9; neg eax; ret; 
0x0019f0e3: add byte ptr [eax], al; ja 0x19f0e9; neg eax; pop ebp; ret; 
0x0019f2a3: add byte ptr [eax], al; ja 0x19f2a9; neg eax; ret; 
0x0019fd8a: add byte ptr [eax], al; ja 0x19fd90; neg eax; ret; 
0x001a0103: add byte ptr [eax], al; ja 0x1a0109; neg eax; pop edi; pop ebx; ret; 
0x001a0ffb: add byte ptr [eax], al; ja 0x1a1001; neg eax; ret; 
0x001a2674: add byte ptr [eax], al; ja 0x1a267a; neg eax; ret; 
0x00182a7e: add byte ptr [eax], al; ja 0x24a0e; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007a46d: add byte ptr [eax], al; ja 0x7a560; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007d195: add byte ptr [eax], al; ja 0x7d231; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007f60b: add byte ptr [eax], al; ja 0x7f640; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007fdad: add byte ptr [eax], al; ja 0x7fde0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00080fda: add byte ptr [eax], al; ja 0x81219; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x00083186: add byte ptr [eax], al; ja 0x833b0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0008496a: add byte ptr [eax], al; ja 0x84b60; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00085d2f: add byte ptr [eax], al; ja 0x85d58; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00086882: add byte ptr [eax], al; ja 0x869b0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00086a18: add byte ptr [eax], al; ja 0x86a60; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00087506: add byte ptr [eax], al; ja 0x87570; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0008994d: add byte ptr [eax], al; ja 0x899b0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000899fb: add byte ptr [eax], al; ja 0x89a20; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00089cf3: add byte ptr [eax], al; ja 0x89da0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0008a1c0: add byte ptr [eax], al; ja 0x8a200; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x0008ebad: add byte ptr [eax], al; ja 0x8ebb8; ret; 
0x0012fcbb: add byte ptr [eax], al; jae 0x12fcca; mov eax, dword ptr [ecx + 0x4794]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x0009e5f4: add byte ptr [eax], al; jbe 0x9e600; ret; 
0x0009e634: add byte ptr [eax], al; jbe 0x9e640; ret; 
0x000f7f6c: add byte ptr [eax], al; je 0xf7f62; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x001a0c89: add byte ptr [eax], al; jg 0x1a0c90; neg eax; ret; 
0x001a0fb4: add byte ptr [eax], al; jg 0x1a0fc0; neg eax; ret; 
0x001a50b4: add byte ptr [eax], al; jg 0x1a50c0; neg eax; ret; 
0x000d6ca3: add byte ptr [eax], al; jg 0xd6cb0; neg eax; pop edi; pop esi; ret; 
0x000d6cd3: add byte ptr [eax], al; jg 0xd6cd9; neg eax; ret; 
0x0002300e: add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00023004: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00024fe1: add byte ptr [eax], al; jmp eax; 
0x0006ee61: add byte ptr [eax], al; jmp ebx; 
0x0006344f: add byte ptr [eax], al; jmp edx; 
0x001089c3: add byte ptr [eax], al; jne 0x108a34; add esp, 0x14; pop ebx; pop esi; ret; 
0x00108c65: add byte ptr [eax], al; jne 0x108caa; add esp, 0x28; pop ebx; ret; 
0x00108cf8: add byte ptr [eax], al; jne 0x108d42; add esp, 0x28; pop ebx; ret; 
0x00108ddd: add byte ptr [eax], al; jne 0x108e32; add esp, 0x24; pop ebx; pop esi; ret; 
0x00108e8d: add byte ptr [eax], al; jne 0x108ee2; add esp, 0x24; pop ebx; pop esi; ret; 
0x00108f55: add byte ptr [eax], al; jne 0x108f9a; add esp, 0x28; pop ebx; ret; 
0x0010adb1: add byte ptr [eax], al; jne 0x10ae5b; add esp, 0x68; pop ebx; ret; 
0x0010b095: add byte ptr [eax], al; jne 0x10b15b; add esp, 0x64; pop ebx; pop esi; ret; 
0x0010fe2a: add byte ptr [eax], al; jne 0x10fe46; add esp, 0x78; pop ebx; ret; 
0x00110b39: add byte ptr [eax], al; jne 0x110b7a; add esp, 0x34; pop ebx; pop esi; ret; 
0x00110e20: add byte ptr [eax], al; jne 0x110e62; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111e8a: add byte ptr [eax], al; jne 0x111ec4; add esp, 0x74; pop ebx; pop esi; ret; 
0x00111ff3: add byte ptr [eax], al; jne 0x112024; add esp, 0x74; pop ebx; pop esi; ret; 
0x001125a1: add byte ptr [eax], al; jne 0x1125b7; add esp, 0x74; pop ebx; pop esi; ret; 
0x00112781: add byte ptr [eax], al; jne 0x112797; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011b06b: add byte ptr [eax], al; jne 0x11b0cb; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0011b1bc: add byte ptr [eax], al; jne 0x11b1c7; movzx eax, al; add esp, 0x4c; ret; 
0x0011b325: add byte ptr [eax], al; jne 0x11b3cc; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011b465: add byte ptr [eax], al; jne 0x11b50c; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011b6fe: add byte ptr [eax], al; jne 0x11b71e; add esp, 0x74; pop ebx; pop esi; ret; 
0x0011c7d8: add byte ptr [eax], al; jne 0x11c7e2; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011ca9b: add byte ptr [eax], al; jne 0x11cab6; add esp, 0x74; pop ebx; pop esi; ret; 
0x0011cc81: add byte ptr [eax], al; jne 0x11cc97; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011cce1: add byte ptr [eax], al; jne 0x11ccf7; add esp, 0x64; pop ebx; pop esi; ret; 
0x0011d5a0: add byte ptr [eax], al; jne 0x11d5a9; add esp, 0x38; pop ebx; ret; 
0x0011d610: add byte ptr [eax], al; jne 0x11d619; add esp, 0x38; pop ebx; ret; 
0x0011dc18: add byte ptr [eax], al; jne 0x11dc72; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011dcc8: add byte ptr [eax], al; jne 0x11dd22; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011eae4: add byte ptr [eax], al; jne 0x11eaf3; add esp, 0x1c; ret; 
0x0011f05e: add byte ptr [eax], al; jne 0x11f082; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011f156: add byte ptr [eax], al; jne 0x11f172; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011f1e3: add byte ptr [eax], al; jne 0x11f264; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0011f2d0: add byte ptr [eax], al; jne 0x11f2f4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011f39e: add byte ptr [eax], al; jne 0x11f3af; add esp, 0x54; pop ebx; pop esi; ret; 
0x00120153: add byte ptr [eax], al; jne 0x12015f; add esp, 0x418; pop ebx; ret; 
0x00120c45: add byte ptr [eax], al; jne 0x120c4e; add esp, 0x38; pop ebx; ret; 
0x00120cd6: add byte ptr [eax], al; jne 0x120ce0; add esp, 0x34; pop ebx; pop esi; ret; 
0x00120d69: add byte ptr [eax], al; jne 0x120d73; add esp, 0x34; pop ebx; pop esi; ret; 
0x00121064: add byte ptr [eax], al; jne 0x12106c; add esp, 0x1c; ret; 
0x00121adf: add byte ptr [eax], al; jne 0x121aff; add esp, 0x1018; pop ebx; ret; 
0x00122767: add byte ptr [eax], al; jne 0x12276f; add esp, 0x1c; ret; 
0x0012426a: add byte ptr [eax], al; jne 0x124274; add esp, 0x34; pop ebx; pop esi; ret; 
0x00126f40: add byte ptr [eax], al; jne 0x126f64; add esp, 0x14; pop ebx; pop esi; ret; 
0x00126fe8: add byte ptr [eax], al; jne 0x127032; add esp, 0x28; pop ebx; ret; 
0x00127088: add byte ptr [eax], al; jne 0x1270d2; add esp, 0x28; pop ebx; ret; 
0x00128b13: add byte ptr [eax], al; jne 0x128b1b; add esp, 0x3c; ret; 
0x00128f8a: add byte ptr [eax], al; jne 0x128f92; add esp, 0x1c; ret; 
0x00129077: add byte ptr [eax], al; jne 0x129081; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012b527: add byte ptr [eax], al; jne 0x12b5bf; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012ca6e: add byte ptr [eax], al; jne 0x12ca92; add esp, 0x28; pop ebx; ret; 
0x0012cb93: add byte ptr [eax], al; jne 0x12cbb2; add esp, 0x18; pop ebx; ret; 
0x0012cc13: add byte ptr [eax], al; jne 0x12cc32; add esp, 0x18; pop ebx; ret; 
0x0012ce6d: add byte ptr [eax], al; jne 0x12ce77; add esp, 0x74; pop ebx; pop esi; ret; 
0x0012cece: add byte ptr [eax], al; jne 0x12cef2; add esp, 0x18; pop ebx; ret; 
0x0012db2e: add byte ptr [eax], al; jne 0x12db52; add esp, 0x18; pop ebx; ret; 
0x0012dc35: add byte ptr [eax], al; jne 0x12dc3d; add esp, 0x1c; ret; 
0x0012dca3: add byte ptr [eax], al; jne 0x12dcc2; add esp, 0x18; pop ebx; ret; 
0x0012dd2e: add byte ptr [eax], al; jne 0x12dd52; add esp, 0x28; pop ebx; ret; 
0x0012de36: add byte ptr [eax], al; jne 0x12de3e; add esp, 0x7c; ret; 
0x00135958: add byte ptr [eax], al; jne 0x135980; pop ebx; pop esi; pop edi; ret; 
0x001387d3: add byte ptr [eax], al; jne 0x1387e5; add esp, 0x2c; ret; 
0x00139973: add byte ptr [eax], al; jne 0x139985; add esp, 0x2c; ret; 
0x0013a9e9: add byte ptr [eax], al; jne 0x13aa4a; add esp, 0x14; pop ebx; pop esi; ret; 
0x00143a30: add byte ptr [eax], al; jne 0x143a44; add esp, 0x18; pop ebx; ret; 
0x00143a78: add byte ptr [eax], al; jne 0x143a80; add esp, 0x1c; ret; 
0x00143ac7: add byte ptr [eax], al; jne 0x143acf; add esp, 0x1c; ret; 
0x001458c0: add byte ptr [eax], al; jne 0x145904; add esp, 0x118; pop ebx; ret; 
0x00145960: add byte ptr [eax], al; jne 0x1459c0; add esp, 0x118; pop ebx; ret; 
0x00145a20: add byte ptr [eax], al; jne 0x145a6b; add esp, 0x118; pop ebx; ret; 
0x00145ac0: add byte ptr [eax], al; jne 0x145aed; add esp, 0x11c; ret; 
0x00145fc1: add byte ptr [eax], al; jne 0x146004; add esp, 0x1c; ret; 
0x001499d4: add byte ptr [eax], al; jne 0x1499df; movzx eax, ax; add esp, 0x2c; ret; 
0x0014df64: add byte ptr [eax], al; jne 0x14df6d; add esp, 0x28; pop ebx; ret; 
0x00151876: add byte ptr [eax], al; jne 0x15187e; add esp, 0x1c; ret; 
0x00168e99: add byte ptr [eax], al; jne 0x168ea2; add esp, 0x28; pop ebx; ret; 
0x0016910e: add byte ptr [eax], al; jne 0x1691b3; add esp, 0x34; pop ebx; pop esi; ret; 
0x0016947e: add byte ptr [eax], al; jne 0x1694b9; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016b3ac: add byte ptr [eax], al; jne 0x16b3e6; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016ebb7: add byte ptr [eax], al; jne 0x16ec2b; add esp, 0x18; pop ebx; ret; 
0x00171c20: add byte ptr [eax], al; jne 0x171c37; add esp, 0x1c; ret; 
0x00171c9e: add byte ptr [eax], al; jne 0x171cbc; add esp, 0x74; pop ebx; pop edi; ret; 
0x00171d4c: add byte ptr [eax], al; jne 0x171d5f; add esp, 0x28; pop ebx; ret; 
0x00171dec: add byte ptr [eax], al; jne 0x171dff; add esp, 0x28; pop ebx; ret; 
0x00172120: add byte ptr [eax], al; jne 0x172137; add esp, 0x1c; ret; 
0x001721a3: add byte ptr [eax], al; jne 0x1721b7; add esp, 0x18; pop ebx; ret; 
0x00172fa6: add byte ptr [eax], al; jne 0x172fae; add esp, 0x4c; ret; 
0x00173016: add byte ptr [eax], al; jne 0x17301e; add esp, 0x4c; ret; 
0x00173086: add byte ptr [eax], al; jne 0x17308e; add esp, 0x4c; ret; 
0x001730f6: add byte ptr [eax], al; jne 0x1730fe; add esp, 0x4c; ret; 
0x00173159: add byte ptr [eax], al; jne 0x173161; add esp, 0x4c; ret; 
0x001731b9: add byte ptr [eax], al; jne 0x1731c1; add esp, 0x4c; ret; 
0x00173226: add byte ptr [eax], al; jne 0x17322e; add esp, 0x4c; ret; 
0x001732a6: add byte ptr [eax], al; jne 0x1732ae; add esp, 0x4c; ret; 
0x0017369b: add byte ptr [eax], al; jne 0x1736a8; add esp, 0x94; pop ebx; pop edi; ret; 
0x00173787: add byte ptr [eax], al; jne 0x17378f; add esp, 0x1c; ret; 
0x001737cf: add byte ptr [eax], al; jne 0x173804; add esp, 0x1c; ret; 
0x00174f00: add byte ptr [eax], al; jne 0x174f08; add esp, 0x2c; ret; 
0x00174f92: add byte ptr [eax], al; jne 0x174ff9; add esp, 0x18; pop ebx; ret; 
0x00175072: add byte ptr [eax], al; jne 0x1750d9; add esp, 0x18; pop ebx; ret; 
0x00175329: add byte ptr [eax], al; jne 0x175364; add esp, 0x18; pop ebx; ret; 
0x001753b9: add byte ptr [eax], al; jne 0x1753f4; add esp, 0x18; pop ebx; ret; 
0x00175463: add byte ptr [eax], al; jne 0x175483; add esp, 0x18; pop ebx; ret; 
0x001754eb: add byte ptr [eax], al; jne 0x17551f; add esp, 0x18; pop ebx; ret; 
0x0017557f: add byte ptr [eax], al; jne 0x1755c4; add esp, 0x18; pop ebx; ret; 
0x00175ae6: add byte ptr [eax], al; jne 0x175b5c; add esp, 0x14; pop ebx; pop esi; ret; 
0x00175bd6: add byte ptr [eax], al; jne 0x175c3c; add esp, 0x14; pop ebx; pop esi; ret; 
0x00175d69: add byte ptr [eax], al; jne 0x175da4; add esp, 0x18; pop ebx; ret; 
0x00175df9: add byte ptr [eax], al; jne 0x175e34; add esp, 0x18; pop ebx; ret; 
0x00175e89: add byte ptr [eax], al; jne 0x175ec4; add esp, 0x18; pop ebx; ret; 
0x00175f19: add byte ptr [eax], al; jne 0x175f54; add esp, 0x18; pop ebx; ret; 
0x001764dd: add byte ptr [eax], al; jne 0x1764e7; add esp, 0x54; pop ebx; pop esi; ret; 
0x00176580: add byte ptr [eax], al; jne 0x17658b; movzx eax, al; add esp, 0x1c; ret; 
0x001765d0: add byte ptr [eax], al; jne 0x1765db; movzx eax, al; add esp, 0x1c; ret; 
0x0017662a: add byte ptr [eax], al; jne 0x176633; add esp, 0x18; pop ebx; ret; 
0x001766ca: add byte ptr [eax], al; jne 0x1766d3; add esp, 0x18; pop ebx; ret; 
0x0017b795: add byte ptr [eax], al; jne 0x17b7c4; add esp, 0x18; pop ebx; ret; 
0x0017b9fc: add byte ptr [eax], al; jne 0x17ba34; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017ba8c: add byte ptr [eax], al; jne 0x17bac4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017d2c8: add byte ptr [eax], al; jne 0x17d2e1; add esp, 0x18; pop ebx; ret; 
0x0017d342: add byte ptr [eax], al; jne 0x17d359; add esp, 0x18; pop ebx; ret; 
0x0017f900: add byte ptr [eax], al; jne 0x17f94c; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001800bb: add byte ptr [eax], al; jne 0x1800c4; add esp, 0x28; pop ebx; ret; 
0x0018292f: add byte ptr [eax], al; jne 0x182938; add esp, 0x18; pop ebx; ret; 
0x00185697: add byte ptr [eax], al; jne 0x18569f; add esp, 0x1c; ret; 
0x0018b6a2: add byte ptr [eax], al; jne 0x18b6c7; add esp, 0x18; pop ebx; ret; 
0x0018b73d: add byte ptr [eax], al; jne 0x18b747; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018b7b7: add byte ptr [eax], al; jne 0x18b7c1; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018b9e9: add byte ptr [eax], al; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0019f5f5: add byte ptr [eax], al; jne 0x19fd70; pop ebx; ret; 
0x0019f42e: add byte ptr [eax], al; jne 0x19fd86; pop ebx; ret; 
0x001a0d6d: add byte ptr [eax], al; jne 0x1a0fb0; pop ebx; ret; 
0x001a2427: add byte ptr [eax], al; jne 0x1a2650; pop ebx; ret; 
0x001a24e4: add byte ptr [eax], al; jne 0x1a2670; pop ebx; ret; 
0x001a326e: add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x00024aed: add byte ptr [eax], al; jne 0x24abe; ret; 
0x000254ab: add byte ptr [eax], al; jne 0x254b3; add esp, 0x1c; ret; 
0x0003a8c7: add byte ptr [eax], al; jne 0x3a8d3; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bdb6: add byte ptr [eax], al; jne 0x3bdbf; add esp, 0x18; pop ebx; ret; 
0x0003c0f6: add byte ptr [eax], al; jne 0x3c103; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003c607: add byte ptr [eax], al; jne 0x3c614; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c687: add byte ptr [eax], al; jne 0x3c694; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c6f4: add byte ptr [eax], al; jne 0x3c73e; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003c79b: add byte ptr [eax], al; jne 0x3c7a8; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003c809: add byte ptr [eax], al; jne 0x3c81f; add esp, 0x98; pop ebx; ret; 
0x0003c9ae: add byte ptr [eax], al; jne 0x3c9ec; add esp, 0x28; pop ebx; ret; 
0x0003cd66: add byte ptr [eax], al; jne 0x3cd72; add esp, 0x128; pop ebx; ret; 
0x0003d1a6: add byte ptr [eax], al; jne 0x3d1b0; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003d2f1: add byte ptr [eax], al; jne 0x3d307; add esp, 0x98; pop ebx; ret; 
0x0003d361: add byte ptr [eax], al; jne 0x3d377; add esp, 0x98; pop ebx; ret; 
0x0003d3da: add byte ptr [eax], al; jne 0x3d3e5; add esp, 0x9c; ret; 
0x0003d858: add byte ptr [eax], al; jne 0x3d860; add esp, 0x1c; ret; 
0x0003e8aa: add byte ptr [eax], al; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9bd: add byte ptr [eax], al; jne 0x3e9c5; add esp, 0x1c; ret; 
0x0003fe7d: add byte ptr [eax], al; jne 0x3fe85; add esp, 0x1c; ret; 
0x0004008a: add byte ptr [eax], al; jne 0x40092; add esp, 0x1c; ret; 
0x00040238: add byte ptr [eax], al; jne 0x40240; add esp, 0x2c; ret; 
0x0004033a: add byte ptr [eax], al; jne 0x40342; add esp, 0x1c; ret; 
0x000403bd: add byte ptr [eax], al; jne 0x403c5; add esp, 0x1c; ret; 
0x0004135b: add byte ptr [eax], al; jne 0x41394; add esp, 0x18; pop ebx; ret; 
0x000527e8: add byte ptr [eax], al; jne 0x527f0; add esp, 0x2c; ret; 
0x00054a55: add byte ptr [eax], al; jne 0x54a62; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00054ad3: add byte ptr [eax], al; jne 0x54ae0; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00059073: add byte ptr [eax], al; jne 0x59080; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00059dc6: add byte ptr [eax], al; jne 0x59de3; add esp, 0x434; pop ebx; pop esi; ret; 
0x0005a006: add byte ptr [eax], al; jne 0x5a017; add esp, 0x1c; ret; 
0x0005e813: add byte ptr [eax], al; jne 0x5e82e; add esp, 0x78; pop ebx; ret; 
0x00060686: add byte ptr [eax], al; jne 0x60692; add esp, 0x1018; pop ebx; ret; 
0x00060705: add byte ptr [eax], al; jne 0x6070e; add esp, 0x78; pop ebx; ret; 
0x0007d515: add byte ptr [eax], al; jne 0x7d51f; add esp, 0x24; pop ebx; pop esi; ret; 
0x00084080: add byte ptr [eax], al; jne 0x84097; add esp, 0x824; pop ebx; pop esi; ret; 
0x00085b80: add byte ptr [eax], al; jne 0x85b98; add esp, 0x28; pop ebx; ret; 
0x0008c2d8: add byte ptr [eax], al; jne 0x8c2e2; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008c43d: add byte ptr [eax], al; jne 0x8c48d; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008c5ab: add byte ptr [eax], al; jne 0x8c5f5; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008cda2: add byte ptr [eax], al; jne 0x8cdac; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008efad: add byte ptr [eax], al; jne 0x8f0dc; add esp, 0x94; pop ebx; pop esi; ret; 
0x0008f226: add byte ptr [eax], al; jne 0x8f243; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009098b: add byte ptr [eax], al; jne 0x90993; add esp, 0x2c; ret; 
0x00092cd2: add byte ptr [eax], al; jne 0x92ce0; mov eax, edx; pop ebx; pop esi; ret; 
0x00092f90: add byte ptr [eax], al; jne 0x92fa0; xor eax, eax; pop ebx; ret; 
0x00093b7d: add byte ptr [eax], al; jne 0x93b87; add esp, 0x14; pop ebx; pop esi; ret; 
0x00095387: add byte ptr [eax], al; jne 0x95390; add esp, 0x28; pop ebx; ret; 
0x00095425: add byte ptr [eax], al; jne 0x9542e; add esp, 0x28; pop ebx; ret; 
0x000966bb: add byte ptr [eax], al; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b1b: add byte ptr [eax], al; jne 0x96b23; add esp, 0x2c; ret; 
0x00097047: add byte ptr [eax], al; jne 0x9704f; add esp, 0x2c; ret; 
0x00097497: add byte ptr [eax], al; jne 0x9749f; add esp, 0x2c; ret; 
0x0009871a: add byte ptr [eax], al; jne 0x98731; add esp, 0x24; pop ebx; pop esi; ret; 
0x00099687: add byte ptr [eax], al; jne 0x996bc; add esp, 0x24; pop ebx; pop esi; ret; 
0x00099728: add byte ptr [eax], al; jne 0x99764; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009a1b4: add byte ptr [eax], al; jne 0x9a1ff; add esp, 0x38; pop ebx; ret; 
0x0009a422: add byte ptr [eax], al; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a528: add byte ptr [eax], al; jne 0x9a567; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009a68e: add byte ptr [eax], al; jne 0x9a6b7; add esp, 0x2c; ret; 
0x0009a8ce: add byte ptr [eax], al; jne 0x9a8f7; add esp, 0x18; pop ebx; ret; 
0x0009aa4d: add byte ptr [eax], al; jne 0x9aa93; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009aaf8: add byte ptr [eax], al; jne 0x9ab34; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009c564: add byte ptr [eax], al; jne 0x9c56d; add esp, 0x28; pop ebx; ret; 
0x0009d83e: add byte ptr [eax], al; jne 0x9d848; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009dabc: add byte ptr [eax], al; jne 0x9dac5; add esp, 0x28; pop ebx; ret; 
0x0009df2f: add byte ptr [eax], al; jne 0x9dfbf; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009e01c: add byte ptr [eax], al; jne 0x9e025; add esp, 0x38; pop ebx; ret; 
0x0009e493: add byte ptr [eax], al; jne 0x9e4af; add esp, 0xb4; pop ebx; pop esi; ret; 
0x000a4031: add byte ptr [eax], al; jne 0xa403e; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000c35eb: add byte ptr [eax], al; jne 0xc3614; add esp, 0x18; pop ebx; ret; 
0x000d5df3: add byte ptr [eax], al; jne 0xd5e00; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d5e75: add byte ptr [eax], al; jne 0xd5e82; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d5ef3: add byte ptr [eax], al; jne 0xd5f00; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d7b78: add byte ptr [eax], al; jne 0xd7b8f; add esp, 0x28; pop ebx; ret; 
0x000d7bfc: add byte ptr [eax], al; jne 0xd7c04; add esp, 0x1c; ret; 
0x000d7c46: add byte ptr [eax], al; jne 0xd7c4f; add esp, 0x38; pop ebx; ret; 
0x000d7ca8: add byte ptr [eax], al; jne 0xd7cb1; add esp, 0x48; pop ebx; ret; 
0x000d8f1c: add byte ptr [eax], al; jne 0xd8f25; add esp, 0x28; pop ebx; ret; 
0x000d9181: add byte ptr [eax], al; jne 0xd91c2; add esp, 0x28; pop ebx; ret; 
0x000d9236: add byte ptr [eax], al; jne 0xd928c; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d94f5: add byte ptr [eax], al; jne 0xd9510; add esp, 0x38; pop ebx; ret; 
0x000dbda8: add byte ptr [eax], al; jne 0xdbdca; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dbe30: add byte ptr [eax], al; jne 0xdbe52; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dc2b6: add byte ptr [eax], al; jne 0xdc2c1; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000e2330: add byte ptr [eax], al; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47b0: add byte ptr [eax], al; jne 0xe47b8; add esp, 0x1c; ret; 
0x000e48e4: add byte ptr [eax], al; jne 0xe491a; add esp, 0x28; pop ebx; ret; 
0x000e4ad2: add byte ptr [eax], al; jne 0xe4adb; add esp, 0x28; pop ebx; ret; 
0x000e58a8: add byte ptr [eax], al; jne 0xe58b4; add esp, 0xe8; pop ebx; ret; 
0x000e591a: add byte ptr [eax], al; jne 0xe5926; add esp, 0xe8; pop ebx; ret; 
0x000e59be: add byte ptr [eax], al; jne 0xe59ca; add esp, 0xe8; pop ebx; ret; 
0x000e5a52: add byte ptr [eax], al; jne 0xe5a60; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x000ec8dd: add byte ptr [eax], al; jne 0xec8ef; add esp, 0x1c; ret; 
0x000edbea: add byte ptr [eax], al; jne 0xedc06; add esp, 0x78; pop ebx; ret; 
0x000f069a: add byte ptr [eax], al; jne 0xf06b6; add esp, 0x78; pop ebx; ret; 
0x000f146a: add byte ptr [eax], al; jne 0xf1486; add esp, 0x78; pop ebx; ret; 
0x000f3f0a: add byte ptr [eax], al; jne 0xf3f26; add esp, 0x78; pop ebx; ret; 
0x000f4cea: add byte ptr [eax], al; jne 0xf4d06; add esp, 0x78; pop ebx; ret; 
0x0003290e: add byte ptr [eax], al; lea eax, [eax + 0x11cc]; ret; 
0x001728ae: add byte ptr [eax], al; lea eax, [eax + 0xa78c]; mov dword ptr gs:[edx], eax; ret; 
0x001a4849: add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x001a4872: add byte ptr [eax], al; lea eax, [eax + 0xf]; pop edi; ret; 
0x001a4887: add byte ptr [eax], al; lea eax, [eax + 1]; pop edi; ret; 
0x001a4897: add byte ptr [eax], al; lea eax, [eax + 2]; pop edi; ret; 
0x001a47df: add byte ptr [eax], al; lea eax, [eax + 3]; pop edi; ret; 
0x001a48a7: add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001a4812: add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x0005416e: add byte ptr [eax], al; lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x001a3cb9: add byte ptr [eax], al; lea eax, [ecx + 0xc]; ret; 
0x001a3f17: add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x001a3f27: add byte ptr [eax], al; lea eax, [ecx + 2]; ret; 
0x001a3f37: add byte ptr [eax], al; lea eax, [ecx + 3]; ret; 
0x001a3c66: add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x001a3f47: add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001a3c90: add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001a2be4: add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a2b9e: add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a3867: add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x001a3877: add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x001a2b41: add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x001a3887: add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x001a2afb: add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001a30c1: add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a30e6: add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x001a3139: add byte ptr [eax], al; lea eax, [edi - 4]; pop edi; ret; 
0x001a3110: add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x001a42e0: add byte ptr [eax], al; lea eax, [edx + 0xb]; ret; 
0x001a4309: add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x001a4293: add byte ptr [eax], al; lea eax, [edx + 3]; ret; 
0x001a42b6: add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0015a382: add byte ptr [eax], al; lea eax, [esp + 0x9a4]; push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0009dde6: add byte ptr [eax], al; lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0017ff7e: add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000e7135: add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00090e9b: add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00110e2e: add byte ptr [eax], al; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e811d: add byte ptr [eax], al; lea ecx, [ebp - 0x6c324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0016fd0f: add byte ptr [eax], al; lea ecx, [esp + 0x28]; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00171964: add byte ptr [eax], al; lea ecx, [esp + 0x28]; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000e4dd9: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0012a674: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00090cc7: add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0013a8f4: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013a9c5: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0009db91: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00112438: add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0003c2a0: add byte ptr [eax], al; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x001a4a77: add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d6eca: add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x00024f3a: add byte ptr [eax], al; lea esi, [esi]; call 0x182d21; add eax, 0x211ecf; lea eax, [eax - 0x680ac]; ret; 
0x000b8258: add byte ptr [eax], al; lea esi, [esi]; call 0x182d2d; add ecx, 0x10dbbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001a3d2a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a3d3a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a3d4a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a3d5a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a3d6a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a3cca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a3cda: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a3cea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a3cfa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a3d0a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a5248: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a3d1a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a2d1b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a2d2b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a2d3b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a2d4b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a2d5b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a2c9a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a2cab: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a2cbb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a2ccb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a2cdb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a2ceb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a2cfb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a2d0b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001a317b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a316b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a315b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a314b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a31eb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001a31db: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001a31cb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001a54db: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001a31bb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001a31ab: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001a319b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001a318b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a2c8a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001a438a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a439a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a43aa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a43ba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a432a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a433a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a434a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a435a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a436a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a437a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000baef8: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b0f58: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000b0f9a: add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0008a16a: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; mov edx, eax; ret; 
0x000a44b7: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x001981aa: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ja 0x1981b9; neg eax; ret; 
0x000d6ccb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; jg 0xd6cd9; neg eax; ret; 
0x001685a7: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x001a5b78: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000342ea: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00176317: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x001828a8: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001a521b: add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b0f7b: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b0f6a: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000af20b: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00030ed2: add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x001a5408: add byte ptr [eax], al; lea esi, [esi]; pop esi; xor eax, eax; pop edi; ret; 
0x0008d087: add byte ptr [eax], al; lea esi, [esi]; ret; 
0x001a2d6b: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x0008b167: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a2959: add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a5289: add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a4319: add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x001a4af0: add byte ptr [eax], al; lea esi, cs:[esi]; lea esi, [esi]; xor eax, eax; ret; 
0x0008b129: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x0019ede9: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ja 0x19edf9; neg eax; ret; 
0x000d6ee9: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x0008b179: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x000910b9: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b0f49: add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x001687a9: add byte ptr [eax], al; lea esi, cs:[esi]; ret; 
0x00173489: add byte ptr [eax], al; lea esi, cs:[esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x000d6cb9: add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000bebe9: add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0008cfe8: add byte ptr [eax], al; lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x000a3225: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a3828: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009edd9: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000a2edc: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000b335e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000aef9e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0003ff1c: add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x000be31e: add byte ptr [eax], al; mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baefe: add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b0f5e: add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000a972e: add byte ptr [eax], al; mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x0009f25a: add byte ptr [eax], al; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x00091740: add byte ptr [eax], al; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x000d6eae: add byte ptr [eax], al; mov ch, dh; and ch, 0xf; je 0xd6ed0; add eax, 2; ret; 
0x0008e886: add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00078025: add byte ptr [eax], al; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0007802c: add byte ptr [eax], al; mov dword ptr [eax + 0x18], edx; ret; 
0x0008b2ec: add byte ptr [eax], al; mov dword ptr [eax + 0x1a7c], 0; ret; 
0x0008cae5: add byte ptr [eax], al; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008caef: add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0009e588: add byte ptr [eax], al; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e538: add byte ptr [eax], al; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4d8: add byte ptr [eax], al; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e508: add byte ptr [eax], al; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e3f2: add byte ptr [eax], al; mov dword ptr [eax + 0x3bd4], 0; ret; 
0x0008e87f: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000419b7: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0009b4bf: add byte ptr [eax], al; mov dword ptr [eax + 0xc], ecx; ret; 
0x0008cb26: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00176038: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00176008: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0008ec9f: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x00151206: add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0015120c: add byte ptr [eax], al; mov dword ptr [eax + 0xfc], edx; ret; 
0x0014ba4d: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00089f7e: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0016a16c: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00107f1f: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00097bb8: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0013cb7d: add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016a0b0: add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016a0fa: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016a0c4: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0016a0d7: add byte ptr [eax], al; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00098f56: add byte ptr [eax], al; mov dword ptr [eax + 4], edx; ret; 
0x0014ba54: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00107f18: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00089f85: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x0008e88d: add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005ad38: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x0016a0b7: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000d1d26: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x0016d540: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00093baf: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0003cb18: add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0016a14e: add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016a15e: add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0008c1bd: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0005a03b: add byte ptr [eax], al; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00093b14: add byte ptr [eax], al; mov dword ptr [eax], edx; ret; 
0x00023271: add byte ptr [eax], al; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x00151dc4: add byte ptr [eax], al; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x00151d3c: add byte ptr [eax], al; mov dword ptr [ebx + 0x5eb8], 0; call esi; 
0x00151cb4: add byte ptr [eax], al; mov dword ptr [ebx + 0x6ef8], 0; call esi; 
0x00151c2c: add byte ptr [eax], al; mov dword ptr [ebx + 0x7f38], 0; call esi; 
0x00151ba4: add byte ptr [eax], al; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x0017e41e: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x00143845: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0017f6da: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0008c210: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0017f72d: add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0017fcb6: add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0009ae5e: add byte ptr [eax], al; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x00175f9f: add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x001701d2: add byte ptr [eax], al; mov dword ptr [ecx + 8], eax; mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x00078521: add byte ptr [eax], al; mov dword ptr [ecx], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00129a8e: add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x000b0fbe: add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b0f8e: add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x00095185: add byte ptr [eax], al; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0007bfa8: add byte ptr [eax], al; mov dword ptr [edx + 0x1a40], 0; ret; 
0x00085bc8: add byte ptr [eax], al; mov dword ptr [edx + 0x1a54], 0; ret; 
0x0008b268: add byte ptr [eax], al; mov dword ptr [edx + 0x1a74], 0; ret; 
0x000975a0: add byte ptr [eax], al; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0009e63e: add byte ptr [eax], al; mov dword ptr [edx + 0x390], eax; ret; 
0x0009b4b9: add byte ptr [eax], al; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00111d84: add byte ptr [eax], al; mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x00059e6c: add byte ptr [eax], al; mov dword ptr [edx + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00082c39: add byte ptr [eax], al; mov dword ptr [edx], 0; pop ebx; pop esi; pop edi; ret; 
0x00059f3e: add byte ptr [eax], al; mov dword ptr [edx], 0; ret; 
0x000929da: add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000ed744: add byte ptr [eax], al; mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x00040116: add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00165b9d: add byte ptr [eax], al; mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00089451: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008af59: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0015641e: add byte ptr [eax], al; mov dword ptr [esi + 0xc], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00168196: add byte ptr [eax], al; mov dword ptr [esi + 0xc], eax; push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00121aad: add byte ptr [eax], al; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d05e: add byte ptr [eax], al; mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000e5e50: add byte ptr [eax], al; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x0006f736: add byte ptr [eax], al; mov dword ptr [esp + 0x14], 0; jmp edx; 
0x0006faf6: add byte ptr [eax], al; mov dword ptr [esp + 0x14], 1; jmp edx; 
0x000e4d32: add byte ptr [eax], al; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x00052660: add byte ptr [eax], al; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0012c9a5: add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012e600: add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012dfc1: add byte ptr [eax], al; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00112246: add byte ptr [eax], al; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000dbd4a: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4ea: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0006f173: add byte ptr [eax], al; mov dword ptr [esp + 0x20], 1; jmp edx; 
0x0003d24f: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0012da1d: add byte ptr [eax], al; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x000632b6: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 0; jmp eax; 
0x0009b987: add byte ptr [eax], al; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000985a2: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0009dced: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0006ee59: add byte ptr [eax], al; mov dword ptr [esp + 0x30], 0; jmp ebx; 
0x000985ad: add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000d88d4: add byte ptr [eax], al; mov dword ptr [esp + 0x34], eax; push eax; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0012cdb8: add byte ptr [eax], al; mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x0006f31e: add byte ptr [eax], al; mov dword ptr [esp + 0x3c], 0; jmp edx; 
0x0009d3b3: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x0011ef9a: add byte ptr [eax], al; mov dword ptr [esp + 0x4c], edx; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00129652: add byte ptr [eax], al; mov dword ptr [esp + 0x68], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012965c: add byte ptr [eax], al; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001099c2: add byte ptr [eax], al; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00109c64: add byte ptr [eax], al; mov dword ptr [esp + 0xac], edi; call dword ptr gs:[0x10]; 
0x001099ce: add byte ptr [eax], al; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000a46c4: add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0010898a: add byte ptr [eax], al; mov dword ptr [esp + 0xc], edx; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012c8fa: add byte ptr [eax], al; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006f798: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0007ac0c: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; jmp eax; 
0x0016897a: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0012d5ca: add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016d56c: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00092ff3: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007ab1d: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x001228fc: add byte ptr [eax], al; mov dword ptr gs:[eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x001383e4: add byte ptr [eax], al; mov dword ptr gs:[eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003cbc4: add byte ptr [eax], al; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c184: add byte ptr [eax], al; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x00114074: add byte ptr [eax], al; mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x00182dfc: add byte ptr [eax], al; mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x0003b497: add byte ptr [eax], al; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0003bb25: add byte ptr [eax], al; mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x0003cc9e: add byte ptr [eax], al; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0009995c: add byte ptr [eax], al; mov dword ptr gs:[eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x0011f674: add byte ptr [eax], al; mov dword ptr gs:[eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x000e617c: add byte ptr [eax], al; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00120eec: add byte ptr [eax], al; mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x000257b4: add byte ptr [eax], al; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00082f34: add byte ptr [eax], al; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x00034566: add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0003e820: add byte ptr [eax], al; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0015214a: add byte ptr [eax], al; mov dword ptr gs:[edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00024f01: add byte ptr [eax], al; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x001728b4: add byte ptr [eax], al; mov dword ptr gs:[edx], eax; ret; 
0x000baf0e: add byte ptr [eax], al; mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009876e: add byte ptr [eax], al; mov eax, 0x10; add esp, 0xc; ret; 
0x000e4f5f: add byte ptr [eax], al; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009d2d2: add byte ptr [eax], al; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011179c: add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x001115d5: add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0008ecae: add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x0008eed6: add byte ptr [eax], al; mov eax, 0x16; ret; 
0x000e4cc0: add byte ptr [eax], al; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e4f00: add byte ptr [eax], al; mov eax, 0x197; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00111741: add byte ptr [eax], al; mov eax, 0x1c4; call dword ptr gs:[0x10]; 
0x000f7de4: add byte ptr [eax], al; mov eax, 0x20; cmp dword ptr gs:[edx], 0x26; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x0011e899: add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011e8c1: add byte ptr [eax], al; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x0008ea9e: add byte ptr [eax], al; mov eax, 0x5f; cmovne eax, edx; ret; 
0x000dc04e: add byte ptr [eax], al; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0012a6ad: add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010aff1: add byte ptr [eax], al; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0010af9d: add byte ptr [eax], al; mov eax, 0x72; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0012e0fe: add byte ptr [eax], al; mov eax, 0x75; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0012e14e: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012ecd9: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0003fb18: add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012f586: add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00091b6f: add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00090ccd: add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0003c296: add byte ptr [eax], al; mov eax, 0xae; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c33d: add byte ptr [eax], al; mov eax, 0xae; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0009b982: add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001099c9: add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000984ae: add byte ptr [eax], al; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x001a4a34: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x000930a6: add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0009be35: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009558a: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000934c2: add byte ptr [eax], al; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008db53: add byte ptr [eax], al; mov eax, 0xf0; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000257bb: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00098f13: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003c1eb: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003cbcb: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c18b: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0009a276: add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x000f7f44: add byte ptr [eax], al; mov eax, 1; cmp dword ptr gs:[edx], 0x26; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x000a4866: add byte ptr [eax], al; mov eax, 1; ret; 
0x000929e6: add byte ptr [eax], al; mov eax, 3; ret; 
0x001a498b: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x001a49e4: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x00120f1d: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x000c09f4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c0a04: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c0a14: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c0a24: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c0a34: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c0a44: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c0a54: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c0a64: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c0a74: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c0a84: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c0a94: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c09e4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0012fc7e: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x00120f23: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0016a8e1: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0008cbc8: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8cbd8; ret; 
0x00052861: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x00089ed5: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x89ed0; ret; 
0x0017fab3: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x3a0]; test eax, eax; je 0x17fad0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00120efe: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x3c]; pop ebx; ret; 
0x0008ccec: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x90]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0012141f: add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x121429; ret; 
0x001085fe: add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10854b; call eax; 
0x001086b6: add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10859a; call eax; 
0x0010865e: add byte ptr [eax], al; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10854b; call eax; 
0x001718ca: add byte ptr [eax], al; mov eax, dword ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0016df38: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00084970: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00072376: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x722c8]; jmp eax; 
0x00071de2: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x7249c]; jmp eax; 
0x0007234c: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x514]; add eax, dword ptr [eax + ebx*4 - 0x72418]; jmp eax; 
0x00066377: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00066294: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; mov edx, dword ptr [ebp - 0x58c]; add eax, dword ptr [eax + ebx*4 - 0x72bf8]; jmp eax; 
0x0016899a: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00168b0d: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00172b16: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x190]; add esp, 4; pop ebx; pop esi; ret; 
0x00172ba6: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a0]; add esp, 4; pop ebx; pop esi; ret; 
0x0008c12e: add byte ptr [eax], al; mov eax, dword ptr [ebx + 4]; mov esi, dword ptr [edx + eax*4 - 0x71698]; add esi, edx; jmp esi; 
0x000ea40a: add byte ptr [eax], al; mov eax, dword ptr [ebx + ebp*4 - 0x6fe68]; add eax, ebx; jmp eax; 
0x0010a8eb: add byte ptr [eax], al; mov eax, dword ptr [ebx + edx*4 - 0x6f248]; add eax, ebx; jmp eax; 
0x0010a726: add byte ptr [eax], al; mov eax, dword ptr [ebx + edx*4 - 0x6f390]; add eax, ebx; jmp eax; 
0x00090f17: add byte ptr [eax], al; mov eax, dword ptr [ecx + 0x228]; push edx; call eax; 
0x000e6176: add byte ptr [eax], al; mov eax, dword ptr [ecx + 0xa4]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x000b328e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000aeece: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x001a5b7e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0017089f: add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000c09de: add byte ptr [eax], al; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00084ffe: add byte ptr [eax], al; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00084ece: add byte ptr [eax], al; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x00098665: add byte ptr [eax], al; mov eax, dword ptr [edx + 0x80]; and eax, 0x39; cmp eax, 8; je 0x98676; ret; 
0x0008dcde: add byte ptr [eax], al; mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x001715a3: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000e725c: add byte ptr [eax], al; mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x000e722d: add byte ptr [eax], al; mov eax, dword ptr [esi + ecx*4 - 0x700b0]; add eax, esi; jmp eax; 
0x00130026: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x12fed0; add esp, 4; ret; 
0x0006d089: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x00061799: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x00168659: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000e24e5: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x1c]; add eax, dword ptr [eax + ecx*4 - 0x70488]; jmp eax; 
0x00103b85: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x001a492e: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0008eaae: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0008ebb6: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0017631e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x001828ae: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0018294e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x001828de: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x001828be: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008ae3e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0018287e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0008b18e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x001096d8: add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00033d52: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000342d2: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034241: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000342a2: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034211: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003292e: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x000341d2: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000341a2: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034172: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000340c2: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034122: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034042: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340f2: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034092: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034262: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034072: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034152: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034022: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00145d4e: add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; ret; 
0x0011f902: add byte ptr [eax], al; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00130819: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003cf07: add byte ptr [eax], al; mov eax, ecx; ret; 
0x000bdabe: add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b837e: add byte ptr [eax], al; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x001a384e: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0005a956: add byte ptr [eax], al; mov eax, edx; call 0x5a700; mov eax, 1; add esp, 0xc; ret; 
0x00077c26: add byte ptr [eax], al; mov eax, edx; call 0x77990; mov eax, 1; add esp, 0xc; ret; 
0x00024d6e: add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x0017be1d: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0014d4dc: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x000b1bee: add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0018d6af: add byte ptr [eax], al; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00084f0b: add byte ptr [eax], al; mov eax, edx; ret; 
0x00060d67: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0017b26c: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x0011224d: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0011e8c6: add byte ptr [eax], al; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000e7109: add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012b25d: add byte ptr [eax], al; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012de77: add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012e103: add byte ptr [eax], al; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0011de8e: add byte ptr [eax], al; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011b8bc: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9b2: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00126d55: add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00091a70: add byte ptr [eax], al; mov ebx, 2; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093037: add byte ptr [eax], al; mov ebx, 2; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00090ef4: add byte ptr [eax], al; mov ebx, 2; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00109bba: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00109f74: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0018b8b9: add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012e5fb: add byte ptr [eax], al; mov ebx, 3; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00129c03: add byte ptr [eax], al; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0006f12d: add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0012f41e: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0012f3ad: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0009ddee: add byte ptr [eax], al; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0011b835: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0012aa7d: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012a820: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0011dc26: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011a834: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012b798: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000dbf4e: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0013b9f3: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0010aff6: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0012954d: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009075b: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00090059: add byte ptr [eax], al; mov ebx, dword ptr [esp + 4]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009cf6f: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f8303: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0003c41f: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011bdaf: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000903d1: add byte ptr [eax], al; mov ebx, dword ptr [esp]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000fbe18: add byte ptr [eax], al; mov ebx, dword ptr [esp]; movzx eax, al; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x00121aa6: add byte ptr [eax], al; mov ebx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00093689: add byte ptr [eax], al; mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x000910ef: add byte ptr [eax], al; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009443a: add byte ptr [eax], al; mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003c3f4: add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011d4c0: add byte ptr [eax], al; mov ebx, edx; ret; 
0x0009db9a: add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011dc33: add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011e8bc: add byte ptr [eax], al; mov ecx, 0x5401; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x0011eb42: add byte ptr [eax], al; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00129c08: add byte ptr [eax], al; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00096322: add byte ptr [eax], al; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008d5a7: add byte ptr [eax], al; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008ca92: add byte ptr [eax], al; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008dd62: add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0017ff74: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000910e5: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x000963bf: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008dd91: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00093e7c: add byte ptr [eax], al; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000e7130: add byte ptr [eax], al; mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00109f18: add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000c04ea: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00095dd3: add byte ptr [eax], al; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x001854b9: add byte ptr [eax], al; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000958c8: add byte ptr [eax], al; mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003c481: add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0009558f: add byte ptr [eax], al; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007a9cd: add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00109f80: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0012f4dc: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00031d91: add byte ptr [eax], al; mov ecx, dword ptr [ebx + edi*4 - 0x86994]; add ecx, ebx; jmp ecx; 
0x0008ee36: add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000f8050: add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x6fa20]; add ecx, edi; jmp ecx; 
0x0009b4b3: add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x000c09cb: add byte ptr [eax], al; mov ecx, dword ptr [edx + eax*4 - 0x70c9c]; add ecx, edx; jmp ecx; 
0x0012a70f: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012e04b: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0018b829: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e539: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000e5e57: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x001487e9: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x1c]; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x0006f6eb: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0011c5d9: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x000e4f64: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e4f05: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0012ad9f: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001114ce: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x94]; mov edx, dword ptr [esp + 0x98]; call dword ptr gs:[0x10]; 
0x0011b55d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008d3f3: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x000603cf: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000920e7: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091a75: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x000391b2: add byte ptr [eax], al; mov ecx, dword ptr [esp + 4]; movzx eax, al; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x000d92af: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009303c: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0012d17f: add byte ptr [eax], al; mov ecx, dword ptr [esp]; mov edx, dword ptr [esp + 4]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000e5e49: add byte ptr [eax], al; mov ecx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x000e4a27: add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0010aeb4: add byte ptr [eax], al; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0003cf76: add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009d8ab: add byte ptr [eax], al; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d625: add byte ptr [eax], al; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0010afa2: add byte ptr [eax], al; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0009bc2e: add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0009defe: add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d105: add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0009d2d7: add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00111bdb: add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00111a31: add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011c5e2: add byte ptr [eax], al; mov edi, 8; call dword ptr gs:[0x10]; 
0x000793f7: add byte ptr [eax], al; mov edi, dword ptr [ebp + edx*4 - 0x71854]; add edi, ebp; jmp edi; 
0x00065818: add byte ptr [eax], al; mov edi, dword ptr [ebp - 0x590]; movzx edx, dl; mov ecx, dword ptr [edi + edx*4 - 0x72d38]; add ecx, edi; jmp ecx; 
0x0012ebbd: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ee5cb: add byte ptr [eax], al; mov edi, dword ptr gs:[ebx]; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000f56cb: add byte ptr [eax], al; mov edi, dword ptr gs:[ebx]; sub esp, 0xc; push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x00063e90: add byte ptr [eax], al; mov edi, eax; jmp edx; 
0x0011eb79: add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000635bd: add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x0006348d: add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x00063445: add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x00064055: add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x000f7e31: add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x000f7e49: add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x0008f31f: add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00096590: add byte ptr [eax], al; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097788: add byte ptr [eax], al; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009498b: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096972: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fb6f: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008db5f: add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0017ff79: add byte ptr [eax], al; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084f06: add byte ptr [eax], al; mov edx, 1; mov eax, edx; ret; 
0x000910ea: add byte ptr [eax], al; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0011eb74: add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014d4f6: add byte ptr [eax], al; mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008d669: add byte ptr [eax], al; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008fe46: add byte ptr [eax], al; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095b45: add byte ptr [eax], al; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f5b6: add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fa6b: add byte ptr [eax], al; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008f8dc: add byte ptr [eax], al; mov edx, 1; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096948: add byte ptr [eax], al; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d5ac: add byte ptr [eax], al; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008d61b: add byte ptr [eax], al; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0012f560: add byte ptr [eax], al; mov edx, 8; call dword ptr gs:[0x10]; 
0x00173143: add byte ptr [eax], al; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00107312: add byte ptr [eax], al; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00094a6e: add byte ptr [eax], al; mov edx, dword ptr [ebp + eax*4 - 0x714fc]; lea ebx, [edi + 0xc]; add edx, ebp; jmp edx; 
0x00176506: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x176518; add esp, 0xc; ret; 
0x00176646: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x176658; add esp, 0xc; ret; 
0x0003fca6: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000f8350: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011cf50: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001251f7: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0010b188: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012df5f: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001114d5: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; call dword ptr gs:[0x10]; 
0x00111795: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0011173a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; call dword ptr gs:[0x10]; 
0x000e4966: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00175f6e: add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00120e84: add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0003c4ac: add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003c347: add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bc36: add byte ptr [eax], al; mov edx, edi; call dword ptr gs:[0x10]; 
0x000dc053: add byte ptr [eax], al; mov edx, esi; call dword ptr gs:[0x10]; 
0x00090ef9: add byte ptr [eax], al; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x000920f2: add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003c29b: add byte ptr [eax], al; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0002326c: add byte ptr [eax], al; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0003cf71: add byte ptr [eax], al; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003c342: add byte ptr [eax], al; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00071a6a: add byte ptr [eax], al; mov esi, dword ptr [ebp - 0x500]; mov ecx, dword ptr [esi + edx*4 - 0x72558]; add ecx, esi; jmp ecx; 
0x00112431: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0012de7c: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012a789: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0012b709: add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012e108: add byte ptr [eax], al; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00093e81: add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0011eca7: add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000a9756: add byte ptr [eax], al; mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x001a5bbe: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bb06e: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b76ce: add byte ptr [eax], al; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b0ffe: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b100e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b0fee: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b101e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b763e: add byte ptr [eax], al; movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b764e: add byte ptr [eax], al; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b32be: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000aeefe: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000375ca: add byte ptr [eax], al; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77ae0]; add edx, edi; jmp edx; 
0x00037472: add byte ptr [eax], al; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77c30]; add edx, edi; jmp edx; 
0x00037426: add byte ptr [eax], al; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77c84]; add esi, edi; jmp esi; 
0x000373d2: add byte ptr [eax], al; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77cd8]; add esi, edi; jmp esi; 
0x00036dbb: add byte ptr [eax], al; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x0003678b: add byte ptr [eax], al; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77ed0]; add esi, edi; jmp esi; 
0x0008967e: add byte ptr [eax], al; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001998d7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0019810e: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x001998f7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x00199917: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x00199937: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x00199957: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x001998b7: add byte ptr [eax], al; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00041ff4: add byte ptr [eax], al; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x000420c5: add byte ptr [eax], al; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00070532: add byte ptr [eax], al; movzx edx, byte ptr [edx + esi - 0x20]; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0003c444: add byte ptr [eax], al; neg eax; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0012a894: add byte ptr [eax], al; neg eax; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x000f830e: add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x0008bcdd: add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000d6f9c: add byte ptr [eax], al; nop; add eax, 2; ret; 
0x000a60cd: add byte ptr [eax], al; nop; add esp, 4; pop ebx; pop esi; ret; 
0x0012094c: add byte ptr [eax], al; nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000bee6d: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000bf5bc: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bf11c: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000e4a1c: add byte ptr [eax], al; nop; lea ebp, [esp + 4]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000d1bdd: add byte ptr [eax], al; nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000b348d: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000af0ac: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000b349d: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000af0bd: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000b0fad: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000704ec: add byte ptr [eax], al; nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x0008e99d: add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x0008511c: add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00095dcd: add byte ptr [eax], al; nop; mov eax, 0xf0; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008274d: add byte ptr [eax], al; nop; mov eax, 0xffffffff; ret; 
0x0016addc: add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x000d6efc: add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000d6f0c: add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d6f1c: add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d6f2c: add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x0013b4cd: add byte ptr [eax], al; nop; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d6f3c: add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d6f4c: add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x00175c9c: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0016adec: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0018ba2c: add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00148a2c: add byte ptr [eax], al; nop; mov ecx, dword ptr [esp + 0x1c]; mov edx, dword ptr [ecx - 0x6e5c4]; add edx, ecx; jmp edx; 
0x000b35ec: add byte ptr [eax], al; nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b0fdc: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b0fcd: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001a5b8d: add byte ptr [eax], al; nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0013d3ec: add byte ptr [eax], al; nop; movzx eax, dl; ret; 
0x001a0c6c: add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x0008b13c: add byte ptr [eax], al; nop; ret; 
0x000ee1ec: add byte ptr [eax], al; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f52ec: add byte ptr [eax], al; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x0016858d: add byte ptr [eax], al; nop; xor eax, eax; add esp, 0xc; ret; 
0x0014582d: add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0008b11c: add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000a956d: add byte ptr [eax], al; nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000e492a: add byte ptr [eax], al; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0009330d: add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0013d3df: add byte ptr [eax], al; or byte ptr [edi], 0x44; ret 0x2ec3; 
0x0013d0fd: add byte ptr [eax], al; or byte ptr [edi], 0x45; ret 0x8dc3; 
0x00111bc2: add byte ptr [eax], al; or byte ptr [edi], 0xa3; ret 0xd873; 
0x000420df: add byte ptr [eax], al; or byte ptr [edi], 0xbd; leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x000c0659: add byte ptr [eax], al; or cl, cl; jne 0xc0661; xor eax, eax; ret; 
0x0011223c: add byte ptr [eax], al; or dh, 8; mov ebp, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00089ece: add byte ptr [eax], al; or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x89ed0; ret; 
0x0008e98e: add byte ptr [eax], al; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0005f72a: add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0008fb0d: add byte ptr [eax], al; or edx, 2; call dword ptr gs:[0x10]; 
0x000bed96: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bf06e: add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0011d960: add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000e7b87: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003fb24: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; xor eax, eax; ret; 
0x0008e1e1: add byte ptr [eax], al; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x00077a7e: add byte ptr [eax], al; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001a0fae: add byte ptr [eax], al; pop ebx; mov eax, 1; jg 0x1a0fc0; neg eax; ret; 
0x001760fd: add byte ptr [eax], al; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0005b0c0: add byte ptr [eax], al; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x001849be: add byte ptr [eax], al; pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0003c60f: add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x0011c91c: add byte ptr [eax], al; pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x000d6d45: add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x000ffb53: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x0014d4fb: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x00137366: add byte ptr [eax], al; pop ebx; pop esi; pop ebp; ret; 
0x0002be91: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00023461: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003d559: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00024ba2: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003c811: add byte ptr [eax], al; pop ebx; ret; 
0x000421dc: add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0011f41a: add byte ptr [eax], al; pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x0010803e: add byte ptr [eax], al; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0019f2ae: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0004010f: add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0011bf12: add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x0002506e: add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x00151ac5: add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x000b0a80: add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b6d3e: add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d6b53: add byte ptr [eax], al; pop edi; pop esi; ret; 
0x001a4990: add byte ptr [eax], al; pop edi; ret; 
0x00168908: add byte ptr [eax], al; pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00052f9b: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000bb27e: add byte ptr [eax], al; pop esi; ret; 
0x000bfb50: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x001a540e: add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x00184e80: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x0017403b: add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0008813a: add byte ptr [eax], al; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00081a4f: add byte ptr [eax], al; push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00087c36: add byte ptr [eax], al; push 0; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x0016a87b: add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00174866: add byte ptr [eax], al; push 0x2260; push dword ptr [esp + 0x1c]; call 0x1745a0; add esp, 0x1c; ret; 
0x00087f72: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00082022: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00081dd9: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0007797b: add byte ptr [eax], al; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x0005a1ec: add byte ptr [eax], al; push dword ptr [eax]; call 0x653a0; add esp, 0x1c; ret; 
0x0007ed4b: add byte ptr [eax], al; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x0007edac: add byte ptr [eax], al; push dword ptr [eax]; call 0x71620; add esp, 0x1c; ret; 
0x00137176: add byte ptr [eax], al; push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x135900; add esp, 0x1c; ret; 
0x00170d9a: add byte ptr [eax], al; push dword ptr [ebp + 0x50]; push edi; call dword ptr [eax + 0x14]; 
0x0016d80a: add byte ptr [eax], al; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00081b9f: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x001689b6: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x001112aa: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x11b970; add esp, 0x1c; ret; 
0x0011eb0b: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x1c; ret; 
0x0017486b: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x1745a0; add esp, 0x1c; ret; 
0x0008e676: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x8e5a0; add esp, 0x18; pop ebx; ret; 
0x0008e95a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x8e8a0; add esp, 0x1c; ret; 
0x00097c66: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x97c20; add esp, 0x18; pop ebx; ret; 
0x00138ac4: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x00139b04: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x00083cb6: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7cdd0; add esp, 0x1c; ret; 
0x00173477: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x000d821e: add byte ptr [eax], al; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0016d810: add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0016d82c: add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00159be3: add byte ptr [eax], al; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00087dc8: add byte ptr [eax], al; push dword ptr [esp + 0xbc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x0015d5b2: add byte ptr [eax], al; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x00184d5b: add byte ptr [eax], al; push dword ptr [esp + 0xcc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00087dcf: add byte ptr [eax], al; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x001227c1: add byte ptr [eax], al; push eax; call 0x1228c0; add esp, 0x1c; ret; 
0x0008b2b7: add byte ptr [eax], al; push eax; call 0x8d660; add esp, 0x1c; ret; 
0x0010846f: add byte ptr [eax], al; push eax; call 0x8d660; call dword ptr [esi]; 
0x00097e31: add byte ptr [eax], al; push eax; call 0x8e510; add esp, 0x1c; ret; 
0x00151747: add byte ptr [eax], al; push eax; call edx; 
0x00122791: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x1227e0; add esp, 0x1c; ret; 
0x0002ac49: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002cefe: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002b8c6: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x0016f2e8: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016f2e8: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0015a389: add byte ptr [eax], al; push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0003b0ff: add byte ptr [eax], al; push eax; ret; 
0x00184d62: add byte ptr [eax], al; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00171413: add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0008d66e: add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00090f1d: add byte ptr [eax], al; push edx; call eax; 
0x000280e7: add byte ptr [eax], al; push edx; push eax; call 0x96410; add esp, 0x1c; ret; 
0x00170db3: add byte ptr [eax], al; push edx; push edi; call dword ptr [eax + 4]; 
0x0016a89d: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x10]; 
0x0007f80c: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x00137334: add byte ptr [eax], al; push esi; call eax; 
0x00169cc0: add byte ptr [eax], al; push esi; mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0010abd3: add byte ptr [eax], al; pushal; add cl, al; call 0xfe0e4df; dec edi; ret 0xdce9; 
0x00024ad2: add byte ptr [eax], al; ret; 
0x0013d0f7: add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x0013d3d6: add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x2ec3; 
0x00024b99: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; pop ebx; pop esi; ret; 
0x00024ac9: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x0015173d: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x0016e325: add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000f7f0d: add byte ptr [eax], al; setne al; ret; 
0x00181f40: add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0008ccf2: add byte ptr [eax], al; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0017df78: add byte ptr [eax], al; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00109773: add byte ptr [eax], al; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0012014c: add byte ptr [eax], al; sub eax, dword ptr gs:[0x14]; jne 0x12015f; add esp, 0x418; pop ebx; ret; 
0x000c05a9: add byte ptr [eax], al; sub eax, edx; ret; 
0x0008a2a6: add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0007fe86: add byte ptr [eax], al; sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0005a163: add byte ptr [eax], al; sub ecx, 1; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0003b608: add byte ptr [eax], al; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x001a4869: add byte ptr [eax], al; sub edi, 0x10; jb 0x1a4930; lea eax, [eax + 0xf]; pop edi; ret; 
0x001a48de: add byte ptr [eax], al; sub edi, 0xa; jb 0x1a4930; lea eax, [eax + 9]; pop edi; ret; 
0x001a48ee: add byte ptr [eax], al; sub edi, 0xb; jb 0x1a4930; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a48fe: add byte ptr [eax], al; sub edi, 0xd; jb 0x1a4930; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a490e: add byte ptr [eax], al; sub edi, 0xe; jb 0x1a4930; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a491e: add byte ptr [eax], al; sub edi, 0xf; jb 0x1a4930; lea eax, [eax + 0xe]; pop edi; ret; 
0x001a487e: add byte ptr [eax], al; sub edi, 2; jb 0x1a4930; lea eax, [eax + 1]; pop edi; ret; 
0x001a47d6: add byte ptr [eax], al; sub edi, 4; jb 0x1a4930; lea eax, [eax + 3]; pop edi; ret; 
0x001a48be: add byte ptr [eax], al; sub edi, 7; jb 0x1a4930; lea eax, [eax + 6]; pop edi; ret; 
0x001a4809: add byte ptr [eax], al; sub edi, 8; jb 0x1a4930; lea eax, [eax + 7]; pop edi; ret; 
0x001a48ce: add byte ptr [eax], al; sub edi, 9; jb 0x1a4930; lea eax, [eax + 8]; pop edi; ret; 
0x001a3839: add byte ptr [eax], al; sub edx, 0x10; jb 0x1a3910; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a38be: add byte ptr [eax], al; sub edx, 0xa; jb 0x1a3910; lea eax, [edi + 9]; pop edi; ret; 
0x001a38ce: add byte ptr [eax], al; sub edx, 0xb; jb 0x1a3910; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a3810: add byte ptr [eax], al; sub edx, 0xc; jb 0x1a3910; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a38de: add byte ptr [eax], al; sub edx, 0xd; jb 0x1a3910; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a38ee: add byte ptr [eax], al; sub edx, 0xe; jb 0x1a3910; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a38fe: add byte ptr [eax], al; sub edx, 0xf; jb 0x1a3910; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a37a5: add byte ptr [eax], al; sub edx, 4; jb 0x1a3910; lea eax, [edi + 3]; pop edi; ret; 
0x001a389e: add byte ptr [eax], al; sub edx, 7; jb 0x1a3910; lea eax, [edi + 6]; pop edi; ret; 
0x001a37d6: add byte ptr [eax], al; sub edx, 8; jb 0x1a3910; lea eax, [edi + 7]; pop edi; ret; 
0x001a38ae: add byte ptr [eax], al; sub edx, 9; jb 0x1a3910; lea eax, [edi + 8]; pop edi; ret; 
0x00121ad8: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x121aff; add esp, 0x1018; pop ebx; ret; 
0x001458b9: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x145904; add esp, 0x118; pop ebx; ret; 
0x00145959: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x1459c0; add esp, 0x118; pop ebx; ret; 
0x00145a19: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x145a6b; add esp, 0x118; pop ebx; ret; 
0x00145ab9: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x145aed; add esp, 0x11c; ret; 
0x0003c802: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3c81f; add esp, 0x98; pop ebx; ret; 
0x0003cd5f: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3cd72; add esp, 0x128; pop ebx; ret; 
0x0003d2ea: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d307; add esp, 0x98; pop ebx; ret; 
0x0003d35a: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d377; add esp, 0x98; pop ebx; ret; 
0x0003d3d3: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d3e5; add esp, 0x9c; ret; 
0x0006067f: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x60692; add esp, 0x1018; pop ebx; ret; 
0x000e58a1: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe58b4; add esp, 0xe8; pop ebx; ret; 
0x000e5913: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe5926; add esp, 0xe8; pop ebx; ret; 
0x000e59b7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe59ca; add esp, 0xe8; pop ebx; ret; 
0x0007de6e: add byte ptr [eax], al; sub esp, 0x18; push ecx; call 0x7f9f0; add esp, 0x1c; ret; 
0x0009e39e: add byte ptr [eax], al; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x00170df4: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x000e6bbe: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x001688e8: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00169536: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0008e176: add byte ptr [eax], al; sub esp, 0xc; push 0; call 0x8d730; add esp, 0x1c; ret; 
0x00171ade: add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x0016aa6c: add byte ptr [eax], al; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00086888: add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0016df3e: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00089cf9: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0007a473: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007d19b: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00184774: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x000a47e6: add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x0008ac37: add byte ptr [eax], al; sub esp, 4; push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0007e5ae: add byte ptr [eax], al; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007d0a4: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00132ae0: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x1c]; push 0; push 0x2000004; call eax; 
0x0008869a: add byte ptr [eax], al; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x000861ca: add byte ptr [eax], al; sub esp, 4; push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007ce6e: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007ae8f: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007c7ac: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00086313: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008190a: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00079d8d: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008661d: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00087ab7: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00184d12: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0016889e: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0017037b: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0016d823: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0016ed59: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016ae8e: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0017353d: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0016a237: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00080fe0: add byte ptr [eax], al; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0016a8e7: add byte ptr [eax], al; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00079f06: add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x001688cf: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00173586: add byte ptr [eax], al; sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0003eb1e: add byte ptr [eax], al; sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x000a472d: add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x001a3130: add byte ptr [eax], al; test ah, 0x20; jne 0x1a31d0; lea eax, [edi - 4]; pop edi; ret; 
0x001a3cb0: add byte ptr [eax], al; test ah, 0x20; jne 0x1a3d50; lea eax, [ecx + 0xc]; ret; 
0x001a2c74: add byte ptr [eax], al; test ah, 0x40; jne 0x1a2d60; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a3630: add byte ptr [eax], al; test ah, 0x40; jne 0x1a3770; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a4300: add byte ptr [eax], al; test ah, 0x40; jne 0x1a43c0; lea eax, [edx + 0xf]; ret; 
0x001a3107: add byte ptr [eax], al; test ah, 2; jne 0x1a31a0; lea eax, [edi - 8]; pop edi; ret; 
0x001a3c87: add byte ptr [eax], al; test ah, 2; jne 0x1a3d20; lea eax, [ecx + 8]; ret; 
0x001a3607: add byte ptr [eax], al; test ah, 4; jne 0x1a3740; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a42d7: add byte ptr [eax], al; test ah, 4; jne 0x1a4390; lea eax, [edx + 0xb]; ret; 
0x001a30de: add byte ptr [eax], al; test al, 0x20; jne 0x1a3170; lea eax, [edi - 0xc]; pop edi; ret; 
0x001a3c5e: add byte ptr [eax], al; test al, 0x20; jne 0x1a3cf0; lea eax, [ecx + 4]; ret; 
0x001a2c22: add byte ptr [eax], al; test al, 0x40; jne 0x1a2cf0; lea eax, [edi + 7]; pop edi; ret; 
0x001a35de: add byte ptr [eax], al; test al, 0x40; jne 0x1a3710; lea eax, [edi + 7]; pop edi; ret; 
0x001a42ae: add byte ptr [eax], al; test al, 0x40; jne 0x1a4360; lea eax, [edx + 7]; ret; 
0x001a53f3: add byte ptr [eax], al; test al, 0xf0; jne 0x1a54b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a30b9: add byte ptr [eax], al; test al, 2; jne 0x1a3140; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a3ad9: add byte ptr [eax], al; test al, 2; jne 0x1a3cc0; mov eax, ecx; ret; 
0x001a35bb: add byte ptr [eax], al; test al, 4; jne 0x1a36e0; lea eax, [edi + 3]; pop edi; ret; 
0x001a428b: add byte ptr [eax], al; test al, 4; jne 0x1a4330; lea eax, [edx + 3]; ret; 
0x001829ee: add byte ptr [eax], al; test al, al; jne 0x182a16; mov eax, 4; add esp, 0xc; ret; 
0x001a4707: add byte ptr [eax], al; test dh, 4; jne 0x1a4aad; add eax, 0xb; pop edi; ret; 
0x001a2af2: add byte ptr [eax], al; test dl, 0x40; jne 0x1a2d70; lea eax, [edi + 7]; pop edi; ret; 
0x001a46e0: add byte ptr [eax], al; test dl, 0x40; jne 0x1a4a99; add eax, 7; pop edi; ret; 
0x001a5160: add byte ptr [eax], al; test dl, 0xf; jne 0x1a52a0; lea eax, [ecx + 4]; ret; 
0x001a2b38: add byte ptr [eax], al; test dl, 4; jne 0x1a2d70; lea eax, [edi + 3]; pop edi; ret; 
0x001a46ba: add byte ptr [eax], al; test dl, 4; jne 0x1a4a85; add eax, 3; pop edi; ret; 
0x00121b41: add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0014ba24: add byte ptr [eax], al; test eax, eax; je 0x14ba30; add esp, 0x18; pop ebx; ret; 
0x00168e33: add byte ptr [eax], al; test eax, eax; je 0x168e40; add esp, 8; pop ebx; ret; 
0x0017fab9: add byte ptr [eax], al; test eax, eax; je 0x17fad0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0007ac02: add byte ptr [eax], al; test eax, eax; je 0x7ac18; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x00108c3f: add byte ptr [eax], al; test eax, eax; jne 0x108c70; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00108cd2: add byte ptr [eax], al; test eax, eax; jne 0x108d08; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00108db7: add byte ptr [eax], al; test eax, eax; jne 0x108df0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00108e67: add byte ptr [eax], al; test eax, eax; jne 0x108ea0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00108f2f: add byte ptr [eax], al; test eax, eax; jne 0x108f60; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00110fb4: add byte ptr [eax], al; test eax, eax; jne 0x110fe0; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00120564: add byte ptr [eax], al; test eax, eax; jne 0x120590; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00120a94: add byte ptr [eax], al; test eax, eax; jne 0x120ac0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00126fc2: add byte ptr [eax], al; test eax, eax; jne 0x126ff8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00127062: add byte ptr [eax], al; test eax, eax; jne 0x127098; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0014d472: add byte ptr [eax], al; test eax, eax; jne 0x14d487; ret; 
0x0009b532: add byte ptr [eax], al; test eax, eax; jne 0x9b547; ret; 
0x000f8263: add byte ptr [eax], al; test eax, eax; jne 0xf8288; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0016c58e: add byte ptr [eax], al; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0008416b: add byte ptr [eax], al; test ecx, ecx; je 0x84174; mov byte ptr [edx], 0; pop ebx; ret; 
0x0009e833: add byte ptr [eax], al; test ecx, ecx; jne 0x9e840; add esp, 8; pop ebx; ret; 
0x000f8222: add byte ptr [eax], al; test ecx, ecx; js 0xf8230; ret; 
0x00024b3e: add byte ptr [eax], al; test edx, edx; je 0x24b45; ret; 
0x00042827: add byte ptr [eax], al; test edx, edx; je 0x42833; bsr eax, edx; xor eax, 0x1f; ret; 
0x00042847: add byte ptr [eax], al; test edx, edx; je 0x42853; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008e249: add byte ptr [eax], al; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0003ebe7: add byte ptr [eax], al; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3ecb0; call eax; 
0x0008b298: add byte ptr [eax], al; xchg dword ptr [edx + 0x1a74], eax; cmp eax, 1; jg 0x8b2b0; ret; 
0x000961ab: add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x0008ed1c: add byte ptr [eax], al; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008f589: add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00149a66: add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x000e6183: add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00095eb1: add byte ptr [eax], al; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000342fe: add byte ptr [eax], al; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x000a36bb: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0012ddce: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x000421e6: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x001a00ee: add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000d6b32: add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x000bee0e: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000a376a: add byte ptr [eax], al; xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x0008e740: add byte ptr [eax], al; xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003cb1e: add byte ptr [eax], al; xor eax, eax; ret; 
0x00041139: add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x00091f2c: add byte ptr [eax], al; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00121ab4: add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000910af: add byte ptr [eax], al; xor ebx, ebx; lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00024d64: add byte ptr [eax], al; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0011ee80: add byte ptr [eax], al; xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00098637: add byte ptr [eax], al; xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000934c7: add byte ptr [eax], al; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00042767: add byte ptr [eax], al; xor edx, 0xffffffff; je 0x42774; bsr eax, edx; xor eax, 0x1f; ret; 
0x00042787: add byte ptr [eax], al; xor edx, 0xffffffff; je 0x42794; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008d3fc: add byte ptr [eax], al; xor edx, edx; call dword ptr gs:[0x10]; 
0x00092d44: add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00109bbf: add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00109f79: add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00092ce5: add byte ptr [eax], al; xor edx, edx; pop ebx; pop esi; mov eax, edx; ret; 
0x000420a3: add byte ptr [eax], al; xor edx, edx; pop ebx; ret; 
0x0003fb79: add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00091153: add byte ptr [eax], al; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003d72a: add byte ptr [eax], al; xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x00095b4a: add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d5b1: add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f846: add byte ptr [eax], al; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000958cd: add byte ptr [eax], al; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008ca97: add byte ptr [eax], al; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008fa70: add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008f8e1: add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008db58: add byte ptr [eax], al; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000963c4: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ed8b: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008dd96: add byte ptr [eax], al; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001854be: add byte ptr [eax], al; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008f582: add byte ptr [eax], al; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012e153: add byte ptr [eax], al; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012ecde: add byte ptr [eax], al; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0008d620: add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00090062: add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00193e9f: add byte ptr [eax], bh; ret 0x840f; 
0x00156b51: add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x0019f4c3: add byte ptr [eax], bh; std; mov eax, 0; jne 0x19fd86; pop ebx; ret; 
0x001a2599: add byte ptr [eax], bh; std; mov eax, 0; jne 0x1a2670; pop ebx; ret; 
0x0003409c: add byte ptr [eax], cl; add byte ptr [eax], al; ret; 
0x000c065a: add byte ptr [eax], cl; leave; jne 0xc0661; xor eax, eax; ret; 
0x000e8126: add byte ptr [eax], dl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000341dc: add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x0004684c: add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x001ac9c9: add byte ptr [eax], dl; add dh, dh; ret 0xf07; 
0x00092333: add byte ptr [eax], dl; jne 0x92340; xor eax, eax; add esp, 0xc; ret; 
0x00143a31: add byte ptr [ebp + 0x10], dh; add esp, 0x18; pop ebx; ret; 
0x0016bcf4: add byte ptr [ebp + 0x10], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0019fd5c: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x0003d552: add byte ptr [ebp + 0x12], dh; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x00112782: add byte ptr [ebp + 0x12], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011cce2: add byte ptr [ebp + 0x12], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x001125a2: add byte ptr [ebp + 0x12], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0003c80a: add byte ptr [ebp + 0x12], dh; add esp, 0x98; pop ebx; ret; 
0x000d1c1f: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x92344]; and ch, 2; lea edx, [edx - 0x15fe54]; cmove eax, edx; ret; 
0x000a64ef: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x95e44]; and ch, 2; lea edx, [edx - 0x177374]; cmove eax, edx; ret; 
0x000a9c4f: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9ad24]; and ch, 2; lea edx, [edx - 0x1776d4]; cmove eax, edx; ret; 
0x000a6fbf: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9d234]; and ch, 2; lea edx, [edx - 0x1777d4]; cmove eax, edx; ret; 
0x000a6f7f: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9d264]; and ch, 2; lea edx, [edx - 0x177754]; cmove eax, edx; ret; 
0x000a9ccf: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9ec54]; and ch, 2; lea edx, [edx - 0x189834]; cmove eax, edx; ret; 
0x000a7caf: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0xa00c4]; and ch, 2; lea edx, [edx - 0x176944]; cmove eax, edx; ret; 
0x0017d343: add byte ptr [ebp + 0x13], dh; add esp, 0x18; pop ebx; ret; 
0x00171c21: add byte ptr [ebp + 0x13], dh; add esp, 0x1c; ret; 
0x0009871b: add byte ptr [ebp + 0x13], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d7b79: add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x00084081: add byte ptr [ebp + 0x13], dh; add esp, 0x824; pop ebx; pop esi; ret; 
0x00085b81: add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x0017d2c9: add byte ptr [ebp + 0x15], dh; add esp, 0x18; pop ebx; ret; 
0x0007eea0: add byte ptr [ebp + 0x15], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001127ee: add byte ptr [ebp + 0x16], dh; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00084333: add byte ptr [ebp + 0x16], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x000d94f6: add byte ptr [ebp + 0x17], dh; add esp, 0x38; pop ebx; ret; 
0x0011ca9c: add byte ptr [ebp + 0x17], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0005e814: add byte ptr [ebp + 0x17], dh; add esp, 0x78; pop ebx; ret; 
0x0011f157: add byte ptr [ebp + 0x18], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x000edbeb: add byte ptr [ebp + 0x18], dh; add esp, 0x78; pop ebx; ret; 
0x0009e494: add byte ptr [ebp + 0x18], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x000b658c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0008f227: add byte ptr [ebp + 0x19], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00059dc7: add byte ptr [ebp + 0x19], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x00084268: add byte ptr [ebp + 0x19], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00171c9f: add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x000d6ccc: add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x0012cb94: add byte ptr [ebp + 0x1b], dh; add esp, 0x18; pop ebx; ret; 
0x0012eaf4: add byte ptr [ebp + 0x1b], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0011d864: add byte ptr [ebp + 0x1b], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00121ae0: add byte ptr [ebp + 0x1c], dh; add esp, 0x1018; pop ebx; ret; 
0x0012a61b: add byte ptr [ebp + 0x1c], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00175464: add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x0011b6ff: add byte ptr [ebp + 0x1c], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x001762c9: add byte ptr [ebp + 0x1d], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000dbda9: add byte ptr [ebp + 0x1e], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011f2d1: add byte ptr [ebp + 0x20], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012cecf: add byte ptr [ebp + 0x20], dh; add esp, 0x18; pop ebx; ret; 
0x0012ca6f: add byte ptr [ebp + 0x20], dh; add esp, 0x28; pop ebx; ret; 
0x0011f05f: add byte ptr [ebp + 0x20], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0018b6a3: add byte ptr [ebp + 0x21], dh; add esp, 0x18; pop ebx; ret; 
0x0012c9d6: add byte ptr [ebp + 0x21], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009a423: add byte ptr [ebp + 0x21], dh; add esp, 0x2c; ret; 
0x0011a790: add byte ptr [ebp + 0x21], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00111e0b: add byte ptr [ebp + 0x21], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00090cc8: add byte ptr [ebp + 0x22096], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x00090dc2: add byte ptr [ebp + 0x22], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0012cb0c: add byte ptr [ebp + 0x23], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000779c5: add byte ptr [ebp + 0x23], dh; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x00132d37: add byte ptr [ebp + 0x244c89c0], al; or al, 0xf; xchg ebp, eax; ret 0x44c7; 
0x0012c92b: add byte ptr [ebp + 0x24], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001726ac: add byte ptr [ebp + 0x24], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00135959: add byte ptr [ebp + 0x24], dh; pop ebx; pop esi; pop edi; ret; 
0x0009a8cf: add byte ptr [ebp + 0x25], dh; add esp, 0x18; pop ebx; ret; 
0x0013b4bb: add byte ptr [ebp + 0x25], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009a68f: add byte ptr [ebp + 0x25], dh; add esp, 0x2c; ret; 
0x001a4a78: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x000a44b8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x001685a8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 1; ret; 
0x00176318: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008d088: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; ret; 
0x0008b168: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x00061243: add byte ptr [ebp + 0x290578c9], al; fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x00145ac1: add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x0011eea6: add byte ptr [ebp + 0x29], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009fcb3: add byte ptr [ebp + 0x2a], dh; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00121ad9: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x121aff; add esp, 0x1018; pop ebx; ret; 
0x001458ba: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x145904; add esp, 0x118; pop ebx; ret; 
0x0014595a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x1459c0; add esp, 0x118; pop ebx; ret; 
0x00145a1a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x145a6b; add esp, 0x118; pop ebx; ret; 
0x00145aba: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x145aed; add esp, 0x11c; ret; 
0x0003c803: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3c81f; add esp, 0x98; pop ebx; ret; 
0x0003cd60: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3cd72; add esp, 0x128; pop ebx; ret; 
0x0003d2eb: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d307; add esp, 0x98; pop ebx; ret; 
0x0003d35b: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d377; add esp, 0x98; pop ebx; ret; 
0x0003d3d4: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d3e5; add esp, 0x9c; ret; 
0x00060680: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x60692; add esp, 0x1018; pop ebx; ret; 
0x000e58a2: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe58b4; add esp, 0xe8; pop ebx; ret; 
0x000e5914: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe5926; add esp, 0xe8; pop ebx; ret; 
0x000e59b8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe59ca; add esp, 0xe8; pop ebx; ret; 
0x0012014d: add byte ptr [ebp + 0x2b], ah; add eax, 0x14; jne 0x12015f; add esp, 0x418; pop ebx; ret; 
0x001202b8: add byte ptr [ebp + 0x2b], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017b796: add byte ptr [ebp + 0x2b], dh; add esp, 0x18; pop ebx; ret; 
0x0017b265: add byte ptr [ebp + 0x2b], dh; add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x001a2642: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0009232b: add byte ptr [ebp + 0x2b], dh; test byte ptr [edx + 0x80], 0x10; jne 0x92340; xor eax, eax; add esp, 0xc; ret; 
0x0002f60b: add byte ptr [ebp + 0x2c], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e60fe: add byte ptr [ebp + 0x2c], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00111ff4: add byte ptr [ebp + 0x2d], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000984df: add byte ptr [ebp + 0x2d], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0017f65d: add byte ptr [ebp + 0x2e], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012aa6f: add byte ptr [ebp + 0x2e], dh; mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001754ec: add byte ptr [ebp + 0x30], dh; add esp, 0x18; pop ebx; ret; 
0x0002554c: add byte ptr [ebp + 0x30], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0016b322: add byte ptr [ebp + 0x31], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001737d0: add byte ptr [ebp + 0x31], dh; add esp, 0x1c; ret; 
0x00099688: add byte ptr [ebp + 0x31], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001246e5: add byte ptr [ebp + 0x32], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e48e5: add byte ptr [ebp + 0x32], dh; add esp, 0x28; pop ebx; ret; 
0x0017b9fd: add byte ptr [ebp + 0x34], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000989dd: add byte ptr [ebp + 0x34], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0004135c: add byte ptr [ebp + 0x35], dh; add esp, 0x18; pop ebx; ret; 
0x001247aa: add byte ptr [ebp + 0x35], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0016b3ad: add byte ptr [ebp + 0x36], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111e8b: add byte ptr [ebp + 0x36], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0016947f: add byte ptr [ebp + 0x37], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017532a: add byte ptr [ebp + 0x37], dh; add esp, 0x18; pop ebx; ret; 
0x0009f3eb: add byte ptr [ebp + 0x37], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e50a9: add byte ptr [ebp + 0x37], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00099729: add byte ptr [ebp + 0x38], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x001442b8: add byte ptr [ebp + 0x396374ed], al; ret; 
0x0011d0b1: add byte ptr [ebp + 0x39], dh; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x0009eb44: add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0003c9af: add byte ptr [ebp + 0x3a], dh; add esp, 0x28; pop ebx; ret; 
0x0009a529: add byte ptr [ebp + 0x3b], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000c1e19: add byte ptr [ebp + 0x3ce892], cl; add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x000d7b1e: add byte ptr [ebp + 0x3d0c90], cl; add byte ptr [ebx - 0x16fbdbbc], cl; ret 0xfffe; 
0x00120fdf: add byte ptr [ebp + 0x3d], dh; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x000d9182: add byte ptr [ebp + 0x3d], dh; add esp, 0x28; pop ebx; ret; 
0x00110b3a: add byte ptr [ebp + 0x3d], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x001a0f70: add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000dc108: add byte ptr [ebp + 0x3e8c8a], cl; add byte ptr [ebp - 0x15f1136e], cl; call dword ptr [ecx + 0x52]; 
0x00110e21: add byte ptr [ebp + 0x3e], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f789b: add byte ptr [ebp + 0x3e], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000e9208: add byte ptr [ebp + 0x3f850fc9], al; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00145fc2: add byte ptr [ebp + 0x3f], dh; add esp, 0x1c; ret; 
0x000cacdb: add byte ptr [ebp + 0x3f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008b1de: add byte ptr [ebp + 0x3f], dh; mov dword ptr [ebx + 0x1a7c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x001458c1: add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x00158bf4: add byte ptr [ebp + 0x41880fd2], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0013d090: add byte ptr [ebp + 0x41], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017de71: add byte ptr [ebp + 0x41], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00175580: add byte ptr [ebp + 0x41], dh; add esp, 0x18; pop ebx; ret; 
0x00108c66: add byte ptr [ebp + 0x41], dh; add esp, 0x28; pop ebx; ret; 
0x00143867: add byte ptr [ebp + 0x41], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0009aa4e: add byte ptr [ebp + 0x42], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0012a90b: add byte ptr [ebp + 0x42], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001808b2: add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x00088dac: add byte ptr [ebp + 0x448b0076], cl; and al, 4; test byte ptr [eax], 0x80; jne 0x88dc0; ret; 
0x0003446c: add byte ptr [ebp + 0x448b0076], cl; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0011b137: add byte ptr [ebp + 0x44], dh; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x001401f6: add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x000fd5dc: add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x0007c19c: add byte ptr [ebp + 0x458b0076], cl; cmp byte ptr [ecx], bh; ret; 
0x0019fd28: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x0008c5ac: add byte ptr [ebp + 0x46], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00108cf9: add byte ptr [ebp + 0x46], dh; add esp, 0x28; pop ebx; ret; 
0x0003c6f5: add byte ptr [ebp + 0x46], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x001a2ccc: add byte ptr [ebp + 0x478d0076], cl; add al, 0x5f; ret; 
0x001a54dc: add byte ptr [ebp + 0x478d0076], cl; cld; pop edi; ret; 
0x001a31ac: add byte ptr [ebp + 0x478d0076], cl; cli; pop edi; ret; 
0x001a316c: add byte ptr [ebp + 0x478d0076], cl; cmc; pop edi; ret; 
0x001a2d3c: add byte ptr [ebp + 0x478d0076], cl; or al, 0x5f; ret; 
0x001a314c: add byte ptr [ebp + 0x478d0076], cl; pop edi; ret; 
0x001a2d5c: add byte ptr [ebp + 0x478d0076], cl; push cs; pop edi; ret; 
0x001a2cec: add byte ptr [ebp + 0x478d0076], cl; push es; pop edi; ret; 
0x001a319c: add byte ptr [ebp + 0x478d0076], cl; stc; pop edi; ret; 
0x001a31cc: add byte ptr [ebp + 0x478d0076], cl; std; pop edi; ret; 
0x001a31bc: add byte ptr [ebp + 0x478d0076], cl; sti; pop edi; ret; 
0x00145a21: add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x00171ead: add byte ptr [ebp + 0x47], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0009a1b5: add byte ptr [ebp + 0x47], dh; add esp, 0x38; pop ebx; ret; 
0x0017f901: add byte ptr [ebp + 0x48], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000d18e1: add byte ptr [ebp + 0x48b0170], cl; xchg dword ptr [ebp - 0x76e68137], eax; pop ebp; aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x0005b7bc: add byte ptr [ebp + 0x4a8b0076], cl; add al, 0x83; ret 0x8304; 
0x0004de64: add byte ptr [ebp + 0x4c850fff], al; adc al, 0; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0008c43e: add byte ptr [ebp + 0x4c], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00125a01: add byte ptr [ebp + 0x4e], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c7d9b: add byte ptr [ebp + 0x4f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e5b8f: add byte ptr [ebp + 0x4f], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000c22e8: add byte ptr [ebp + 0x50442444], cl; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x00171965: add byte ptr [ebp + 0x5128244c], cl; push 4; push eax; call dword ptr [edx + 0x14]; 
0x00108dde: add byte ptr [ebp + 0x51], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0013a8f5: add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0013a9c6: add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x000d9237: add byte ptr [ebp + 0x52], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012a69b: add byte ptr [ebp + 0x52], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0007d437: add byte ptr [ebp + 0x54], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0011dc19: add byte ptr [ebp + 0x56], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007cc60: add byte ptr [ebp + 0x57], dl; push ebx; call dword ptr [esi + 0x24]; 
0x00184d63: add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000e7136: add byte ptr [ebp + 0x58896c58], cl; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000beb6b: add byte ptr [ebp + 0x5b002674], cl; pop esi; pop edi; xor eax, eax; ret; 
0x00030ed3: add byte ptr [ebp + 0x5b002674], cl; ret; 
0x00145961: add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x0011b06c: add byte ptr [ebp + 0x5c], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x000526f4: add byte ptr [ebp + 0x5d], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013a9ea: add byte ptr [ebp + 0x5d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00129c7f: add byte ptr [ebp + 0x5e0974c0], 0x5b; jl 0x24ef0; ret; 
0x000f8737: add byte ptr [ebp + 0x5e5b0141], cl; ret; 
0x0002736f: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0011d961: add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x000ce63b: add byte ptr [ebp + 0x61], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00175bd7: add byte ptr [ebp + 0x62], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00174f93: add byte ptr [ebp + 0x63], dh; add esp, 0x18; pop ebx; ret; 
0x00126d7b: add byte ptr [ebp + 0x63], dh; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x000b0f6b: add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; pop ebx; ret; 
0x00117e7b: add byte ptr [ebp + 0x6a501447], cl; add eax, 0x2c2474ff; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00117c57: add byte ptr [ebp + 0x6a501447], cl; add edi, edi; je 0x117c85; sub al, 0xff; ja 0x117c71; call dword ptr [edi + 0x24]; 
0x00118cc7: add byte ptr [ebp + 0x6a501447], cl; add edi, edi; je 0x118cf5; sub al, 0xff; ja 0x118ce1; call dword ptr [edi + 0x24]; 
0x00119d67: add byte ptr [ebp + 0x6a501447], cl; add edi, edi; je 0x119d95; sub al, 0xff; ja 0x119d81; call dword ptr [edi + 0x24]; 
0x001089c4: add byte ptr [ebp + 0x6d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016ebb8: add byte ptr [ebp + 0x70], dh; add esp, 0x18; pop ebx; ret; 
0x0019f2bb: add byte ptr [ebp + 0x72002674], cl; push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00175ae7: add byte ptr [ebp + 0x72], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a3913: add byte ptr [ebp + 0x79840ff6], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x170f7616], cl; pop ebx; ret; 
0x0013aba7: add byte ptr [ebp + 0x7c], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000d9964: add byte ptr [ebp + 0x7d890875], cl; add al, 0x39; ret 0x45c7; 
0x0017229a: add byte ptr [ebp + 0x7d], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0011f1e4: add byte ptr [ebp + 0x7d], dh; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00097e51: add byte ptr [ebp + 0x8088], cl; add byte ptr [ebx + 0x8080], cl; add byte ptr [eax + eax*2 - 0x75], dh; je 0x97e87; adc al, 0x89; ret 0xe283; 
0x00097f41: add byte ptr [ebp + 0x8088], cl; add byte ptr [ebx + 0x8080], cl; add byte ptr [eax + ecx*2 - 0x75], dh; je 0x97f77; adc al, 0x89; ret 0xe283; 
0x0007f828: add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000a315e: add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0015a383: add byte ptr [ebp + 0x9a42484], cl; add byte ptr [eax], al; push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0003c2a1: add byte ptr [ebp + 0xa02494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00145675: add byte ptr [ebp + 0xa], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x000a5010: add byte ptr [ebp + 0xa], dh; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x001453b2: add byte ptr [ebp + 0xa], dh; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x0009d0c0: add byte ptr [ebp + 0xa], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x00129504: add byte ptr [ebp + 0xa], dh; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x000e5a53: add byte ptr [ebp + 0xa], dh; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x00092cd3: add byte ptr [ebp + 0xa], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x001a2b09: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00146ed9: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx + 0x75ff0cec], al; add byte ptr [ebx - 0x4d17fb3b], al; ret 0xffed; 
0x00172c99: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx + 0x788dff38], al; or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x0009ebd9: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00116df9: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x17a9f314], al; xchg edi, eax; ret; 
0x001828a9: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x0005d999: add byte ptr [ebp + 0xb6], cl; add byte ptr [edi], cl; mov dh, 0x51; or al, 0xf6; ret 0xf01; 
0x0011eae5: add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x0008e24a: add byte ptr [ebp + 0xbad2], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x00042d3c: add byte ptr [ebp + 0xc8d0076], cl; mov dh, 0x83; ret 0x8d01; 
0x00092f91: add byte ptr [ebp + 0xc], dh; xor eax, eax; pop ebx; ret; 
0x0005a007: add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x0011f39f: add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x000a2677: add byte ptr [ebp + 0xe], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ec8de: add byte ptr [ebp + 0xe], dh; add esp, 0x1c; ret; 
0x001720b9: add byte ptr [ebp + 0xe], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001387d4: add byte ptr [ebp + 0xe], dh; add esp, 0x2c; ret; 
0x00034a7f: add byte ptr [ebp + 0xe], dh; mov eax, edx; add esp, 0xc; ret; 
0x00042828: add byte ptr [ebp + 0xf0674d2], al; mov ebp, 0x1ff083c2; ret; 
0x00094dec: add byte ptr [ebp + 0xf0a0054], cl; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00171d4d: add byte ptr [ebp + 0xf], dh; add esp, 0x28; pop ebx; ret; 
0x000c5546: add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x6eb; 
0x000af20c: add byte ptr [ebp + 0xff30076], cl; outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x000254cf: add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000254ac: add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x00040239: add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x00128b14: add byte ptr [ebp + 4], dh; add esp, 0x3c; ret; 
0x00172fa7: add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x0012de37: add byte ptr [ebp + 4], dh; add esp, 0x7c; ret; 
0x0003bdb7: add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x00095388: add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x0009e01d: add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000d7ca9: add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x00060706: add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x0008cda3: add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003d1a7: add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120cd7: add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x001764de: add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0012ce6e: add byte ptr [ebp + 6], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0013cfcc: add byte ptr [ebp + 6], dh; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0011bf7a: add byte ptr [ebp + 7], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00090a4c: add byte ptr [ebp + 7], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000dc2b7: add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x00120dfb: add byte ptr [ebp + 7], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0003d3db: add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x00176581: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0011b1bd: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x001499d5: add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x00060687: add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0003cd67: add byte ptr [ebp + 8], dh; add esp, 0x128; pop ebx; ret; 
0x00120154: add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x00121c03: add byte ptr [ebp + 8], dh; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000e58a9: add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0003a8c8: add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c608: add byte ptr [ebp + 9], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c0f7: add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00054a56: add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000a4032: add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x0003c79c: add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x0004015c: add byte ptr [ebp + 9], dh; add esp, 4; pop ebx; pop esi; ret; 
0x001a0fa4: add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x00130515: add byte ptr [ebp - 0x106e1379], cl; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x000dc10e: add byte ptr [ebp - 0x15f1136e], cl; call dword ptr [ecx + 0x52]; 
0x000a996c: add byte ptr [ebp - 0x17acff8a], cl; mov dword ptr [0x81000d93], eax; ret; 
0x00182b5b: add byte ptr [ebp - 0x17ffd98c], cl; mov eax, 0x81000001; ret 0x42af; 
0x0008545f: add byte ptr [ebp - 0x18], dl; ret; 
0x0014859f: add byte ptr [ebp - 0x18], dl; retf 0xfff8; dec dword ptr [ecx - 0x7693dbbc]; ret; 
0x0009f2fe: add byte ptr [ebp - 0x1988f37a], cl; call dword ptr [eax + 0x57]; 
0x0009a0c1: add byte ptr [ebp - 0x19cd937d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0009a0cd: add byte ptr [ebp - 0x19ced37d], cl; call dword ptr [ecx + 0x50]; 
0x00154ef6: add byte ptr [ebp - 0x23687240], al; cmp al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x001248ec: add byte ptr [ebp - 0x268afea6], cl; mov eax, esi; pop ebx; pop esi; ret; 
0x00062173: add byte ptr [ebp - 0x287bf025], al; or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x00024aee: add byte ptr [ebp - 0x33], dh; ret; 
0x000d59c2: add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x001a521c: add byte ptr [ebp - 0x3776ff8a], cl; ret; 
0x001a52ff: add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0014dbdf: add byte ptr [ebp - 0x387cfeba], cl; adc byte ptr [ecx], bh; ret 0x6674; 
0x0011f675: add byte ptr [ebp - 0x39], ah; add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0009995d: add byte ptr [ebp - 0x39], ah; add byte ptr [ebx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000257b5: add byte ptr [ebp - 0x39], ah; add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00082f35: add byte ptr [ebp - 0x39], ah; add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0018b631: add byte ptr [ebp - 0x39], ah; add byte ptr [edx], ah; add byte ptr [eax], al; add bl, ch; mov byte ptr [0xfad8a0e8], al; call dword ptr [ebx - 0x7d]; 
0x0004911d: add byte ptr [ebp - 0x39], ah; add byte ptr [edx], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7aa3dbbc], cl; ror byte ptr [edi], 0x84; ret 2; 
0x000517c3: add byte ptr [ebp - 0x39], ah; add byte ptr [edx], ah; add byte ptr [eax], al; add cl, ch; ret; 
0x0003cc9f: add byte ptr [ebp - 0x39], ah; add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00114075: add byte ptr [ebp - 0x39], ah; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003cbc5: add byte ptr [ebp - 0x39], ah; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c185: add byte ptr [ebp - 0x39], ah; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x001228fd: add byte ptr [ebp - 0x39], ah; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000a36b5: add byte ptr [ebp - 0x39], ah; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0008416c: add byte ptr [ebp - 0x39fc8b37], al; add al, byte ptr [eax]; pop ebx; ret; 
0x00131d1b: add byte ptr [ebp - 0x39ffd98c], cl; inc edx; jmp dword ptr [eax]; 
0x00025fa4: add byte ptr [ebp - 0x3b7cff8a], cl; add al, 0x5b; pop esi; ret; 
0x00121b42: add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x000a3156: add byte ptr [ebp - 0x3e7bf040], al; add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0016c58f: add byte ptr [ebp - 0x3f6af040], al; add esp, 0x1c; movzx eax, al; ret; 
0x001a2d6c: add byte ptr [ebp - 0x3fceff8a], cl; pop edi; ret; 
0x000eeb0d: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f238d: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001726df: add byte ptr [ebp - 0x46], dl; add byte ptr [edi], ch; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x00098567: add byte ptr [ebp - 0x46dfdbac], cl; pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x00072ac3: add byte ptr [ebp - 0x47bf040], al; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00126e1d: add byte ptr [ebp - 0x47c18a40], al; rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00126d4d: add byte ptr [ebp - 0x47c18a40], al; rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00112439: add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009db92: add byte ptr [ebp - 0x47e7dbac], cl; add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012a675: add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125a0f: add byte ptr [ebp - 0x47f7db8c], cl; sbb al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001981ab: add byte ptr [ebp - 0x47ffd98c], cl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1981b9; neg eax; ret; 
0x00072acb: add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0015db37: add byte ptr [ebp - 0x4f7af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00152a37: add byte ptr [ebp - 0x577af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000d4ccf: add byte ptr [ebp - 0x577bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x0010a8e0: add byte ptr [ebp - 0x57c47ab], cl; cmp eax, 0x338870f; add byte ptr [eax], al; mov eax, dword ptr [ebx + edx*4 - 0x6f248]; add eax, ebx; jmp eax; 
0x0002907c: add byte ptr [ebp - 0x57cff8a], cl; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00151f7b: add byte ptr [ebp - 0x63ca77a], cl; call dword ptr [eax - 0x73]; 
0x0012c51f: add byte ptr [ebp - 0x64a1b79], cl; call dword ptr [eax - 0x18]; 
0x0010a851: add byte ptr [ebp - 0x64e5f7d], cl; call dword ptr [eax - 0x73]; 
0x000c1ae3: add byte ptr [ebp - 0x654477b], cl; call dword ptr [eax - 0x73]; 
0x000c186b: add byte ptr [ebp - 0x654537e], cl; call dword ptr [eax - 0x73]; 
0x000a5057: add byte ptr [ebp - 0x6563b80], cl; call dword ptr [eax + 0x68]; 
0x000a4b8e: add byte ptr [ebp - 0x6567f80], cl; call dword ptr [eax + 0x68]; 
0x000a11f2: add byte ptr [ebp - 0x656ff7d], cl; call dword ptr [eax - 0x73]; 
0x00082533: add byte ptr [ebp - 0x66ccf7a], cl; call dword ptr [eax - 0x73]; 
0x0005e694: add byte ptr [ebp - 0x674477d], cl; call dword ptr [eax - 0x73]; 
0x0005ab38: add byte ptr [ebp - 0x6763f7a], cl; call dword ptr [eax - 0x73]; 
0x00031893: add byte ptr [ebp - 0x67cc380], cl; call dword ptr [eax - 0x18]; 
0x00030e53: add byte ptr [ebp - 0x67d1b79], cl; call dword ptr [eax - 0x73]; 
0x0002747d: add byte ptr [ebp - 0x67ffb79], cl; call dword ptr [eax - 0x73]; 
0x00025d68: add byte ptr [ebp - 0x6801b7f], cl; call dword ptr [eax - 0x73]; 
0x00024f21: add byte ptr [ebp - 0x6889380], cl; call dword ptr [eax + 0x6a]; 
0x0005f770: add byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax + 0x68]; 
0x001682c4: add byte ptr [ebp - 0x68d6a7d], cl; call dword ptr [eax - 0x18]; 
0x0014bf66: add byte ptr [ebp - 0x693827d], cl; call dword ptr [eax - 0x73]; 
0x0014c9d8: add byte ptr [ebp - 0x693827e], cl; call dword ptr [eax - 0x73]; 
0x0014bdc1: add byte ptr [ebp - 0x694117d], cl; call dword ptr [eax - 0x73]; 
0x0005f87f: add byte ptr [ebp - 0x696a47d], cl; call dword ptr [ebp + 0x50]; 
0x0002489b: add byte ptr [ebp - 0x699f27d], cl; call dword ptr [edi + 0x57]; 
0x00033e77: add byte ptr [ebp - 0x699f27d], cl; call dword ptr [esi - 1]; 
0x00122eb9: add byte ptr [ebp - 0x69d017d], cl; call dword ptr [edx + 0x52]; 
0x00122e9f: add byte ptr [ebp - 0x69d557d], cl; call dword ptr [ecx + 0x51]; 
0x00122e03: add byte ptr [ebp - 0x69ef47d], cl; call dword ptr [edx + 0x52]; 
0x00122de9: add byte ptr [ebp - 0x69f187d], cl; call dword ptr [ecx + 0x51]; 
0x00122d4d: add byte ptr [ebp - 0x6a0087d], cl; call dword ptr [edx + 0x52]; 
0x00122d33: add byte ptr [ebp - 0x6a03e7d], cl; call dword ptr [ecx + 0x51]; 
0x001219c5: add byte ptr [ebp - 0x6a53f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0011b01f: add byte ptr [ebp - 0x6a5da7a], cl; call dword ptr [eax - 0x18]; 
0x0010d434: add byte ptr [ebp - 0x6a6d579], cl; call dword ptr [eax - 0x73]; 
0x000ee743: add byte ptr [ebp - 0x6a8797e], cl; call dword ptr [eax - 0x73]; 
0x0003999e: add byte ptr [ebp - 0x6a9ff55], cl; inc dword ptr [ebx - 0x7c72f314]; sar dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000a1eb2: add byte ptr [ebp - 0x6ae8479], cl; call dword ptr [eax - 0x73]; 
0x0009c9c3: add byte ptr [ebp - 0x6ae9e79], cl; call dword ptr [eax - 0x73]; 
0x00094736: add byte ptr [ebp - 0x6afa27a], cl; call dword ptr [eax - 0x73]; 
0x0009391c: add byte ptr [ebp - 0x6afaa7a], cl; call dword ptr [eax - 0x73]; 
0x00091de9: add byte ptr [ebp - 0x6b05b79], cl; call dword ptr [eax - 0x73]; 
0x00090d1b: add byte ptr [ebp - 0x6b09579], cl; call dword ptr [eax - 0x73]; 
0x00076e9a: add byte ptr [ebp - 0x6bcf87a], cl; call dword ptr [eax - 0x73]; 
0x00183a9b: add byte ptr [ebp - 0x6bd5779], cl; call dword ptr [eax + 0x6a]; 
0x00046d31: add byte ptr [ebp - 0x6bfc179], cl; call dword ptr [eax - 0x73]; 
0x0004dcb3: add byte ptr [ebp - 0x6bfcb79], cl; call dword ptr [eax - 0x73]; 
0x0005bb63: add byte ptr [ebp - 0x6c07242], cl; jmp dword ptr [ebp - 0x75]; 
0x00032781: add byte ptr [ebp - 0x6c32350], cl; jmp dword ptr [ebp - 0x75]; 
0x00028dce: add byte ptr [ebp - 0x6c54579], cl; call dword ptr [eax - 0x73]; 
0x000299fe: add byte ptr [ebp - 0x6c5457a], cl; call dword ptr [eax - 0x73]; 
0x00028724: add byte ptr [ebp - 0x6c5457d], cl; call dword ptr [eax - 0x73]; 
0x0007efeb: add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x001a3d0b: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; pop es; ret; 
0x001a3d5b: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push cs; ret; 
0x001a3cfb: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push es; ret; 
0x001a43bb: add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push cs; ret; 
0x001a435b: add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push es; ret; 
0x001a2c8b: add byte ptr [ebp - 0x72ffd98c], cl; pop es; pop edi; ret; 
0x001a9fef: add byte ptr [ebp - 0x74b38a40], al; inc ebp; mov al, 0x8b; push ebp; les ecx, ptr [ecx]; ret 0xfa09; 
0x00108e68: add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00108db8: add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00127063: add byte ptr [ebp - 0x74cf8a40], al; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00126fc3: add byte ptr [ebp - 0x74cf8a40], al; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00108cd3: add byte ptr [ebp - 0x74cf8a40], al; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00108f30: add byte ptr [ebp - 0x74d48a40], al; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00108c40: add byte ptr [ebp - 0x74d48a40], al; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0016fd10: add byte ptr [ebp - 0x74d7dbb4], cl; push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x00120a95: add byte ptr [ebp - 0x74d98a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120565: add byte ptr [ebp - 0x74d98a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c475: add byte ptr [ebp - 0x74d98a40], al; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00110fb5: add byte ptr [ebp - 0x74d98a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x00111205: add byte ptr [ebp - 0x74d98a40], al; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x000342eb: add byte ptr [ebp - 0x74ffd98c], cl; inc esp; and al, 4; and eax, 0x7f; ret; 
0x0010098b: add byte ptr [ebp - 0x74ffd98c], cl; or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x00081a3a: add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x0012a9e9: add byte ptr [ebp - 0x75], ah; adc dword ptr [ebx + 0x4a7426fa], eax; pop ebx; pop esi; ret; 
0x0016325b: add byte ptr [ebp - 0x75], ah; adc ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000a3153: add byte ptr [ebp - 0x75], ah; add byte ptr [ebp - 0x3e7bf040], al; add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x000342d3: add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x24408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034242: add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x24408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x000342a3: add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x2c408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034212: add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x2c408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003292f: add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x54408b00], cl; ret; 
0x0013d2de: add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x548d9804], cl; add ch, byte ptr [ecx - 0xcb17]; jmp dword ptr [esi - 0x70]; 
0x000341d3: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x000341a3: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034173: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000340c3: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x200; ret; 
0x00034123: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00034043: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000340f3: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034093: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x800; ret; 
0x00034263: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 1; ret; 
0x00034073: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 2; ret; 
0x00034153: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 4; ret; 
0x00034023: add byte ptr [ebp - 0x75], ah; add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 8; ret; 
0x00140f52: add byte ptr [ebp - 0x75], ah; add cl, ch; ret 0xfffe; 
0x00071cbb: add byte ptr [ebp - 0x75], ah; add dword ptr [ecx - 0x5577b], ecx; jmp dword ptr [ebp - 0x39]; 
0x0011e8c7: add byte ptr [ebp - 0x75], ah; das; call dword ptr gs:[0x10]; 
0x000e5e4a: add byte ptr [ebp - 0x75], ah; or eax, 0x14; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x00121aa7: add byte ptr [ebp - 0x75], ah; sbb eax, 0x14; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00118d20: add byte ptr [ebp - 0x75], ah; sub edi, edi; je 0x118d4b; cmp al, 0xe8; or ebp, 0xfffffffc; jmp dword ptr [ebp - 0x77]; 
0x00098570: add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x000e494c: add byte ptr [ebp - 0x76e88b40], al; ret 0xf75b; 
0x0017faba: add byte ptr [ebp - 0x76ee8b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0008bcbc: add byte ptr [ebp - 0x76f08b40], al; dec esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x000aa0bb: add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x001137ef: add byte ptr [ebp - 0x777bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0015214b: add byte ptr [ebp - 0x77], ah; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00024f02: add byte ptr [ebp - 0x77], ah; add bh, byte ptr [eax - 1]; ret; 
0x0003e821: add byte ptr [ebp - 0x77], ah; pop ss; push dword ptr [ebx + 4]; call eax; 
0x0009ffaf: add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000b75db: add byte ptr [ebp - 0x77ffd98c], cl; pop ss; pop edi; pop esi; pop ebx; ret; 
0x0008a916: add byte ptr [ebp - 0x7c1a8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009c0e7: add byte ptr [ebp - 0x7c228b40], al; clc; add al, 0x74; fmul dword ptr [ebp - 0x666c379]; call dword ptr [eax - 0x73]; 
0x00142434: add byte ptr [ebp - 0x7cbb8b40], al; in al, dx; add al, 0x89; ret; 
0x00149924: add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x00148dc4: add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000b139f: add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000e4b0f: add byte ptr [ebp - 0x7cd38b40], al; in al, dx; or byte ptr [esi + 0x53], dl; call eax; 
0x00035dc7: add byte ptr [ebp - 0x7cd58a40], al; ret; 
0x00135faf: add byte ptr [ebp - 0x7cdb8b40], al; in al, dx; or byte ptr [ebx - 1], dl; jae 0x135feb; call eax; 
0x0012c59e: add byte ptr [ebp - 0x7cdd8b2e], al; in al, dx; or byte ptr [ebp - 0x649ef79], cl; call dword ptr [eax + 0x55]; 
0x00027089: add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x210fd36d], cl; call dword ptr [edx + 0x50]; 
0x00060c67: add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6bf986d], cl; call dword ptr [esi + 0x52]; 
0x0014ca59: add byte ptr [ebp - 0x7cf58a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016c6b1: add byte ptr [ebp - 0x7cf58b2e], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00146041: add byte ptr [ebp - 0x7cf58b2e], al; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0009e834: add byte ptr [ebp - 0x7cf88a37], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00168e34: add byte ptr [ebp - 0x7cf88b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0014ba25: add byte ptr [ebp - 0x7cf98b40], al; les ebx, ptr [eax]; pop ebx; ret; 
0x0010da8b: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x001208db: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebp - 0x6903f7d], cl; call dword ptr [eax - 0x73]; 
0x000a19ab: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x000a875b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x0004920b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8b01; 
0x000470fb: add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf01; 
0x0002bc1b: add byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x000fc5cb: add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x0019e8bb: add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x000f7dea: add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000f7f4a: add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x000f8235: add byte ptr [ebp - 0x7d], ah; cmp ah, byte ptr [esi]; je 0xf8228; mov eax, 0xffffffff; ret; 
0x000f7cea: add byte ptr [ebp - 0x7d], ah; cmp byte ptr [esi], ah; jne 0xf7d90; mov eax, edx; pop ebx; ret; 
0x00193fab: add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x00101ad2: add byte ptr [ebp - 0x8d68b40], al; shr byte ptr [eax - 0x577bf0fa], 1; adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0007f82e: add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x001a28fb: add byte ptr [ebp - 0x9ffd98c], cl; ret 0x7510; 
0x000a6d51: add byte ptr [ebp - 0xa9ba37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00138851: add byte ptr [ebp - 0xa9bb37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a6da1: add byte ptr [ebp - 0xa9ec37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001388a1: add byte ptr [ebp - 0xa9ed37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a6521: add byte ptr [ebp - 0xaa1e37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00138801: add byte ptr [ebp - 0xaa1f37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00173957: add byte ptr [ebp - 0xc33437d], cl; call dword ptr [eax - 0x73]; 
0x0016e207: add byte ptr [ebp - 0xc8a637d], cl; call dword ptr [eax - 0x73]; 
0x001578e4: add byte ptr [ebp - 0xe0a9379], cl; call dword ptr [eax + 0x6a]; 
0x00157e28: add byte ptr [ebp - 0xe0a937a], cl; call dword ptr [eax + 0x6a]; 
0x0012a87f: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0003c429: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x3c440; pop ebx; ret; 
0x0009de9c: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9deb0; pop ebx; ret; 
0x00108c04: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003c3ee: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011d4ba: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000e7b81: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0013b40b: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0009a214: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0014aebb: add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0006f12e: add byte ptr [ebx + 0x100955c], cl; ret; 
0x0009912b: add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0007e5af: add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00120f1e: add byte ptr [ebx + 0x10880], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0012141a: add byte ptr [ebx + 0x10882], cl; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x121429; ret; 
0x00112ff4: add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x0017eea9: add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x0018fa99: add byte ptr [ebx + 0x11740fe7], al; call 0x182d19; add ebx, 0x44eec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018da99: add byte ptr [ebx + 0x11740fe7], al; call 0x182d19; add ebx, 0x46c6c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00105e17: add byte ptr [ebx + 0x1182454], cl; ret 0x44c7; 
0x000e710a: add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000801c0: add byte ptr [ebx + 0x1282444], cl; ret 0xe852; 
0x0017e158: add byte ptr [ebx + 0x1442474], cl; ret; 
0x000e5e58: add byte ptr [ebx + 0x164248c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014575f: add byte ptr [ebx + 0x16a14ec], al; push dword ptr [esp + 0x1c]; call 0x145690; add esp, 0x1c; ret; 
0x00032929: add byte ptr [ebx + 0x17080], cl; add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x54408b00], cl; ret; 
0x00172a0f: add byte ptr [ebx + 0x17483], cl; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0018c7a5: add byte ptr [ebx + 0x18], dh; call 0x182d19; add ebx, 0x47be3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00172b17: add byte ptr [ebx + 0x19083], cl; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00172ba7: add byte ptr [ebx + 0x1a083], cl; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008b1ef: add byte ptr [ebx + 0x1a7883], al; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x001a38ef: add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a490f: add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a3faf: add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0005aa5f: add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007b4cc: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0011224e: add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00112432: add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00194cae: add byte ptr [ebx + 0x1c740fe7], al; call 0x182d19; add ebx, 0x402d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00193cce: add byte ptr [ebx + 0x1c740fe7], al; call 0x182d19; add ebx, 0x410f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014a64a: add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x0014238f: add byte ptr [ebx + 0x1c8d1459], cl; ret; 
0x000344e9: add byte ptr [ebx + 0x1d080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0014bfcd: add byte ptr [ebx + 0x1d7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00191a8b: add byte ptr [ebx + 0x1f740fe7], al; call 0x182d19; add ebx, 0x4317a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001805c3: add byte ptr [ebx + 0x1f7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000da4b2: add byte ptr [ebx + 0x207f01f8], al; add esp, 8; pop ebx; ret; 
0x0016a8e2: add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x000342d6: add byte ptr [ebx + 0x24408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034245: add byte ptr [ebx + 0x24408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x0010877e: add byte ptr [ebx + 0x247f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000412ae: add byte ptr [ebx + 0x247f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018196d: add byte ptr [ebx + 0x257f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00151e5d: add byte ptr [ebx + 0x257f01f8], al; add esp, 8; pop ebx; ret; 
0x0017b7fc: add byte ptr [ebx + 0x267f01f8], al; add esp, 8; pop ebx; ret; 
0x0003fa2c: add byte ptr [ebx + 0x267f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013e9bf: add byte ptr [ebx + 0x26a14ec], al; push dword ptr [esp + 0x1c]; call 0x13dd70; add esp, 0x1c; ret; 
0x00090a99: add byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x0005f72b: add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x00144a18: add byte ptr [ebx + 0x29042454], cl; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x000e19d8: add byte ptr [ebx + 0x290c247c], cl; retf 0x490f; ret 0x1c8d; 
0x0006de39: add byte ptr [ebx + 0x2964247c], cl; ret; 
0x0011f41b: add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x001a38df: add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a48ff: add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a3f9f: add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x00128eb7: add byte ptr [ebx + 0x2b7f01f9], al; add esp, 8; pop ebx; ret; 
0x000342a6: add byte ptr [ebx + 0x2c408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034215: add byte ptr [ebx + 0x2c408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x0009303d: add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0011bdb0: add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000920e8: add byte ptr [ebx + 0x310c244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091a76: add byte ptr [ebx + 0x310c244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0006d08a: add byte ptr [ebx + 0x3182444], cl; test byte ptr [eax - 0x72954], dl; jmp eax; 
0x0006179a: add byte ptr [ebx + 0x3182444], cl; test byte ptr [eax - 0x73134], dl; jmp eax; 
0x000e24e6: add byte ptr [ebx + 0x31c2444], cl; test byte ptr [eax - 0x70488], cl; jmp eax; 
0x0012bb60: add byte ptr [ebx + 0x327401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012a8e0: add byte ptr [ebx + 0x327401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00103b86: add byte ptr [ebx + 0x3282444], cl; test byte ptr [eax - 0x6f640], bl; jmp eax; 
0x000401cf: add byte ptr [ebx + 0x34408b00], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000ef905: add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000602dd: add byte ptr [ebx + 0x357f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00082c47: add byte ptr [ebx + 0x389cfe0], al; pop ebx; pop esi; pop edi; ret; 
0x0013518f: add byte ptr [ebx + 0x390c1e5c], cl; ret 0x820f; 
0x00131a2f: add byte ptr [ebx + 0x390c2444], cl; ret 0x830f; 
0x00050bd5: add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0006e13c: add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x0013492c: add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x0006fd30: add byte ptr [ebx + 0x39102444], cl; ret 0x8c0f; 
0x00051b9d: add byte ptr [ebx + 0x39102444], cl; ret; 
0x000a1ecf: add byte ptr [ebx + 0x3910246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x0016d4f0: add byte ptr [ebx + 0x3914244c], cl; ret 0x4e0f; 
0x000a4173: add byte ptr [ebx + 0x39242444], cl; ret; 
0x00142823: add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x00121211: add byte ptr [ebx + 0x3940247c], cl; fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x0014a0fd: add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x00106314: add byte ptr [ebx + 0x39782444], cl; ret 0x4f0f; 
0x0017fab4: add byte ptr [ebx + 0x3a080], cl; add byte ptr [ebp - 0x76ee8b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x001a38cf: add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a48ef: add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a3f8f: add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x00108427: add byte ptr [ebx + 0x3b7f01f8], al; call dword ptr [esi]; 
0x0008d897: add byte ptr [ebx + 0x3b7f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x0012f60f: add byte ptr [ebx + 0x3f096], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00086217: add byte ptr [ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x000a1496: add byte ptr [ebx + 0x418d4451], cl; cmp byte ptr [ecx + 0x39142444], cl; ret 0x840f; 
0x00085dca: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396374c9], al; ret; 
0x0007db7a: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x397374c9], al; ret; 
0x00083140: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x49840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0007ae19: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x2f7bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000828ea: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0007b2ba: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x00183f1a: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebx, 0x39000000; ret; 
0x0007e6af: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov esi, 0x39000000; ret; 
0x0008341a: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; ret; 
0x0007c825: add byte ptr [ebx + 0x428b4857], cl; or byte ptr [ebp + 0x393074c9], al; ret; 
0x000658f5: add byte ptr [ebx + 0x428b4857], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; cmp eax, dword ptr [eax + eax]; add byte ptr [ecx], bh; ret; 
0x0010a0bf: add byte ptr [ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0016889f: add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x1688cd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016ed9f: add byte ptr [ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016ae8f: add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x16aebd; sbb al, 0x53; call dword ptr [eax]; 
0x0017353e: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x17356c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0017037c: add byte ptr [ebx + 0x438b08ec], al; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00169537: add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0004196d: add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x0008d6da: add byte ptr [ebx + 0x4408b08], cl; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00032aff: add byte ptr [ebx + 0x440f06f8], al; ret 0xc89; 
0x000a416d: add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0003c4cf: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006032a: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000d0d12: add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00086314: add byte ptr [ebx + 0x448d08ec], al; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008190b: add byte ptr [ebx + 0x448d08ec], al; and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00079d8e: add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008661e: add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000432b0: add byte ptr [ebx + 0x450ffffa], al; ret 0x4489; 
0x00065df7: add byte ptr [ebx + 0x450ffffa], al; ret 0x8589; 
0x000e6bbf: add byte ptr [ebx + 0x458b0cec], al; aam 0x56; call eax; 
0x00170df5: add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0008dcdf: add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x001a87ae: add byte ptr [ebx + 0x45c7a87d], cl; test byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd189; 
0x000baf3f: add byte ptr [ebx + 0x470880e], cl; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00039e63: add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00034247: add byte ptr [ebx + 0x48b2440], cl; nop; ret; 
0x00034217: add byte ptr [ebx + 0x48b2c40], cl; nop; ret; 
0x000fb7ac: add byte ptr [ebx + 0x48b9f14], cl; and al, 0x29; ret 0x5689; 
0x000c21ac: add byte ptr [ebx + 0x48d14c4], al; cwde; pop ebx; pop esi; ret; 
0x000d126b: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000d0078: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x00135adf: add byte ptr [ebx + 0x4a8b01c0], al; add al, 0x83; ret 0x8518; 
0x001a38bf: add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x001a48df: add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x000ec66f: add byte ptr [ebx + 0x4b7714f8], al; mov edi, dword ptr [edx + eax*4 - 0x6fcf8]; add edi, edx; jmp edi; 
0x001a3f7f: add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x00174f3f: add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016e145: add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00170a95: add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00170105: add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00152a3f: add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000d6bef: add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x00173144: add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x0016d849: add byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00171414: add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0011d1a7: add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x0009eb7f: add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0009e79f: add byte ptr [ebx + 0x528b046a], cl; or al, 0x83; ret; 
0x0012b25e: add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x00032932: add byte ptr [ebx + 0x54408b00], cl; ret; 
0x0008defd: add byte ptr [ebx + 0x548b084e], cl; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0004022b: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x000527db: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x0012d180: add byte ptr [ebx + 0x548b240c], cl; and al, 4; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00093074: add byte ptr [ebx + 0x548b684f], cl; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000edbf7: add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00087ab8: add byte ptr [ebx + 0x548d08ec], al; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00184d13: add byte ptr [ebx + 0x548d08ec], al; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000f4cf7: add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0013d2e1: add byte ptr [ebx + 0x548d9804], cl; add ch, byte ptr [ecx - 0xcb17]; jmp dword ptr [esi - 0x70]; 
0x0008869b: add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x001a9336: add byte ptr [ebx + 0x558b8045], cl; mov byte ptr [ecx], cl; ret 0x458b; 
0x001aa0d7: add byte ptr [ebx + 0x558bb045], cl; les ecx, ptr [ecx]; ret 0xfa09; 
0x001335f4: add byte ptr [ebx + 0x56500cc4], al; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0007b0d7: add byte ptr [ebx + 0x568901ea], al; add al, 0x39; ret; 
0x00088621: add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x00133820: add byte ptr [ebx + 0x57500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x001727ce: add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x000861cb: add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x0015d001: add byte ptr [ebx + 0x597f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00151371: add byte ptr [ebx + 0x597f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x000be3ea: add byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0012923f: add byte ptr [ebx + 0x5b108916], cl; pop esi; pop edi; ret; 
0x001a38af: add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x001a48cf: add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x001a3f6f: add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x0007b6d7: add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000baf87: add byte ptr [ebx + 0x5e082444], cl; ret; 
0x000f8051: add byte ptr [ebx + 0x5e0878c], cl; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x0014559e: add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00025fa7: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00174aef: add byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x00141075: add byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0003e359: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00078675: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00078528: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008d7dd: add byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0002ff89: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000823d0: add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0009df36: add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00023521: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00168fe9: add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00169115: add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x00026da2: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000c0b3e: add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0004d6b4: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000c16f0: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0010b09c: add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0002eee1: add byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x00079dfa: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x00090c73: add byte ptr [ebx + 0x5e8b1845], cl; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0011c91d: add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x000d6d46: add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000ffb54: add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x0014d4fc: add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x00137367: add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x00111912: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0002be92: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x00023462: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003d55a: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000beb6f: add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x00024ba3: add byte ptr [ebx + 0x5e], bl; ret; 
0x001a492f: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0012fabb: add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x00150a53: add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x001424cb: add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x0003c610: add byte ptr [ebx + 0x5f], bl; ret; 
0x000f8304: add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x000af0ff: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x00042768: add byte ptr [ebx + 0x674fff2], al; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008ea6c: add byte ptr [ebx + 0x67602fa], al; ret; 
0x0003dd7d: add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0008ac38: add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0016a8e8: add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00079f07: add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0008e177: add byte ptr [ebx + 0x6a0cec], al; call 0x8d730; add esp, 0x1c; ret; 
0x0016899b: add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0003e23f: add byte ptr [ebx + 0x6a14ec], al; push dword ptr [esp + 0x1c]; call 0x3d9e0; add esp, 0x1c; ret; 
0x001a389f: add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x001a48bf: add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x001a3f5f: add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x0017676c: add byte ptr [ebx + 0x6be804ec], al; ret; 
0x00132ae1: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x1c; push 0; push 0x2000004; call eax; 
0x001688d0: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00183a5b: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x183190; add esp, 0x18; pop ebx; ret; 
0x0004223b: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x1a5bd0; add esp, 0x18; pop ebx; ret; 
0x0010885b: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x000839cb: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x79ea0; add esp, 0x18; pop ebx; ret; 
0x001247fb: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x20; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x000351e6: add byte ptr [ebx + 0x758b10c4], al; mov esp, 0x408dc189; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x0007d0a5: add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x7d0bb; push esi; call dword ptr [ebx + 0x2c]; 
0x00146edf: add byte ptr [ebx + 0x75ff0cec], al; add byte ptr [ebx - 0x4d17fb3b], al; ret 0xffed; 
0x0005f93f: add byte ptr [ebx + 0x77ff0cec], al; adc byte ptr [ebp - 0x6bd9a7d], cl; call dword ptr [ecx + 0x50]; 
0x00172c9f: add byte ptr [ebx + 0x788dff38], al; or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x001a3f4f: add byte ptr [ebx + 0x7b7c06c2], al; lea eax, [ecx + 6]; ret; 
0x000c560a: add byte ptr [ebx + 0x7c8310c4], al; and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000c87aa: add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x0009e39f: add byte ptr [ebx + 0x7c8b28ec], al; and al, 0x3c; lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x001ac9bf: add byte ptr [ebx + 0x7d8bc855], cl; aam 0x81; loope 0x1ac9c9; add byte ptr [eax], dl; add dh, dh; ret 0xf07; 
0x0007a6b3: add byte ptr [ebx + 0x7d8be045], cl; in al, 0x89; ret; 
0x00087a4c: add byte ptr [ebx + 0x7e39087e], cl; or al, 0xf; test bh, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x0010aff7: add byte ptr [ebx + 0x80249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00097e57: add byte ptr [ebx + 0x8080], cl; add byte ptr [eax + eax*2 - 0x75], dh; je 0x97e87; adc al, 0x89; ret 0xe283; 
0x00097f47: add byte ptr [ebx + 0x8080], cl; add byte ptr [eax + ecx*2 - 0x75], dh; je 0x97f77; adc al, 0x89; ret 0xe283; 
0x0008dbca: add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0012a6a7: add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0005a164: add byte ptr [ebx + 0x88901e9], al; mov eax, edx; add esp, 0xc; ret; 
0x0012027b: add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x1202c8; call eax; 
0x0012039f: add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x120448; call eax; 
0x00170dc4: add byte ptr [ebx + 0x8ec8306], cl; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x001688b8: add byte ptr [ebx + 0x8ec8307], cl; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0008cced: add byte ptr [ebx + 0x9080], cl; add cl, al; call 0x1e95005; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x00086c8c: add byte ptr [ebx + 0x9202444], cl; ret; 
0x001114cf: add byte ptr [ebx + 0x94248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; call dword ptr gs:[0x10]; 
0x00034509: add byte ptr [ebx + 0x9480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x001114d6: add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001115cf: add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000344c9: add byte ptr [ebx + 0x9c80], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0012a78a: add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000254c9: add byte ptr [ebx + 0xa480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00069c7e: add byte ptr [ebx + 0xa4b8], cl; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0009e680: add byte ptr [ebx + 0xa7650f8], al; ret; 
0x001a38ff: add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a491f: add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x00096197: add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x001a3fbf: add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x00127367: add byte ptr [ebx + 0xb7f01f8], al; add esp, 8; pop ebx; ret; 
0x0008b29f: add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00111796: add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0011173b: add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x1c4; call dword ptr gs:[0x10]; 
0x0012de78: add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012fcbc: add byte ptr [ebx + 0xb], dh; mov eax, dword ptr [ecx + 0x4794]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x0012954e: add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013a709: add byte ptr [ebx + 0xc480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000e493b: add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00109808: add byte ptr [ebx + 0xc7702fa], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000337e5: add byte ptr [ebx + 0xc892404], cl; mov al, 0x8b; test byte ptr [ebx - 0x814], dh; test eax, eax; je 0x337f9; call eax; 
0x00146d5a: add byte ptr [ebx + 0xc8b10c4], al; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x001718cb: add byte ptr [ebx + 0xcec8300], cl; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00059f92: add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x0017bf3f: add byte ptr [ebx + 0xdd4b3], cl; add byte ptr [ebx - 0x4472f714], al; test al, 0x76; stc; call dword ptr [edi + 0x56]; 
0x0017c77b: add byte ptr [ebx + 0xdd4bb], cl; add byte ptr [ebx - 0x4c72f714], al; test al, 0x76; stc; call dword ptr [esi + 0x57]; 
0x0012e104: add byte ptr [ebx + 0xe], bh; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00107195: add byte ptr [ebx + 0xf00903c], al; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x000391b3: add byte ptr [ebx + 0xf04244c], cl; mov dh, 0xc0; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x001122f5: add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x001487ea: add byte ptr [ebx + 0xf1c244c], cl; mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x0005ee47: add byte ptr [ebx + 0xf242454], cl; mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x000646ae: add byte ptr [ebx + 0xf44244c], cl; mov edi, 0xfc985d0; inc ebp; ret 0xc689; 
0x0019c5c0: add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001849bf: add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x0011ff87: add byte ptr [ebx + 0xfcb3], cl; add bh, bh; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x0015cf73: add byte ptr [ebx + 0xff004ec], al; mov cl, 0x93; pop eax; mov byte ptr [0x850f0000], al; ret; 
0x00091a71: add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093038: add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00090ef5: add byte ptr [ebx + 2], bh; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00109bbb: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00109f75: add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0018b8ba: add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x0012e5fc: add byte ptr [ebx + 3], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00129c04: add byte ptr [ebx + 3], bh; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000a4462: add byte ptr [ebx + ebp - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ab997a], cl; call dword ptr [ebx + 0x50]; 
0x000243f5: add byte ptr [ebx + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x243ca; call dword ptr [ebp - 0x38]; 
0x00084971: add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x001708a0: add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x001715a4: add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000873e9: add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00168b0e: add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00109f81: add byte ptr [ebx - 0x14373], cl; jmp dword ptr [ebp - 1]; 
0x000a1c79: add byte ptr [ebx - 0x14efdb94], cl; jnp 0x59952cce; add al, 0xf6; ret; 
0x00094a6f: add byte ptr [ebx - 0x14fb7a6c], cl; clc; dec dword ptr [ebp - 0x15fef3a1]; jmp edx; 
0x001a8af7: add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x000d7b24: add byte ptr [ebx - 0x16fbdbbc], cl; ret 0xfffe; 
0x0009ebdf: add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00098cd8: add byte ptr [ebx - 0x17a9f314], al; push ds; mov ecx, 0xc4830008; adc byte ptr [ebp - 0x16588a40], al; ret 0xfffe; 
0x00116dff: add byte ptr [ebx - 0x17a9f314], al; xchg edi, eax; ret; 
0x0007de6f: add byte ptr [ebx - 0x17aee714], al; ja 0x7de92; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00085ce7: add byte ptr [ebx - 0x17afe714], al; fistp qword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00116dc7: add byte ptr [ebx - 0x17aff314], al; iretd; ret; 
0x000a17c7: add byte ptr [ebx - 0x17f3dbbc], cl; call edi; 
0x000793f8: add byte ptr [ebx - 0x18536a44], cl; clc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0017006f: add byte ptr [ebx - 0x18], dl; mov dword ptr [0x8100012c], eax; ret; 
0x0015096f: add byte ptr [ebx - 0x18], dl; mov dword ptr [0x81000323], eax; ret; 
0x0012086f: add byte ptr [ebx - 0x18], dl; mov dword ptr [0x81000624], eax; ret; 
0x000fc86f: add byte ptr [ebx - 0x18], dl; mov dword ptr [0x81000864], eax; ret; 
0x000ed86f: add byte ptr [ebx - 0x18], dl; mov dword ptr [0x81000954], eax; ret; 
0x000a996f: add byte ptr [ebx - 0x18], dl; mov dword ptr [0x81000d93], eax; ret; 
0x0008454f: add byte ptr [ebx - 0x18], dl; ret; 
0x00031aee: add byte ptr [ebx - 0x1d36b], cl; dec dword ptr [ebp - 0x67ce37e]; call dword ptr [eax - 0x73]; 
0x000d0944: add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x00024f19: add byte ptr [ebx - 0x2497ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x6889380], cl; call dword ptr [eax + 0x6a]; 
0x0002579f: add byte ptr [ebx - 0x2708ef3c], al; sbb eax, eax; add esp, 0xc; ret; 
0x0011f741: add byte ptr [ebx - 0x27768f3c], al; pop ebx; pop esi; pop edi; ret; 
0x0011fa2f: add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x00120528: add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x001547e5: add byte ptr [ebx - 0x2776ef3c], al; call eax; 
0x000c3528: add byte ptr [ebx - 0x2776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0012461d: add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x00092bb7: add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0006f36e: add byte ptr [ebx - 0x27b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x00092e1b: add byte ptr [ebx - 0x27cc61b], al; or byte ptr [ebp + ecx*4 - 0x15], dh; ret 0x8d2e; 
0x0015461f: add byte ptr [ebx - 0x287872e8], cl; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x0008d075: add byte ptr [ebx - 0x2a14ef3c], al; nop; nop; nop; ret; 
0x0008dff7: add byte ptr [ebx - 0x2d7aefa9], cl; je 0x8e038; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00086398: add byte ptr [ebx - 0x2d7c0040], al; jmp dword ptr [ecx]; 
0x0005a17f: add byte ptr [ebx - 0x2dcefe17], al; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x00098a85: add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc03a8d19; ret; 
0x0012b633: add byte ptr [ebx - 0x2f76bf3c], al; pop ebx; pop esi; pop edi; ret; 
0x00108aa3: add byte ptr [ebx - 0x2f76df3c], al; pop ebx; pop esi; pop edi; ret; 
0x0017511b: add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0013a8b9: add byte ptr [ebx - 0x2f76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00122259: add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00150137: add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x0010541b: add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000582ef: add byte ptr [ebx - 0x35ff7b], al; jmp eax; 
0x00057146: add byte ptr [ebx - 0x361f43], cl; dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x000d427e: add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00057921: add byte ptr [ebx - 0x361f7b], cl; push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x00055a29: add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00057bf2: add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00057e5f: add byte ptr [ebx - 0x36277b], al; jmp eax; 
0x000d2cc7: add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000d4401: add byte ptr [ebx - 0x362f43], cl; dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x00056bea: add byte ptr [ebx - 0x36377b], cl; dec dword ptr [ebx - 0x36336b]; dec dword ptr [ebx - 0x36774b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d5d79: add byte ptr [ebx - 0x363f4b], cl; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x000d3ff2: add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x00058f10: add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x000567ef: add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x7d379]; call dword ptr [eax - 0x73]; 
0x00057f8f: add byte ptr [ebx - 0x364763], cl; call dword ptr [eax - 1]; 
0x000575ed: add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x000d4f42: add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000d36c6: add byte ptr [ebx - 0x365773], cl; dec dword ptr [ecx - 0x36737b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x0005751e: add byte ptr [ebx - 0x365f7b], al; call dword ptr [eax]; 
0x000d378f: add byte ptr [ebx - 0x365f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00057aa1: add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x0011261a: add byte ptr [ebx - 0x37769f3c], al; pop ebx; pop esi; pop edi; ret; 
0x000fa007: add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x000401d1: add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x00026041: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0016a983: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00042399: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00042307: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004236b: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000422d9: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x0005b7bf: add byte ptr [ebx - 0x3d7cfbb6], cl; add al, 0x83; ret; 
0x0008f6f7: add byte ptr [ebx - 0x3e2f76ed], cl; call 0x89386b05; clc; call dword ptr gs:[0x10]; 
0x00089ed6: add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x89ed0; ret; 
0x0008cbc9: add byte ptr [ebx - 0x3f7adbc0], cl; jne 0x8cbd8; ret; 
0x00120f24: add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00173843: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x173830; add esp, 8; pop ebx; ret; 
0x0003c130: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x3c140; add esp, 8; pop ebx; ret; 
0x0003c3bf: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x3c3d0; add esp, 8; pop ebx; ret; 
0x0012cf1c: add byte ptr [ebx - 0x3f7aef3c], al; js 0x12cf30; add esp, 8; pop ebx; ret; 
0x00121420: add byte ptr [ebx - 0x3f7af3c0], cl; je 0x121429; ret; 
0x0010865f: add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10854b; call eax; 
0x0010869f: add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10859a; call eax; 
0x001085ff: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10854b; call eax; 
0x001086b7: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10859a; call eax; 
0x0014d47f: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x14d48c; cmp dword ptr [eax + 8], edx; jne 0x14d480; ret; 
0x00035a33: add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x359c6; ret; 
0x00041f0e: add byte ptr [ebx - 0x3fceef3c], al; add esp, 4; pop ebx; pop esi; ret; 
0x00092421: add byte ptr [ebx - 0x3fceef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00109657: add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0004027a: add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0005fd04: add byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x1c; ret; 
0x000a947f: add byte ptr [ebx - 0x41f0fe40], al; adc al, 1; cmp edx, ebx; je 0xa9480; pop ebx; ret; 
0x0018c23f: add byte ptr [ebx - 0x42], dh; call 0x182d19; add ebx, 0x47ec9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0017bf9e: add byte ptr [ebx - 0x4472f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [edi + 0x56]; 
0x0017bf45: add byte ptr [ebx - 0x4472f714], al; test al, 0x76; stc; call dword ptr [edi + 0x56]; 
0x0006737a: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x0006886c: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x00068d15: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00068b76: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x000673e5: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x0014364f: add byte ptr [ebx - 0x44f73], cl; dec dword ptr [ebx - 0x4536b]; jmp dword ptr [ebp - 0x75]; 
0x0009075c: add byte ptr [ebx - 0x45f3dba4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009005a: add byte ptr [ebx - 0x45fbdba4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0010c6eb: add byte ptr [ebx - 0x46b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0003c4a4: add byte ptr [ebx - 0x46dfdba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000ef90f: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000ef65d: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x000ef86f: add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0003c420: add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c71f: add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0011c5da: add byte ptr [ebx - 0x47abdbb4], cl; sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x000609e7: add byte ptr [ebx - 0x47afdb8c], cl; call dword ptr [ebx - 0x59]; 
0x0011a835: add byte ptr [ebx - 0x47dfdba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000f821a: add byte ptr [ebx - 0x47fbdbb4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xf8230; ret; 
0x000a9ece: add byte ptr [ebx - 0x4800f314], al; mov byte ptr [eax + eax], al; add al, ch; ret; 
0x001a0faf: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a0fc0; neg eax; ret; 
0x001a50af: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a50c0; neg eax; ret; 
0x0008e1e2: add byte ptr [ebx - 0x48], bl; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00097f87: add byte ptr [ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000603ca: add byte ptr [ebx - 0x48], dl; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00110eba: add byte ptr [ebx - 0x48], dl; and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011bdaa: add byte ptr [ebx - 0x48], dl; dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x0012a0ca: add byte ptr [ebx - 0x48], dl; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012a70a: add byte ptr [ebx - 0x48], dl; lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a96a: add byte ptr [ebx - 0x48], dl; les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003c41a: add byte ptr [ebx - 0x48], dl; mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011ed9a: add byte ptr [ebx - 0x48], dl; mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011d4da: add byte ptr [ebx - 0x48], dl; or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b22a: add byte ptr [ebx - 0x48], dl; or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012bbea: add byte ptr [ebx - 0x48], dl; ret; 
0x00110f2a: add byte ptr [ebx - 0x48], dl; sldt word ptr [eax]; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0011c93a: add byte ptr [ebx - 0x48], dl; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f64a: add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012b95a: add byte ptr [ebx - 0x48], dl; xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013dddf: add byte ptr [ebx - 0x48f0fb14], al; ret; 
0x000fbe19: add byte ptr [ebx - 0x49f0dbe4], cl; rol byte ptr [ebx], 0x9c; add dword ptr [edi + eax - 7], -1; jmp ebx; 
0x000d2e67: add byte ptr [ebx - 0x4a76ef3c], al; mov al, byte ptr [0x31ffffc9]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x0008c12f: add byte ptr [ebx - 0x4b74fbbd], cl; sub byte ptr [eax - 0x17], 0xf8; inc dword ptr [ecx]; salc; jmp esi; 
0x0017c7de: add byte ptr [ebx - 0x4c72f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x0017c781: add byte ptr [ebx - 0x4c72f714], al; test al, 0x76; stc; call dword ptr [esi + 0x57]; 
0x00146ee5: add byte ptr [ebx - 0x4d17fb3b], al; ret 0xffed; 
0x00076e88: add byte ptr [ebx - 0x4ff4b], cl; dec dword ptr [ebp - 0x6722f7a]; call dword ptr [eax + 0x68]; 
0x00071a6b: add byte ptr [ebx - 0x4ff4b], cl; dec dword ptr [ebx - 0x25576974]; clc; inc dword ptr [ecx]; int1; jmp ecx; 
0x0012f41f: add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x0007234d: add byte ptr [ebx - 0x4ff7b], cl; dec dword ptr [ebx - 0x51373]; inc dword ptr [ebx]; test byte ptr [eax - 0x72418], bl; jmp eax; 
0x00072377: add byte ptr [ebx - 0x4ff7b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x722c8], bl; jmp eax; 
0x00071de3: add byte ptr [ebx - 0x4ff7b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x7249c], bl; jmp eax; 
0x00072782: add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x00072a5d: add byte ptr [ebx - 0x5137b], cl; inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x00076481: add byte ptr [ebx - 0x51773], cl; call ecx; 
0x0007412b: add byte ptr [ebx - 0x5177b], cl; call ecx; 
0x00074adf: add byte ptr [ebx - 0x51f73], cl; jmp dword ptr [ebp - 0x39]; 
0x00071d5f: add byte ptr [ebx - 0x53b73], cl; dec dword ptr [ecx - 0x50363]; dec dword ptr [ebx - 0x51343]; dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x75]; 
0x0017bf60: add byte ptr [ebx - 0x5472f714], al; mov dh, 0x76; stc; call dword ptr [ebp + 0x56]; 
0x0015d2f8: add byte ptr [ebx - 0x57cdf3c], al; add dword ptr [edi + 0x27], edi; add esp, 0x18; pop ebx; ret; 
0x0017b877: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0017b8f3: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x000924ca: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x25], edi; add esp, 0x18; pop ebx; ret; 
0x00065819: add byte ptr [ebx - 0x58f43], cl; dec dword ptr [edi]; mov dh, 0xd2; mov ecx, dword ptr [edi + edx*4 - 0x72d38]; add ecx, edi; jmp ecx; 
0x000684de: add byte ptr [ebx - 0x58f63], cl; call dword ptr [ecx + 0x50]; 
0x0006719a: add byte ptr [ebx - 0x58f63], cl; inc dword ptr [ebx - 0x7c72f314]; cld; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00067f65: add byte ptr [ebx - 0x58f7b], cl; dec dword ptr [ecx - 0x59373]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00066378: add byte ptr [ebx - 0x58f7b], cl; dec dword ptr [edi]; mov dh, 0xdb; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00066295: add byte ptr [ebx - 0x58f7b], cl; dec dword ptr [edi]; mov dh, 0xdb; mov edx, dword ptr [ebp - 0x58c]; add eax, dword ptr [eax + ebx*4 - 0x72bf8]; jmp eax; 
0x0011098f: add byte ptr [ebx - 0x5ab6b], cl; dec dword ptr [ebp - 0x64def7e]; call dword ptr [eax + 0x68]; 
0x000f11ff: add byte ptr [ebx - 0x5ab6b], cl; dec dword ptr [ebp - 0x64f9b7e]; call dword ptr [eax + 0x68]; 
0x000f584f: add byte ptr [ebx - 0x5bb6b], cl; dec dword ptr [ebp - 0x64f9b7e]; call dword ptr [eax + 0x68]; 
0x0008caff: add byte ptr [ebx - 0x5c9ae3c0], cl; jl 0x8cb07; add byte ptr [eax], al; ret; 
0x000684fe: add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x000f8d5e: add byte ptr [ebx - 0x5cf0afa9], cl; ret 0x830f; 
0x00067124: add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00067944: add byte ptr [ebx - 0x5d74b], cl; jmp dword ptr [ebp - 0x75]; 
0x0006b2a1: add byte ptr [ebx - 0x5e76b], cl; dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x0009708d: add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x00096477: add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0011de8f: add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0011b8bd: add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9b3: add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0017d140: add byte ptr [ebx - 0x6972f714], al; cdq; jbe 0x17d142; call dword ptr [edx - 0x77]; 
0x00031d92: add byte ptr [ebx - 0x69934474], cl; idiv edi; add ecx, ebx; jmp ecx; 
0x0010df0d: add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x000e8f8f: add byte ptr [ebx - 0x6bf0a301], al; ret; 
0x00158a50: add byte ptr [ebx - 0x6bf0fd08], al; ret; 
0x0004fc3e: add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x00048cad: add byte ptr [ebx - 0x6bf0fe05], al; ret 0xc639; 
0x000c70c0: add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x0017bf7b: add byte ptr [ebx - 0x6c72f714], al; cdq; jbe 0x17bf7d; call dword ptr [edx - 0x77]; 
0x0002fcf2: add byte ptr [ebx - 0x6c72f714], al; jle 0x2fd35; stc; call dword ptr [edx + 0x50]; 
0x0015d00f: add byte ptr [ebx - 0x6c72f714], al; push ebx; jo 0x15d011; call dword ptr [edx + 0x50]; 
0x0007a9ce: add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0013a7b8: add byte ptr [ebx - 0x7172fb14], al; pop ds; push 0x868dfff9; sub ch, byte ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x00173587: add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0009e6bc: add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0002ebfe: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002d8bb: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0002d459: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x00029f1b: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [ebx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002b60d: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x00028c73: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; jnp 0x28c76; call dword ptr [eax - 0x73]; 
0x00028dbe: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; jnp 0x28dc1; call dword ptr [eax + 0x68]; 
0x00028de1: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; jnp 0x28de4; call dword ptr [eax + 0x68]; 
0x0002af77: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; jp 0x2af7a; call dword ptr [eax - 0x73]; 
0x0002b653: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; jp 0x2b656; call dword ptr [eax + 0x68]; 
0x0002b676: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; jp 0x2b679; call dword ptr [eax + 0x68]; 
0x000299ee: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x0002986e: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x0002b630: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [edx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x0002875f: add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [esp + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x0002873c: add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [esp + edi*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0009ee39: add byte ptr [ebx - 0x72c3dbbc], cl; or ah, 0x9a; stc; call dword ptr [eax + 0x6a]; 
0x0002a9b8: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [eax - 0x7e], ebx; stc; call dword ptr [eax - 0x73]; 
0x0002dfe4: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002de73: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002e007: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jns 0x2e00a; call dword ptr [eax - 0x73]; 
0x0002e02a: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jns 0x2e02d; call dword ptr [eax - 0x73]; 
0x0002a624: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jp 0x2a627; call dword ptr [eax - 0x73]; 
0x0002a960: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jp 0x2a963; call dword ptr [eax + 0x68]; 
0x0002a983: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jp 0x2a986; call dword ptr [eax + 0x68]; 
0x0010b9ef: add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ebx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0014fe58: add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x000ce4f8: add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x001618fa: add byte ptr [ebx - 0x72d3dbbc], cl; test al, 0x1f; jb 0x1618fd; call dword ptr [ebp - 0x73]; 
0x00161452: add byte ptr [ebx - 0x72d3dbbc], cl; test al, 0xf; jb 0x161455; call dword ptr [ebp - 0x73]; 
0x0005083f: add byte ptr [ebx - 0x72d7db84], cl; xchg dword ptr [eax - 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0015dae7: add byte ptr [ebx - 0x72d7db8c], cl; scasb al, byte ptr es:[edi]; mov al, 0x70; stc; call dword ptr [ebp - 0x73]; 
0x0011dc27: add byte ptr [ebx - 0x72dfdba4], cl; push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000c417b: add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c44b7: add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], edx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c1db3: add byte ptr [ebx - 0x72e3db84], cl; xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0009454a: add byte ptr [ebx - 0x72e3dba4], cl; or esp, 0xffffff96; stc; call dword ptr [eax - 0x73]; 
0x0009f084: add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x000c2115: add byte ptr [ebx - 0x72e3dbac], cl; add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x00049819: add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x0004ca06: add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x00159b45: add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [ebp + eax*8 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0011387c: add byte ptr [ebx - 0x72efdbbc], cl; xor dl, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0008452a: add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [ebx + edx*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0010d424: add byte ptr [ebx - 0x72f7db84], cl; xchg esp, ebp; mov cl, 0xf9; call dword ptr [eax + 0x68]; 
0x0010d027: add byte ptr [ebx - 0x72f7db84], cl; xchg esp, ebp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00028ccf: add byte ptr [ebx - 0x72f7dbac], cl; inc ebx; add al, 0x39; ret 0x9173; 
0x000539bf: add byte ptr [ebx - 0x72fb6984], cl; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x00090d0b: add byte ptr [ebx - 0x72fbdb84], cl; xchg eax, eax; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x000b50bc: add byte ptr [ebx - 0x72fd76ff], cl; inc edx; add al, 0x5f; pop ebx; ret; 
0x000485a5: add byte ptr [ebx - 0x7374dbfc], cl; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x001a3f3f: add byte ptr [ebx - 0x73f0fa3e], al; xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001a3f0f: add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x001a3dad: add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0017c7bb: add byte ptr [ebx - 0x7472f714], al; cdq; jbe 0x17c7bd; call dword ptr [ecx - 0x77]; 
0x00127271: add byte ptr [ebx - 0x7472fb14], al; or al, 0x16; stc; jmp dword ptr [ebp - 0x75]; 
0x0009e167: add byte ptr [ebx - 0x749bdbb4], cl; je 0x9e193; or byte ptr [eax + 0x104], bh; call dword ptr gs:[0x10]; 
0x0012ada0: add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0012b799: add byte ptr [ebx - 0x749fdba4], cl; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000dbf4f: add byte ptr [ebx - 0x749fdba4], cl; push esp; and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012df60: add byte ptr [ebx - 0x74b7dbac], cl; je 0x12df8c; push eax; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011cf51: add byte ptr [ebx - 0x74c7dbac], cl; jl 0x11cf7d; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0002c208: add byte ptr [ebx - 0x74dfdb8c], cl; jl 0x2c234; and al, 0x89; ret 0xf229; 
0x000cd6f6: add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000c6d76: add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0012e04c: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0018b82a: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e53a: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012a710: add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00130027: add byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x12fed0; add esp, 4; ret; 
0x00158305: add byte ptr [ebx - 0x74f3db84], cl; push edi; add al, 0xf7; ret 0xfffd; 
0x0002963b: add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x000603d0: add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0004f536: add byte ptr [ebx - 0x74f7dbbc], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x0003446f: add byte ptr [ebx - 0x74f7dbbc], cl; push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0009e5ea: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x9e600; ret; 
0x0009e62a: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x9e640; ret; 
0x0009e67a: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x001828af: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x0018293f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop eax; ret; 
0x001828df: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop esp; ret; 
0x001828cf: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x0018294f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push esp; ret; 
0x001492eb: add byte ptr [ebx - 0x74fbdbbc], cl; pop eax; or byte ptr [ebp + 0x40850fed], al; add al, 0; add dh, dh; ret; 
0x001828bf: add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008ae3f: add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0018287f: add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0010fbc2: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009d580: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0013b3ff: add byte ptr [ebx - 0x75], dl; inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00112705: add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00152162: add byte ptr [ebx - 0x769adff5], al; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0005241c: add byte ptr [ebx - 0x76a8eb3c], al; ret; 
0x000e4f65: add byte ptr [ebx - 0x76abdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x000e4f06: add byte ptr [ebx - 0x76abdbb4], cl; cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00077ef2: add byte ptr [ebx - 0x76aff33c], al; ret; 
0x0006f6ec: add byte ptr [ebx - 0x76b3dbb4], cl; dec esp; and al, 4; jmp eax; 
0x0013b21a: add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x001025e2: add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x0015e29e: add byte ptr [ebx - 0x76cfdbbc], cl; adc bh, bh; je 0x15e2cc; xor al, 0xe8; ret 0xfeec; 
0x000a747a: add byte ptr [ebx - 0x76dfdbbc], cl; shr dword ptr [ecx], cl; ret; 
0x0013bc50: add byte ptr [ebx - 0x76e3db84], cl; ret; 
0x0002bac3: add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x0008d18a: add byte ptr [ebx - 0x76e7dbac], cl; ret; 
0x0016865a: add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x00097e9f: add byte ptr [ebx - 0x76ebdb84], cl; ret 0xca83; 
0x00140a12: add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x0014c6df: add byte ptr [ebx - 0x76efdb94], cl; ret 0x7e8d; 
0x0004894d: add byte ptr [ebx - 0x76efdbb4], cl; ret 0x1b8; 
0x000930ba: add byte ptr [ebx - 0x76f3dbac], cl; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00120e85: add byte ptr [ebx - 0x76f7dbac], cl; add bh, byte ptr [eax + 1]; ret; 
0x00091b31: add byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x000b0ccc: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; pop ebx; ret; 
0x000aeecf: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x000a92e1: add byte ptr [ebx - 0x77], bl; clc; pop esi; pop edi; pop ebp; ret; 
0x0008ea4f: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x001760fe: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0003d602: add byte ptr [ebx - 0x77], dl; ret; 
0x00072e2c: add byte ptr [ebx - 0x77cef3c], al; dec dword ptr [edi]; test byte ptr [ebx], ch; sbb al, 0; add byte ptr [ecx], al; ret; 
0x00110c47: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [eax - 0x77]; ret 0xbc8d; 
0x0010c087: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [eax - 0x77]; ret 0xc085; 
0x00080b63: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [esp + edx - 0x75]; inc esi; adc al, 0xe9; ret; 
0x00083f93: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [esp - 0x7b]; sar byte ptr [eax + 0x30], 1; ret; 
0x000306d7: add byte ptr [ebx - 0x7872f314], al; mov bl, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00096350: add byte ptr [ebx - 0x7872f314], al; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x000305d5: add byte ptr [ebx - 0x7872f714], al; sub al, 0x84; stc; call dword ptr [eax + 0x56]; 
0x0009f4d6: add byte ptr [ebx - 0x7872fb14], al; cld; push ecx; stc; call dword ptr [eax + 0x53]; 
0x0010a71e: add byte ptr [ebx - 0x78f0ae06], al; or byte ptr [edx], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + edx*4 - 0x6f390]; add eax, ebx; jmp eax; 
0x000e7254: add byte ptr [ebx - 0x78f0d007], al; jb 0xe725f; add byte ptr [eax], al; mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x000f8048: add byte ptr [ebx - 0x78f0eb08], al; pop dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x6fa20]; add ecx, edi; jmp ecx; 
0x000c09c3: add byte ptr [ebx - 0x78f0f308], al; rol dword ptr [eax], cl; add byte ptr [eax], al; mov ecx, dword ptr [edx + eax*4 - 0x70c9c]; add ecx, edx; jmp ecx; 
0x0006d081: add byte ptr [ebx - 0x78f0f806], al; aad 3; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x00061791: add byte ptr [ebx - 0x78f0f806], al; lodsd eax, dword ptr [esi]; add al, byte ptr [eax]; add byte ptr [ebx + 0x3182444], cl; test byte ptr [eax - 0x73134], dl; jmp eax; 
0x000e7225: add byte ptr [ebx - 0x78f0fa07], al; mov dl, 0; add byte ptr [eax], al; mov eax, dword ptr [esi + ecx*4 - 0x700b0]; add eax, esi; jmp eax; 
0x0002ebb0: add byte ptr [ebx - 0x78f0fb05], al; mov al, byte ptr [0x9000000]; ret; 
0x00169097: add byte ptr [ebx - 0x7972fb14], al; mov edx, 0x6afff973; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x001278c7: add byte ptr [ebx - 0x7972fb14], al; pushfd; mov ah, 0xf9; call dword ptr [edi - 0x7f]; 
0x001a4574: add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x00163931: add byte ptr [ebx - 0x7a72f314], al; jl 0x1639ab; stc; call dword ptr [eax - 0x18]; 
0x0013d517: add byte ptr [ebx - 0x7a72f714], al; cmp ecx, edi; call dword ptr [eax + 0x53]; 
0x00049124: add byte ptr [ebx - 0x7aa3dbbc], cl; ror byte ptr [edi], 0x84; ret 2; 
0x0002a736: add byte ptr [ebx - 0x7acfdbbc], cl; ror byte ptr [edi], 0x84; dec ebx; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x001521a6: add byte ptr [ebx - 0x7ad7dbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x00050074: add byte ptr [ebx - 0x7adfdbbc], cl; ror byte ptr [edi], 0x84; pop esi; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x00176507: add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 8], cl; add esp, 0xc; ret; 
0x00152492: add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6abcf7f], cl; call dword ptr [eax + 0x52]; 
0x001418a2: add byte ptr [ebx - 0x7af0fd08], al; ret 0xfffe; 
0x000430e2: add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [eax + esi*2 - 0x75], 0x3c; and al, 0x8d; inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x0005daa6: add byte ptr [ebx - 0x7afbdbbc], cl; ror byte ptr [edi], 0x9f; ret; 
0x000342a8: add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000342d8: add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x001785c3: add byte ptr [ebx - 0x7bf00003], al; ret; 
0x000adb37: add byte ptr [ebx - 0x7bf0f108], al; call dword ptr [eax]; 
0x00066783: add byte ptr [ebx - 0x7bf0f708], al; ret 0x18; 
0x001a0484: add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001a49d2: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0003dbe3: add byte ptr [ebx - 0x7bf0fe08], al; ret; 
0x0019ff23: add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x000a42fe: add byte ptr [ebx - 0x7c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000e782a: add byte ptr [ebx - 0x7c3976e6], cl; ret 0x8304; 
0x000e794a: add byte ptr [ebx - 0x7c3e76c6], cl; ret 0x8304; 
0x0015c9fb: add byte ptr [ebx - 0x7c72ef14], al; lodsb al, byte ptr [esi]; pop ebx; bnd call dword ptr [eax - 0x73]; 
0x000da853: add byte ptr [ebx - 0x7c72f314], 6; push esi; stc; call dword ptr [eax - 0x18]; 
0x00145dbb: add byte ptr [ebx - 0x7c72f314], al; adc ebp, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0016fe7f: add byte ptr [ebx - 0x7c72f314], al; cdq; pop ecx; stc; call dword ptr [edi + 0x56]; 
0x000923ba: add byte ptr [ebx - 0x7c72f314], al; clc; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x00165801: add byte ptr [ebx - 0x7c72f314], al; cmp dword ptr [ebx - 7], esi; call dword ptr [eax - 0x18]; 
0x0015145e: add byte ptr [ebx - 0x7c72f314], al; pop ds; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x001184f7: add byte ptr [ebx - 0x7c72f314], al; push esi; stc; call dword ptr [eax - 0x18]; 
0x00033ee7: add byte ptr [ebx - 0x7c72f33c], al; xor byte ptr [esi], bh; stc; call dword ptr [eax - 1]; 
0x000da76f: add byte ptr [ebx - 0x7c72f714], al; and al, 0x56; stc; call dword ptr [eax + 0x56]; 
0x00122c5e: add byte ptr [ebx - 0x7c72f714], al; call ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00128b70: add byte ptr [ebx - 0x7c72f714], al; cmc; arpl cx, di; call dword ptr [eax + 0x56]; 
0x000da7f2: add byte ptr [ebx - 0x7c72f714], al; cmp ecx, edi; call dword ptr [eax + 0x56]; 
0x001221f7: add byte ptr [ebx - 0x7c72f714], al; cmp ecx, edi; call dword ptr [eax - 0x73]; 
0x00122ba1: add byte ptr [ebx - 0x7c72f714], al; dec edx; pop esp; stc; call dword ptr [eax + 0x55]; 
0x0015143e: add byte ptr [ebx - 0x7c72f714], al; les ebp, ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x00122c43: add byte ptr [ebx - 0x7c72f714], al; mov bl, 0x5d; stc; call dword ptr [eax + 0x55]; 
0x000da27f: add byte ptr [ebx - 0x7c72f714], al; out dx, eax; push ebp; stc; call dword ptr [eax + 0x56]; 
0x00122c28: add byte ptr [ebx - 0x7c72f714], al; outsd dx, dword ptr [esi]; pop ebp; stc; call dword ptr [eax + 0x55]; 
0x00122bf2: add byte ptr [ebx - 0x7c72f714], al; pop es; pop ebp; stc; call dword ptr [eax + 0x55]; 
0x00122c94: add byte ptr [ebx - 0x7c72f714], al; pop si; stc; call dword ptr [eax + 0x55]; 
0x00122b35: add byte ptr [ebx - 0x7c72f714], al; push ebp; popal; stc; call dword ptr [eax + 0x55]; 
0x00122b50: add byte ptr [ebx - 0x7c72f714], al; push ebx; pop ebx; stc; call dword ptr [eax + 0x55]; 
0x0002fd10: add byte ptr [ebx - 0x7c72f714], al; test byte ptr [ebx], bh; stc; call dword ptr [eax - 1]; 
0x00122bbc: add byte ptr [ebx - 0x7c72f714], al; xchg ecx, eax; pop esp; stc; call dword ptr [eax + 0x55]; 
0x00122c79: add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ebx; call dword ptr [eax + 0x55]; 
0x0009fe6e: add byte ptr [ebx - 0x7c72fb14], al; dec eax; push edx; stc; call dword ptr [eax + 0x56]; 
0x000993b7: add byte ptr [ebx - 0x7c72fb14], al; dec esp; and esi, esp; call dword ptr [eax - 0x73]; 
0x0016d824: add byte ptr [ebx - 0x7c74f714], al; mov al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0004f541: add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000cd701: add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000485af: add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c6d81: add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0012d3c6: add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x00044d16: add byte ptr [ebx - 0x7cb3dbac], cl; ret 0x8901; 
0x000ad697: add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x00050080: add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x0010bcb7: add byte ptr [ebx - 0x7cdfdbbc], cl; ret; 
0x00157113: add byte ptr [ebx - 0x7ce3db8c], cl; ret 0x8301; 
0x0014ab87: add byte ptr [ebx - 0x7ce3dbac], cl; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x001137f7: add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x001570e3: add byte ptr [ebx - 0x7cebdb8c], cl; ret 0x8301; 
0x000ff392: add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x001010ff: add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x0010dbcf: add byte ptr [ebx - 0x7cf7dbbc], cl; ret; 
0x0010098f: add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0004dadf: add byte ptr [ebx - 0x7cfb78a4], cl; ret; 
0x001634e6: add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x0008ccda: add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8cce8; ret; 
0x001763ff: add byte ptr [ebx - 0x7cfbdbbc], cl; inc eax; adc al, 4; mov eax, 1; ret; 
0x0008eaaf: add byte ptr [ebx - 0x7cfbdbbc], cl; pushal; or bl, bh; xor eax, eax; ret; 
0x0005e4dd: add byte ptr [ebx - 0x7cfbdbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x00059e57: add byte ptr [ebx - 0x7cfefbbe], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00121e5d: add byte ptr [ebx - 0x7d], dl; in al, dx; sbb al, 0x8b; xchg byte ptr [eax - 0x7affffbb], dl; ror byte ptr [edi], 0x84; ret; 
0x001a480a: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x000d884f: add byte ptr [ebx - 0x7ecbdba4], cl; ret; 
0x00137aeb: add byte ptr [ebx - 0x7f72e714], al; jb 0x137b5a; stc; call dword ptr [eax - 0x18]; 
0x0003d5db: add byte ptr [ebx - 0x7f72e714], al; movsb byte ptr es:[edi], byte ptr [esi]; test ecx, edi; call dword ptr [eax - 0x18]; 
0x001662e9: add byte ptr [ebx - 0x7f72eb14], al; inc edi; jae 0x1662eb; call dword ptr [eax + 0x6a]; 
0x00166c99: add byte ptr [ebx - 0x7f72eb14], al; jae 0x166c9b; call dword ptr [eax + 0x6a]; 
0x00165019: add byte ptr [ebx - 0x7f72eb14], al; jb 0x16501b; call dword ptr [eax + 0x6a]; 
0x00163839: add byte ptr [ebx - 0x7f72eb14], al; jl 0x1638b3; stc; call dword ptr [eax + 0x6a]; 
0x00167699: add byte ptr [ebx - 0x7f72eb14], al; jle 0x167714; stc; call dword ptr [eax + 0x6a]; 
0x001672e9: add byte ptr [ebx - 0x7f72eb14], al; jo 0x167364; stc; call dword ptr [eax + 0x6a]; 
0x00163c89: add byte ptr [ebx - 0x7f72eb14], al; mov dword ptr [edx - 7], esi; call dword ptr [eax + 0x6a]; 
0x00167929: add byte ptr [ebx - 0x7f72eb14], al; mov esi, dword ptr [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x00166949: add byte ptr [ebx - 0x7f72eb14], al; push ebp; jae 0x16694b; call dword ptr [eax + 0x6a]; 
0x00163f89: add byte ptr [ebx - 0x7f72eb14], al; xchg ebp, eax; jb 0x163f8b; call dword ptr [eax + 0x6a]; 
0x00167e89: add byte ptr [ebx - 0x7f72eb14], al; xchg edi, eax; jae 0x167e8b; call dword ptr [eax + 0x6a]; 
0x0016a976: add byte ptr [ebx - 0x7f], dl; ret; 
0x0013ffb7: add byte ptr [ebx - 0x877b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0005d151: add byte ptr [ebx - 0x8b63], cl; dec dword ptr [ebp - 0x6747f7d]; call dword ptr [eax - 0x73]; 
0x0005b602: add byte ptr [ebx - 0x8b63], cl; dec dword ptr [edi]; dec esi; ret 0xec83; 
0x001ab4c9: add byte ptr [ebx - 0x8b73], al; call dword ptr [eax]; 
0x001a80d4: add byte ptr [ebx - 0x8f63], cl; dec dword ptr [ebx - 0xa343]; call ebx; 
0x0005b33f: add byte ptr [ebx - 0x9343], cl; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x00080fe1: add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x001ab82f: add byte ptr [ebx - 0xa77b], cl; dec dword ptr [ecx - 0xa167bbb]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0007ae90: add byte ptr [ebx - 0xa8fb14], al; jne 0x7aea0; push esi; call dword ptr [ebx + 0x1c]; 
0x0007b5a7: add byte ptr [ebx - 0xa8fb14], al; jne 0x7b5b7; push esi; call dword ptr [ebx + 0x1c]; 
0x0007d19c: add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x000a472e: add byte ptr [ebx - 0xa9f714], al; jae 0xa475a; call eax; 
0x0007c7ad: add byte ptr [ebx - 0xa9fb14], al; jne 0x7c7bd; push edx; call dword ptr [ebx + 0x1c]; 
0x0007ce6f: add byte ptr [ebx - 0xacfb14], al; jne 0x7ce5b; push esi; call dword ptr [eax + 0x2c]; 
0x0007cf04: add byte ptr [ebx - 0xacfb14], al; jne 0x7cef0; push esi; call dword ptr [eax + 0x2c]; 
0x0003eb1f: add byte ptr [ebx - 0xaef714], al; je 0x3eb4b; dec esp; call eax; 
0x0016fb26: add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00134b1f: add byte ptr [ebx - 0xaff33c], al; jne 0x134adb; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013502c: add byte ptr [ebx - 0xaff33c], al; jne 0x134fd8; push ebx; call dword ptr [esi + 0x14]; 
0x000a4887: add byte ptr [ebx - 0xaff714], al; jae 0xa48b3; call edx; 
0x001403af: add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0009d2ff: add byte ptr [ebx - 0xf767f14], al; pop ebx; pop esi; pop edi; ret; 
0x00178409: add byte ptr [ebx - 0xf76cf3c], al; pop ebx; pop esi; pop edi; ret; 
0x0011fa7b: add byte ptr [ebx - 0xf76db3c], al; pop ebx; pop esi; ret; 
0x000c2538: add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x001480d1: add byte ptr [ebx - 0xf76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x000a9e65: add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00126d56: add byte ptr [ebx - 1], bh; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0010c07d: add byte ptr [ebx - 1], dl; je 0x10c0a6; push 0x10768e8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [eax - 0x77]; ret 0xc085; 
0x00028faf: add byte ptr [ebx - 1], dl; je 0x28fd8; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0007eab4: add byte ptr [ebx - 6], dl; jmp dword ptr [esi - 0x70]; 
0x000da76c: add byte ptr [ebx], 0; add byte ptr [ebx - 0x7c72f714], al; and al, 0x56; stc; call dword ptr [eax + 0x56]; 
0x0017fcb4: add byte ptr [ebx], 0; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x000344b3: add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0012fab7: add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x000b6b21: add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6c48: add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bfadc: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0018c04a: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018da44: add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018daa9: add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00170ae2: add byte ptr [ebx], al; test byte ptr [eax - 0x6c8d0], dl; jmp eax; 
0x0008d87f: add byte ptr [ebx], al; xchg byte ptr [eax], ah; or dword ptr [eax], eax; add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x6072; 
0x0016fe46: add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0008ae6f: add byte ptr [ebx], ch; push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x00099960: add byte ptr [ebx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0012e109: add byte ptr [ecx + 0x100bafe], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121aae: add byte ptr [ecx + 0x100c249c], cl; add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000bfd30: add byte ptr [ecx + 0x1063c7c3], al; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x000bfad6: add byte ptr [ecx + 0x106621c3], al; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x000be810: add byte ptr [ecx + 0x107863c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be305: add byte ptr [ecx + 0x107d6ec1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be2e0: add byte ptr [ecx + 0x107d93c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be2c0: add byte ptr [ecx + 0x107db3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be2a3: add byte ptr [ecx + 0x107dd0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be204: add byte ptr [ecx + 0x107defc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be276: add byte ptr [ecx + 0x107dfdc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be1e6: add byte ptr [ecx + 0x107e0dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be25f: add byte ptr [ecx + 0x107e14c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be244: add byte ptr [ecx + 0x107e2fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be1c1: add byte ptr [ecx + 0x107e32c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be222: add byte ptr [ecx + 0x107e51c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be197: add byte ptr [ecx + 0x107e5cc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be17e: add byte ptr [ecx + 0x107e75c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be15d: add byte ptr [ecx + 0x107e96c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be139: add byte ptr [ecx + 0x107ebac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be11b: add byte ptr [ecx + 0x107ed8c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be098: add byte ptr [ecx + 0x107f5bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012ec0a: add byte ptr [ecx + 0x108209c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0012e52a: add byte ptr [ecx + 0x1088e9c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0008412f: add byte ptr [ecx + 0x10890848], cl; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0012e03a: add byte ptr [ecx + 0x108dd9c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x0012d4c5: add byte ptr [ecx + 0x10994ec5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0011dc34: add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x000baee6: add byte ptr [ecx + 0x10b08dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000baec1: add byte ptr [ecx + 0x10b0b2c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bae97: add byte ptr [ecx + 0x10b0dcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bae7e: add byte ptr [ecx + 0x10b0f5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bae5d: add byte ptr [ecx + 0x10b116c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bae39: add byte ptr [ecx + 0x10b13ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bae1b: add byte ptr [ecx + 0x10b158c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000badff: add byte ptr [ecx + 0x10b174c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012bbe4: add byte ptr [ecx + 0x10b22fc2], al; add byte ptr [ebx - 0x48], dl; ret; 
0x0012a874: add byte ptr [ecx + 0x10c59fc2], al; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x000b8f70: add byte ptr [ecx + 0x10cf2fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8e8b: add byte ptr [ecx + 0x10d0a4c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8e78: add byte ptr [ecx + 0x10d0b7c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8e5c: add byte ptr [ecx + 0x10d0d3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8365: add byte ptr [ecx + 0x10db3ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8340: add byte ptr [ecx + 0x10db5fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8320: add byte ptr [ecx + 0x10db7fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8303: add byte ptr [ecx + 0x10db9cc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8264: add byte ptr [ecx + 0x10dbbbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b82d6: add byte ptr [ecx + 0x10dbc9c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b82bf: add byte ptr [ecx + 0x10dbe0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b82a4: add byte ptr [ecx + 0x10dbfbc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8282: add byte ptr [ecx + 0x10dc1dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8190: add byte ptr [ecx + 0x10dc8fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b8170: add byte ptr [ecx + 0x10dcafc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b814b: add byte ptr [ecx + 0x10dcd4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b7870: add byte ptr [ecx + 0x10e4cfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b778b: add byte ptr [ecx + 0x10e644c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b7778: add byte ptr [ecx + 0x10e657c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b775c: add byte ptr [ecx + 0x10e673c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6d25: add byte ptr [ecx + 0x10f01ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6d00: add byte ptr [ecx + 0x10f03fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6ce0: add byte ptr [ecx + 0x10f05fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6cc3: add byte ptr [ecx + 0x10f07cc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6c24: add byte ptr [ecx + 0x10f09bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6c96: add byte ptr [ecx + 0x10f0a9c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6c7f: add byte ptr [ecx + 0x10f0c0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6c64: add byte ptr [ecx + 0x10f0dbc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6c42: add byte ptr [ecx + 0x10f0fdc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6b60: add byte ptr [ecx + 0x10f15fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6b40: add byte ptr [ecx + 0x10f17fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6b1b: add byte ptr [ecx + 0x10f1a4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012077d: add byte ptr [ecx + 0x116696c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0011cbff: add byte ptr [ecx + 0x11a214c6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c934: add byte ptr [ecx + 0x11a4dfc2], al; add byte ptr [ebx - 0x48], dl; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0017d68d: add byte ptr [ecx + 0x11ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001126ff: add byte ptr [ecx + 0x124714c6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e5e51: add byte ptr [ecx + 0x13c248c], cl; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x000f9f14: add byte ptr [ecx + 0x13ceffc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000f790a: add byte ptr [ecx + 0x13f509c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x00151402: add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0004a508: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00140b7a: add byte ptr [ecx + 0x15cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0017bc46: add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x00150194: add byte ptr [ecx + 0x16cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00112247: add byte ptr [ecx + 0x18c24ac], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0009f675: add byte ptr [ecx + 0x19779ec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0009e6b6: add byte ptr [ecx + 0x19875dc2], al; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0009e674: add byte ptr [ecx + 0x19879fc1], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x0009e624: add byte ptr [ecx + 0x1987efc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x9e640; ret; 
0x0009e5e4: add byte ptr [ecx + 0x19882fc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x9e600; ret; 
0x00112419: add byte ptr [ecx + 0x19cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d7dce: add byte ptr [ecx + 0x19e85052], bl; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012d0ff: add byte ptr [ecx + 0x1a1b8cf], cl; add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0008ccd4: add byte ptr [ecx + 0x1aa13fc2], al; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8cce8; ret; 
0x0008618b: add byte ptr [ecx + 0x1b0c88c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00078327: add byte ptr [ecx + 0x1beaecc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0009fe91: add byte ptr [ecx + 0x1c829f2], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x000331a5: add byte ptr [ecx + 0x203c6ec5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000f7dd2: add byte ptr [ecx + 0x23683efa], al; xchg ecx, eax; jne 0xf7e40; ret; 
0x00064056: add byte ptr [ecx + 0x2444c7cf], cl; inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00117f77: add byte ptr [ecx + 0x244c8bc6], cl; cmp byte ptr [ebx - 0x6bf0fc02], al; ret 0x98e9; 
0x000ce138: add byte ptr [ecx + 0x246c89f9], cl; adc bl, dl; call 0xa83165ce; add byte ptr [eax], al; add cl, ch; ret; 
0x0009d8ac: add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x000851b6: add byte ptr [ecx + 0x247c8beb], cl; or al, 0x8d; xchg ebx, esi; dec esi; stc; call dword ptr [eax + 0x56]; 
0x0010aeb5: add byte ptr [ecx + 0x24948be9], cl; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed745: add byte ptr [ecx + 0x24c4830a], cl; pop ebx; pop esi; ret; 
0x0017fcb7: add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x00149e65: add byte ptr [ecx + 0x2bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00081266: add byte ptr [ecx + 0x2bf0e9c3], cl; cli; jmp dword ptr [esi - 0x70]; 
0x0012c517: add byte ptr [ecx + 0x31242444], cl; shr byte ptr [edx], 0x8d; xchg esp, esp; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0009254b: add byte ptr [ecx + 0x31582444], cl; rcl byte ptr [edx - 0x18], 0xd8; ret 0xffff; 
0x000b0fbf: add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x0011eb7a: add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100f1d: add byte ptr [ecx + 0x388cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00061616: add byte ptr [ecx + 0x391c246c], cl; ret; 
0x0006cf06: add byte ptr [ecx + 0x3920246c], cl; ret; 
0x00126847: add byte ptr [ecx + 0x39d8f7f0], cl; ret; 
0x000ca6f0: add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x0008eba8: add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 7], dh; ret; 
0x00105541: add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x000a9847: add byte ptr [ecx + 0x4428d02], cl; pop ebx; pop esi; ret; 
0x000be44d: add byte ptr [ecx + 0x448b0750], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bafda: add byte ptr [ecx + 0x448b0750], cl; and al, 8; pop esi; ret; 
0x000be46d: add byte ptr [ecx + 0x448b0850], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000baffa: add byte ptr [ecx + 0x448b0850], cl; and al, 8; pop esi; ret; 
0x000be54d: add byte ptr [ecx + 0x448b0f48], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb0ca: add byte ptr [ecx + 0x448b0f48], cl; and al, 8; pop esi; ret; 
0x000be56d: add byte ptr [ecx + 0x448b1048], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb0ea: add byte ptr [ecx + 0x448b1048], cl; and al, 8; pop esi; ret; 
0x0015cb47: add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x00040d5e: add byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005a03c: add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x000b0f9f: add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000277c1: add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x00047008: add byte ptr [ecx + 0x45cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001491c3: add byte ptr [ecx + 0x46cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000da085: add byte ptr [ecx + 0x4708910], cl; pop ebx; pop esi; pop edi; ret; 
0x0006edc1: add byte ptr [ecx + 0x4acc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007f627: add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0008c1be: add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000dcb0d: add byte ptr [ecx + 0x4c48310], cl; xor eax, eax; pop ebx; pop esi; ret; 
0x0011f903: add byte ptr [ecx + 0x4c483d8], cl; pop ebx; pop esi; ret; 
0x000631a3: add byte ptr [ecx + 0x4ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00139ed9: add byte ptr [ecx + 0x4f890457], cl; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x000d88d5: add byte ptr [ecx + 0x50342444], cl; mov eax, dword ptr [esp + 0x78]; call eax; 
0x00081771: add byte ptr [ecx + 0x5052016a], bl; push ebx; call dword ptr [edi + 0x40]; 
0x001701d3: add byte ptr [ecx + 0x51890841], cl; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0008bbeb: add byte ptr [ecx + 0x52], dl; call 0x17dfa0; add esp, 0x1c; ret; 
0x0011e8bd: add byte ptr [ecx + 0x5401], bh; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x0011eb43: add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00078018: add byte ptr [ecx + 0x548b0850], cl; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x001734c1: add byte ptr [ecx + 0x56cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000b762f: add byte ptr [ecx + 0x57896617], cl; add al, 0x5f; pop esi; pop ebx; ret; 
0x0009f1d5: add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x0007ab1e: add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0007fbb8: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007fa68: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00033c75: add byte ptr [ecx + 0x5b108931], cl; pop esi; pop edi; ret; 
0x0018d6b0: add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000b787f: add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000a9787: add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00085f27: add byte ptr [ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x000d7d8b: add byte ptr [ecx + 0x5ce85052], bl; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00054292: add byte ptr [ecx + 0x5e5b047b], cl; pop edi; pop ebp; ret; 
0x000542c6: add byte ptr [ecx + 0x5f5e5b16], cl; pop ebp; ret; 
0x000a4ed3: add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x001129ff: add byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x0017be1e: add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x00065120: add byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x0013081a: add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000e5f68: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x00039158: add byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x00060d68: add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0005e923: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x000a986b: add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x000bb10a: add byte ptr [ecx + 0x70881048], cl; adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x001ad980: add byte ptr [ecx + 0x74891134], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000c08fb: add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00111d6f: add byte ptr [ecx + 0x7a892072], cl; and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x0009517f: add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x001a9af0: add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0012a018: add byte ptr [ecx + 0x7c891a3c], cl; sbb al, byte ptr [ebx + eax*4]; ret; 
0x00129c09: add byte ptr [ecx + 0x7fffffff], bh; mov esi, 5; call dword ptr gs:[0x10]; 
0x00089ecf: add byte ptr [ecx + 0x803c48], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x89ed0; ret; 
0x00096323: add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008d5a8: add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008ca93: add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008dd63: add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0017ff75: add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000910e6: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008d665: add byte ptr [ecx + 0x81], bh; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000963c0: add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008dd92: add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00093e7d: add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000eac03: add byte ptr [ecx + 0x89cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015bd2b: add byte ptr [ecx + 0x8bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00061604: add byte ptr [ecx + 0x8fcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008d885: add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x6072; 
0x0008efb4: add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009f2f8: add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x1988f37a], cl; call dword ptr [eax + 0x57]; 
0x00087e1a: add byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003b0f9: add byte ptr [ecx + 0xa024bc], al; add byte ptr [eax], al; push eax; ret; 
0x00171a5b: add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00157ebf: add byte ptr [ecx + 0xa178b7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x001099c3: add byte ptr [ecx + 0xac2484], cl; add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00109c65: add byte ptr [ecx + 0xac24bc], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007c081: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c4ad: add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00172f37: add byte ptr [ecx + 0xb4a9], cl; add bl, ch; ret; 
0x0017bc40: add byte ptr [ecx + 0xbb1d3c3], al; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x00027dda: add byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e7131: add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00042bf8: add byte ptr [ecx + 0xccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ec65a: add byte ptr [ecx + 0xd0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0015c9f5: add byte ptr [ecx + 0xda41ec3], al; add byte ptr [ebx - 0x7c72ef14], al; lodsb al, byte ptr [esi]; pop ebx; bnd call dword ptr [eax - 0x73]; 
0x001513fc: add byte ptr [ecx + 0xe5a17c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0015134d: add byte ptr [ecx + 0xe5ac6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0014b8b7: add byte ptr [ecx + 0xeb55cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000462cd: add byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001438b7: add byte ptr [ecx + 0xf355cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00077aa7: add byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x000367d0: add byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008f48b: add byte ptr [ecx + 0xfd231d0], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x00095dd4: add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001854ba: add byte ptr [ecx + 1], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0018dd52: add byte ptr [ecx + 4], ch; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000958c9: add byte ptr [ecx + 7], bh; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x000961a7: add byte ptr [ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x0003c482: add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x00095590: add byte ptr [ecx + 8], bh; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000bfa94: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000bf8f0: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x000c07d2: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x000536a4: add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00098418: add byte ptr [ecx + ebx*8 - 0x77], dh; ret 0xe083; 
0x00053bc4: add byte ptr [ecx + edi - 0x7d], dh; ret; 
0x001aa104: add byte ptr [ecx + edi*2 + 0x39], dh; ret; 
0x00136661: add byte ptr [ecx - 0x11b43], cl; dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x0015141e: add byte ptr [ecx - 0x12f7b], cl; dec dword ptr [ecx + 0x27838dc2]; inc ebp; stc; call dword ptr [eax + 0x52]; 
0x0016f815: add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0016f831: add byte ptr [ecx - 0x13b7b], cl; call dword ptr [eax - 0x18]; 
0x00151408: add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000f7910: add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x0017bc4c: add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x000ca3ce: add byte ptr [ecx - 0x16cfdbbc], cl; pop esp; idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000ce2b3: add byte ptr [ecx - 0x16d7dbbc], cl; inc ebx; idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x00095007: add byte ptr [ecx - 0x16f3dbbc], cl; ret; 
0x000a391b: add byte ptr [ecx - 0x170f7616], cl; pop ebx; ret; 
0x00183f4e: add byte ptr [ecx - 0x17a9afae], bl; cwde; mov edi, gs; jmp dword ptr [ecx]; 
0x00140609: add byte ptr [ecx - 0x17dbdba4], cl; xchg ebp, eax; sub ebp, esi; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x00115db6: add byte ptr [ecx - 0x18], dl; ret; 
0x00093bb0: add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x0012f615: add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0009646a: add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xb8870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00058916: add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x0005805c: add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax - 0x73]; 
0x000d4cd7: add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000d571c: add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x00176039: add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x00176009: add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x0009dcee: add byte ptr [ecx - 0x38d3dbac], cl; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007056f: add byte ptr [ecx - 0x38fbdbb4], cl; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006f799: add byte ptr [ecx - 0x38fbdbb4], cl; inc esp; and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0008c211: add byte ptr [ecx - 0x3b7cf3bd], cl; add al, 0x5b; pop esi; ret; 
0x00059e6d: add byte ptr [ecx - 0x3b7cf7a6], cl; add al, 0x5b; pop esi; ret; 
0x000975a1: add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x0008eca0: add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x00145131: add byte ptr [ecx - 0x3fcef3b5], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00093813: add byte ptr [ecx - 0x3fcef7bd], cl; pop ebx; pop esi; pop edi; ret; 
0x000d7e2b: add byte ptr [ecx - 0x4317afae], bl; add byte ptr es:[eax], al; add esp, 0x1c; ret; 
0x00148bc7: add byte ptr [ecx - 0x44f7b], cl; call dword ptr [edi - 0x18]; 
0x001434b0: add byte ptr [ecx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e4f15: add byte ptr [ecx - 0x4527763d], cl; dec ebx; add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x000d7d2e: add byte ptr [ecx - 0x4617afae], bl; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ee795: add byte ptr [ecx - 0x46f7b], cl; dec dword ptr [ebx + 0x458b084d]; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0003d250: add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e601: add byte ptr [ecx - 0x47e7dbbc], cl; jne 0x12e609; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00127511: add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; 
0x0013f5fa: add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x001273ca: add byte ptr [ecx - 0x49f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000ca6e8: add byte ptr [ecx - 0x4d7bf033], cl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x00073df1: add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x0012f0f7: add byte ptr [ecx - 0x4fb7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00074012: add byte ptr [ecx - 0x50343], cl; jmp dword ptr [ebp - 0x75]; 
0x000716c6: add byte ptr [ecx - 0x54f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000654a6: add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x0006928d: add byte ptr [ecx - 0x59373], cl; call dword ptr [ebx - 0x75]; 
0x000653d5: add byte ptr [ecx - 0x5a77b], cl; dec dword ptr [ecx - 0x5f363]; jmp dword ptr [ebp - 0x5f]; 
0x0008caf0: add byte ptr [ecx - 0x5c9adfb0], cl; jl 0x8caf8; add byte ptr [eax], al; ret; 
0x0008cb27: add byte ptr [ecx - 0x5c9af3b0], cl; js 0x8cb2f; add byte ptr [eax], al; ret; 
0x0004de6c: add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0002f3ba: add byte ptr [ecx - 0x7287dbbc], cl; add dword ptr [ecx + 0x3b], -7; call dword ptr [eax - 0x18]; 
0x00165422: add byte ptr [ecx - 0x72a7dbbc], cl; xor ebx, 0x72; stc; call dword ptr [eax - 0x18]; 
0x0004e90e: add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x0004f602: add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x0011a281: add byte ptr [ecx - 0x72b7dbbc], cl; adc esp, 0x14; stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x0003f037: add byte ptr [ecx - 0x72bbdbbc], cl; test esp, ecx; jg 0x3f021; call dword ptr [eax - 0x73]; 
0x0002cd4c: add byte ptr [ecx - 0x72c7dbbc], cl; inc edi; and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x00027a86: add byte ptr [ecx - 0x72cbdbac], cl; xchg edi, eax; cmp ecx, edi; call dword ptr [edx + 0x50]; 
0x0002aaec: add byte ptr [ecx - 0x72cbdbbc], cl; inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x00048665: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x00047945: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004baf6: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x7de9; 
0x0004ae31: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x00029fcc: add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x0003edf7: add byte ptr [ecx - 0x72d7dbbc], cl; or dword ptr [edi + edi], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0009ff2e: add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x0009f5b5: add byte ptr [ecx - 0x74207612], cl; dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x0005d35d: add byte ptr [ecx - 0x7483dbb4], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x00129653: add byte ptr [ecx - 0x7497dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0008cae6: add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0011ef9b: add byte ptr [ecx - 0x74b3dbac], cl; push esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00138ba2: add byte ptr [ecx - 0x74bbdb8c], cl; je 0x138bce; push 0x27838d50; push eax; stc; call dword ptr [eax - 0x18]; 
0x0002dd1d: add byte ptr [ecx - 0x74c3db94], cl; jl 0x2dd49; adc byte ptr [ecx - 0x76f3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x000dbd4b: add byte ptr [ecx - 0x74e3dbac], cl; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4eb: add byte ptr [ecx - 0x74e3dbac], cl; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000813fa: add byte ptr [ecx - 0x74efdb8c], cl; inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0012d05f: add byte ptr [ecx - 0x74efdbbc], cl; inc esp; and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010898b: add byte ptr [ecx - 0x74f3dbac], cl; push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009ae5f: add byte ptr [ecx - 0x7576efbf], cl; test al, 0x3b; add byte ptr [eax], al; ret; 
0x0012d106: add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x0014db4a: add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x0007e40f: add byte ptr [ecx - 0x76207622], cl; ret 0xcb89; 
0x000e60b7: add byte ptr [ecx - 0x7693dba4], cl; ret; 
0x0002d29f: add byte ptr [ecx - 0x769fdbbc], cl; ret 0x9de9; 
0x000c3033: add byte ptr [ecx - 0x76a7dbac], cl; ret 0x448b; 
0x0011f30b: add byte ptr [ecx - 0x76b3dba4], cl; ret; 
0x000300a4: add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x000a5c8c: add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x00088ab8: add byte ptr [ecx - 0x76c7dba4], cl; ret; 
0x0004e919: add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x0004f60d: add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x00071048: add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x44c7; 
0x000cce61: add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x8d2e; 
0x000cd7f2: add byte ptr [ecx - 0x76cfdbbc], cl; ret 0xb0e9; 
0x000a009c: add byte ptr [ecx - 0x76d3dba4], cl; ret; 
0x00168ec8: add byte ptr [ecx - 0x76d7dba4], cl; ret; 
0x0009b988: add byte ptr [ecx - 0x76d7dbb4], cl; retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x000c5cf9: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x448b; 
0x000ca023: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x7ce9; 
0x000c965f: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x8d2e; 
0x000552d3: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xc483; 
0x000c6e66: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xcce9; 
0x00099837: add byte ptr [ecx - 0x76dfdba4], cl; ret; 
0x00048670: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0006ffea: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x0004bb01: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x7de9; 
0x00047950: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0016f388: add byte ptr [ecx - 0x76e3dba4], cl; ret; 
0x00030096: add byte ptr [ecx - 0x76e3dbbc], cl; lds ecx, ptr [ecx + 0xbe8243c]; mov es, word ptr [edi]; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x000a2bdf: add byte ptr [ecx - 0x76e7743a], cl; ret 0xeec1; 
0x0003f682: add byte ptr [ecx - 0x76e7dbbc], cl; ret; 
0x0009f027: add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x00040efa: add byte ptr [ecx - 0x76efdbb4], cl; ret; 
0x0009258a: add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xc889; 
0x000c9c68: add byte ptr [ecx - 0x76f7dbac], cl; ret 0xf129; 
0x0016d56d: add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0012d4f3: add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x12d484; ret 0x448b; 
0x00027ab2: add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00093a47: add byte ptr [ecx - 0x77cf7b6], cl; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0012f103: add byte ptr [ecx - 0x78721bbb], cl; clc; stc; call dword ptr [eax - 0x18]; 
0x001434a7: add byte ptr [ecx - 0x78741bbb], cl; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x001273c1: add byte ptr [ecx - 0x79741bbb], cl; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x49f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00101582: add byte ptr [ecx - 0x7aafdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0016367f: add byte ptr [ecx - 0x7c2e7623], cl; ret; 
0x0002972f: add byte ptr [ecx - 0x7c3c76f5], cl; ret 0x3904; 
0x0013f4c7: add byte ptr [ecx - 0x7c721bbb], cl; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0016e0af: add byte ptr [ecx - 0x7c72af3a], cl; xor dword ptr [ecx + edi*8 - 1], 0x8d50056a; xor dword ptr [esp + eax*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00170a18: add byte ptr [ecx - 0x7c72af3b], cl; xor dword ptr [ecx + edi*8 - 1], 0x8d50056a; xor dword ptr [esp + eax*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0014a68d: add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x000791fc: add byte ptr [ecx - 0x7c968b38], cl; jmp dword ptr [eax]; 
0x00036bef: add byte ptr [ecx - 0x7cbbdb94], cl; ret; 
0x000dd19f: add byte ptr [ecx - 0x7cc7dbbc], cl; inc esp; and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x0006e124: add byte ptr [ecx - 0x7ccfdbac], cl; ret 0x8904; 
0x000991bf: add byte ptr [ecx - 0x7ce3dbac], cl; ret; 
0x0018270a: add byte ptr [ecx - 0x7cef79a4], cl; rol byte ptr [ecx], 0x83; ret 0x8308; 
0x0009274f: add byte ptr [ecx - 0x7cefdbb4], cl; in al, dx; or byte ptr [ebx - 0x72f3dba4], cl; and dword ptr [edi + 0x39], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0016c8c7: add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax - 1]; 
0x000a09e7: add byte ptr [ecx - 0x7cf7743d], cl; ret 0xc101; 
0x0016897b: add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00087c27: add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x001716ce: add byte ptr [ecx - 0x7e7c723b], cl; je 0x1716cf; call dword ptr [ecx + 0x6a]; 
0x000cc0cc: add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c570c: add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x00040110: add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0013fe76: add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x0010a4e1: add byte ptr [ecx - 0x8f7b], cl; dec dword ptr [ebp - 0x6a77b79]; call dword ptr [eax - 0x18]; 
0x000358b3: add byte ptr [ecx - 0x977b], cl; call dword ptr [eax - 0x73]; 
0x00084b93: add byte ptr [ecx - 0x988163d], cl; stc; jmp dword ptr [esi - 0x70]; 
0x0010a4d8: add byte ptr [ecx - 0x9b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00095186: add byte ptr [ecx - 0x9cefba9], cl; xor edx, edx; call dword ptr gs:[0x10]; 
0x000a3164: add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00168197: add byte ptr [ecx - 0xa9f3ba], cl; je 0x1681c3; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0017a3d6: add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x000d1d27: add byte ptr [ecx - 0xf76f7b0], cl; pop ebx; pop esi; ret; 
0x00109f19: add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000c04eb: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x000a9e08: add byte ptr [ecx*4 - 0x940936e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a7b18: add byte ptr [ecx*4 - 0x944736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9bd8: add byte ptr [ecx*4 - 0x947936e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00059f8f: add byte ptr [ecx], 0; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x0013e69f: add byte ptr [ecx], 0x69; stc; call dword ptr [eax + 0x6a]; 
0x0014440f: add byte ptr [ecx], ah; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000c0728: add byte ptr [ecx], ah; ret 0x2474; 
0x00031430: add byte ptr [ecx], ah; ret; 
0x0008b20b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008dd5f: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00199beb: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ecx; pop edx; bnd call dword ptr [ebx - 0x18]; 
0x0008dc64: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000344b0: add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x0012a4b8: add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a475: add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011eca5: add byte ptr [ecx], al; add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000c0657: add byte ptr [ecx], al; add byte ptr [eax], al; or cl, cl; jne 0xc0661; xor eax, eax; ret; 
0x0005f728: add byte ptr [ecx], al; add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000341ac: add byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000c05a7: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x0008b1f5: add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0008eb23: add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x00136464: add byte ptr [ecx], al; call eax; 
0x00136960: add byte ptr [ecx], al; call ecx; 
0x0013669a: add byte ptr [ecx], al; call edx; 
0x000be8d3: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0013bd54: add byte ptr [ecx], al; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x0009f45c: add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000c099e: add byte ptr [ecx], al; je 0xc09a9; or dword ptr [eax + 0x3c90], 1; xor eax, eax; pop ebx; ret; 
0x0009f261: add byte ptr [ecx], al; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x000a6e48: add byte ptr [ecx], al; lea edx, [edx - 0xaa774]; cmovne eax, edx; ret; 
0x00138908: add byte ptr [ecx], al; lea edx, [edx - 0xaa784]; cmovne eax, edx; ret; 
0x00180e0f: add byte ptr [ecx], al; ret 0x1deb; 
0x000fe968: add byte ptr [ecx], al; ret 0x4489; 
0x0014aebf: add byte ptr [ecx], al; ret 0x5052; 
0x000d802b: add byte ptr [ecx], al; ret 0x848b; 
0x000624a7: add byte ptr [ecx], al; ret; 
0x0004c71e: add byte ptr [ecx], al; rol dword ptr [ebx - 0x7bf0e808], cl; imul eax, dword ptr [ecx], 0x17ba0000; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000ca413: add byte ptr [ecx], al; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x000c72d1: add byte ptr [ecx], al; ror byte ptr [ebx + 0x296c2454], 1; ret; 
0x0003b53f: add byte ptr [ecx], al; ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000c09a7: add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x001583bd: add byte ptr [ecx], bh; inc edx; add al, 0xf; test byte ptr [ecx - 0x7d000000], al; ret 0x8014; 
0x00029197: add byte ptr [ecx], bh; lds ecx, ptr [edi]; test dword ptr [ebp - 0x74ffffff], ebx; jl 0x291c7; sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax - 0x73]; 
0x0011811b: add byte ptr [ecx], bh; ret 0x1772; 
0x001427f5: add byte ptr [ecx], bh; ret 0x1988; 
0x000279fa: add byte ptr [ecx], bh; ret 0x420f; 
0x00039fd2: add byte ptr [ecx], bh; ret 0x430f; 
0x000d9b45: add byte ptr [ecx], bh; ret 0x470f; 
0x0011fae9: add byte ptr [ecx], bh; ret 0x4e0f; 
0x00094df7: add byte ptr [ecx], bh; ret 0x4f0f; 
0x0014bd37: add byte ptr [ecx], bh; ret 0x5473; 
0x0008d88b: add byte ptr [ecx], bh; ret 0x6072; 
0x00097096: add byte ptr [ecx], bh; ret 0x6574; 
0x000977e1: add byte ptr [ecx], bh; ret 0x6a74; 
0x00096709: add byte ptr [ecx], bh; ret 0x7274; 
0x00087a58: add byte ptr [ecx], bh; ret 0x820f; 
0x00096480: add byte ptr [ecx], bh; ret 0x840f; 
0x00069719: add byte ptr [ecx], bh; ret 0x850f; 
0x0014dc3d: add byte ptr [ecx], bh; ret 0xa875; 
0x000a70d8: add byte ptr [ecx], bh; ret 0xc072; 
0x000a7195: add byte ptr [ecx], bh; ret 0xc372; 
0x000ebda5: add byte ptr [ecx], bh; ret 0xd675; 
0x0013c7a7: add byte ptr [ecx], bh; ret 0xe072; 
0x00157ec5: add byte ptr [ecx], bh; ret 0xe74; 
0x00038da5: add byte ptr [ecx], bh; ret; 
0x00130056: add byte ptr [ecx], bh; retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x00150baf: add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x0010aabb: add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xfae9; 
0x00049674: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x0013c38c: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x000791d4: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x789; 
0x0015684e: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x00172a02: add byte ptr [ecx], bh; sal byte ptr [ecx + ecx - 0x7d], 1; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013c427: add byte ptr [ecx], bh; sal dword ptr [eax + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x00024ae8: add byte ptr [ecx], bh; xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000d8a07: add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000f9cc2: add byte ptr [ecx], ch; aad 0x89; fnstcw word ptr [ecx]; ret; 
0x001765dc: add byte ptr [ecx], ch; cld; call dword ptr [ebx - 0x7d]; 
0x000fd8d3: add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x86eb; 
0x000c315a: add byte ptr [ecx], ch; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000a74c9: add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000d1275: add byte ptr [ecx], ch; ret 0x328b; 
0x0005637b: add byte ptr [ecx], ch; ret 0x3b8; 
0x000e0360: add byte ptr [ecx], ch; ret 0x448b; 
0x001a9a9e: add byte ptr [ecx], ch; ret 0x458b; 
0x001ae95b: add byte ptr [ecx], ch; ret 0x45c7; 
0x000e3975: add byte ptr [ecx], ch; ret 0x468b; 
0x000e1297: add byte ptr [ecx], ch; ret 0x478b; 
0x000a0e0f: add byte ptr [ecx], ch; ret 0x48d; 
0x0004c72e: add byte ptr [ecx], ch; ret 0x5152; 
0x000e1d3d: add byte ptr [ecx], ch; ret 0x748d; 
0x000d0082: add byte ptr [ecx], ch; ret 0xa8b; 
0x000ded6a: add byte ptr [ecx], ch; ret 0xbe0f; 
0x00139b6d: add byte ptr [ecx], ch; ret 0xc031; 
0x000734b6: add byte ptr [ecx], ch; ret 0xca39; 
0x000495a0: add byte ptr [ecx], ch; ret 0xcb29; 
0x0002f1a9: add byte ptr [ecx], ch; ret 0xd089; 
0x000d96d3: add byte ptr [ecx], ch; ret 0xd129; 
0x00069ebe: add byte ptr [ecx], ch; ret 0xd189; 
0x000aad59: add byte ptr [ecx], ch; ret 0xd301; 
0x000abd37: add byte ptr [ecx], ch; ret 0xd601; 
0x000a80b9: add byte ptr [ecx], ch; ret 0xd701; 
0x000a5827: add byte ptr [ecx], ch; ret 0xd801; 
0x001a7d2c: add byte ptr [ecx], ch; ret 0xe2c1; 
0x00025225: add byte ptr [ecx], ch; ret 0xe3d3; 
0x000e429b: add byte ptr [ecx], ch; ret 0xf089; 
0x000dc9d6: add byte ptr [ecx], ch; ret 0xf889; 
0x0007520e: add byte ptr [ecx], ch; ret 0xfa39; 
0x0002991b: add byte ptr [ecx], ch; ret 0xfa83; 
0x00028d36: add byte ptr [ecx], ch; ret; 
0x00064219: add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x000e067d: add byte ptr [ecx], ch; retf 0x490f; ret 0xc101; 
0x0003b609: add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed7731; or eax, ecx; ret; 
0x000257b8: add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00082f38: add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x001aa491: add byte ptr [ecx], cl; ret 0x550b; 
0x00031957: add byte ptr [ecx], cl; ret 0x840f; 
0x000318f1: add byte ptr [ecx], cl; ret 0x850f; 
0x00049a22: add byte ptr [ecx], cl; ret 0x9d74; 
0x000c7de2: add byte ptr [ecx], cl; ret 0x9e74; 
0x0002ebb9: add byte ptr [ecx], cl; ret; 
0x0007ace8: add byte ptr [ecx], cl; ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x0009798d: add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x000d1baf: add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x001a73b4: add byte ptr [ecx], dh; fild dword ptr [ebx - 0x177ce010]; or al, 0x89; ret 0xe283; 
0x00150f5a: add byte ptr [ecx], dh; fild dword ptr [ebx - 0x2776fb3c]; pop ebx; pop esi; ret; 
0x0012830f: add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0011226d: add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x000910b0: add byte ptr [ecx], dh; fld xword ptr [esi]; lea esi, [esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00024d65: add byte ptr [ecx], dh; fld xword ptr [esi]; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00081d7f: add byte ptr [ecx], dh; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x0008db59: add byte ptr [ecx], dh; idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x000963c5: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ed8c: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008dd97: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001854bf: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x0008f583: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000cfe8a: add byte ptr [ecx], dh; jmp dword ptr [ebp - 0x75]; 
0x00098638: add byte ptr [ecx], dh; leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x0004250f: add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x000934c8: add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009bc68: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000a36bc: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00092ce6: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x000a376b: add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x00156ce7: add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00049def: add byte ptr [ecx], dh; rol byte ptr [ecx - 0x7fffff19], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0010841f: add byte ptr [ecx], dh; rol byte ptr [edi + 0x3fac87], 0; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x0004905b: add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00092d45: add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x0008e741: add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x0003d72b: add byte ptr [ecx], dh; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x0004206d: add byte ptr [ecx], dh; sal byte ptr [ecx], cl; fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00109f7a: add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0011d75f: add byte ptr [ecx], dh; shr bl, cl; ret; 
0x0012ecdf: add byte ptr [ecx], dh; test byte ptr [eax + 0x18bb01ce], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008f30f: add byte ptr [ecx], dh; test byte ptr [ebx - 0x7ffbdbb4], -0xf; add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0017bedf: add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00095b4b: add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001848bc: add byte ptr [edi + 0x11], dh; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00088905: add byte ptr [edi + 0x16], dh; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0008b299: add byte ptr [edi + 0x1a7482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0003ebe8: add byte ptr [edi + 0x1fa8317], al; jg 0x3ecb0; call eax; 
0x000899fc: add byte ptr [edi + 0x21], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007e2f4: add byte ptr [edi + 0x21], dh; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00085d30: add byte ptr [edi + 0x25], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00088256: add byte ptr [edi + 0x27], dh; push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0007bf3d: add byte ptr [edi + 0x29], dh; sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007e633: add byte ptr [edi + 0x29], dh; sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007fdae: add byte ptr [edi + 0x2f], dh; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0007f60c: add byte ptr [edi + 0x31], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0012e040: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x0012d4cb: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001726e5: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x000331ab: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x00077fae: add byte ptr [edi + 0x37], dh; sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0008a1c1: add byte ptr [edi + 0x3c], dh; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x00086a19: add byte ptr [edi + 0x44], dh; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000860f7: add byte ptr [edi + 0x46], dh; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0014f40c: add byte ptr [edi + 0x53], dl; call edx; 
0x0008813d: add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x0007e205: add byte ptr [edi + 0x58], dh; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x000b0a81: add byte ptr [edi + 0x5b], bl; ret; 
0x0002506f: add byte ptr [edi + 0x5d], bl; jmp eax; 
0x00151ac6: add byte ptr [edi + 0x5d], bl; ret; 
0x000b6d3f: add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d6b54: add byte ptr [edi + 0x5e], bl; ret; 
0x0008994e: add byte ptr [edi + 0x5f], dh; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00085f87: add byte ptr [edi + 0x66], dh; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00087507: add byte ptr [edi + 0x66], dh; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0007a3b9: add byte ptr [edi + 0x6c], dh; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00086aff: add byte ptr [edi + 0x6e], dh; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x001662ee: add byte ptr [edi + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x001663ce: add byte ptr [edi + 0x73], 0xf9; call dword ptr [eax - 0x18]; 
0x0011bf13: add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000d6cd4: add byte ptr [edi + 2], bh; neg eax; ret; 
0x0019e934: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0019c0a4: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x001999f4: add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x001a0664: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x001a0104: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x001981b4: add byte ptr [edi + 2], dh; neg eax; ret; 
0x001a0c8a: add byte ptr [edi + 3], bh; neg eax; ret; 
0x0019f352: add byte ptr [edi + 3], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008ebae: add byte ptr [edi + 7], dh; ret; 
0x00137bc6: add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x0011c5e3: add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x001a0fb5: add byte ptr [edi + 8], bh; neg eax; ret; 
0x001a4fc4: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; pop ebx; ret; 
0x000d6ca4: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x00152a45: add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x001a7e3f: add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x9584; 
0x00109c8c: add byte ptr [edi + edi*2 - 0x7d], dh; jmp dword ptr [esi]; 
0x0017560f: add byte ptr [edi - 0x18], dl; call esi; 
0x001a48a4: add byte ptr [edi - 0x73000000], 0x40; add al, 0x5f; ret; 
0x001a3884: add byte ptr [edi - 0x73000000], 0x47; add al, 0x5f; ret; 
0x0016f5ea: add byte ptr [edi - 0x75], dl; inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x001726e2: add byte ptr [edi], ch; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x00059d2a: add byte ptr [edi], ch; jbe 0x59cb9; ret 0x40c7; 
0x00151b9a: add byte ptr [edi], ch; je 0x151c02; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00151dba: add byte ptr [edi], ch; je 0x151e22; mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x00063cba: add byte ptr [edi], cl; dec ecx; ret 0x4489; 
0x000e1de7: add byte ptr [edi], cl; dec ecx; ret 0xc8d; 
0x000563ac: add byte ptr [edi], cl; dec edi; ret 0xdb31; 
0x0010a892: add byte ptr [edi], cl; dec esi; ret 0x25e9; 
0x0010195f: add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x0009b641: add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0003deea: add byte ptr [edi], cl; dec esi; ret; 
0x001016bb: add byte ptr [edi], cl; dec esp; ret; 
0x0012442a: add byte ptr [edi], cl; inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x0009b552: add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x0008eaa4: add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x0012206f: add byte ptr [edi], cl; inc ebp; ret; 
0x000d9973: add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00093097: add byte ptr [edi], cl; inc edi; ret 0x4489; 
0x0009e69d: add byte ptr [edi], cl; inc edi; ret 0x8188; 
0x00097c4a: add byte ptr [edi], cl; inc edi; ret 0x90c3; 
0x000984ce: add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x0013cdbb: add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x000d79e2: add byte ptr [edi], cl; inc edx; ret 0xc501; 
0x00096218: add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x000c0db5: add byte ptr [edi], cl; inc esp; ret 0x188b; 
0x000c0ca5: add byte ptr [edi], cl; inc esp; ret 0x288b; 
0x000c18a6: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000428c4: add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000a6088: add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000311b1: add byte ptr [edi], cl; inc esp; ret 0xf289; 
0x000c0d6a: add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000c1e1f: add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x00147977: add byte ptr [edi], cl; inc esp; ret; 
0x0013de5e: add byte ptr [edi], cl; inc esp; ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6474; 
0x0014a548: add byte ptr [edi], cl; lahf; ret 0xd009; 
0x001811bd: add byte ptr [edi], cl; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x000420c6: add byte ptr [edi], cl; mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x000341d6: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x000341a6: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034176: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000340c6: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x200; ret; 
0x00034126: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00034046: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000340f6: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034096: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x800; ret; 
0x00034266: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 1; ret; 
0x00034076: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 2; ret; 
0x00034156: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 4; ret; 
0x00034026: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 8; ret; 
0x0008967f: add byte ptr [edi], cl; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0010fc7f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0x10fc54; pop ebx; ret; 
0x000eda3f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xeda14; pop ebx; ret; 
0x000f04ef: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf04c4; pop ebx; ret; 
0x000f12bf: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf1294; pop ebx; ret; 
0x000f3d5f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf3d34; pop ebx; ret; 
0x000f4b3f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf4b14; pop ebx; ret; 
0x0019f2c4: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x001054c7: add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x001076e4: add byte ptr [edi], cl; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x00199958: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0019814f: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0019815f: add byte ptr [edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00156cd7: add byte ptr [edi], cl; mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x0005d99f: add byte ptr [edi], cl; mov dh, 0x51; or al, 0xf6; ret 0xf01; 
0x00070533: add byte ptr [edi], cl; mov dh, 0x54; xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0005e011: add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf40; 
0x0013c847: add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0015844f: add byte ptr [edi], cl; mov dh, 0x5a; or dh, dh; ret; 
0x000375cb: add byte ptr [edi], cl; mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x77ae0]; add edx, edi; jmp edx; 
0x00037473: add byte ptr [edi], cl; mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x77c30]; add edx, edi; jmp edx; 
0x00037427: add byte ptr [edi], cl; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77c84]; add esi, edi; jmp esi; 
0x000373d3: add byte ptr [edi], cl; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77cd8]; add esi, edi; jmp esi; 
0x00036dbc: add byte ptr [edi], cl; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x0003678c: add byte ptr [edi], cl; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77ed0]; add esi, edi; jmp esi; 
0x00041ff5: add byte ptr [edi], cl; mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x001998b8: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x001980ff: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0014e381: add byte ptr [edi], cl; mov dword ptr [0x8b9c72c2], eax; dec ebp; mov word ptr [ebp - 0x63ea37f], cs; call dword ptr [eax - 0x73]; 
0x00095956: add byte ptr [edi], cl; mov dword ptr [0xe9ac73c2], eax; cmp dh, 0xff; dec dword ptr [ebp - 0x668ff79]; call dword ptr [eax - 0x73]; 
0x000960ad: add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000bf15f: add byte ptr [edi], cl; mov ebp, 0x30ea83c0; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x10]; ret; 
0x000bf14f: add byte ptr [edi], cl; mov ebp, 0x40ea83c0; add edx, eax; jl 0xbf190; add eax, ecx; ret; 
0x000bea04: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00042887: add byte ptr [edi], cl; mov ebp, 0xf0835bc2; pop ds; ret; 
0x0006217b: add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0006dbe7: add byte ptr [edi], cl; mov esi, 0x89c68900; ret; 
0x000bee5f: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000bee8f: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000bae6f: add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x00047e67: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00112357: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00042078: add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00101928: add byte ptr [edi], cl; sahf; ret 0xd201; 
0x000dcb8b: add byte ptr [edi], cl; sahf; ret 0xd329; 
0x00050bbf: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x000c26e7: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x948b; 
0x000d02e4: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x001a047e: add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0019f02f: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x001a4a2f: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x001a49df: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00094724: add byte ptr [edi], cl; test byte ptr [ebp - 0x72000002], dh; xchg al, ch; xchg esi, eax; stc; call dword ptr [eax + 0x68]; 
0x001808c8: add byte ptr [edi], cl; test byte ptr [ecx - 0x77000000], al; ret 0xe283; 
0x0009fe68: add byte ptr [edi], cl; test byte ptr [ecx - 0x7d000000], ch; in al, dx; add al, 0x8d; or dword ptr [eax + 0x52], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x0019ed4a: add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000b1ca2: add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0018087f: add byte ptr [edi], cl; test byte ptr [edx - 0x77000000], ch; ret 0xe283; 
0x001a4986: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000b1c4c: add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001a49cc: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0010abfc: add byte ptr [edi], cl; test dword ptr [0xf7fffffd], edi; ret 0x67; 
0x0019fb2f: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0019f42f: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001804b5: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], ebp; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0010d41e: add byte ptr [edi], cl; test dword ptr [eax - 0x74ffffef], edx; jl 0x10d44c; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax + 0x68]; 
0x0009df30: add byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ecx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012b528: add byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], edx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a0eec: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0019fbda: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0019f9fa: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0019f4ca: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0019f824: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0010d021: add byte ptr [edi], cl; test dword ptr [ebp - 0x74ffffeb], ecx; jl 0x10d04f; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax - 0x73]; 
0x0015a18d: add byte ptr [edi], cl; test dword ptr [ebp - 0x74fffffe], ebx; je 0x15a1bb; adc byte ptr [ebp - 0x63acb7a], cl; call dword ptr [eax - 0x73]; 
0x001473b4: add byte ptr [edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x0016910f: add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019f5f6: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x00107199: add byte ptr [edi], cl; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x00171a55: add byte ptr [edi], cl; test dword ptr [ebx - 0x7f000000], ebx; les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x0019f6fe: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x001a0e60: add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000c143a: add byte ptr [edi], cl; test dword ptr [ecx + eax], edx; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0010d5fd: add byte ptr [edi], cl; test dword ptr [ecx - 0x74fffff1], esi; jl 0x10d62b; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax + 0x68]; 
0x0019d82e: add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0019f673: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0011b326: add byte ptr [edi], cl; test dword ptr [edi - 0x7d000000], ebx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0008efae: add byte ptr [edi], cl; test dword ptr [edi], esp; add dword ptr [eax], eax; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000df3b8: add byte ptr [edi], cl; test dword ptr [edx - 0x7600000f], edx; ret 0xe283; 
0x0010adb2: add byte ptr [edi], cl; test dword ptr [edx - 0x7d000000], esp; les ebp, ptr [eax + 0x5b]; ret; 
0x00175115: add byte ptr [edi], cl; test dword ptr [edx - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0010b096: add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], edi; les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0014a644: add byte ptr [edi], cl; test ebp, eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x0010a84b: add byte ptr [edi], cl; test ebp, ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x64e5f7d], cl; call dword ptr [eax - 0x73]; 
0x0019922a: add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00159b3f: add byte ptr [edi], cl; test ebx, ebp; or byte ptr [eax], al; add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [ebp + eax*8 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000d19fa: add byte ptr [edi], cl; test ecx, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0019fddf: add byte ptr [edi], cl; test edx, ebx; clc; int1; call dword ptr [ebx - 0x18]; 
0x001a02df: add byte ptr [edi], cl; test edx, ecx; hlt; int1; call dword ptr [ebx - 0x18]; 
0x00199bef: add byte ptr [edi], cl; test edx, ecx; pop edx; bnd call dword ptr [ebx - 0x18]; 
0x00199bef: add byte ptr [edi], cl; test edx, ecx; pop edx; bnd call dword ptr [ebx - 0x18]; sbb eax, 0x81fffe91; ret; 
0x00040ebb: add byte ptr [edi], cl; test esi, edx; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x00181cd6: add byte ptr [edi], cl; xchg ch, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x0007d196: add byte ptr [edi], cl; xchg dword ptr [eax + eax - 0x137d0000], edx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x00182a7f: add byte ptr [edi], cl; xchg dword ptr [eax - 0x7c0015e1], ecx; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00089cf4: add byte ptr [edi], cl; xchg dword ptr [ebp - 0x7d000000], esp; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00087ec2: add byte ptr [edi], cl; xchg dword ptr [ecx + 0x6a000001], edi; add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00087ab2: add byte ptr [edi], cl; xchg dword ptr [edi - 0x7cfffffb], esp; in al, dx; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x00080fdb: add byte ptr [edi], cl; xchg dword ptr [edi], esi; add al, byte ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x001831e9: add byte ptr [edi], cl; xchg eax, esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00089f2e: add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x00156cef: add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000d86ac: add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x000fba94: add byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x000964f4: add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0004684e: add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00049df7: add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0005c06c: add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000f9ff8: add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x00054dd2: add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0018426a: add byte ptr [edi], cl; xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x000dc0d9: add byte ptr [edi], cl; xchg edx, eax; ret 0xc281; 
0x000dea3d: add byte ptr [edi], cl; xchg esi, eax; ret 0xc931; 
0x0008496b: add byte ptr [edi], cl; xchg esi, ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x00044855: add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00117e07: add byte ptr [edi], cl; xchg esp, eax; ret 0x478b; 
0x0004561b: add byte ptr [edi], cl; xchg esp, eax; ret 0x7c83; 
0x0008240c: add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x00079f64: add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00079f43: add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0003c09c: add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x0008fae9: add byte ptr [edi], cl; xchg esp, eax; ret; 
0x001843c5: add byte ptr [edi], cl; xchg esp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0xd008; 
0x00088695: add byte ptr [edi], cl; xchg esp, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x000daec7: add byte ptr [edi], cl; xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x000f7e32: add byte ptr [edx + 0x20], bh; cmovne eax, edx; ret; 
0x000f7e4a: add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000280e8: add byte ptr [edx + 0x50], dl; call 0x96410; add esp, 0x1c; ret; 
0x00081a52: add byte ptr [edx + 0x50], dl; push esi; call dword ptr [ebx + 0x40]; 
0x00087c39: add byte ptr [edx + 0x50], dl; push esi; call dword ptr [ecx + 0x40]; 
0x00170db4: add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x00168909: add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c0b92: add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x000b723f: add byte ptr [edx + 0x5f178816], cl; pop esi; pop ebx; ret; 
0x00120f19: add byte ptr [edx + 0x64], bh; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0016923c: add byte ptr [edx + 0x6a], dl; add al, 0x53; call dword ptr [eax]; 
0x0008f320: add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00096591: add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097789: add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009498c: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096973: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fb70: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0019f2bf: add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00183714: add byte ptr [edx + 0xf], dh; xchg esp, eax; ret; 
0x0008db60: add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0017ff7a: add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084f07: add byte ptr [edx + 1], bh; mov eax, edx; ret; 
0x000910eb: add byte ptr [edx + 1], bh; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0011eb75: add byte ptr [edx + 1], bh; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014d4f7: add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008d66a: add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008fe47: add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095b46: add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f5b7: add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fa6c: add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008f8dd: add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096949: add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00087f73: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00082023: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00083cd4: add byte ptr [edx + 1], ch; push 0; push dword ptr [esp + 0x1c]; call 0x7cf80; add esp, 0x1c; ret; 
0x000994c8: add byte ptr [edx + 1], ch; push eax; call 0x8d370; add esp, 0x2c; ret; 
0x0008d5ad: add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008d61c: add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00081dda: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0012f561: add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x0007bfc0: add byte ptr [edx + ebx], 0; ret; 
0x0014cb7a: add byte ptr [edx + ecx - 0x7d], dh; inc eax; or byte ptr [ecx], al; je 0x14cba6; add esp, 0xc; ret; 
0x00139e53: add byte ptr [edx + edi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x000f7f6d: add byte ptr [edx + esi*8 + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x0018c699: add byte ptr [edx - 0x4c], 0xfa; jmp dword ptr [esi - 0x70]; 
0x000aef8f: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0008c3cf: add byte ptr [edx - 0x77], dl; ret; 
0x0019ec24: add byte ptr [edx - 1], bh; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x0014d4e7: add byte ptr [edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x000320a9: add byte ptr [edx - 3], 0xff; jmp dword ptr [esi - 0x70]; 
0x000bff32: add byte ptr [edx - 9], al; ret 3; 
0x0002c384: add byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0004866d: add byte ptr [edx], 0; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0004794d: add byte ptr [edx], 0; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x000f7aa9: add byte ptr [edx], 0x58; stc; call dword ptr [eax + 0x53]; 
0x000f7b06: add byte ptr [edx], 0x58; stc; call dword ptr [eax - 1]; 
0x00150a88: add byte ptr [edx], 0x6e; stc; call dword ptr [eax - 0x18]; 
0x00150a88: add byte ptr [edx], 0x6e; stc; call dword ptr [eax - 0x18]; in eax, dx; xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x00194a90: add byte ptr [edx], 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b634: add byte ptr [edx], ah; add byte ptr [eax], al; add bl, ch; mov byte ptr [0xfad8a0e8], al; call dword ptr [ebx - 0x7d]; 
0x00049120: add byte ptr [edx], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7aa3dbbc], cl; ror byte ptr [edi], 0x84; ret 2; 
0x000517c6: add byte ptr [edx], ah; add byte ptr [eax], al; add cl, ch; ret; 
0x0016d564: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00173953: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc33437d], cl; call dword ptr [eax - 0x73]; 
0x0016e203: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc8a637d], cl; call dword ptr [eax - 0x73]; 
0x00034564: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x000b0edc: add byte ptr [edx], al; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000340cc: add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x001328a4: add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x001335fd: add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x00132aee: add byte ptr [edx], al; call eax; 
0x001329a7: add byte ptr [edx], al; push eax; call dword ptr [ebp + 0x14]; 
0x0009a26e: add byte ptr [edx], al; ret; 
0x00108d84: add byte ptr [edx], ch; call 0x108d50; add esp, 0x1c; ret; 
0x000c22e6: add byte ptr [edx], ch; lea eax, [esp + 0x44]; push eax; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x00124524: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x00025cc7: add byte ptr [edx], ch; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x00099807: add byte ptr [edx], ch; push 1; push eax; call 0x8d370; add esp, 0x2c; ret; 
0x001724b0: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x172320; add esp, 0x10; add esp, 0xc; ret; 
0x00124526: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x00184e81: add byte ptr [edx], ch; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x00025cc9: add byte ptr [edx], ch; push eax; push dword ptr [ebx + 4]; call edi; 
0x0007a3bf: add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x40]; 
0x00087148: add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x24]; 
0x0018452a: add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x24]; 
0x00086b05: add byte ptr [edx], ch; push ebx; call dword ptr [esi + 0x40]; 
0x0008bbe9: add byte ptr [edx], ch; push ecx; push edx; call 0x17dfa0; add esp, 0x1c; ret; 
0x0017403c: add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0008813b: add byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00081a50: add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00087c37: add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x0016a87c: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00087f77: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x40]; 
0x0008ac3d: add byte ptr [edx], ch; push esi; call dword ptr [ebp + 0x2c]; 
0x00082027: add byte ptr [edx], ch; push esi; call dword ptr [ebx + 0x40]; 
0x00081dde: add byte ptr [edx], ch; push esi; call dword ptr [edi + 0x40]; 
0x0009627a: add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0012b2a5: add byte ptr [esi + 0x53], dl; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011eef2: add byte ptr [esi + 0x53], dl; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001999ff: add byte ptr [esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x00052f9c: add byte ptr [esi + 0x5f], bl; ret; 
0x000b32bf: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000aeeff: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000af11f: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b0fff: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b100f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b0fef: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b101f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b102f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b103f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b104f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b763f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000b764f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000be5af: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb12c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5cf: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb14c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be48f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb01c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4af: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb03c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4cf: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb05c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb18c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1cf: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1ef: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5ef: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb16c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1b0: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a098f: add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000bf0fd: add byte ptr [esi + 0xf], ah; je 0xbf14b; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0018c0ef: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0018f83b: add byte ptr [esi + 0xf], ah; salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000bed71: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000bf04a: add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bf06f: add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00090efa: add byte ptr [esi + 8], bh; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x000920f3: add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0003c29c: add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0009173c: add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x0002326d: add byte ptr [esi + 8], bh; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0003cf72: add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003c343: add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0009e5f5: add byte ptr [esi + 8], dh; ret; 
0x00172604: add byte ptr [esi + 9], bh; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00145846: add byte ptr [esi + eax - 0x80], dh; js 0x14584d; sub eax, 0x8feb0974; lea esi, [esi]; xor eax, eax; ret; 
0x00103b7e: add byte ptr [esi + edx], bh; je 0x1049ce; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x000f7f29: add byte ptr [esi + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x00151347: add byte ptr [esi - 0x18], dl; xlatb; sbb dword ptr [ebx], eax; add byte ptr [ecx + 0xe5ac6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00158bfc: add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00058f7c: add byte ptr [esi - 0x42740003], ch; mov eax, 0x8dffffc9; xchg dword ptr [eax - 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x000d6f9d: add byte ptr [esi - 0x70], ah; add eax, 2; ret; 
0x0013969d: add byte ptr [esi - 0x70], ah; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016c7fd: add byte ptr [esi - 0x70], ah; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0012094d: add byte ptr [esi - 0x70], ah; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000bf5bd: add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bf11d: add byte ptr [esi - 0x70], ah; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000e4a1d: add byte ptr [esi - 0x70], ah; lea ebp, [esp + 4]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000b7bad: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000af0ad: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000704ed: add byte ptr [esi - 0x70], ah; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x0008511d: add byte ptr [esi - 0x70], ah; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0008b10d: add byte ptr [esi - 0x70], ah; mov eax, 0xffffffff; ret; 
0x001999ed: add byte ptr [esi - 0x70], ah; mov eax, 1; ja 0x1999f9; neg eax; pop ebp; ret; 
0x0019f0dd: add byte ptr [esi - 0x70], ah; mov eax, 1; ja 0x19f0e9; neg eax; pop ebp; ret; 
0x0016addd: add byte ptr [esi - 0x70], ah; mov eax, 1; ret; 
0x000d6efd: add byte ptr [esi - 0x70], ah; mov eax, 2; ret; 
0x000d6f0d: add byte ptr [esi - 0x70], ah; mov eax, 3; ret; 
0x000d6f1d: add byte ptr [esi - 0x70], ah; mov eax, 4; ret; 
0x000d6f2d: add byte ptr [esi - 0x70], ah; mov eax, 5; ret; 
0x000d6f3d: add byte ptr [esi - 0x70], ah; mov eax, 6; ret; 
0x000d6f4d: add byte ptr [esi - 0x70], ah; mov eax, 7; ret; 
0x00175c9d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0016aded: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0018ba2d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00099ffd: add byte ptr [esi - 0x70], ah; mov eax, edi; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00109f0d: add byte ptr [esi - 0x70], ah; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0008f5ad: add byte ptr [esi - 0x70], ah; mov ebx, dword ptr [esp]; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00148a2d: add byte ptr [esi - 0x70], ah; mov ecx, dword ptr [esp + 0x1c]; mov edx, dword ptr [ecx - 0x6e5c4]; add edx, ecx; jmp edx; 
0x00126ced: add byte ptr [esi - 0x70], ah; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000b75ed: add byte ptr [esi - 0x70], ah; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000b35ed: add byte ptr [esi - 0x70], ah; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b0fdd: add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0013d3ed: add byte ptr [esi - 0x70], ah; movzx eax, dl; ret; 
0x0009299c: add byte ptr [esi - 0x70], ah; nop; call 0x182d21; add eax, 0x1a446f; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0003b40b: add byte ptr [esi - 0x70], ah; nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00096b27: add byte ptr [esi - 0x70], ah; nop; nop; nop; xor eax, eax; ret; 
0x00090a5a: add byte ptr [esi - 0x70], ah; nop; nop; xor eax, eax; ret; 
0x000985fb: add byte ptr [esi - 0x70], ah; nop; xor eax, eax; ret; 
0x001a266d: add byte ptr [esi - 0x70], ah; pop ebx; mov eax, 1; ja 0x1a267a; neg eax; ret; 
0x001a0c6d: add byte ptr [esi - 0x70], ah; pop ebx; xor eax, eax; ret; 
0x0008b13d: add byte ptr [esi - 0x70], ah; ret; 
0x000ee1ed: add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f52ed: add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x0008b11d: add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000baf0f: add byte ptr [esi - 0x75], ah; push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00169cc1: add byte ptr [esi - 0x75], dl; jl 0x169cea; dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000be52e: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bb0ab: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000be42e: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bafbb: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0011eca8: add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x001a5367: add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x001a5307: add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00049b48: add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00156c2a: add byte ptr [esi - 0x7d], ah; stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0013b627: add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x00180536: add byte ptr [esi - 0x7d], dl; ret; 
0x000dce45: add byte ptr [esi - 0x7f], ah; out 4, al; add al, 0x66; cmp esi, 0x840f0400; ret; 
0x001a7e3b: add byte ptr [esi - 0x7f], ah; stc; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x9584; 
0x00030447: add byte ptr [esi - 7], dl; call dword ptr [eax - 0x18]; 
0x00039a82: add byte ptr [esi - 7], dl; dec dword ptr [edi]; inc ebp; call 0x2b276; jmp dword ptr [esi - 0x70]; 
0x000399a1: add byte ptr [esi - 7], dl; inc dword ptr [ebx - 0x7c72f314]; sar dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000b707a: add byte ptr [esi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a4baa: add byte ptr [esi], 0xfe; jmp dword ptr [esi - 0x70]; 
0x0003cca2: add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x001a295a: add byte ptr [esi], ch; lea esi, [esi]; add eax, 1; ret; 
0x001a528a: add byte ptr [esi], ch; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a431a: add byte ptr [esi], ch; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x001a4af1: add byte ptr [esi], ch; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x0008b12a: add byte ptr [esi], ch; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0019edea: add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ja 0x19edf9; neg eax; ret; 
0x000d6eea: add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ret; 
0x0008b17a: add byte ptr [esi], ch; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x000910ba: add byte ptr [esi], ch; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b0f4a: add byte ptr [esi], ch; lea esi, [esi]; pop ebx; ret; 
0x001687aa: add byte ptr [esi], ch; lea esi, [esi]; ret; 
0x0017348a: add byte ptr [esi], ch; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x000d6cba: add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000bebea: add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; ret; 
0x00114078: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003c1e8: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003cbc8: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c188: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00122900: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007ad33: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a36b8: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001a4a67: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0011df01: add byte ptr [esp - 0x75], dh; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011dff1: add byte ptr [esp - 0x75], dh; dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000da4b0: add byte ptr ds:[eax], al; cmp eax, 1; jg 0xda4d8; add esp, 8; pop ebx; ret; 
0x000df3b7: add byte ptr ds:[edi], cl; test dword ptr [edx - 0x7600000f], edx; ret 0xe283; 
0x0013d106: add byte ptr es:[0xffffff], ah; ret; 
0x000909ce: add byte ptr es:[eax + 0x16], bh; pop ebx; ret; 
0x00097c06: add byte ptr es:[eax + 0x16], bh; ret; 
0x000ba87e: add byte ptr es:[eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000f7ec6: add byte ptr es:[eax + 0x40], bh; ret; 
0x000b75de: add byte ptr es:[eax + 0x5b5e5f17], cl; ret; 
0x0008fa66: add byte ptr es:[eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x001981ae: add byte ptr es:[eax + 1], bh; ja 0x1981b9; neg eax; ret; 
0x0019edee: add byte ptr es:[eax + 1], bh; ja 0x19edf9; neg eax; ret; 
0x000d6eee: add byte ptr es:[eax + 1], bh; ret; 
0x0004209e: add byte ptr es:[eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x001a525e: add byte ptr es:[eax + eax*8 + 0x1a80c74], al; jne 0x1a5280; lea eax, [ecx + 4]; ret; 
0x0005face: add byte ptr es:[eax - 0x73], dl; sub dword ptr [edi + 0x63], -7; call dword ptr [eax + 0x6a]; 
0x0008a16e: add byte ptr es:[eax - 1], bh; mov edx, eax; ret; 
0x0008b12e: add byte ptr es:[eax - 1], bh; ret; 
0x00112f47: add byte ptr es:[eax], al; add bl, dl; call 0x29130fd4; ret; 
0x00114927: add byte ptr es:[eax], al; add bl, dl; call 0x291329b4; ret; 
0x00116307: add byte ptr es:[eax], al; add bl, dl; call 0x29134394; ret; 
0x0003cca3: add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x001a4a7b: add byte ptr es:[eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001a3f7b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x1a3fd0; lea eax, [ecx + 0xa]; ret; 
0x001a3f8b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x1a3fd0; lea eax, [ecx + 0xb]; ret; 
0x001a3f9b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x1a3fd0; lea eax, [ecx + 0xd]; ret; 
0x001a3fab: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x1a3fd0; lea eax, [ecx + 0xe]; ret; 
0x001a3fbb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x1a3fd0; lea eax, [ecx + 0xf]; ret; 
0x001a3f0b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 1; jl 0x1a3fd0; lea eax, [ecx + 1]; ret; 
0x001a3f5b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 7; jl 0x1a3fd0; lea eax, [ecx + 7]; ret; 
0x001a3f6b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 9; jl 0x1a3fd0; lea eax, [ecx + 9]; ret; 
0x00095313: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0017d9c3: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000bee5b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000bf5ab: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000bee7b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bf5cb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bf12b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bf13b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0008b14b: add byte ptr es:[eax], al; add byte ptr [eax], al; call 0x182d21; add eax, 0x1abcbf; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0009dde3: add byte ptr es:[eax], al; add byte ptr [eax], al; lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x001a4a74: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d6ec7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x001a3d27: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a3d37: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a3d47: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a3d57: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a3d67: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a3cc7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a3cd7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a3ce7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a3cf7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a3d07: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a5245: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a3d17: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a2d18: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a2d28: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a2d38: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a2d48: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a2d58: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a2c97: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a2ca8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a2cb8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a2cc8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a2cd8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a2ce8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a2cf8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a2d08: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001a3178: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a3168: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a3158: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a3148: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a31e8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001a31d8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001a31c8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001a54d8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001a31b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001a31a8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001a3198: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001a3188: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a2c87: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001a4387: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a4397: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a43a7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a43b7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a4327: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a4337: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a4347: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a4357: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a4367: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a4377: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000b0f55: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008a167: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; mov edx, eax; ret; 
0x000a44b4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x001685a4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000342e7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00176314: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x001828a5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001a5218: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b0f67: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x0008d084: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x001a2d68: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x0008b164: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a2956: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a5286: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a4316: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x0008b126: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000d6ee6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x0008b176: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x000910b6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b0f46: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x001687a6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; ret; 
0x000bebe6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0016a14b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016a15b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0017e41b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x000b0fbb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b0f8b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0009e63b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x390], eax; ret; 
0x0009876b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x10; add esp, 0xc; ret; 
0x0008ecab: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x00090afb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x000dc04b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0012f583: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000930a3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0003cef3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0009a273: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x001685ab: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x000929e3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 3; ret; 
0x00120efb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x3c]; pop ebx; ret; 
0x001085fb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10854b; call eax; 
0x000c09db: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00084ffb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00084ecb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x0008eaab: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0017631b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0018294b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x001828db: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x001828bb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008b18b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x001a527b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000bdabb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001a384b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00024d6b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b1beb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x000dbf4b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00084f03: add byte ptr es:[eax], al; add byte ptr [eax], al; mov edx, 1; mov eax, edx; ret; 
0x00175f6b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x001a5bbb: add byte ptr es:[eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b100b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b0feb: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b101b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0019810b: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x000d6f99: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; add eax, 2; ret; 
0x000bf5b9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bf119: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000704e9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x0008e99a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00085119: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0008274a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0xffffffff; ret; 
0x0016add9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x000d6ef9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000d6f09: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d6f19: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d6f29: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x0013b4ca: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d6f39: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d6f49: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x000b0fca: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0013d3e9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; movzx eax, dl; ret; 
0x001a0c69: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x0008b139: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; ret; 
0x0016858a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; add esp, 0xc; ret; 
0x0014582a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0008b119: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0008e98b: add byte ptr es:[eax], al; add byte ptr [eax], al; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x000b6d3b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bb27b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop esi; ret; 
0x0003d823: add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x00171adb: add byte ptr es:[eax], al; add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x00182a0b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000342fb: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0012ddcb: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x000a3e7b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x001a00eb: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000bf26b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0008b16b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000603cd: add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000d7e01: add byte ptr es:[eax], al; add esp, 0x1c; ret; 
0x00134b1d: add byte ptr es:[eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x001a52fe: add byte ptr es:[ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00125a0e: add byte ptr es:[ebp - 0x47f7db8c], cl; sbb al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015db36: add byte ptr es:[ebp - 0x4f7af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000d4cce: add byte ptr es:[ebp - 0x577bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x0009ffae: add byte ptr es:[ebp - 0x77], dl; ret 0x5657; 
0x00035dc6: add byte ptr es:[ebp - 0x7cd58a40], al; ret; 
0x00152516: add byte ptr es:[ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00086216: add byte ptr es:[ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x0010a0be: add byte ptr es:[ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0016ed9e: add byte ptr es:[ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x000d6bee: add byte ptr es:[ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0009eb7e: add byte ptr es:[ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000edbf6: add byte ptr es:[ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f4cf6: add byte ptr es:[ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0008d5de: add byte ptr es:[ebx + 0x5e], bl; pop edi; ret; 
0x000beb6e: add byte ptr es:[ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x000be81e: add byte ptr es:[ebx + 0x5e], bl; ret; 
0x001115ce: add byte ptr es:[ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00085ce6: add byte ptr es:[ebx - 0x17afe714], al; fistp qword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0017006e: add byte ptr es:[ebx - 0x18], dl; mov dword ptr [0x8100012c], eax; ret; 
0x0012086e: add byte ptr es:[ebx - 0x18], dl; mov dword ptr [0x81000624], eax; ret; 
0x000fc86e: add byte ptr es:[ebx - 0x18], dl; mov dword ptr [0x81000864], eax; ret; 
0x0008454e: add byte ptr es:[ebx - 0x18], dl; ret; 
0x000d2cc6: add byte ptr es:[ebx - 0x362f43], al; call dword ptr [eax]; 
0x000d378e: add byte ptr es:[ebx - 0x365f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000fa006: add byte ptr es:[ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0010869e: add byte ptr es:[ebx - 0x3f7af7c0], cl; je 0x10859a; call eax; 
0x001072ee: add byte ptr es:[ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000ef86e: add byte ptr es:[ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0010c71e: add byte ptr es:[ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x001a50ae: add byte ptr es:[ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a50c0; neg eax; ret; 
0x00097f86: add byte ptr es:[ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0008cafe: add byte ptr es:[ebx - 0x5c9ae3c0], cl; jl 0x8cb07; add byte ptr [eax], al; ret; 
0x001828ce: add byte ptr es:[ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x001184f6: add byte ptr es:[ebx - 0x7c72f314], al; push esi; stc; call dword ptr [eax - 0x18]; 
0x001221f6: add byte ptr es:[ebx - 0x7c72f714], al; cmp ecx, edi; call dword ptr [eax - 0x73]; 
0x0014ab86: add byte ptr es:[ebx - 0x7ce3dbac], cl; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x001010fe: add byte ptr es:[ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x0010098e: add byte ptr es:[ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x001763fe: add byte ptr es:[ebx - 0x7cfbdbbc], cl; inc eax; adc al, 4; mov eax, 1; ret; 
0x000a4886: add byte ptr es:[ebx - 0xaff714], al; jae 0xa48b3; call edx; 
0x000b0f9e: add byte ptr es:[ecx + 0x4518811], cl; pop ebx; ret; 
0x000b787e: add byte ptr es:[ecx + 0x5b5e5ff8], cl; ret; 
0x00085f26: add byte ptr es:[ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x00172f36: add byte ptr es:[ecx + 0xb4a9], cl; add bl, ch; ret; 
0x000961a6: add byte ptr es:[ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x0007056e: add byte ptr es:[ecx - 0x38fbdbb4], cl; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0007e40e: add byte ptr es:[ecx - 0x76207622], cl; ret 0xcb89; 
0x0002d29e: add byte ptr es:[ecx - 0x769fdbbc], cl; ret 0x9de9; 
0x000a2bde: add byte ptr es:[ecx - 0x76e7743a], cl; ret 0xeec1; 
0x00036bee: add byte ptr es:[ecx - 0x7cbbdb94], cl; ret; 
0x0009274e: add byte ptr es:[ecx - 0x7cefdbb4], cl; in al, dx; or byte ptr [ebx - 0x72f3dba4], cl; and dword ptr [edi + 0x39], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000806de: add byte ptr es:[ecx], bh; ret; 
0x000d1bae: add byte ptr es:[ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x001a0c0e: add byte ptr es:[ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00081d7e: add byte ptr es:[ecx], dh; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x0004250e: add byte ptr es:[ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x00145326: add byte ptr es:[ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00156ce6: add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0017bede: add byte ptr es:[ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x000b75ce: add byte ptr es:[edi + 0x5e], bl; pop ebx; ret; 
0x000d6cae: add byte ptr es:[edi + 0x5e], bl; ret; 
0x0010fc7e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0x10fc54; pop ebx; ret; 
0x000eda3e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xeda14; pop ebx; ret; 
0x000f04ee: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf04c4; pop ebx; ret; 
0x000f12be: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf1294; pop ebx; ret; 
0x000f3d5e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf3d34; pop ebx; ret; 
0x000f4b3e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf4b14; pop ebx; ret; 
0x0019814e: add byte ptr es:[edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0019815e: add byte ptr es:[edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x001980fe: add byte ptr es:[edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00042886: add byte ptr es:[edi], cl; mov ebp, 0xf0835bc2; pop ds; ret; 
0x001473b3: add byte ptr es:[edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x000f9c26: add byte ptr es:[edi], cl; xchg esp, eax; ret; 
0x0019f2be: add byte ptr es:[edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000aef8e: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0014d4e6: add byte ptr es:[edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x001999fe: add byte ptr es:[esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x000b102e: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b103e: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b104e: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x00120f1b: add byte ptr fs:[eax], al; add byte ptr [ebx + 0x10880], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0011e8c4: add byte ptr ss:[eax], al; add byte ptr [ebp - 0x75], ah; das; call dword ptr gs:[0x10]; 
0x0011eb40: add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004dfdc: add byte ptr ss:[eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00154644: add ch, 0x6e; stc; call dword ptr [eax + 0x55]; 
0x001748b8: add ch, ah; inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [ecx + ebp*2], -7; call dword ptr [eax + 0x6a]; 
0x0014d64b: add ch, al; pop ds; scasb al, byte ptr es:[edi]; hlt; dec dword ptr [ebp - 0xe9c537d]; call dword ptr [esi + 0x50]; 
0x0015a4a9: add ch, al; stc; call dword ptr [eax - 0x18]; 
0x00168ea4: add ch, bh; jmp dword ptr [esi - 0x70]; 
0x0007ff2d: add ch, bl; out dx, al; mov eax, 0xffffffff; pop ebx; ret; 
0x000ce8dc: add ch, bl; ret 0x8390; 
0x0016a971: add ch, byte ptr [eax + 0x60]; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0013d2e7: add ch, byte ptr [ecx - 0xcb17]; jmp dword ptr [esi - 0x70]; 
0x000d094a: add ch, byte ptr [ecx]; ret 0x28b; 
0x000dcc18: add ch, byte ptr [ecx]; ret 0x48d; 
0x00054fd8: add ch, byte ptr [ecx]; ret 0xc031; 
0x0007a3bd: add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00184528: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00086b03: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00081ddc: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00150a89: add ch, byte ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x00150a89: add ch, byte ptr [esi - 7]; call dword ptr [eax - 0x18]; in eax, dx; xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x00067690: add ch, cl; ret 0xfff4; 
0x000d1c74: add ch, cl; xchg esi, eax; loope 0xd1c77; jmp dword ptr [esi - 0x70]; 
0x00109696: add cl, 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0008ccf3: add cl, al; call 0x1e95005; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x000a1c59: add cl, al; call 0xfda5572; inc edi; ret 0xc083; 
0x000a1d73: add cl, al; call 0xfda568c; inc edi; ret 0xc083; 
0x000a3db9: add cl, al; call 0xfda76d2; inc edi; ret 0x508d; 
0x0010abd6: add cl, al; call 0xfe0e4df; dec edi; ret 0xdce9; 
0x0003851e: add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0007ac88: add cl, al; ret 0x6509; 
0x00024aca: add cl, al; ret 0x8909; 
0x00128cca: add cl, al; ret 0xf009; 
0x0015139a: add cl, al; ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000c04bc: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000be35b: add cl, byte ptr [eax + 0x448b0270]; and al, 0xc; pop ebx; pop esi; ret; 
0x0018c88d: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x00174a22: add cl, byte ptr [eax + 0x48bff42]; and al, 0x39; ret 0x3374; 
0x00144714: add cl, byte ptr [eax + 0x48bff57]; and al, 0x39; ret; 
0x000af13a: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x000af0d8: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000bda53: add cl, byte ptr [eax - 0x776f786]; pop ebx; pop edi; ret; 
0x000aeffa: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x000bd71b: add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000aefb8: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x0013d002: add cl, byte ptr [eax]; pop ebx; ret; 
0x000c00ab: add cl, byte ptr [eax]; sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b50c0: add cl, byte ptr [ebp + 0x5b5f0442]; ret; 
0x000b50f2: add cl, byte ptr [ebp + 0x5b5f0842]; ret; 
0x000a9835: add cl, byte ptr [ebp + 0x5e5b0342]; ret; 
0x000a9849: add cl, byte ptr [ebp + 0x5e5b0442]; ret; 
0x000a9859: add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000a986d: add cl, byte ptr [ebp + 0x5e5b0642]; ret; 
0x00087432: add cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000b890b: add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0005296a: add cl, byte ptr [ebp + 0x6c084]; add byte ptr [eax], al; call 0x52930; jmp eax; 
0x000d1c2a: add cl, byte ptr [ebp - 0x15fe536e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a6f4f: add cl, byte ptr [ebp - 0x1765a36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a6f0f: add cl, byte ptr [ebp - 0x1766336e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a7cba: add cl, byte ptr [ebp - 0x1769436e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a8e6f: add cl, byte ptr [ebp - 0x1769d36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a7adf: add cl, byte ptr [ebp - 0x176f036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a64fa: add cl, byte ptr [ebp - 0x1773736e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9c1a: add cl, byte ptr [ebp - 0x1776636e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9c5a: add cl, byte ptr [ebp - 0x1776d36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a6f8a: add cl, byte ptr [ebp - 0x1777536e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a6fca: add cl, byte ptr [ebp - 0x1777d36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9c9f: add cl, byte ptr [ebp - 0x1785e36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9d1f: add cl, byte ptr [ebp - 0x1894a36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9cda: add cl, byte ptr [ebp - 0x1898336e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0017d26e: add cl, byte ptr [ebp - 0x6893b80]; call dword ptr [eax - 0x18]; 
0x001460a4: add cl, byte ptr [ebp - 0x6c2f87d]; call dword ptr [eax + 0x51]; 
0x000b119a: add cl, byte ptr [ebp - 0x7af0fdb6]; cmp eax, 0x5bffffff; ret; 
0x00163406: add cl, byte ptr [ebx + 0x29eb8900]; ret; 
0x000ba94a: add cl, byte ptr [ebx + 0x42890741]; pop es; mov eax, edi; pop edi; ret; 
0x0018f83f: add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000be35e: add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000baf28: add cl, byte ptr [ebx + 0x5e082444]; ret; 
0x0009a418: add cl, byte ptr [ebx + 0x651c2454]; sub edx, dword ptr [0x14]; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a684: add cl, byte ptr [ebx + 0x651c2454]; sub edx, dword ptr [0x14]; jne 0x9a6b7; add esp, 0x2c; ret; 
0x000804e1: add cl, byte ptr [ebx - 0x2f76a4f0]; pop esi; pop edi; ret; 
0x000d40de: add cl, byte ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x000576de: add cl, byte ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x0019bf65: add cl, byte ptr [ebx - 0x54737474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x001917ef: add cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0005b728: add cl, byte ptr [ebx - 0x8b63]; call dword ptr [eax - 1]; 
0x000b1387: add cl, byte ptr [ecx + 0x10eb83d0]; lea ecx, [edx + 0x10]; jne 0xb10e1; pop ebx; ret; 
0x000b1173: add cl, byte ptr [ecx + 0x1eb83d0]; lea ecx, [edx + 1]; jne 0xb10e1; pop ebx; ret; 
0x000c6b80: add cl, byte ptr [ecx + 0x29d001f8]; ret; 
0x000b1195: add cl, byte ptr [ecx + 0x2eb83d0]; lea ecx, [edx + 2]; jne 0xb10e1; pop ebx; ret; 
0x00143e30: add cl, byte ptr [ecx + 0x39f329cb]; ret; 
0x000b11bb: add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xb10e1; pop ebx; ret; 
0x000b512a: add cl, byte ptr [ecx + 0x428d0842]; or al, 0x5f; pop ebx; ret; 
0x00082b27: add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000b11d3: add cl, byte ptr [ecx + 0x4eb83d0]; lea ecx, [edx + 4]; jne 0xb10e1; pop ebx; ret; 
0x00130947: add cl, byte ptr [ecx + 0x5f5e5bd8]; ret; 
0x000b1257: add cl, byte ptr [ecx + 0x8eb83d0]; lea ecx, [edx + 8]; jne 0xb10e1; pop ebx; ret; 
0x0015147d: add cl, byte ptr [ecx - 0x1337b]; call dword ptr [eax - 0x18]; 
0x000b1cb3: add cl, byte ptr [ecx - 0x2f76f7be]; pop ebx; ret; 
0x000af19a: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x000af17a: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x000d34b8: add cl, byte ptr [ecx - 0x363b6b]; call dword ptr [eax - 0x75]; 
0x000561af: add cl, byte ptr [ecx - 0x364f6b]; dec dword ptr [ebp - 0x700b7c7c]; clc; call dword ptr [eax - 1]; 
0x0005612a: add cl, byte ptr [ecx - 0x365f6b]; dec dword ptr [ebp - 0x700b7c7c]; clc; call dword ptr [eax + 0x51]; 
0x000561a6: add cl, byte ptr [ecx - 0x365f73]; call dword ptr [eax - 0x75]; 
0x000ef217: add cl, byte ptr [ecx - 0x47f7b]; call dword ptr [edx - 0x77]; 
0x000b0d3a: add cl, byte ptr [ecx - 0x776f7be]; pop edi; pop ebx; ret; 
0x000aef4a: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x000af03a: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x0003feaf: add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x001a587a: add cl, byte ptr [ecx - 0x7ca1f78e]; ret 0x830c; 
0x0005b5bc: add cl, byte ptr [ecx - 0x8f6b]; dec dword ptr [ecx - 0x876b]; call dword ptr [eax - 1]; 
0x00063320: add cl, byte ptr [ecx]; ret 0xb70f; 
0x000a246b: add cl, byte ptr [ecx]; ret; 
0x000c33cf: add cl, byte ptr [edi]; inc esp; ret 0x66c3; 
0x000a0d2c: add cl, byte ptr [edi]; inc esp; ret 0x938b; 
0x0009e950: add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x0018f917: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000de08c: add cl, byte ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0008174d: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00108544: add cl, byte ptr [edi]; test byte ptr [ebp - 0x7d000000], dh; ret; 
0x000301c5: add cl, byte ptr [edi]; test byte ptr [edi - 0x7cffffff], dh; rol byte ptr [ecx], 0x83; ret; 
0x000b119d: add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x001a3e6c: add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001a30bc: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a3c3c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000b0dbd: add cl, byte ptr [edi]; test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00101ae3: add cl, byte ptr [edi]; test dword ptr [ebx - 0x9fffff1], esi; ret 0xf04; 
0x000b83be: add cl, byte ptr [edi]; test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001a47c8: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x001a3eca: add cl, byte ptr [edi]; test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x001583b7: add cl, byte ptr [edi]; test dword ptr [edx + 0x39000000], ecx; inc edx; add al, 0xf; test byte ptr [ecx - 0x7d000000], al; ret 0x8014; 
0x001a310b: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x000f5bf7: add cl, byte ptr [edi]; test edi, ecx; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001a46b5: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x0010df86: add cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x000302a9: add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00175102: add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x00158a53: add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00132617: add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000cd788: add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0007add4: add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0004ca30: add cl, ch; mov edx, 0x8bffffe6; jl 0x4ca5d; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x000734d7: add cl, ch; pop esi; jecxz 0x734db; dec dword ptr [ebx - 0x5077b]; jmp dword ptr [ebp - 0x77]; 
0x000a2105: add cl, ch; push 0x8dfffff8; xchg dword ptr [ecx + ebp*4], ecx; stc; call dword ptr [eax + 0x68]; 
0x0004f5c4: add cl, ch; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x000f32e8: add cl, ch; ret 0xfff1; 
0x001abf9a: add cl, ch; ret 0xfff5; 
0x00103230: add cl, ch; ret 0xfffa; 
0x000e3d9c: add cl, ch; ret 0xfffd; 
0x000f8157: add cl, ch; ret 0xfffe; 
0x0003de4c: add cl, ch; ret; 
0x0009baf8: add cl, ch; sar esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x00067de8: add cl, ch; sub ah, 0xff; jmp dword ptr [esi - 0x70]; 
0x0007546e: add cl, ch; sub dh, 0xff; dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x00042dd3: add cl, dl; call 0x21060e5d; ret 0xb60f; 
0x00090a79: add cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00106b22: add dh, 0xf1; inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x0003ff1d: add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a972f: add dh, al; add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x00024b84: add dh, al; inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b130370], ecx; jmp dword ptr [ebp + 0x33]; 
0x00131d1f: add dh, al; inc edx; jmp dword ptr [eax]; 
0x00064214: add dh, al; inc esp; and al, 0x4c; add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x001574e2: add dh, al; inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000636cf: add dh, al; inc esp; and al, 0x58; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x0019e936: add dh, bh; fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x001a0106: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x001a0666: add dh, bh; fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0011c761: add dh, bh; jmp dword ptr [ebp - 0x75]; 
0x0008dc1d: add dh, bh; jne 0x8dbc1; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00193bd4: add dh, bh; ret 0xf; 
0x00193b9a: add dh, bh; ret 2; 
0x00109699: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000a2196: add dh, bl; stosd dword ptr es:[edi], eax; pop ebx; pop esi; pop edi; ret; 
0x00109621: add dh, bl; stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0006e138: add dh, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x000bf59c: add dh, byte ptr [eax]; ret; 
0x0012dba5: add dh, byte ptr [ebp + 0x28]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001a292e: add dh, byte ptr [ebp + 0x4f]; test dh, 4; jne 0x1a2984; add eax, 0xb; ret; 
0x0007f802: add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x001a28e8: add dh, byte ptr [ebp + 0x75]; test dl, 4; jne 0x1a2964; add eax, 3; ret; 
0x001519bf: add dh, byte ptr [ebp + 6]; mov eax, ecx; ret; 
0x0008fc38: add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x00149a10: add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x0008f647: add dh, byte ptr [ebp - 0x77]; ret 0xe283; 
0x0008fd87: add dh, byte ptr [ebx - 0x77]; ret 0xe283; 
0x000f87c3: add dh, byte ptr [ecx]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00149a0a: add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x0010980b: add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00097bd6: add dh, byte ptr [edi + 0xf]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00156c2e: add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0018c88b: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001611e5: add dh, byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001259e1: add dh, byte ptr [esi + 0x2c]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000dc0c7: add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x0008ea6f: add dh, byte ptr [esi + 6]; ret; 
0x0009aef3: add dh, byte ptr [esp + edi*4 + 0x5b]; pop esi; ret; 
0x0008fada: add dh, byte ptr [esp - 0x77]; ret 0xe283; 
0x000fabc4: add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0012c981: add dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001a526f: add dh, dh; les eax, ptr [ecx]; jne 0x1a5290; lea eax, [ecx + 0xc]; ret; 
0x001a3108: add dh, dh; les eax, ptr [edx]; jne 0x1a31a0; lea eax, [edi - 8]; pop edi; ret; 
0x001a3c88: add dh, dh; les eax, ptr [edx]; jne 0x1a3d20; lea eax, [ecx + 8]; ret; 
0x001a3131: add dh, dh; les esp, ptr [eax]; jne 0x1a31d0; lea eax, [edi - 4]; pop edi; ret; 
0x001a3cb1: add dh, dh; les esp, ptr [eax]; jne 0x1a3d50; lea eax, [ecx + 0xc]; ret; 
0x0007b4a3: add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0007df67: add dh, dh; ret 0x7420; 
0x001a20ed: add dh, dh; ret 0x7501; 
0x00031dad: add dh, dh; ret 0x7503; 
0x000b920f: add dh, dh; ret 0x7510; 
0x00137e17: add dh, dh; ret 0x7520; 
0x000fd994: add dh, dh; ret 0x7540; 
0x0005d7d2: add dh, dh; ret 0xf01; 
0x000990bb: add dh, dh; ret 0xf02; 
0x000322f5: add dh, dh; ret 0xf03; 
0x000796c6: add dh, dh; ret 0xf04; 
0x001ac9cb: add dh, dh; ret 0xf07; 
0x0002a742: add dh, dh; ret 0xf08; 
0x001a5161: add dh, dh; ret 0xf0f; 
0x0005c0ee: add dh, dh; ret 0xf10; 
0x00109e6c: add dh, dh; ret 0xf20; 
0x0005b41c: add dh, dh; ret 0xf40; 
0x0005b3ff: add dh, dh; ret 0xf50; 
0x00109e75: add dh, dh; ret 0xf80; 
0x00029642: add dh, dh; ret; 
0x000ee433: add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x0015973e: add dl, 0x6f; stc; call dword ptr [eax - 1]; 
0x0018fa19: add dl, 0x80; cli; jmp dword ptr [esi - 0x70]; 
0x0018da19: add dl, 0xa0; cli; jmp dword ptr [esi - 0x70]; 
0x0018c019: add dl, 0xba; cli; jmp dword ptr [esi - 0x70]; 
0x0011301a: add dl, bh; cli; jmp dword ptr [esi + 3]; 
0x0011e897: add dl, byte ptr [eax + eax]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00169199: add dl, byte ptr [ebx - 1]; adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x00153bda: add dl, byte ptr [ebx - 2]; jmp dword ptr [esi - 0x70]; 
0x0008fedd: add dl, byte ptr [edi - 0x18]; mov esp, 0x890008f6; ret; 
0x00090264: add dl, byte ptr [edi - 0x18]; xor eax, 0x890008f3; ret; 
0x000a2a0c: add dword ptr [0x8d500000], ecx; xchg dword ptr [eax - 0x5b], esi; stc; call dword ptr [eax - 0x18]; 
0x0014584b: add dword ptr [0x8feb0974], ebp; lea esi, [esi]; xor eax, eax; ret; 
0x00095953: add dword ptr [0xa30f0000], 0xe9ac73c2; cmp dh, 0xff; dec dword ptr [ebp - 0x668ff79]; call dword ptr [eax - 0x73]; 
0x0009d496: add dword ptr [eax + 0x115], edi; call dword ptr gs:[0x10]; 
0x0009dae7: add dword ptr [eax + 0x116], edi; call dword ptr gs:[0x10]; 
0x001762f4: add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00176308: add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000c07d4: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x000fa821: add dword ptr [eax + 0x4f], -7; call dword ptr [eax + 0x55]; 
0x00089abe: add dword ptr [eax + 0x56], edx; call dword ptr [ebp + 0xc]; 
0x000c0c2b: add dword ptr [eax + 0x56], edx; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x000bd6f4: add dword ptr [eax + 0x5bf88902], ecx; pop edi; ret; 
0x000c0862: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x000c024b: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x000b3351: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x000bfa96: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x000a7c8b: add dword ptr [eax + 0x5f], eax; ret; 
0x000aef91: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x00122e89: add dword ptr [eax + 0x62], -7; call dword ptr [eax + 0x55]; 
0x001854b5: add dword ptr [eax + 0xf0], edi; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016e321: add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00042010: add dword ptr [eax + 2], edi; bsr ecx, ecx; shl eax, cl; ret; 
0x00041ff0: add dword ptr [eax + 2], edi; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x000420c1: add dword ptr [eax + 2], edi; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0013c5e3: add dword ptr [eax + 2], edi; ret; 
0x0014cb7d: add dword ptr [eax + 8], 1; je 0x14cba6; add esp, 0xc; ret; 
0x000f758f: add dword ptr [eax + eax*8 - 0x3fce368b], eax; ret; 
0x0013a982: add dword ptr [eax + eax], -0x7f; ret 0xc48f; 
0x00194d6b: add dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e9bb0: add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x0011e8bf: add dword ptr [eax + eax], edx; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000a6935: add dword ptr [eax + ebp*8 - 0x7d], esi; ret 0x8b01; 
0x00092f1d: add dword ptr [eax + ebx - 0x7d], esi; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x0012fcc6: add dword ptr [eax + ebx*2], 1; pop ebx; ret; 
0x00147e33: add dword ptr [eax - 0x18], edx; push esi; fdivr st(7); jmp dword ptr [ebp - 0x75]; 
0x001747f4: add dword ptr [eax - 0x37], -7; call dword ptr [edx + 0x6a]; 
0x000c36c2: add dword ptr [eax - 0x6bf0d005], eax; ret; 
0x00098849: add dword ptr [eax - 0x73], edx; test esp, ebx; sbb ah, dh; call dword ptr [eax - 0x73]; 
0x00147af8: add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x001ac422: add dword ptr [eax - 0x877b], ecx; push edi; ret; 
0x000a11d0: add dword ptr [eax], -0x57; stc; call dword ptr [eax - 0x73]; 
0x0003e7b4: add dword ptr [eax], -0x7a; stc; call dword ptr [eax - 0x18]; 
0x000c413b: add dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x000624a4: add dword ptr [eax], 0; add byte ptr [ecx], al; ret; 
0x000839b5: add dword ptr [eax], 0x10c48300; pop ebx; pop esi; pop edi; ret; 
0x00039a81: add dword ptr [eax], 0x56; stc; dec dword ptr [edi]; inc ebp; call 0x2b276; jmp dword ptr [esi - 0x70]; 
0x00111bc1: add dword ptr [eax], 0xa30f8000; ret 0xd873; 
0x000963c2: add dword ptr [eax], 0xf6310000; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008dd94: add dword ptr [eax], 0xf6310000; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00159be2: add dword ptr [eax], eax; add bh, bh; je 0x159c0c; push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0014a64e: add dword ptr [eax], eax; add bh, dh; ret 0; 
0x000bff1f: add dword ptr [eax], eax; add bh, dh; ret 3; 
0x000e4929: add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00028def: add dword ptr [eax], eax; add bl, ch; fisttp dword ptr [ebx - 0x72c3db84]; xchg esp, ebp; jnp 0x28df6; call dword ptr [eax - 0x73]; 
0x0002a991: add dword ptr [eax], eax; add bl, ch; fisttp dword ptr [ebx - 0x72c7db84]; xchg dword ptr [eax - 0x7e], ebx; stc; call dword ptr [eax - 0x73]; 
0x0016f2e7: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0016f2e7: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0003c295: add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c33c: add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000934c1: add dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b532e: add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00031adf: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc byte ptr [esp + edi], 0xf9; call dword ptr [eax - 0x18]; 
0x00146b0b: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add esp, 0x6b; stc; call dword ptr [eax - 0x18]; 
0x00031b04: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp bh, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00151a91: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x6e], 0xf9; call dword ptr [eax - 0x18]; 
0x001722be: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + 0x75], -7; call dword ptr [eax + 0x6a]; 
0x0014c929: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub al, 0xbf; stc; call dword ptr [eax - 0x18]; 
0x0014d42e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], 0x6d; stc; call dword ptr [eax - 0x18]; 
0x0009526e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [edx + 0x50], esi; stc; call dword ptr [eax - 0x18]; 
0x00027439: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x39], bl; stc; call dword ptr [eax - 0x18]; 
0x0002b644: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + eax*4 - 7], ah; call dword ptr [eax - 0x18]; 
0x0014240c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], cl; push -7; call dword ptr [eax - 0x18]; 
0x0009376c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x50], dh; stc; call dword ptr [eax - 0x18]; 
0x000299bc: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], al; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00027469: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x39], cl; stc; call dword ptr [eax - 0x18]; 
0x0002c2f2: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dh, cl; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00150761: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, bh; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0008707e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, dl; dec esi; stc; call dword ptr [eax - 0x18]; 
0x00134242: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x49], ebx; stc; call dword ptr [eax - 0x18]; 
0x00165716: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], ebx; jae 0x165718; call dword ptr [eax - 0x18]; 
0x0002aa58: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + eax*4 - 7], esp; call dword ptr [eax - 0x18]; 
0x0002a9cc: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002a9ef: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + eax*4], edi; stc; call dword ptr [eax - 0x18]; 
0x000921d8: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ecx; push eax; stc; call dword ptr [eax - 0x18]; 
0x001342ab: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + esi*4 - 7], edi; call dword ptr [eax - 0x18]; 
0x0002748d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], edi; cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x000921fa: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg edi, ebx; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00029f2f: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esi, ecx; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x001656f3: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esi, edi; jb 0x1656f5; call dword ptr [eax - 0x18]; 
0x00030e63: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ecx; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00092150: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, edx; pop eax; stc; call dword ptr [eax - 0x18]; 
0x00031b58: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor cl, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x000944fd: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [edx + 0x50], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0009455e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [edx*4 - 0x17af0007], 0x12; clc; stc; jmp dword ptr [esi - 0x70]; 
0x0014d83e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor esp, 0xffffffc0; stc; call dword ptr [eax - 0x18]; 
0x0011223b: add dword ptr [eax], eax; add byte ptr [eax - 0x749af732], al; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0014a542: add dword ptr [eax], eax; add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00078524: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008dd9b: add dword ptr [eax], eax; add byte ptr [eax], al; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0014384a: add dword ptr [eax], eax; add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0005a960: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0008b20c: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00122256: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001208a0: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0009d115: add dword ptr [eax], eax; add byte ptr [eax], al; call 0x9d080; mov dword ptr [esp], esi; call ebx; 
0x00023279: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7f47: add dword ptr [eax], eax; add byte ptr [eax], al; cmp dword ptr gs:[edx], 0x26; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x001981b1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1981b9; neg eax; ret; 
0x001999f1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1999f9; neg eax; pop ebp; ret; 
0x0019edf1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19edf9; neg eax; ret; 
0x0019f0e1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19f0e9; neg eax; pop ebp; ret; 
0x0019f2a1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19f2a9; neg eax; ret; 
0x0019fd88: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19fd90; neg eax; ret; 
0x001a0ff9: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a1001; neg eax; ret; 
0x001a2672: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a267a; neg eax; ret; 
0x001a0c87: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a0c90; neg eax; ret; 
0x001a0fb2: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a0fc0; neg eax; ret; 
0x001a50b2: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a50c0; neg eax; ret; 
0x000d6cd1: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xd6cd9; neg eax; ret; 
0x0006f7a2: add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006344d: add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x0017ff7c: add dword ptr [eax], eax; add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009e586: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e536: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4d6: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e506: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x370], edx; ret; 
0x00176036: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00176006: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0016a0b5: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00175f9d: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x0009be33: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x001519d1: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00084f09: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x0006f12b: add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x000910ed: add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008dd60: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000c04e8: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0011eb77: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000635bb: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00063443: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x00064053: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x0008dc65: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00173141: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0002326a: add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x000d6d43: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x0014d4f9: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x0007b4d1: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0005aa64: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00124e47: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00052f99: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x001743b6: add dword ptr [eax], eax; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0008d66c: add dword ptr [eax], eax; add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0005f732: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0016e323: add dword ptr [eax], eax; add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x0009e39c: add dword ptr [eax], eax; add byte ptr [eax], al; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x000f8220: add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xf8230; ret; 
0x0008f587: add dword ptr [eax], eax; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00149a64: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x00098656: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; ret; 
0x00024d62: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000420a1: add dword ptr [eax], eax; add byte ptr [eax], al; xor edx, edx; pop ebx; ret; 
0x00095b48: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f5b9: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f844: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008fa6e: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008f8df: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001854bc: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00090060: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000c0658: add dword ptr [eax], eax; add byte ptr [eax], cl; leave; jne 0xc0661; xor eax, eax; ret; 
0x00145ab8: add dword ptr [eax], eax; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x145aed; add esp, 0x11c; ret; 
0x000c1e17: add dword ptr [eax], eax; add byte ptr [ebp + 0x3ce892], cl; add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x000a3911: add dword ptr [eax], eax; add byte ptr [ebp + 0x79840ff6], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x170f7616], cl; pop ebx; ret; 
0x0005d997: add dword ptr [eax], eax; add byte ptr [ebp + 0xb6], cl; add byte ptr [edi], cl; mov dh, 0x51; or al, 0xf6; ret 0xf01; 
0x000344ed: add dword ptr [eax], eax; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00112437: add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00151f79: add dword ptr [eax], eax; add byte ptr [ebp - 0x63ca77a], cl; call dword ptr [eax - 0x73]; 
0x00024f1f: add dword ptr [eax], eax; add byte ptr [ebp - 0x6889380], cl; call dword ptr [eax + 0x6a]; 
0x00091de7: add dword ptr [eax], eax; add byte ptr [ebp - 0x6b05b79], cl; call dword ptr [eax - 0x73]; 
0x00090d19: add dword ptr [eax], eax; add byte ptr [ebp - 0x6b09579], cl; call dword ptr [eax - 0x73]; 
0x00046d2f: add dword ptr [eax], eax; add byte ptr [ebp - 0x6bfc179], cl; call dword ptr [eax - 0x73]; 
0x0004dcb1: add dword ptr [eax], eax; add byte ptr [ebp - 0x6bfcb79], cl; call dword ptr [eax - 0x73]; 
0x0003277f: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c32350], cl; jmp dword ptr [ebp - 0x75]; 
0x00028dcc: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c54579], cl; call dword ptr [eax - 0x73]; 
0x000299fc: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c5457a], cl; call dword ptr [eax - 0x73]; 
0x00028722: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c5457d], cl; call dword ptr [eax - 0x73]; 
0x000342d1: add dword ptr [eax], eax; add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x24408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034240: add dword ptr [eax], eax; add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x24408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x000342a1: add dword ptr [eax], eax; add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x2c408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034210: add dword ptr [eax], eax; add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x2c408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003292d: add dword ptr [eax], eax; add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x54408b00], cl; ret; 
0x000e5e48: add dword ptr [eax], eax; add byte ptr [ebp - 0x75], ah; or eax, 0x14; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x000a6d4f: add dword ptr [eax], eax; add byte ptr [ebp - 0xa9ba37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013884f: add dword ptr [eax], eax; add byte ptr [ebp - 0xa9bb37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a6d9f: add dword ptr [eax], eax; add byte ptr [ebp - 0xa9ec37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013889f: add dword ptr [eax], eax; add byte ptr [ebp - 0xa9ed37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a651f: add dword ptr [eax], eax; add byte ptr [ebp - 0xaa1e37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001387ff: add dword ptr [eax], eax; add byte ptr [ebp - 0xaa1f37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0012a87d: add dword ptr [eax], eax; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0017e156: add dword ptr [eax], eax; add byte ptr [ebx + 0x1442474], cl; ret; 
0x000e5e56: add dword ptr [eax], eax; add byte ptr [ebx + 0x164248c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011224c: add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005f729: add dword ptr [eax], eax; add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x0011bdae: add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000e24e4: add dword ptr [eax], eax; add byte ptr [ebx + 0x31c2444], cl; test byte ptr [eax - 0x70488], cl; jmp eax; 
0x000ef903: add dword ptr [eax], eax; add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x00131a2d: add dword ptr [eax], eax; add byte ptr [ebx + 0x390c2444], cl; ret 0x830f; 
0x0017fab2: add dword ptr [eax], eax; add byte ptr [ebx + 0x3a080], cl; add byte ptr [ebp - 0x76ee8b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0017037a: add dword ptr [eax], eax; add byte ptr [ebx + 0x438b08ec], al; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0008661c: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000fb7aa: add dword ptr [eax], eax; add byte ptr [ebx + 0x48b9f14], cl; and al, 0x29; ret 0x5689; 
0x000d1269: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000ec66d: add dword ptr [eax], eax; add byte ptr [ebx + 0x4b7714f8], al; mov edi, dword ptr [edx + eax*4 - 0x6fcf8]; add edi, edx; jmp edi; 
0x001538cd: add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0011d1a5: add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x000f804f: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e0878c], cl; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x00172a13: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c143e: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000823ce: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x000c0b3c: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0003c329: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00120fe5: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003c0fd: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003c60e: add dword ptr [eax], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0008ac36: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x001831ed: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0007d0a3: add dword ptr [eax], eax; add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x7d0bb; push esi; call dword ptr [ebx + 0x2c]; 
0x0008cceb: add dword ptr [eax], eax; add byte ptr [ebx + 0x9080], cl; add cl, al; call 0x1e95005; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x00086c8a: add dword ptr [eax], eax; add byte ptr [ebx + 0x9202444], cl; ret; 
0x00059f90: add dword ptr [eax], eax; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x001122f3: add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x001487e8: add dword ptr [eax], eax; add byte ptr [ebx + 0xf1c244c], cl; mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x0011ff85: add dword ptr [eax], eax; add byte ptr [ebx + 0xfcb3], cl; add bh, bh; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x00129c02: add dword ptr [eax], eax; add byte ptr [ebx + 3], bh; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0008496f: add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x0017089e: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000873e7: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00098cd6: add dword ptr [eax], eax; add byte ptr [ebx - 0x17a9f314], al; push ds; mov ecx, 0xc4830008; adc byte ptr [ebp - 0x16588a40], al; ret 0xfffe; 
0x000d0942: add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0005791f: add dword ptr [eax], eax; add byte ptr [ebx - 0x361f7b], cl; push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x00055a27: add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00057bf0: add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00120f22: add dword ptr [eax], eax; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0012141e: add dword ptr [eax], eax; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x121429; ret; 
0x0007234b: add dword ptr [eax], eax; add byte ptr [ebx - 0x4ff7b], cl; dec dword ptr [ebx - 0x51373]; inc dword ptr [ebx]; test byte ptr [eax - 0x72418], bl; jmp eax; 
0x000f8d5c: add dword ptr [eax], eax; add byte ptr [ebx - 0x5cf0afa9], cl; ret 0x830f; 
0x0006b29f: add dword ptr [eax], eax; add byte ptr [ebx - 0x5e76b], cl; dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x00096e08: add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0011de8d: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0011b8bb: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9b1: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x00028c71: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; jnp 0x28c76; call dword ptr [eax - 0x73]; 
0x0002af75: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; jp 0x2af7a; call dword ptr [eax - 0x73]; 
0x0002986c: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x0009ee37: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3dbbc], cl; or ah, 0x9a; stc; call dword ptr [eax + 0x6a]; 
0x0002de71: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0014fe56: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x001a3dab: add dword ptr [eax], eax; add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000e4f63: add dword ptr [eax], eax; add byte ptr [ebx - 0x76abdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x000e4f04: add dword ptr [eax], eax; add byte ptr [ebx - 0x76abdbb4], cl; cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0013b218: add dword ptr [eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x000a7478: add dword ptr [eax], eax; add byte ptr [ebx - 0x76dfdbbc], cl; shr dword ptr [ecx], cl; ret; 
0x0003d600: add dword ptr [eax], eax; add byte ptr [ebx - 0x77], dl; ret; 
0x000305d3: add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; sub al, 0x84; stc; call dword ptr [eax + 0x56]; 
0x0009f4d4: add dword ptr [eax], eax; add byte ptr [ebx - 0x7872fb14], al; cld; push ecx; stc; call dword ptr [eax + 0x53]; 
0x001a4572: add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x001785c1: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf00003], al; ret; 
0x001a0482: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0019ff21: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x00145db9: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; adc ebp, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0015145c: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; pop ds; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0015143c: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; les ebp, ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x000ad695: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x00157111: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3db8c], cl; ret 0x8301; 
0x001137f5: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0005e4db: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cfbdbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x001ab4c7: add dword ptr [eax], eax; add byte ptr [ebx - 0x8b73], al; call dword ptr [eax]; 
0x0007b5a5: add dword ptr [eax], eax; add byte ptr [ebx - 0xa8fb14], al; jne 0x7b5b7; push esi; call dword ptr [ebx + 0x1c]; 
0x0007c7ab: add dword ptr [eax], eax; add byte ptr [ebx - 0xa9fb14], al; jne 0x7c7bd; push edx; call dword ptr [ebx + 0x1c]; 
0x0003eb1d: add dword ptr [eax], eax; add byte ptr [ebx - 0xaef714], al; je 0x3eb4b; dec esp; call eax; 
0x000344b1: add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x00170ae0: add dword ptr [eax], eax; add byte ptr [ebx], al; test byte ptr [eax - 0x6c8d0], dl; jmp eax; 
0x0009d8aa: add dword ptr [eax], eax; add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x000ca6ee: add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x000d88d3: add dword ptr [eax], eax; add byte ptr [ecx + 0x50342444], cl; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0017be1c: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x00130d78: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x001a9aee: add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0008efb2: add dword ptr [eax], eax; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000ec658: add dword ptr [eax], eax; add byte ptr [ecx + 0xd0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0015141c: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; dec dword ptr [ecx + 0x27838dc2]; inc ebp; stc; call dword ptr [eax + 0x52]; 
0x0016f813: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00151406: add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0017bc4a: add dword ptr [eax], eax; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x000a3919: add dword ptr [eax], eax; add byte ptr [ecx - 0x170f7616], cl; pop ebx; ret; 
0x0008c20f: add dword ptr [eax], eax; add byte ptr [ecx - 0x3b7cf3bd], cl; add al, 0x5b; pop esi; ret; 
0x000716c4: add dword ptr [eax], eax; add byte ptr [ecx - 0x54f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000654a4: add dword ptr [eax], eax; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x0009ff2c: add dword ptr [eax], eax; add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x0009f5b3: add dword ptr [eax], eax; add byte ptr [ecx - 0x74207612], cl; dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x0012d104: add dword ptr [eax], eax; add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x0003f680: add dword ptr [eax], eax; add byte ptr [ecx - 0x76e7dbbc], cl; ret; 
0x00027ab0: add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00101580: add dword ptr [eax], eax; add byte ptr [ecx - 0x7aafdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x00109f17: add dword ptr [eax], eax; add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000a9e06: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x940936e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a7b16: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x944736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9bd6: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x947936e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00136a55: add dword ptr [eax], eax; add byte ptr [ecx], al; call eax; 
0x000a6e46: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaa774]; cmovne eax, edx; ret; 
0x00138906: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaa784]; cmovne eax, edx; ret; 
0x00039fd0: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x430f; 
0x0014fe4e: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x0007b2ca: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000d8a05: add dword ptr [eax], eax; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x0011226b: add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x000cfe88: add dword ptr [eax], eax; add byte ptr [ecx], dh; jmp dword ptr [ebp - 0x75]; 
0x0003d729: add dword ptr [eax], eax; add byte ptr [ecx], dh; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x000b0f0d: add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000d6b52: add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0011c5e1: add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x001054c5: add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000bea02: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00112355: add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00051b85: add dword ptr [eax], eax; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00181cd4: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ch, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x000d86aa: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x0008240a: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x001843cc: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00079f41: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00170db2: add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x00087f71: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00082021: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00087ec6: add dword ptr [eax], eax; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x001328a2: add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x001329a5: add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebp + 0x14]; 
0x001a3a8c: add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0003cf70: add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011eca6: add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x001a5365: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x001a5305: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000796b6: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x001a2b26: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00040e47: add dword ptr [eax], eax; add dh, dh; ret 0xf03; 
0x001a2b37: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0002a740: add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x001a2acf: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001a2ae0: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a2af1: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0005d945: add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x000a227f: add dword ptr [eax], eax; add dh, dh; ret; 
0x000c2537: add dword ptr [eax], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000a5eee: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0003d96e: add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0011fa7a: add dword ptr [eax], eax; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0006056a: add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0005fd03: add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000c08fa: add dword ptr [eax], eax; dec ecx; jne 0xc08f8; pop esi; ret; 
0x0008d932: add dword ptr [eax], eax; inc eax; add byte ptr [eax], al; ret; 
0x000419be: add dword ptr [eax], eax; xor eax, eax; ret; 
0x000a0ce7: add dword ptr [eax], ecx; add byte ptr [eax], al; add cl, ch; ret; 
0x000a6931: add dword ptr [eax], edi; inc esp; adc eax, 0x83e87401; ret 0x8b01; 
0x000a934d: add dword ptr [eax], edi; ret; 
0x000bf16c: add dword ptr [eax], edx; ret; 
0x000bf18c: add dword ptr [eax], esi; ret; 
0x00082f21: add dword ptr [eax], esp; je 0x82f30; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x82f30; ret; 
0x000bf17c: add dword ptr [eax], esp; ret; 
0x000aa530: add dword ptr [ebp + 0x100054c], ecx; ret; 
0x001a5265: add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x001a5272: add dword ptr [ebp + 0x1b], esi; lea eax, [ecx + 0xc]; ret; 
0x000961ce: add dword ptr [ebp + 0x1f], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000f7e44: add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x00151f3e: add dword ptr [ebp + 0x27], esi; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x001a5b32: add dword ptr [ebp + 0x2b], esi; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001a5b1a: add dword ptr [ebp + 0x33], esi; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000c53cd: add dword ptr [ebp + 0x390775d2], eax; ret; 
0x00046b6d: add dword ptr [ebp + 0x390775db], eax; sal dword ptr [ebp - 0x16], 0x83; ret 0x8b01; 
0x00097ea8: add dword ptr [ebp + 0x39c075ff], eax; ret 0xd974; 
0x000984a4: add dword ptr [ebp + 0x49], esi; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00144b45: add dword ptr [ebp + 0x508dbf70], ecx; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x0006d61d: add dword ptr [ebp + 0x64], eax; jecxz 0x6d621; jmp eax; 
0x000dcb85: add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0008ae61: add dword ptr [ebp + 0xc], esi; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00152a42: add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x000974f5: add dword ptr [ebp + 8], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00040865: add dword ptr [ebp + eax - 0x18], esi; ret; 
0x000987b8: add dword ptr [ebp + ecx - 0x10], esi; sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x001519b8: add dword ptr [ebp + edx + 0x31], esi; leave; cmp eax, 2; jne 0x1519c8; mov eax, ecx; ret; 
0x000aab85: add dword ptr [ebp - 0x13], esi; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x00052f94: add dword ptr [ebp - 0x17], esi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000ad054: add dword ptr [ebp - 0x17], esi; pop ebx; pop esi; pop edi; ret; 
0x0007e4a6: add dword ptr [ebp - 0x18], edx; ret; 
0x00099842: add dword ptr [ebp - 0x19d62379], ecx; call dword ptr [ebx + 0x50]; 
0x000a5637: add dword ptr [ebp - 0x1a], esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x001248ef: add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x000a48af: add dword ptr [ebp - 0x2a], esi; sub esp, 0xc; push eax; call edx; 
0x000975b5: add dword ptr [ebp - 0x32], esi; mov eax, 0x10; pop ebx; ret; 
0x0004256c: add dword ptr [ebp - 0x3dbaf040], eax; ret; 
0x00053370: add dword ptr [ebp - 0x6df0fbb1], ecx; ret 0x789; 
0x001280f5: add dword ptr [ebp - 0x74e98740], eax; inc esi; add al, 0x89; ret 0xe083; 
0x0013c923: add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x0013c84b: add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000b6d54: add dword ptr [ebp - 0x7af0fe81], ecx; mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x000b0d98: add dword ptr [ebp - 0x7af0feb6], ecx; add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00135b23: add dword ptr [ebp - 0x7c138a40], eax; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001201ac: add dword ptr [ebp - 0x7c988a0a], eax; in al, dx; or byte ptr [ebp - 0x6c1a67d], cl; call dword ptr [eax + 0x6a]; 
0x000a6d77: add dword ptr [ebp - 0xa11e36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00138877: add dword ptr [ebp - 0xa11f36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a6dc7: add dword ptr [ebp - 0xa21d36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001388c7: add dword ptr [ebp - 0xa21e36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00138827: add dword ptr [ebp - 0xa31c36e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a6e49: add dword ptr [ebp - 0xaa7736e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00138909: add dword ptr [ebp - 0xaa7836e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0012ece4: add dword ptr [ebx + 0x18], edi; call dword ptr gs:[0x10]; 
0x0008b1f0: add dword ptr [ebx + 0x1a78], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000a9af2: add dword ptr [ebx + 0x2930244c], ecx; ret; 
0x0018032e: add dword ptr [ebx + 0x33ff04ec], 0x74ff36ff; and al, 0x10; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000bdb4f: add dword ptr [ebx + 0x3888ffd8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0010d77c: add dword ptr [ebx + 0x39042444], ecx; ret; 
0x001a9561: add dword ptr [ebx + 0x3904806d], eax; ret 0x850f; 
0x0014b589: add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x0014ab68: add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x0014b7b1: add dword ptr [ebx + 0x3948245c], ecx; sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x00043c7b: add dword ptr [ebx + 0x394c2444], ecx; ret 0x8d0f; 
0x00099131: add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000a5821: add dword ptr [ebx + 0x4d2b0cc4], eax; add byte ptr [ecx], ch; ret 0xd801; 
0x0016da6c: add dword ptr [ebx + 0x50572048], ecx; call dword ptr [ecx + 8]; 
0x000b4e65: add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00059e5b: add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0012ff9a: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x00082cec: add dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x000987bf: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000a9815: add dword ptr [ebx + 0x5e], ebx; ret; 
0x0008eb24: add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0003fe0e: add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x000b3553: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af173: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3573: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000af193: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00143850: add dword ptr [ebx + 2], edi; call dword ptr gs:[0x10]; 
0x0008e97a: add dword ptr [ebx + edx - 0x7b], esi; sal byte ptr [ebp + 0x1f], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00038415: add dword ptr [ebx - 0x17aaf314], eax; add dword ptr [ebx - 0x3b7cfff8], eax; adc byte ptr [ecx], ch; ret; 
0x001327c8: add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00090aee: add dword ptr [ebx - 0x2ff60120], eax; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00058a8a: add dword ptr [ebx - 0x362743], eax; call dword ptr [eax]; 
0x0016af6c: add dword ptr [ebx - 0x39d6f3bd], ecx; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0003841b: add dword ptr [ebx - 0x3b7cfff8], eax; adc byte ptr [ecx], ch; ret; 
0x000f758c: add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xf755d; xor eax, eax; ret; 
0x00083927: add dword ptr [ebx - 0x3fcef73c], eax; pop ebx; ret; 
0x00082b29: add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x000729e7: add dword ptr [ebx - 0x4ef43], eax; call dword ptr [eax]; 
0x000773e5: add dword ptr [ebx - 0x5037b], ecx; dec dword ptr [ecx - 0x52b6b]; inc dword ptr [ecx]; ret; 
0x000754c1: add dword ptr [ebx - 0x50b7b], ecx; dec dword ptr [ecx + 0xfc085c6]; test esi, ebp; ret; 
0x0019bf87: add dword ptr [ebx - 0x54737474], ecx; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x0006b475: add dword ptr [ebx - 0x5e77b], ecx; dec dword ptr [ecx - 0x59773]; call dword ptr [edx + 0x52]; 
0x0003898e: add dword ptr [ebx - 0x69f0f606], eax; ret 0xb60f; 
0x00157ff0: add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x000a4189: add dword ptr [ebx - 0x72cbdba4], ecx; sbb dword ptr [esi], 0x54; stc; call dword ptr [eax - 0x18]; 
0x0013e624: add dword ptr [ebx - 0x72e7dbbc], ecx; sbb ah, 0x3c; stc; call dword ptr [eax + 0x55]; 
0x001502a6: add dword ptr [ebx - 0x72ebdb8c], ecx; xchg byte ptr [edi + 0x39], ah; stc; call dword ptr [eax + 0x53]; 
0x0013f116: add dword ptr [ebx - 0x72f7dbbc], ecx; sbb ah, 0x3c; stc; call dword ptr [eax + 0x56]; 
0x000ed384: add dword ptr [ebx - 0x76ebdbbc], ecx; push ebx; adc al, 0x8d; or byte ptr [ebp + 0x40], 0xf9; call dword ptr [eax - 0x77]; 
0x00140864: add dword ptr [ebx - 0x79f0f008], eax; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x00037121: add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x000dd1a8: add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x00026a34: add dword ptr [ebx - 0x7d], edx; ret; 
0x000531a7: add dword ptr [ebx - 0xa], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x000fad35: add dword ptr [ebx - 7], eax; call dword ptr [edx + 0x52]; 
0x001854b3: add dword ptr [ebx], 1; mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00088daa: add dword ptr [ebx], ecx; add byte ptr [ebp + 0x448b0076], cl; and al, 4; test byte ptr [eax], 0x80; jne 0x88dc0; ret; 
0x0007ecb8: add dword ptr [ecx + 0x19881472], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00131be6: add dword ptr [ecx + 0x244c8bda], ecx; sbb al, 0x29; ret 0xca39; 
0x00040ffc: add dword ptr [ecx + 0x245489e8], ecx; adc al, 0x83; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x00146eba: add dword ptr [ecx + 0x2c706], ecx; add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x000b33c1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b34f1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000aefe1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000af111: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b6261: add dword ptr [ecx + 0x3428d02], ecx; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3291: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x000b34c1: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x0002f3c0: add dword ptr [ecx + 0x3b], -7; call dword ptr [eax - 0x18]; 
0x000b34e1: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000af101: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000351f1: add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x000b34d1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000af0f1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b6751: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b50be: add dword ptr [ecx + 0x4428d02], ecx; pop edi; pop ebx; ret; 
0x0003e85e: add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x000a9e4b: add dword ptr [ecx + 0x4c48303], ecx; mov eax, esi; pop ebx; pop esi; ret; 
0x00065376: add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x000b1d81: add dword ptr [ecx + 0x5bd08902], ecx; ret; 
0x000bd734: add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x00082c76: add dword ptr [ecx + 0x5e5b044a], ecx; pop edi; ret; 
0x001308b7: add dword ptr [ecx + 0x5f5e5bd8], ecx; ret; 
0x000b0cce: add dword ptr [ecx + 0x5ff88902], ecx; pop ebx; ret; 
0x000aeed1: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0016204f: add dword ptr [ecx + 0x72], -7; call dword ptr [eax - 0x18]; 
0x000accde: add dword ptr [ecx + 0x75ff851e], ecx; mov al, 0x83; ret 0x8301; 
0x000fd948: add dword ptr [ecx + 0xf082454], ecx; sahf; ret 0x5420; 
0x0009631c: add dword ptr [ecx + eax*2 - 0x48], esi; lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x00172a91: add dword ptr [ecx + eax], 0; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0013fbd4: add dword ptr [ecx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f86d0: add dword ptr [ecx - 0x13], edi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00085c67: add dword ptr [ecx - 0x2776eb90], ecx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0014fe5f: add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x00078546: add dword ptr [ecx - 0x3b7cfbaf], ecx; adc al, 0x5b; pop esi; ret; 
0x000a5ec4: add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x0014daa0: add dword ptr [ecx - 0x45548acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009be2d: add dword ptr [ecx - 0x45618acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00172cd5: add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x000ee9e6: add dword ptr [ecx - 0x4837b], ecx; inc dword ptr [ecx]; ret; 
0x0008a1f1: add dword ptr [ecx - 0x49f0fbbd], ecx; ret 0xdceb; 
0x00076b61: add dword ptr [ecx - 0x4ef73], ecx; call dword ptr [edx + 0x52]; 
0x00074607: add dword ptr [ecx - 0x4f74b], ecx; call dword ptr [esi - 1]; 
0x00077287: add dword ptr [ecx - 0x4fb73], ecx; call dword ptr [eax + 0x50]; 
0x00072a69: add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x00076ca6: add dword ptr [ecx - 0x51373], ecx; call dword ptr [eax + 0x50]; 
0x000721fd: add dword ptr [ecx - 0x53f63], ecx; dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x0007340b: add dword ptr [ecx - 0x54743], ecx; dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x00071cbe: add dword ptr [ecx - 0x5577b], ecx; jmp dword ptr [ebp - 0x39]; 
0x000c3a2f: add dword ptr [ecx - 0x6ff0f7bf], ecx; ret 0x4b8b; 
0x00147af1: add dword ptr [ecx - 0x72ebdbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00042dc8: add dword ptr [ecx - 0x74d3dbbc], ecx; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add cl, dl; call 0x21060e5d; ret 0xb60f; 
0x0008cba1: add dword ptr [ecx - 0x769adbbe], ecx; adc eax, 0x7c; pop ebx; ret; 
0x0008d4e9: add dword ptr [ecx - 0x769af7be], ecx; adc eax, 0x78; pop ebx; ret; 
0x00038e82: add dword ptr [ecx - 0x76e7dbbc], ecx; ret; 
0x000fd39a: add dword ptr [ecx - 0x7aefdba4], ecx; sar byte ptr [eax + 0x2d], 0x8b; push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x001633d2: add dword ptr [ecx - 0x7bfbdb8c], ecx; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x0002ae0a: add dword ptr [ecx - 0x7cb7dba4], ecx; ret; 
0x0002d0f7: add dword ptr [ecx - 0x7cdfdba4], ecx; ret; 
0x0002a2da: add dword ptr [ecx - 0x7ce3dba4], ecx; ret; 
0x000539c6: add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x0005d016: add dword ptr [ecx - 0xa36b], ecx; jmp dword ptr [esi - 0x7d]; 
0x0013e6a0: add dword ptr [ecx - 7], ebp; call dword ptr [eax + 0x6a]; 
0x0015eb4a: add dword ptr [ecx - 7], esi; call dword ptr [eax - 0x18]; 
0x0015ecbe: add dword ptr [ecx - 7], esi; call dword ptr [eax - 0x73]; 
0x000fad34: add dword ptr [ecx], 0x43; stc; call dword ptr [edx + 0x52]; 
0x0016abc6: add dword ptr [ecx], 0x4bc38100; ret 0xc; 
0x00086cb0: add dword ptr [ecx], 0x4f; stc; call dword ptr [eax - 0x75]; 
0x0015eb49: add dword ptr [ecx], 0x71; stc; call dword ptr [eax - 0x18]; 
0x0015ecbd: add dword ptr [ecx], 0x71; stc; call dword ptr [eax - 0x73]; 
0x0002a9ee: add dword ptr [ecx], 0x8d500000; xchg dword ptr [ecx + eax*4], edi; stc; call dword ptr [eax - 0x18]; 
0x00147903: add dword ptr [ecx], 0xa30f0800; ret 0x820f; 
0x001504b5: add dword ptr [ecx], 0xa30f0800; ret 0x830f; 
0x00111de1: add dword ptr [ecx], 0xa30f0800; ret 0x920f; 
0x001a3a8b: add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x00126748: add dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a5c07: add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0008ae60: add dword ptr [ecx], eax; jne 0x8ae70; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0006701b: add dword ptr [ecx], eax; ret 0x9589; 
0x0006ace9: add dword ptr [ecx], eax; ret; 
0x00090ad3: add dword ptr [ecx], eax; rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00113069: add dword ptr [ecx], eax; ror byte ptr [ecx + 0x244c89cb], cl; or al, 0x29; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x001a5c09: add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0005c5cb: add dword ptr [ecx], ebp; fdivr dword ptr [ecx]; ret 0xee7c; 
0x00143e95: add dword ptr [ecx], ebp; ret 0x5439; 
0x0014ab90: add dword ptr [ecx], ebp; ret 0x828d; 
0x0006d991: add dword ptr [ecx], ebp; ret; 
0x0009adb5: add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001286fd: add dword ptr [ecx], ecx; ret 0x1789; 
0x00128774: add dword ptr [ecx], ecx; ret 0x78b; 
0x00100bf1: add dword ptr [ecx], ecx; ret 0xf983; 
0x0003d5a7: add dword ptr [ecx], ecx; ret; 
0x001a85cd: add dword ptr [ecx], ecx; retf 0xb60f; ret 0x4589; 
0x0011f663: add dword ptr [ecx], edi; fdiv dword ptr [edx + 8]; xor eax, eax; pop ebx; ret; 
0x000a9486: add dword ptr [ecx], edi; fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x0005947d: add dword ptr [ecx], edi; ret 0x1e74; 
0x0010634b: add dword ptr [ecx], edi; ret 0x567e; 
0x0005c215: add dword ptr [ecx], edi; ret 0x574; 
0x0009b866: add dword ptr [ecx], edi; ret 0x830f; 
0x000a71ab: add dword ptr [ecx], edi; ret 0x872; 
0x001063a1: add dword ptr [ecx], edi; ret 0xda75; 
0x001213d8: add dword ptr [ecx], edi; ret 0xe075; 
0x00102d70: add dword ptr [ecx], edi; ret 0xe675; 
0x0011fc92: add dword ptr [ecx], edi; ret 0xe975; 
0x000ace75: add dword ptr [ecx], edi; ret 0xec72; 
0x000acf62: add dword ptr [ecx], edi; ret 0xef72; 
0x000fb7ec: add dword ptr [ecx], edi; ret 0xef7f; 
0x001ad8d1: add dword ptr [ecx], edi; ret 0xf37f; 
0x001a7ccb: add dword ptr [ecx], edi; ret 0xf67f; 
0x000366ca: add dword ptr [ecx], edi; ret; 
0x0005e4e4: add dword ptr [ecx], edi; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000ea2b9: add dword ptr [ecx], esi; call dword ptr [ebx - 0x18]; 
0x000ac429: add dword ptr [ecx], esi; sar byte ptr [eax], cl; pop ecx; add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x00042dd8: add dword ptr [ecx], esp; ret 0xb60f; 
0x001526fc: add dword ptr [edi + 0x11], edi; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000e6fe2: add dword ptr [edi + 0x1b], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000e6f92: add dword ptr [edi + 0x1b], edi; pop ebx; pop esi; pop edi; ret; 
0x0014bfd0: add dword ptr [edi + 0x1d], edi; add esp, 4; pop ebx; pop esi; ret; 
0x001805c6: add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0017b87d: add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x000da4b5: add dword ptr [edi + 0x20], edi; add esp, 8; pop ebx; ret; 
0x000e671c: add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000e629b: add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00152643: add dword ptr [edi + 0x22], edi; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00041182: add dword ptr [edi + 0x23], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0015baaa: add dword ptr [edi + 0x23], edi; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000412b1: add dword ptr [edi + 0x24], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017b8f9: add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x00108781: add dword ptr [edi + 0x24], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000924d0: add dword ptr [edi + 0x25], edi; add esp, 0x18; pop ebx; ret; 
0x00181970: add dword ptr [edi + 0x25], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00151e60: add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x0003fa2f: add dword ptr [edi + 0x26], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00150917: add dword ptr [edi + 0x26], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0017b7ff: add dword ptr [edi + 0x26], edi; add esp, 8; pop ebx; ret; 
0x0015d2fe: add dword ptr [edi + 0x27], edi; add esp, 0x18; pop ebx; ret; 
0x00041ed5: add dword ptr [edi + 0x28], edi; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00127d2d: add dword ptr [edi + 0x28], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00128eba: add dword ptr [edi + 0x2b], edi; add esp, 8; pop ebx; ret; 
0x00127e60: add dword ptr [edi + 0x2d], esi; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x000602e0: add dword ptr [edi + 0x35], edi; add esp, 0x18; pop ebx; ret; 
0x0010842a: add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x0008d89a: add dword ptr [edi + 0x3b], edi; pop ebx; pop esi; pop edi; ret; 
0x000601df: add dword ptr [edi + 0x3e], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00127c78: add dword ptr [edi + 0x4d], edi; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0015d004: add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00151374: add dword ptr [edi + 0x59], edi; pop ebx; pop esi; pop edi; ret; 
0x000f8abb: add dword ptr [edi + 0x5d], ebx; neg eax; ret; 
0x000b88e6: add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x001080da: add dword ptr [edi + 0x5e], edi; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0003e642: add dword ptr [edi + 0x74], edi; sub esp, 8; push 0; push edx; call eax; 
0x0012736a: add dword ptr [edi + 0xb], edi; add esp, 8; pop ebx; ret; 
0x0008b2a2: add dword ptr [edi + 0xb], edi; ret; 
0x0003e43a: add dword ptr [edi + 0xb], edi; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00097bf6: add dword ptr [edi + 0xf], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008eec6: add dword ptr [edi + 0xf], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00194030: add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00150d6d: add dword ptr [edi + 8], edi; ret; 
0x00040475: add dword ptr [edi + 8], edi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001097bd: add dword ptr [edi + 9], esi; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000c099f: add dword ptr [edi + eax - 0x7d], esi; mov byte ptr [eax + 0x100003c], dl; xor eax, eax; pop ebx; ret; 
0x000fbe22: add dword ptr [edi + eax - 7], -1; jmp ebx; 
0x001713e1: add dword ptr [edi + edx - 0x75], esi; push es; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000a5ea0: add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x00086cb1: add dword ptr [edi - 7], ecx; call dword ptr [eax - 0x75]; 
0x001460a6: add dword ptr [edi], 0x3d; stc; call dword ptr [eax + 0x51]; 
0x0005fa3f: add dword ptr [edi], 0x42; stc; call dword ptr [ebp + 0x50]; 
0x0008be16: add dword ptr [edi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x000fa90b: add dword ptr [edi], 0x58; stc; call dword ptr [eax + 0x55]; 
0x00122bf7: add dword ptr [edi], 0x5d; stc; call dword ptr [eax + 0x55]; 
0x0007b4a6: add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0018f9af: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f887: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000a9482: add dword ptr [edi], ecx; mov esi, 0xda390114; je 0xa9480; pop ebx; ret; 
0x001785bd: add dword ptr [edi], ecx; test ah, bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf00003], al; ret; 
0x000a4728: add dword ptr [edi], ecx; test byte ptr [ecx - 0x7d000000], bh; in al, dx; or byte ptr [esi - 1], dl; jae 0xa475a; call eax; 
0x0016f8a8: add dword ptr [edi], ecx; test byte ptr [ecx - 0x7d000000], bl; rcr byte ptr [ebx], 0x89; loope 0x16f83e; ret 0x25; 
0x000fa0d1: add dword ptr [edi], ecx; test dword ptr [eax - 0xa000000], ecx; ret 0x7420; 
0x001a46ac: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x0015fd32: add dword ptr [edi], ecx; test dword ptr [edi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x39]; 
0x000b6d57: add dword ptr [edi], ecx; test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x00096ca7: add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], ebx; ret 0xf283; 
0x00096ec7: add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x000b0d9b: add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000ee42d: add dword ptr [edi], ecx; test edx, eax; add al, byte ptr [eax]; add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x0010df10: add dword ptr [edi], ecx; xchg ebp, eax; ret; 
0x00129e4c: add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x0013c626: add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x00044ea8: add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000d4a69: add dword ptr [edi], ecx; xchg esp, eax; ret 0xc139; 
0x000c70c3: add dword ptr [edi], ecx; xchg esp, eax; ret 0xc339; 
0x00048cb0: add dword ptr [edi], ecx; xchg esp, eax; ret 0xc639; 
0x0004fc41: add dword ptr [edi], ecx; xchg esp, eax; ret 0xeb39; 
0x00176530: add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0008ea9a: add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00081774: add dword ptr [edx + 0x50], edx; push ebx; call dword ptr [edi + 0x40]; 
0x00184bde: add dword ptr [edx + 0x50], edx; push esi; call dword ptr [edi + 0x40]; 
0x000dbd22: add dword ptr [edx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x000b3513: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000af133: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00093a50: add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00059e58: add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00097ee7: add dword ptr [edx + ebx - 0x75], esi; jl 0x97f11; adc al, 0x89; ret 0xc389; 
0x000a6081: add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0012bb63: add dword ptr [edx + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012a8e3: add dword ptr [edx + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0010b475: add dword ptr [edx + esi*4], -7; call dword ptr [eax - 0x73]; 
0x000ad0f4: add dword ptr [edx + esi*8 - 0x7d], esi; ret 0x8904; 
0x000be332: add dword ptr [edx - 0x74cf77ca], ecx; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000bd6f2: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop ebx; pop edi; ret; 
0x000ba842: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop edi; ret; 
0x0015abc6: add dword ptr [edx], 0x4bc38100; ret 0xd; 
0x001611e4: add dword ptr [edx], 0x72; stc; call dword ptr [eax - 0x18]; 
0x00087146: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0018463a: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00087f75: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00082025: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00083cd6: add dword ptr [edx], ebp; push dword ptr [esp + 0x1c]; call 0x7cf80; add esp, 0x1c; ret; 
0x0003290c: add dword ptr [edx], edx; add byte ptr [eax], al; lea eax, [eax + 0x11cc]; ret; 
0x001763c8: add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x001282ef: add dword ptr [esi + 0x1e], esi; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x00108153: add dword ptr [esi + 0x58], -7; call dword ptr [eax - 0x18]; 
0x0015226d: add dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x0004200b: add dword ptr [esi + 0xd], esi; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x000b3593: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af1b3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b35b3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af1d3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b35d3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af1f3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b1023: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000b1033: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000b1043: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000b1053: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000b32c3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000b3503: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000b50ee: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001a5ba3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd684: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0cfe: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef03: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000b1d28: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000af123: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000b7e23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b67e3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7e43: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b6803: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7e63: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b6823: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7e83: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6843: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000fabc8: add dword ptr [esi + ecx - 0x77], esi; ret; 
0x001a544b: add dword ptr [esi + edx*4 + 0x5e], esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00148248: add dword ptr [esi - 0x3f], esp; ret 0x6608; 
0x00097ff2: add dword ptr [esi - 0x77], esi; ret; 
0x000da858: add dword ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x0003e3c3: add dword ptr [esi], 0x6e; stc; call dword ptr [eax - 0x18]; 
0x001727ca: add dword ptr [esi], ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x00097599: add dword ptr [esp + 0x65], esi; mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000a989d: add dword ptr fs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x000a98cf: add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x0014240b: add dword ptr ss:[eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], cl; push -7; call dword ptr [eax - 0x18]; 
0x000254d2: add eax, 0; ret; 
0x0012fc75: add eax, 0x10719f; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000be1ba: add eax, 0x10; call 0x182d2d; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baeba: add eax, 0x10; call 0x182d2d; add ecx, 0x10b0b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ad948: add eax, 0x10; pop edi; pop esi; ret; 
0x0003c4ce: add eax, 0x10c48300; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003c12f: add eax, 0x10c48300; test eax, eax; jne 0x3c140; add esp, 8; pop ebx; ret; 
0x0003c3be: add eax, 0x10c48300; test eax, eax; jne 0x3c3d0; add esp, 8; pop ebx; ret; 
0x001848ba: add eax, 0x11770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000be48b: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb018: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00120150: add eax, 0x14; jne 0x12015f; add esp, 0x418; pop ebx; ret; 
0x00151873: add eax, 0x14; jne 0x15187e; add esp, 0x1c; ret; 
0x00173013: add eax, 0x14; jne 0x17301e; add esp, 0x4c; ret; 
0x00173083: add eax, 0x14; jne 0x17308e; add esp, 0x4c; ret; 
0x001730f3: add eax, 0x14; jne 0x1730fe; add esp, 0x4c; ret; 
0x00173156: add eax, 0x14; jne 0x173161; add esp, 0x4c; ret; 
0x001731b6: add eax, 0x14; jne 0x1731c1; add esp, 0x4c; ret; 
0x00173223: add eax, 0x14; jne 0x17322e; add esp, 0x4c; ret; 
0x001732a3: add eax, 0x14; jne 0x1732ae; add esp, 0x4c; ret; 
0x00173784: add eax, 0x14; jne 0x17378f; add esp, 0x1c; ret; 
0x001737cc: add eax, 0x14; jne 0x173804; add esp, 0x1c; ret; 
0x00174efd: add eax, 0x14; jne 0x174f08; add esp, 0x2c; ret; 
0x0003a8c4: add eax, 0x14; jne 0x3a8d3; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bdb3: add eax, 0x14; jne 0x3bdbf; add esp, 0x18; pop ebx; ret; 
0x0003e8a7: add eax, 0x14; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9ba: add eax, 0x14; jne 0x3e9c5; add esp, 0x1c; ret; 
0x0005e810: add eax, 0x14; jne 0x5e82e; add esp, 0x78; pop ebx; ret; 
0x00085b7d: add eax, 0x14; jne 0x85b98; add esp, 0x28; pop ebx; ret; 
0x000a7c87: add eax, 0x174d138; inc eax; pop edi; ret; 
0x00034b34: add eax, 0x182474ff; push 0; call 0x34af0; add esp, 0x1c; ret; 
0x00137302: add eax, 0x18; call eax; 
0x00024fde: add eax, 0x18; jmp eax; 
0x0013a8f1: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013a9c2: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e81d: add eax, 0x18; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002506b: add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x00151ac2: add eax, 0x18; pop edi; pop ebp; ret; 
0x00165df4: add eax, 0x18; push eax; call 0x165bb0; add esp, 0x2c; ret; 
0x00151744: add eax, 0x18; push eax; call edx; 
0x00137331: add eax, 0x18; push esi; call eax; 
0x0003ebe4: add eax, 0x18; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3ecb0; call eax; 
0x0009e655: add eax, 0x1987bf; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x394], edx; ret; 
0x0009e5c5: add eax, 0x19884f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x358], edx; ret; 
0x0009e5a5: add eax, 0x19886f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x35c], edx; ret; 
0x0009e575: add eax, 0x19889f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e555: add eax, 0x1988bf; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0009e525: add eax, 0x1988ef; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4f5: add eax, 0x19891f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e4c5: add eax, 0x19894f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x354], edx; ret; 
0x0009d285: add eax, 0x199b8f; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x00093ae5: add eax, 0x1a332f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00093ac5: add eax, 0x1a334f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000929a5: add eax, 0x1a446f; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008ccb5: add eax, 0x1aa15f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008cc95: add eax, 0x1aa17f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008cc75: add eax, 0x1aa19f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc55: add eax, 0x1aa1bf; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008b155: add eax, 0x1abcbf; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x00034b14: add eax, 0x1c2474ff; push dword ptr [esp + 0x1c]; call 0x34af0; add esp, 0x1c; ret; 
0x0016f2e1: add eax, 0x1c; push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0012aaf5: add eax, 0x1dc68100; ret; 
0x0003cea5: add eax, 0x1f9f6f; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003ce85: add eax, 0x1f9f8f; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x001329a4: add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x00034563: add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x00034505: add eax, 0x20290f; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x000344e5: add eax, 0x20292f; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x000344c5: add eax, 0x20294f; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x00033d45: add eax, 0x2030cf; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002f385: add eax, 0x207a8f; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x000ad955: add eax, 0x20; pop edi; pop esi; ret; 
0x0004293f: add eax, 0x20; ret; 
0x00025fd5: add eax, 0x210e3f; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00025fb5: add eax, 0x210e5f; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000254c5: add eax, 0x21194f; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024f65: add eax, 0x211eaf; lea eax, [eax - 0x680b4]; ret; 
0x00024f45: add eax, 0x211ecf; lea eax, [eax - 0x680ac]; ret; 
0x00024b35: add eax, 0x2122df; mov edx, dword ptr [eax + 0x118]; test edx, edx; je 0x24b45; ret; 
0x000b3438: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3598: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af058: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1b8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000899fa: add eax, 0x21770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000a640c: add eax, 0x21; ret; 
0x000e856b: add eax, 0x244c8b00; or byte ptr [ebp - 0x650b77f], cl; call dword ptr [eax - 0x73]; 
0x000930b9: add eax, 0x24548b00; or al, 0x89; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0003c4a3: add eax, 0x245c8b00; and byte ptr [ecx + 8], bh; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00085d2e: add eax, 0x25770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x000e718b: add eax, 0x26748d; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x00168575: add eax, 0x28; push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000c67e3: add eax, 0x291ff083; ret 0x1489; 
0x000488c9: add eax, 0x291ff083; ret 0x5489; 
0x00057624: add eax, 0x291ff083; ret 0x9589; 
0x0004bd89: add eax, 0x291ff083; ret; 
0x00117e81: add eax, 0x2c2474ff; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00023520: add eax, 0x2cc48300; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b0e01: add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0007fdac: add eax, 0x2f770000; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0012bbe3: add eax, 0x2fc28100; mov dl, 0x10; add byte ptr [ebx - 0x48], dl; ret; 
0x000badf8: add eax, 0x30; call 0x182d2d; add ecx, 0x10b174; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ad962: add eax, 0x30; pop edi; pop esi; ret; 
0x0007f60a: add eax, 0x31770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000ec88e: add eax, 0x34818d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00143785: add eax, 0x34828d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0005f7bc: add eax, 0x34838d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x000a540a: add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00033fe3: add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x000ecea4: add eax, 0x34878d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0003527a: add eax, 0x3489ffff; and al, 0x89; ret; 
0x000b4f44: add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00170a96: add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008a1bf: add eax, 0x3c770000; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x00056aa8: add eax, 0x3f87868d; stc; call dword ptr [eax + 0x57]; 
0x00134ef7: add eax, 0x408b078b; sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x65f3978d; stc; call dword ptr [edx + 0x50]; 
0x000b7ccc: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000bd83f: add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x00086a17: add eax, 0x44770000; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00170106: add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000ac42e: add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x001087d8: add eax, 0x5002e0c1; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x0019995c: add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x00198153: add eax, 0x542b60f; sub eax, ecx; ret; 
0x000a4530: add eax, 0x547c838d; stc; call dword ptr [eax - 0x73]; 
0x0015bfd5: add eax, 0x54; stc; call dword ptr [eax - 1]; 
0x00137364: add eax, 0x5b000000; pop esi; pop ebp; ret; 
0x0010b571: add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0008cc05: add eax, 0x5b08c483; ret; 
0x0003bdb9: add eax, 0x5b18c483; ret; 
0x0009538a: add eax, 0x5b28c483; ret; 
0x0009e01f: add eax, 0x5b38c483; ret; 
0x000d7cab: add eax, 0x5b48c483; ret; 
0x000b0b19: add eax, 0x5b5f0000; ret; 
0x00060708: add eax, 0x5b78c483; ret; 
0x00181f44: add eax, 0x5c10448d; ret; 
0x0003c4a2: add eax, 0x5c8b0005; and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000bfb4e: add eax, 0x5e000002; xor eax, eax; pop ebx; ret; 
0x001734c5: add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x000b7113: add eax, 0x5e5f0000; pop ebx; ret; 
0x000b3441: add eax, 0x5f0c428d; ret; 
0x000b8a31: add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x000bd844: add eax, 0x5f5bf889; ret; 
0x0008994c: add eax, 0x5f770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0013732b: add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x00134f04: add eax, 0x65f3978d; stc; call dword ptr [edx + 0x50]; 
0x001357e7: add eax, 0x6629808d; stc; call dword ptr [eax - 0x75]; 
0x0013468a: add eax, 0x664a808d; stc; call dword ptr [eax - 0x75]; 
0x00136f83: add eax, 0x666f808d; stc; call dword ptr [eax - 0x75]; 
0x00087505: add eax, 0x66770000; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00093073: add eax, 0x684f8b00; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00120724: add eax, 0x6f; stc; call dword ptr [eax - 0x73]; 
0x000b7348: add eax, 0x7130f66; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0012fc73: add eax, 0x719f0500; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x00140cf4: add eax, 0x742e3b80; push es; add esp, 8; pop ebx; ret; 
0x0010aca7: add eax, 0x74f2f883; adc esi, dword ptr [ecx]; rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x000745ce: add eax, 0x74f33990; or al, 0x83; ret; 
0x00034a7c: add eax, 0x75003880; push cs; mov eax, edx; add esp, 0xc; ret; 
0x0010dcb1: add eax, 0x75003f80; sbb eax, 0x8b056a56; jl 0x10dce1; adc byte ptr [ebp - 0x6a68079], cl; call dword ptr [eax - 0x73]; 
0x0014d486: add eax, 0x75085039; hlt; ret; 
0x00096632: add eax, 0x754bf883; mov al, byte ptr [0x8900558b]; ret; 
0x000c0ed5: add eax, 0x769ff980; ret; 
0x00136e06: add eax, 0x7e4c868d; stc; call dword ptr [eax - 0x75]; 
0x00136f0e: add eax, 0x7e4c878d; stc; call dword ptr [eax - 0x75]; 
0x000bb021: add eax, 0x824448b; pop esi; ret; 
0x000ee741: add eax, 0x828d0000; xchg byte ptr [edi - 7], dl; call dword ptr [eax - 0x73]; 
0x000c170a: add eax, 0x828d9974; lodsb al, byte ptr [esi]; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00073b47: add eax, 0x83000001; ret 0x8904; 
0x00124857: add eax, 0x83000007; les edx, ptr [eax]; add esp, 0xc; ret; 
0x00082e09: add eax, 0x8301e083; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001524a7: add eax, 0x83fff6e1; les edx, ptr [eax]; test eax, eax; sete al; add esp, 0xc; ret; 
0x0017ebc7: add eax, 0x83fffffe; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000a9f1a: add eax, 0x8434ab8d; stc; call dword ptr [eax + 0x55]; 
0x0008defc: add eax, 0x84e8b00; mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00080fd9: add eax, 0x870f0000; aaa; add al, byte ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x00083185: add eax, 0x870f0000; and al, byte ptr [edx]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0018476d: add eax, 0x870f0000; fiadd dword ptr [eax]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x001831e7: add eax, 0x870f0000; lock add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00084969: add eax, 0x870f0000; out dx, al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x001a48a2: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001a3882: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x001a3f42: add eax, 0x878c0f; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x0012c8f8: add eax, 0x89000000; inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000e90f8: add eax, 0x8901e683; ret 0xe283; 
0x001aba4a: add eax, 0x89fffff5; ret; 
0x001a9c95: add eax, 0x89fffff7; ret; 
0x00082a0d: add eax, 0x89ffffff; ret; 
0x001731a1: add eax, 0x8b000000; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0009e060: add eax, 0x8b1b048d; sbb byte ptr [ebx - 0x749bdbb4], cl; je 0x9e091; or byte ptr [eax + 0x199], bh; call dword ptr gs:[0x10]; 
0x00194270: add eax, 0x8b1c035f; jmp ebx; 
0x000ce3d6: add eax, 0x8bfffffb; jl 0xce401; sub al, 0x8d; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000d2cc0: add eax, 0x8d2e0000; je 0xd2ced; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000d5985: add eax, 0x8d500000; xchg al, bh; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x00058e68: add eax, 0x8d500000; xchg byte ptr [ebx], al; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00058f70: add eax, 0x8d500000; xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x0010d03b: add eax, 0x8d500000; xchg dword ptr [ebp + 0x59], ecx; stc; call dword ptr [eax - 0x18]; 
0x00049850: add eax, 0x8d500000; xchg dword ptr [ebx], eax; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00049577: add eax, 0x8d500000; xchg eax, edi; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x000498dc: add eax, 0x8d500000; xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00049777: add eax, 0x8d500000; xchg esi, ebp; aas; stc; call dword ptr [eax - 0x18]; 
0x001437aa: add eax, 0x8d8134ff; xor byte ptr [esp + eax*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00172b0a: add eax, 0x90; pop ebx; pop esi; ret; 
0x000b6ddc: add eax, 0x91d850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00172b9a: add eax, 0x94; pop ebx; pop esi; ret; 
0x00061247: add eax, 0x950fdd29; ret 0x448b; 
0x000b841f: add eax, 0x9da850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000fcaf9: add eax, 0x9dfe283; ret 0x5388; 
0x0012a873: add eax, 0x9fc28100; lds edx, ptr [eax]; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x000937a9: add eax, 0xa30f0000; ret 0x830f; 
0x00095954: add eax, 0xa30f0000; ret 0xac73; 
0x001a4aad: add eax, 0xa; pop edi; ret; 
0x001a2984: add eax, 0xa; ret; 
0x0016fea1: add eax, 0xac03848d; xor edi, ecx; call dword ptr [eax + 0x52]; 
0x0016d569: add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000f7903: add eax, 0xae80000; mov ah, 8; add byte ptr [ecx + 0x13f509c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x000ece38: add eax, 0xaf70838d; stc; call dword ptr [eax - 0x73]; 
0x000ecf76: add eax, 0xaf90818d; stc; call dword ptr [eax - 0x73]; 
0x000e7228: add eax, 0xb2870f; add byte ptr [eax], al; mov eax, dword ptr [esi + ecx*4 - 0x700b0]; add eax, esi; jmp eax; 
0x00134e40: add eax, 0xb81c968d; stc; call dword ptr [edx + 0x50]; 
0x00134c42: add eax, 0xb844808d; stc; call dword ptr [eax - 0x75]; 
0x0013589a: add eax, 0xb87c808d; stc; call dword ptr [eax + 0x6a]; 
0x001a4712: add eax, 0xb; pop edi; ret; 
0x001a2936: add eax, 0xb; ret; 
0x0012aa54: add eax, 0xbec58100; ret; 
0x0019e3ce: add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000be494: add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0007d108: add eax, 0xc4830001; adc bl, ch; int 0x80; 
0x0003c4cd: add eax, 0xc4830005; adc byte ptr [ebx - 0x7cf3dbbc], cl; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015d06c: add eax, 0xc483fff3; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000dc0bc: add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x001a4ab7: add eax, 0xc; pop edi; ret; 
0x0013cb5a: add eax, 0xc; ret; 
0x00107a6e: add eax, 0xcc03848d; or bh, cl; call dword ptr [eax - 0x73]; 
0x000d3d6d: add eax, 0xd0b8878d; stc; call dword ptr [eax + 0x53]; 
0x0012e039: add eax, 0xd9c58100; lea edx, [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x00054176: add eax, 0xd; add esp, 4; jmp eax; 
0x001a4abc: add eax, 0xd; pop edi; ret; 
0x001a2990: add eax, 0xd; ret; 
0x0005f90a: add eax, 0xdee85051; push ecx; std; call dword ptr [eax - 0x73]; 
0x0010b157: add eax, 0xe8fffffd; sbb ch, 2; add byte ptr [ebp - 0x18], dl; ret; 
0x0014d465: add eax, 0xe99af; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x14d487; ret; 
0x0012e529: add eax, 0xe9c58100; mov byte ptr [eax], dl; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000b1557: add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x001a4ac1: add eax, 0xe; pop edi; ret; 
0x001a2994: add eax, 0xe; ret; 
0x00087ab6: add eax, 0xec830000; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x00122bf0: add eax, 0xec830000; or byte ptr [ebp - 0x6a2f87d], cl; call dword ptr [eax + 0x55]; 
0x00122b9f: add eax, 0xec830000; or byte ptr [ebp - 0x6a3b57d], cl; call dword ptr [eax + 0x55]; 
0x00122b69: add eax, 0xec830000; or byte ptr [ebp - 0x6a4427d], cl; call dword ptr [eax + 0x55]; 
0x000b0dfe: add eax, 0xf054a8d; test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b6dd9: add eax, 0xf057f8d; test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x000b841c: add eax, 0xf057f8d; test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0017b26b: add eax, 0xf0890000; pop ebx; pop esi; ret; 
0x00145d45: add eax, 0xf10cf; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr gs:[eax]; ret; 
0x000f8056: add eax, 0xf901fff9; jmp ecx; 
0x001a473b: add eax, 0xf; pop edi; ret; 
0x001a294f: add eax, 0xf; ret; 
0x0013a705: add eax, 0xfc70f; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x0019922e: add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0002707e: add eax, 0xffee7ce8; dec dword ptr [ebx + 0x10c083]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x210fd36d], cl; call dword ptr [edx + 0x50]; 
0x000fbf83: add eax, 0xfffe17e9; jmp dword ptr [esi - 9]; 
0x0013d5ba: add eax, 0xffff14e9; inc dword ptr [ebx - 0x7a72fb14]; mov al, byte ptr [0x6afff968]; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00174987: add eax, 0xffff21e9; jmp dword ptr [esi - 0x70]; 
0x00150d2a: add eax, 0xfffffebb; jmp dword ptr [ebp - 0x77]; 
0x0009e612: add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x000a9480: add eax, 1; movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xa9480; pop ebx; ret; 
0x00042429: add eax, 1; pop ebx; ret; 
0x001a4a80: add eax, 1; pop edi; ret; 
0x0004219c: add eax, 1; ret; 
0x000a607f: add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0009a253: add eax, 2; add esp, 0xc; ret; 
0x000a9686: add eax, 2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001a4a85: add eax, 2; pop edi; ret; 
0x000d6eb7: add eax, 2; ret; 
0x001a46c5: add eax, 3; pop edi; ret; 
0x000d6ed0: add eax, 3; ret; 
0x000c2593: add eax, 4; cmp edx, ecx; je 0xc259e; test edx, edx; jne 0xc2590; ret; 
0x0012262f: add eax, 4; mov dword ptr [ebx + 0x45a0], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001a4a8f: add eax, 4; pop edi; ret; 
0x0017586d: add eax, 4; push eax; push dword ptr [esp + 0x1c]; call 0x1756e0; add esp, 0x1c; ret; 
0x001a296c: add eax, 4; ret; 
0x000d7077: add eax, 4; test edx, edx; jne 0xd7070; mov eax, ecx; pop ebx; ret; 
0x00150d66: add eax, 4; xchg dword ptr [eax], edx; cmp edx, 1; jg 0x150d78; ret; 
0x001a4a94: add eax, 5; pop edi; ret; 
0x001a2970: add eax, 5; ret; 
0x001a4a99: add eax, 6; pop edi; ret; 
0x001a2974: add eax, 6; ret; 
0x001a46eb: add eax, 7; pop edi; ret; 
0x001a290f: add eax, 7; ret; 
0x000a4295: add eax, 8; cmp eax, 9; ja 0xa42c0; mov ecx, dword ptr [ebx + eax*4 - 0x71254]; add ecx, ebx; jmp ecx; 
0x0016e123: add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016e146: add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001a4aa3: add eax, 8; pop edi; ret; 
0x001563d1: add eax, 8; push eax; call 0xbfaa0; add esp, 0x1c; ret; 
0x001a297c: add eax, 8; ret; 
0x0013cb54: add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x001a4aa8: add eax, 9; pop edi; ret; 
0x001a2980: add eax, 9; ret; 
0x000254d1: add eax, dword ptr [0]; ret; 
0x00194c72: add eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00103b8b: add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x0007237e: add eax, dword ptr [eax + ebx*4 - 0x722c8]; jmp eax; 
0x0007235a: add eax, dword ptr [eax + ebx*4 - 0x72418]; jmp eax; 
0x00071dea: add eax, dword ptr [eax + ebx*4 - 0x7249c]; jmp eax; 
0x00066382: add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x000662a5: add eax, dword ptr [eax + ebx*4 - 0x72bf8]; jmp eax; 
0x00065d12: add eax, dword ptr [eax + ebx*4 - 0x72c7c]; jmp eax; 
0x000e24eb: add eax, dword ptr [eax + ecx*4 - 0x70488]; jmp eax; 
0x000ad2e9: add eax, dword ptr [eax + ecx*4 - 0x71194]; jmp eax; 
0x000a97e1: add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x000a9721: add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x00181fd7: add eax, dword ptr [eax + edx*4 - 0x6c854]; jmp eax; 
0x00170ae3: add eax, dword ptr [eax + edx*4 - 0x6c8d0]; jmp eax; 
0x001701af: add eax, dword ptr [eax + edx*4 - 0x6c910]; jmp eax; 
0x0016d621: add eax, dword ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x000fbe42: add eax, dword ptr [eax + edx*4 - 0x6f760]; jmp eax; 
0x000fbd64: add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x0006d08f: add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x0006179f: add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x0010e311: add eax, dword ptr [eax + esi*4 - 0x6ede0]; jmp eax; 
0x0010d5e7: add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x0010d408: add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x00049856: add eax, dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x00095589: add eax, dword ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b518f: add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000c7b25: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; adc dword ptr [esi + eax*4 - 7], 0x4be850ff; ret 0xfff6; 
0x000a3098: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [esi + 0x53], -7; call dword ptr [eax - 0x18]; 
0x000dfe54: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x56], dh; stc; call dword ptr [eax - 0x18]; 
0x0005d24a: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x41], ch; stc; call dword ptr [eax - 0x18]; 
0x000921b6: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ecx*2 - 7], bh; call dword ptr [eax - 0x18]; 
0x00058e43: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x0017f26c: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; ja 0x17f26e; call dword ptr [eax - 0x18]; 
0x00092252: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ecx*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0017f29d: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], esp; ja 0x17f29f; call dword ptr [eax - 0x18]; 
0x000498b9: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0013421f: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, ecx; stc; call dword ptr [eax - 0x18]; 
0x00173ab2: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012fab8: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop edi; ret; 
0x00092351: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0012f81f: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0011c84c: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e495a: add eax, dword ptr [eax]; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0012e5fe: add eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00129c06: add eax, dword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0011c814: add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000929e9: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x000a315c: add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0010a84f: add eax, dword ptr [eax]; add byte ptr [ebp - 0x64e5f7d], cl; call dword ptr [eax - 0x73]; 
0x0017fab8: add eax, dword ptr [eax]; add byte ptr [ebp - 0x76ee8b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0006d088: add eax, dword ptr [eax]; add byte ptr [ebx + 0x3182444], cl; test byte ptr [eax - 0x72954], dl; jmp eax; 
0x00184d11: add eax, dword ptr [eax]; add byte ptr [ebx + 0x548d08ec], al; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000524a6: add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000646ac: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf44244c], cl; mov edi, 0xfc985d0; inc ebp; ret 0xc689; 
0x0019e61e: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0011fa2d: add eax, dword ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x0017c7b9: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; cdq; jbe 0x17c7bd; call dword ptr [ecx - 0x77]; 
0x00029639: add eax, dword ptr [eax]; add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x00120e83: add eax, dword ptr [eax]; add byte ptr [ebx - 0x76f7dbac], cl; add bh, byte ptr [eax + 1]; ret; 
0x00091b2f: add eax, dword ptr [eax]; add byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x0005daa4: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7afbdbbc], cl; ror byte ptr [edi], 0x9f; ret; 
0x001657ff: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; cmp dword ptr [ebx - 7], esi; call dword ptr [eax - 0x18]; 
0x000da76d: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; and al, 0x56; stc; call dword ptr [eax + 0x56]; 
0x00122b4e: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; push ebx; pop ebx; stc; call dword ptr [eax + 0x55]; 
0x000ff390: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x0017fcb5: add eax, dword ptr [eax]; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0018d6ae: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x0017d8a4: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0012f613: add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00136462: add eax, dword ptr [eax]; add byte ptr [ecx], al; call eax; 
0x0006e0b9: add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x00087a56: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x000e920e: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0004c4ec: add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b0d9f: add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00137bc4: add eax, dword ptr [eax]; add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x0013de5c: add eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6474; 
0x0005e00f: add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf40; 
0x00037471: add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x77c30]; add edx, edi; jmp edx; 
0x000373d1: add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77cd8]; add esi, edi; jmp esi; 
0x00081dd8: add eax, dword ptr [eax]; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00133827: add eax, dword ptr [eax]; add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x00087cbe: add eax, dword ptr [eax]; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0009e5f3: add eax, dword ptr [eax]; add byte ptr [esi + 8], dh; ret; 
0x00109e7c: add eax, dword ptr [eax]; add dh, dh; ret 0xf02; 
0x001a46b9: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x001a46d6: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x001a46df: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x00109e73: add eax, dword ptr [eax]; add dh, dh; ret 0xf80; 
0x00145d43: add eax, dword ptr [eax]; add eax, 0xf10cf; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr gs:[eax]; ret; 
0x00194f7d: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195cbd: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0008c19f: add eax, dword ptr [eax]; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0012461c: add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00140d01: add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x001a4985: add eax, dword ptr [eax]; je 0x1a4a8a; mov eax, 4; pop edi; ret; 
0x0005de72: add eax, dword ptr [ebp + 0x245c89db]; add al, 0xf; lahf; ret; 
0x001750f9: add eax, dword ptr [ebp + 0x317274c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0015219e: add eax, dword ptr [ebp - 0x707bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x7ad7dbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x001524d9: add eax, dword ptr [ebp - 0x72c58b40]; mov dl, 0x90; ret; 
0x00168df0: add eax, dword ptr [ebp - 0x7cf28b40]; in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0013c5dd: add eax, dword ptr [ebx + 0x428801e8]; add dword ptr [eax + 2], edi; ret; 
0x0016a32e: add eax, dword ptr [ebx + 0x478b08ec]; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0008fc35: add eax, dword ptr [ebx + 0x57402fa]; pop ebx; pop esi; pop edi; ret; 
0x00185402: add eax, dword ptr [ebx + 0x5e5b04c4]; jmp eax; 
0x001562fc: add eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0007acec: add eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009f1e6: add eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0007fdc0: add eax, dword ptr [ebx + 0x5e5bef26]; pop edi; ret; 
0x0008fb5a: add eax, dword ptr [ebx + 0x87403f8]; pop ebx; pop esi; pop edi; ret; 
0x001721f6: add eax, dword ptr [ebx - 0x137cef3c]; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0012ddbf: add eax, dword ptr [ebx - 0x27fe031d]; pop ebx; pop esi; ret; 
0x0003e814: add eax, dword ptr [ebx - 0x373ef314]; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0007fe1a: add eax, dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0007ab67: add eax, dword ptr [ebx - 0x3b7cdff2]; add al, 0x5b; pop esi; ret; 
0x00171a89: add eax, dword ptr [ebx - 0x4614ef3c]; nop; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00096ec4: add eax, dword ptr [ebx - 0x7af0fe06]; mov byte ptr [0x89000000], al; ret 0xf283; 
0x00068097: add eax, dword ptr [ebx - 0xf16fd3a]; fdivr st(7); call dword ptr [edx - 0x73]; 
0x000a9e4d: add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x00063815: add eax, dword ptr [ecx + edx*4 - 0x72e94]; jmp eax; 
0x00064f0c: add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00111f29: add eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0009db98: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001854b4: add eax, dword ptr [ecx]; mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a4710: add eax, dword ptr [ecx]; ret 0x38b; 
0x00094e2e: add eax, dword ptr [ecx]; ret 0x8966; 
0x0006b4b2: add eax, dword ptr [ecx]; ret 0x9ae9; 
0x001794a7: add eax, dword ptr [ecx]; ret 0xd101; 
0x000e0f08: add eax, dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x00064794: add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x000e548f: add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x0006400e: add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x0007fe7c: add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00054173: add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x00052930: add eax, dword ptr [esp]; ret; 
0x000b0d9e: add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000254d0: add eax, dword ptr gs:[0]; ret; 
0x001657fe: add eax, dword ptr ss:[eax]; add byte ptr [ebx - 0x7c72f314], al; cmp dword ptr [ebx - 7], esi; call dword ptr [eax - 0x18]; 
0x001371c3: add eax, eax; call 0x1f3f4d0; pop ebx; ret; 
0x000f9fff: add eax, eax; pop ebx; pop esi; ret; 
0x001512f0: add eax, ebx; cmp edx, ecx; jne 0x1512c0; pop ebx; pop esi; ret; 
0x000ea413: add eax, ebx; jmp eax; 
0x00175fca: add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0012ddc3: add eax, ebx; pop ebx; pop esi; ret; 
0x00040f2d: add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0011f62c: add eax, ecx; adc edx, 0; ret; 
0x000be29b: add eax, ecx; add esi, ecx; call 0x182d2d; add ecx, 0x107dd0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001a5c71: add eax, ecx; and eax, 0xf0f0f0f; add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001a0d19: add eax, ecx; call 0x182d19; add ebx, 0x34634; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a0c54: add eax, ecx; call 0x182d19; add ebx, 0x346f9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f349: add eax, ecx; call 0x182d19; add ebx, 0x35f00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f23a: add eax, ecx; call 0x182d19; add ebx, 0x3600f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c65: add eax, ecx; call 0x182d19; add ebx, 0x3f424; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c58: add eax, ecx; call 0x182d19; add ebx, 0x40271; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c78: add eax, ecx; call 0x182d19; add ebx, 0x41091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191d59: add eax, ecx; call 0x182d19; add ebx, 0x42df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191c54: add eax, ecx; call 0x182d19; add ebx, 0x42e35; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191a45: add eax, ecx; call 0x182d19; add ebx, 0x43044; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fd49: add eax, ecx; call 0x182d19; add ebx, 0x44b80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fc44: add eax, ecx; call 0x182d19; add ebx, 0x44bc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fa38: add eax, ecx; call 0x182d19; add ebx, 0x44dd1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dd49: add eax, ecx; call 0x182d19; add ebx, 0x46900; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dc44: add eax, ecx; call 0x182d19; add ebx, 0x46945; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018da38: add eax, ecx; call 0x182d19; add ebx, 0x46b51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007b4a0: add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x001a0adf: add eax, ecx; pop ebx; pop esi; ret; 
0x0018d254: add eax, ecx; pop ebx; ret; 
0x000be8d6: add eax, ecx; pop edi; ret; 
0x000bebc0: add eax, ecx; ret; 
0x00196a64: add eax, ecx; sfence; call 0x182d19; add ebx, 0x3e622; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a54: add eax, ecx; sfence; call 0x182d19; add ebx, 0x3f472; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a84: add eax, ecx; sfence; call 0x182d19; add ebx, 0x40282; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938ae: add eax, ecx; sfence; call 0x182d19; add ebx, 0x411d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019174e: add eax, ecx; sfence; call 0x182d19; add ebx, 0x430b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f7ae: add eax, ecx; sfence; call 0x182d19; add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000be8d4: add eax, edi; add eax, ecx; pop edi; ret; 
0x0013fe6f: add eax, edi; inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x00191b4d: add eax, edi; pop edi; call 0x182d19; add ebx, 0x42ffb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fb3d: add eax, edi; pop edi; call 0x182d19; add ebx, 0x44d8b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018db3d: add eax, edi; pop edi; call 0x182d19; add ebx, 0x46b0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000be977: add eax, edi; pop edi; ret; 
0x00041018: add eax, edi; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000beb56: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000bf254: add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000ad946: add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000ad953: add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000ad960: add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000bf44d: add eax, edx; add eax, ecx; ret; 
0x001a5bfe: add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001a5c78: add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0016b0c1: add eax, edx; pop ebx; pop esi; ret; 
0x000ad93c: add eax, edx; pop edi; pop esi; ret; 
0x000bf5b3: add eax, edx; ret; 
0x00084170: add eax, esi; add al, byte ptr [eax]; pop ebx; ret; 
0x0012461a: add eax, esi; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000e7236: add eax, esi; jmp eax; 
0x00138f3c: add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000beb17: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x00153492: add ebp, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x00153608: add ebp, 0x6e; stc; call dword ptr [eax - 0x73]; 
0x000ad17e: add ebp, dword ptr [ecx]; ret 0x1489; 
0x000bf342: add ebp, dword ptr [ecx]; ret 0x4a8d; 
0x00139c63: add ebp, dword ptr [ecx]; ret 0x8166; 
0x000bf387: add ebp, dword ptr [ecx]; ret 0xc031; 
0x000abfc6: add ebp, dword ptr [ecx]; ret 0xd101; 
0x000aaf42: add ebp, dword ptr [ecx]; ret 0xd601; 
0x0010480d: add ebp, dword ptr [ecx]; ret 0xda01; 
0x001046ec: add ebp, dword ptr [ecx]; ret 0xea01; 
0x0009f0d8: add ebp, dword ptr [ecx]; ret; 
0x00025e9d: add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0017d403: add ebp, dword ptr [edi]; jbe 0x17d38c; in al, dx; add al, 0x83; ret; 
0x00087144: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00184638: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00184526: add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0008d04e: add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x001747b3: add ebp, esp; call dword ptr [eax - 0x73]; 
0x00162e8e: add ebp, esp; jmp dword ptr [ebp - 0x77]; 
0x000bfd31: add ebx, 0x1063c7; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000bfad7: add ebx, 0x106621; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000b8e84: add ebx, 0x10; call 0x182d2d; add ecx, 0x10d0a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7784: add ebx, 0x10; call 0x182d2d; add ecx, 0x10e644; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008dd9f: add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001a0d20: add ebx, 0x34634; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a0c5b: add ebx, 0x346f9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f350: add ebx, 0x35f00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f241: add ebx, 0x3600f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c72: add ebx, 0x3e51e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196a6e: add ebx, 0x3e622; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195f79: add ebx, 0x3f117; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195e6f: add ebx, 0x3f221; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d68: add ebx, 0x3f328; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c6c: add ebx, 0x3f424; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a5e: add ebx, 0x3f472; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195cb9: add ebx, 0x3f497; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194f79: add ebx, 0x3ff57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e6f: add ebx, 0x40061; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d68: add ebx, 0x40168; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c5f: add ebx, 0x40271; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a8e: add ebx, 0x40282; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194cb9: add ebx, 0x402d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194c6f: add ebx, 0x40361; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193f99: add ebx, 0x40d77; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193e8f: add ebx, 0x40e81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d88: add ebx, 0x40f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c7f: add ebx, 0x41091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193b6c: add ebx, 0x410e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193cd9: add ebx, 0x410f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00193c8f: add ebx, 0x41181; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938b8: add ebx, 0x411d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019321f: add ebx, 0x41871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193201: add ebx, 0x4188f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193168: add ebx, 0x41928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001930a1: add ebx, 0x419ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193008: add ebx, 0x41a88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192f41: add ebx, 0x41b4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192ea8: add ebx, 0x41be8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192de1: add ebx, 0x41caf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192d48: add ebx, 0x41d48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192c81: add ebx, 0x41e0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192be8: add ebx, 0x41ea8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192b21: add ebx, 0x41f6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192a88: add ebx, 0x42008; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001929c1: add ebx, 0x420cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192928: add ebx, 0x42168; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192861: add ebx, 0x4222f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001927c8: add ebx, 0x422c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192701: add ebx, 0x4238f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192668: add ebx, 0x42428; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001925a1: add ebx, 0x424ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192508: add ebx, 0x42588; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192441: add ebx, 0x4264f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001923a8: add ebx, 0x426e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001922e1: add ebx, 0x427af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192248: add ebx, 0x42848; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192181: add ebx, 0x4290f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001920e8: add ebx, 0x429a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192021: add ebx, 0x42a6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191f88: add ebx, 0x42b08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191ec1: add ebx, 0x42bcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191e28: add ebx, 0x42c68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191d60: add ebx, 0x42df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191c5b: add ebx, 0x42e35; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191b55: add ebx, 0x42ffb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191a4c: add ebx, 0x43044; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191758: add ebx, 0x430b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191a96: add ebx, 0x4317a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019111f: add ebx, 0x436f1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191101: add ebx, 0x4370f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191068: add ebx, 0x437a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190fb1: add ebx, 0x4385f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190f18: add ebx, 0x438f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190e61: add ebx, 0x439af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190dc8: add ebx, 0x43a48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190d11: add ebx, 0x43aff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190c78: add ebx, 0x43b98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190bc1: add ebx, 0x43c4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190b28: add ebx, 0x43ce8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190a71: add ebx, 0x43d9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001909d8: add ebx, 0x43e38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190921: add ebx, 0x43eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190888: add ebx, 0x43f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001907d1: add ebx, 0x4403f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190738: add ebx, 0x440d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190681: add ebx, 0x4418f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001905e8: add ebx, 0x44228; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190531: add ebx, 0x442df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190498: add ebx, 0x44378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903e1: add ebx, 0x4442f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190348: add ebx, 0x444c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190291: add ebx, 0x4457f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901f8: add ebx, 0x44618; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190141: add ebx, 0x446cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001900a8: add ebx, 0x44768; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fff1: add ebx, 0x4481f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ff58: add ebx, 0x448b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fea1: add ebx, 0x4496f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fe08: add ebx, 0x44a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fd50: add ebx, 0x44b80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fc4b: add ebx, 0x44bc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fb45: add ebx, 0x44d8b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fa3f: add ebx, 0x44dd1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f7b8: add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018faa4: add ebx, 0x44eec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018fa55: add ebx, 0x44f7b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f11f: add ebx, 0x45471; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f101: add ebx, 0x4548f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f068: add ebx, 0x45528; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018efb1: add ebx, 0x455df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ef18: add ebx, 0x45678; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ee61: add ebx, 0x4572f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018edc8: add ebx, 0x457c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed11: add ebx, 0x4587f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ec78: add ebx, 0x45918; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ebc1: add ebx, 0x459cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb28: add ebx, 0x45a68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea71: add ebx, 0x45b1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e9d8: add ebx, 0x45bb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e921: add ebx, 0x45c6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e888: add ebx, 0x45d08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e7d1: add ebx, 0x45dbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e738: add ebx, 0x45e58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e681: add ebx, 0x45f0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e5e8: add ebx, 0x45fa8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e531: add ebx, 0x4605f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e498: add ebx, 0x460f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3e1: add ebx, 0x461af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e348: add ebx, 0x46248; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e291: add ebx, 0x462ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e1f8: add ebx, 0x46398; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e141: add ebx, 0x4644f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e0a8: add ebx, 0x464e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dff1: add ebx, 0x4659f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018df58: add ebx, 0x46638; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dea1: add ebx, 0x466ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018de08: add ebx, 0x46788; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dd50: add ebx, 0x46900; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dc4b: add ebx, 0x46945; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018db45: add ebx, 0x46b0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018da3f: add ebx, 0x46b51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018daa4: add ebx, 0x46c6c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018da55: add ebx, 0x46cfb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c85d: add ebx, 0x47b33; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c7ad: add ebx, 0x47be3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c6c5: add ebx, 0x47c4b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c303: add ebx, 0x47e0d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c247: add ebx, 0x47ec9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c1eb: add ebx, 0x47f25; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c12d: add ebx, 0x47fe3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c045: add ebx, 0x4804b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00107c3f: add ebx, 0xb; stc; call dword ptr [ecx + 0x6a]; 
0x0009d494: add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009dae5: add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0008d9e7: add ebx, 8; add esi, 8; push eax; call ecx; 
0x00082c4c: add ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000a9838: add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000fbe20: add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x000bfadd: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0018c04b: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018da45: add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018daaa: add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014d899: add ebx, dword ptr [ecx - 0x13]; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000b72a9: add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00194150: add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0018e13a: add ebx, dword ptr [edi - 0x18]; fmul dword ptr [ebx - 1]; inc dword ptr [ecx + 0x4644fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c0435: add ebx, dword ptr [esi + 0x5f]; ret; 
0x0006f133: add ebx, eax; jmp ebx; 
0x0008f528: add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00129aa0: add ebx, eax; mov ebp, esi; call ebx; 
0x00129aa0: add ebx, eax; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000ad09a: add ebx, ebp; adc eax, 0x8300768d; ret 0x8b20; 
0x00156268: add ebx, ebp; ret; 
0x0009de94: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009def7: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00106838: add ebx, ecx; jmp ebx; 
0x000e0164: add ebx, esi; jmp ebx; 
0x000b3343: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b35f3: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000aef83: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000af213: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x000be811: add ecx, 0x107863; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be306: add ecx, 0x107d6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2e1: add ecx, 0x107d93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2c1: add ecx, 0x107db3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2a4: add ecx, 0x107dd0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be205: add ecx, 0x107def; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be277: add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be1e7: add ecx, 0x107e0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be260: add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be245: add ecx, 0x107e2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be1c2: add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be223: add ecx, 0x107e51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be198: add ecx, 0x107e5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be17f: add ecx, 0x107e75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be15e: add ecx, 0x107e96; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be13a: add ecx, 0x107eba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be11c: add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be099: add ecx, 0x107f5b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baee7: add ecx, 0x10b08d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baec2: add ecx, 0x10b0b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae98: add ecx, 0x10b0dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae7f: add ecx, 0x10b0f5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae5e: add ecx, 0x10b116; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae3a: add ecx, 0x10b13a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae1c: add ecx, 0x10b158; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae00: add ecx, 0x10b174; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8f71: add ecx, 0x10cf2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e8c: add ecx, 0x10d0a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e79: add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e5d: add ecx, 0x10d0d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8366: add ecx, 0x10db3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8341: add ecx, 0x10db5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8321: add ecx, 0x10db7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8304: add ecx, 0x10db9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8265: add ecx, 0x10dbbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b82d7: add ecx, 0x10dbc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82c0: add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82a5: add ecx, 0x10dbfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8283: add ecx, 0x10dc1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8191: add ecx, 0x10dc8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8171: add ecx, 0x10dcaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b814c: add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b7871: add ecx, 0x10e4cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b778c: add ecx, 0x10e644; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7779: add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b775d: add ecx, 0x10e673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6d26: add ecx, 0x10f01a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6d01: add ecx, 0x10f03f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6ce1: add ecx, 0x10f05f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cc4: add ecx, 0x10f07c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c25: add ecx, 0x10f09b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6c97: add ecx, 0x10f0a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c80: add ecx, 0x10f0c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c65: add ecx, 0x10f0db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c43: add ecx, 0x10f0fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6b61: add ecx, 0x10f15f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b41: add ecx, 0x10f17f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b1c: add ecx, 0x10f1a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0010976f: add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0017df74: add ecx, 0x180; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0009e675: add ecx, 0x19879f; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9e690; ret; 
0x00090f00: add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0010961c: add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00122d35: add ecx, 0x5f; stc; call dword ptr [ecx + 0x51]; 
0x0018c852: add ecx, 0x80; call 0x182d19; add ebx, 0x47b33; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00040112: add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x000424f0: add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x001727cf: add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x000563a4: add ecx, dword ptr [ebp + 0x2baff46]; add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret 0xdb31; 
0x000b8979: add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x000c0432: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x000d38fa: add ecx, dword ptr [ebp - 0x62f8b80]; call dword ptr [eax + 0x56]; 
0x000d3d3c: add ecx, dword ptr [ebp - 0x62f9b80]; call dword ptr [eax + 0x56]; 
0x000b0de0: add ecx, dword ptr [ebp - 0x7af0fcb6]; test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x001719ff: add ecx, dword ptr [ebx + 0x20508b00]; push eax; call dword ptr [edx + 0x10]; 
0x000be3cc: add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000baf79: add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x000c00b3: add ecx, dword ptr [ebx + 0x5f082444]; ret; 
0x0019bfc7: add ecx, dword ptr [ebx - 0x54737474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x0006976e: add ecx, dword ptr [ebx - 0x5e763]; dec dword ptr [ecx - 0x5e76b]; inc dword ptr [ecx]; ret; 
0x000c8f5e: add ecx, dword ptr [ebx - 0x72afdb84]; xchg dword ptr [eax + edx*8 - 7], esi; call dword ptr [eax + 0x56]; 
0x000be3c7: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf74: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b72a4: add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x000b33c6: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000b34f6: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x0005b08a: add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000b1239: add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xb10e1; pop ebx; ret; 
0x00123f75: add ecx, dword ptr [ecx + 0xa890451]; mov dword ptr [edx + 4], eax; ret; 
0x000391bb: add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x000b6c49: add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6b22: add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00085705: add ecx, dword ptr [ecx - 0x2dcefbad]; mov eax, edx; pop ebx; ret; 
0x000af116: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x00123f8c: add ecx, dword ptr [ecx - 0x3f7afbbe]; je 0x123f96; mov dword ptr [eax], edx; ret; 
0x00175419: add ecx, dword ptr [ecx - 0x76f7dbbc]; ret 0x18b; 
0x001754a9: add ecx, dword ptr [ecx - 0x76fbdbbc]; ret 0x18b; 
0x000bd789: add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000aefe6: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000dd850: add ecx, dword ptr [ecx - 0x7cfbdb94]; call 0xf17148b; xchg dword ptr [eax - 0x7c00000a], edx; ret; 
0x000dd6d5: add ecx, dword ptr [ecx - 0x7cfbdb94]; ret; 
0x000b84f9: add ecx, dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000929a2: add ecx, dword ptr [edi]; add byte ptr [0x1a446f], al; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x001217ac: add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x00028f2a: add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x00029129: add ecx, dword ptr [edi]; dec ecx; ret; 
0x0008c925: add ecx, dword ptr [edi]; inc esp; ret 0x978b; 
0x0013ae58: add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x000b83e1: add ecx, dword ptr [edi]; test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008fcb4: add ecx, dword ptr [edi]; test dword ptr [ebp - 0x77000000], ebp; ret 0xca83; 
0x0010540e: add ecx, dword ptr [edi]; test dword ptr [esi - 0x74000008], ebx; mov esp, 0x9024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000b0de3: add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000976e4: add ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc231; 
0x001408ad: add ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x00117f80: add ecx, dword ptr [edi]; xchg esp, eax; ret 0x98e9; 
0x00117f1c: add ecx, dword ptr [edi]; xchg esp, eax; ret 0xfce9; 
0x00140843: add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x00024e1f: add ecx, dword ptr [esi]; push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0009e60e: add ecx, eax; call 0x1ca6919; mov dword ptr [edx + 0x388], eax; ret; 
0x0006f3d4: add ecx, eax; jmp ecx; 
0x0003b540: add ecx, eax; mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003bbd9: add ecx, eax; mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003b8d1: add ecx, eax; mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000705f2: add ecx, eax; mov edx, ecx; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp edx; 
0x00110dad: add ecx, ebp; ret 0xfffe; 
0x00078aa7: add ecx, ebp; ret; 
0x00031d9a: add ecx, ebx; jmp ecx; 
0x0006582a: add ecx, edi; jmp ecx; 
0x000c09d4: add ecx, edx; jmp ecx; 
0x000a4907: add ecx, edx; test eax, eax; jne 0xa4900; mov eax, ecx; ret; 
0x00071a79: add ecx, esi; jmp ecx; 
0x00107a71: add ecx, esp; or bh, cl; call dword ptr [eax - 0x73]; 
0x000b8e71: add edi, 0x10; call 0x182d2d; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e55: add edi, 0x10; call 0x182d2d; add ecx, 0x10d0d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7771: add edi, 0x10; call 0x182d2d; add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7755: add edi, 0x10; call 0x182d2d; add ecx, 0x10e673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f318: add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00063de6: add edi, dword ptr [eax + edx*4]; mov edx, edi; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00063b19: add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x000ffd5f: add edi, dword ptr [ecx]; ret 0x420f; 
0x000a07b9: add edi, dword ptr [ecx]; ret; 
0x0016b68c: add edi, eax; sub edx, eax; push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00168b99: add edi, ebp; call dword ptr [eax - 0x73]; 
0x00078782: add edi, ebp; jmp edi; 
0x00040f58: add edi, ebx; push edi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x00194539: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001945c9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194659: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946e9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194779: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194809: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194029: add edi, ecx; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001940b9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194149: add edi, ecx; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001941d9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194269: add edi, ecx; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001942f9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194389: add edi, ecx; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194419: add edi, ecx; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001944a9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b82fb: add edi, ecx; add esi, ecx; call 0x182d2d; add ecx, 0x10db9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cbb: add edi, ecx; add esi, ecx; call 0x182d2d; add ecx, 0x10f07c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ec679: add edi, ecx; inc dword ptr [ecx]; xlatb; jmp edi; 
0x0002562d: add edi, ecx; jmp edi; 
0x00192be5: add edi, edi; inc dword ptr [ecx + 0x41ea8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192b1e: add edi, edi; inc dword ptr [ecx + 0x41f6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001929be: add edi, edi; inc dword ptr [ecx + 0x420cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192925: add edi, edi; inc dword ptr [ecx + 0x42168c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001694ac: add edi, edi; jae 0x1694b8; push esi; call dword ptr [ebx + 0xc]; 
0x00117c5d: add edi, edi; je 0x117c85; sub al, 0xff; ja 0x117c71; call dword ptr [edi + 0x24]; 
0x00118ccd: add edi, edi; je 0x118cf5; sub al, 0xff; ja 0x118ce1; call dword ptr [edi + 0x24]; 
0x00119d6d: add edi, edi; je 0x119d95; sub al, 0xff; ja 0x119d81; call dword ptr [edi + 0x24]; 
0x0017efd4: add edi, edi; je 0x17effc; cmp al, ch; ret 0xfa05; 
0x0008c591: add edi, edi; je 0x8c5b9; xor bh, bh; je 0x8c5bd; cmp al, 0x51; call eax; 
0x0009c584: add edi, edi; je 0x9c5ac; sbb al, 0xe8; ret 0xfff0; 
0x00093a74: add edi, edx; dec dword ptr [ebp - 0x682937f]; call dword ptr [eax - 0x73]; 
0x000ec67c: add edi, edx; jmp edi; 
0x000dcff5: add edi, esi; jmp edi; 
0x0003c8f6: add edi, esi; ret 0; 
0x001a3dae: add edx, 0; jl 0x1a3fd0; mov eax, ecx; ret; 
0x0012bbe5: add edx, 0x10b22f; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a875: add edx, 0x10c59f; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012a705: add edx, 0x10c70f; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c935: add edx, 0x11a4df; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f8215: add edx, 0x13ebff; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xf8230; ret; 
0x000d92a5: add edx, 0x15db6f; push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000dc0dd: add edx, 0x16d; mov eax, edx; ret; 
0x0009e625: add edx, 0x1987ef; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9e640; ret; 
0x0009e5e5: add edx, 0x19882f; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9e600; ret; 
0x0008ccd5: add edx, 0x1aa13f; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8cce8; ret; 
0x0013f933: add edx, 0x75; stc; call dword ptr [esi + 0x6a]; 
0x001a3f80: add edx, 0xa; jl 0x1a3fd0; lea eax, [ecx + 0xa]; ret; 
0x001a3f90: add edx, 0xb; jl 0x1a3fd0; lea eax, [ecx + 0xb]; ret; 
0x001513db: add edx, 0xc483fff3; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001a3efb: add edx, 0xc; jl 0x1a3fd0; lea eax, [ecx + 0xc]; ret; 
0x001a3fa0: add edx, 0xd; jl 0x1a3fd0; lea eax, [ecx + 0xd]; ret; 
0x001a3fb0: add edx, 0xe; jl 0x1a3fd0; lea eax, [ecx + 0xe]; ret; 
0x001a3fc0: add edx, 0xf; jl 0x1a3fd0; lea eax, [ecx + 0xf]; ret; 
0x001a3f10: add edx, 1; jl 0x1a3fd0; lea eax, [ecx + 1]; ret; 
0x0014384e: add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000f758d: add edx, 1; test al, al; jne 0xf755d; xor eax, eax; ret; 
0x0004256a: add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x001a3f20: add edx, 2; jl 0x1a3fd0; lea eax, [ecx + 2]; ret; 
0x001a3f30: add edx, 3; jl 0x1a3fd0; lea eax, [ecx + 3]; ret; 
0x001a3e98: add edx, 4; jl 0x1a3fd0; lea eax, [ecx + 4]; ret; 
0x000d704e: add edx, 4; test eax, eax; jne 0xd7048; xor edx, edx; mov eax, edx; ret; 
0x001a3f40: add edx, 5; jl 0x1a3fd0; lea eax, [ecx + 5]; ret; 
0x001a3f50: add edx, 6; jl 0x1a3fd0; lea eax, [ecx + 6]; ret; 
0x001a3f60: add edx, 7; jl 0x1a3fd0; lea eax, [ecx + 7]; ret; 
0x0013cdb1: add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x001a3ed1: add edx, 8; jl 0x1a3fd0; lea eax, [ecx + 8]; ret; 
0x001a3f70: add edx, 9; jl 0x1a3fd0; lea eax, [ecx + 9]; ret; 
0x00129add: add edx, dword ptr [eax + 0x28]; push edx; push dword ptr [esp + 0x30]; call 0x129a40; add esp, 0x2c; ret; 
0x0017e411: add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0002ec79: add edx, dword ptr [ecx]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x000e8586: add edx, dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x00182b8f: add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x000bf156: add edx, eax; jl 0xbf190; add eax, ecx; ret; 
0x000bf166: add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x10]; ret; 
0x000bf176: add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x20]; ret; 
0x000bf186: add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x30]; ret; 
0x000463b5: add edx, eax; std; jmp dword ptr [esi - 0x70]; 
0x000d1c2e: add edx, ebp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00094a7a: add edx, ebp; jmp edx; 
0x0005f7f5: add edx, ebx; jmp edx; 
0x0014ff4a: add edx, ebx; out 0x21, eax; ret; 
0x001a0d17: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x34634; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a0c52: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x346f9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f347: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x35f00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f238: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x3600f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c63: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x3f424; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c56: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x40271; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c76: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x41091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191d57: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x42df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191c52: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x42e35; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191a43: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x43044; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fd47: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x44b80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fc42: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x44bc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fa36: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x44dd1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dd47: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x46900; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dc42: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x46945; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018da36: add edx, ecx; add eax, ecx; call 0x182d19; add ebx, 0x46b51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bfae0: add edx, ecx; add esi, ecx; jmp ebx; 
0x0018c04e: add edx, ecx; jmp ebx; 
0x000e8dc4: add edx, ecx; jmp edx; 
0x0003747e: add edx, edi; jmp edx; 
0x0019453b: add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001945cb: add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019465b: add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946eb: add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019477b: add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019480b: add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019402b: add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001940bb: add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019414b: add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001941db: add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019426b: add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001942fb: add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019438b: add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019441b: add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001944ab: add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00090ad4: add edx, edx; and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0005aa3b: add edx, esi; jmp edx; 
0x000be1b7: add esi, 0x10; add eax, 0x10; call 0x182d2d; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baeb7: add esi, 0x10; add eax, 0x10; call 0x182d2d; add ecx, 0x10b0b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001266f0: add esi, 0x110724; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00123fab: add esi, 0x112e69; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011cc00: add esi, 0x11a214; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00112700: add esi, 0x124714; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00108b5b: add esi, 0x12e2b9; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000badf5: add esi, 0x30; add eax, 0x30; call 0x182d2d; add ecx, 0x10b174; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00122bdc: add esi, 0x5c; stc; call dword ptr [eax + 0x55]; 
0x00189420: add esi, 0xad9f4; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0016ee43: add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0016957e: add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0008d9ea: add esi, 8; push eax; call ecx; 
0x0008fb5d: add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000fc578: add esi, dword ptr [eax + esi - 0xa]; ret 0x7404; 
0x000964c9: add esi, dword ptr [ebx + eax*8 - 0x77]; ret 0xca83; 
0x00096c49: add esi, dword ptr [ecx + eax*8 - 0x77]; ret 0xca83; 
0x000c08f5: add esi, dword ptr [edi + eax - 0x3a]; add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x0008f6fe: add esi, dword ptr [edi + ebp - 0x77]; clc; call dword ptr gs:[0x10]; 
0x000fc88e: add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0016a5af: add esi, dword ptr [esi + 0xe]; mov eax, 2; pop ebx; pop esi; ret; 
0x0008fbbf: add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x00096e61: add esi, dword ptr [esi + edi*4 - 0x77]; ret 0xca83; 
0x0002fba9: add esi, dword ptr [esp + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x000a61b2: add esi, eax; add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x0012abe7: add esi, ebp; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0015d338: add esi, ebx; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00042b79: add esi, ebx; jmp esi; 
0x000be130: add esi, ecx; bsf edx, edx; call 0x182d2d; add ecx, 0x107eba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be112: add esi, ecx; bsf edx, edx; call 0x182d2d; add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae30: add esi, ecx; bsf edx, edx; call 0x182d2d; add ecx, 0x10b13a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae12: add esi, ecx; bsf edx, edx; call 0x182d2d; add ecx, 0x10b158; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8142: add esi, ecx; bsf edx, edx; call 0x182d2d; add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b12: add esi, ecx; bsf edx, edx; call 0x182d2d; add ecx, 0x10f1a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be2da: add esi, ecx; call 0x182d2d; add ecx, 0x107d93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2ba: add esi, ecx; call 0x182d2d; add ecx, 0x107db3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be29d: add esi, ecx; call 0x182d2d; add ecx, 0x107dd0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b831a: add esi, ecx; call 0x182d2d; add ecx, 0x10db7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82fd: add esi, ecx; call 0x182d2d; add ecx, 0x10db9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cfa: add esi, ecx; call 0x182d2d; add ecx, 0x10f03f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cda: add esi, ecx; call 0x182d2d; add ecx, 0x10f05f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cbd: add esi, ecx; call 0x182d2d; add ecx, 0x10f07c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bfae2: add esi, ecx; jmp ebx; 
0x000a5073: add esi, edi; jmp dword ptr [esi - 0x70]; 
0x00036797: add esi, edi; jmp esi; 
0x00041043: add esi, edi; push esi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0008c13a: add esi, edx; jmp esi; 
0x00109dc4: add esi, esi; ret 0x7404; 
0x00156dda: add esi, esi; ret 0xf01; 
0x000e728f: add esi, esi; ret 0xf02; 
0x000ffe83: add esi, esi; ret; 
0x0017ec5a: add esp, -0x36; stc; call dword ptr [eax - 0x18]; 
0x0014e6ee: add esp, -0x3f; stc; call dword ptr [eax - 0x73]; 
0x00128e0f: add esp, -0x4c; stc; call dword ptr [eax - 0x18]; 
0x000c05a5: add esp, 0x100; sub eax, edx; ret; 
0x0011b13a: add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x0006068a: add esp, 0x1018; pop ebx; ret; 
0x00138f39: add esp, 0x10; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009f6a1: add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000400b9: add esp, 0x10; add esp, 0xc; ret; 
0x0017f80f: add esp, 0x10; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0016a984: add esp, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00142472: add esp, 0x10; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00026042: add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0008e544: add esp, 0x10; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00124e40: add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0002709e: add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000963a9: add esp, 0x10; call eax; 
0x0009ff7f: add esp, 0x10; cmp eax, -1; je 0x9ff90; add esp, 0xc; ret; 
0x0016e31c: add esp, 0x10; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0017652b: add esp, 0x10; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0010a909: add esp, 0x10; cmp ebp, 0x2d; ja 0x10a930; mov eax, dword ptr [ebx + ebp*4 - 0x6f150]; add eax, ebx; jmp eax; 
0x001627ab: add esp, 0x10; cmp edx, 1; jg 0x1627d8; add esp, 0x18; pop ebx; ret; 
0x0017b878: add esp, 0x10; cmp edx, 1; jg 0x17b8a0; add esp, 0x18; pop ebx; ret; 
0x0017b8f4: add esp, 0x10; cmp edx, 1; jg 0x17b920; add esp, 0x18; pop ebx; ret; 
0x0017bbcc: add esp, 0x10; cmp edx, 1; jg 0x17bbf8; add esp, 0x18; pop ebx; ret; 
0x000924cb: add esp, 0x10; cmp edx, 1; jg 0x924f8; add esp, 0x18; pop ebx; ret; 
0x0010dc7d: add esp, 0x10; cmp esi, 0x2f; ja 0x10d5f0; mov eax, dword ptr [ebx + esi*4 - 0x6eea0]; add eax, ebx; jmp eax; 
0x0013c7ea: add esp, 0x10; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x00127cd7: add esp, 0x10; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x001457b2: add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x00152677: add esp, 0x10; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000e47de: add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0012089c: add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0007b4cd: add esp, 0x10; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0012027c: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x1202c8; call eax; 
0x001203a0: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x120448; call eax; 
0x00132275: add esp, 0x10; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00174ef4: add esp, 0x10; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x174f08; add esp, 0x2c; ret; 
0x0017300a: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x17301e; add esp, 0x4c; ret; 
0x0017307a: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x17308e; add esp, 0x4c; ret; 
0x001730ea: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1730fe; add esp, 0x4c; ret; 
0x0017314d: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x173161; add esp, 0x4c; ret; 
0x001731ad: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1731c1; add esp, 0x4c; ret; 
0x0017321a: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x17322e; add esp, 0x4c; ret; 
0x0017329a: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1732ae; add esp, 0x4c; ret; 
0x0003c4d0: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006032b: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0017377b: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x0003e89e: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b1: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x00154664: add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x001547e6: add esp, 0x10; mov eax, ebx; call eax; 
0x000c3529: add esp, 0x10; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0018081c: add esp, 0x10; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000993ac: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0013a8ba: add esp, 0x10; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000e7009: add esp, 0x10; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x001480d2: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0002549f: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x254b3; add esp, 0x1c; ret; 
0x00122252: add esp, 0x10; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001387c7: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x00139967: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x0018b9dd: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0004022c: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x000527dc: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x0009097f: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x000966af: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b0f: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x0009703b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x0009748b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x00172f9a: add esp, 0x10; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x172fae; add esp, 0x4c; ret; 
0x00128f7e: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0018568b: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x0003fe71: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x0004007e: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x0004032e: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b1: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x000d7bf0: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000e2324: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47a4: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x00025343: add esp, 0x10; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x000257a0: add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0005ffb6: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f60e: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011e79d: add esp, 0x10; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001424cc: add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0015d5a9: add esp, 0x10; push dword ptr [esp]; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001546d9: add esp, 0x10; push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00146f5a: add esp, 0x10; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x001727d7: add esp, 0x10; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x001721f7: add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016a2e8: add esp, 0x10; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0013865c: add esp, 0x10; test eax, eax; je 0x138670; add esp, 8; pop ebx; ret; 
0x0015cbe0: add esp, 0x10; test eax, eax; je 0x15cbf0; sub esp, 0xc; push esi; call eax; 
0x0015cf40: add esp, 0x10; test eax, eax; je 0x15cf50; sub esp, 0xc; push esi; call eax; 
0x00169d10: add esp, 0x10; test eax, eax; je 0x169d20; sub esp, 0xc; push esi; call eax; 
0x0016aa63: add esp, 0x10; test eax, eax; je 0x16ab6b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x000418e2: add esp, 0x10; test eax, eax; je 0x418f0; add esp, 8; pop ebx; ret; 
0x00124884: add esp, 0x10; test eax, eax; jne 0x124848; add esp, 0xc; ret; 
0x00173844: add esp, 0x10; test eax, eax; jne 0x173830; add esp, 8; pop ebx; ret; 
0x0003c131: add esp, 0x10; test eax, eax; jne 0x3c140; add esp, 8; pop ebx; ret; 
0x0003c3c0: add esp, 0x10; test eax, eax; jne 0x3c3d0; add esp, 8; pop ebx; ret; 
0x000f7810: add esp, 0x10; test eax, eax; jne 0xf7820; add esp, 8; pop ebx; ret; 
0x0012cf1d: add esp, 0x10; test eax, eax; js 0x12cf30; add esp, 8; pop ebx; ret; 
0x001524ab: add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x000a47f0: add esp, 0x10; test ebp, ebp; jne 0xa4745; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x00182e8b: add esp, 0x10; test ebx, ebx; jne 0x182ea0; add esp, 8; pop ebx; ret; 
0x00039bab: add esp, 0x10; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000fc8bb: add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00092422: add esp, 0x10; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00145678: add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0003c60b: add esp, 0x114; pop ebx; pop edi; ret; 
0x001458c4: add esp, 0x118; pop ebx; ret; 
0x00145ac4: add esp, 0x11c; ret; 
0x0017d68e: add esp, 0x11cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003c0fa: add esp, 0x124; pop ebx; pop esi; ret; 
0x0003cd6a: add esp, 0x128; pop ebx; ret; 
0x000c21ad: add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x0012c92e: add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000591c8: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret 4; 
0x0011f557: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x000a5013: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x0009ad4a: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0012fabc: add esp, 0x14; pop ebx; pop edi; ret; 
0x000ad6fb: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002fc72: add esp, 0x14; pop ebx; pop esi; ret; 
0x001691a0: add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x000852f4: add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0004a509: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e5d79: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d85ee: add esp, 0x16c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001686d2: add esp, 0x18; lea eax, [ebx + 0xa5ec]; pop ebx; ret; 
0x0004196e: add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0011f1e7: add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0004239a: add esp, 0x18; mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00042308: add esp, 0x18; mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004236c: add esp, 0x18; mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000422da: add esp, 0x18; mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00174ff3: add esp, 0x18; pop ebx; jmp eax; 
0x000a71b8: add esp, 0x18; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003ba27: add esp, 0x18; pop ebx; pop esi; pop edi; ret; 
0x000244f7: add esp, 0x18; pop ebx; ret; 
0x0008e21a: add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0017be19: add esp, 0x190; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00120fe2: add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x0011241a: add esp, 0x19c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0017dacb: add esp, 0x1bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003a906: add esp, 0x1c; and edx, 0x7fff0000; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0012a568: add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0016c595: add esp, 0x1c; movzx eax, al; ret; 
0x00176705: add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0007c9ee: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002518c: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003a8cd: add esp, 0x1c; ret 4; 
0x0002450f: add esp, 0x1c; ret; 
0x0018954e: add esp, 0x1c; sar eax, 0x1f; ret; 
0x00101f6c: add esp, 0x1ec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008f1b8: add esp, 0x20; add esp, 0xc; ret; 
0x0015ca39: add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0015d2f9: add esp, 0x20; cmp edx, 1; jg 0x15d328; add esp, 0x18; pop ebx; ret; 
0x00139de3: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x0008c674: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d902c: add esp, 0x20; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00060f35: add esp, 0x20; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00108aa4: add esp, 0x20; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0007ad8e: add esp, 0x20; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012275b: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x00145fb5: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x0002554f: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0003d555: add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0012c9d9: add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00126d7e: add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x0011fa7c: add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0008c293: add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x000d95d2: add esp, 0x24; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003d1aa: add esp, 0x24; pop ebx; pop esi; ret; 
0x00054a59: add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0008c441: add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0018ba88: add esp, 0x28; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x0003c9b2: add esp, 0x28; pop ebx; ret; 
0x000dc2ba: add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x00149e66: add esp, 0x2bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012a5a9: add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x00107f58: add esp, 0x2c; movzx eax, al; ret; 
0x0008bd31: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00023522: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00034b0a: add esp, 0x2c; ret; 
0x0017fa7c: add esp, 0x30; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017840a: add esp, 0x30; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0017f9b7: add esp, 0x30; pop ebx; pop esi; pop edi; jmp eax; 
0x00090dc5: add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013a396: add esp, 0x34; mov eax, esi; pop ebx; pop esi; ret; 
0x00040046: add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00110b3d: add esp, 0x34; pop ebx; pop esi; ret; 
0x0010b8ed: add esp, 0x35c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00100f1e: add esp, 0x388c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a4035: add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x001448c9: add esp, 0x38; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009a1b8: add esp, 0x38; pop ebx; ret; 
0x001aef5d: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00026da3: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00128b17: add esp, 0x3c; ret; 
0x0012b634: add esp, 0x40; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0003b711: add esp, 0x40; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0003b6a7: add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x00120157: add esp, 0x418; pop ebx; ret; 
0x00059dca: add esp, 0x434; pop ebx; pop esi; ret; 
0x0011d0b4: add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x00040d5f: add esp, 0x44c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00047009: add esp, 0x45c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001491c4: add esp, 0x46c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d7cac: add esp, 0x48; pop ebx; ret; 
0x0006edc2: add esp, 0x4ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003ad29: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003f225: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011b1c3: add esp, 0x4c; ret; 
0x000631a4: add esp, 0x4cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0017b268: add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x00121c06: add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x00112785: add esp, 0x54; pop ebx; pop esi; ret; 
0x001734c2: add esp, 0x56c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002863f: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003aaf6: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00029cbb: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011261b: add esp, 0x60; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x001127f1: add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00122dd3: add esp, 0x60; stc; call dword ptr [eax + 0x55]; 
0x0010b09d: add esp, 0x64; pop ebx; pop esi; ret; 
0x0010adb9: add esp, 0x68; pop ebx; ret; 
0x00146b10: add esp, 0x6b; stc; call dword ptr [eax - 0x18]; 
0x0002a5cc: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002eee2: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00151443: add esp, 0x6d; stc; call dword ptr [eax - 1]; 
0x0011f742: add esp, 0x70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000e5b92: add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00171ca2: add esp, 0x74; pop ebx; pop edi; ret; 
0x00111e8e: add esp, 0x74; pop ebx; pop esi; ret; 
0x0005e817: add esp, 0x78; pop ebx; ret; 
0x0002b086: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002aee5: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012de3a: add esp, 0x7c; ret; 
0x001453b5: add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x00084084: add esp, 0x824; pop ebx; pop esi; ret; 
0x000ec0c2: add esp, 0x85c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000eac04: add esp, 0x89c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0015bd2c: add esp, 0x8bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00061605: add esp, 0x8fc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000984e2: add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0003c6f8: add esp, 0x94; pop ebx; pop edi; ret; 
0x0008efb5: add esp, 0x94; pop ebx; pop esi; ret; 
0x0003c80d: add esp, 0x98; pop ebx; ret; 
0x0003c584: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003d3de: add esp, 0x9c; ret; 
0x0008426b: add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00158418: add esp, 0xa9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000335e1: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009e497: add esp, 0xb4; pop ebx; pop esi; ret; 
0x00027ddb: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001416db: add esp, 0xc5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008bbe0: add esp, 0xc; jmp eax; 
0x0016aa55: add esp, 0xc; mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00034a9f: add esp, 0xc; mov eax, edx; ret; 
0x0009a266: add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00052790: add esp, 0xc; movzx eax, al; ret; 
0x0007f698: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000a4f3c: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00027014: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001689af: add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00132d0b: add esp, 0xc; push eax; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00134b20: add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013502d: add esp, 0xc; push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x00132e04: add esp, 0xc; push eax; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0013289c: add esp, 0xc; push eax; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00133821: add esp, 0xc; push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x001335f5: add esp, 0xc; push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0005e8cf: add esp, 0xc; push ebx; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000257a7: add esp, 0xc; ret; 
0x000a6061: add esp, 0xc; test eax, eax; jne 0xa6073; ret; 
0x00042bf9: add esp, 0xcc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ec65b: add esp, 0xd0; pop ebx; pop esi; pop edi; ret; 
0x00129507: add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0011b06f: add esp, 0xe4; pop ebx; pop esi; ret; 
0x000e5a56: add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x000e58ac: add esp, 0xe8; pop ebx; ret; 
0x000462ce: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000367d1: add esp, 0xfc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00172b07: add esp, 4; add eax, 0x90; pop ebx; pop esi; ret; 
0x00172b97: add esp, 4; add eax, 0x94; pop ebx; pop esi; ret; 
0x000f9ffc: add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x0016b0be: add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x0005417b: add esp, 4; jmp eax; 
0x00168800: add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x000a44a0: add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0007f630: add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0005aa60: add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0016a7f3: add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x0008ca06: add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00150138: add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x00135b8b: add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x000601e2: add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00132186: add esp, 4; movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x0016ba5d: add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x00092463: add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x0019e939: add esp, 4; pop ebp; pop ebx; ret; 
0x00081402: add esp, 4; pop ebx; pop esi; jmp eax; 
0x00039b3d: add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00025f61: add esp, 4; pop ebx; pop esi; ret; 
0x00024fd4: add esp, 4; pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0019c0a9: add esp, 4; pop ebx; ret; 
0x0008eb25: add esp, 4; pop esi; pop edi; ret; 
0x0003bc8a: add esp, 4; ret; 
0x00172a87: add esp, 4; sub eax, -0x80; pop ebx; pop esi; ret; 
0x0008e862: add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x0004027b: add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00146053: add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x00095318: add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005aee8: add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00124e43: add esp, 8; mov eax, 1; pop ebx; ret; 
0x00060fc7: add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000528fd: add esp, 8; mov eax, edx; pop ebx; ret; 
0x0008727c: add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x0016a906: add esp, 8; movzx eax, al; pop ebx; ret; 
0x0010964e: add esp, 8; or eax, edx; pop ebx; ret; 
0x00059498: add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000270a1: add esp, 8; pop ebx; ret; 
0x0003ba95: add esp, 8; ret; 
0x0003be23: add esp, 8; xor eax, eax; pop ebx; ret; 
0x0011bb51: add sp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000dbf40: add sp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012fcc5: add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x0005d142: and ah, 0x8a; stc; call dword ptr [eax - 0x18]; 
0x000a03fd: and ah, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x000a04ff: and ah, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x000c0a67: and ah, 1; add byte ptr [eax], al; ret; 
0x00152595: and ah, byte ptr [ebp - 0x77]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00152645: and ah, byte ptr [ebp - 0x77]; pop ebx; pop esi; pop edi; ret; 
0x00196a70: and ah, dh; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00024fa4: and al, 0; add byte ptr [eax], al; add al, ch; ret 0xc21; 
0x0012120d: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x3940247c], cl; fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x0007f9be: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0002cd48: and al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x72c7dbbc], cl; inc edi; and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x00029fc8: and al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x0006ee24: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x001261a6: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x0011b7e8: and al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001271a1: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001271a1: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x000c5610: and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x00063493: and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0002f38b: and al, 0x10; add byte ptr [eax], al; ret; 
0x0006344b: and al, 0x10; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00112353: and al, 0x10; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0018d252: and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0003ba25: and al, 0x10; add esp, 0x18; pop ebx; pop esi; pop edi; ret; 
0x0016a7f1: and al, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x001687ee: and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00139653: and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0008eee7: and al, 0x10; and byte ptr [esp + ecx - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003b412: and al, 0x10; and eax, 0x80000000; ret; 
0x001306e9: and al, 0x10; call 0x12fae0; pop edx; pop ecx; pop eax; ret; 
0x0015465d: and al, 0x10; call 0x180100; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0011b839: and al, 0x10; call dword ptr gs:[0x10]; 
0x000408e6: and al, 0x10; call eax; 
0x001546e9: and al, 0x10; call edi; 
0x0011f348: and al, 0x10; cmp al, 1; ret 0x1389; 
0x0018187b: and al, 0x10; cmp dword ptr [eax], 0; mov ebx, dword ptr [esp + 0x14]; jne 0x181890; pop ebx; ret; 
0x00137bc0: and al, 0x10; cmp eax, 0x3ff; ja 0x137bd0; sar eax, 5; add esp, 0xc; ret; 
0x00108892: and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0003b553: and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003b782: and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003b548: and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00175d4f: and al, 0x10; lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0017530f: and al, 0x10; lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x0018ba32: and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x000a441a: and al, 0x10; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00182af8: and al, 0x10; mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x00096281: and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0012da14: and al, 0x10; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x0007ab13: and al, 0x10; mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0008bc36: and al, 0x10; mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00126745: and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011dffa: and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011df06: and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00111905: and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b285: and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c335: and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfb5: and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c035: and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdd5: and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00129c77: and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x0012c195: and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bff5: and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00128fba: and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0012bec5: and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c205: and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012ad05: and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270f5: and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241c5: and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x001206a5: and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000813fd: and al, 0x10; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008bbdb: and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00130007: and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x12fed0; add esp, 4; ret; 
0x0008bcc3: and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x001853ff: and al, 0x10; mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00175d53: and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00175313: and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x001802c1: and al, 0x10; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0012d062: and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cfb0: and al, 0x10; mov ebx, 0xa; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d670: and al, 0x10; mov ebx, 9; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00097c2b: and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000a9716: and al, 0x10; mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0xa9733; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97d6: and al, 0x10; mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0xa980b; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x0010fbc6: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e5dd8: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0011c90c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012c15c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c23c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001226cc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ffc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0012060c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd9c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008d6a0: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093306: and al, 0x10; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x001701a5: and al, 0x10; mov ecx, dword ptr [ecx + 8]; cmp edx, 0xf; ja 0x1701c0; add eax, dword ptr [eax + edx*4 - 0x6c910]; jmp eax; 
0x00170ad5: and al, 0x10; mov ecx, dword ptr [ecx + 8]; cmp edx, 0xf; ja 0x170bf0; add eax, dword ptr [eax + edx*4 - 0x6c8d0]; jmp eax; 
0x0012c423: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b783: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d513: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d023: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111333: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c093: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be03: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be63: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111053: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f443: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129253: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf73: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc33: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125053: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd13: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd43: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c063: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b73: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed933: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed903: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f73: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124313: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124023: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124053: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120633: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000ad2e2: and al, 0x10; mov ecx, edx; and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x71194]; jmp eax; 
0x0011ef49: and al, 0x10; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00092447: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0009d584: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011eef9: and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012b2ae: and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011beee: and al, 0x10; mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0006042d: and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011df7a: and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011de86: and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00175681: and al, 0x10; pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x001756ba: and al, 0x10; pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0007fbbb: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007fa6b: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00087677: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0016a5cd: and al, 0x10; pop ebx; pop esi; jmp eax; 
0x000a5a7b: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00081ba3: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0014f7e0: and al, 0x10; push eax; push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x00171a3a: and al, 0x10; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0007abb4: and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00175d80: and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x00174fb8: and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x00170de2: and al, 0x10; push edi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00175b0e: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016edba: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001751a8: and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x00175145: and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x00175440: and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00175478: and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0013a8f8: and al, 0x10; push edx; push edi; call eax; 
0x0013a9c9: and al, 0x10; push edx; push esi; call eax; 
0x001689ba: and al, 0x10; push esi; call dword ptr [eax + 0xc]; 
0x00081ba7: and al, 0x10; push esi; call dword ptr [ebx + 0x40]; 
0x00140d2f: and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0005a947: and al, 0x10; test byte ptr [edx], 0x20; je 0x5a958; add esp, 0xc; ret; 
0x00077c17: and al, 0x10; test byte ptr [edx], 0x20; je 0x77c28; add esp, 0xc; ret; 
0x0012a9c3: and al, 0x10; test edx, edx; je 0x12a9f8; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0006f73a: and al, 0x14; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0006fafa: and al, 0x14; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00112269: and al, 0x14; add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x0014ab8e: and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x00034a9d: and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x00034ad2: and al, 0x14; call 0x34570; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0009642a: and al, 0x14; call 0x962c0; xor eax, eax; add esp, 0xc; ret; 
0x000e4d36: and al, 0x14; call dword ptr gs:[0x10]; 
0x00024d3f: and al, 0x14; call eax; 
0x000e4dce: and al, 0x14; cmp eax, 0x3b9ac9ff; ja 0xe4e68; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000a971a: and al, 0x14; cmp ecx, 8; ja 0xa9733; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97da: and al, 0x14; cmp ecx, 8; ja 0xa980b; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x000d7ce9: and al, 0x14; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00181882: and al, 0x14; jne 0x181890; pop ebx; ret; 
0x00077e6b: and al, 0x14; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008bbd7: and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000e4d29: and al, 0x14; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0012d06a: and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010aeaf: and al, 0x14; mov eax, 0x72; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0008d616: and al, 0x14; mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00169ee9: and al, 0x14; mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00132255: and al, 0x14; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00024d3b: and al, 0x14; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0012dd08: and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d891: and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012c9a0: and al, 0x14; mov ebx, 0x12; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009244b: and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001893bc: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00126741: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011dff6: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00111901: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b281: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c331: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfb1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c031: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdd1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c191: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bff1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bec1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c201: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012ad01: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270f1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241c1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x001206a1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012b2aa: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011df76: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0009d588: and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c908: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012c158: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c238: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001226c8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ff8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00120608: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd98: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0012e04f: and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011b82c: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00060425: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0018b82d: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e53d: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012a824: and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e7bbe: and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00052664: and al, 0x14; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0016b1b0: and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00024d37: and al, 0x14; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00168d10: and al, 0x14; push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00168d14: and al, 0x14; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0005e973: and al, 0x14; push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0014f7e7: and al, 0x14; push ebp; call edi; 
0x00173348: and al, 0x14; push ebx; call dword ptr [eax]; 
0x000edbfd: and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001695b3: and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x001688a8: and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x000c87b0: and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x00093e87: and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001122f1: and al, 0x18; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0006d08d: and al, 0x18; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x0006179d: and al, 0x18; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x00063813: and al, 0x18; add eax, dword ptr [ecx + edx*4 - 0x72e94]; jmp eax; 
0x00064f0a: and al, 0x18; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00064792: and al, 0x18; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x0006400c: and al, 0x18; add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x0016f3d1: and al, 0x18; call dword ptr [eax + 0x10]; 
0x00180129: and al, 0x18; call dword ptr [eax + 0x37c]; add esp, 0x1c; ret; 
0x001842f0: and al, 0x18; call dword ptr [eax + 0x40]; 
0x0012b2b2: and al, 0x18; call dword ptr gs:[0x10]; 
0x00110c8b: and al, 0x18; call eax; 
0x000923ed: and al, 0x18; cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0012ac2c: and al, 0x18; cmp esi, -1; je 0x12ac50; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000d7cc9: and al, 0x18; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00135f9b: and al, 0x18; je 0x135fa8; add esp, 8; pop ebx; ret; 
0x0017d23f: and al, 0x18; lea eax, [eax - 0x6893c]; push eax; call 0x11b880; add esp, 0x1c; ret; 
0x0012da10: and al, 0x18; lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x00063e84: and al, 0x18; lea ecx, [ebx - 0x20]; cmp cl, 0x5a; jbe 0x64824; mov edi, eax; jmp edx; 
0x0012df6b: and al, 0x18; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00107f09: and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000a9832: and al, 0x18; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000a9772: and al, 0x18; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000403fe: and al, 0x18; mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0012da83: and al, 0x18; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016865d: and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009db95: and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e4d2d: and al, 0x18; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0011b830: and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0012c9a9: and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012e604: and al, 0x18; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00093e77: and al, 0x18; mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0005a1e6: and al, 0x18; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x653a0; add esp, 0x1c; ret; 
0x0007eda6: and al, 0x18; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x71620; add esp, 0x1c; ret; 
0x00077975: and al, 0x18; mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x0007ed45: and al, 0x18; mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x001271fa: and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0016d617: and al, 0x18; mov ebx, dword ptr [esi + 8]; cmp edx, 0xf; ja 0x16d630; add eax, dword ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x0010888e: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00060429: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00129c71: and al, 0x18; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0012673d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001118fd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b27d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c32d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfad: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c02d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdcd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c18d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bfed: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bebd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c1fd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012acfd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270ed: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241bd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012069d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0009bc3e: and al, 0x18; mov edi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x0018b831: and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00129a85: and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0011c904: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012c154: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c234: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001226c4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ff4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00120604: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd94: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0012a817: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012aa74: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e7bb6: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011bef2: and al, 0x18; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0012e541: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0006399e: and al, 0x18; or cl, byte ptr [ecx + 0xf542454]; xchg esp, eax; ret 0x748b; 
0x00063c38: and al, 0x18; or cl, byte ptr [edi]; xchg esp, eax; ret 0xc629; 
0x0011b1de: and al, 0x18; push -0x64; call 0x111700; add esp, 0x1c; ret; 
0x0011b68a: and al, 0x18; push -0x64; call 0x112030; add esp, 0x18; pop ebx; ret; 
0x0011b6ae: and al, 0x18; push -0x64; call 0x112200; add esp, 0x1c; ret; 
0x0010ad5d: and al, 0x18; push -1; call 0x10ae60; add esp, 0x1c; ret; 
0x0010ad37: and al, 0x18; push -1; call 0x10b230; add esp, 0x1c; ret; 
0x001292d5: and al, 0x18; push 0; call 0x129520; add esp, 0x1c; ret; 
0x00034b37: and al, 0x18; push 0; call 0x34af0; add esp, 0x1c; ret; 
0x000c13a4: and al, 0x18; push 0; call 0xc18c0; add esp, 0x1c; ret; 
0x0003e276: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x00124447: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x0009cfa5: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x9d570; add esp, 0x1c; ret; 
0x001112a5: and al, 0x18; push 0x241; push dword ptr [esp + 0x1c]; call 0x11b970; add esp, 0x1c; ret; 
0x0008e955: and al, 0x18; push 0x80; push dword ptr [esp + 0x1c]; call 0x8e8a0; add esp, 0x1c; ret; 
0x000d7d0b: and al, 0x18; push dword ptr [eax + 4]; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x0011b1da: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x111700; add esp, 0x1c; ret; 
0x0011b6aa: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x112200; add esp, 0x1c; ret; 
0x0010ad59: and al, 0x18; push dword ptr [esp + 0x18]; push -1; call 0x10ae60; add esp, 0x1c; ret; 
0x000c13a0: and al, 0x18; push dword ptr [esp + 0x18]; push 0; call 0xc18c0; add esp, 0x1c; ret; 
0x000a5ee5: and al, 0x18; push dword ptr [esp + 0x20]; call 0xbfe10; add esp, 0x18; pop ebx; ret; 
0x0003e969: and al, 0x18; push eax; push eax; call 0x3e9d0; add esp, 0x1c; ret; 
0x00078273: and al, 0x18; push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0014f408: and al, 0x18; push ebp; push 0; push edi; push ebx; call edx; 
0x0009e3bd: and al, 0x18; push edi; call 0x231a0; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0002fc06: and al, 0x18; sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x001846d8: and al, 0x18; test ebx, ebx; jne 0x1846e8; add esp, 8; pop ebx; ret; 
0x00087258: and al, 0x18; test ebx, ebx; jne 0x87268; add esp, 8; pop ebx; ret; 
0x0017650a: and al, 0x18; test edx, edx; jne 0x176518; add esp, 0xc; ret; 
0x0017664a: and al, 0x18; test edx, edx; jne 0x176658; add esp, 0xc; ret; 
0x0011ee86: and al, 0x18; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000704c6: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00063df4: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x0006f8bc: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x001563cf: and al, 0x1c; add eax, 8; push eax; call 0xbfaa0; add esp, 0x1c; ret; 
0x000e24e9: and al, 0x1c; add eax, dword ptr [eax + ecx*4 - 0x70488]; jmp eax; 
0x0009a79d: and al, 0x1c; call 0x107f80; add esp, 0x1c; ret; 
0x0010b23f: and al, 0x1c; call 0x10b050; add esp, 0x1c; ret; 
0x00189547: and al, 0x1c; call 0x111930; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00111b6d: and al, 0x1c; call 0x111b80; add esp, 0x1c; ret; 
0x0011b7c1: and al, 0x1c; call 0x11b7f0; add esp, 0x1c; ret; 
0x00060745: and al, 0x1c; call 0x11b880; add esp, 0x1c; ret; 
0x001112ae: and al, 0x1c; call 0x11b970; add esp, 0x1c; ret; 
0x001200b7: and al, 0x1c; call 0x11ff60; add esp, 0x18; pop ebx; ret; 
0x000244f0: and al, 0x1c; call 0x11ffe0; add esp, 0x18; pop ebx; ret; 
0x00122796: and al, 0x1c; call 0x1227e0; add esp, 0x1c; ret; 
0x0011ec64: and al, 0x1c; call 0x123fa0; add esp, 0x10; add esp, 0xc; ret; 
0x0011eb0f: and al, 0x1c; call 0x123fa0; add esp, 0x1c; ret; 
0x00124854: and al, 0x1c; call 0x124f60; add esp, 0x10; add esp, 0xc; ret; 
0x00127b10: and al, 0x1c; call 0x127390; add esp, 0x1c; ret; 
0x0012b937: and al, 0x1c; call 0x12b950; add esp, 0x1c; ret; 
0x0012e50f: and al, 0x1c; call 0x12ea80; add esp, 0x1c; ret; 
0x0013717c: and al, 0x1c; call 0x135900; add esp, 0x1c; ret; 
0x00135aac: and al, 0x1c; call 0x1359a0; add esp, 0x18; pop ebx; ret; 
0x0013a016: and al, 0x1c; call 0x13a030; add esp, 0x1c; ret; 
0x0013a336: and al, 0x1c; call 0x13a350; add esp, 0x1c; ret; 
0x0013e9c7: and al, 0x1c; call 0x13dd70; add esp, 0x1c; ret; 
0x00145767: and al, 0x1c; call 0x145690; add esp, 0x1c; ret; 
0x0018ba51: and al, 0x1c; call 0x152740; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bab1: and al, 0x1c; call 0x1535b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bd51: and al, 0x1c; call 0x15ec60; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bdb1: and al, 0x1c; call 0x15f8f0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bed1: and al, 0x1c; call 0x160e90; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bef1: and al, 0x1c; call 0x161180; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bf91: and al, 0x1c; call 0x161ff0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001724d0: and al, 0x1c; call 0x172220; add esp, 0x10; add esp, 0xc; ret; 
0x001724b5: and al, 0x1c; call 0x172320; add esp, 0x10; add esp, 0xc; ret; 
0x0017486f: and al, 0x1c; call 0x1745a0; add esp, 0x1c; ret; 
0x00169f5b: and al, 0x1c; call 0x175610; add esp, 0x1c; ret; 
0x00175873: and al, 0x1c; call 0x1756e0; add esp, 0x1c; ret; 
0x00183a61: and al, 0x1c; call 0x183190; add esp, 0x18; pop ebx; ret; 
0x00042241: and al, 0x1c; call 0x1a5bd0; add esp, 0x18; pop ebx; ret; 
0x00042285: and al, 0x1c; call 0x1a5c10; add esp, 0x18; pop ebx; ret; 
0x000a492f: and al, 0x1c; call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002fafe: and al, 0x1c; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00108861: and al, 0x1c; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00024508: and al, 0x1c; call 0x244d9; add esp, 0x1c; ret; 
0x00033108: and al, 0x1c; call 0x33120; add esp, 0x1c; ret; 
0x00034b1b: and al, 0x1c; call 0x34af0; add esp, 0x1c; ret; 
0x0003d1cb: and al, 0x1c; call 0x3d150; add esp, 0x1c; ret; 
0x0003e247: and al, 0x1c; call 0x3d9e0; add esp, 0x1c; ret; 
0x0003e27c: and al, 0x1c; call 0x3e3d0; add esp, 0x1c; ret; 
0x00182e27: and al, 0x1c; call 0x3e4b0; add esp, 0x1c; ret; 
0x0003ff56: and al, 0x1c; call 0x3ff70; add esp, 0x1c; ret; 
0x00041f96: and al, 0x1c; call 0x41fb0; add esp, 0x1c; ret; 
0x0003d907: and al, 0x1c; call 0x463f0; add esp, 0x1c; ret; 
0x000463e0: and al, 0x1c; call 0x46d60; add esp, 0x1c; ret; 
0x00049a60: and al, 0x1c; call 0x4a260; add esp, 0x1c; ret; 
0x0003d929: and al, 0x1c; call 0x4ccc0; add esp, 0x1c; ret; 
0x0004d390: and al, 0x1c; call 0x4dce0; add esp, 0x1c; ret; 
0x0003d969: and al, 0x1c; call 0x50a00; add esp, 0x1c; ret; 
0x0012449f: and al, 0x1c; call 0x60750; add esp, 0x10; add esp, 0xc; ret; 
0x0012444d: and al, 0x1c; call 0x60750; add esp, 0x1c; ret; 
0x00059ea0: and al, 0x1c; call 0x65010; add esp, 0x1c; ret; 
0x00059ec1: and al, 0x1c; call 0x65310; add esp, 0x1c; ret; 
0x0005a1c0: and al, 0x1c; call 0x653a0; add esp, 0x1c; ret; 
0x0006c8ff: and al, 0x1c; call 0x712d0; add esp, 0x1c; ret; 
0x0007edd1: and al, 0x1c; call 0x71590; add esp, 0x1c; ret; 
0x0007159f: and al, 0x1c; call 0x71620; add esp, 0x1c; ret; 
0x000785c0: and al, 0x1c; call 0x78490; add esp, 0x1c; ret; 
0x000839d1: and al, 0x1c; call 0x79ea0; add esp, 0x18; pop ebx; ret; 
0x0007aadb: and al, 0x1c; call 0x7a9f0; add esp, 0x1c; ret; 
0x00059fbf: and al, 0x1c; call 0x7b740; add esp, 0x1c; ret; 
0x00083cbe: and al, 0x1c; call 0x7cdd0; add esp, 0x1c; ret; 
0x00083cdb: and al, 0x1c; call 0x7cf80; add esp, 0x1c; ret; 
0x00083f2b: and al, 0x1c; call 0x83dd0; add esp, 0x18; pop ebx; ret; 
0x00059d00: and al, 0x1c; call 0x83dd0; add esp, 0x1c; ret; 
0x000840bb: and al, 0x1c; call 0x83fe0; add esp, 0x18; pop ebx; ret; 
0x00059e00: and al, 0x1c; call 0x83fe0; add esp, 0x1c; ret; 
0x0008456b: and al, 0x1c; call 0x843e0; add esp, 0x18; pop ebx; ret; 
0x0013894c: and al, 0x1c; call 0x843e0; add esp, 0x1c; ret; 
0x0008b588: and al, 0x1c; call 0x8b4d0; add esp, 0x18; pop ebx; ret; 
0x0008e67a: and al, 0x1c; call 0x8e5a0; add esp, 0x18; pop ebx; ret; 
0x0008e95e: and al, 0x1c; call 0x8e8a0; add esp, 0x1c; ret; 
0x00095302: and al, 0x1c; call 0x94a30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000953b7: and al, 0x1c; call 0x94a30; add esp, 0x18; pop ebx; ret; 
0x00095fa7: and al, 0x1c; call 0x95e60; add esp, 0x1c; ret; 
0x00097c6a: and al, 0x1c; call 0x97c20; add esp, 0x18; pop ebx; ret; 
0x0009be77: and al, 0x1c; call 0x9b650; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009d50d: and al, 0x1c; call 0x9d470; add esp, 0x18; pop ebx; ret; 
0x0009cfab: and al, 0x1c; call 0x9d570; add esp, 0x1c; ret; 
0x000a7cec: and al, 0x1c; call 0xa7d00; add esp, 0x1c; ret; 
0x000a8f08: and al, 0x1c; call 0xa8f20; add esp, 0x1c; ret; 
0x000aa8fa: and al, 0x1c; call 0xaa910; add esp, 0x1c; ret; 
0x000aab30: and al, 0x1c; call 0xaabe0; add esp, 0x1c; ret; 
0x000a9989: and al, 0x1c; call 0xad970; add esp, 0x18; pop ebx; ret; 
0x0013904f: and al, 0x1c; call 0xbfd90; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a9899: and al, 0x1c; call 0xbfd90; add esp, 0x18; pop ebx; ret; 
0x000d1c9d: and al, 0x1c; call 0xbfe80; add esp, 0x18; pop ebx; ret; 
0x000a5f17: and al, 0x1c; call 0xbfec0; add esp, 0x18; pop ebx; ret; 
0x000a99e5: and al, 0x1c; call 0xbff10; add esp, 0x18; pop ebx; ret; 
0x000a9935: and al, 0x1c; call 0xc0440; add esp, 0x18; pop ebx; ret; 
0x001395b3: and al, 0x1c; call 0xc21c0; add esp, 0x18; pop ebx; ret; 
0x000c242f: and al, 0x1c; call 0xc2230; add esp, 0x1c; ret; 
0x000c25ec: and al, 0x1c; call 0xc2600; add esp, 0x1c; ret; 
0x00139873: and al, 0x1c; call 0xc3e60; add esp, 0x18; pop ebx; ret; 
0x000c4b00: and al, 0x1c; call 0xc5440; add esp, 0x1c; ret; 
0x000c7e20: and al, 0x1c; call 0xc85e0; add esp, 0x1c; ret; 
0x000cb4f0: and al, 0x1c; call 0xcbde0; add esp, 0x1c; ret; 
0x000cff40: and al, 0x1c; call 0xcff60; add esp, 0x1c; ret; 
0x000d70b4: and al, 0x1c; call 0xd1c40; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d8d87: and al, 0x1c; call 0xd7e40; add esp, 0x18; pop ebx; ret; 
0x000e7b5b: and al, 0x1c; call 0xe7b70; add esp, 0x1c; ret; 
0x000e7c1b: and al, 0x1c; call 0xe8090; add esp, 0x1c; ret; 
0x00060431: and al, 0x1c; call dword ptr gs:[0x10]; 
0x000d88cd: and al, 0x1c; lea eax, [esp + 0x104]; mov dword ptr [esp + 0x34], eax; push eax; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0016ae35: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ae70: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x000a9748: and al, 0x1c; mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000e7090: and al, 0x1c; mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0009e3c7: and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x0012a81b: and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012aa78: and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009bc29: and al, 0x1c; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e7bba: and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001271f6: and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0003d615: and al, 0x1c; mov edi, edx; xor edx, edx; mov ecx, edi; mov eax, esi; call dword ptr gs:[0x10]; 
0x00148a32: and al, 0x1c; mov edx, dword ptr [ecx - 0x6e5c4]; add edx, ecx; jmp edx; 
0x000dbd4e: and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4ee: and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0006047d: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x604a8; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x001489bb: and al, 0x1c; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x001488b6: and al, 0x1c; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x001487ed: and al, 0x1c; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x00132ae7: and al, 0x1c; push 0; push 0x2000004; call eax; 
0x000882fd: and al, 0x1c; push dword ptr [eax + 0x38]; call 0x11b5e0; add esp, 0x18; pop ebx; ret; 
0x00138ac8: and al, 0x1c; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x00139528: and al, 0x1c; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x000379bc: and al, 0x1c; push dword ptr [eax]; call 0xbf640; add esp, 0x1c; ret; 
0x001802d7: and al, 0x1c; push dword ptr [ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0014f17b: and al, 0x1c; push dword ptr [edi]; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007ab57: and al, 0x1c; push dword ptr [esi + 0x98]; call eax; 
0x0009a799: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x107f80; add esp, 0x1c; ret; 
0x0010b23b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x10b050; add esp, 0x1c; ret; 
0x000244ec: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x11ffe0; add esp, 0x18; pop ebx; ret; 
0x00127b0c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x127390; add esp, 0x1c; ret; 
0x00135aa8: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x1359a0; add esp, 0x18; pop ebx; ret; 
0x00169f57: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x175610; add esp, 0x1c; ret; 
0x00042281: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x1a5c10; add esp, 0x18; pop ebx; ret; 
0x00034b17: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x34af0; add esp, 0x1c; ret; 
0x0003d1c7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3d150; add esp, 0x1c; ret; 
0x0003e4ca: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x0004640a: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x46d60; add esp, 0x1c; ret; 
0x0004cb6b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x4a260; add esp, 0x1c; ret; 
0x0004d38c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x4dce0; add esp, 0x1c; ret; 
0x00059e9c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x65010; add esp, 0x1c; ret; 
0x00059ebd: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x65310; add esp, 0x1c; ret; 
0x0005a1bc: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x653a0; add esp, 0x1c; ret; 
0x0006c8fb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x712d0; add esp, 0x1c; ret; 
0x0007edcd: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x71590; add esp, 0x1c; ret; 
0x000c0f6c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x71620; add esp, 0x1c; ret; 
0x000785bc: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x78490; add esp, 0x1c; ret; 
0x0007aad7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7a9f0; add esp, 0x1c; ret; 
0x00083cba: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7cdd0; add esp, 0x1c; ret; 
0x00083f27: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x83dd0; add esp, 0x18; pop ebx; ret; 
0x00059cfc: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x83dd0; add esp, 0x1c; ret; 
0x000840b7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x18; pop ebx; ret; 
0x00059dfc: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x1c; ret; 
0x00084567: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x843e0; add esp, 0x18; pop ebx; ret; 
0x0008b584: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x8b4d0; add esp, 0x18; pop ebx; ret; 
0x000a7ce8: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xa7d00; add esp, 0x1c; ret; 
0x000aa8f6: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xaa910; add esp, 0x1c; ret; 
0x000aab2c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xaabe0; add esp, 0x1c; ret; 
0x000a9985: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xad970; add esp, 0x18; pop ebx; ret; 
0x000d1c59: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbfd90; add esp, 0x18; pop ebx; ret; 
0x000d1c99: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbfe80; add esp, 0x18; pop ebx; ret; 
0x001395af: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc21c0; add esp, 0x18; pop ebx; ret; 
0x000c242b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc2230; add esp, 0x1c; ret; 
0x000c25e8: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc2600; add esp, 0x1c; ret; 
0x0013986f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc3e60; add esp, 0x18; pop ebx; ret; 
0x000c7d0b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc5440; add esp, 0x1c; ret; 
0x000c7e1c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc85e0; add esp, 0x1c; ret; 
0x000cb4ec: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xcbde0; add esp, 0x1c; ret; 
0x000e7b57: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xe7b70; add esp, 0x1c; ret; 
0x000e7c17: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xe8090; add esp, 0x1c; ret; 
0x001393d4: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x00139524: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x0009a795: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x107f80; add esp, 0x1c; ret; 
0x0010b237: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10b050; add esp, 0x1c; ret; 
0x00127b27: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x127390; add esp, 0x1c; ret; 
0x0003e4c6: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x0004d388: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4dce0; add esp, 0x1c; ret; 
0x0006c8f7: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x712d0; add esp, 0x1c; ret; 
0x000c1037: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71620; add esp, 0x1c; ret; 
0x000aab28: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xaabe0; add esp, 0x1c; ret; 
0x000c2427: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2230; add esp, 0x1c; ret; 
0x000c7e18: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc85e0; add esp, 0x1c; ret; 
0x000cb4e8: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcbde0; add esp, 0x1c; ret; 
0x00042222: and al, 0x1c; push eax; call 0x1a5bd0; add esp, 0x18; pop ebx; ret; 
0x00173547: and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x0016ae4e: and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0016ae98: and al, 0x1c; push ebx; call dword ptr [eax]; 
0x0017347b: and al, 0x1c; push ebx; call eax; 
0x001688d6: and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0011bef8: and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00174ef9: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x174f08; add esp, 0x2c; ret; 
0x00085b79: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x85b98; add esp, 0x28; pop ebx; ret; 
0x000d8f15: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0xd8f25; add esp, 0x28; pop ebx; ret; 
0x00108c5e: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x108caa; add esp, 0x28; pop ebx; ret; 
0x00108cf1: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x108d42; add esp, 0x28; pop ebx; ret; 
0x00108f4e: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x108f9a; add esp, 0x28; pop ebx; ret; 
0x00126fe1: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x127032; add esp, 0x28; pop ebx; ret; 
0x00127081: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1270d2; add esp, 0x28; pop ebx; ret; 
0x0012ca67: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12ca92; add esp, 0x28; pop ebx; ret; 
0x0012dd27: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12dd52; add esp, 0x28; pop ebx; ret; 
0x001387cc: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x0013996c: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x001499cd: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1499df; movzx eax, ax; add esp, 0x2c; ret; 
0x0014df5d: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x14df6d; add esp, 0x28; pop ebx; ret; 
0x00168e92: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x168ea2; add esp, 0x28; pop ebx; ret; 
0x00171d45: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x171d5f; add esp, 0x28; pop ebx; ret; 
0x00171de5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x171dff; add esp, 0x28; pop ebx; ret; 
0x001800b4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1800c4; add esp, 0x28; pop ebx; ret; 
0x0018b9e2: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0003c9a7: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3c9ec; add esp, 0x28; pop ebx; ret; 
0x00040231: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x000527e1: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x00090984: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x00095380: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x95390; add esp, 0x28; pop ebx; ret; 
0x0009541e: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9542e; add esp, 0x28; pop ebx; ret; 
0x000966b4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b14: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x00097040: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x00097490: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x0009a41b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a687: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9a6b7; add esp, 0x2c; ret; 
0x0009c55d: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9c56d; add esp, 0x28; pop ebx; ret; 
0x0009dab5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9dac5; add esp, 0x28; pop ebx; ret; 
0x000d7b71: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xd7b8f; add esp, 0x28; pop ebx; ret; 
0x000d917a: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xd91c2; add esp, 0x28; pop ebx; ret; 
0x000e48dd: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xe491a; add esp, 0x28; pop ebx; ret; 
0x000e4acb: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xe4adb; add esp, 0x28; pop ebx; ret; 
0x0009f253: and al, 0x1c; xor eax, eax; mov eax, 0x163; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x000917b8: and al, 0x1c; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0006f177: and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00182a69: and al, 0x20; call 0x1828e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00182aa5: and al, 0x20; call 0x182940; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00182a49: and al, 0x20; call 0x182950; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00124801: and al, 0x20; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0004190c: and al, 0x20; call 0x41830; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a5ee9: and al, 0x20; call 0xbfe10; add esp, 0x18; pop ebx; ret; 
0x0012a828: and al, 0x20; call dword ptr gs:[0x10]; 
0x001688db: and al, 0x20; call eax; 
0x0011dc2a: and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000d8bf7: and al, 0x20; mov dword ptr [esp + 0x24], ebx; push ebp; push dword ptr [esp + 0x34]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0011eb3d: and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120a9c: and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0012056c: and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003d253: and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003c47c: and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011a838: and al, 0x20; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011dbfa: and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00110fbc: and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x00174fee: and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00170362: and al, 0x20; mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0016d804: and al, 0x20; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0012da7b: and al, 0x20; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x18], edi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d8226: and al, 0x20; mov eax, dword ptr [esp + 0x78]; call eax; 
0x00129a81: and al, 0x20; mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0011eb6f: and al, 0x20; mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0003c4a7: and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x001271f2: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012ab0d: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fc9d: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012509d: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012663d: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012915d: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011be3d: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c80d: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d8ad: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011120c: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0012ab3f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003fccf: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001250cf: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0012666f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x0012918f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011be6f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011c83f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0011d8df: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00111237: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00108996: and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e7bc2: and al, 0x20; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00120ac7: and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120597: and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00110fe7: and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00064f01: and al, 0x20; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00064003: and al, 0x20; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x0006380a: and al, 0x20; movzx edx, byte ptr [esi + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x72e94]; jmp eax; 
0x001802bd: and al, 0x20; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00127b58: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x127390; add esp, 0x1c; ret; 
0x001380e8: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x65010; add esp, 0x1c; ret; 
0x00138328: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x712d0; add esp, 0x1c; ret; 
0x00137b58: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x1c; ret; 
0x00138948: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x843e0; add esp, 0x1c; ret; 
0x0017197b: and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00182ed4: and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x001323f7: and al, 0x20; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00171eca: and al, 0x20; push edx; push eax; call edi; 
0x0017577c: and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x0009ddb4: and al, 0x20; test ebx, ebx; js 0x9dde8; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x00060481: and al, 0x20; test edi, edi; je 0x604a8; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000632ba: and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000704d6: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000646e2: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000dd1a6: and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x0017319f: and al, 0x24; add eax, 0x8b000000; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000e809f: and al, 0x24; call 0xe7d70; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000e7bc6: and al, 0x24; call dword ptr gs:[0x10]; 
0x00040f62: and al, 0x24; call eax; 
0x0013c870: and al, 0x24; mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x0008e7bc: and al, 0x24; mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0012d938: and al, 0x24; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cd31: and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012ceac: and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012ab11: and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fca1: and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012da18: and al, 0x24; mov eax, 0x66; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x001250a1: and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00126641: and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00129161: and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011be41: and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c811: and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d8b1: and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00111210: and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x0014f182: and al, 0x24; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0011e88f: and al, 0x24; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00108992: and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012ab43: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003fcd3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001250d3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00126673: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00129193: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011be73: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011c843: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0011d8e3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0011123b: and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000d8bfb: and al, 0x24; push ebp; push dword ptr [esp + 0x34]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0008c8c5: and al, 0x24; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0016d99b: and al, 0x24; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x001473b2: and al, 0x26; add byte ptr [edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x000704f6: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006f629: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0006476a: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00103b89: and al, 0x28; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x00132d09: and al, 0x28; add esp, 0xc; push eax; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00132e02: and al, 0x28; add esp, 0xc; push eax; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0013289a: and al, 0x28; add esp, 0xc; push eax; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0016a63b: and al, 0x28; call dword ptr [eax + 0x18]; 
0x0003fcaa: and al, 0x28; call dword ptr gs:[0x10]; 
0x00040f32: and al, 0x28; call eax; 
0x0011dbf1: and al, 0x28; cmp ecx, 9; je 0x11dc28; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00040f5e: and al, 0x28; mov dword ptr [esp + 0x24], edx; call eax; 
0x0012cdaf: and al, 0x28; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x0012d7d1: and al, 0x28; mov dword ptr [esp + 4], ebx; mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d5c1: and al, 0x28; mov dword ptr [esp + 4], ebx; mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cadb: and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012ab49: and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003fcd9: and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0012d93c: and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129a89: and al, 0x28; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x001250d9: and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00126679: and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00129199: and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011be79: and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001119d1: and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011c849: and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x0011d8e9: and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x00060a1c: and al, 0x28; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00052668: and al, 0x28; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0016fd13: and al, 0x28; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00173000: and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000e809b: and al, 0x28; mov edx, dword ptr [esp + 0x24]; call 0xe7d70; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00128b08: and al, 0x28; mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x128b1b; add esp, 0x3c; ret; 
0x0009b98b: and al, 0x28; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011b801: and al, 0x28; push -0x64; call 0x11b810; add esp, 0x2c; ret; 
0x0006055f: and al, 0x28; push -1; push dword ptr [esp + 0x2c]; call 0x7d3a0; add esp, 0x2c; ret; 
0x0003610f: and al, 0x28; push 0; call 0x360b0; add esp, 0x2c; ret; 
0x000d8222: and al, 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0011b7fd: and al, 0x28; push dword ptr [esp + 0x28]; push -0x64; call 0x11b810; add esp, 0x2c; ret; 
0x0003610b: and al, 0x28; push dword ptr [esp + 0x28]; push 0; call 0x360b0; add esp, 0x2c; ret; 
0x000d8a6d: and al, 0x28; push dword ptr [esp + 0x34]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000d1aa4: and al, 0x28; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x00171968: and al, 0x28; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x00087abe: and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0016d814: and al, 0x28; push esi; call dword ptr [eax + 0xc]; 
0x000dbff9: and al, 0x28; test esi, esi; je 0xdc050; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000fb7b2: and al, 0x29; ret 0x5689; 
0x00183bbb: and al, 0x29; ret; 
0x001722bc: and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + 0x75], -7; call dword ptr [eax + 0x6a]; 
0x000635b9: and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000701ea: and al, 0x2c; and byte ptr [ecx + edx + 1], dh; ret; 
0x001091ab: and al, 0x2c; call 0x10a420; add esp, 0x2c; ret; 
0x0011b7e5: and al, 0x2c; call 0x11b810; add esp, 0x2c; ret; 
0x00120313: and al, 0x2c; call 0x120230; add esp, 0x28; pop ebx; ret; 
0x0012049b: and al, 0x2c; call 0x120320; add esp, 0x28; pop ebx; ret; 
0x00134507: and al, 0x2c; call 0x1342e0; add esp, 0x28; pop ebx; ret; 
0x0013e9ad: and al, 0x2c; call 0x13df10; add esp, 0x2c; ret; 
0x0013eac3: and al, 0x2c; call 0x13e9e0; add esp, 0x2c; ret; 
0x0013f22b: and al, 0x2c; call 0x13ec90; add esp, 0x2c; ret; 
0x0018bc29: and al, 0x2c; call 0x15bba0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0015ca32: and al, 0x2c; call 0x15d2a0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0018bce9: and al, 0x2c; call 0x15e570; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00172895: and al, 0x2c; call 0x1726e0; add esp, 0x2c; ret; 
0x0015cb41: and al, 0x2c; call 0x180100; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00181a6d: and al, 0x2c; call 0x181910; add esp, 0x28; pop ebx; ret; 
0x00034b03: and al, 0x2c; call 0x357c0; add esp, 0x2c; ret; 
0x000360f3: and al, 0x2c; call 0x360b0; add esp, 0x2c; ret; 
0x000410a3: and al, 0x2c; call 0x40c90; add esp, 0x2c; ret; 
0x00042a4a: and al, 0x2c; call 0x42a80; add esp, 0x2c; ret; 
0x0004cc76: and al, 0x2c; call 0x4cd00; add esp, 0x2c; ret; 
0x000509b6: and al, 0x2c; call 0x50a40; add esp, 0x2c; ret; 
0x00051326: and al, 0x2c; call 0x513a0; add esp, 0x2c; ret; 
0x00051996: and al, 0x2c; call 0x51a20; add esp, 0x2c; ret; 
0x0007bc47: and al, 0x2c; call 0x7ba70; add esp, 0x2c; ret; 
0x00060565: and al, 0x2c; call 0x7d3a0; add esp, 0x2c; ret; 
0x0007e503: and al, 0x2c; call 0x7e330; add esp, 0x28; pop ebx; ret; 
0x0007eedf: and al, 0x2c; call 0x7ee10; add esp, 0x28; pop ebx; ret; 
0x0007ed17: and al, 0x2c; call 0x7ee10; add esp, 0x2c; ret; 
0x00060537: and al, 0x2c; call 0x841c0; add esp, 0x2c; ret; 
0x0008a06b: and al, 0x2c; call 0x89f90; add esp, 0x28; pop ebx; ret; 
0x0008f1b1: and al, 0x2c; call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x00092d2f: and al, 0x2c; call 0x92d50; add esp, 0x2c; ret; 
0x0009d543: and al, 0x2c; call 0x9d7e0; add esp, 0x2c; ret; 
0x0009d563: and al, 0x2c; call 0x9da60; add esp, 0x2c; ret; 
0x000c1e31: and al, 0x2c; call 0xc1e40; add esp, 0x2c; ret; 
0x000cade6: and al, 0x2c; call 0xcae60; add esp, 0x2c; ret; 
0x000ce6d6: and al, 0x2c; call 0xce750; add esp, 0x2c; ret; 
0x000cef96: and al, 0x2c; call 0xcf010; add esp, 0x2c; ret; 
0x000cf646: and al, 0x2c; call 0xcf6c0; add esp, 0x2c; ret; 
0x000dcb42: and al, 0x2c; call 0xdcc50; add esp, 0x2c; ret; 
0x000dff24: and al, 0x2c; call 0xe22f0; add esp, 0x2c; ret; 
0x000dff54: and al, 0x2c; call 0xe4770; add esp, 0x2c; ret; 
0x000ed819: and al, 0x2c; call 0xed070; add esp, 0x28; pop ebx; ret; 
0x000ed771: and al, 0x2c; call 0xed6d0; add esp, 0x28; pop ebx; ret; 
0x0015cb4d: and al, 0x2c; call eax; 
0x001259da: and al, 0x2c; lea eax, [ebx - 1]; cmp eax, 2; jbe 0x125a10; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0009dcf1: and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0009e0fc: and al, 0x2c; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0011243c: and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0012b7a4: and al, 0x2c; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000dbee2: and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0009b9c1: and al, 0x2c; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000985a6: and al, 0x2c; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0011e9e4: and al, 0x2c; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0012ba96: and al, 0x2c; push -0x64; call 0x11b810; add esp, 0x20; add esp, 0xc; ret; 
0x00117c60: and al, 0x2c; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x001091a7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x10a420; add esp, 0x2c; ret; 
0x0012030f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x120230; add esp, 0x28; pop ebx; ret; 
0x00120497: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x120320; add esp, 0x28; pop ebx; ret; 
0x00134503: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1342e0; add esp, 0x28; pop ebx; ret; 
0x0013eabf: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x13e9e0; add esp, 0x2c; ret; 
0x0013f227: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x13ec90; add esp, 0x2c; ret; 
0x00172891: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1726e0; add esp, 0x2c; ret; 
0x000360c3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x357c0; add esp, 0x2c; ret; 
0x000360ef: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x360b0; add esp, 0x2c; ret; 
0x0004109f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x40c90; add esp, 0x2c; ret; 
0x00042a46: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x42a80; add esp, 0x2c; ret; 
0x0004cc72: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x4cd00; add esp, 0x2c; ret; 
0x000509b2: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x50a40; add esp, 0x2c; ret; 
0x00051360: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x513a0; add esp, 0x2c; ret; 
0x00051992: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x51a20; add esp, 0x2c; ret; 
0x0007bc43: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7ba70; add esp, 0x2c; ret; 
0x0007e4ff: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7e330; add esp, 0x28; pop ebx; ret; 
0x0007eedb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x28; pop ebx; ret; 
0x0007ed13: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x00060533: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x841c0; add esp, 0x2c; ret; 
0x0008a067: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x89f90; add esp, 0x28; pop ebx; ret; 
0x0008f1ad: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x000986ad: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x92d50; add esp, 0x2c; ret; 
0x0009d53f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x9d7e0; add esp, 0x2c; ret; 
0x0009d55f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x9da60; add esp, 0x2c; ret; 
0x000cae20: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xcae60; add esp, 0x2c; ret; 
0x000ce710: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xce750; add esp, 0x2c; ret; 
0x000cefd0: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xcf010; add esp, 0x2c; ret; 
0x000cf680: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xcf6c0; add esp, 0x2c; ret; 
0x000dcb3e: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xdcc50; add esp, 0x2c; ret; 
0x000dff50: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xe4770; add esp, 0x2c; ret; 
0x000ed815: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xed070; add esp, 0x28; pop ebx; ret; 
0x000ed76d: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xed6d0; add esp, 0x28; pop ebx; ret; 
0x001091a3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10a420; add esp, 0x2c; ret; 
0x0013eabb: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13e9e0; add esp, 0x2c; ret; 
0x0013f223: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13ec90; add esp, 0x2c; ret; 
0x0017288d: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1726e0; add esp, 0x2c; ret; 
0x000360bf: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x357c0; add esp, 0x2c; ret; 
0x000360eb: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x360b0; add esp, 0x2c; ret; 
0x0004109b: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x40c90; add esp, 0x2c; ret; 
0x00045d03: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x42a80; add esp, 0x2c; ret; 
0x0004cc6e: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4cd00; add esp, 0x2c; ret; 
0x000509ae: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x50a40; add esp, 0x2c; ret; 
0x0005135c: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x513a0; add esp, 0x2c; ret; 
0x0005198e: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x51a20; add esp, 0x2c; ret; 
0x0007bc3f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7ba70; add esp, 0x2c; ret; 
0x0007ed0f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x0009d53b: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9d7e0; add esp, 0x2c; ret; 
0x000cae1c: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcae60; add esp, 0x2c; ret; 
0x000ce70c: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xce750; add esp, 0x2c; ret; 
0x000cefcc: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcf010; add esp, 0x2c; ret; 
0x000cf67c: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcf6c0; add esp, 0x2c; ret; 
0x000dcb3a: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdcc50; add esp, 0x2c; ret; 
0x000dff4c: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe4770; add esp, 0x2c; ret; 
0x000c40c9: and al, 0x2c; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c1cf9: and al, 0x2c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0008c422: and al, 0x2c; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0013e9a8: and al, 0x2c; push eax; push dword ptr [esp + 0x2c]; call 0x13df10; add esp, 0x2c; ret; 
0x0008825b: and al, 0x2c; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x001727af: and al, 0x2c; push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x00098759: and al, 0x2c; push edx; call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x0008c73d: and al, 0x2c; push edx; push ecx; push edi; call eax; 
0x0011d599: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x11d5a9; add esp, 0x38; pop ebx; ret; 
0x0011d609: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x11d619; add esp, 0x38; pop ebx; ret; 
0x00120c3e: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x120c4e; add esp, 0x38; pop ebx; ret; 
0x00128b0c: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x128b1b; add esp, 0x3c; ret; 
0x0009a1ad: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x9a1ff; add esp, 0x38; pop ebx; ret; 
0x0009e015: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x9e025; add esp, 0x38; pop ebx; ret; 
0x000d7c3f: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xd7c4f; add esp, 0x38; pop ebx; ret; 
0x000d94ee: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xd9510; add esp, 0x38; pop ebx; ret; 
0x00175c85: and al, 0x2e; lea esi, [esi]; nop; mov eax, 1; ret; 
0x0006ee5d: and al, 0x30; add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x00070506: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006f129: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0003b6a5: and al, 0x30; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x00129ae3: and al, 0x30; call 0x129a40; add esp, 0x2c; ret; 
0x00079390: and al, 0x30; cmp ebx, 0x2e; ja 0x793c0; mov edi, dword ptr [ebp + ebx*4 - 0x71910]; add edi, ebp; jmp edi; 
0x001549ec: and al, 0x30; lea eax, [esp + 0x48]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0007abb0: and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000dbd56: and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d4fe: and al, 0x30; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011b8b7: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9ad: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x000985b1: and al, 0x30; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012cc8d: and al, 0x30; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cdb3: and al, 0x30; mov eax, 0x66; mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x0012706a: and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00126fca: and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00108cda: and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00108e6f: and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00108dbf: and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00108f37: and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00108c47: and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00111bd6: and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00063806: and al, 0x30; mov ecx, dword ptr [esp + 0x20]; movzx edx, byte ptr [esi + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x72e94]; jmp eax; 
0x001254f7: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125d97: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f8377: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f8517: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012a46e: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010b17f: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011bb37: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bc2d: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012b41e: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012b9be: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001254c6: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001251ee: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00125d66: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125a8e: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012d6ee: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f8347: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84e7: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011bb77: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011bc67: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012b4f6: and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e4998: and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00111c0f: and al, 0x30; mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011b60e: and al, 0x30; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0018b8ac: and al, 0x30; mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012eb4d: and al, 0x30; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011b8fc: and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011b9ec: and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00025c69: and al, 0x30; push dword ptr [ebx + 4]; call edi; 
0x000c19a4: and al, 0x30; push dword ptr [edi]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x001569cf: and al, 0x30; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00184e86: and al, 0x30; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c1f50: and al, 0x30; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x001569d3: and al, 0x30; push dword ptr [esp + 0x3c]; call esi; 
0x0008c594: and al, 0x30; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x00138ec6: and al, 0x30; push edx; push dword ptr [esp + 0x2c]; call 0x7d3a0; add esp, 0x2c; ret; 
0x0008c65c: and al, 0x30; push edx; push ecx; call eax; 
0x0016d830: and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x00184e8a: and al, 0x30; push esi; call dword ptr [ebx + 0x40]; 
0x0005a9c5: and al, 0x31; ret; 
0x0012c51b: and al, 0x31; shr byte ptr [edx], 0x8d; xchg esp, esp; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0009dcf5: and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00070576: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006f9e9: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x000d8a03: and al, 0x34; add dword ptr [eax], eax; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00157fee: and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0012de84: and al, 0x34; call dword ptr gs:[0x10]; 
0x0002efa2: and al, 0x34; call eax; 
0x0008b629: and al, 0x34; dec dword ptr [edi]; xchg esp, eax; ret; 
0x0012cd2d: and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0018b8b0: and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012cdbc: and al, 0x34; mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x0012deb8: and al, 0x34; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001254fb: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125d9b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f837b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f851b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012a472: and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010b183: and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011bb3b: and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bc31: and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012b422: and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012b9c2: and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001254ca: and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001251f2: and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00125d6a: and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125a92: and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012d6f2: and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f834b: and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84eb: and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000d8a71: and al, 0x34; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000dbd52: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4f2: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e4994: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011b606: and al, 0x34; mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012a4ab: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012b45b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012b9fb: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012d72b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00172f90: and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0011bb7b: and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011bc6b: and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000c2069: and al, 0x34; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x001549f5: and al, 0x34; push dword ptr [esp + 0x40]; call esi; 
0x000c442d: and al, 0x34; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x000825f1: and al, 0x34; push eax; call ebx; 
0x000d88d8: and al, 0x34; push eax; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000d1aa9: and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000c1c41: and al, 0x34; push eax; push ebp; call esi; 
0x00139274: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x00138e84: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x841c0; add esp, 0x2c; ret; 
0x001696ba: and al, 0x34; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x000e41f6: and al, 0x38; add al, 0x8b; je 0xe4220; cmp byte ptr [ecx], ch; ret 0xc889; 
0x000647c2: and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000f8354: and al, 0x38; call dword ptr gs:[0x10]; 
0x0012dd04: and al, 0x38; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cc89: and al, 0x38; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012ca4c: and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d505: and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125503: and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125da3: and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0012cd35: and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012de72: and al, 0x38; mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000f8383: and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f8523: and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0008c28e: and al, 0x38; mov eax, dword ptr [eax + 0x1c]; add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x0011b60a: and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011d725: and al, 0x38; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012eb51: and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011cf54: and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001251fb: and al, 0x38; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012522f: and al, 0x38; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125acf: and al, 0x38; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0009b9bb: and al, 0x38; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010b18c: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010b1c1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012a4b1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012b461: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012ba01: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012d731: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00089dfe: and al, 0x38; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00165389: and al, 0x38; push 2; push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x000c22f0: and al, 0x38; push dword ptr [edx + 8]; call ebx; 
0x000c40cd: and al, 0x38; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0008631a: and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00085f90: and al, 0x38; push ebp; call dword ptr [eax + 0x1c]; 
0x000c1d01: and al, 0x38; push ebp; call esi; 
0x0007e2fd: and al, 0x38; push edi; call dword ptr [eax + 0x1c]; 
0x0017358e: and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000c199f: and al, 0x38; push edx; push dword ptr [esp + 0x30]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00184d19: and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0016d862: and al, 0x38; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000d6c22: and al, 0x39; dec edi; and al, 0x75; js 0xd6c88; pop esi; ret; 
0x00174a28: and al, 0x39; ret 0x3374; 
0x0002a518: and al, 0x39; ret; 
0x00146d60: and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000fb9d7: and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x00137142: and al, 0x39; sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x137140; mov eax, dword ptr [eax + 0x18]; ret; 
0x0009fd8e: and al, 0x3a; add al, 0x74; sub eax, 0x8d04ec83; test dword ptr [eax + 0x52], ecx; stc; call dword ptr [eax + 0x53]; 
0x0006f322: and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00063489: and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x000a445e: and al, 0x3c; add byte ptr [eax], al; add byte ptr [ebx + ebp - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ab997a], cl; call dword ptr [ebx + 0x50]; 
0x00070516: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000646f2: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00063441: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x000e5e54: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [ebx + 0x164248c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009ee35: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3dbbc], cl; or ah, 0x9a; stc; call dword ptr [eax + 0x6a]; 
0x00142da3: and al, 0x3c; call 0x142680; add esp, 0x3c; ret; 
0x0016538f: and al, 0x3c; call 0x1651d0; add esp, 0x3c; ret; 
0x00171753: and al, 0x3c; call 0x171470; add esp, 0x3c; ret; 
0x0010b190: and al, 0x3c; call dword ptr gs:[0x10]; 
0x0008c42b: and al, 0x3c; call eax; 
0x0015a38f: and al, 0x3c; call ecx; 
0x0002f0da: and al, 0x3c; call edi; 
0x001569d7: and al, 0x3c; call esi; 
0x0009e3a5: and al, 0x3c; lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x0012dd0c: and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010b1c5: and al, 0x3c; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012a4b5: and al, 0x3c; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012b465: and al, 0x3c; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012ba05: and al, 0x3c; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012d735: and al, 0x3c; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0002ef9e: and al, 0x3c; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0011cf5c: and al, 0x3c; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012de80: and al, 0x3c; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012b5ef: and al, 0x3c; mov esi, dword ptr [esp + 0x54]; mov ebx, dword ptr [esp + 0x50]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00060a18: and al, 0x3c; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c1cfd: and al, 0x3c; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00142d9f: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x142680; add esp, 0x3c; ret; 
0x001653bd: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x0017174f: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x171470; add esp, 0x3c; ret; 
0x0002f0d6: and al, 0x3c; push dword ptr [esp + 0x3c]; call edi; 
0x0002ef9a: and al, 0x3c; push dword ptr [esp + 0x3c]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00142d9b: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x142680; add esp, 0x3c; ret; 
0x001653b9: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x0017174b: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x171470; add esp, 0x3c; ret; 
0x0008890e: and al, 0x3c; push ebp; call dword ptr [esi + 0x20]; 
0x00171b4e: and al, 0x3c; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0008c598: and al, 0x3c; push ecx; call eax; 
0x0008c426: and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0017300f: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x17301e; add esp, 0x4c; ret; 
0x0017307f: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x17308e; add esp, 0x4c; ret; 
0x001730ef: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1730fe; add esp, 0x4c; ret; 
0x00173152: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x173161; add esp, 0x4c; ret; 
0x001731b2: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1731c1; add esp, 0x4c; ret; 
0x0017321f: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x17322e; add esp, 0x4c; ret; 
0x0017329f: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1732ae; add esp, 0x4c; ret; 
0x0011b1b5: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x11b1c7; movzx eax, al; add esp, 0x4c; ret; 
0x00172f9f: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x172fae; add esp, 0x4c; ret; 
0x000d7ca1: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0xd7cb1; add esp, 0x48; pop ebx; ret; 
0x0006475a: and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00024e8a: and al, 0x40; call dword ptr [ebp]; 
0x00024e2c: and al, 0x40; call ecx; 
0x00024dd5: and al, 0x40; call esi; 
0x000e4cb3: and al, 0x40; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe4d50; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0011e9ec: and al, 0x40; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00153394: and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0012d066: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d88d: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006f935: and al, 0x40; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0008e0a4: and al, 0x40; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0009d91b: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d69b: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009d8a2: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d61c: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0011cf58: and al, 0x40; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001323f3: and al, 0x40; push dword ptr [esp + 0x20]; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00024e86: and al, 0x40; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e28: and al, 0x40; push dword ptr [esp + 0x40]; call ecx; 
0x00024dd1: and al, 0x40; push dword ptr [esp + 0x40]; call esi; 
0x000c0c30: and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00081911: and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000c4431: and al, 0x40; push ebp; call esi; 
0x00168a08: and al, 0x40; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0009d3b7: and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005f76c: and al, 0x44; add al, byte ptr [eax]; add byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax + 0x68]; 
0x0006405b: and al, 0x44; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00064722: and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00159bef: and al, 0x44; call eax; 
0x0008032f: and al, 0x44; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000e3d97: and al, 0x44; dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x0012d895: and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012b258: and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x000e4caf: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe4d50; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0011e9e8: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000c1692: and al, 0x44; push dword ptr [eax]; call edi; 
0x000c22eb: and al, 0x44; push eax; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x0009173a: and al, 0x46; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x0006f7a0: and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00064051: and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x0014b587: and al, 0x48; add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x0014ab66: and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x0014b7af: and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x0016f744: and al, 0x48; call dword ptr [eax + 0x10]; 
0x0016f5ee: and al, 0x48; call dword ptr [eax + 0x14]; 
0x0002846e: and al, 0x48; call eax; 
0x0009d91f: and al, 0x48; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d69f: and al, 0x48; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009d8a6: and al, 0x48; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d620: and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0016999c: and al, 0x48; mov eax, dword ptr [ecx + 0x20]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x0009d96b: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9ab: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009d6eb: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009d72b: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0012df63: and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0007cc5d: and al, 0x48; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x001546e5: and al, 0x48; push dword ptr [esp + 0x10]; call edi; 
0x001546e1: and al, 0x48; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x001549f0: and al, 0x48; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x00169bfc: and al, 0x48; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00064217: and al, 0x4c; add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x00170db0: and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x00043c79: and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8d0f; 
0x00063b17: and al, 0x4c; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x0009d8b1: and al, 0x4c; call dword ptr gs:[0x10]; 
0x00029bec: and al, 0x4c; call eax; 
0x0006f6ef: and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000705f8: and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0009d975: and al, 0x4c; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9b5: and al, 0x4c; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0011ef9e: and al, 0x4c; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0011e815: and al, 0x4c; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00169cc5: and al, 0x4c; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0003c293: and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c33a: and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003711f: and al, 0x50; add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x0006db8d: and al, 0x50; and byte ptr [edi], cl; test byte ptr [ebx], dl; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0006e0b3: and al, 0x50; and byte ptr [edi], cl; test ch, ch; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x0012b5f7: and al, 0x50; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012df67: and al, 0x50; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012dfb8: and al, 0x50; mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00111a2c: and al, 0x50; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00159beb: and al, 0x50; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0012e98e: and al, 0x50; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00111aa7: and al, 0x50; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0003dd79: and al, 0x50; or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0008c8c6: and al, 0x51; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0002c71e: and al, 0x54; call eax; 
0x0002a157: and al, 0x54; call esi; 
0x0011c69e: and al, 0x54; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011c64c: and al, 0x54; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0011c5dd: and al, 0x54; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x0012b5f3: and al, 0x54; mov ebx, dword ptr [esp + 0x50]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011c6e0: and al, 0x54; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000e4f68: and al, 0x54; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e4fff: and al, 0x54; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e4fc9: and al, 0x54; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e4f09: and al, 0x54; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0002a153: and al, 0x54; push dword ptr [esp + 0x54]; call esi; 
0x00029be4: and al, 0x54; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c168d: and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x44]; push dword ptr [eax]; call edi; 
0x000c187d: and al, 0x54; stc; call dword ptr [eax - 0x18]; 
0x000c187d: and al, 0x54; stc; call dword ptr [eax - 0x18]; clc; and al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x000d8bfc: and al, 0x55; push dword ptr [esp + 0x34]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000da775: and al, 0x56; stc; call dword ptr [eax + 0x56]; 
0x001574e5: and al, 0x57; add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000636d2: and al, 0x58; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x0002dafe: and al, 0x58; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000ddfa7: and al, 0x58; or byte ptr [ecx + ecx*4], al; inc esi; adc cl, ch; ret 0xffed; 
0x0002dafa: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0015d107: and al, 0x58; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00028466: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025c64: and al, 0x58; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x0015d10b: and al, 0x58; push esi; call edi; 
0x0008c295: and al, 0x5b; pop esi; jmp eax; 
0x000d95d4: and al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0013595b: and al, 0x5b; pop esi; pop edi; ret; 
0x0003d1ac: and al, 0x5b; pop esi; ret; 
0x00169cca: and al, 0x5c; call eax; 
0x00172f8c: and al, 0x5c; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00029be8: and al, 0x5c; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c71a: and al, 0x5c; mov eax, dword ptr [esp + 0x54]; call eax; 
0x001125e4: and al, 0x5c; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00028462: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002c716: and al, 0x5c; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00028fb7: and al, 0x5c; push dword ptr [esp + 0x64]; call edi; 
0x00150b02: and al, 0x5c; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0010adaa: and al, 0x5c; sub edx, dword ptr gs:[0x14]; jne 0x10ae5b; add esp, 0x68; pop ebx; ret; 
0x0011efa6: and al, 0x60; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000dbede: and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012da7f: and al, 0x60; mov dword ptr [esp + 0x18], edi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d934: and al, 0x60; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017328c: and al, 0x60; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012ada7: and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0016da69: and al, 0x60; mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0002846a: and al, 0x60; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ac52: and al, 0x60; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0012b79c: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012b822: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012b700: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000dbf52: and al, 0x60; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0011d729: and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011d66f: and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00028fb3: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002ac4e: and al, 0x60; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0015461b: and al, 0x64; add al, 0; add byte ptr [ebx - 0x287872e8], cl; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x00028fbb: and al, 0x64; call edi; 
0x0009e0f8: and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012b7a0: and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000c431b: and al, 0x64; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c1c3d: and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0012b826: and al, 0x64; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012b704: and al, 0x64; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0002cf07: and al, 0x64; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0011efa2: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012ada3: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0009e16a: and al, 0x64; mov esi, dword ptr [esp + 8]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009e068: and al, 0x64; mov esi, dword ptr [esp + 8]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x00159be7: and al, 0x64; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002cf03: and al, 0x64; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000a99e8: and al, 0x65; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0008cba4: and al, 0x65; mov dword ptr [0x7c], edx; pop ebx; ret; 
0x0009759b: and al, 0x65; mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0015d5ae: and al, 0x68; add byte ptr [eax + eax], al; add bh, bh; je 0x15d5db; or al, 0x55; call edi; 
0x0012cc85: and al, 0x68; mov dword ptr [esp + 0x38], edi; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129656: and al, 0x68; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0013b9f7: and al, 0x6c; call dword ptr gs:[0x10]; 
0x0002b8cf: and al, 0x6c; call edi; 
0x0011d72d: and al, 0x6c; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00129660: and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0011d673: and al, 0x6c; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0002b8cb: and al, 0x6c; push dword ptr [esp + 0x6c]; call edi; 
0x00029bdf: and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002daf5: and al, 0x6c; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c711: and al, 0x6c; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0005e80c: and al, 0x6c; sub eax, dword ptr gs:[0x14]; jne 0x5e82e; add esp, 0x78; pop ebx; ret; 
0x0010fe23: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x10fe46; add esp, 0x78; pop ebx; ret; 
0x0012de2f: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x12de3e; add esp, 0x7c; ret; 
0x000606fe: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x6070e; add esp, 0x78; pop ebx; ret; 
0x000edbe3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xedc06; add esp, 0x78; pop ebx; ret; 
0x000f0693: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf06b6; add esp, 0x78; pop ebx; ret; 
0x000f1463: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf1486; add esp, 0x78; pop ebx; ret; 
0x000f3f03: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf3f26; add esp, 0x78; pop ebx; ret; 
0x000f4ce3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf4d06; add esp, 0x78; pop ebx; ret; 
0x0011e81d: and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001125ec: and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0002a14e: and al, 0x70; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x001407fd: and al, 0x74; and byte ptr [edi], cl; test dword ptr [0x89fffffe], ebp; ret 0xf883; 
0x0011e893: and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001125e8: and al, 0x74; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00168d18: and al, 0x74; push eax; call dword ptr [ecx]; 
0x0003d5ac: and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000d6c25: and al, 0x75; js 0xd6c88; pop esi; ret; 
0x000d822a: and al, 0x78; call eax; 
0x0011e819: and al, 0x78; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0002f0d1: and al, 0x78; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x000cda2c: and al, 0x7c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0004866c: and al, 0x80; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0004794c: and al, 0x80; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x00158bf0: and al, 0x80; add byte ptr [eax], al; add byte ptr [ebp + 0x41880fd2], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x000335e0: and al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001121d3: and al, 0x81; les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001416da: and al, 0x81; les ebx, ptr [esp + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000624a3: and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0013eb58: and al, 0x83; in al, dx; add al, 0x8d; test dword ptr [ebp + 0x40], ecx; stc; call dword ptr [eax - 0x77]; 
0x00168a02: and al, 0x83; in al, dx; or byte ptr [ebp + 0x5540246c], cl; push eax; call dword ptr [ecx + 8]; 
0x0016d844: and al, 0x83; in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x00168a1e: and al, 0x83; in al, dx; or byte ptr [ebx + 0x50552048], cl; call dword ptr [ecx + 8]; 
0x00135fb3: and al, 0x83; in al, dx; or byte ptr [ebx - 1], dl; jae 0x135feb; call eax; 
0x000cde8e: and al, 0x83; jmp dword ptr [eax]; 
0x000e5569: and al, 0x83; jmp dword ptr [ebx + 0x77]; 
0x00039b5b: and al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00108783: and al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002a5cb: and al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00054ea0: and al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00082702: and al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017b8fb: and al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0002ca29: and al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0009e26e: and al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0007c9ed: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00078b2a: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0003ba94: and al, 0x83; les ecx, ptr [eax]; ret; 
0x0003f224: and al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0013a102: and al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00134038: and al, 0x83; les ecx, ptr [ecx + ecx*4]; ret; 
0x0002d41d: and al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0007cc66: and al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000da443: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000412b3: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012c92d: and al, 0x83; les edx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001726ae: and al, 0x83; les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0014479b: and al, 0x83; ret 0x8830; 
0x0016ebc5: and al, 0x83; ret 0x8b18; 
0x00144d9a: and al, 0x83; ret 0x8d01; 
0x0009d493: and al, 0x83; ret; 
0x0012a6aa: and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012a671: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014bdbd: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp - 0x694117d], cl; call dword ptr [eax - 0x73]; 
0x0012e5f8: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx + 3], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000374ed: and al, 0x84; clc; inc dword ptr [ecx]; cli; jmp edx; 
0x0004d606: and al, 0x85; ror byte ptr [edi], cl; xchg ebp, eax; ret 0x950f; 
0x001682c0: and al, 0x88; add al, 0; add byte ptr [ebp - 0x68d6a7d], cl; call dword ptr [eax - 0x18]; 
0x0010afee: and al, 0x88; add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0014aeb7: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0011d1a3: and al, 0x88; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x0013c871: and al, 0x89; adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0008e7bd: and al, 0x89; add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0013a75d: and al, 0x89; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013a0ea: and al, 0x89; call 0x8324a579; ret 0x8d01; 
0x0012c9db: and al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00159d79: and al, 0x89; fisubr dword ptr [ecx]; ret 0xca39; 
0x00111d75: and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x0012d939: and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cd32: and al, 0x89; inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000544da: and al, 0x89; inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0012cead: and al, 0x89; inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100a28: and al, 0x89; jl 0x100a50; adc al, 0xeb; or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x000337e8: and al, 0x89; or al, 0xb0; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x337f9; call eax; 
0x00089372: and al, 0x89; push eax; add al, 0x5b; ret; 
0x00126d80: and al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000594c1: and al, 0x89; ret 0x13eb; 
0x0009de53: and al, 0x89; ret 0x408b; 
0x0011123c: and al, 0x89; ret 0x8b8; 
0x0009350f: and al, 0x89; ret 0xd5e9; 
0x0008f38e: and al, 0x89; ret 0xe183; 
0x0008fadc: and al, 0x89; ret 0xe283; 
0x0002c210: and al, 0x89; ret 0xf229; 
0x0016cdfb: and al, 0x89; ret 0xfeb; 
0x0003527f: and al, 0x89; ret; 
0x0014d8f8: and al, 0x89; sti; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x0003424a: and al, 0x8b; add al, 0x90; ret; 
0x0011df03: and al, 0x8b; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011dff3: and al, 0x8b; dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f9f23: and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x00107376: and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010738b: and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0014f183: and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0015cb4a: and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x0012d502: and al, 0x8b; inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011e890: and al, 0x8b; inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000485a8: and al, 0x8b; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x00108993: and al, 0x8b; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00172ffa: and al, 0x8b; push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0012d237: and al, 0x8b; push esp; and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012d1f9: and al, 0x8b; push esp; and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012d183: and al, 0x8b; push esp; and al, 4; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000342db: and al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x00054dce: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0011224a: and al, 0x8c; add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004fc3a: and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0004e915: and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x0004f609: and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x00061a5d: and al, 0x8d; adc byte ptr [eax - 0x73], 0xf9; call dword ptr [eax - 0x18]; 
0x000dd8b7: and al, 0x8d; and byte ptr [edx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x00138b95: and al, 0x8d; and dword ptr [edi + 0x39], 0xfffffff9; jmp dword ptr [ebp - 0x75]; 
0x00143e0e: and al, 0x8d; cmp dword ptr [edx], 0x50; stc; call dword ptr [eax + 0x56]; 
0x000430ed: and al, 0x8d; inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x000dd81f: and al, 0x8d; sbb byte ptr [ecx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x000921a6: and al, 0x8d; xchg al, ah; xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x000a3ddb: and al, 0x8d; xchg dword ptr [eax - 0x58], esp; stc; call dword ptr [eax - 0x73]; 
0x00091ddd: and al, 0x8d; xchg eax, edx; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x00092140: and al, 0x8d; xchg eax, edx; xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x00092184: and al, 0x8d; xchg eax, esp; xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x0009d2cf: and al, 0x90; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001114cb: and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx + 0x94248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; call dword ptr gs:[0x10]; 
0x00105417: and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x00061612: and al, 0x90; add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x001114d2: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a786: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014798d: and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001115d2: and al, 0x98; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x0006cf02: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x000cc0c8: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c5708: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x000cd6fd: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000485ab: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c6d7d: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0010322c: and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x000984ab: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00173474: and al, 0xa4; add byte ptr [eax], al; add bh, bh; je 0x1734a0; sbb al, 0x53; call eax; 
0x000cd55d: and al, 0xa4; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0015a386: and al, 0xa4; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x001025de: and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x000cd784: and al, 0xa8; add byte ptr [eax], al; add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000ce143: and al, 0xa8; add byte ptr [eax], al; add cl, ch; ret; 
0x001099c6: and al, 0xac; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000c6bdd: and al, 0xac; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0004f53d: and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000990b7: and al, 0xac; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0005d364: and al, 0xac; add byte ptr [eax], al; add dh, dh; ret; 
0x00111792: and al, 0xb0; add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00111737: and al, 0xb0; add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x1c4; call dword ptr gs:[0x10]; 
0x0018b1d2: and al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x00048ca9: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xc639; 
0x000c70bc: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x0009bf2b: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011d8b2: and al, 0xb8; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00111799: and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x0011173e: and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; call dword ptr gs:[0x10]; 
0x0003d24c: and al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d8027: and al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x848b; 
0x0004f5c0: and al, 0xb8; add byte ptr [eax], al; add cl, ch; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x0011c812: and al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fca2: and al, 0xb8; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0008f57e: and al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f5b2: and al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00111211: and al, 0xb8; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011be42: and al, 0xb8; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000903d5: and al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00112435: and al, 0xbc; add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00109bc5: and al, 0xbe; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010bab9: and al, 0xc0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0014e96f: and al, 0xc2; stc; call dword ptr [eax - 0x73]; 
0x00151f8e: and al, 0xc3; stc; call dword ptr [eax - 0x18]; 
0x0012954a: and al, 0xc4; add byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0016b5a8: and al, 0xc7; stc; call dword ptr [eax - 0x73]; 
0x000d1c72: and al, 0xc; add ch, cl; xchg esi, eax; loope 0xd1c77; jmp dword ptr [esi - 0x70]; 
0x00176306: and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x001329a2: and al, 0xc; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x0003fd00: and al, 0xc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0014251b: and al, 0xc; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0003c4d5: and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x00060330: and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0007abcd: and al, 0xc; add esp, 0x1c; ret; 
0x000a605a: and al, 0xc; call 0xa5f40; add esp, 0xc; test eax, eax; jne 0xa6073; ret; 
0x000a46c8: and al, 0xc; call dword ptr [edx]; 
0x0008d675: and al, 0xc; call dword ptr gs:[0x10]; 
0x0012a717: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a730; pop ebx; ret; 
0x0012a977: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a990; pop ebx; ret; 
0x0012bbf7: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12bc10; pop ebx; ret; 
0x0008d675: and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0010afe7: and al, 0xc; cmove esi, ebx; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00042719: and al, 0xc; cmp ecx, eax; sbb ebx, edx; pop ebx; setb al; ret; 
0x000e5ddc: and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0003bc83: and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003b8d9: and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003bcbe: and al, 0xc; fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00175ac9: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00175181: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00092f4e: and al, 0xc; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0018289d: and al, 0xc; mov dword ptr [eax], edx; ret; 
0x0008e784: and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003e85b: and al, 0xc; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x000e496a: and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0011c6e4: and al, 0xc; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0009df42: and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x000e5005: and al, 0xc; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0011c910: and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012b53a: and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00125237: and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125ad7: and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0012d23e: and al, 0xc; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012a9cb: and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000e4ddd: and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e4fcf: and al, 0xc; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0012d200: and al, 0xc; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0008d3f7: and al, 0xc; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012c160: and al, 0xc; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ca50: and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dbf56: and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012c240: and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011b558: and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a9fa: and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0012bb68: and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012a8e8: and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012a678: and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000f82fe: and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001226d0: and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00124000: and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00120610: and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00096943: and al, 0xc; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d452: and al, 0xc; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012bda0: and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000a4612: and al, 0xc; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x0016a5c2: and al, 0xc; mov eax, dword ptr [ebx + ecx*4 - 0x138]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0003b544: and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00181351: and al, 0xc; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0013299e: and al, 0xc; mov eax, dword ptr [esp + 0xc]; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x000603d3: and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012c427: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b787: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d517: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d027: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111337: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c097: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be07: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be67: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111057: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f447: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129257: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf77: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc37: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125057: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd17: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd47: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c067: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b77: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed937: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed907: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f77: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124317: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124027: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124057: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120637: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0009307a: and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0006fc47: and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x726b4]; add ecx, eax; jmp ecx; 
0x0006f3cb: and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x72734]; add ecx, eax; jmp ecx; 
0x00070dc1: and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x72834]; add ecx, eax; jmp ecx; 
0x0011c69a: and al, 0xc; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000930bd: and al, 0xc; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0009075f: and al, 0xc; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0007ab17: and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0012f0d2: and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00098f46: and al, 0xc; mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x98f58; ret; 
0x00097c27: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010898e: and al, 0xc; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003d082: and al, 0xc; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d03a: and al, 0xc; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0009d971: and al, 0xc; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9b1: and al, 0xc; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009d6f1: and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009d731: and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00150536: and al, 0xc; movzx eax, byte ptr [edi]; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x00106fcd: and al, 0xc; movzx edx, byte ptr [ebx + 4]; mov ecx, dword ptr [eax + edx*4 - 0x6f5e8]; add ecx, eax; jmp ecx; 
0x0010ee38: and al, 0xc; movzx edx, dl; mov ecx, dword ptr [esi + edx*4 - 0x6ec98]; add ecx, esi; jmp ecx; 
0x0003b4d2: and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0008bc3a: and al, 0xc; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x000be324: and al, 0xc; pop ebx; pop esi; ret; 
0x001a47a4: and al, 0xc; pop edi; ret; 
0x00132e0a: and al, 0xc; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00024e24: and al, 0xc; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0015d103: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0015d5b6: and al, 0xc; push ebp; call edi; 
0x000e49f5: and al, 0xc; push ebp; push ebx; call eax; 
0x00175af8: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00175acd: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00175185: and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00175130: and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000e4b4f: and al, 0xc; push edx; push ebx; call eax; 
0x001754c8: and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0005ae0e: and al, 0xc; push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0015186f: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x15187e; add esp, 0x1c; ret; 
0x00173780: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x001737c8: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x173804; add esp, 0x1c; ret; 
0x0003a8c0: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3a8d3; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bdaf: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3bdbf; add esp, 0x18; pop ebx; ret; 
0x0003e8a3: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b6: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x000254a4: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x254b3; add esp, 0x1c; ret; 
0x0011eadd: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11eaf3; add esp, 0x1c; ret; 
0x0012105d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12106c; add esp, 0x1c; ret; 
0x00122760: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x00128f83: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0012cb8c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12cbb2; add esp, 0x18; pop ebx; ret; 
0x0012cc0c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12cc32; add esp, 0x18; pop ebx; ret; 
0x0012cec7: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12cef2; add esp, 0x18; pop ebx; ret; 
0x0012db27: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12db52; add esp, 0x18; pop ebx; ret; 
0x0012dc2e: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12dc3d; add esp, 0x1c; ret; 
0x0012dc9c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12dcc2; add esp, 0x18; pop ebx; ret; 
0x00143a29: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x143a44; add esp, 0x18; pop ebx; ret; 
0x00143a71: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x143a80; add esp, 0x1c; ret; 
0x00143ac0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x143acf; add esp, 0x1c; ret; 
0x00145fba: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x0016ebb0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16ec2b; add esp, 0x18; pop ebx; ret; 
0x00171c19: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x171c37; add esp, 0x1c; ret; 
0x00172119: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x172137; add esp, 0x1c; ret; 
0x0017219c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1721b7; add esp, 0x18; pop ebx; ret; 
0x00174f8b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x174ff9; add esp, 0x18; pop ebx; ret; 
0x0017506b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1750d9; add esp, 0x18; pop ebx; ret; 
0x00175322: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x175364; add esp, 0x18; pop ebx; ret; 
0x001753b2: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1753f4; add esp, 0x18; pop ebx; ret; 
0x0017545c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x175483; add esp, 0x18; pop ebx; ret; 
0x001754e4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17551f; add esp, 0x18; pop ebx; ret; 
0x00175578: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1755c4; add esp, 0x18; pop ebx; ret; 
0x00175d62: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x175da4; add esp, 0x18; pop ebx; ret; 
0x00175df2: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x175e34; add esp, 0x18; pop ebx; ret; 
0x00175e82: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x175ec4; add esp, 0x18; pop ebx; ret; 
0x00175f12: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x175f54; add esp, 0x18; pop ebx; ret; 
0x00176579: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17658b; movzx eax, al; add esp, 0x1c; ret; 
0x001765c9: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1765db; movzx eax, al; add esp, 0x1c; ret; 
0x00176623: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x176633; add esp, 0x18; pop ebx; ret; 
0x001766c3: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1766d3; add esp, 0x18; pop ebx; ret; 
0x0017b78e: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17b7c4; add esp, 0x18; pop ebx; ret; 
0x0017d2c1: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17d2e1; add esp, 0x18; pop ebx; ret; 
0x0017d33b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17d359; add esp, 0x18; pop ebx; ret; 
0x00182928: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x182938; add esp, 0x18; pop ebx; ret; 
0x00185690: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x0018b69b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18b6c7; add esp, 0x18; pop ebx; ret; 
0x0003d851: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3d860; add esp, 0x1c; ret; 
0x0003fe76: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x00040083: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x00040333: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b6: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x00041354: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x41394; add esp, 0x18; pop ebx; ret; 
0x00059fff: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5a017; add esp, 0x1c; ret; 
0x0009a8c7: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x9a8f7; add esp, 0x18; pop ebx; ret; 
0x000c35e4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xc3614; add esp, 0x18; pop ebx; ret; 
0x000d7bf5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000e2329: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47a9: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x000ec8d6: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xec8ef; add esp, 0x1c; ret; 
0x000887a3: and al, 0xc; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00175728: and al, 0xc; sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x0012896a: and al, 0xc; test eax, eax; je 0x128974; test edx, edx; jne 0x128978; ret; 
0x0008d6a4: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d6a4: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000920eb: and al, 0xc; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091a79: and al, 0xc; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d44c: and al, 0xc; xor esi, esi; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00184d5f: and al, 0xcc; add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x0005d7ce: and al, 0xd0; add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x0014aa44: and al, 0xd4; add byte ptr [eax], al; add al, ch; ret 0xfe25; 
0x0003bd11: and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003bcc2: and al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000d7ccf: and al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x0003ba91: and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x0007efe3: and al, 0xe0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x00171410: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x000a5053: and al, 0xe4; add byte ptr [eax], al; add byte ptr [ebp - 0x6563b80], cl; call dword ptr [eax + 0x68]; 
0x000fa4c6: and al, 0xe8; aam 0x8c; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011b01b: and al, 0xe8; add byte ptr [eax], al; add byte ptr [ebp - 0x6a5da7a], cl; call dword ptr [eax - 0x18]; 
0x00173901: and al, 0xe8; cdq; clc; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00173ff4: and al, 0xe8; cmpsb byte ptr [esi], byte ptr es:[edi]; int1; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0003251b: and al, 0xe8; jmp ecx; 
0x0016d5d5: and al, 0xe8; lds ebx, ptr [ebx - 0x15]; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000ffa57: and al, 0xe8; mov esp, 0x81000832; ret; 
0x00131f92: and al, 0xe8; or byte ptr [edx], dl; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00170c3f: and al, 0xe8; pop ebx; and eax, 0xc483ffeb; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e5830: and al, 0xe8; push -0x27; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x001830a8: and al, 0xe8; ret 0x12; 
0x000fa1d8: and al, 0xe8; ret 0xf28f; 
0x000396b8: and al, 0xe8; ret 0xfff5; 
0x0016eb82: and al, 0xe8; sbb byte ptr [esi - 0x15], al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0014060d: and al, 0xe8; xchg ebp, eax; sub ebp, esi; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x00107652: and al, 0xe9; ret; 
0x00080732: and al, 0xeb; mov esp, 0x3900768d; ret; 
0x001727a9: and al, 0xf3; call dword ptr [ebp - 0x73]; 
0x0016906b: and al, 0xf3; call dword ptr [edx + 0x6a]; 
0x00169354: and al, 0xf3; jmp dword ptr [ebp - 0x75]; 
0x000a4b8a: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebp - 0x6567f80], cl; call dword ptr [eax + 0x68]; 
0x0004bafd: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x7de9; 
0x0004ae38: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0016483e: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00042dcf: and al, 0xf4; add byte ptr [eax], al; add cl, dl; call 0x21060e5d; ret 0xb60f; 
0x00195c6e: and al, 0xf4; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c1885: and al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x001016b7: and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x0005ee4b: and al, 0xf; mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x0010158a: and al, 0xf; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x000fbe1c: and al, 0xf; mov dh, 0xc0; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x000fbe3e: and al, 0xf; mov dh, 0xd2; add eax, dword ptr [eax + edx*4 - 0x6f760]; jmp eax; 
0x000fbd60: and al, 0xf; mov dh, 0xd2; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x0004ef4c: and al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00157079: and al, 0xf; test byte ptr [eax - 0x7d000000], al; ret 0x8301; 
0x0003f120: and al, 0xf; xchg ebp, eax; ret 0xca21; 
0x000a22c9: and al, 0xf; xchg ebp, eax; ret 0xe383; 
0x001401b4: and al, 0xf; xchg ebp, eax; ret 0xe8c0; 
0x0016d11f: and al, 0xf; xchg edx, eax; ret 0xd689; 
0x000e976f: and al, 0xf; xchg esp, eax; ret 0xd309; 
0x00176ad6: and al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x001669fa: and al, 0xfd; dec dword ptr [ebp + 0x1ce80076]; ret; 
0x00190885: and al, 0xff; inc dword ptr [ecx + 0x43f88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001546de: and al, 0xff; je 0x154706; dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00179a3f: and al, 0xff; je 0x179a67; jo 0x179a6e; ret; 
0x0009d120: and al, 0xff; rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x00045617: and al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x7c83; 
0x0012befe: and al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003c0fc: and al, 1; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000c0a57: and al, 1; add byte ptr [eax], al; ret; 
0x0013ee26: and al, 1; fucomi st(0); ret 0xfca2; 
0x0008922e: and al, 1; ret 0x5689; 
0x00044851: and al, 2; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00090cc5: and al, 2; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b0eb8: and al, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008f782: and al, 2; xor eax, eax; pop ebx; pop edi; ret; 
0x0010195b: and al, 4; add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x00101924: and al, 4; add al, byte ptr [eax]; add byte ptr [edi], cl; sahf; ret 0xd201; 
0x001925a4: and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000791fa: and al, 4; add byte ptr [ecx - 0x7c968b38], cl; jmp dword ptr [eax]; 
0x001762f2: and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000d88d1: and al, 4; add dword ptr [eax], eax; add byte ptr [ecx + 0x50342444], cl; mov eax, dword ptr [esp + 0x78]; call eax; 
0x00044ea6: and al, 4; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x0013cb52: and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0008eab2: and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00085c22: and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x000342f2: and al, 4; and eax, 0x7f; ret; 
0x0013a722: and al, 4; bswap eax; ret; 
0x0009d62b: and al, 4; call dword ptr gs:[0x10]; 
0x00033ab1: and al, 4; call edx; 
0x0008ccdd: and al, 4; cmp dword ptr [eax], 1; je 0x8cce8; ret; 
0x0003b4bc: and al, 4; fabs; test ah, 2; je 0x3b4c7; fchs; ret; 
0x0003b83c: and al, 4; fabs; test ah, 2; je 0x3b847; fchs; ret; 
0x0003b557: and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00054463: and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000544dd: and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0003b786: and al, 4; fscale; fstp st(1); ret; 
0x0003b792: and al, 4; fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x00175ca9: and al, 4; jmp dword ptr [eax + 0x20]; 
0x00175c81: and al, 4; jmp dword ptr [eax + 0x24]; 
0x0017fac1: and al, 4; jmp dword ptr [eax + 0x30]; 
0x0016add1: and al, 4; jmp dword ptr [eax + 4]; 
0x0008cb5b: and al, 4; jmp dword ptr [eax]; 
0x0006f6f3: and al, 4; jmp eax; 
0x000705fc: and al, 4; jmp edx; 
0x000426d3: and al, 4; lea eax, [edx - 1]; xor eax, edx; cmp edx, eax; setle al; ret; 
0x000e4e3d: and al, 4; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000426e2: and al, 4; lea edx, [eax - 1]; xor eax, edx; cmp edx, eax; setb al; ret; 
0x00098612: and al, 4; lock dec dword ptr [eax]; jne 0x98620; xor eax, eax; ret; 
0x001097e8: and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00109810: and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008ebba: and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00097bb2: and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0009b4ad: and al, 4; mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0008eeb2: and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00098652: and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003b54c: and al, 4; mov dword ptr [eax], ecx; ret; 
0x00097bfb: and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008eecb: and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000704c2: and al, 4; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x000704d2: and al, 4; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x000704f2: and al, 4; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00070502: and al, 4; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00070572: and al, 4; mov dword ptr [esp + 0x34], 1; jmp eax; 
0x00070512: and al, 4; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x0006f79c: and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00125233: and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125ad3: and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0012d23a: and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012d1fc: and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x000e4e41: and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0013b9ea: and al, 4; mov dword ptr gs:[ebp], edx; mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x000e4b7d: and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e4a22: and al, 4; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0009d6f5: and al, 4; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0012bf48: and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0003d725: and al, 4; mov eax, 0x135; xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x0012c284: and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012c2c8: and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012a528: and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0012bd74: and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0011bdf8: and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012bf24: and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012d186: and al, 4; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012c2f8: and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x001271c4: and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012c368: and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012c398: and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0008ea66: and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x8ea78; ret; 
0x0012c3c8: and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012c3f4: and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x0009d735: and al, 4; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0012be38: and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012c0c8: and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000e71b4: and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0012c1c8: and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c3e8: and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x001112c4: and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0011f504: and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00108d58: and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0011d4b4: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0011d4b4: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011f6c4: and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00126f78: and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012c2a4: and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00127178: and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00125198: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001116d8: and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012c8fe: and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129284: and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00129124: and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012bc64: and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00127154: and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012c264: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00126cf8: and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010acf4: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0003bc22: and al, 4; mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0012be94: and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ed8b4: and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001116b4: and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012bc88: and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012abb4: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012abb4: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00111ed8: and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000ed964: and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00124638: and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125148: and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00124664: and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00108ba8: and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x001088e8: and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00108914: and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00108934: and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x00108954: and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x001089d2: and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001292a8: and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012bcb8: and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012bce8: and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003ca08: and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00110f04: and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ec938: and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012b1c4: and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012b1a4: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012b1a4: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012c128: and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00111aaf: and al, 4; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011dc2e: and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00126778: and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x00124088: and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00120668: and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00097783: and al, 4; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097690: and al, 4; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ed86: and al, 4; mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000f821d: and al, 4; mov eax, 1; test ecx, ecx; js 0xf8230; ret; 
0x0014d1b2: and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x00176322: and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00033d4c: and al, 4; mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00173f5e: and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008b182: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x00034476: and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0009b52c: and al, 4; mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9b547; ret; 
0x00034486: and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x001828b2: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0014d46c: and al, 4; mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x14d487; ret; 
0x001828d2: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00182952: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00182942: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x001828e2: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009beb2: and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x0010730c: and al, 4; mov eax, dword ptr [eax + 0xb8]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x0011e662: and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00182896: and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00084f62: and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00084f12: and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0009e5ed: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9e600; ret; 
0x0009e67d: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9e690; ret; 
0x0009e62d: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9e640; ret; 
0x000e5b02: and al, 4; mov eax, dword ptr [eax]; ret; 
0x00175f72: and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0012cea8: and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cad7: and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003bbdd: and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003d5c2: and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0012d7d5: and al, 4; mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d5c5: and al, 4; mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006f939: and al, 4; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0008df03: and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0003bb62: and al, 4; mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003d07c: and al, 4; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d034: and al, 4; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00025624: and al, 4; mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x00185557: and al, 4; mov edi, eax; mov eax, ebp; mov edx, ecx; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000a63b3: and al, 4; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x0009005d: and al, 4; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e792: and al, 4; mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0008e6e2: and al, 4; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00093b0c: and al, 4; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008cc5c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc7c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc9c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008ccbc: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00093aec: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00093acc: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x0009e5cc: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x358], edx; ret; 
0x0009e5ac: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x35c], edx; ret; 
0x0009e57c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e52c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4cc: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e4fc: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e65c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x394], edx; ret; 
0x0009e55c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3c34], edx; ret; 
0x00176302: and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00110e92: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001828c2: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008e9b2: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001097d2: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008ae42: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00182882: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f82: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001097c2: and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000391b6: and al, 4; movzx eax, al; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x00084f22: and al, 4; movzx eax, byte ptr [eax]; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00084f42: and al, 4; movzx eax, byte ptr [eax]; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00085c32: and al, 4; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00085c42: and al, 4; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x001096a2: and al, 4; movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0008b192: and al, 4; ret; 
0x0013a733: and al, 4; rol ax, 8; ret; 
0x00182d58: and al, 4; sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x0008c9c2: and al, 4; setae al; ret; 
0x00092376: and al, 4; sete al; movzx eax, al; ret; 
0x0016897e: and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x00088db2: and al, 4; test byte ptr [eax], 0x80; jne 0x88dc0; ret; 
0x00042193: and al, 4; test eax, eax; je 0x4219f; bsr eax, eax; add eax, 1; ret; 
0x000421a2: and al, 4; test eax, eax; je 0x421ae; bsr eax, eax; add eax, 1; ret; 
0x000421b2: and al, 4; test eax, eax; je 0x421be; bsr eax, eax; add eax, 1; ret; 
0x00042203: and al, 4; test eax, eax; je 0x4220f; bsr eax, eax; add eax, 1; ret; 
0x0009805d: and al, 4; test eax, eax; js 0x98070; mov dword ptr [edx + 0x3af4], eax; xor eax, eax; ret; 
0x00096186: and al, 4; test edx, edx; jne 0x96198; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000e4b5e: and al, 4; test edx, edx; jns 0xe4bc8; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0008f314: and al, 4; xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000a6ead: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa6ebd; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a6ecd: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa6edd; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x0012f0c2: and al, 4; xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x12f0d0; ret; 
0x000d6f62: and al, 4; xor eax, eax; mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd6f8a; ret; 
0x00023265: and al, 4; xor edx, edx; mov ebx, 1; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x001731a0: and al, 5; add byte ptr [eax], al; add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x001266f2: and al, 7; adc dword ptr [eax], eax; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000aaa7c: and al, 7; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0004e391: and al, 8; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x0004defd: and al, 8; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x0013cdb6: and al, 8; add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x00084086: and al, 8; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00108542: and al, 8; add cl, byte ptr [edi]; test byte ptr [ebp - 0x7d000000], dh; ret; 
0x0010e30f: and al, 8; add eax, dword ptr [eax + esi*4 - 0x6ede0]; jmp eax; 
0x0010d5e5: and al, 8; add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x0010d406: and al, 8; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x0003be94: and al, 8; call 0x3be10; pop ecx; pop edx; ret; 
0x000603d7: and al, 8; call dword ptr gs:[0x10]; 
0x00110ec7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x110ee0; pop ebx; ret; 
0x00110f37: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x110f50; pop ebx; ret; 
0x001112f7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x111310; pop ebx; ret; 
0x0011b237: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11b250; pop ebx; ret; 
0x0011b747: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11b760; pop ebx; ret; 
0x0011c943: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11c958; pop ebx; ret; 
0x0011cfe7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11d000; pop ebx; ret; 
0x0011d4e3: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11d4f8; pop ebx; ret; 
0x0011d983: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11d998; pop ebx; ret; 
0x0011eda7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11edc0; pop ebx; ret; 
0x0011edf7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11ee10; pop ebx; ret; 
0x00120b47: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120b60; pop ebx; ret; 
0x00127d87: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x127da0; pop ebx; ret; 
0x0012a0d3: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a0e8; pop ebx; ret; 
0x0012b967: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12b980; pop ebx; ret; 
0x000603d7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x603f0; pop ebx; ret; 
0x0009cf73: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9cf88; pop ebx; ret; 
0x000f8307: and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0017fec2: and al, 8; call eax; 
0x000bfe63: and al, 8; cld; pop edi; ret; 
0x0009dade: and al, 8; cmp byte ptr [ebx], 0x2f; jne 0x9db28; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00092372: and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0006f78f: and al, 8; cmp edx, 0x5a; jbe 0x70520; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0003bbe1: and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0007801e: and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00110e96: and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001828c6: and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017674e: and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0008e9b6: and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001097d6: and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008e6b9: and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00120e53: and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0016d570: and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00175ca5: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00175c7d: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016adcd: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016adf5: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0009e16e: and al, 8; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000e4e45: and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0012c42b: and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010b1c9: and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012befb: and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b902: and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011b78b: and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d51b: and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d02b: and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0011c6a2: and al, 8; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00110e32: and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011133b: and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0008eba2: and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x8ebb8; ret; 
0x0009e06c: and al, 8; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0011c6e8: and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0012e992: and al, 8; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00125a12: and al, 8; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012c09b: and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be0b: and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be6b: and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0011105b: and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0fb: and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f44b: and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012925b: and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012cadf: and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012bf7b: and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012debc: and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012dfbc: and al, 8; mov eax, 0x75; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0018b8b4: and al, 8; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012bc3b: and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0012505b: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd1b: and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd4b: and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bdb: and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c06b: and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b7b: and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1fb: and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118cb: and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed93b: and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed90b: and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f7b: and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243eb: and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0012431b: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00111c17: and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012402b: and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0012405b: and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0012063b: and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00097a0d: and al, 8; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e696: and al, 8; mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008ae46: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00182886: and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000960a6: and al, 8; mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00090a96: and al, 8; mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00096066: and al, 8; mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00030f86: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0012ca48: and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003b8d5: and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00173f5a: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00182892: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0012c8f5: and al, 8; mov ebx, 5; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013b403: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013b403: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0012bf44: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012c2c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012a524: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011bdf4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012c2f4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012c364: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012c394: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012c3c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012be34: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012c0c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012c1c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c3e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00108d54: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00126f74: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00127174: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00125194: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001116d4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00126cf4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012bc84: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00111ed4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00124634: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125144: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00108ba4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x001088e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x001292a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012bcb4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012bce4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003ca04: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ec934: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012c124: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00126774: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x00124084: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00120664: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00092ff7: and al, 8; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003b852: and al, 8; mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003c423: and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00094911: and al, 8; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x001818a6: and al, 8; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x1818b0; ret; 
0x001917a8: and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0012eb49: and al, 8; mov ecx, dword ptr [esp + 0x30]; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00097c23: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0008ea62: and al, 8; mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x8ea78; ret; 
0x0008f51f: and al, 8; mov edx, 0x7fffffff; xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008f841: and al, 8; mov edx, 1; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000c2586: and al, 8; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc259a; ret; 
0x001254ff: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125d9f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f837f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f851f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0007abc9: and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0011ead9: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11eaf3; add esp, 0x1c; ret; 
0x0012dc2a: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12dc3d; add esp, 0x1c; ret; 
0x0003d84d: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3d860; add esp, 0x1c; ret; 
0x00059ffb: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5a017; add esp, 0x1c; ret; 
0x00034472: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034482: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003bfcb: and al, 8; mov esp, ecx; jmp edx; 
0x001096a9: and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00114066: and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00115a46: and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00124376: and al, 8; movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x000929d1: and al, 8; not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008eb86: and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0007ab21: and al, 8; pop ebx; jmp eax; 
0x0007fe7e: and al, 8; pop ebx; ret; 
0x000bfe39: and al, 8; pop edi; ret; 
0x000baf04: and al, 8; pop esi; ret; 
0x00040ac5: and al, 8; push dword ptr [esi]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00087dd3: and al, 8; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x00079d94: and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00086624: and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000f4cfd: and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00087dd7: and al, 8; push esi; call dword ptr [ebx + 0x40]; 
0x0016a636: and al, 8; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000408e0: and al, 8; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000344b6: and al, 8; ret; 
0x0013cdac: and al, 8; shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00093c00: and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00098a88: and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001694a6: and al, 8; sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x00028222: and al, 8; test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00128946: and al, 8; test eax, eax; je 0x128950; test edx, edx; jne 0x128958; ret; 
0x00128fb2: and al, 8; test eax, eax; jne 0x128ff0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0008cb50: and al, 8; test edx, edx; je 0x8cb60; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000d92b3: and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0011bdb3: and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000e4923: and al, 8; xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008eb69: and al, 8; xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00093040: and al, 8; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d723: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0008d6e7: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x001927cb: and al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003b49c: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0003bb2a: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001808b0: and al, byte ptr [eax]; add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x0016ab54: and al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00031aec: and al, byte ptr [eax]; add byte ptr [ebx - 0x1d36b], cl; dec dword ptr [ebp - 0x67ce37e]; call dword ptr [eax - 0x73]; 
0x0016a974: and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x000e629d: and al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x00090dc4: and al, byte ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x00193bdc: and al, byte ptr [ebx - 0x167cfb11]; add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x00196cdc: and al, byte ptr [ebx - 0x167cfb12]; add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x00026840: and al, byte ptr [ebx - 0x17adf314]; mov dh, 0x98; adc eax, 0x241c8900; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0012ddad: and al, byte ptr [ebx]; push esi; adc al, 0x29; ret 0xca39; 
0x0003d277: and al, byte ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008318a: and al, byte ptr [edx]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000e1ef3: and al, ch; daa; call 0xc4921ef8; adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x7e9; 
0x000f90f8: and al, ch; ret 0xfc87; 
0x0004190d: and al, ch; sbb eax, 0x83ffffff; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0012a55f: and bh, bh; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00190d0e: and bh, bh; inc dword ptr [ecx + 0x43affc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190c75: and bh, bh; inc dword ptr [ecx + 0x43b98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190a6e: and bh, bh; inc dword ptr [ecx + 0x43d9fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005f6a3: and bh, bh; je 0x5f6cb; sub al, ch; ret; 
0x001176a6: and bh, bh; xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x001829f3: and bh, byte ptr [eax + 4]; add esp, 0xc; ret; 
0x00085c25: and bh, cl; ret; 
0x000fc6ea: and bh, dh; adc bh, dh; push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x001694ba: and bh, dl; cld; jmp dword ptr [esi - 0x70]; 
0x0012ac45: and bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0017a3bc: and bl, ch; sti; call dword ptr [ebp - 0x77]; 
0x0017e9b4: and bl, cl; stc; call dword ptr [eax - 0x73]; 
0x0003a1fe: and byte ptr [eax + 0x3544b60f], dl; dec dword ptr [eax - 0x49f0f5fc]; inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0011eb3e: and byte ptr [eax + 0x36], bh; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00078772: and byte ptr [eax + 0x387729fa], al; movzx edx, dl; mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x000247a1: and byte ptr [eax + 0x69], 0xf9; call dword ptr [eax - 1]; 
0x00120a9d: and byte ptr [eax + 0x76], bh; call dword ptr gs:[0x10]; 
0x0012056d: and byte ptr [eax + 0x94], bh; call dword ptr gs:[0x10]; 
0x0003d254: and byte ptr [eax + 0xb2], bh; call dword ptr gs:[0x10]; 
0x0003c47d: and byte ptr [eax + 0xb3], bh; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011a839: and byte ptr [eax + 0xb7], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011dbfb: and byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x00110fbd: and byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x000254cb: and byte ptr [eax + eax + 0x3650000], 5; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000e61c1: and byte ptr [eax + eax - 0x389b0000], 0; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x001929c4: and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005a77c: and byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dl; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x00077a15: and byte ptr [eax - 0x73], dl; xchg byte ptr [esi + ecx*4 - 7], bl; call dword ptr [eax - 0x18]; 
0x00077a15: and byte ptr [eax - 0x73], dl; xchg byte ptr [esi + ecx*4 - 7], bl; call dword ptr [eax - 0x18]; pop ebp; ret; 
0x00093b11: and byte ptr [eax - 0x76fffffe], 0x10; ret; 
0x00129659: and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0017fab6: and byte ptr [eax - 0x7afffffd], 0xc0; je 0x17fad0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0004e06b: and byte ptr [eax - 0x7bf0cf05], al; ret; 
0x0016623e: and byte ptr [eax - 1], dl; je 0x166267; sbb bh, bh; je 0x16626b; sbb byte ptr [esi - 0x18], dl; ret 0xfebc; 
0x000dc104: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3e8c8a], cl; add byte ptr [ebp - 0x15f1136e], cl; call dword ptr [ecx + 0x52]; 
0x000428df: and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000f7e34: and byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000f7de7: and byte ptr [eax], al; add byte ptr [eax], al; cmp dword ptr gs:[edx], 0x26; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000f7e47: and byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x0004230e: and byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x00145f55: and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013502a: and byte ptr [eax], al; add byte ptr [ebx - 0xaff33c], al; jne 0x134fd8; push ebx; call dword ptr [esi + 0x14]; 
0x00130cd8: and byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00140607: and byte ptr [eax], al; add byte ptr [ecx - 0x17dbdba4], cl; xchg ebp, eax; sub ebp, esi; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x00170a16: and byte ptr [eax], al; add byte ptr [ecx - 0x7c72af3b], cl; xor dword ptr [ecx + edi*8 - 1], 0x8d50056a; xor dword ptr [esp + eax*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00100e19: and byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x0010a890: and byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x25e9; 
0x0002f388: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00032928: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x000344e8: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x00034508: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x000344c8: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x00033d48: and byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x001a2947: and byte ptr [ebp + 0x46], dh; test dh, 0x40; jne 0x1a2994; add eax, 0xf; ret; 
0x0005d93f: and byte ptr [ebp + 0x50850fc9], al; add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x00168a24: and byte ptr [ebp + 0x50], dl; call dword ptr [ecx + 8]; 
0x00050078: and byte ptr [ebp + 0x5e840fc0], al; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x001a2907: and byte ptr [ebp + 0x66], dh; test dl, 0x40; jne 0x1a2974; add eax, 7; ret; 
0x0017140d: and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x001472a8: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [eax + 0xf10244c], 0x94; ret 0xa3c; 
0x00147478: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6c1a87b], cl; call dword ptr [eax + 0x53]; 
0x0017560c: and byte ptr [ebp - 0x17a8ff8a], cl; call esi; 
0x00029633: and byte ptr [ebp - 0x297af013], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x00120f27: and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x0016adfc: and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0011dc2b: and byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0008caf3: and byte ptr [ebp - 0x5d], ah; jl 0x8caf8; add byte ptr [eax], al; ret; 
0x000375d2: and byte ptr [ebp - 0x5fe0008], al; jmp edx; 
0x00154c16: and byte ptr [ebp - 0x63c6b80], cl; call dword ptr [eax - 0x18]; 
0x00134232: and byte ptr [ebp - 0x6470379], cl; call dword ptr [eax - 0x73]; 
0x0013420f: and byte ptr [ebp - 0x6470f79], cl; call dword ptr [eax - 0x73]; 
0x000a037c: and byte ptr [ebp - 0x6609b80], cl; call dword ptr [eax - 0x18]; 
0x00024954: and byte ptr [ebp - 0x68c1180], cl; call dword ptr [eax - 0x18]; 
0x0015467d: and byte ptr [ebp - 0x6913180], cl; call dword ptr [eax + 0x55]; 
0x00154642: and byte ptr [ebp - 0x6913a80], cl; call dword ptr [eax + 0x55]; 
0x00142833: and byte ptr [ebp - 0x695c07d], cl; call dword ptr [eax + 0x51]; 
0x00131eea: and byte ptr [ebp - 0x69a9980], cl; call dword ptr [eax - 1]; 
0x0010c6e3: and byte ptr [ebp - 0x6b7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x46b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00154bd7: and byte ptr [ebp - 0x6bad87d], cl; call dword ptr [eax - 0x18]; 
0x00047f21: and byte ptr [ebp - 0x6c07880], cl; call dword ptr [eax + 0x56]; 
0x00047982: and byte ptr [ebp - 0x700b7c7c], cl; clc; call dword ptr [eax + 0x52]; 
0x00026052: and byte ptr [ebp - 0x72118b2e], al; nop; in al, dx; jg 0x26055; call dword ptr [edx - 0x73]; 
0x00026fa7: and byte ptr [ebp - 0x72178b40], al; xchg ah, ch; jg 0x26faa; call dword ptr [eax - 0x73]; 
0x0009e0f1: and byte ptr [ebp - 0x748d8b40], al; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0016921b: and byte ptr [ebp - 0x76c88b40], al; ret; 
0x00152165: and byte ptr [ebp - 0x77], ah; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000b88c7: and byte ptr [ebp - 0x7af0df81], cl; das; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b7224: and byte ptr [ebp - 0x7af0df81], cl; rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00168973: and byte ptr [ebp - 0x7b7bf02e], al; add byte ptr [eax], al; add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00144ef4: and byte ptr [ebp - 0x7cc88740], al; in al, dx; add al, 0x89; ret; 
0x00169245: and byte ptr [ebp - 0x7cc98a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00169076: and byte ptr [ebp - 0x7ce28a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000a69cb: and byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x000cf3ed: and byte ptr [ebp - 0x7d368], cl; call dword ptr [ebx - 1]; 
0x000cf286: and byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 1]; 
0x00161db1: and byte ptr [ebp - 0xd3f6380], cl; call dword ptr [eax - 1]; 
0x0015f5b1: and byte ptr [ebp - 0xd7af380], cl; call dword ptr [eax - 1]; 
0x001598c8: and byte ptr [ebp - 0xe01137a], cl; call dword ptr [eax + 0x6a]; 
0x001590a1: and byte ptr [ebp - 0xe011380], cl; call dword ptr [eax + 0x6a]; 
0x00155361: and byte ptr [ebp - 0xe0ef380], cl; call dword ptr [eax - 1]; 
0x00153371: and byte ptr [ebp - 0xe3dd380], cl; call dword ptr [eax - 1]; 
0x00079302: and byte ptr [ebx + 0x107729f8], al; mov edi, dword ptr [ebp + eax*4 - 0x719b8]; add edi, ebp; jmp edi; 
0x000a0e18: and byte ptr [ebx + 0x1102444], cl; ret 0x4c8b; 
0x0006123b: and byte ptr [ebx + 0x1ba10c4], al; add byte ptr [eax], al; add byte ptr [ebp + 0x290578c9], al; fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x0015d2fb: and byte ptr [ebx + 0x277f01fa], al; add esp, 0x18; pop ebx; ret; 
0x000a45b2: and byte ptr [ebx + 0x28], 0xfe; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00053dbe: and byte ptr [ebx + 0x290c2454], cl; ret; 
0x00144b4b: and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x00087884: and byte ptr [ebx + 0x538b1443], cl; adc byte ptr [ecx], bh; ret 0x2773; 
0x00184bb4: and byte ptr [ebx + 0x568b1446], cl; adc byte ptr [ecx], bh; ret 0x4972; 
0x0007ab6a: and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00059497: and byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x00089bd7: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0004189f: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0011f2d3: and byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00088987: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x0005fcc1: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00173bda: and byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00052c4c: and byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0011f061: and byte ptr [ebx + 0x5e5b54c4], al; ret; 
0x000f9f6a: and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00025551: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012275d: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x00145fb7: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x00170363: and byte ptr [ebx + 0x73ff5043], cl; dec eax; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x001750f7: and byte ptr [ebx + 0x74c08503], cl; jb 0x175130; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x001751e7: and byte ptr [ebx + 0x74c08503], cl; jb 0x175220; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0004ef48: and byte ptr [ebx + 0xf242454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001461f2: and byte ptr [ebx + ebx*8 - 0x77], dh; fisubr dword ptr [ecx]; ret 0x6f8b; 
0x0003e332: and byte ptr [ebx + esi - 0x77], dh; ret 0xc083; 
0x00166c9e: and byte ptr [ebx + esi*2 - 7], 0xff; push eax; push 6; call 0x150d90; add esp, 0x1c; ret; 
0x000c09cf: and byte ptr [ebx + esi*8 - 8], 0xff; add ecx, edx; jmp ecx; 
0x0013693b: and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x0013643f: and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x0010dc7c: and byte ptr [ebx - 0x17cef3c], al; das; ja 0x10d5f0; mov eax, dword ptr [ebx + esi*4 - 0x6eea0]; add eax, ebx; jmp eax; 
0x00150590: and byte ptr [ebx - 0x17e3dba4], cl; push es; cdq; bnd jmp dword ptr [ebp - 0x39]; 
0x0010cf57: and byte ptr [ebx - 0x17e3dbac], cl; jmp edx; 
0x000a0f53: and byte ptr [ebx - 0x17e3dbac], cl; ret; 
0x000a4b9e: and byte ptr [ebx - 0x18], dl; jnp 0xa4b5c; sti; inc dword ptr [ebx - 0x17aceb3c]; add byte ptr [esi], 0xfe; jmp dword ptr [esi - 0x70]; 
0x0012d099: and byte ptr [ebx - 0x2776df3c], al; pop ebx; pop esi; pop edi; ret; 
0x001327c5: and byte ptr [ebx - 0x2a8cfe12], al; add esp, 4; pop ebx; pop esi; ret; 
0x000ad344: and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x000873ec: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x000badf4: and byte ptr [ebx - 0x3f7ccf3a], al; xor al, ch; sub eax, 0x81000c7f; sal dword ptr [ecx + esi*4 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be1b6: and byte ptr [ebx - 0x3f7cef3a], al; adc al, ch; imul ecx, dword ptr [ebx + 0xc], 0; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baeb6: and byte ptr [ebx - 0x3f7cef3a], al; adc al, ch; imul edi, dword ptr [esi + 0xc], 0; add ecx, 0x10b0b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011d8ae: and byte ptr [ebx - 0x47dbdbb4], cl; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c80e: and byte ptr [ebx - 0x47dbdbb4], cl; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fc9e: and byte ptr [ebx - 0x47dbdbb4], cl; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011120d: and byte ptr [ebx - 0x47dbdbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011be3e: and byte ptr [ebx - 0x47dbdbb4], cl; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00096bf5: and byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0011a8fd: and byte ptr [ebx - 0x72cbdbbc], cl; and byte ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x001776e0: and byte ptr [ebx - 0x72d7db84], cl; xchg dword ptr [eax - 0x36], esi; stc; call dword ptr [eax - 0x73]; 
0x001271f3: and byte ptr [ebx - 0x74e3dbb4], cl; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00129a82: and byte ptr [ebx - 0x74e7dba4], cl; jl 0x129aae; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x00027fb0: and byte ptr [ebx - 0x74efdbbc], cl; adc dword ptr [ecx], eax; ret 0xc083; 
0x0002c20c: and byte ptr [ebx - 0x76dbdb84], cl; ret 0xf229; 
0x00111238: and byte ptr [ebx - 0x76dbdbb4], cl; ret 0x8b8; 
0x000a4294: and byte ptr [ebx - 0x77cf740], al; or dword ptr [edi + 0x23], esi; mov ecx, dword ptr [ebx + eax*4 - 0x71254]; add ecx, ebx; jmp ecx; 
0x000557ad: and byte ptr [ebx - 0x7a76f314], al; ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x001280f1: and byte ptr [ebx - 0x7afefbb3], al; sar byte ptr [eax + 0x16], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x000e5565: and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x001319aa: and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00109f98: and byte ptr [ecx + 0x1876fff0], cl; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000a0df2: and byte ptr [ecx + 0x1ca29fa], cl; ret 0x9389; 
0x00111d72: and byte ptr [ecx + 0x4289247a], cl; sub byte ptr [esi + 0x5f], bl; ret; 
0x0007f308: and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0011eb70: and byte ptr [ecx + 0x5409], bh; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d8bf8: and byte ptr [ecx + 0x5524245c], cl; push dword ptr [esp + 0x34]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000d902e: and byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x00108aa6: and byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x00139de5: and byte ptr [ecx + 0x5f5e5bd8], cl; ret 4; 
0x0008c676: and byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0007ad90: and byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00060f37: and byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0017197c: and byte ptr [ecx + 0x6a], dl; push es; push eax; call dword ptr [edx + 0x14]; 
0x00110fe8: and byte ptr [ecx + 0x6b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120ac8: and byte ptr [ecx + 0x76b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120598: and byte ptr [ecx + 0x94b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000838df: and byte ptr [ecx + 0xa486], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00082acf: and byte ptr [ecx + 0xa496], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a730b: and byte ptr [ecx + 0xfd839d6], cl; xchg edx, eax; ret; 
0x000aa22e: and byte ptr [ecx + 0xfe839d1], cl; xchg edx, eax; ret; 
0x0003c4a8: and byte ptr [ecx + 8], bh; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0005a1e9: and byte ptr [ecx + eax], 0; push dword ptr [eax]; call 0x653a0; add esp, 0x1c; ret; 
0x0007eda9: and byte ptr [ecx + eax], 0; push dword ptr [eax]; call 0x71620; add esp, 0x1c; ret; 
0x000701ec: and byte ptr [ecx + edx + 1], dh; ret; 
0x0014349b: and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011e88c: and byte ptr [ecx - 0x74dbdbbc], cl; inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000fee22: and byte ptr [ecx - 0x76f7760e], cl; fsubr st(0); ret 0xff98; 
0x00133cbf: and byte ptr [ecx - 0x7cfe7639], cl; ret 0x8901; 
0x0002cd53: and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x0002aaf3: and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x00029fd3: and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x00173140: and byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x0007234a: and byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x514]; add eax, dword ptr [eax + ebx*4 - 0x72418]; jmp eax; 
0x000e710e: and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000bf175: and byte ptr [ecx], al; ret 0x167c; 
0x0008f4a9: and byte ptr [ecx], al; ret 0xc889; 
0x0006153b: and byte ptr [ecx], al; ret; 
0x0013bd48: and byte ptr [ecx], al; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000d6c0d: and byte ptr [ecx], bh; dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00164cc0: and byte ptr [ecx], bh; ret 0x1074; 
0x00031832: and byte ptr [ecx], bh; ret 0x4c0f; 
0x0005da3a: and byte ptr [ecx], bh; ret 0x830f; 
0x001817ec: and byte ptr [ecx], bh; ret 0xa773; 
0x0006cf0a: and byte ptr [ecx], bh; ret; 
0x00053edc: and byte ptr [ecx], ch; ret; 
0x00081ce7: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x00087d20: and byte ptr [ecx], ch; rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x00086c90: and byte ptr [ecx], cl; ret; 
0x000ebc24: and byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cf81432]; ret; 
0x0005a065: and byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x48b; 
0x00065d06: and byte ptr [edi + 0x24], dh; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72c7c]; jmp eax; 
0x00059f9e: and byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x0016da6f: and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x00170dcc: and byte ptr [edi + 0x50], dl; call dword ptr [edx + 4]; 
0x001323f8: and byte ptr [edi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000b75c7: and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad957: and byte ptr [edi + 0x5e], bl; ret; 
0x0018de01: and byte ptr [edi - 0x18], bl; adc dword ptr [edi - 1], ecx; inc dword ptr [ecx + 0x46788c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e1f1: and byte ptr [edi - 0x18], bl; and dword ptr [ebx - 1], ecx; inc dword ptr [ecx + 0x46398c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190c71: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81ffff20]; ret; 
0x0018ec71: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81ffff40]; ret; 
0x0018e491: and byte ptr [edi - 0x18], bl; or dword ptr [eax - 1], 0xf8c381ff; pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018df51: and byte ptr [edi - 0x18], bl; ror dword ptr [ebp - 1], 0xff; add ebx, 0x46638; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e341: and byte ptr [edi - 0x18], bl; ror dword ptr [ecx - 1], 1; inc dword ptr [ecx + 0x46248c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ff51: and byte ptr [edi - 0x18], bl; shr dword ptr [0xc381ffff], 0xb8; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190491: and byte ptr [edi - 0x18], bl; sub dword ptr [eax], 0xc381ffff; js 0x1904df; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001920e1: and byte ptr [edi - 0x18], bl; xor dword ptr [edi + edi*8], ecx; inc dword ptr [ecx + 0x429a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e5e1: and byte ptr [edi - 0x18], bl; xor dword ptr [edi - 1], eax; inc dword ptr [ecx + 0x45fa8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0006e4b6: and byte ptr [edi - 0x18], dl; ret; 
0x00042080: and byte ptr [edi], cl; inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x00064f02: and byte ptr [edi], cl; mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00064004: and byte ptr [edi], cl; mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x000beeb2: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000a4eae: and byte ptr [edi], cl; nop; ret 0xdb31; 
0x0006db8f: and byte ptr [edi], cl; test byte ptr [ebx], dl; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0006e0b5: and byte ptr [edi], cl; test ch, ch; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x001407ff: and byte ptr [edi], cl; test dword ptr [0x89fffffe], ebp; ret 0xf883; 
0x001a2c1d: and byte ptr [edi], cl; test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1a2cf0; lea eax, [edi + 7]; pop edi; ret; 
0x001a42a9: and byte ptr [edi], cl; test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1a4360; lea eax, [edx + 7]; ret; 
0x001a30e1: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x001a3e91: and byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x001a3134: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x001a3ef4: and byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x00091b64: and byte ptr [edi], cl; test dword ptr [ebx - 0x72000005], ebx; lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x000d6c10: and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000b88ca: and byte ptr [edi], cl; test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x001a46db: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x001a47fb: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x001a2adc: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x000b7227: and byte ptr [edi], cl; test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00109e6f: and byte ptr [edi], cl; test esp, ebp; add eax, dword ptr [eax]; add dh, dh; ret 0xf80; 
0x00071ddd: and byte ptr [edi], cl; xchg dword ptr [esi + eax], esi; add byte ptr [ebx - 0x4ff7b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x7249c], bl; jmp eax; 
0x00107f10: and byte ptr [edx + 0x1c], 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00171ecb: and byte ptr [edx + 0x50], dl; call edi; 
0x000dd8b9: and byte ptr [edx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x0017577d: and byte ptr [edx + 0x56], dl; call dword ptr [eax]; 
0x00091b6d: and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00090ccb: and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0003d557: and byte ptr [edx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000c2064: and byte ptr [edx], ch; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c1f4a: and byte ptr [edx], ch; push edi; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x001688c0: and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x00131eec: and byte ptr [esi + 0x65], 0xf9; call dword ptr [eax - 1]; 
0x0019f31c: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x000bf102: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x001a3b82: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x001572c7: and byte ptr [esi + eax - 0x7b], dh; ret; 
0x0010b4e7: and byte ptr [esi + ebp - 0x7d], dh; ret; 
0x000a481f: and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0xa484d; call eax; 
0x00077a35: and byte ptr [esi - 0x17af0007], cl; inc ecx; ret; 
0x00175cad: and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0011a903: and byte ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x0009f31c: and byte ptr [esi], bh; clc; inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; jbe 0x9f30e; call dword ptr [eax + 0x57]; 
0x0008eee9: and byte ptr [esp + ecx - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a4846: and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x000d6eb2: and ch, 0xf; je 0xd6ed0; add eax, 2; ret; 
0x000d1c28: and ch, 2; lea edx, [edx - 0x15fe54]; cmove eax, edx; ret; 
0x000a7cb8: and ch, 2; lea edx, [edx - 0x176944]; cmove eax, edx; ret; 
0x000a64f8: and ch, 2; lea edx, [edx - 0x177374]; cmove eax, edx; ret; 
0x000a9c18: and ch, 2; lea edx, [edx - 0x177664]; cmove eax, edx; ret; 
0x000a9c58: and ch, 2; lea edx, [edx - 0x1776d4]; cmove eax, edx; ret; 
0x000a6f88: and ch, 2; lea edx, [edx - 0x177754]; cmove eax, edx; ret; 
0x000a6fc8: and ch, 2; lea edx, [edx - 0x1777d4]; cmove eax, edx; ret; 
0x000a9cd8: and ch, 2; lea edx, [edx - 0x189834]; cmove eax, edx; ret; 
0x000f7dc9: and ch, dh; bnd jge 0xf7e00; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf7e40; ret; 
0x000f79fa: and cl, 0x57; stc; call dword ptr [ebx + 0x50]; 
0x000d6e9b: and cl, 0xf; je 0xd6ec0; ret; 
0x0014c36a: and cl, byte ptr [ebx + 0x4b8bfff5]; sbb byte ptr [ebx + 0x478910c4], al; adc al, 0x89; ret 0xc985; 
0x0010b2c8: and cl, byte ptr [ebx - 0x143976f1]; mov ecx, 0xb1d0838d; stc; call dword ptr [eax - 0x73]; 
0x0008123f: and cl, byte ptr [ebx - 0x7d7247ab]; sbb al, 0x93; stc; call dword ptr [eax - 0x73]; 
0x000fbe35: and cl, byte ptr [edi]; xchg dword ptr [edi + edi*8 - 1], esp; dec dword ptr [ebx - 0x49f0dbfc]; rol byte ptr [ebx], cl; test byte ptr [eax - 0x6f760], dl; jmp eax; 
0x00110dd6: and dh, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00084ea4: and dh, ah; stc; jmp dword ptr [esi - 0x70]; 
0x001a0c58: and dh, bh; inc dword ptr [ecx + 0x346f9c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017f2a3: and dh, byte ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x0005f16f: and dh, dh; ret 0xf50; 
0x001919f9: and dl, 0x60; cli; jmp dword ptr [esi - 0x70]; 
0x0017583d: and dl, cl; stc; call dword ptr [eax - 0x73]; 
0x00060486: and dword ptr [eax + 0x161], edi; call dword ptr gs:[0x10]; 
0x0008eab4: and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0008e981: and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00120ee9: and dword ptr [eax + eax - 0x389b0000], 0; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0003b494: and dword ptr [eax + eax - 0x389b0000], 0; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0003bb22: and dword ptr [eax + eax - 0x389b0000], 0; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0019292b: and dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008dcb5: and dword ptr [eax + ecx - 0x7d], esi; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0015736b: and dword ptr [eax - 0x3c], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ec59f: and dword ptr [eax - 0x51], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000a308a: and dword ptr [eax - 0x57], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00099db3: and dword ptr [eax - 0x69], 0xe850fff9; ret 0xf99f; 
0x0013e8ba: and dword ptr [eax - 0x72000645], 0xf9843499; call dword ptr [eax + 0x53]; 
0x0005a760: and dword ptr [eax - 0x73], edx; xchg byte ptr [eax - 0x77], cl; stc; call dword ptr [eax - 0x18]; 
0x00139e13: and dword ptr [eax - 0x73], edx; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x0017ec51: and dword ptr [eax - 0x7cffff56], 0xffffffec; or al, 0x8d; add esp, -0x36; stc; call dword ptr [eax - 0x18]; 
0x00172ba9: and dword ptr [eax - 0x7cffffff], 0xffffffc4; add al, 0x5b; pop esi; ret; 
0x00130f96: and dword ptr [eax], 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x0003315d: and dword ptr [eax], 0x5b; mov eax, edx; ret; 
0x0009618c: and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000961e0: and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x0009ee6c: and dword ptr [eax], 0xffffff9c; stc; call dword ptr [eax + 0x6a]; 
0x0015c9da: and dword ptr [eax], 0xffffffa2; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0017583c: and dword ptr [eax], 0xffffffca; stc; call dword ptr [eax - 0x73]; 
0x00085c24: and dword ptr [eax], 0xffffffcf; ret; 
0x00110ebd: and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0019c80e: and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00069b3f: and dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x00024f48: and dword ptr [eax], eax; lea eax, [eax - 0x680ac]; ret; 
0x00024f68: and dword ptr [eax], eax; lea eax, [eax - 0x680b4]; ret; 
0x00025fb8: and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025fd8: and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000254c8: and dword ptr [eax], eax; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024b38: and dword ptr [eax], eax; mov edx, dword ptr [eax + 0x118]; test edx, edx; je 0x24b45; ret; 
0x00024ef9: and dword ptr [eax], eax; neg eax; mov edx, dword ptr [edx + 0xa4]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0005f947: and dword ptr [ebp + 0x42], 0xfffffff9; call dword ptr [ecx + 0x50]; 
0x000f9c23: and dword ptr [ebp + 0xf002674], ecx; xchg esp, eax; ret; 
0x00093a4d: and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0003f8b8: and dword ptr [ebp - 0x6c3237b], ecx; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x0008d6a8: and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x000e671e: and dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000809c3: and dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0011a792: and dword ptr [ebx + 0x5e5b30c4], eax; pop edi; ret; 
0x0013ea87: and dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x00111e0d: and dword ptr [ebx + 0x5e5b70c4], eax; pop edi; ret; 
0x0009ae26: and dword ptr [ebx + 0x5e], ebx; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0017bd6e: and dword ptr [ebx - 0x15f7b], ecx; jmp dword ptr [ebp - 0x77]; 
0x0012c9d8: and dword ptr [ebx - 0x2776db3c], eax; pop ebx; pop esi; ret; 
0x0018081b: and dword ptr [ebx - 0x3776ef3c], eax; pop ebx; pop esi; pop edi; ret; 
0x0018e1f4: and dword ptr [ebx - 1], ecx; inc dword ptr [ecx + 0x46398c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00139a09: and dword ptr [ebx - 8], 0xffffffff; add esp, 0x18; pop ebx; ret; 
0x0007fe1b: and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0008fb69: and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0015f94f: and dword ptr [ecx + 0x71], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0008d722: and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000ed8ca: and dword ptr [ecx], 0x76; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000da7f7: and dword ptr [edi + 0x39], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x0009275c: and dword ptr [edi + 0x39], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x001221fc: and dword ptr [edi + 0x39], 0xfffffff9; call dword ptr [eax - 0x73]; or ebx, 0x5a; stc; call dword ptr [eax - 0x18]; ret 0xf588; 
0x00138b97: and dword ptr [edi + 0x39], 0xfffffff9; jmp dword ptr [ebp - 0x75]; 
0x000d01bd: and dword ptr [edi + 0x68fff955], 0xffffffc0; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax - 0x56], -7; call dword ptr [eax - 0x18]; 
0x001574ea: and dword ptr [edi + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0016b5a7: and dword ptr [edi + eax*8], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00151428: and dword ptr [edi], 0x45; stc; call dword ptr [eax + 0x52]; 
0x00154bd9: and dword ptr [edi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x00092763: and dword ptr [edi], 0x50; stc; call dword ptr [eax - 0x18]; 
0x0003f9cd: and dword ptr [edi], edi; stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x001723e3: and dword ptr [edx + 0x75], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0008eae3: and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x0008eadc: and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x00182dbc: and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0014e96e: and dword ptr [edx + eax*8], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0003cc14: and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0008bcdb: and dword ptr [edx], eax; add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001a242b: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000bfad9: and dword ptr [esi + 0x10], esp; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00122c99: and dword ptr [esi + 0x5e], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x000da774: and dword ptr [esi + edx*2], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x000ed8cb: and dword ptr [esi - 0xd], esi; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x0005fab4: and dword ptr [esi], 0x42; stc; call dword ptr [ebp + 0x50]; 
0x001184fc: and dword ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x0003e09f: and dword ptr [esi], 0x56; stc; jmp dword ptr [esi - 0x77]; 
0x00142ae2: and dword ptr [esi], 0x6a; stc; call dword ptr [eax + 0x68]; 
0x0007fdc1: and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x000341db: and eax, 0x1000; ret; 
0x0005f727: and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000341ab: and eax, 0x100; ret; 
0x0011e667: and eax, 0x100f; ret; 
0x001a3320: and eax, 0x1f; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a3350: and eax, 0x1ff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a3380: and eax, 0x1fff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0003417b: and eax, 0x2000; ret; 
0x000340cb: and eax, 0x200; ret; 
0x0018c1ed: and eax, 0x300047f; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0008cbfe: and eax, 0x39; cmp eax, 8; je 0x8cc0b; add esp, 8; pop ebx; ret; 
0x0008d54a: and eax, 0x39; cmp eax, 8; je 0x8d557; add esp, 8; pop ebx; ret; 
0x0009866d: and eax, 0x39; cmp eax, 8; je 0x98676; ret; 
0x001a3330: and eax, 0x3f; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a3360: and eax, 0x3ff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a3390: and eax, 0x3fff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0003412b: and eax, 0x4000; ret; 
0x0003404b: and eax, 0x400; ret; 
0x0017f862: and eax, 0x5208ec83; push eax; call dword ptr [ebx + 0x24]; 
0x00085d32: and eax, 0x530cec83; call dword ptr [esi + 0x30]; 
0x00181972: and eax, 0x5b04c483; pop esi; ret; 
0x00151e62: and eax, 0x5b08c483; ret; 
0x000924d2: and eax, 0x5b18c483; ret; 
0x0013b4bd: and eax, 0x5b20c483; pop esi; pop edi; ret; 
0x000ecf39: and eax, 0x6afff9af; add eax, 0x34818d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00160ef4: and eax, 0x71; stc; call dword ptr [eax - 0x18]; 
0x001a3340: and eax, 0x7f; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x000342f4: and eax, 0x7f; ret; 
0x001a3370: and eax, 0x7ff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a33a0: and eax, 0x7fff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0011f625: and eax, 0x80000000; pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x0003b414: and eax, 0x80000000; ret; 
0x000340fb: and eax, 0x8000; ret; 
0x0003409b: and eax, 0x800; ret; 
0x00084f16: and eax, 0x804; ret; 
0x000cfeca: and eax, 0x83240401; ret; 
0x0015d337: and eax, 0x83fff303; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00052787: and eax, 0x85fffffb; ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00143165: and eax, 0x89000001; ret 0xe283; 
0x001aa586: and eax, 0x8bfffffd; dec ebp; mov esp, 0x830fca39; ret; 
0x001907ce: and eax, 0xc381ffff; aas; inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190735: and eax, 0xc381ffff; fadd dword ptr [eax + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007af96: and eax, 0xc4830001; adc cl, ch; mov al, byte ptr [0x89fffffe]; ret; 
0x00170c42: and eax, 0xc483ffeb; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00182e88: and eax, 0xc483ffee; adc byte ptr [ebp - 0x7cf18a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00061071: and eax, 0xcb878d50; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00096162: and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0010bf25: and eax, 0xe8831f8b; add dword ptr [ecx], eax; ret; 
0x000b5a27: and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b1537: and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000960aa: and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001a5c73: and eax, 0xf0f0f0f; add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001a5c00: and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00182b81: and eax, 0xf; cmp al, 0xc; ja 0x24a13; movzx eax, al; add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x001a323a: and eax, 0xf; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a326b: and eax, 0xff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a32a2: and eax, 0xfff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a32db: and eax, 0xffff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0011e6bc: and eax, 0xffffeff0; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0012435a: and eax, 0xfffff000; or eax, edx; ret; 
0x0013d124: and eax, 0xffffff; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0013d108: and eax, 0xffffff; ret; 
0x00082c48: and eax, 0xffffffcf; mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x0009e609: and eax, 0xfffffff0; sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x0013cb57: and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0016a1c8: and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0016a2c4: and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0008fdad: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008f66f: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x00090ad6: and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00090aef: and eax, 0xfffffffe; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00082cea: and eax, 1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000a3e70: and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x001a5449: and eax, 1; je 0x1a53e4; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a550d: and eax, 1; je 0x1a54f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a32f0: and eax, 1; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0008ccf7: and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0008cb9f: and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008d4e7: and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0008e69b: and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001371c7: and eax, 1; pop ebx; ret; 
0x000f8ab9: and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x0003426b: and eax, 1; ret; 
0x00084f2a: and eax, 1; xor eax, 1; ret; 
0x0003407b: and eax, 2; ret; 
0x00052a55: and eax, 2; sub eax, 1; ret; 
0x001a3300: and eax, 3; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0009604d: and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012abef: and eax, 3; ret; 
0x0003415b: and eax, 4; ret; 
0x001a3310: and eax, 7; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0003402b: and eax, 8; ret; 
0x00192704: and eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016a876: and eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0016a8e0: and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0016a8e6: and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0019c5be: and eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00069717: and eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x850f; 
0x00041184: and eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00082623: and eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0016e69a: and eax, dword ptr [ebx + 0x5e5b5cc4]; pop edi; pop ebp; ret; 
0x0016e530: and eax, dword ptr [ebx + 0x5e5b6cc4]; pop edi; pop ebp; ret; 
0x0012cb0e: and eax, dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x0009bf56: and eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0012a87c: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a87c: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0003cc68: and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x000344b4: and eax, dword ptr [esp + 8]; ret; 
0x0003b5ae: and eax, ecx; ret; 
0x000bea7f: and eax, edx; je 0xbeb60; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0003ab5c: and eax, edx; ret; 
0x001a3ff6: and eax, edx; test eax, eax; jne 0x1a3c20; xor eax, eax; ret; 
0x0016a335: and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0007fe1c: and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x00091b62: and ebx, 0x20; jne 0x91706; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00041135: and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00130815: and ebx, 0x400; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0012ddc0: and ebx, 0xfffffffc; add eax, ebx; pop ebx; pop esi; ret; 
0x001282f5: and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x000a6d75: and ebx, 1; lea edx, [edx - 0xa11e4]; cmovne eax, edx; pop ebx; ret; 
0x00138875: and ebx, 1; lea edx, [edx - 0xa11f4]; cmovne eax, edx; pop ebx; ret; 
0x000a6dc5: and ebx, 1; lea edx, [edx - 0xa21d4]; cmovne eax, edx; pop ebx; ret; 
0x001388c5: and ebx, 1; lea edx, [edx - 0xa21e4]; cmovne eax, edx; pop ebx; ret; 
0x000a6545: and ebx, 1; lea edx, [edx - 0xa31b4]; cmovne eax, edx; pop ebx; ret; 
0x00138825: and ebx, 1; lea edx, [edx - 0xa31c4]; cmovne eax, edx; pop ebx; ret; 
0x001308b5: and ebx, 1; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00130945: and ebx, 2; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00130c45: and ebx, 4; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00130785: and ebx, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001a4f9c: and ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00093311: and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00094994: and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0013d0f4: and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0013d3d3: and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0011e713: and ecx, 0xffffeff0; or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x0012c40a: and ecx, 0xffffff8a; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0010ad0a: and ecx, 0xffffffa1; int1; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x000ad2e6: and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x71194]; jmp eax; 
0x000e78d0: and ecx, dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0014fe00: and ecx, dword ptr [ebx + 0x39302444]; ret 0x840f; 
0x0011e8b7: and ecx, dword ptr [ebx + 0xa4bd]; add byte ptr [ecx + 0x5401], bh; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x00037b8a: and ecx, dword ptr [ebx - 0x1cb43]; dec dword ptr [ebp - 0x1ff47379]; call dword ptr [eax + 0x6a]; 
0x0010fa65: and ecx, dword ptr [ebx - 0x72f3db84]; xchg eax, edi; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0005a72e: and ecx, dword ptr [ecx + 0x5e5b044a]; pop edi; ret; 
0x001461d8: and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd184; 
0x00146498: and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd384; 
0x00122deb: and edi, 0x60; stc; call dword ptr [ecx + 0x51]; 
0x0018da9a: and edi, 0xf; je 0x18dab0; call 0x182d19; add ebx, 0x46c6c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018fa9a: and edi, 0xf; je 0x18fab0; call 0x182d19; add ebx, 0x44eec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00191a8c: and edi, 0xf; je 0x191ab0; call 0x182d19; add ebx, 0x4317a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00193ccf: and edi, 0xf; je 0x193cf0; call 0x182d19; add ebx, 0x410f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194caf: and edi, 0xf; je 0x194cd0; call 0x182d19; add ebx, 0x402d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0013cc96: and edi, dword ptr [ecx]; ret 0x4572; 
0x000c3c8c: and edi, dword ptr [ecx]; ret; 
0x000c3ae3: and edi, dword ptr [edx]; stc; jmp dword ptr [ebp - 0x75]; 
0x00190bbe: and edi, edi; inc dword ptr [ecx + 0x43c4fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190b25: and edi, edi; inc dword ptr [ecx + 0x43ce8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001909d5: and edi, edi; inc dword ptr [ecx + 0x43e38c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019091e: and edi, edi; inc dword ptr [ecx + 0x43eefc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00040e11: and edi, esi; dec dword ptr [ebx - 0x76dfdbb4]; ret; 
0x0008fb6a: and edi, esi; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000286a0: and edx, 0x3a; stc; call dword ptr [eax - 0x18]; 
0x0015e5e0: and edx, 0x70; stc; call dword ptr [eax - 0x18]; 
0x0003a909: and edx, 0x7fff0000; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0003bc29: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x00156cde: and edx, 0xf; mov eax, edx; ret; 
0x00124354: and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0008a1d8: and edx, 0xffffffef; mov dword ptr [ebx], edx; pop ebx; pop esi; pop edi; ret; 
0x0009e693: and edx, 0xfffffff0; cmp eax, 0xb; mov eax, 8; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x0016a1c5: and edx, 0xfffffffc; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00096419: and edx, 2; je 0x96428; xor eax, eax; add esp, 0xc; ret; 
0x00182d5d: and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x000bf1b6: and edx, ecx; test edx, edx; je 0xbf190; bsr ecx, edx; add eax, ecx; ret; 
0x00195e71: and edx, esi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00030308: and esi, dword ptr [ecx]; div dh; ret; 
0x0003020c: and esi, dword ptr [ecx]; push esi; ret; 
0x00046444: and esi, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00046458: and esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x00046465: and esi, ecx; mov eax, esi; pop esi; pop edi; ret; 
0x00138659: and esi, edi; inc dword ptr [ebx - 0x3f7aef3c]; je 0x138670; add esp, 8; pop ebx; ret; 
0x000993be: and esi, esp; call dword ptr [eax - 0x73]; 
0x0009936d: and esi, esp; call dword ptr [eax - 1]; 
0x0016fe27: and esp, 0x74; stc; call dword ptr [edi + 0x56]; 
0x00128e7f: and esp, 0xffffffb4; stc; call dword ptr [eax - 0x18]; 
0x00129c8f: and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x0015baac: and esp, dword ptr [ebp - 0x77]; pop ebx; pop esi; pop edi; ret; 
0x0015c9f2: and esp, dword ptr [ebx + 2]; add byte ptr [ecx + 0xda41ec3], al; add byte ptr [ebx - 0x7c72ef14], al; lodsb al, byte ptr [esi]; pop ebx; bnd call dword ptr [eax - 0x73]; 
0x0013ae53: and esp, dword ptr [esi - 0x7d]; jns 0x13ae5a; add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x0014ce72: arpl bp, bp; dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x001a0993: arpl bx, cx; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00122ed9: arpl cx, di; call dword ptr [eax + 0x55]; 
0x00128b77: arpl cx, di; call dword ptr [eax + 0x56]; 
0x00127870: arpl cx, di; call dword ptr [eax + 0x57]; 
0x00127a8a: arpl cx, di; call dword ptr [eax + 0x68]; 
0x0005fad4: arpl cx, di; call dword ptr [eax + 0x6a]; 
0x001261c8: arpl cx, di; call dword ptr [eax - 1]; 
0x00127501: arpl cx, di; call dword ptr [ebx + 0x57]; 
0x0012766b: arpl cx, di; call dword ptr [edi + 0x50]; 
0x00124b2d: arpl cx, di; call dword ptr [edx + 0x50]; 
0x0014d654: arpl cx, si; call dword ptr [esi + 0x50]; 
0x0009d316: arpl si, sp; call dword ptr [eax - 0x73]; 
0x000be813: arpl word ptr [eax + 0x10], di; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0012d4c2: arpl word ptr [eax + 5], bx; add byte ptr [ecx + 0x10994ec5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0018e1fb: arpl word ptr [eax + eax], ax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bfd34: arpl word ptr [eax], dx; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0008c673: arpl word ptr [ebx - 0x2776df3c], ax; pop ebx; pop esi; pop edi; ret; 
0x00126d7d: arpl word ptr [ebx - 0x2f76db3c], ax; pop ebx; pop esi; ret; 
0x0007f804: arpl word ptr [ebx - 0x7f74f314], ax; mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0010d43e: arpl word ptr [ecx - 7], bx; call dword ptr [eax - 0x18]; 
0x0003fcdc: arpl word ptr [ecx], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009f258: arpl word ptr [ecx], ax; add byte ptr [eax], al; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x0003fca4: arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fb77: arpl word ptr [ecx], ax; add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00085dd4: arpl word ptr [ecx], di; ret; 
0x000d6c3c: arpl word ptr [edi + 0x5e], bx; ret; 
0x0003739f: arpl word ptr [edi], cx; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77d2c]; add esi, edi; jmp esi; 
0x0015c9f3: arpl word ptr [edx], ax; add byte ptr [ecx + 0xda41ec3], al; add byte ptr [ebx - 0x7c72ef14], al; lodsb al, byte ptr [esi]; pop ebx; bnd call dword ptr [eax - 0x73]; 
0x0015b9d1: bnd call dword ptr [eax - 0x18]; 
0x0015ca03: bnd call dword ptr [eax - 0x73]; 
0x0015f5b6: bnd call dword ptr [eax - 1]; 
0x00199bf4: bnd call dword ptr [ebx - 0x18]; 
0x0019c104: bnd call dword ptr [ebx - 0x18]; or eax, 0x81fffe6c; ret; 
0x00199bf4: bnd call dword ptr [ebx - 0x18]; sbb eax, 0x81fffe91; ret; 
0x0019c103: bnd call dword ptr ss:[ebx - 0x18]; or eax, 0x81fffe6c; ret; 
0x0010acaa: bnd je 0x10acc0; xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x0009b4fd: bnd je 0x9b513; xor eax, eax; pop ebx; ret; 
0x000a94bc: bnd je 0xa94b0; pop ebx; pop esi; ret; 
0x000f7dcb: bnd jge 0xf7e00; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf7e40; ret; 
0x00150598: bnd jmp dword ptr [ebp - 0x39]; 
0x001729ac: bnd jmp dword ptr [ebp - 0x75]; 
0x00150487: bnd jmp dword ptr [ebp - 0x77]; 
0x0010a86c: bnd jmp dword ptr [esi - 0x70]; 
0x0005aa3c: bnd jmp edx; 
0x000b719a: bound eax, qword ptr [0x5e5f0000]; pop ebx; ret; 
0x001a4a63: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x0018e294: bound eax, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00175bd9: bound eax, qword ptr [ebx + 0x5e5b14c4]; ret; 
0x0005091c: bound eax, qword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0015cbc6: bound eax, qword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x00078419: bound eax, qword ptr [ecx + 0x44cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001a3daa: bound eax, qword ptr [ecx]; add byte ptr [eax], al; add edx, 0; jl 0x1a3fd0; mov eax, ecx; ret; 
0x0014a0ec: bound ebp, qword ptr [ecx]; ret 0x8966; 
0x00107f11: bound ebx, qword ptr [ecx + edi*8]; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000405b1: bound ecx, qword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0012b6fd: bound ecx, qword ptr [ebx - 0x749fdba4]; dec esp; and al, 0x64; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0008eae4: bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x00046d3b: bound edi, qword ptr [edi]; stc; call dword ptr [eax - 0x18]; 
0x001729aa: bound edi, qword ptr [edx]; bnd jmp dword ptr [ebp - 0x75]; 
0x00095f88: bound edx, qword ptr [eax - 0x73]; xchg byte ptr [edi + edx*4], bl; stc; call dword ptr [eax - 0x18]; 
0x000dd8ba: bound edx, qword ptr [esi - 7]; call dword ptr [eax + 0x53]; 
0x001723e4: bound esi, qword ptr [ebp - 7]; call dword ptr [eax + 0x6a]; 
0x000a63b0: bsf eax, dword ptr [esp + 4]; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x000bee60: bsf eax, eax; add eax, edi; pop edi; ret; 
0x000bf44a: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000bf5b0: bsf eax, eax; add eax, edx; ret; 
0x000bee70: bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000bee80: bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bee50: bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bf5c0: bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bf5d0: bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bf5a0: bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000bed9c: bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bf597: bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0004254e: bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000a63e8: bsf eax, eax; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000bee90: bsf eax, eax; sub edx, eax; jbe 0xbeed0; add eax, edi; pop edi; ret; 
0x000beea3: bsf eax, eax; sub edx, eax; jbe 0xbeed0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000beeb3: bsf eax, eax; sub edx, eax; jbe 0xbeed0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000beec3: bsf eax, eax; sub edx, eax; jbe 0xbeed0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000428bb: bsf eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x0004295b: bsf eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x0004292b: bsf eax, ecx; test ecx, ecx; je 0x42938; pop ebx; ret; 
0x000a6400: bsf eax, edx; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000428d9: bsf eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x000bf401: bsf ecx, ecx; add eax, ecx; ret; 
0x000429f1: bsf ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x000bebb9: bsf ecx, ecx; sub edx, ecx; jbe 0xbebf0; add eax, ecx; ret; 
0x00042567: bsf edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x000ad943: bsf edx, edx; add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000ad950: bsf edx, edx; add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000ad95d: bsf edx, edx; add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000ad939: bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x000be132: bsf edx, edx; call 0x182d2d; add ecx, 0x107eba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be114: bsf edx, edx; call 0x182d2d; add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae32: bsf edx, edx; call 0x182d2d; add ecx, 0x10b13a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae14: bsf edx, edx; call 0x182d2d; add ecx, 0x10b158; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8169: bsf edx, edx; call 0x182d2d; add ecx, 0x10dcaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8144: bsf edx, edx; call 0x182d2d; add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b14: bsf edx, edx; call 0x182d2d; add ecx, 0x10f1a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00042199: bsr eax, eax; add eax, 1; ret; 
0x000bf074: bsr eax, eax; add eax, ecx; ret; 
0x000bea05: bsr eax, eax; add eax, edi; pop edi; ret; 
0x000beb53: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000bf120: bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000bf130: bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bf140: bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x000bf180: bsr eax, eax; sub edx, 0x10; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x30]; ret; 
0x000bf170: bsr eax, eax; sub edx, 0x20; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x20]; ret; 
0x000bf160: bsr eax, eax; sub edx, 0x30; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x10]; ret; 
0x000bf150: bsr eax, eax; sub edx, 0x40; add edx, eax; jl 0xbf190; add eax, ecx; ret; 
0x000423d8: bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x0004249d: bsr eax, eax; xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000427f3: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000423bd: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x00042753: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x0004245e: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00042888: bsr eax, edx; pop ebx; xor eax, 0x1f; ret; 
0x00042423: bsr eax, edx; xor eax, 0x1f; add eax, 1; pop ebx; ret; 
0x0004276e: bsr eax, edx; xor eax, 0x1f; ret; 
0x00042878: bsr ebx, ebx; xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x000420f8: bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00041ff9: bsr ecx, ecx; shl eax, cl; ret; 
0x000427bc: bsr ecx, ecx; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x000420e2: bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x000bf1bc: bsr ecx, edx; add eax, ecx; ret; 
0x000424ea: bsr ecx, edx; xor ecx, 0x1f; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000bf214: bsr edi, edi; add eax, edi; pop edi; ret; 
0x000bf251: bsr edi, edi; add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000bf260: bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000421d3: bsr edx, ecx; xor edx, 0x1f; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x0013d12b: bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00170af5: bswap eax; mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x0013a724: bswap eax; ret; 
0x0016afcf: bswap edx; mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00131000: bt eax, ebx; setb dl; mov eax, edx; pop ebx; pop esi; ret; 
0x00057c91: call 0x10057c5f; xchg ebp, eax; ret 0xb60f; 
0x000d4b90: call 0x100d4b5e; xchg ebp, eax; ret 0x9d8b; 
0x00107f4e: call 0x107cd0; test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0009a79f: call 0x107f80; add esp, 0x1c; ret; 
0x000999e3: call 0x108950; mov dword ptr [ebx + 0x2b4], eax; add esp, 0x18; pop ebx; ret; 
0x00108d87: call 0x108d50; add esp, 0x1c; ret; 
0x001091ad: call 0x10a420; add esp, 0x2c; ret; 
0x0010ad61: call 0x10ae60; add esp, 0x1c; ret; 
0x0010b241: call 0x10b050; add esp, 0x1c; ret; 
0x0010ad3b: call 0x10b230; add esp, 0x1c; ret; 
0x0003b60d: call 0x10ed7731; or eax, ecx; ret; 
0x00169995: call 0x110fa0; mov ecx, dword ptr [esp + 0x48]; mov eax, dword ptr [ecx + 0x20]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x0011b1e2: call 0x111700; add esp, 0x1c; ret; 
0x00189549: call 0x111930; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00111b6f: call 0x111b80; add esp, 0x1c; ret; 
0x000e0f05: call 0x111f28d; rol byte ptr [ecx], 1; ret; 
0x00111f28: call 0x112030; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011b68e: call 0x112030; add esp, 0x18; pop ebx; ret; 
0x00111f77: call 0x112200; add esp, 0x10; add esp, 0xc; ret; 
0x0011b6b2: call 0x112200; add esp, 0x1c; ret; 
0x00088302: call 0x11b5e0; add esp, 0x18; pop ebx; ret; 
0x0011b7c3: call 0x11b7f0; add esp, 0x1c; ret; 
0x0012ba9a: call 0x11b810; add esp, 0x20; add esp, 0xc; ret; 
0x0011b7e7: call 0x11b810; add esp, 0x2c; ret; 
0x00059fa4: call 0x11b880; add esp, 0x1c; ret; 
0x001112b0: call 0x11b970; add esp, 0x1c; ret; 
0x0011a6df: call 0x11d620; add esp, 0x10; add esp, 0xc; ret; 
0x00024f2b: call 0x11d890; add esp, 0x1c; ret; 
0x0011f4ca: call 0x11f3f0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0012487f: call 0x11f520; add esp, 0x10; test eax, eax; jne 0x124848; add esp, 0xc; ret; 
0x0011fa2b: call 0x11fd60; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001200b9: call 0x11ff60; add esp, 0x18; pop ebx; ret; 
0x000244f2: call 0x11ffe0; add esp, 0x18; pop ebx; ret; 
0x00120315: call 0x120230; add esp, 0x28; pop ebx; ret; 
0x0012049d: call 0x120320; add esp, 0x28; pop ebx; ret; 
0x00168e40: call 0x121030; mov dword ptr [ebx + 0xa62c], eax; add esp, 8; pop ebx; ret; 
0x00121b23: call 0x121860; test eax, eax; je 0x121b30; add esp, 0xc; ret; 
0x00121b63: call 0x121860; test eax, eax; je 0x121b70; add esp, 0xc; ret; 
0x00121b39: call 0x121a90; mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x001226af: call 0x122300; mov dword ptr [ebx + 0x45a0], eax; add esp, 8; pop ebx; ret; 
0x00122798: call 0x1227e0; add esp, 0x1c; ret; 
0x001227c4: call 0x1228c0; add esp, 0x1c; ret; 
0x0011ec45: call 0x123fa0; add esp, 0x10; add esp, 0xc; ret; 
0x0011eb11: call 0x123fa0; add esp, 0x1c; ret; 
0x00124856: call 0x124f60; add esp, 0x10; add esp, 0xc; ret; 
0x0002fb3d: call 0x125190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0009e8bb: call 0x125190; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001260ff: call 0x126420; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0009ff7a: call 0x1267c0; add esp, 0x10; cmp eax, -1; je 0x9ff90; add esp, 0xc; ret; 
0x00127b12: call 0x127390; add esp, 0x1c; ret; 
0x0002fe9e: call 0x128960; add esp, 0x1c; ret; 
0x00027099: call 0x128980; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00041f63: call 0x128980; mov dword ptr [ebx + 0x1894], 0; add esp, 0x18; pop ebx; ret; 
0x001292d9: call 0x129520; add esp, 0x1c; ret; 
0x00129ae5: call 0x129a40; add esp, 0x2c; ret; 
0x0012b939: call 0x12b950; add esp, 0x1c; ret; 
0x0009e963: call 0x12c5f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0012e511: call 0x12ea80; add esp, 0x1c; ret; 
0x001306ca: call 0x12fae0; pop edx; pop ecx; pop eax; ret; 
0x0013000c: call 0x12fed0; add esp, 4; ret; 
0x0013259e: call 0x132070; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00134509: call 0x1342e0; add esp, 0x28; pop ebx; ret; 
0x0013717e: call 0x135900; add esp, 0x1c; ret; 
0x00135aae: call 0x1359a0; add esp, 0x18; pop ebx; ret; 
0x00135028: call 0x137120; add esp, 0xc; push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x0013381c: call 0x137120; add esp, 0xc; push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00139575: call 0x137ae0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0012614b: call 0x138ea0; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0013a391: call 0x138ea0; add esp, 0x34; mov eax, esi; pop ebx; pop esi; ret; 
0x00174f08: call 0x138ee0; lea esi, [esi]; mov eax, 1; ret; 
0x00182938: call 0x138ee0; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00168696: call 0x138ee0; lea esi, cs:[esi]; ret; 
0x0016a78b: call 0x138ee0; mov eax, 2; ret; 
0x001762e9: call 0x138ee0; nop; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0003b407: call 0x138ee0; nop; nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0016eb34: call 0x138ee0; nop; nop; nop; nop; ret; 
0x00090a56: call 0x138ee0; nop; nop; nop; xor eax, eax; ret; 
0x000985f7: call 0x138ee0; nop; nop; xor eax, eax; ret; 
0x0016f2bb: call 0x138ee0; ret; 
0x0013a018: call 0x13a030; add esp, 0x1c; ret; 
0x0013a338: call 0x13a350; add esp, 0x1c; ret; 
0x0013c582: call 0x13b4f0; cmp eax, -0xb; je 0x13c580; add esp, 8; pop ebx; ret; 
0x0013e9c9: call 0x13dd70; add esp, 0x1c; ret; 
0x0013e9af: call 0x13df10; add esp, 0x2c; ret; 
0x0013eac5: call 0x13e9e0; add esp, 0x2c; ret; 
0x0013f22d: call 0x13ec90; add esp, 0x2c; ret; 
0x00142da5: call 0x142680; add esp, 0x3c; ret; 
0x00143a6a: call 0x1438b0; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x143a80; add esp, 0x1c; ret; 
0x00145769: call 0x145690; add esp, 0x1c; ret; 
0x00147e1b: call 0x147d20; add esp, 0x18; pop ebx; ret; 
0x00163846: call 0x150d90; add esp, 0x1c; ret; 
0x00163855: call 0x150e60; add esp, 0x1c; ret; 
0x000f7588: call 0x1522b9c; add edx, 1; test al, al; jne 0xf755d; xor eax, eax; ret; 
0x0018ba53: call 0x152740; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bab3: call 0x1535b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0013c5df: call 0x1564de5; mov eax, 2; ret; 
0x0018bc2b: call 0x15bba0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0015ca34: call 0x15d2a0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0018bceb: call 0x15e570; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0018bd53: call 0x15ec60; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bdb3: call 0x15f8f0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bed3: call 0x160e90; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bef3: call 0x161180; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bf93: call 0x161ff0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00165391: call 0x1651d0; add esp, 0x3c; ret; 
0x00165df8: call 0x165bb0; add esp, 0x2c; ret; 
0x00168656: call 0x169f00; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0016e2ed: call 0x16b820; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00171755: call 0x171470; add esp, 0x3c; ret; 
0x001724d2: call 0x172220; add esp, 0x10; add esp, 0xc; ret; 
0x001724b7: call 0x172320; add esp, 0x10; add esp, 0xc; ret; 
0x00172897: call 0x1726e0; add esp, 0x2c; ret; 
0x00174871: call 0x1745a0; add esp, 0x1c; ret; 
0x00169f5d: call 0x175610; add esp, 0x1c; ret; 
0x00169f36: call 0x1756e0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00175875: call 0x1756e0; add esp, 0x1c; ret; 
0x00175a7d: call 0x175910; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0008bbee: call 0x17dfa0; add esp, 0x1c; ret; 
0x0017ebc6: call 0x17e9d0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008c6f3: call 0x180010; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x0008c610: call 0x1800d0; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00025e98: call 0x180100; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0015465f: call 0x180100; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x001547e1: call 0x180100; add esp, 0x10; mov eax, ebx; call eax; 
0x0015d817: call 0x180100; mov dword ptr [esp], ebp; call ebx; 
0x0015d479: call 0x180100; mov dword ptr [esp], ebp; call edi; 
0x0015d668: call 0x180100; mov dword ptr [esp], ebp; call esi; 
0x00026f73: call 0x180100; mov dword ptr [esp], ebx; call edi; 
0x00026024: call 0x180100; mov dword ptr [esp], ebx; call esi; 
0x0002619b: call 0x180100; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00026845: call 0x180100; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0002f335: call 0x180100; mov dword ptr [esp], esi; call ebx; 
0x0015cb43: call 0x180100; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00181a6f: call 0x181910; add esp, 0x28; pop ebx; ret; 
0x00182a6b: call 0x1828e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00182aa7: call 0x182940; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00182a4b: call 0x182950; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001a0d1b: call 0x182d19; add ebx, 0x34634; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a0c56: call 0x182d19; add ebx, 0x346f9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f34b: call 0x182d19; add ebx, 0x35f00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f23c: call 0x182d19; add ebx, 0x3600f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c6d: call 0x182d19; add ebx, 0x3e51e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196a69: call 0x182d19; add ebx, 0x3e622; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195f74: call 0x182d19; add ebx, 0x3f117; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195e6a: call 0x182d19; add ebx, 0x3f221; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d63: call 0x182d19; add ebx, 0x3f328; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c67: call 0x182d19; add ebx, 0x3f424; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a59: call 0x182d19; add ebx, 0x3f472; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195cb4: call 0x182d19; add ebx, 0x3f497; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194f74: call 0x182d19; add ebx, 0x3ff57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e6a: call 0x182d19; add ebx, 0x40061; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d63: call 0x182d19; add ebx, 0x40168; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c5a: call 0x182d19; add ebx, 0x40271; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a89: call 0x182d19; add ebx, 0x40282; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194cb4: call 0x182d19; add ebx, 0x402d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194c6a: call 0x182d19; add ebx, 0x40361; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193f94: call 0x182d19; add ebx, 0x40d77; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193e8a: call 0x182d19; add ebx, 0x40e81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d83: call 0x182d19; add ebx, 0x40f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c7a: call 0x182d19; add ebx, 0x41091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193b67: call 0x182d19; add ebx, 0x410e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193cd4: call 0x182d19; add ebx, 0x410f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00193c8a: call 0x182d19; add ebx, 0x41181; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938b3: call 0x182d19; add ebx, 0x411d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019321a: call 0x182d19; add ebx, 0x41871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001931fc: call 0x182d19; add ebx, 0x4188f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193163: call 0x182d19; add ebx, 0x41928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019309c: call 0x182d19; add ebx, 0x419ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193003: call 0x182d19; add ebx, 0x41a88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192f3c: call 0x182d19; add ebx, 0x41b4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192ea3: call 0x182d19; add ebx, 0x41be8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192ddc: call 0x182d19; add ebx, 0x41caf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192d43: call 0x182d19; add ebx, 0x41d48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192c7c: call 0x182d19; add ebx, 0x41e0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192be3: call 0x182d19; add ebx, 0x41ea8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192b1c: call 0x182d19; add ebx, 0x41f6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192a83: call 0x182d19; add ebx, 0x42008; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001929bc: call 0x182d19; add ebx, 0x420cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192923: call 0x182d19; add ebx, 0x42168; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019285c: call 0x182d19; add ebx, 0x4222f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001927c3: call 0x182d19; add ebx, 0x422c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926fc: call 0x182d19; add ebx, 0x4238f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192663: call 0x182d19; add ebx, 0x42428; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019259c: call 0x182d19; add ebx, 0x424ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192503: call 0x182d19; add ebx, 0x42588; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019243c: call 0x182d19; add ebx, 0x4264f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001923a3: call 0x182d19; add ebx, 0x426e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001922dc: call 0x182d19; add ebx, 0x427af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192243: call 0x182d19; add ebx, 0x42848; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019217c: call 0x182d19; add ebx, 0x4290f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001920e3: call 0x182d19; add ebx, 0x429a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019201c: call 0x182d19; add ebx, 0x42a6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191f83: call 0x182d19; add ebx, 0x42b08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191ebc: call 0x182d19; add ebx, 0x42bcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191e23: call 0x182d19; add ebx, 0x42c68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191d5b: call 0x182d19; add ebx, 0x42df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191c56: call 0x182d19; add ebx, 0x42e35; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191b50: call 0x182d19; add ebx, 0x42ffb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191a47: call 0x182d19; add ebx, 0x43044; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191753: call 0x182d19; add ebx, 0x430b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191a91: call 0x182d19; add ebx, 0x4317a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019111a: call 0x182d19; add ebx, 0x436f1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001910fc: call 0x182d19; add ebx, 0x4370f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191063: call 0x182d19; add ebx, 0x437a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190fac: call 0x182d19; add ebx, 0x4385f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190f13: call 0x182d19; add ebx, 0x438f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190e5c: call 0x182d19; add ebx, 0x439af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190dc3: call 0x182d19; add ebx, 0x43a48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190d0c: call 0x182d19; add ebx, 0x43aff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190c73: call 0x182d19; add ebx, 0x43b98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190bbc: call 0x182d19; add ebx, 0x43c4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190b23: call 0x182d19; add ebx, 0x43ce8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190a6c: call 0x182d19; add ebx, 0x43d9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001909d3: call 0x182d19; add ebx, 0x43e38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019091c: call 0x182d19; add ebx, 0x43eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190883: call 0x182d19; add ebx, 0x43f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190733: call 0x182d19; add ebx, 0x440d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019067c: call 0x182d19; add ebx, 0x4418f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001905e3: call 0x182d19; add ebx, 0x44228; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019052c: call 0x182d19; add ebx, 0x442df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190493: call 0x182d19; add ebx, 0x44378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903dc: call 0x182d19; add ebx, 0x4442f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190343: call 0x182d19; add ebx, 0x444c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019028c: call 0x182d19; add ebx, 0x4457f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901f3: call 0x182d19; add ebx, 0x44618; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019013c: call 0x182d19; add ebx, 0x446cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001900a3: call 0x182d19; add ebx, 0x44768; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ffec: call 0x182d19; add ebx, 0x4481f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ff53: call 0x182d19; add ebx, 0x448b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fe9c: call 0x182d19; add ebx, 0x4496f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fe03: call 0x182d19; add ebx, 0x44a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fd4b: call 0x182d19; add ebx, 0x44b80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fc46: call 0x182d19; add ebx, 0x44bc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fb40: call 0x182d19; add ebx, 0x44d8b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fa3a: call 0x182d19; add ebx, 0x44dd1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f7b3: call 0x182d19; add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fa9f: call 0x182d19; add ebx, 0x44eec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018fa50: call 0x182d19; add ebx, 0x44f7b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f11a: call 0x182d19; add ebx, 0x45471; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f0fc: call 0x182d19; add ebx, 0x4548f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f063: call 0x182d19; add ebx, 0x45528; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018efac: call 0x182d19; add ebx, 0x455df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ef13: call 0x182d19; add ebx, 0x45678; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ee5c: call 0x182d19; add ebx, 0x4572f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018edc3: call 0x182d19; add ebx, 0x457c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed0c: call 0x182d19; add ebx, 0x4587f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ec73: call 0x182d19; add ebx, 0x45918; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ebbc: call 0x182d19; add ebx, 0x459cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb23: call 0x182d19; add ebx, 0x45a68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea6c: call 0x182d19; add ebx, 0x45b1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e9d3: call 0x182d19; add ebx, 0x45bb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e91c: call 0x182d19; add ebx, 0x45c6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e883: call 0x182d19; add ebx, 0x45d08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e7cc: call 0x182d19; add ebx, 0x45dbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e733: call 0x182d19; add ebx, 0x45e58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e67c: call 0x182d19; add ebx, 0x45f0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e5e3: call 0x182d19; add ebx, 0x45fa8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e52c: call 0x182d19; add ebx, 0x4605f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e493: call 0x182d19; add ebx, 0x460f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3dc: call 0x182d19; add ebx, 0x461af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e343: call 0x182d19; add ebx, 0x46248; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e28c: call 0x182d19; add ebx, 0x462ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e1f3: call 0x182d19; add ebx, 0x46398; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e13c: call 0x182d19; add ebx, 0x4644f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e0a3: call 0x182d19; add ebx, 0x464e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dfec: call 0x182d19; add ebx, 0x4659f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018df53: call 0x182d19; add ebx, 0x46638; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018de9c: call 0x182d19; add ebx, 0x466ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018de03: call 0x182d19; add ebx, 0x46788; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dd4b: call 0x182d19; add ebx, 0x46900; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dc46: call 0x182d19; add ebx, 0x46945; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018db40: call 0x182d19; add ebx, 0x46b0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018da3a: call 0x182d19; add ebx, 0x46b51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018da9f: call 0x182d19; add ebx, 0x46c6c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018da50: call 0x182d19; add ebx, 0x46cfb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c858: call 0x182d19; add ebx, 0x47b33; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c7a8: call 0x182d19; add ebx, 0x47be3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c6c0: call 0x182d19; add ebx, 0x47c4b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c242: call 0x182d19; add ebx, 0x47ec9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c1e6: call 0x182d19; add ebx, 0x47f25; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c128: call 0x182d19; add ebx, 0x47fe3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c040: call 0x182d19; add ebx, 0x4804b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0012a870: call 0x182d1d; add edx, 0x10c59f; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012fc70: call 0x182d21; add eax, 0x10719f; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0009d280: call 0x182d21; add eax, 0x199b8f; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x000929a0: call 0x182d21; add eax, 0x1a446f; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008cc90: call 0x182d21; add eax, 0x1aa17f; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008cc50: call 0x182d21; add eax, 0x1aa1bf; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008b150: call 0x182d21; add eax, 0x1abcbf; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003cea0: call 0x182d21; add eax, 0x1f9f6f; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003ce80: call 0x182d21; add eax, 0x1f9f8f; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00034500: call 0x182d21; add eax, 0x20290f; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x000344e0: call 0x182d21; add eax, 0x20292f; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x0002f380: call 0x182d21; add eax, 0x207a8f; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00025fd0: call 0x182d21; add eax, 0x210e3f; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00025fb0: call 0x182d21; add eax, 0x210e5f; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000254c0: call 0x182d21; add eax, 0x21194f; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00024f60: call 0x182d21; add eax, 0x211eaf; lea eax, [eax - 0x680b4]; ret; 
0x00024f40: call 0x182d21; add eax, 0x211ecf; lea eax, [eax - 0x680ac]; ret; 
0x00145d40: call 0x182d21; add eax, 0xf10cf; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr gs:[eax]; ret; 
0x0013a700: call 0x182d21; add eax, 0xfc70f; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x0018941b: call 0x182d25; add esi, 0xad9f4; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000be80c: call 0x182d2d; add ecx, 0x107863; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be301: call 0x182d2d; add ecx, 0x107d6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2dc: call 0x182d2d; add ecx, 0x107d93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2bc: call 0x182d2d; add ecx, 0x107db3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be29f: call 0x182d2d; add ecx, 0x107dd0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be200: call 0x182d2d; add ecx, 0x107def; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be272: call 0x182d2d; add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be1e2: call 0x182d2d; add ecx, 0x107e0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be25b: call 0x182d2d; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be240: call 0x182d2d; add ecx, 0x107e2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be1bd: call 0x182d2d; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be21e: call 0x182d2d; add ecx, 0x107e51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be193: call 0x182d2d; add ecx, 0x107e5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be17a: call 0x182d2d; add ecx, 0x107e75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be159: call 0x182d2d; add ecx, 0x107e96; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be135: call 0x182d2d; add ecx, 0x107eba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be117: call 0x182d2d; add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be094: call 0x182d2d; add ecx, 0x107f5b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baee2: call 0x182d2d; add ecx, 0x10b08d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baebd: call 0x182d2d; add ecx, 0x10b0b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae93: call 0x182d2d; add ecx, 0x10b0dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae7a: call 0x182d2d; add ecx, 0x10b0f5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae59: call 0x182d2d; add ecx, 0x10b116; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae35: call 0x182d2d; add ecx, 0x10b13a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae17: call 0x182d2d; add ecx, 0x10b158; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000badfb: call 0x182d2d; add ecx, 0x10b174; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8f6c: call 0x182d2d; add ecx, 0x10cf2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e87: call 0x182d2d; add ecx, 0x10d0a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e74: call 0x182d2d; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e58: call 0x182d2d; add ecx, 0x10d0d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8361: call 0x182d2d; add ecx, 0x10db3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b831c: call 0x182d2d; add ecx, 0x10db7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82ff: call 0x182d2d; add ecx, 0x10db9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8260: call 0x182d2d; add ecx, 0x10dbbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b82d2: call 0x182d2d; add ecx, 0x10dbc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82bb: call 0x182d2d; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82a0: call 0x182d2d; add ecx, 0x10dbfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b827e: call 0x182d2d; add ecx, 0x10dc1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b818c: call 0x182d2d; add ecx, 0x10dc8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b816c: call 0x182d2d; add ecx, 0x10dcaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8147: call 0x182d2d; add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b786c: call 0x182d2d; add ecx, 0x10e4cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7787: call 0x182d2d; add ecx, 0x10e644; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7774: call 0x182d2d; add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7758: call 0x182d2d; add ecx, 0x10e673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6d21: call 0x182d2d; add ecx, 0x10f01a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cfc: call 0x182d2d; add ecx, 0x10f03f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cdc: call 0x182d2d; add ecx, 0x10f05f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cbf: call 0x182d2d; add ecx, 0x10f07c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c20: call 0x182d2d; add ecx, 0x10f09b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6c92: call 0x182d2d; add ecx, 0x10f0a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c7b: call 0x182d2d; add ecx, 0x10f0c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c60: call 0x182d2d; add ecx, 0x10f0db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c3e: call 0x182d2d; add ecx, 0x10f0fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6b5c: call 0x182d2d; add ecx, 0x10f15f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b3c: call 0x182d2d; add ecx, 0x10f17f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b17: call 0x182d2d; add ecx, 0x10f1a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00183a63: call 0x183190; add esp, 0x18; pop ebx; ret; 
0x0005f92b: call 0x19fe7c34; ja 0x5f940; mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x00042225: call 0x1a5bd0; add esp, 0x18; pop ebx; ret; 
0x00042287: call 0x1a5c10; add esp, 0x18; pop ebx; ret; 
0x0009e610: call 0x1ca6919; mov dword ptr [edx + 0x388], eax; ret; 
0x00041014: call 0x1cabf28; clc; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00082ce8: call 0x1e8aff1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00082e08: call 0x1e8b112; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00084f28: call 0x1e8d22f; xor eax, 1; ret; 
0x00084f48: call 0x1e8d250; xor eax, 1; ret; 
0x00085c38: call 0x1e8df41; ret; 
0x00085c48: call 0x1e8df52; ret; 
0x0008ccf5: call 0x1e95005; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x001371c5: call 0x1f3f4d0; pop ebx; ret; 
0x0013c5dc: call 0x1fc48e4; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x00042dd5: call 0x21060e5d; ret 0xb60f; 
0x000a4931: call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a8ee1: call 0x23110; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00038cbd: call 0x231a0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00028129: call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00060169: call 0x231a0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000fc8b6: call 0x231a0; add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0002fc6d: call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000852ef: call 0x231a0; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x000381a1: call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0008e215: call 0x231a0; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0014d8fb: call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x0009bc46: call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x0009e3c0: call 0x231a0; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x001087dd: call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x0015c9d4: call 0x231a8; mov dword ptr [ebx + 0xa220], eax; add esp, 0x18; pop ebx; ret; 
0x0002450a: call 0x244d9; add esp, 0x1c; ret; 
0x0002579b: call 0x25d90; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00112f4c: call 0x29130fd4; ret; 
0x0011492c: call 0x291329b4; ret; 
0x0011630c: call 0x29134394; ret; 
0x00079301: call 0x2a001626; ja 0x79318; mov edi, dword ptr [ebp + eax*4 - 0x719b8]; add edi, ebp; jmp edi; 
0x00039a88: call 0x2b276; jmp dword ptr [esi - 0x70]; 
0x000344e2: call 0x2f0844fb; sub dword ptr [eax], esp; add byte ptr [ebx + 0x1d080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x001087d7: call 0x2f148e1; push eax; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x0018e0aa: call 0x318e513; sbb al, 0x8b; jmp ebx; 
0x00190b2a: call 0x3190f6b; sbb al, 0x8b; jmp ebx; 
0x001923aa: call 0x31927d5; sbb al, 0x8b; jmp ebx; 
0x00192eaa: call 0x31932ca; sbb al, 0x8b; jmp ebx; 
0x0003310a: call 0x33120; add esp, 0x1c; ret; 
0x00034a96: call 0x34570; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0014378e: call 0x34af0; add esp, 0x10; add esp, 0xc; ret; 
0x0016fcab: call 0x34af0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000ec897: call 0x34af0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00034b1d: call 0x34af0; add esp, 0x1c; ret; 
0x00034b05: call 0x357c0; add esp, 0x2c; ret; 
0x000360f5: call 0x360b0; add esp, 0x2c; ret; 
0x0003be96: call 0x3be10; pop ecx; pop edx; ret; 
0x0003ccb5: call 0x3c5a0; add esp, 0x1c; ret; 
0x0009bc22: call 0x3cb00; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0003d1cd: call 0x3d150; add esp, 0x1c; ret; 
0x0003e249: call 0x3d9e0; add esp, 0x1c; ret; 
0x0003e27e: call 0x3e3d0; add esp, 0x1c; ret; 
0x00182e29: call 0x3e4b0; add esp, 0x1c; ret; 
0x0003e96d: call 0x3e9d0; add esp, 0x1c; ret; 
0x00040364: call 0x3fe90; add esp, 0x10; add esp, 0xc; ret; 
0x0003ff58: call 0x3ff70; add esp, 0x1c; ret; 
0x0004010c: call 0x40111; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0008fbbb: call 0x4017ec2; je 0x8fbd0; pop ebx; pop esi; pop edi; ret; 
0x000400b4: call 0x403d0; add esp, 0x10; add esp, 0xc; ret; 
0x0018f3a3: call 0x4097039b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191393: call 0x4097238b; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001934a3: call 0x4097449b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000410a5: call 0x40c90; add esp, 0x2c; ret; 
0x0004190e: call 0x41830; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00041969: call 0x41980; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x00041d1a: call 0x41a30; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00041f98: call 0x41fb0; add esp, 0x1c; ret; 
0x00042a4c: call 0x42a80; add esp, 0x2c; ret; 
0x0018c4c2: call 0x42eed42d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018ca52: call 0x42eed9bd; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013b9e7: call 0x4380e77; mov dword ptr gs:[ebp], edx; mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0014c3fc: call 0x44248d86; ret 0x148b; 
0x0002fc09: call 0x444850f; add esp, 8; pop ebx; ret; 
0x00059f55: call 0x448285b; ret; 
0x0003d909: call 0x463f0; add esp, 0x1c; ret; 
0x000463e2: call 0x46d60; add esp, 0x1c; ret; 
0x00049a62: call 0x4a260; add esp, 0x1c; ret; 
0x0003a197: call 0x4a354; add byte ptr [ecx], bh; ret 0x430f; 
0x0003d92b: call 0x4ccc0; add esp, 0x1c; ret; 
0x0004cc78: call 0x4cd00; add esp, 0x2c; ret; 
0x00146f5e: call 0x4d8f264; pop ebx; pop esi; ret; 
0x0004d392: call 0x4dce0; add esp, 0x1c; ret; 
0x000344c2: call 0x4f0844db; sub dword ptr [eax], esp; add byte ptr [ebx + 0x9c80], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0009e60d: call 0x4f2a713; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x0003d96b: call 0x50a00; add esp, 0x1c; ret; 
0x000509b8: call 0x50a40; add esp, 0x2c; ret; 
0x00051328: call 0x513a0; add esp, 0x2c; ret; 
0x00051998: call 0x51a20; add esp, 0x2c; ret; 
0x00052786: call 0x522b0; test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00052972: call 0x52930; jmp eax; 
0x000aa52f: call 0x5573235; add byte ptr [ecx], al; ret; 
0x0005a95a: call 0x5a700; mov eax, 1; add esp, 0xc; ret; 
0x0005aeb1: call 0x5ad20; add esp, 0x18; pop ebx; ret; 
0x000e58ae: call 0x5b0e58b3; ret; 
0x000e5920: call 0x5b0e5925; ret; 
0x000e59c4: call 0x5b0e59c9; ret; 
0x000a601a: call 0x5b0f24a2; pop esi; pop edi; pop ebp; ret; 
0x000a439d: call 0x5b170825; pop esi; pop edi; pop ebp; ret; 
0x0015cf27: call 0x5b1a93af; pop esi; ret; 
0x000a2379: call 0x5b26e801; pop esi; pop edi; pop ebp; ret; 
0x00038746: call 0x5b304bce; pop esi; pop edi; pop ebp; ret; 
0x0014f99f: call 0x5b31be27; pop esi; pop edi; pop ebp; ret; 
0x0015198f: call 0x5b31de17; pop esi; pop edi; pop ebp; ret; 
0x00054127: call 0x5b5d48b5; pop esi; pop edi; ret; 
0x000295f6: call 0x5d61f456; ret; 
0x00034ba2: call 0x5d62aa02; ret; 
0x000361cf: call 0x5d62c02f; ret; 
0x00038708: call 0x5d62e568; ret; 
0x0003b296: call 0x5d6310f6; ret 4; 
0x0003d8d4: call 0x5d633734; ret; 
0x00059775: call 0x5d64f5d5; ret; 
0x0007aaa4: call 0x5d670904; ret; 
0x0007e30e: call 0x5d67416e; ret; 
0x0008ffc9: call 0x5d685e29; ret; 
0x00090350: call 0x5d6861b0; ret; 
0x000906dc: call 0x5d68653c; ret; 
0x0009676a: call 0x5d68c5ca; ret; 
0x000970f7: call 0x5d68cf57; ret; 
0x00097842: call 0x5d68d6a2; ret; 
0x0009f50d: call 0x5d69536d; ret; 
0x0009f590: call 0x5d6953f0; ret; 
0x000a22f3: call 0x5d698153; ret; 
0x000a3f75: call 0x5d699dd5; ret 4; 
0x000a42da: call 0x5d69a13a; ret; 
0x000aaa5f: call 0x5d6a08bf; ret; 
0x000c34b4: call 0x5d6b9314; ret; 
0x000cf068: call 0x5d6c4ec8; ret; 
0x000e4c76: call 0x5d6daad6; ret; 
0x000e5164: call 0x5d6dafc4; ret; 
0x000e5f6a: call 0x5d6dbdca; ret; 
0x000e8791: call 0x5d6de5f1; ret; 
0x000ea4b1: call 0x5d6e0311; ret; 
0x000ec371: call 0x5d6e21d1; ret; 
0x000ed238: call 0x5d6e3098; ret; 
0x000ff748: call 0x5d6f55a8; ret; 
0x00107508: call 0x5d6fd368; ret; 
0x0010b45d: call 0x5d7012bd; ret; 
0x0010b611: call 0x5d701471; ret; 
0x0010b72f: call 0x5d70158f; ret; 
0x00111785: call 0x5d7075e5; ret; 
0x0012ccb9: call 0x5d722b19; ret; 
0x0012d968: call 0x5d7237c8; ret; 
0x0013a665: call 0x5d7304c5; ret; 
0x0013ddcc: call 0x5d733c2c; ret; 
0x0013e201: call 0x5d734061; ret; 
0x0014198f: call 0x5d7377ef; ret; 
0x0014c0a9: call 0x5d741f09; ret; 
0x0014f932: call 0x5d745792; ret; 
0x00151976: call 0x5d7477d6; ret; 
0x001640d2: call 0x5d759f32; ret; 
0x0016564a: call 0x5d75b4aa; ret; 
0x00166de2: call 0x5d75cc42; ret; 
0x001677e2: call 0x5d75d642; ret; 
0x00167a72: call 0x5d75d8d2; ret; 
0x00168b6a: call 0x5d75e9ca; ret; 
0x00178616: call 0x5d76e476; ret; 
0x00178c87: call 0x5d76eae7; ret; 
0x001830d4: call 0x5d778f34; ret; 
0x0018534b: call 0x5d77b1ab; ret; 
0x001a09a6: call 0x5d796806; ret; 
0x00052a16: call 0x5f638776; ret; 
0x00053603: call 0x5f639363; ret; 
0x00054216: call 0x5f639f76; ret; 
0x0013d441: call 0x60520; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001244a1: call 0x60750; add esp, 0x10; add esp, 0xc; ret; 
0x0012444f: call 0x60750; add esp, 0x1c; ret; 
0x00059ea2: call 0x65010; add esp, 0x1c; ret; 
0x00059ec3: call 0x65310; add esp, 0x1c; ret; 
0x0005a1c2: call 0x653a0; add esp, 0x1c; ret; 
0x000bed94: call 0x660bed99; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0017423b: call 0x6b173c08; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x000a8e94: call 0x6c8b1c98; lcall 0x1076, 0x41f6fff6; cmove eax, edx; ret; 
0x0006c901: call 0x712d0; add esp, 0x1c; ret; 
0x0007edd3: call 0x71590; add esp, 0x1c; ret; 
0x000715a1: call 0x71620; add esp, 0x1c; ret; 
0x0008fe3a: call 0x73f27; dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000d6e93: call 0x74dff29a; pop ss; mov cl, dl; and cl, 0xf; je 0xd6ec0; ret; 
0x000a7ada: call 0x754c71de; add cl, byte ptr [ebp - 0x176f036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9c9a: call 0x754c939e; add cl, byte ptr [ebp - 0x1785e36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00036d18: call 0x7717a981; push cs; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e7c]; add esi, edi; jmp esi; 
0x00036de0: call 0x7717aa49; push cs; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77dd4]; add esi, edi; jmp esi; 
0x00036e1b: call 0x7717aa84; push cs; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77d80]; add esi, edi; jmp esi; 
0x0003739a: call 0x7717b003; arpl word ptr [edi], cx; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77d2c]; add esi, edi; jmp esi; 
0x000374e1: call 0x7717b14a; push eax; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77bdc]; add edx, edi; jmp edx; 
0x00077c2a: call 0x77990; mov eax, 1; add esp, 0xc; ret; 
0x000785c2: call 0x78490; add esp, 0x1c; ret; 
0x0016ff19: call 0x785b0; add esp, 0x18; pop ebx; ret; 
0x000839d3: call 0x79ea0; add esp, 0x18; pop ebx; ret; 
0x0007aadd: call 0x7a9f0; add esp, 0x1c; ret; 
0x0005fd00: call 0x7b510; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x00059fc1: call 0x7b740; add esp, 0x1c; ret; 
0x0007bc49: call 0x7ba70; add esp, 0x2c; ret; 
0x00083cc0: call 0x7cdd0; add esp, 0x1c; ret; 
0x00083cdd: call 0x7cf80; add esp, 0x1c; ret; 
0x00060567: call 0x7d3a0; add esp, 0x2c; ret; 
0x0007e505: call 0x7e330; add esp, 0x28; pop ebx; ret; 
0x0007eee1: call 0x7ee10; add esp, 0x28; pop ebx; ret; 
0x0007ed19: call 0x7ee10; add esp, 0x2c; ret; 
0x0007eb05: call 0x7f650; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0007de74: call 0x7f9f0; add esp, 0x1c; ret; 
0x00026fab: call 0x7feef63d; stc; call dword ptr [eax - 0x73]; 
0x00082bb9: call 0x808c0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00088931: call 0x810898d9; ret 0xe4df; 
0x000a9c31: call 0x810aa9c6; ret 0xd1df; 
0x000be241: call 0x810bee90; shr dword ptr [edi], 0x7e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bfd2d: call 0x810c0961; ret; 
0x000f7b21: call 0x810f7ba6; ret; 
0x00115a31: call 0x81116108; ret 0x13df; 
0x0011b731: call 0x8111bdab; ret 0xb6df; 
0x0011c931: call 0x8111cf99; ret 0xa4df; 
0x00120b31: call 0x81121157; ret 0x62df; 
0x00124831: call 0x81124e1a; ret 0x25df; 
0x00139e31: call 0x8113a2c4; ret 0xcfdf; 
0x0018e52d: call 0x8218e479; ret; 
0x0019052d: call 0x82190459; ret; 
0x0013a0ec: call 0x8324a579; ret 0x8d01; 
0x00176700: call 0x833f0; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00120897: call 0x83b90; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00083f2d: call 0x83dd0; add esp, 0x18; pop ebx; ret; 
0x00059d02: call 0x83dd0; add esp, 0x1c; ret; 
0x00131321: call 0x83ee4456; clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x000840bd: call 0x83fe0; add esp, 0x18; pop ebx; ret; 
0x00059e02: call 0x83fe0; add esp, 0x1c; ret; 
0x000fc8a4: call 0x840fc881; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0013c5b4: call 0x8413b424; les ebx, ptr [eax]; pop ebx; ret; 
0x001636f4: call 0x841636f7; ret; 
0x00060539: call 0x841c0; add esp, 0x2c; ret; 
0x0008456d: call 0x843e0; add esp, 0x18; pop ebx; ret; 
0x0013894e: call 0x843e0; add esp, 0x1c; ret; 
0x0008d5d7: call 0x85230; lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x0008d649: call 0x85230; nop; pop ebx; pop esi; pop edi; ret; 
0x00087762: call 0x87250; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0014181c: call 0x891608a4; ret 0xe283; 
0x0008f6fd: call 0x89386b05; clc; call dword ptr gs:[0x10]; 
0x00085cec: call 0x896d0; add esp, 0x1c; ret; 
0x0008a06d: call 0x89f90; add esp, 0x28; pop ebx; ret; 
0x0007217f: call 0x8a07217e; ret; 
0x00072ed4: call 0x8a072ed3; sbb byte ptr [ebx - 0x5037b], cl; inc dword ptr [ecx]; ret; 
0x00076c3a: call 0x8a076c39; sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x0008b58a: call 0x8b4d0; add esp, 0x18; pop ebx; ret; 
0x0008b5ca: call 0x8b4d0; or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008bcda: call 0x8bf00; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00134294: call 0x8c133293; jl 0x1342bf; and byte ptr [ebp - 0x6470379], cl; call dword ptr [eax - 0x73]; 
0x0003c4a0: call 0x8c9d0; mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00120ac0: call 0x8c9d0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120590: call 0x8c9d0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00110fe0: call 0x8c9d0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e4ff8: call 0x8c9d0; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000f8288: call 0x8c9d0; mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000963a1: call 0x8cb10; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0009461a: call 0x8cdc0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00027a1b: call 0x8d06c0a9; or dword ptr [eax + esi*8], 0xffffffde; call dword ptr [eax - 0x73]; 
0x0009878c: call 0x8d370; add esp, 0x28; pop ebx; ret; 
0x000994cc: call 0x8d370; add esp, 0x2c; ret; 
0x0010964c: call 0x8d51970; or eax, edx; pop ebx; ret; 
0x001087b2: call 0x8d660; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000da4e2: call 0x8d660; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00060326: call 0x8d660; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x001513da: call 0x8d660; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008b2ba: call 0x8d660; add esp, 0x1c; ret; 
0x00108472: call 0x8d660; call dword ptr [esi]; 
0x0008e17d: call 0x8d730; add esp, 0x1c; ret; 
0x000773b0: call 0x8e0773af; push eax; adc byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx - 0x77]; 
0x001086ae: call 0x8e1086b1; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10859a; call eax; 
0x00097e34: call 0x8e510; add esp, 0x1c; ret; 
0x0008e67c: call 0x8e5a0; add esp, 0x18; pop ebx; ret; 
0x0008e960: call 0x8e8a0; add esp, 0x1c; ret; 
0x0008fe3b: call 0x8fc80; mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000917b1: call 0x90b10; mov ecx, dword ptr [esp + 0x1c]; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009b9b4: call 0x91250; mov ecx, dword ptr [esp + 0x38]; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009d10d: call 0x92310; xor edx, edx; mov eax, 1; call 0x9d080; mov dword ptr [esp], esi; call ebx; 
0x0008f1b3: call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x00092d31: call 0x92d50; add esp, 0x2c; ret; 
0x00095304: call 0x94a30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000953b9: call 0x94a30; add esp, 0x18; pop ebx; ret; 
0x00095fa9: call 0x95e60; add esp, 0x1c; ret; 
0x0014d19e: call 0x95fa0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009ad45: call 0x95fa0; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0009642c: call 0x962c0; xor eax, eax; add esp, 0xc; ret; 
0x001686cd: call 0x96410; add esp, 0x18; lea eax, [ebx + 0xa5ec]; pop ebx; ret; 
0x000280eb: call 0x96410; add esp, 0x1c; ret; 
0x00097c6c: call 0x97c20; add esp, 0x18; pop ebx; ret; 
0x0009a0f8: call 0x9a0a0; nop; nop; mov eax, dword ptr gs:[8]; ret; 
0x0009be79: call 0x9b650; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000a7b11: call 0x9c8c7215; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x944736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9e01: call 0x9c8c9505; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x940936e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009d119: call 0x9d080; mov dword ptr [esp], esi; call ebx; 
0x0009d50f: call 0x9d470; add esp, 0x18; pop ebx; ret; 
0x0009cfad: call 0x9d570; add esp, 0x1c; ret; 
0x0009d545: call 0x9d7e0; add esp, 0x2c; ret; 
0x0009d565: call 0x9da60; add esp, 0x2c; ret; 
0x0009f69c: call 0x9f430; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a1c54: call 0xa1f13; add cl, al; call 0xfda5572; inc edi; ret 0xc083; 
0x000a1d6e: call 0xa202d; add cl, al; call 0xfda568c; inc edi; ret 0xc083; 
0x000a605c: call 0xa5f40; add esp, 0xc; test eax, eax; jne 0xa6073; ret; 
0x000a7cee: call 0xa7d00; add esp, 0x1c; ret; 
0x000ce140: call 0xa83165ce; add byte ptr [eax], al; add cl, ch; ret; 
0x000a8f0a: call 0xa8f20; add esp, 0x1c; ret; 
0x000aa8fc: call 0xaa910; add esp, 0x1c; ret; 
0x000aab32: call 0xaabe0; add esp, 0x1c; ret; 
0x000a998b: call 0xad970; add esp, 0x18; pop ebx; ret; 
0x000619a6: call 0xb615e034; inc ebp; or eax, 0x8901e683; ret; 
0x000379c0: call 0xbf640; add esp, 0x1c; ret; 
0x001563d5: call 0xbfaa0; add esp, 0x1c; ret; 
0x00139051: call 0xbfd90; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a989b: call 0xbfd90; add esp, 0x18; pop ebx; ret; 
0x000a5eeb: call 0xbfe10; add esp, 0x18; pop ebx; ret; 
0x000d1c9f: call 0xbfe80; add esp, 0x18; pop ebx; ret; 
0x0009e849: call 0xbfec0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a5f19: call 0xbfec0; add esp, 0x18; pop ebx; ret; 
0x000a99e7: call 0xbff10; add esp, 0x18; pop ebx; ret; 
0x00098a8b: call 0xc03a8d19; ret; 
0x000a9937: call 0xc0440; add esp, 0x18; pop ebx; ret; 
0x001524a6: call 0xc05b0; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x000c13a8: call 0xc18c0; add esp, 0x1c; ret; 
0x000c1e33: call 0xc1e40; add esp, 0x2c; ret; 
0x001395b5: call 0xc21c0; add esp, 0x18; pop ebx; ret; 
0x000c2431: call 0xc2230; add esp, 0x1c; ret; 
0x000c0d77: call 0xc2420; add esp, 0x18; pop ebx; ret; 
0x000a64ff: call 0xc24e7503; ret; 
0x000a6f14: call 0xc24e7f18; ret; 
0x000a6f54: call 0xc24e7f58; ret; 
0x000a6f8f: call 0xc24e7f93; ret; 
0x000a6fcf: call 0xc24e7fd3; ret; 
0x000a7ae4: call 0xc24e8ae8; ret; 
0x000a7cbf: call 0xc24e8cc3; ret; 
0x000a8e74: call 0xc24e9e78; ret; 
0x000a9c1f: call 0xc24eac23; ret; 
0x000a9c5f: call 0xc24eac63; ret; 
0x000a9ca4: call 0xc24eaca8; ret; 
0x000c25ee: call 0xc2600; add esp, 0x1c; ret; 
0x00139875: call 0xc3e60; add esp, 0x18; pop ebx; ret; 
0x000d2e65: call 0xc4902e6f; adc byte ptr [ecx - 0x365f4b], cl; push dword ptr [ecx]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x000e1ea1: call 0xc4921ea3; adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0xcae9; 
0x000e1ef6: call 0xc4921ef8; adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x7e9; 
0x000c4b02: call 0xc5440; add esp, 0x1c; ret; 
0x000c7e22: call 0xc85e0; add esp, 0x1c; ret; 
0x000594bc: call 0xc8f6a33; and al, 0x89; ret 0x13eb; 
0x000cade8: call 0xcae60; add esp, 0x2c; ret; 
0x000cb4f2: call 0xcbde0; add esp, 0x1c; ret; 
0x0009a145: call 0xcce244c; ret; 
0x000ce6d8: call 0xce750; add esp, 0x2c; ret; 
0x0018555c: call 0xcea21fea; call dword ptr gs:[0x10]; 
0x000cef98: call 0xcf010; add esp, 0x2c; ret; 
0x000cf648: call 0xcf6c0; add esp, 0x2c; ret; 
0x000cff42: call 0xcff60; add esp, 0x1c; ret; 
0x000d70b6: call 0xd1c40; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d8d89: call 0xd7e40; add esp, 0x18; pop ebx; ret; 
0x000dc118: call 0xd7e40; add esp, 0x1c; ret; 
0x000da29f: call 0xda020; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d7d12: call 0xda4f0; add esp, 0x1c; ret; 
0x000dcb44: call 0xdcc50; add esp, 0x2c; ret; 
0x000dff26: call 0xe22f0; add esp, 0x2c; ret; 
0x000dff56: call 0xe4770; add esp, 0x2c; ret; 
0x000e48a9: call 0xe4970; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000e47d9: call 0xe4ae0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000fa800: call 0xe6eee; inc dword ptr [ebx - 0x7c72f714]; adc ebx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000e7b5d: call 0xe7b70; add esp, 0x1c; ret; 
0x000e80a1: call 0xe7d70; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000e7c1d: call 0xe8090; add esp, 0x1c; ret; 
0x00145ae9: call 0xe8dc460d; out dx, al; xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x000774f5: call 0xea0774f4; ret 0xffa3; 
0x000a9dc4: call 0xec8b2bc8; wait; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a9f94: call 0xec8b2d98; pushfd; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x00171fb0: call 0xec910; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0010a2c5: call 0xec920; or ebx, 0xffffffff; or edx, 0xffffffff; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000ed81b: call 0xed070; add esp, 0x28; pop ebx; ret; 
0x000ed773: call 0xed6d0; add esp, 0x28; pop ebx; ret; 
0x00093070: call 0xed8e0; mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008def9: call 0xed8e0; mov ecx, dword ptr [esi + 8]; mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00079f4b: call 0xf079f50; xchg esp, eax; ret 0xd009; 
0x00034502: call 0xf08451b; sub dword ptr [eax], esp; add byte ptr [ebx + 0x9480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000c1e1c: call 0xf0c1e5d; inc esp; ret 0xff65; 
0x000dd856: call 0xf17148b; xchg dword ptr [eax - 0x7c00000a], edx; ret; 
0x00036db3: call 0xf17aa1c; xchg dword ptr [edi + 0xf000005], ebp; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x00183228: call 0xf18322d; xchg esp, eax; ret 0xd009; 
0x0013d3d1: call 0xf554de; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x2ec3; 
0x0008f400: call 0xf63a0a79; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008f950: call 0xf63a12c9; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00138a4e: call 0xf83f0; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000ffb62: call 0xf9050; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000ffb70: call 0xf9f10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000fc8a3: call 0xfa190; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000a1c5b: call 0xfda5572; inc edi; ret 0xc083; 
0x000a1d75: call 0xfda568c; inc edi; ret 0xc083; 
0x000a3dbb: call 0xfda76d2; inc edi; ret 0x508d; 
0x0010abd8: call 0xfe0e4df; dec edi; ret 0xdce9; 
0x000e4936: call dword ptr [0x10]; cmp eax, -0x26; jne 0xe494d; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00110eca: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x110ee0; pop ebx; ret; 
0x00110f3a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x110f50; pop ebx; ret; 
0x001112fa: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x111310; pop ebx; ret; 
0x0011b23a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11b250; pop ebx; ret; 
0x0011b74a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11b760; pop ebx; ret; 
0x0011bdb8: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11bdd0; pop ebx; ret; 
0x0011c946: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11c958; pop ebx; ret; 
0x0011cfea: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11d000; pop ebx; ret; 
0x0011d4e6: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11d4f8; pop ebx; ret; 
0x0011d986: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11d998; pop ebx; ret; 
0x0011edaa: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11edc0; pop ebx; ret; 
0x0011edfa: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11ee10; pop ebx; ret; 
0x00120b4a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x120b60; pop ebx; ret; 
0x00127d8a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x127da0; pop ebx; ret; 
0x0012a0d6: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12a0e8; pop ebx; ret; 
0x0012a71a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12a730; pop ebx; ret; 
0x0012a881: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0012a97a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12a990; pop ebx; ret; 
0x0012b96a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12b980; pop ebx; ret; 
0x0012bbfa: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12bc10; pop ebx; ret; 
0x0003c42b: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x3c440; pop ebx; ret; 
0x000603da: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x603f0; pop ebx; ret; 
0x0009cf76: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x9cf88; pop ebx; ret; 
0x0009de9e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x9deb0; pop ebx; ret; 
0x000d92b8: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xd92d0; pop ebx; ret; 
0x00108c06: call dword ptr [0x10]; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003c3f0: call dword ptr [0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011d4bc: call dword ptr [0x10]; mov ebx, edx; ret; 
0x000f830a: call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x0011d95c: call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000e7b83: call dword ptr [0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0008d678: call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x0013b40d: call dword ptr [0x10]; pop ebx; ret; 
0x0009a216: call dword ptr [0x10]; ret; 
0x0003b77e: call dword ptr [eax + 0x102444db]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000ee5df: call dword ptr [eax + 0x10]; 
0x000ee1ff: call dword ptr [eax + 0x14]; 
0x000ee548: call dword ptr [eax + 0x18]; 
0x0007bec7: call dword ptr [eax + 0x1c]; 
0x000f11c1: call dword ptr [eax + 0x20]; 
0x0016eda8: call dword ptr [eax + 0x24]; 
0x0007ce78: call dword ptr [eax + 0x2c]; 
0x00084979: call dword ptr [eax + 0x30]; 
0x000496eb: call dword ptr [eax + 0x31]; 
0x0007f80f: call dword ptr [eax + 0x34]; 
0x0018012b: call dword ptr [eax + 0x37c]; add esp, 0x1c; ret; 
0x00087f7b: call dword ptr [eax + 0x40]; 
0x00087ac2: call dword ptr [eax + 0x48]; 
0x00024ea9: call dword ptr [eax + 0x50]; 
0x00056137: call dword ptr [eax + 0x51]; 
0x000234c9: call dword ptr [eax + 0x52]; 
0x00039799: call dword ptr [eax + 0x53]; 
0x0006259d: call dword ptr [eax + 0x55]; 
0x00030004: call dword ptr [eax + 0x56]; 
0x0009639e: call dword ptr [eax + 0x56]; call 0x8cb10; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x00032380: call dword ptr [eax + 0x57]; 
0x0002871e: call dword ptr [eax + 0x68]; 
0x0002333b: call dword ptr [eax + 0x6a]; 
0x00173ecc: call dword ptr [eax + 0x6a]; add al, ch; fild dword ptr [esi - 0x10]; inc dword ptr [ebx - 0x17aaeb3c]; ret 0xeaf2; 
0x0013e5e5: call dword ptr [eax + 0x6a]; add al, ch; ret 0xf39f; 
0x00167e92: call dword ptr [eax + 0x6a]; pop es; call 0x150d90; add esp, 0x1c; ret; 
0x00166ca2: call dword ptr [eax + 0x6a]; push es; call 0x150d90; add esp, 0x1c; ret; 
0x000a42f3: call dword ptr [eax + 0x77]; 
0x0017febe: call dword ptr [eax + 0x8244c89]; call eax; 
0x000f9f0e: call dword ptr [eax + 0x88e18e8]; add byte ptr [ecx + 0x13ceffc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x0007f930: call dword ptr [eax + 0xc]; 
0x001688ab: call dword ptr [eax + 4]; 
0x0016aa60: call dword ptr [eax + 8]; 
0x0010393a: call dword ptr [eax - 0x17]; 
0x000247fd: call dword ptr [eax - 0x18]; 
0x0014e842: call dword ptr [eax - 0x18]; aaa; push ebp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0010fba5: call dword ptr [eax - 0x18]; aam 0x41; bnd jmp dword ptr [esi - 0x70]; 
0x00094567: call dword ptr [eax - 0x18]; adc bh, al; stc; jmp dword ptr [esi - 0x70]; 
0x000f1d9a: call dword ptr [eax - 0x18]; call dword ptr [ebx]; 
0x000c1881: call dword ptr [eax - 0x18]; clc; and al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x0010ac7f: call dword ptr [eax - 0x18]; cli; nop; bnd jmp dword ptr [esi - 0x70]; 
0x00121441: call dword ptr [eax - 0x18]; cmp byte ptr [ecx], ch; int1; jmp dword ptr [esi - 0x70]; 
0x001854f0: call dword ptr [eax - 0x18]; cmp ebp, edi; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x000c7b2e: call dword ptr [eax - 0x18]; dec ebx; ret 0xfff6; 
0x00150a8c: call dword ptr [eax - 0x18]; in eax, dx; xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x00077a38: call dword ptr [eax - 0x18]; inc ecx; ret; 
0x0002cc88: call dword ptr [eax - 0x18]; int1; jo 0x2cc8e; add al, ch; dec esp; ret 0x10; 
0x0014e702: call dword ptr [eax - 0x18]; ja 0x14e75d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014ec02: call dword ptr [eax - 0x18]; ja 0x14ec58; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00094506: call dword ptr [eax - 0x18]; jae 0x94503; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00096f2a: call dword ptr [eax - 0x18]; jmp edx; 
0x0010ed60: call dword ptr [eax - 0x18]; jns 0x10ed73; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0014eac2: call dword ptr [eax - 0x18]; mov bh, 0x52; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e5c2: call dword ptr [eax - 0x18]; mov bh, 0x57; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0008b4c7: call dword ptr [eax - 0x18]; mov dl, 0x88; cli; jmp dword ptr [esi - 0x70]; 
0x0014e482: call dword ptr [eax - 0x18]; neg dword ptr [eax - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0014e982: call dword ptr [eax - 0x18]; not dword ptr [ebx - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0011bd8a: call dword ptr [eax - 0x18]; pop ds; ret; 
0x00077a1c: call dword ptr [eax - 0x18]; pop ebp; ret; 
0x0009481e: call dword ptr [eax - 0x18]; pop ebx; cmc; stc; jmp dword ptr [esi - 0x70]; 
0x00146072: call dword ptr [eax - 0x18]; pop es; fucomp st(6); jmp dword ptr [esi - 0x70]; 
0x0014e662: call dword ptr [eax - 0x18]; pop ss; push edi; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014eb62: call dword ptr [eax - 0x18]; pop ss; push edx; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014dad2: call dword ptr [eax - 0x18]; push edi; ja 0x14dacb; jmp dword ptr [esi - 0x70]; 
0x0014e522: call dword ptr [eax - 0x18]; push edi; pop eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014ea22: call dword ptr [eax - 0x18]; push edi; push ebx; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00122207: call dword ptr [eax - 0x18]; ret 0xf588; 
0x00099db7: call dword ptr [eax - 0x18]; ret 0xf99f; 
0x0009be67: call dword ptr [eax - 0x18]; ret 0xfe93; 
0x000c20b6: call dword ptr [eax - 0x18]; ret; 
0x00093aae: call dword ptr [eax - 0x18]; retf; add bh, dl; jmp dword ptr [esi - 0x70]; 
0x00098f30: call dword ptr [eax - 0x18]; stc; ret 0xfffe; 
0x000a903f: call dword ptr [eax - 0x18]; stosb byte ptr es:[edi], al; mov edx, 0x2c89fff8; and al, 0x89; ret; 
0x00094ff7: call dword ptr [eax - 0x18]; sub ch, 0xf9; jmp dword ptr [esi - 0x70]; 
0x000779e4: call dword ptr [eax - 0x18]; xchg ebp, eax; ret; 
0x0014e8e2: call dword ptr [eax - 0x18]; xchg edi, eax; push esp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e7a2: call dword ptr [eax - 0x18]; xlatb; push ebp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00059fa2: call dword ptr [eax - 0x18]; xlatb; sbb byte ptr [eax + eax], cl; add esp, 0x1c; ret; 
0x0005a1a2: call dword ptr [eax - 0x18]; xlatb; wait; std; jmp dword ptr [esi - 0x70]; 
0x0014d847: call dword ptr [eax - 0x18]; xor ah, byte ptr [ebp - 0x12]; jmp dword ptr [esi - 0x70]; 
0x00120545: call dword ptr [eax - 0x18]; xor al, 0x38; int1; jmp dword ptr [esi - 0x70]; 
0x00150747: call dword ptr [eax - 0x18]; xor dh, byte ptr [esi]; out dx, al; dec dword ptr [ebx - 0x72f3db8c]; xchg al, dh; ret 0xfff9; 
0x00122356: call dword ptr [eax - 0x39]; 
0x00057697: call dword ptr [eax - 0x48]; 
0x001484ae: call dword ptr [eax - 0x48]; call ptr [ebx + 0x5e]; ret; 
0x000fac9e: call dword ptr [eax - 0x72f7137d]; xor dword ptr [ecx], 0x58; stc; call dword ptr [eax + 0x55]; 
0x000256a0: call dword ptr [eax - 0x73]; 
0x00122200: call dword ptr [eax - 0x73]; or ebx, 0x5a; stc; call dword ptr [eax - 0x18]; ret 0xf588; 
0x000c7b1b: call dword ptr [eax - 0x73]; xor dword ptr [eax + eax*2], 0x9068fff9; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; adc dword ptr [esi + eax*4 - 7], 0x4be850ff; ret 0xfff6; 
0x000379b2: call dword ptr [eax - 0x75]; 
0x0007a0ae: call dword ptr [eax - 0x76f3137d]; ret; 
0x0005871f: call dword ptr [eax - 0x77]; 
0x000c388e: call dword ptr [eax - 0x7c3fb275]; ret; 
0x0004c915: call dword ptr [eax - 0x7d]; 
0x0006026e: call dword ptr [eax - 0xf417]; jmp dword ptr [esi - 0x70]; 
0x000247a5: call dword ptr [eax - 1]; 
0x0009b451: call dword ptr [eax - 7]; 
0x00055a2f: call dword ptr [eax]; 
0x0016919b: call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x001696c1: call dword ptr [eax]; mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x001328a6: call dword ptr [ebp + 0x14]; 
0x0005ae13: call dword ptr [ebp + 0x1c]; 
0x0008714c: call dword ptr [ebp + 0x24]; 
0x0008ac41: call dword ptr [ebp + 0x2c]; 
0x00089cff: call dword ptr [ebp + 0x30]; 
0x00026f0f: call dword ptr [ebp + 0x31]; 
0x00088141: call dword ptr [ebp + 0x40]; 
0x0005f828: call dword ptr [ebp + 0x50]; 
0x000df129: call dword ptr [ebp + 0x55]; 
0x0003dd83: call dword ptr [ebp + 0x56]; 
0x00174ea1: call dword ptr [ebp + 0x56]; call edi; 
0x000233e3: call dword ptr [ebp + 0x57]; 
0x00164d9b: call dword ptr [ebp + 0x6a]; 
0x000884f0: call dword ptr [ebp + 0xc]; 
0x0013e16c: call dword ptr [ebp + 1]; 
0x000338bf: call dword ptr [ebp - 0x18]; 
0x00085fbc: call dword ptr [ebp - 0x18]; lodsd eax, dword ptr [esi]; ret; 
0x000243fe: call dword ptr [ebp - 0x38]; 
0x0009e37f: call dword ptr [ebp - 0x48]; 
0x0015daf1: call dword ptr [ebp - 0x73]; 
0x00033984: call dword ptr [ebp - 0x75]; 
0x0007b0ff: call dword ptr [ebp - 0x77]; 
0x000a4118: call dword ptr [ebp - 1]; 
0x00024e8c: call dword ptr [ebp]; 
0x001335ff: call dword ptr [ebx + 0x14]; 
0x0007ae99: call dword ptr [ebx + 0x1c]; 
0x0016b694: call dword ptr [ebx + 0x20]; 
0x0017f868: call dword ptr [ebx + 0x24]; 
0x0017f8ef: call dword ptr [ebx + 0x28]; 
0x0007d0b0: call dword ptr [ebx + 0x2c]; 
0x0007a479: call dword ptr [ebx + 0x30]; 
0x0007d1a1: call dword ptr [ebx + 0x34]; 
0x00080dd5: call dword ptr [ebx + 0x38]; 
0x00081a56: call dword ptr [ebx + 0x40]; 
0x0018477a: call dword ptr [ebx + 0x44]; 
0x00079d98: call dword ptr [ebx + 0x48]; 
0x0003f28e: call dword ptr [ebx + 0x50]; 
0x00057a33: call dword ptr [ebx + 0x51]; 
0x000e2230: call dword ptr [ebx + 0x52]; 
0x000df074: call dword ptr [ebx + 0x53]; 
0x00057d1a: call dword ptr [ebx + 0x56]; 
0x000e46fd: call dword ptr [ebx + 0x57]; 
0x00047efa: call dword ptr [ebx + 0x6a]; 
0x001694b1: call dword ptr [ebx + 0xc]; 
0x00081a46: call dword ptr [ebx + 0xf000005]; 
0x00079f0e: call dword ptr [ebx + 8]; 
0x00056a3c: call dword ptr [ebx - 0x18]; 
0x0019c105: call dword ptr [ebx - 0x18]; or eax, 0x81fffe6c; ret; 
0x00199bf5: call dword ptr [ebx - 0x18]; sbb eax, 0x81fffe91; ret; 
0x001a02e5: call dword ptr [ebx - 0x18]; sub eax, 0x81fffe2a; ret; 
0x0019fde5: call dword ptr [ebx - 0x18]; sub eax, 0x81fffe2f; ret; 
0x000609ed: call dword ptr [ebx - 0x59]; 
0x000d3602: call dword ptr [ebx - 0x73]; 
0x000314c7: call dword ptr [ebx - 0x75]; 
0x0010a587: call dword ptr [ebx - 0x77]; 
0x001765df: call dword ptr [ebx - 0x7d]; 
0x000653b5: call dword ptr [ebx - 0x7f]; 
0x0006bea0: call dword ptr [ebx - 1]; 
0x00056081: call dword ptr [ebx]; 
0x00096245: call dword ptr [ebx]; mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00168c63: call dword ptr [ecx + 0x10]; 
0x0016a1d1: call dword ptr [ecx + 0x18]; 
0x000edc01: call dword ptr [ecx + 0x20]; 
0x00087c3d: call dword ptr [ecx + 0x40]; 
0x0005f94b: call dword ptr [ecx + 0x50]; 
0x00024ec6: call dword ptr [ecx + 0x51]; 
0x0016dabc: call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00066b0b: call dword ptr [ecx + 0x52]; 
0x000dc114: call dword ptr [ecx + 0x52]; push eax; call 0xd7e40; add esp, 0x1c; ret; 
0x0009f49a: call dword ptr [ecx + 0x6a]; 
0x0016857d: call dword ptr [ecx + 0xc]; 
0x0016857d: call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0016f2ec: call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0005794b: call dword ptr [ecx + 0xf]; 
0x00168a0c: call dword ptr [ecx + 8]; 
0x00154fd4: call dword ptr [ecx - 0x17]; 
0x000313fd: call dword ptr [ecx - 0x18]; 
0x000f0440: call dword ptr [ecx - 0x18]; pop ecx; sub eax, 0xc483fff3; adc cl, ch; ret; 
0x00032594: call dword ptr [ecx - 0x75]; 
0x00032455: call dword ptr [ecx - 0x77]; 
0x000eff1a: call dword ptr [ecx - 0x7d]; 
0x0006a896: call dword ptr [ecx - 1]; 
0x000328e6: call dword ptr [ecx]; 
0x0007fdb6: call dword ptr [edi + 0x18]; 
0x00117c65: call dword ptr [edi + 0x24]; 
0x0015f6df: call dword ptr [edi + 0x31]; 
0x00089955: call dword ptr [edi + 0x34]; 
0x000873f5: call dword ptr [edi + 0x38]; 
0x00081778: call dword ptr [edi + 0x40]; 
0x0008688e: call dword ptr [edi + 0x44]; 
0x00086628: call dword ptr [edi + 0x48]; 
0x00057d06: call dword ptr [edi + 0x50]; 
0x00148c16: call dword ptr [edi + 0x52]; 
0x00057fc1: call dword ptr [edi + 0x53]; 
0x00140c20: call dword ptr [edi + 0x55]; 
0x00032e5c: call dword ptr [edi + 0x56]; 
0x000248a1: call dword ptr [edi + 0x57]; 
0x00082a8e: call dword ptr [edi + 0x68]; 
0x0004c272: call dword ptr [edi + 0x6a]; 
0x00080fe9: call dword ptr [edi + 0xc]; 
0x00057711: call dword ptr [edi - 0x17]; 
0x00035f50: call dword ptr [edi - 0x18]; 
0x00086124: call dword ptr [edi - 0x18]; inc ebp; ret 0xffff; 
0x000f10a2: call dword ptr [edi - 0x18]; jmp dword ptr [eax]; 
0x0005619e: call dword ptr [edi - 0x75]; 
0x0003159e: call dword ptr [edi - 0x77]; 
0x001278d0: call dword ptr [edi - 0x7f]; 
0x00027f20: call dword ptr [edi - 1]; 
0x00168dfc: call dword ptr [edx + 0x10]; 
0x00121b16: call dword ptr [edx + 0x11]; 
0x0017196e: call dword ptr [edx + 0x14]; 
0x0016a2c9: call dword ptr [edx + 0x18]; 
0x0017f729: call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0017fcb2: call dword ptr [edx + 0x380]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x00027096: call dword ptr [edx + 0x50]; 
0x0003165c: call dword ptr [edx + 0x51]; 
0x00033f0c: call dword ptr [edx + 0x52]; 
0x000e46e7: call dword ptr [edx + 0x53]; 
0x000d5147: call dword ptr [edx + 0x57]; 
0x00121596: call dword ptr [edx + 0x6a]; 
0x0016d9a6: call dword ptr [edx + 0xc]; 
0x001688c3: call dword ptr [edx + 4]; 
0x0016fd1a: call dword ptr [edx + 8]; 
0x000315ec: call dword ptr [edx - 0x18]; 
0x001373f2: call dword ptr [edx - 0x3f]; 
0x0013ec52: call dword ptr [edx - 0x46]; 
0x0002605c: call dword ptr [edx - 0x73]; 
0x0005770a: call dword ptr [edx - 0x75]; 
0x000315b8: call dword ptr [edx - 0x77]; 
0x0002fe96: call dword ptr [edx - 1]; 
0x000a1e4e: call dword ptr [edx - 7]; 
0x000a46ca: call dword ptr [edx]; 
0x0007f613: call dword ptr [esi + 0x10]; 
0x00135035: call dword ptr [esi + 0x14]; 
0x0007fe4a: call dword ptr [esi + 0x18]; 
0x00088911: call dword ptr [esi + 0x20]; 
0x0007cc64: call dword ptr [esi + 0x24]; 
0x00085d37: call dword ptr [esi + 0x30]; 
0x0012e043: call dword ptr [esi + 0x31]; 
0x000861d2: call dword ptr [esi + 0x3c]; 
0x0007a3c3: call dword ptr [esi + 0x40]; 
0x0002fda8: call dword ptr [esi + 0x50]; 
0x000e21db: call dword ptr [esi + 0x51]; 
0x00060c74: call dword ptr [esi + 0x52]; 
0x0002343b: call dword ptr [esi + 0x53]; 
0x00058128: call dword ptr [esi + 0x56]; 
0x00073382: call dword ptr [esi + 0x57]; 
0x0002456e: call dword ptr [esi + 0x5e]; 
0x00056a7a: call dword ptr [esi + 0x6a]; 
0x000893be: call dword ptr [esi + 0xc]; 
0x000e7e2f: call dword ptr [esi + 0xf]; 
0x0016ab93: call dword ptr [esi - 0x17]; 
0x000314ce: call dword ptr [esi - 0x18]; 
0x000331ae: call dword ptr [esi - 0x42]; 
0x001696b6: call dword ptr [esi - 0x73]; 
0x0006abb7: call dword ptr [esi - 0x75]; 
0x000a625b: call dword ptr [esi - 0x77]; 
0x000ee041: call dword ptr [esi - 0x7d]; 
0x00033e7d: call dword ptr [esi - 1]; 
0x0003aa0c: call dword ptr [esi]; 
0x0002327d: call dword ptr gs:[0x10]; 
0x00110ec9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x110ee0; pop ebx; ret; 
0x00110f39: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x110f50; pop ebx; ret; 
0x001112f9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x111310; pop ebx; ret; 
0x0011b239: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11b250; pop ebx; ret; 
0x0011b749: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11b760; pop ebx; ret; 
0x0011bdb7: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11bdd0; pop ebx; ret; 
0x0011c945: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11c958; pop ebx; ret; 
0x0011cfe9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11d000; pop ebx; ret; 
0x0011d4e5: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11d4f8; pop ebx; ret; 
0x0011d985: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11d998; pop ebx; ret; 
0x0011eda9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11edc0; pop ebx; ret; 
0x0011edf9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11ee10; pop ebx; ret; 
0x00120b49: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120b60; pop ebx; ret; 
0x00127d89: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x127da0; pop ebx; ret; 
0x0012a0d5: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a0e8; pop ebx; ret; 
0x0012a719: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a730; pop ebx; ret; 
0x0012a880: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0012a979: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a990; pop ebx; ret; 
0x0012b969: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12b980; pop ebx; ret; 
0x0012bbf9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12bc10; pop ebx; ret; 
0x0003c42a: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x3c440; pop ebx; ret; 
0x000603d9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x603f0; pop ebx; ret; 
0x0009cf75: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9cf88; pop ebx; ret; 
0x0009de9d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9deb0; pop ebx; ret; 
0x000d92b7: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xd92d0; pop ebx; ret; 
0x00108c05: call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003c3ef: call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011d4bb: call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f8309: call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0011d95b: call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000e7b82: call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0008d677: call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0013b40c: call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009a215: call dword ptr gs:[0x10]; ret; 
0x00024d41: call eax; 
0x00182edd: call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0002ad2b: call ebx; 
0x0009d121: call ebx; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x00129aa4: call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00106aa3: call ebx; ret 0x5721; 
0x00024e2e: call ecx; 
0x00025c6e: call edi; 
0x00026850: call edx; 
0x00127eae: call edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00129c96: call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00024dd7: call esi; 
0x00127e7d: call esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00165016: call ptr [0xec83000d]; adc al, 0x8d; xor bl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x000c0ad1: call ptr [eax - 1]; mov dh, 0x8c; add al, 0; add al, ch; ret 0xf626; 
0x00122c64: call ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00033bb8: call ptr [ebx + 0x5e]; cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x0007db34: call ptr [ebx + 0x5e]; mov eax, ecx; pop edi; ret; 
0x0002f213: call ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00060457: call ptr [ebx + 0x5e]; pop edi; ret; 
0x0003c1f1: call ptr [ebx + 0x5e]; ret; 
0x0010acb1: call ptr [ebx + 0xf]; inc esp; ret 0x2ec3; 
0x000a63ef: call ptr [ebx + 0xf]; inc esp; ret 0xc083; 
0x0007fc0b: call ptr [ebx - 0x75]; add bl, byte ptr [esi + 0x5f]; ret; 
0x0007b63f: call ptr [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x000e715f: call ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0007caa4: call ptr [ebx - 0x77]; ret 0x5f5e; 
0x0003be9a: call ptr [ecx + 0x5a]; ret; 
0x000b4e68: call ptr [edi + 0x5b]; ret; 
0x000b7602: call ptr [edi + 0x5e]; pop ebx; ret; 
0x000e8f91: call ptr [edi + ecx - 0x6c]; ret; 
0x001a3381: call ptr [edi]; add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001306ce: call ptr [edx + 0x59]; pop eax; ret; 
0x000396b3: call ptr [edx - 1]; je 0x396dc; and al, 0xe8; ret 0xfff5; 
0x000bfd6f: call ptr [esi + 0x5b]; ret; 
0x00098fb5: call ptr [esi + 0x5f]; pop ebp; ret; 
0x0005a7ea: call ptr [esi + 0x5f]; ret; 
0x0011d4d8: cdq; adc dword ptr [eax], eax; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0016fb23: cdq; add byte ptr [eax], al; add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00182edf: cdq; add esp, 0x10; add esp, 0xc; ret; 
0x00150597: cdq; bnd jmp dword ptr [ebp - 0x39]; 
0x000a6f13: cdq; call 0xc24e7f18; ret; 
0x00173903: cdq; clc; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0003002a: cdq; cmp edi, ecx; call dword ptr [eax + 0x56]; 
0x0003e858: cdq; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0017bf81: cdq; jbe 0x17bf7d; call dword ptr [edx - 0x77]; 
0x0017c7c1: cdq; jbe 0x17c7bd; call dword ptr [ecx - 0x77]; 
0x0017d146: cdq; jbe 0x17d142; call dword ptr [edx - 0x77]; 
0x000b6c4b: cdq; jmp ecx; 
0x000b6e63: cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000df1a7: cdq; out 0xff, al; call dword ptr [edi + 0x57]; 
0x00135a17: cdq; pop ecx; stc; call dword ptr [eax + 0x57]; 
0x0010dcdc: cdq; pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x0016fe85: cdq; pop ecx; stc; call dword ptr [edi + 0x56]; 
0x00081772: cdq; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00184bdc: cdq; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x000d7d2f: cdq; push edx; push eax; call 0xda4f0; add esp, 0x1c; ret; 
0x00086248: cdq; push edx; push eax; push ebx; call dword ptr [esi + 0x40]; 
0x001842ea: cdq; push edx; push eax; push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x000a6529: cdq; pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x00146f03: cdq; ret 0xffed; 
0x00086188: cdq; retf; sldt word ptr [ecx + 0x1b0c88c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x00058ee3: cdq; scasb al, byte ptr es:[edi]; std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x0009c9bb: cdq; stc; call dword ptr [eax + 0x68]; 
0x0009c104: cdq; stc; call dword ptr [eax - 0x18]; 
0x0009c02e: cdq; stc; call dword ptr [eax - 0x73]; 
0x0013e8c0: cdq; xor al, 0x84; stc; call dword ptr [eax + 0x53]; 
0x000ec671: clc; adc al, 0x77; dec ebx; mov edi, dword ptr [edx + eax*4 - 0x6fcf8]; add edi, edx; jmp edi; 
0x000f804a: clc; adc al, 0xf; xchg dword ptr [edi - 0x74ffffff], ecx; mov word ptr [edi - 0x6fa20], es; add ecx, edi; jmp ecx; 
0x0009c0ed: clc; add al, 0x74; fmul dword ptr [ebp - 0x666c379]; call dword ptr [eax - 0x73]; 
0x00065af8: clc; add al, 0x74; sbb ecx, dword ptr [ebx - 0x5af7b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0005a069: clc; add al, 0xf; xchg esp, eax; ret 0x48b; 
0x0009a13c: clc; add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0008e70c: clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0007e401: clc; add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0007e49c: clc; add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x001479ec: clc; add byte ptr [eax], al; add byte ptr [eax - 0x162676ed], cl; ret 0xfffb; 
0x0017a926: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x76], ah; stc; call dword ptr [eax - 0x18]; 
0x0017ae07: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x76], esp; stc; call dword ptr [eax - 0x18]; 
0x001016b8: clc; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x00082b26: clc; add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x0009e94f: clc; add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x0008174c: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x000301c4: clc; add cl, byte ptr [edi]; test byte ptr [edi - 0x7cffffff], dh; rol byte ptr [ecx], 0x83; ret; 
0x00175101: clc; add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x00158a52: clc; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x001519be: clc; add dh, byte ptr [ebp + 6]; mov eax, ecx; ret; 
0x00097bd5: clc; add dh, byte ptr [edi + 0xf]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001259e0: clc; add dh, byte ptr [esi + 0x2c]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0016e320: clc; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00051b84: clc; add dword ptr [eax], eax; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00152a41: clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0009adb4: clc; add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000e6f91: clc; add dword ptr [edi + 0x1b], edi; pop ebx; pop esi; pop edi; ret; 
0x0014bfcf: clc; add dword ptr [edi + 0x1d], edi; add esp, 4; pop ebx; pop esi; ret; 
0x001805c5: clc; add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000da4b4: clc; add dword ptr [edi + 0x20], edi; add esp, 8; pop ebx; ret; 
0x000e671b: clc; add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00041181: clc; add dword ptr [edi + 0x23], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00108780: clc; add dword ptr [edi + 0x24], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0018196f: clc; add dword ptr [edi + 0x25], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00151e5f: clc; add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x0017b7fe: clc; add dword ptr [edi + 0x26], edi; add esp, 8; pop ebx; ret; 
0x00108429: clc; add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x0008d899: clc; add dword ptr [edi + 0x3b], edi; pop ebx; pop esi; pop edi; ret; 
0x0015d003: clc; add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00151373: clc; add dword ptr [edi + 0x59], edi; pop ebx; pop esi; pop edi; ret; 
0x00127369: clc; add dword ptr [edi + 0xb], edi; add esp, 8; pop ebx; ret; 
0x0008b2a1: clc; add dword ptr [edi + 0xb], edi; ret; 
0x00097bf5: clc; add dword ptr [edi + 0xf], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008eec5: clc; add dword ptr [edi + 0xf], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015fd31: clc; add dword ptr [edi], ecx; test dword ptr [edi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x39]; 
0x0017652f: clc; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0008ea99: clc; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x000c1709: clc; add eax, 0x828d9974; lodsb al, byte ptr [esi]; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0013cb59: clc; add eax, 0xc; ret; 
0x000a470f: clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x00094e2d: clc; add eax, dword ptr [ecx]; ret 0x8966; 
0x000be8d5: clc; add eax, ecx; pop edi; ret; 
0x000bf341: clc; add ebp, dword ptr [ecx]; ret 0x4a8d; 
0x000bf386: clc; add ebp, dword ptr [ecx]; ret 0xc031; 
0x00192b1d: clc; add edi, edi; inc dword ptr [ecx + 0x41f6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008fb5c: clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000fc88d: clc; add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0008fbbe: clc; add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x0002fba8: clc; add esi, dword ptr [esp + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x000c1884: clc; and al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x000e976e: clc; and al, 0xf; xchg esp, eax; ret 0xd309; 
0x0003e331: clc; and byte ptr [ebx + esi - 0x77], dh; ret 0xc083; 
0x00093a4c: clc; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0008cb9e: clc; and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008d4e6: clc; and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0008e6cc: clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0019091d: clc; and edi, edi; inc dword ptr [ecx + 0x43eefc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ad938: clc; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x00196a68: clc; call 0x182d19; add ebx, 0x3e622; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a58: clc; call 0x182d19; add ebx, 0x3f472; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a88: clc; call 0x182d19; add ebx, 0x40282; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938b2: clc; call 0x182d19; add ebx, 0x411d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191752: clc; call 0x182d19; add ebx, 0x430b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f7b2: clc; call 0x182d19; add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00056136: clc; call dword ptr [eax + 0x51]; 
0x00047988: clc; call dword ptr [eax + 0x52]; 
0x000c5d87: clc; call dword ptr [eax + 0x55]; 
0x0005c6da: clc; call dword ptr [eax + 0x56]; 
0x000479e4: clc; call dword ptr [eax - 1]; 
0x0005c831: clc; call dword ptr [edx + 0x51]; 
0x000a9f26: clc; call dword ptr [esi + 0x50]; 
0x000c6ce9: clc; call dword ptr [esi + 0x53]; 
0x0008f702: clc; call dword ptr gs:[0x10]; 
0x0010acb0: clc; call ptr [ebx + 0xf]; inc esp; ret 0x2ec3; 
0x0013c588: clc; cmc; je 0x13c580; add esp, 8; pop ebx; ret; 
0x00190f1a: clc; cmp byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006d619: clc; dec dword ptr [ebp + 0x64450184]; jecxz 0x6d621; jmp eax; 
0x00094a75: clc; dec dword ptr [ebp - 0x15fef3a1]; jmp edx; 
0x000992b6: clc; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x000aae78: clc; dec dword ptr [ebp - 0x654ff70]; call dword ptr [edx - 0x73]; 
0x0006d612: clc; dec dword ptr [ebx - 0x29337e7c]; clc; dec dword ptr [ebp + 0x64450184]; jecxz 0x6d621; jmp eax; 
0x0013758c: clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x000a3df9: clc; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax - 0x58], esp; stc; call dword ptr [eax - 0x73]; 
0x0009e3c3: clc; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000a8f6d: clc; dec dword ptr [ebx - 0x76ebdbac]; ret; 
0x000c6863: clc; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x00134033: clc; dec dword ptr [ebx - 0x7cdbdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x00033b86: clc; dec dword ptr [edi]; inc esp; ret; 
0x001077e1: clc; dec dword ptr [edi]; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0012c530: clc; dec dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; in al, dx; add al, 0x89; ret; 
0x000c74af: clc; dec dword ptr [edi]; test byte ptr [ebp + 0x31000003], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00072e31: clc; dec dword ptr [edi]; test byte ptr [ebx], ch; sbb al, 0; add byte ptr [ecx], al; ret; 
0x00162aed: clc; dec dword ptr [edi]; test byte ptr [esi + edi*8 - 1], bh; call dword ptr [eax - 0x73]; 
0x00182ea3: clc; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x00163759: clc; dec dword ptr [edi]; xchg esp, eax; ret 0xd4e9; 
0x0007b5b7: clc; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000e4b77: clc; fidiv dword ptr [ebp + 0x35]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e493d: clc; fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00040f29: clc; imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0013c7e8: clc; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x00139054: clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009bbcb: clc; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x001087b5: clc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00120130: clc; inc dword ptr [ebx - 0x72aff33c]; or dword ptr [ebx], 0x66; stc; call dword ptr [eax + 0x6a]; 
0x0018954c: clc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00183047: clc; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [ecx + edi*4 - 0x77]; ret 0xe283; 
0x0009f342: clc; inc dword ptr [ebx - 0x7972f33c]; fdiv qword ptr [esi - 0x1a]; call dword ptr [eax + 0x57]; 
0x0009f366: clc; inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; ja 0x9f356; call dword ptr [eax + 0x57]; 
0x0009f31e: clc; inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; jbe 0x9f30e; call dword ptr [eax + 0x57]; 
0x0009f330: clc; inc dword ptr [ebx - 0x7972f33c]; pop esp; ja 0x9f320; call dword ptr [eax + 0x57]; 
0x0009f3ae: clc; inc dword ptr [ebx - 0x7972f33c]; pop esp; js 0x9f39e; call dword ptr [eax + 0x57]; 
0x00138f37: clc; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x0005aa39: clc; inc dword ptr [ecx]; bnd jmp edx; 
0x0003747c: clc; inc dword ptr [ecx]; cli; jmp edx; 
0x00071a77: clc; inc dword ptr [ecx]; int1; jmp ecx; 
0x00078780: clc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0006f30e: clc; inc dword ptr [ecx]; ret; 
0x000705f0: clc; inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0008c138: clc; inc dword ptr [ecx]; salc; jmp esi; 
0x00065828: clc; inc dword ptr [ecx]; stc; jmp ecx; 
0x0019fde3: clc; int1; call dword ptr [ebx - 0x18]; 
0x0019fde3: clc; int1; call dword ptr [ebx - 0x18]; sub eax, 0x81fffe2f; ret; 
0x000a5a65: clc; jae 0xa5a81; pop ebx; pop esi; pop edi; ret; 
0x00177896: clc; jb 0x177892; call dword ptr [eax + 0x6a]; 
0x001784b8: clc; jb 0x1784b4; call dword ptr [eax + 0x6a]; 
0x00178560: clc; jb 0x17855c; call dword ptr [eax + 0x6a]; 
0x0009e3ab: clc; jmp dword ptr [ebp - 1]; 
0x000fa42b: clc; jmp dword ptr [esi + 0xb]; 
0x000a8ddc: clc; jmp dword ptr [esi - 0x70]; 
0x001a4f9a: clc; jne 0x1a4fc0; pop edi; pop esi; pop ebx; ret; 
0x00173904: clc; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x000e4957: clc; ljmp 0xf00:0x3b8; inc ebp; ret 0x8dc3; 
0x001840f4: clc; mov ch, bh; jmp dword ptr [ecx]; 
0x0010e765: clc; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0011ba9d: clc; mov dl, 0xf9; call dword ptr [eax - 0x18]; 
0x0018c071: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000ffb42: clc; mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x00137362: clc; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x0018c4c7: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911a1: clc; mov eax, edx; pop ebx; ret; 
0x0019485b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019583b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0018f19c: clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019119c: clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0009a24b: clc; or al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0019201d: clc; or al, 0xff; inc dword ptr [ecx + 0x42a6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b6e04: clc; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008cc02: clc; or byte ptr [ebp + eax - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x0002561e: clc; or byte ptr [edi + 0x75], dh; mov ecx, dword ptr [esp + 4]; mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x0012a5a4: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012a563: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00097f7a: clc; or dh, byte ptr [esi + ecx*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x000a4299: clc; or dword ptr [edi + 0x23], esi; mov ecx, dword ptr [ebx + eax*4 - 0x71254]; add ecx, ebx; jmp ecx; 
0x00070737: clc; or dword ptr [edi], ecx; xchg dword ptr [0x8bfffff2], ebp; inc edx; add al, 0x83; ret 0x8304; 
0x00131326: clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0009e697: clc; or edi, dword ptr [eax + 8]; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x00151cb8: clc; outsb dx, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00154c4b: clc; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0011b554: clc; pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003bc0c: clc; pop ds; not eax; and eax, edx; ret; 
0x0003b917: clc; pop ds; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00189552: clc; pop ds; ret; 
0x0003b5a8: clc; pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x000bd68a: clc; pop ebx; pop edi; ret; 
0x00127c7d: clc; pop ebx; pop esi; pop ebp; ret; 
0x0002f6d8: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00060f39: clc; pop ebx; pop esi; pop edi; ret; 
0x00191b4e: clc; pop edi; call 0x182d19; add ebx, 0x42ffb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fb3e: clc; pop edi; call 0x182d19; add ebx, 0x44d8b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018db3e: clc; pop edi; call 0x182d19; add ebx, 0x46b0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003336d: clc; pop edi; pop ebp; ret; 
0x000b0cd2: clc; pop edi; pop ebx; ret; 
0x000b7881: clc; pop edi; pop esi; pop ebx; ret; 
0x000aeed5: clc; pop edi; ret; 
0x000333a0: clc; pop esi; pop edi; pop ebp; ret; 
0x0009608b: clc; push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00110c4c: clc; push dword ptr [eax - 0x77]; ret 0xbc8d; 
0x0010c08c: clc; push dword ptr [eax - 0x77]; ret 0xc085; 
0x00184649: clc; push dword ptr [ebx + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0011f703: clc; push dword ptr [ecx + edi*2 - 0x77]; ret; 
0x0018304d: clc; push dword ptr [ecx + edi*4 - 0x77]; ret 0xe283; 
0x0013e31d: clc; push dword ptr [edi + ebx*8 - 0x77]; ret; 
0x0017a69e: clc; push dword ptr [esi + ebx - 0x7b]; sar byte ptr [esi + 0x4a], 1; ret; 
0x0017b6d8: clc; push dword ptr [esp + ecx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00080b68: clc; push dword ptr [esp + edx - 0x75]; inc esi; adc al, 0xe9; ret; 
0x00083f98: clc; push dword ptr [esp - 0x7b]; sar byte ptr [eax + 0x30], 1; ret; 
0x0009e682: clc; push eax; jbe 0x9e690; ret; 
0x00041019: clc; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0018e49a: clc; pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005f92e: clc; sbb dword ptr [edi + 0xe], esi; mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x0012f109: clc; stc; call dword ptr [eax - 0x18]; 
0x0009450a: clc; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x000848db: clc; stc; jmp dword ptr [esi - 0x70]; 
0x00079304: clc; sub dword ptr [edi + 0x10], esi; mov edi, dword ptr [ebp + eax*4 - 0x719b8]; add edi, ebp; jmp edi; 
0x000beb57: clc; sub eax, 0x10; pop edi; ret; 
0x0009a001: clc; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00093aab: clc; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0004957d: clc; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x0007be50: clc; xchg edx, eax; stc; jmp dword ptr [ebp - 0x75]; 
0x000923c0: clc; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x0005c0da: clc; xor byte ptr [eax + ecx - 0x7b], dh; dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x000bf255: clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0008ec1a: clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00137359: clc; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x0011ff8a: cld; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x00088698: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x000367d3: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001a5304: cld; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001a2af0: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000f7e43: cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0009e5f2: cld; add eax, dword ptr [eax]; add byte ptr [esi + 8], dh; ret; 
0x0012ddc2: cld; add eax, ebx; pop ebx; pop esi; ret; 
0x0016a1c7: cld; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00127a84: cld; call dword ptr [eax - 0x73]; 
0x0016ec2e: cld; call dword ptr [ebp + 0x57]; 
0x001765de: cld; call dword ptr [ebx - 0x7d]; 
0x000f6185: cld; call dword ptr [edi - 1]; 
0x001692c3: cld; cld; jmp dword ptr [esi - 0x70]; 
0x000c3457: cld; cmc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0009f340: cld; cmp eax, 0xc483fff8; or al, 0x8d; xchg ah, bl; jbe 0x9f332; call dword ptr [eax + 0x57]; 
0x001a0d66: cld; cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x1a0fb0; pop ebx; ret; 
0x0019f5ef: cld; cmp ecx, ebx; mov eax, 0; jne 0x19fd70; pop ebx; ret; 
0x001a2421: cld; cmp ecx, ebx; mov eax, 0; jne 0x1a2650; pop ebx; ret; 
0x0009c03d: cld; cwde; stc; call dword ptr [eax - 0x18]; 
0x0016e9d2: cld; dec dword ptr [ebp - 0x68b7e7d]; call dword ptr [edi + 0x6a]; 
0x0005aa32: cld; dec dword ptr [ebx - 0x3763796c]; clc; inc dword ptr [ecx]; bnd jmp edx; 
0x000fb88d: cld; dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x00106778: cld; dec dword ptr [ecx]; retf 0x5489; ret; 
0x00124873: cld; fldz; call dword ptr [eax - 0x73]; 
0x000855b0: cld; in al, 0xe4; call dword ptr [eax - 0x73]; 
0x0006016c: cld; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000671a6: cld; inc edx; stc; call dword ptr [eax - 0x18]; 
0x000c1ae0: cld; jae 0xc1aea; add byte ptr [ebp - 0x654477b], cl; call dword ptr [eax - 0x73]; 
0x00117cbb: cld; jmp dword ptr [ebp - 0x77]; 
0x000549e7: cld; jmp dword ptr [esi - 0x70]; 
0x001a4fb5: cld; jne 0x1a4fc0; pop edi; pop esi; pop ebx; ret; 
0x001a50a7: cld; jne 0x1a50b0; pop ebx; ret; 
0x0015e453: cld; js 0x15e447; call dword ptr [eax - 0x73]; 
0x0015e505: cld; js 0x15e4f9; call dword ptr [eax - 0x73]; 
0x0015e5d3: cld; js 0x15e5c7; call dword ptr [eax - 0x73]; 
0x0016a1ca: cld; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0018cf29: cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0018f164: cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191164: cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0018f1b5: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911b5: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001a0d69: cld; mov eax, 0; jne 0x1a0fb0; pop ebx; ret; 
0x0018c074: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018d24d: cld; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018cf2d: cld; mov eax, edx; pop ebx; ret; 
0x00137299: cld; mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00176004: cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x000a7ae2: cld; nop; call 0xc24e8ae8; ret; 
0x00061607: cld; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00122eb6: cld; or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d017d], cl; call dword ptr [edx + 0x52]; 
0x000c3380: cld; or edi, esi; dec dword ptr [ebp - 0x6536f70]; call dword ptr [edx - 0x73]; 
0x000bfe65: cld; pop edi; ret; 
0x0016a2c6: cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0016a337: cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0009f4dc: cld; push ecx; stc; call dword ptr [eax + 0x53]; 
0x000f6ea0: cld; ret 0xfff2; 
0x00124450: cld; ret 0xfff3; 
0x001a50a2: cld; xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x1a50b0; pop ebx; ret; 
0x0008fdaf: cld; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008f671: cld; xor esi, esi; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x0004144f: cli; adc byte ptr [ecx], ch; ret 0xc269; 
0x0014a87e: cli; adc ch, byte ptr [ecx]; ret 0xd101; 
0x00029661: cli; add al, 0x74; adc eax, 0x8301c083; ret 0x8901; 
0x00028a81: cli; add al, 0x74; sbb byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00029081: cli; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00038520: cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0007ff2c: cli; add ch, bl; out dx, al; mov eax, 0xffffffff; pop ebx; ret; 
0x000dcc17: cli; add ch, byte ptr [ecx]; ret 0x48d; 
0x0008fc37: cli; add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x0008f646: cli; add dh, byte ptr [ebp - 0x77]; ret 0xe283; 
0x0008fd86: cli; add dh, byte ptr [ebx - 0x77]; ret 0xe283; 
0x0010980a: cli; add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008ea6e: cli; add dh, byte ptr [esi + 6]; ret; 
0x0008fad9: cli; add dh, byte ptr [esp - 0x77]; ret 0xe283; 
0x000961cd: cli; add dword ptr [ebp + 0x1f], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0008e979: cli; add dword ptr [ebx + edx - 0x7b], esi; sal byte ptr [ebp + 0x1f], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x000fd947: cli; add dword ptr [ecx + 0xf082454], ecx; sahf; ret 0x5420; 
0x0017b87c: cli; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x000e629a: cli; add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x000412b0: cli; add dword ptr [edi + 0x24], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017b8f8: cli; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x000924cf: cli; add dword ptr [edi + 0x25], edi; add esp, 0x18; pop ebx; ret; 
0x0003fa2e: cli; add dword ptr [edi + 0x26], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015d2fd: cli; add dword ptr [edi + 0x27], edi; add esp, 0x18; pop ebx; ret; 
0x000602df: cli; add dword ptr [edi + 0x35], edi; add esp, 0x18; pop ebx; ret; 
0x00150d6c: cli; add dword ptr [edi + 8], edi; ret; 
0x000a5e9f: cli; add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x00096ca6: cli; add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], ebx; ret 0xf283; 
0x00096ec6: cli; add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x00129e4b: cli; add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x000c70c2: cli; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc339; 
0x001572c6: cli; and byte ptr [esi + eax - 0x7b], dh; ret; 
0x001461d7: cli; and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd184; 
0x00146497: cli; and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd384; 
0x0008c544: cli; call dword ptr [eax + 0x6a]; 
0x0007be2e: cli; call dword ptr [ebp + 0x57]; 
0x0007b0fe: cli; call dword ptr [ebp - 0x77]; 
0x0007e8fe: cli; call dword ptr [ebx - 0x75]; 
0x0018b63e: cli; call dword ptr [ebx - 0x7d]; 
0x0008383e: cli; call dword ptr [edi + 0x56]; 
0x0003cf7b: cli; call dword ptr gs:[0x10]; 
0x00169429: cli; cld; jmp dword ptr [esi - 0x70]; 
0x0012cf91: cli; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000f7f73: cli; cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x000374af: cli; cmp byte ptr [edi], cl; test bl, bh; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ce06], al; ret 0; 
0x00025d5f: cli; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x00156051: cli; cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x0010a8e5: cli; cmp eax, 0x338870f; add byte ptr [eax], al; mov eax, dword ptr [ebx + edx*4 - 0x6f248]; add eax, ebx; jmp eax; 
0x000a607b: cli; cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0018f11b: cli; cmp edi, edi; inc dword ptr [ecx + 0x45471c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00181fcc: cli; das; ja 0x24a04; mov eax, dword ptr [ebp - 0x38]; add eax, dword ptr [eax + edx*4 - 0x6c854]; jmp eax; 
0x00093a75: cli; dec dword ptr [ebp - 0x682937f]; call dword ptr [eax - 0x73]; 
0x0011fbb1: cli; dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x00090d2d: cli; dec dword ptr [ebx - 0x72fbdb84]; xchg eax, eax; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x000e4ffb: cli; dec dword ptr [ebx - 0x76abdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000432b2: cli; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x00065df9: cli; dec dword ptr [edi]; inc ebp; ret 0x8589; 
0x0014fe49: cli; dec dword ptr [edi]; test byte ptr [edx + 0x39000001], ch; ret 0x840f; 
0x001701ab: cli; emms; adc dword ptr [ebx], eax; test byte ptr [eax - 0x6c910], dl; jmp eax; 
0x0016d61d: cli; emms; lsl eax, word ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x000937a2: cli; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x000e7007: cli; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a6eb2: cli; inc eax; ja 0xa6ebd; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a6ed2: cli; inc eax; ja 0xa6edd; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x00150767: cli; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x000f7e74: cli; jae 0xf7ec0; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0012a9ee: cli; je 0x12aa3c; pop ebx; pop esi; ret; 
0x00070887: cli; jg 0x70899; xchg esp, eax; ret 0xca08; 
0x0016cb32: cli; jmp dword ptr [ebp - 0x77]; 
0x0011301c: cli; jmp dword ptr [esi + 3]; 
0x0013df8f: cli; jmp dword ptr [esi - 0x3f]; 
0x0007a1b6: cli; jmp dword ptr [esi - 0x70]; 
0x0003747f: cli; jmp edx; 
0x0019453c: cli; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001945cc: cli; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019465c: cli; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946ec: cli; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019477c: cli; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019480c: cli; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019402c: cli; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001940bc: cli; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019414c: cli; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001941dc: cli; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019426c: cli; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001942fc: cli; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019438c: cli; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019441c: cli; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001944ac: cli; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00063dea: cli; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x000e5002: cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e4fcc: cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00111aac: cli; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011b9ef: cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0003d085: cli; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d03d: cli; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0006483d: cli; mov edi, eax; jmp edx; 
0x0012d10a: cli; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00063b1d: cli; mov edi, ecx; jmp edx; 
0x000e4f0c: cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0018c0b4: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f297: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191287: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0010ac82: cli; nop; bnd jmp dword ptr [esi - 0x70]; 
0x00158317: cli; or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x00097e86: cli; or dh, byte ptr [edx + eax*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x0008ca02: cli; or dh, byte ptr [edx + edx - 0x7d]; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0013a1b7: cli; or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x000638b9: cli; or dword ptr [edi], ecx; xchg dword ptr [edx - 0x76000008], esi; ret 0xc083; 
0x00038990: cli; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x001309ce: cli; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x001342db: cli; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0011befb: cli; pop ds; call dword ptr gs:[0x10]; 
0x0008819a: cli; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011802c: cli; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x001a31b2: cli; pop edi; ret; 
0x0006f792: cli; pop edx; jbe 0x70520; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00061793: cli; pop es; ja 0x61a48; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x0006d083: cli; pop es; ja 0x6d460; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x000881d0: cli; pop esi; pop edi; pop ebp; ret; 
0x000f7dd4: cli; push 0x65759123; ret; 
0x0003b91c: cli; push ds; and eax, edx; ret; 
0x0018497c: cli; push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x00164838: cli; push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0010a720: cli; push ecx; ja 0x10a930; mov eax, dword ptr [ebx + edx*4 - 0x6f390]; add eax, ebx; jmp eax; 
0x000eaa1c: cli; ret; 
0x000f7eb5: cli; ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x0019111b: cli; sbb edi, edi; inc dword ptr [ecx + 0x436f1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005a4a2: cli; scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000846e5: cli; stc; jmp dword ptr [esi - 0x70]; 
0x00146491: cli; sub al, 0xf; xchg ebp, eax; ret; 
0x0002ff78: cli; sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x00078774: cli; sub dword ptr [edi + 0x38], esi; movzx edx, dl; mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x000aaa3c: cli; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x000fbd5a: cli; xor eax, 0x48b4277; and al, 0xf; mov dh, 0xd2; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x000b5237: cmc; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000bf047: cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0014c928: cmc; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub al, 0xbf; stc; call dword ptr [eax - 0x18]; 
0x000d6eb1: cmc; and ch, 0xf; je 0xd6ed0; add eax, 2; ret; 
0x00128b76: cmc; arpl cx, di; call dword ptr [eax + 0x56]; 
0x000f7dca: cmc; bnd jge 0xf7e00; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf7e40; ret; 
0x00129aa3: cmc; call ebx; 
0x00129aa3: cmc; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000f7e42: cmc; cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000a94ba: cmc; cmp edx, esi; je 0xa94b0; pop ebx; pop esi; ret; 
0x000dbced: cmc; dec dword ptr [ebp - 0x651af7d]; call dword ptr [eax - 0x73]; 
0x0012cf92: cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012d037: cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000a6526: cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0012d233: cmc; dec dword ptr [ebx + 0x548b240c]; and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000d5b92: cmc; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x000d5c01: cmc; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x677e37a]; call dword ptr [eax - 0x73]; 
0x000d5bb7: cmc; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x0012d1f3: cmc; dec dword ptr [ecx + 0x240c8bef]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x000a6e4e: cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a654c: cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001ab83a: cmc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x000a7cb6: cmc; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe896; inc esp; ret 0x66c3; 
0x0016aa53: cmc; inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x16aa6b; push edi; call dword ptr [eax + 8]; 
0x000c3458: cmc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0016a2e6: cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00124e3e: cmc; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x001578e8: cmc; int1; call dword ptr [eax + 0x6a]; 
0x00158895: cmc; int1; call dword ptr [edx + 0x6a]; 
0x0013c589: cmc; je 0x13c580; add esp, 8; pop ebx; ret; 
0x000dbd2b: cmc; jmp dword ptr [esi - 0x70]; 
0x000f7f74: cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x000bae81: cmc; mov al, 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0018c577: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000a948a: cmc; pop ebx; ret; 
0x001a3172: cmc; pop edi; ret; 
0x00138901: cmc; push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf5587c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a6e41: cmc; push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf5588c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00084ce9: cmc; stc; jmp dword ptr [esi - 0x70]; 
0x001a2177: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0009e69e: cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x00097c4b: cmova eax, edx; ret; 
0x000e5de0: cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000e5c35: cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000c04f1: cmovb eax, ecx; ret; 
0x0008b80c: cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0008051f: cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0013cdbc: cmovb eax, edx; ret; 
0x00091051: cmovb ecx, eax; mov eax, 0x182; xor edx, edx; call dword ptr gs:[0x10]; 
0x0019ec2a: cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000923f4: cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00108896: cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0008c9bb: cmovbe edx, eax; xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x00082743: cmove eax, ecx; ret; 
0x000a6409: cmove eax, edx; add eax, 0x21; ret; 
0x000a63ba: cmove eax, edx; add eax, 1; ret; 
0x00121b45: cmove eax, edx; add esp, 0xc; ret; 
0x000428c5: cmove eax, edx; ret; 
0x00085039: cmove eax, esi; mov dword ptr [ecx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x001657bd: cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x00033bbb: cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x00132466: cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00032907: cmove edx, ecx; mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x00041218: cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x0004124f: cmove esi, eax; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0010afe9: cmove esi, ebx; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0007f2e7: cmovg eax, ecx; test edx, edx; jne 0x7f2e0; ret; 
0x00089107: cmovg eax, ecx; test edx, edx; jne 0x89100; ret; 
0x000c3e52: cmovg eax, edx; pop edi; ret; 
0x000c3e33: cmovg eax, edx; ret; 
0x000a3e73: cmovne eax, ecx; pop ebx; ret; 
0x000bf60e: cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a5ec7: cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x0007f391: cmovne eax, edx; mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000898dd: cmovne eax, edx; mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000a654e: cmovne eax, edx; pop ebx; ret; 
0x0004256f: cmovne eax, edx; ret; 
0x0005a8c4: cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012442b: cmovne ebx, eax; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0015338f: cmovne ebx, edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x000fa0f4: cmovne esi, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011f421: cmovns eax, edx; ret; 
0x0003fff7: cmovs eax, ecx; pop ebx; ret; 
0x00040196: cmovs eax, edx; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x001322fa: cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x0002822e: cmovs eax, edx; ret; 
0x0003fff4: cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00124872: cmp ah, 0xd9; out dx, al; call dword ptr [eax - 0x73]; 
0x001a0992: cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000f7ded: cmp ah, byte ptr [esi]; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000f7f4d: cmp ah, byte ptr [esi]; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x000f8238: cmp ah, byte ptr [esi]; je 0xf8228; mov eax, 0xffffffff; ret; 
0x0016ada2: cmp ah, cl; cld; jmp dword ptr [esi - 0x70]; 
0x000a2833: cmp al, 0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0011d4b7: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011d4b7: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0009e832: cmp al, 0; add byte ptr [ebp - 0x7cf88a37], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0009f25f: cmp al, 0; add byte ptr [ecx], al; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x000c09a5: cmp al, 0; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000c0db3: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x188b; 
0x000c0ca3: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x288b; 
0x000c18a4: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000c0d68: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000c1e1d: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x00036d1a: cmp al, 0x14; ja 0x36d2c; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e7c]; add esi, edi; jmp esi; 
0x00036de2: cmp al, 0x14; ja 0x36df4; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77dd4]; add esi, edi; jmp esi; 
0x00036e1d: cmp al, 0x14; ja 0x36e2f; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77d80]; add esi, edi; jmp esi; 
0x00036db5: cmp al, 0x14; ja 0x3736c; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x0003739c: cmp al, 0x14; ja 0x37403; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77d2c]; add esi, edi; jmp esi; 
0x000374e3: cmp al, 0x14; ja 0x37537; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77bdc]; add edx, edi; jmp edx; 
0x00103b7f: cmp al, 0x16; je 0x1049ce; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x000331a9: cmp al, 0x20; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000473a0: cmp al, 0x24; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00046f2c: cmp al, 0x24; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x00182d16: cmp al, 0x24; ret; 
0x000fd844: cmp al, 0x29; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x0013793d: cmp al, 0x29; ret 0x4489; 
0x000f7569: cmp al, 0x2a; je 0xf7571; cmp al, 0x3f; jne 0xf7589; mov eax, 1; ret; 
0x0011a6e0: cmp al, 0x2f; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000801d2: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x001856a0: cmp al, 0x38; sti; jmp dword ptr [esi - 0x70]; 
0x000d6c92: cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x0013d303: cmp al, 0x39; ret; 
0x000f756d: cmp al, 0x3f; jne 0xf7589; mov eax, 1; ret; 
0x000c2387: cmp al, 0x50; lea eax, [esp + 0x44]; push eax; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x0008c599: cmp al, 0x51; call eax; 
0x0008c427: cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x000825e9: cmp al, 0x52; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000826c8: cmp al, 0x52; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0008890f: cmp al, 0x55; call dword ptr [esi + 0x20]; 
0x00171b4f: cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x000fbe12: cmp al, 0x56; ja 0xfbee0; mov ebx, dword ptr [esp]; movzx eax, al; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x00170dfb: cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0017d660: cmp al, 0x5b; ljmp 0xec83:0x10c483ff; or byte ptr [ebp - 0x689497d], cl; call dword ptr [ebp + 0x50]; 
0x000c4a79: cmp al, 0x5b; pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x000cf1db: cmp al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x001aef5f: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x00026da5: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00120f02: cmp al, 0x5b; ret; 
0x000a6da4: cmp al, 0x61; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00173010: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x17301e; add esp, 0x4c; ret; 
0x00173080: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x17308e; add esp, 0x4c; ret; 
0x001730f0: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1730fe; add esp, 0x4c; ret; 
0x00173153: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x173161; add esp, 0x4c; ret; 
0x001731b3: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1731c1; add esp, 0x4c; ret; 
0x00173220: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x17322e; add esp, 0x4c; ret; 
0x001732a0: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1732ae; add esp, 0x4c; ret; 
0x0011b1b6: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x11b1c7; movzx eax, al; add esp, 0x4c; ret; 
0x00172fa0: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x172fae; add esp, 0x4c; ret; 
0x000d7ca2: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0xd7cb1; add esp, 0x48; pop ebx; ret; 
0x0007cbe8: cmp al, 0x6d; cli; jmp dword ptr [esi - 0x70]; 
0x000928e5: cmp al, 0x72; add al, 0x39; ret 0x6f72; 
0x000d6c95: cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x0015f7cc: cmp al, 0x7a; int1; call dword ptr [eax - 0x73]; 
0x00089ed2: cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x89ed0; ret; 
0x00027e99: cmp al, 0x80; stc; jmp dword ptr [esi - 0x77]; 
0x001466fd: cmp al, 0x81; les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002a9f5: cmp al, 0x81; stc; call dword ptr [eax - 0x18]; 
0x000f8c13: cmp al, 0x82; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0002b5c0: cmp al, 0x82; stc; call dword ptr [eax - 0x73]; 
0x001715a7: cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0008f143: cmp al, 0x83; in al, dx; or al, 0xff; jae 0x8f14e; call dword ptr [ebx]; 
0x000ce9bb: cmp al, 0x83; in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0008a1c3: cmp al, 0x83; in al, dx; or byte ptr [esi + 0x53], dl; call dword ptr [edi + 0x18]; 
0x0007f396: cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0007f843: cmp al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00031896: cmp al, 0x83; stc; call dword ptr [eax - 0x18]; 
0x00033dc7: cmp al, 0x84; stc; call dword ptr [esi + 0x50]; 
0x00059773: cmp al, 0x89; call 0x5d64f5d5; ret; 
0x000cf066: cmp al, 0x89; call 0x5d6c4ec8; ret; 
0x000e5162: cmp al, 0x89; call 0x5d6dafc4; ret; 
0x0012d966: cmp al, 0x89; call 0x5d7237c8; ret; 
0x0013ddca: cmp al, 0x89; call 0x5d733c2c; ret; 
0x00051575: cmp al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0011e2f0: cmp al, 0x89; inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0012dd0d: cmp al, 0x89; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010b1c6: cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00092dfb: cmp al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000a5c90: cmp al, 0x89; ret 0x448b; 
0x00113053: cmp al, 0x89; ret 0x44c7; 
0x0017e442: cmp al, 0x89; ret 0x489; 
0x0012239f: cmp al, 0x89; ret 0xfdb8; 
0x00026b05: cmp al, 0x89; ret; 
0x0003448a: cmp al, 0x8b; add al, 0x90; ret; 
0x000791d2: cmp al, 0x8b; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x789; 
0x0007f81f: cmp al, 0x8b; dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00041a1d: cmp al, 0x8b; inc eax; inc eax; ret; 
0x0002ef9f: cmp al, 0x8b; inc esp; and al, 0x34; call eax; 
0x0012b5f0: cmp al, 0x8b; je 0x12b618; push esp; mov ebx, dword ptr [esp + 0x50]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0013d238: cmp al, 0x8b; jl 0x13d260; sbb al, 0x39; ret; 
0x0002dd21: cmp al, 0x8b; jl 0x2dd49; adc byte ptr [ecx - 0x76f3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x00120e6a: cmp al, 0x8b; push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0009ee3d: cmp al, 0x8d; or ah, 0x9a; stc; call dword ptr [eax + 0x6a]; 
0x00028718: cmp al, 0x8d; or dword ptr [esp + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x0002865a: cmp al, 0x8d; or dword ptr [esp + edi*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0002b6a0: cmp al, 0x8d; xchg ah, cl; jp 0x2b69f; call dword ptr [eax - 0x73]; 
0x000299f2: cmp al, 0x8d; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x00029872: cmp al, 0x8d; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000299ac: cmp al, 0x8d; xchg byte ptr [edx + eax*4 - 7], dh; call dword ptr [eax - 0x73]; 
0x0002b5ee: cmp al, 0x8d; xchg byte ptr [edx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x00029ea5: cmp al, 0x8d; xchg dword ptr [ebx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002b5bd: cmp al, 0x8d; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x00170dad: cmp al, 0x8d; xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x00028c77: cmp al, 0x8d; xchg esp, ebp; jnp 0x28c76; call dword ptr [eax - 0x73]; 
0x00028d9f: cmp al, 0x8d; xchg esp, ebp; jnp 0x28d9e; call dword ptr [eax - 0x73]; 
0x00028dc2: cmp al, 0x8d; xchg esp, ebp; jnp 0x28dc1; call dword ptr [eax + 0x68]; 
0x00028de5: cmp al, 0x8d; xchg esp, ebp; jnp 0x28de4; call dword ptr [eax + 0x68]; 
0x00028df7: cmp al, 0x8d; xchg esp, ebp; jnp 0x28df6; call dword ptr [eax - 0x73]; 
0x0002af7b: cmp al, 0x8d; xchg esp, ecx; jp 0x2af7a; call dword ptr [eax - 0x73]; 
0x0002b0a8: cmp al, 0x8d; xchg esp, ecx; jp 0x2b0a7; call dword ptr [eax - 0x73]; 
0x0002b657: cmp al, 0x8d; xchg esp, ecx; jp 0x2b656; call dword ptr [eax + 0x68]; 
0x0002b67a: cmp al, 0x8d; xchg esp, ecx; jp 0x2b679; call dword ptr [eax + 0x68]; 
0x00107197: cmp al, 0x90; add byte ptr [edi], cl; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x00063de7: cmp al, 0x90; mov edx, edi; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00063b1a: cmp al, 0x90; mov edx, edi; mov edi, ecx; jmp edx; 
0x00084531: cmp al, 0x93; stc; call dword ptr [eax - 0x73]; 
0x0009c0f3: cmp al, 0x99; stc; call dword ptr [eax - 0x73]; 
0x000a2d75: cmp al, 0xa6; stc; call dword ptr [eax - 0x18]; 
0x000a3df1: cmp al, 0xa8; stc; call dword ptr [eax - 0x18]; 
0x000e8a99: cmp al, 0xaf; stc; call dword ptr [eax - 0x73]; 
0x0012a4b6: cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ba06: cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b466: cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008d5a3: cmp al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00111ddf: cmp al, 0xba; add dword ptr [ecx], 0xa30f0800; ret 0x920f; 
0x0014b784: cmp al, 0xbf; stc; call dword ptr [eax - 0x73]; 
0x0014c91c: cmp al, 0xc0; stc; call dword ptr [eax - 0x73]; 
0x0014ea0f: cmp al, 0xc2; stc; call dword ptr [eax - 0x73]; 
0x00182b84: cmp al, 0xc; ja 0x24a13; movzx eax, al; add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x0006073f: cmp al, 0xc; ret 0xff50; 
0x001776f7: cmp al, 0xca; stc; call dword ptr [eax - 0x18]; 
0x0013882a: cmp al, 0xce; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000344e1: cmp al, 0xe8; adc al, 0; add eax, 0x20292f; mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x00119dc7: cmp al, 0xe8; jecxz 0x119d87; cld; jmp dword ptr [ebp - 0x77]; 
0x00118d27: cmp al, 0xe8; or ebp, 0xfffffffc; jmp dword ptr [ebp - 0x77]; 
0x0002cd57: cmp al, 0xf6; ret 0x7501; 
0x0011181b: cmp al, 0xf9; call dword ptr [eax + 0x55]; 
0x0013f11e: cmp al, 0xf9; call dword ptr [eax + 0x56]; 
0x00031ae6: cmp al, 0xf9; call dword ptr [eax - 0x18]; 
0x00137782: cmp al, 0xf9; call dword ptr [eax - 0x73]; 
0x00103932: cmp al, 0xf9; dec dword ptr [ebp - 0x6b0bf71]; call dword ptr [eax - 0x17]; 
0x0003f9c8: cmp al, 0xf9; dec dword ptr [ebp - 0x6c0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003f746: cmp al, 0xf9; dec dword ptr [ecx - 0x14d3dbbc]; mov ebx, 0x3cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003f6f3: cmp al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003f3de: cmp al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x0003f499: cmp al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003f2d5: cmp al, 0xf9; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x00154efc: cmp al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0008be0e: cmp al, 0xf9; inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x0008bd9d: cmp al, 0xf9; inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x00032785: cmp al, 0xf9; jmp dword ptr [ebp - 0x75]; 
0x000d881b: cmp al, 0xf; xchg esp, eax; ret 0xd338; 
0x0012cf90: cmp al, 0xfa; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00036ded: cmp al, 0xff; add esi, edi; jmp esi; 
0x000a7cb4: cmp al, 0xff; cmc; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe896; inc esp; ret 0x66c3; 
0x0018f0fe: cmp al, 0xff; inc dword ptr [ecx + 0x4548fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f065: cmp al, 0xff; inc dword ptr [ecx + 0x45528c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002ef9b: cmp al, 0xff; je 0x2efc3; cmp al, 0x8b; inc esp; and al, 0x34; call eax; 
0x0006f36a: cmp al, 1; add byte ptr [eax], al; add byte ptr [ebx - 0x27b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x0012ba08: cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e5e55: cmp al, 1; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x0012b9c5: cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000d821c: cmp al, 1; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0011f34a: cmp al, 1; ret 0x1389; 
0x000a8731: cmp al, 1; ret; 
0x00190b2b: cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001829d8: cmp al, 4; jne 0x24a09; mov eax, 8; add esp, 0xc; ret; 
0x00122b32: cmp al, byte ptr [eax + eax]; add byte ptr [ebx - 0x7c72f714], al; push ebp; popal; stc; call dword ptr [eax + 0x55]; 
0x00190d14: cmp al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00067378: cmp al, byte ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x0004015b: cmp al, byte ptr [eax]; jne 0x40168; add esp, 4; pop ebx; pop esi; ret; 
0x0016ae45: cmp al, byte ptr [ebx + 0x438b08ec]; add al, 0xff; je 0x16ae73; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0013ab19: cmp al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001747b2: cmp al, byte ptr [ebx]; in al, dx; call dword ptr [eax - 0x73]; 
0x000bfbbd: cmp al, byte ptr [edx - 1]; jne 0xbfd6b; pop esi; xor eax, eax; pop ebx; ret; 
0x0019f571: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x19fd86; pop ebx; ret; 
0x001a263b: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a2670; pop ebx; ret; 
0x0009fd8f: cmp al, byte ptr [esp + esi*2]; sub eax, 0x8d04ec83; test dword ptr [eax + 0x52], ecx; stc; call dword ptr [eax + 0x53]; 
0x0012c97e: cmp al, ch; dec esp; add dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00088301: cmp al, ch; fnstenv [edx]; or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00158854: cmp al, ch; inc esi; ret 0xfff4; 
0x0017efd8: cmp al, ch; ret 0xfa05; 
0x000bee55: cmp al, dh; pop edi; ret; 
0x00031b09: cmp bh, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x0003b4d6: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x0008875a: cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x000c22f1: cmp bh, bh; jb 0xc22fd; call ebx; 
0x000c2391: cmp bh, bh; jb 0xc239d; call ebx; 
0x00145684: cmp bh, bh; jmp dword ptr [esi - 0x70]; 
0x000286a2: cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00028728: cmp bh, cl; call dword ptr [eax - 0x73]; 
0x000c3ae4: cmp bh, cl; jmp dword ptr [ebp - 0x75]; 
0x0019f23e: cmp bh, dh; inc dword ptr [ecx + 0x3600fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00065d04: cmp bl, 0x20; ja 0x65d2d; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72c7c]; jmp eax; 
0x0012747a: cmp bl, 0xff; call dword ptr [eax - 0x18]; 
0x000eeb8c: cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000ef21a: cmp bl, 0xff; call dword ptr [edx - 0x77]; 
0x00127467: cmp bl, 0xff; dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x000ef3ef: cmp bl, 0xff; dec dword ptr [ebx - 0x4776b]; call dword ptr [edi - 1]; 
0x00077644: cmp bl, 0xff; dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ecx - 0x4f74b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x000f0016: cmp bl, 0xff; dec dword ptr [ecx - 0x49b7b]; dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x000510ab: cmp bl, 0xff; dec dword ptr [ecx - 0x76b3db84]; ret; 
0x000eed92: cmp bl, 0xff; inc dword ptr [ecx]; ret; 
0x001856a1: cmp bl, bh; jmp dword ptr [esi - 0x70]; 
0x000b8368: cmp bl, bl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007db22: cmp bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0016bad2: cmp bl, byte ptr [ebx - 0x3b7d0000]; adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x00085fe3: cmp bl, ch; ret 0x8d2e; 
0x0011e6bb: cmp byte ptr [0xffffeff0], ah; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x00125504: cmp byte ptr [eax + 0x14d], bh; call dword ptr gs:[0x10]; 
0x00125da4: cmp byte ptr [eax + 0x14e], bh; call dword ptr gs:[0x10]; 
0x00035b4c: cmp byte ptr [eax + 0x39], 0xf9; call dword ptr [eax - 0x73]; 
0x00027e8f: cmp byte ptr [eax + 0x4389fff9], al; or byte ptr [edi], cl; mov bh, 0x85; cmp al, 0x80; stc; jmp dword ptr [esi - 0x77]; 
0x0008631b: cmp byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x0012cd36: cmp byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0012de73: cmp byte ptr [eax + 0x75], bh; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012f3a9: cmp byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000f8384: cmp byte ptr [eax + 0xb4], bh; call dword ptr gs:[0x10]; 
0x000f8524: cmp byte ptr [eax + 0xb5], bh; call dword ptr gs:[0x10]; 
0x00147972: cmp byte ptr [eax + 0xffffff], 0xf; inc esp; ret; 
0x000f8c14: cmp byte ptr [eax + 1], 0x5b; pop esi; pop edi; ret; 
0x001a486f: cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0014c91b: cmp byte ptr [eax + eax*8], 0xf9; call dword ptr [eax - 0x73]; 
0x000a19d8: cmp byte ptr [eax + eax], al; add bl, ch; ret 0x9066; 
0x00190f1b: cmp byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010730f: cmp byte ptr [eax - 0x75000000], 0x10; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00162ea4: cmp byte ptr [eax - 3], ah; jmp dword ptr [esi - 0x70]; 
0x000fa968: cmp byte ptr [eax - 7], bl; call dword ptr [eax + 0x55]; 
0x00034a7d: cmp byte ptr [eax], 0; jne 0x34a90; mov eax, edx; add esp, 0xc; ret; 
0x00034abd: cmp byte ptr [eax], 0; jne 0x34ad0; mov eax, edx; add esp, 0xc; ret; 
0x000b55d2: cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b4e63: cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000bee85: cmp byte ptr [eax], ah; pop edi; ret; 
0x00170d97: cmp byte ptr [eax], al; add byte ptr [eax], al; add bh, bh; jne 0x170def; push edi; call dword ptr [eax + 0x14]; 
0x00118117: cmp byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1772; 
0x0013381e: cmp byte ptr [eax], al; add byte ptr [ebx + 0x57500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00100f21: cmp byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00034a7e: cmp byte ptr [eax], al; jne 0x34a90; mov eax, edx; add esp, 0xc; ret; 
0x00034abe: cmp byte ptr [eax], al; jne 0x34ad0; mov eax, edx; add esp, 0xc; ret; 
0x0018187e: cmp byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; jne 0x181890; pop ebx; ret; 
0x001a08e6: cmp byte ptr [eax], al; ret 0xf66; 
0x000bee75: cmp byte ptr [eax], dl; pop edi; ret; 
0x000d6c8a: cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0014c9da: cmp byte ptr [ebp + 0x6c], 0xf9; call dword ptr [eax - 0x73]; 
0x0009091b: cmp byte ptr [ebp - 0x66c5b80], cl; call dword ptr [eax - 0x18]; 
0x0002a999: cmp byte ptr [ebp - 0x67da779], cl; call dword ptr [eax - 0x73]; 
0x0002a964: cmp byte ptr [ebp - 0x6851379], cl; call dword ptr [eax + 0x68]; 
0x0002a628: cmp byte ptr [ebp - 0x6851379], cl; call dword ptr [eax - 0x73]; 
0x0002dfe8: cmp byte ptr [ebp - 0x685d379], cl; call dword ptr [eax + 0x68]; 
0x0002de77: cmp byte ptr [ebp - 0x685d379], cl; call dword ptr [eax - 0x73]; 
0x0002e00b: cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax - 0x73]; 
0x00163870: cmp byte ptr [ebp - 0x68d8380], cl; jmp dword ptr [ebp - 0x75]; 
0x0010b9f3: cmp byte ptr [ebp - 0x6a6cb7d], cl; call dword ptr [eax - 0x18]; 
0x000c3ae0: cmp byte ptr [ebp - 0x6c5dc48], cl; jmp dword ptr [ebp - 0x75]; 
0x0015d725: cmp byte ptr [ebp - 0x76db8b40], al; ret; 
0x000acf1e: cmp byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0004a66b: cmp byte ptr [ebx + 0x108247c], cl; ret 0xd389; 
0x0004716b: cmp byte ptr [ebx + 0x10c247c], cl; ret 0xd389; 
0x0014a5f5: cmp byte ptr [ebx + 0x29482454], cl; ret 0x4c8b; 
0x00154707: cmp byte ptr [ebx + 0x39082444], cl; ret 0xc074; 
0x0002db53: cmp byte ptr [ebx + 0x390c2444], cl; ret 0x840f; 
0x0002cbd3: cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x000a1ae8: cmp byte ptr [ebx + 0x39142444], cl; ret 0x840f; 
0x00041a1a: cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x00175c77: cmp byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016adc7: cmp byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x000be321: cmp byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000a636d: cmp byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0007fd02: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0003b710: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; fsubp st(1); ret; 
0x0003b742: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x001448cb: cmp byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000715fb: cmp byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00031895: cmp byte ptr [ebx + eax*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000e41f7: cmp byte ptr [ebx + ecx*4], al; je 0xe4220; cmp byte ptr [ecx], ch; ret 0xc889; 
0x0008c28f: cmp byte ptr [ebx - 0x3b7ce3c0], cl; and al, 0x5b; pop esi; jmp eax; 
0x0012a4b2: cmp byte ptr [ebx - 0x47c3db8c], cl; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ba02: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b462: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00073479: cmp byte ptr [ebx - 0x52b7b], cl; inc dword ptr [ecx]; fdivr dword ptr [ecx]; ret 0x830f; 
0x00117f7d: cmp byte ptr [ebx - 0x6bf0fc02], al; ret 0x98e9; 
0x0011d726: cmp byte ptr [ebx - 0x749fdba4], cl; je 0x11d752; insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0010b1c2: cmp byte ptr [ebx - 0x76c3db8c], cl; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012239b: cmp byte ptr [ebx - 0x76c3dbb4], cl; ret 0xfdb8; 
0x000e946f: cmp byte ptr [ebx - 0x76ebdba4], cl; ret 0x2db9; 
0x00125230: cmp byte ptr [ebx - 0x76fbdb84], cl; inc esp; and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125ad0: cmp byte ptr [ebx - 0x76fbdb84], cl; inc esp; and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00063d05: cmp byte ptr [ebx - 0x7ae3dbbc], cl; ror byte ptr [edi], 0x85; ret 3; 
0x000a249f: cmp byte ptr [ebx - 7], dl; call dword ptr [eax - 0x18]; 
0x00140cf5: cmp byte ptr [ebx], 0x2e; je 0x140d00; add esp, 8; pop ebx; ret; 
0x0009dae0: cmp byte ptr [ebx], 0x2f; jne 0x9db28; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0010a8e9: cmp byte ptr [ebx], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + edx*4 - 0x6f248]; add eax, ebx; jmp eax; 
0x0009972b: cmp byte ptr [ecx + 0x124c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a149c: cmp byte ptr [ecx + 0x39142444], cl; ret 0x840f; 
0x0011e2ed: cmp byte ptr [ecx + 0x42893c7a], cl; xor al, 0x5b; pop esi; pop edi; ret; 
0x0012bbe1: cmp byte ptr [ecx + 5], dh; add byte ptr [ecx + 0x10b22fc2], al; add byte ptr [ebx - 0x48], dl; ret; 
0x000dec0f: cmp byte ptr [ecx - 0x16bfdbbc], cl; xchg edi, eax; in al, 0xff; push esi; ret; 
0x0014a679: cmp byte ptr [ecx - 0x17267618], cl; sbb eax, 0x89fffffb; mov byte ptr [ebx - 0x7af0fe08], 0x5b; or eax, dword ptr [eax]; add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x000a64f3: cmp byte ptr [ecx - 0x1a7f000a], 2; lea edx, [edx - 0x177374]; cmove eax, edx; ret; 
0x0012dd05: cmp byte ptr [ecx - 0x74ebdbbc], cl; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000cc8b3: cmp byte ptr [ecx - 0x76227612], cl; ret; 
0x00170a98: cmp byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0018e3dd: cmp byte ptr [ecx - 1], cl; inc dword ptr [ecx + 0x461afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015f68e: cmp byte ptr [ecx - 7], dh; call dword ptr [eax + 0x6a]; 
0x001657ba: cmp byte ptr [ecx], 0; cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x0012f0c9: cmp byte ptr [ecx], 0; je 0x12f0d0; ret; 
0x000a6da3: cmp byte ptr [ecx], 0xf5; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0008cce0: cmp byte ptr [ecx], al; je 0x8cce8; ret; 
0x000b55d3: cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000b4e64: cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000d6c87: cmp byte ptr [ecx], bh; dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0007c1a2: cmp byte ptr [ecx], bh; ret; 
0x00121444: cmp byte ptr [ecx], ch; int1; jmp dword ptr [esi - 0x70]; 
0x000e41fc: cmp byte ptr [ecx], ch; ret 0xc889; 
0x000e0598: cmp byte ptr [ecx], ch; sar byte ptr [ecx], 1; ret; 
0x001a4f87: cmp byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a6f07: cmp byte ptr [edi + ebp*4 - 0x19], 0xff; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x000a7cb3: cmp byte ptr [edi + edi*8], 0xf5; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe896; inc esp; ret 0x66c3; 
0x0017f272: cmp byte ptr [edi - 7], dh; call dword ptr [eax - 0x18]; 
0x00035358: cmp byte ptr [edi], 0x3e; stc; call dword ptr [eax - 0x18]; 
0x000320a7: cmp byte ptr [edi], cl; add byte ptr [edx - 3], 0xff; jmp dword ptr [esi - 0x70]; 
0x000253cf: cmp byte ptr [edi], cl; dec ecx; ret 0xc789; 
0x0003fe12: cmp byte ptr [edi], cl; inc ebp; ret; 
0x00078777: cmp byte ptr [edi], cl; mov dh, 0xd2; mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x000374b0: cmp byte ptr [edi], cl; test bl, bh; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ce06], al; ret 0; 
0x000cdf59: cmp byte ptr [edi], cl; xchg edx, eax; ret 0x7439; 
0x0019f338: cmp byte ptr [edi], dl; ret 0x2c73; 
0x0019fcf9: cmp byte ptr [edi], dl; ret 0x3273; 
0x0019f323: cmp byte ptr [edi], dl; ret 0x3e73; 
0x0019fcdf: cmp byte ptr [edi], dl; ret 0x4c73; 
0x0019f30e: cmp byte ptr [edi], dl; ret 0x5073; 
0x0019f2f9: cmp byte ptr [edi], dl; ret 0x6273; 
0x0019fcc5: cmp byte ptr [edi], dl; ret 0x6673; 
0x0019ec94: cmp byte ptr [edi], dl; ret 0x830f; 
0x00184d1a: cmp byte ptr [edx + 0x56], dl; call dword ptr [eax + 0x48]; 
0x00031d87: cmp byte ptr [edx + 0x66], dh; cmp edi, 0xc; ja 0x32232; mov ecx, dword ptr [ebx + edi*4 - 0x86994]; add ecx, ebx; jmp ecx; 
0x001a4a2c: cmp byte ptr [edx + 0xb], 0; je 0x1a4ab2; mov eax, 0xc; pop edi; ret; 
0x001a4a64: cmp byte ptr [edx + 0xf], 0; je 0x1a4ac6; mov eax, 0x10; pop edi; ret; 
0x00199b94: cmp byte ptr [edx + 0xf], cl; jne 0x1999f0; pop ebp; xor eax, eax; ret; 
0x0013cfc9: cmp byte ptr [edx + 2], 0; jne 0x13cfd5; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0016538a: cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x0006053a: cmp byte ptr [edx + eax], 0; add esp, 0x2c; ret; 
0x0008b2ef: cmp byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0016383e: cmp byte ptr [edx + esi*2 - 7], 0xff; push eax; push 0; call 0x150d90; add esp, 0x1c; ret; 
0x000f7a94: cmp byte ptr [edx - 0x3b7c0004], cl; adc byte ptr [ebp - 0x74e28b40], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6a7fd80], cl; call dword ptr [eax + 0x53]; 
0x000c19a0: cmp byte ptr [edx - 1], dl; je 0xc19c9; xor bh, bh; aaa; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00161f8c: cmp byte ptr [edx - 7], dh; call dword ptr [eax - 0x18]; 
0x0004015a: cmp byte ptr [edx], 0; jne 0x40168; add esp, 4; pop ebx; pop esi; ret; 
0x00170a91: cmp byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00089dff: cmp byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0016769e: cmp byte ptr [esi + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016776e: cmp byte ptr [esi + 0x73], 0xf9; call dword ptr [eax - 0x18]; 
0x001676d2: cmp byte ptr [esi + 0x73], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x0018df5a: cmp byte ptr [esi + 4], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016d863: cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x00193c5a: cmp byte ptr [esi], 0xfa; jmp dword ptr [esi - 0x70]; 
0x00129b2d: cmp byte ptr [esi], ah; je 0x129b4f; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x000f7ced: cmp byte ptr [esi], ah; jne 0xf7d90; mov eax, edx; pop ebx; ret; 
0x001909da: cmp byte ptr [esi], bh; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00042397: cmp byte ptr [esi], dl; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00042305: cmp byte ptr [esi], dl; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00042369: cmp byte ptr [esi], dl; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000422d7: cmp byte ptr [esi], dl; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00108373: cmp byte ptr [esp + 0x17], 0; jne 0x108420; call ecx; 
0x000a9c97: cmp byte ptr [esp + eax*2 - 0x18], 0xff; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1785e4]; cmove eax, edx; ret; 
0x000ef4c7: cmp byte ptr [esp + ebp*2], 0xeb; call dword ptr [eax + 0x6a]; 
0x000d1c23: cmp byte ptr [esp + ebx*8 - 0x1a7f000a], 2; lea edx, [edx - 0x15fe54]; cmove eax, edx; ret; 
0x00042396: cmp byte ptr ss:[esi], dl; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00128dc2: cmp ch, 0xff; dec dword ptr [ebp - 0x64a677d]; call dword ptr [eax - 0x73]; 
0x0006340a: cmp ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x000320ca: cmp ch, 0xff; push esi; ret 0xf03; 
0x000ece78: cmp ch, bh; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x0019f4c4: cmp ch, bh; mov eax, 0; jne 0x19fd86; pop ebx; ret; 
0x001a259a: cmp ch, bh; mov eax, 0; jne 0x1a2670; pop ebx; ret; 
0x00139052: cmp ch, byte ptr [ebp - 8]; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00155600: cmp ch, byte ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x000c07d0: cmp cl, 0; je 0xc07d6; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x00078822: cmp cl, 0x2e; ja 0x78850; movzx ecx, cl; mov edi, dword ptr [ebp + ecx*4 - 0x71b54]; add edi, ebp; jmp edi; 
0x00063e89: cmp cl, 0x5a; jbe 0x64824; mov edi, eax; jmp edx; 
0x000cd78a: cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0010fcb2: cmp cl, 0xff; lea esi, [esi]; xor eax, eax; ret; 
0x0010bfcc: cmp cl, bh; call dword ptr [eax + 0x6a]; 
0x00025d60: cmp cl, bh; call dword ptr [eax - 0x18]; 
0x00024eb5: cmp cl, bh; call dword ptr [eax - 1]; 
0x00156052: cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x0003029e: cmp cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0019f428: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x19fd86; pop ebx; ret; 
0x001a24de: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a2670; pop ebx; ret; 
0x001a0ff4: cmp cl, byte ptr [edx]; je 0x1a1010; mov eax, 1; ja 0x1a1001; neg eax; ret; 
0x000bfab5: cmp cl, byte ptr [edx]; jne 0xbfabd; xor eax, eax; pop ebx; ret; 
0x00088758: cmp cl, ch; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00120549: cmp cl, dh; jmp dword ptr [esi - 0x70]; 
0x000a7c88: cmp cl, dl; je 0xa7c8d; inc eax; pop edi; ret; 
0x00156c2b: cmp cx, 2; je 0x156c40; mov eax, edx; pop ebx; pop esi; ret; 
0x0019fd83: cmp cx, bx; pop ebx; mov eax, 1; ja 0x19fd90; neg eax; ret; 
0x0009595d: cmp dh, 0xff; dec dword ptr [ebp - 0x668ff79]; call dword ptr [eax - 0x73]; 
0x00126b12: cmp dh, 0xff; jmp dword ptr [ebp - 0x39]; 
0x000bae3c: cmp dh, byte ptr [ecx + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x00137ae3: cmp dh, byte ptr [edx + 0x2d050004]; sldt word ptr [ebx - 0x7f72e714]; jb 0x137b5a; stc; call dword ptr [eax - 0x18]; 
0x000c042f: cmp dh, cl; jne 0xc0436; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0002aaf7: cmp dh, dh; ret 0x7501; 
0x001a20f7: cmp dh, dh; ret 0x7504; 
0x001729ab: cmp dh, dl; jmp dword ptr [ebp - 0x75]; 
0x00031d89: cmp di, 0xc; ja 0x32232; mov ecx, dword ptr [ebx + edi*4 - 0x86994]; add ecx, ebx; jmp ecx; 
0x00078773: cmp dl, 0x29; ja 0x787b0; movzx edx, dl; mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x00124f53: cmp dl, 0x2c; jne 0x124f16; pop ebx; pop esi; pop edi; ret; 
0x00181fcb: cmp dl, 0x2f; ja 0x24a04; mov eax, dword ptr [ebp - 0x38]; add eax, dword ptr [eax + edx*4 - 0x6c854]; jmp eax; 
0x000fbd59: cmp dl, 0x35; ja 0xfbda0; mov eax, dword ptr [esp]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x00032904: cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x00143e11: cmp dl, byte ptr [eax - 7]; call dword ptr [eax + 0x56]; 
0x00172b3b: cmp dl, dh; jmp dword ptr [ebp - 0x75]; 
0x0002f382: cmp dword ptr [0x7a8f0500], edx; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0008b1f1: cmp dword ptr [eax + 0x1a], 0; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x000da87b: cmp dword ptr [eax + 0x39], -7; call dword ptr [eax + 0x6a]; 
0x00151d3f: cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x001739d8: cmp dword ptr [eax + 0x75], -7; call dword ptr [eax - 0x73]; 
0x00137147: cmp dword ptr [eax + 4], ecx; jne 0x137140; mov eax, dword ptr [eax + 0x18]; ret; 
0x0014d487: cmp dword ptr [eax + 8], edx; jne 0x14d480; ret; 
0x00190e64: cmp dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a3dea: cmp dword ptr [eax + eax], edx; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x000d01c9: cmp dword ptr [eax - 0x56], -7; call dword ptr [eax - 0x18]; 
0x0013a7df: cmp dword ptr [eax - 7], ebp; call dword ptr [ecx + 0x50]; 
0x0018187d: cmp dword ptr [eax], 0; mov ebx, dword ptr [esp + 0x14]; jne 0x181890; pop ebx; ret; 
0x00129b2c: cmp dword ptr [eax], 0x26; je 0x129b4f; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x000f7cec: cmp dword ptr [eax], 0x26; jne 0xf7d90; mov eax, edx; pop ebx; ret; 
0x000fa967: cmp dword ptr [eax], 0x58; stc; call dword ptr [eax + 0x55]; 
0x00161f8b: cmp dword ptr [eax], 0x72; stc; call dword ptr [eax - 0x18]; 
0x0016ab9b: cmp dword ptr [eax], 0x74; stc; call dword ptr [edx + 0x6a]; 
0x00151c2f: cmp dword ptr [eax], 0x7f; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0008ccdf: cmp dword ptr [eax], 1; je 0x8cce8; ret; 
0x00108d5b: cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001657bb: cmp dword ptr [eax], eax; cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x0012f0ca: cmp dword ptr [eax], eax; je 0x12f0d0; ret; 
0x00168ea3: cmp dword ptr [eax], eax; std; jmp dword ptr [esi - 0x70]; 
0x00172d62: cmp dword ptr [eax], esi; je 0x172d70; add esp, 4; pop ebx; pop esi; ret; 
0x00122d9f: cmp dword ptr [ebp + 0x60], -7; call dword ptr [eax + 0x55]; 
0x0014bf68: cmp dword ptr [ebp + 0x6c], -7; call dword ptr [eax - 0x73]; 
0x000243f2: cmp dword ptr [ebp - 0x30], 0; je 0x24413; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000c3a25: cmp dword ptr [ebp - 0x74f38b01], eax; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00084c13: cmp dword ptr [ebp - 1], edi; jmp dword ptr [ecx]; 
0x0009866f: cmp dword ptr [ebx + 0x17408f8], eax; ret; 
0x00096105: cmp dword ptr [ebx + 0x2b086], ecx; add byte ptr [ecx], bh; ret; 
0x0008cc00: cmp dword ptr [ebx + 0x57408f8], eax; add esp, 8; pop ebx; ret; 
0x000a61e5: cmp dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x0011d0b3: cmp dword ptr [ebx - 0x2f76bb3c], eax; pop ebx; pop esi; ret; 
0x00165807: cmp dword ptr [ebx - 7], esi; call dword ptr [eax - 0x18]; 
0x00122d03: cmp dword ptr [ebx], 0x5f; stc; call dword ptr [eax + 0x55]; 
0x00156390: cmp dword ptr [ecx + 0x10], edx; jb 0x15639d; setne al; movzx eax, al; neg eax; ret; 
0x00024ae9: cmp dword ptr [ecx + 0x94], edx; jne 0x24abe; ret; 
0x00149a79: cmp dword ptr [ecx + 4], eax; sete al; pop ebx; movzx eax, al; ret; 
0x000e4cb5: cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe4d50; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00085a24: cmp dword ptr [ecx + ebp*8], -0x1c; call dword ptr [eax - 0x73]; 
0x000d0d18: cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x0004f960: cmp dword ptr [ecx - 0x7697db94], ecx; fisttp qword ptr [ecx - 0x76307608]; ret; 
0x0004be76: cmp dword ptr [ecx - 0x76a7db94], ecx; fisttp qword ptr [ecx - 0x76307608]; ret; 
0x000489b2: cmp dword ptr [ecx - 0x76afdb94], ecx; fisttp qword ptr [ecx - 0x76307608]; ret; 
0x00165806: cmp dword ptr [ecx], 0x73; stc; call dword ptr [eax - 0x18]; 
0x0009aef1: cmp dword ptr [ecx], 2; je 0x9aeb2; pop ebx; pop esi; ret; 
0x000bee96: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000c4b03: cmp dword ptr [ecx], ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008dffe: cmp dword ptr [ecx], esi; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000d6bae: cmp dword ptr [edi + 0x10], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6bc3: cmp dword ptr [edi + 0x14], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6bd8: cmp dword ptr [edi + 0x18], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6bf3: cmp dword ptr [edi + 0x1c], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6c0e: cmp dword ptr [edi + 0x20], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6c23: cmp dword ptr [edi + 0x24], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6c38: cmp dword ptr [edi + 0x28], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6c43: cmp dword ptr [edi + 0x2c], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6c5e: cmp dword ptr [edi + 0x30], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6c73: cmp dword ptr [edi + 0x34], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6c88: cmp dword ptr [edi + 0x38], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6c93: cmp dword ptr [edi + 0x3c], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6b2b: cmp dword ptr [edi + 0xc], ecx; jne 0xd6ca0; xor eax, eax; pop edi; pop esi; ret; 
0x000d6b78: cmp dword ptr [edi + 8], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000e8a98: cmp dword ptr [edi + ebp*4], -7; call dword ptr [eax - 0x73]; 
0x0014b783: cmp dword ptr [edi + edi*4], -7; call dword ptr [eax - 0x73]; 
0x00161f23: cmp dword ptr [edi - 0x3b7c000e], esi; adc byte ptr [ebp - 0x77], ah; pop ebx; pop esi; pop edi; ret; 
0x00047ef7: cmp dword ptr [edi], -7; call dword ptr [ebx + 0x6a]; 
0x00056a77: cmp dword ptr [edi], -7; call dword ptr [esi + 0x6a]; 
0x0005f262: cmp dword ptr [edi], -7; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x00142835: cmp dword ptr [edi], 0x6a; stc; call dword ptr [eax + 0x51]; 
0x000d6b4d: cmp dword ptr [edi], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d7db3: cmp dword ptr [edi], esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00149a32: cmp dword ptr [edx + 0x14], eax; sete al; pop ebx; movzx eax, al; ret; 
0x00098f4c: cmp dword ptr [edx + 0x14], ecx; je 0x98f58; ret; 
0x00082740: cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x0008023b: cmp dword ptr [edx + 0x4e], -7; call dword ptr [eax - 0x18]; 
0x0008b4c3: cmp dword ptr [edx + 0x4e], -7; call dword ptr [eax - 0x18]; mov dl, 0x88; cli; jmp dword ptr [esi - 0x70]; 
0x0014e47e: cmp dword ptr [edx + 0x6d], -7; call dword ptr [eax - 0x18]; 
0x0014e6fe: cmp dword ptr [edx + 0x6d], -7; call dword ptr [eax - 0x18]; ja 0x14e75d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014ebfe: cmp dword ptr [edx + 0x6d], -7; call dword ptr [eax - 0x18]; ja 0x14ec58; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014eabe: cmp dword ptr [edx + 0x6d], -7; call dword ptr [eax - 0x18]; mov bh, 0x52; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e5be: cmp dword ptr [edx + 0x6d], -7; call dword ptr [eax - 0x18]; mov bh, 0x57; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e47e: cmp dword ptr [edx + 0x6d], -7; call dword ptr [eax - 0x18]; neg dword ptr [eax - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0014e97e: cmp dword ptr [edx + 0x6d], -7; call dword ptr [eax - 0x18]; not dword ptr [ebx - 0x12]; jmp dword ptr [esi - 0x70]; 
0x00149a0e: cmp dword ptr [edx + 2], ebx; je 0x149a18; pop ebx; ret; 
0x0014ea0e: cmp dword ptr [edx + eax*8], -7; call dword ptr [eax - 0x73]; 
0x0015f7cb: cmp dword ptr [edx + edi*2], -0xf; call dword ptr [eax - 0x73]; 
0x000f7dec: cmp dword ptr [edx], 0x26; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000f7f4c: cmp dword ptr [edx], 0x26; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x000f8237: cmp dword ptr [edx], 0x26; je 0xf8228; mov eax, 0xffffffff; ret; 
0x00143e10: cmp dword ptr [edx], 0x50; stc; call dword ptr [eax + 0x56]; 
0x001555ff: cmp dword ptr [edx], 0x6f; stc; call dword ptr [eax - 0x18]; 
0x0009aef2: cmp dword ptr [edx], eax; je 0x9aeb2; pop ebx; pop esi; ret; 
0x0009b4fa: cmp dword ptr [edx], ecx; jl 0x9b4f0; je 0x9b513; xor eax, eax; pop ebx; ret; 
0x0009b54a: cmp dword ptr [edx], ecx; jl 0x9b540; mov edx, 0; cmovne eax, edx; ret; 
0x0003fb2d: cmp dword ptr [esi + 0x31fffe53], -0x40; ret; 
0x0012072b: cmp dword ptr [esi + 0x5a], -7; call dword ptr [eax - 0x18]; 
0x001a4236: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x000f8722: cmp dword ptr [esi + ecx*4], ebx; je 0xf8738; pop ebx; pop esi; ret; 
0x00172dd0: cmp dword ptr [esi], eax; jg 0x172dc0; add esp, 4; pop ebx; pop esi; ret; 
0x000e47c5: cmp dword ptr [esp + 0x14], 1; je 0xe47d0; add esp, 0xc; ret; 
0x000e4895: cmp dword ptr [esp + 0x14], 1; je 0xe48a0; add esp, 0xc; ret; 
0x0003cee0: cmp dword ptr [esp + 4], 0; je 0x3cf00; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x00034302: cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x00092374: cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0013cdb4: cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00033dc6: cmp dword ptr [esp + eax*4], -7; call dword ptr [esi + 0x50]; 
0x000855a8: cmp dword ptr [esp], -0x1c; call dword ptr [eax - 0x73]; 
0x00129b2b: cmp dword ptr gs:[eax], 0x26; je 0x129b4f; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x000f7ceb: cmp dword ptr gs:[eax], 0x26; jne 0xf7d90; mov eax, edx; pop ebx; ret; 
0x000f7deb: cmp dword ptr gs:[edx], 0x26; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000f7f4b: cmp dword ptr gs:[edx], 0x26; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x000f8236: cmp dword ptr gs:[edx], 0x26; je 0xf8228; mov eax, 0xffffffff; ret; 
0x000e4956: cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x000e493c: cmp eax, -0x26; jne 0xe494d; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000e4b76: cmp eax, -0x26; jne 0xe4bb0; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0011ba9c: cmp eax, -0x4e; stc; call dword ptr [eax - 0x18]; 
0x000923bf: cmp eax, -0x6c; stc; call dword ptr [eax - 0x18]; 
0x0013c587: cmp eax, -0xb; je 0x13c580; add esp, 8; pop ebx; ret; 
0x0003747b: cmp eax, -1; add edx, edi; jmp edx; 
0x000373db: cmp eax, -1; add esi, edi; jmp esi; 
0x00137b95: cmp eax, -1; add esp, 0x18; pop ebx; ret; 
0x0018954b: cmp eax, -1; add esp, 0x1c; sar eax, 0x1f; ret; 
0x000b1409: cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0017b6d7: cmp eax, -1; je 0x17b6e8; add esp, 4; pop ebx; pop esi; ret; 
0x0009ff82: cmp eax, -1; je 0x9ff90; add esp, 0xc; ret; 
0x0010acaf: cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x00182ea2: cmp eax, -1; sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x001222d4: cmp eax, -1; setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x000ec670: cmp eax, 0x14; ja 0xec6c0; mov edi, dword ptr [edx + eax*4 - 0x6fcf8]; add edi, edx; jmp edi; 
0x000f8049: cmp eax, 0x14; ja 0xf81e1; mov ecx, dword ptr [edi + eax*4 - 0x6fa20]; add ecx, edi; jmp ecx; 
0x00120fe1: cmp eax, 0x190c481; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0005f92d: cmp eax, 0x19; ja 0x5f940; mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x00093a4b: cmp eax, 0x21; jne 0x93a54; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00079303: cmp eax, 0x29; ja 0x79318; mov edi, dword ptr [ebp + eax*4 - 0x719b8]; add edi, ebp; jmp edi; 
0x0010a8e6: cmp eax, 0x338870f; add byte ptr [eax], al; mov eax, dword ptr [ebx + edx*4 - 0x6f248]; add eax, ebx; jmp eax; 
0x000e4dd0: cmp eax, 0x3b9ac9ff; ja 0xe4e68; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0009e5f1: cmp eax, 0x3fc; jbe 0x9e600; ret; 
0x00137bc2: cmp eax, 0x3ff; ja 0x137bd0; sar eax, 5; add esp, 0xc; ret; 
0x000a61b6: cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x00024dca: cmp eax, 0x5004ec83; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0009e681: cmp eax, 0x50; jbe 0x9e690; ret; 
0x0016f3ca: cmp eax, 0x560cec83; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001831e5: cmp eax, 0x593; ja 0x1833e0; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x001848b8: cmp eax, 0x593; ja 0x1848d0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0007a46a: cmp eax, 0x593; ja 0x7a560; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007d192: cmp eax, 0x593; ja 0x7d231; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007f608: cmp eax, 0x593; ja 0x7f640; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007fdaa: cmp eax, 0x593; ja 0x7fde0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00085d2c: cmp eax, 0x593; ja 0x85d58; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0008687f: cmp eax, 0x593; ja 0x869b0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00086a15: cmp eax, 0x593; ja 0x86a60; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008994a: cmp eax, 0x593; ja 0x899b0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000899f8: cmp eax, 0x593; ja 0x89a20; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008a1bd: cmp eax, 0x593; ja 0x8a200; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000d9184: cmp eax, 0x5b28c483; ret; 
0x00110b3c: cmp eax, 0x5b34c483; pop esi; ret; 
0x000b11a0: cmp eax, 0x5bffffff; ret; 
0x00151cb7: cmp eax, 0x6e; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x001784b7: cmp eax, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00151ad8: cmp eax, 0x81000312; ret; 
0x0009b5d8: cmp eax, 0x81000e77; ret; 
0x000896d8: cmp eax, 0x81000f96; ret; 
0x0005a8d8: cmp eax, 0x81001284; ret; 
0x0003d5d8: cmp eax, 0x83001f98; in al, dx; sbb byte ptr [ebp - 0x67a5b80], cl; call dword ptr [eax - 0x18]; 
0x0008459f: cmp eax, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x000dc0d5: cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0005aa2b: cmp eax, 0xb; ja 0x2352a; mov edx, dword ptr [esi + eax*4 - 0x73764]; add edx, esi; jmp edx; 
0x0009e696: cmp eax, 0xb; mov eax, 8; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x000a607c: cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000bf592: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0018efae: cmp eax, 0xc381ffff; fist word ptr [ebp + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009f341: cmp eax, 0xc483fff8; or al, 0x8d; xchg ah, bl; jbe 0x9f332; call dword ptr [eax + 0x57]; 
0x0009f377: cmp eax, 0xc483fff8; or al, 0x8d; xchg ah, cl; ja 0x9f368; call dword ptr [eax + 0x57]; 
0x0009f3ad: cmp eax, 0xc483fff8; or al, 0x8d; xchg byte ptr [eax + edi*2 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x000c09c4: cmp eax, 0xc; ja 0xc0aa0; mov ecx, dword ptr [edx + eax*4 - 0x70c9c]; add ecx, edx; jmp ecx; 
0x0009a24a: cmp eax, 0xc; sete al; movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x000eb31f: cmp eax, 0xe9000000; ret; 
0x0010abff: cmp eax, 0xf7fffffd; ret 0x67; 
0x0009e631: cmp eax, 0xffff; jbe 0x9e640; ret; 
0x00108b75: cmp eax, 0xfffff000; ja 0x108b80; pop ebx; pop esi; ret; 
0x0010fbd3: cmp eax, 0xfffff000; ja 0x10fbe0; pop ebx; pop esi; ret; 
0x00110ed0: cmp eax, 0xfffff000; ja 0x110ee0; pop ebx; ret; 
0x00110f40: cmp eax, 0xfffff000; ja 0x110f50; pop ebx; ret; 
0x00110fca: cmp eax, 0xfffff000; ja 0x111020; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011121e: cmp eax, 0xfffff000; ja 0x111270; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111300: cmp eax, 0xfffff000; ja 0x111310; pop ebx; ret; 
0x00112716: cmp eax, 0xfffff000; ja 0x112720; pop ebx; pop esi; ret; 
0x0011b240: cmp eax, 0xfffff000; ja 0x11b250; pop ebx; ret; 
0x0011b750: cmp eax, 0xfffff000; ja 0x11b760; pop ebx; ret; 
0x0011bdbe: cmp eax, 0xfffff000; ja 0x11bdd0; pop ebx; ret; 
0x0011c8d5: cmp eax, 0xfffff000; ja 0x11c8e0; pop ebx; pop esi; ret; 
0x0011c94c: cmp eax, 0xfffff000; ja 0x11c958; pop ebx; ret; 
0x0011c99a: cmp eax, 0xfffff000; ja 0x11c9a8; pop ebx; pop esi; pop edi; ret; 
0x0011c9ea: cmp eax, 0xfffff000; ja 0x11c9f8; pop ebx; pop esi; pop edi; ret; 
0x0011cc16: cmp eax, 0xfffff000; ja 0x11cc20; pop ebx; pop esi; ret; 
0x0011cff0: cmp eax, 0xfffff000; ja 0x11d000; pop ebx; ret; 
0x0011d4ec: cmp eax, 0xfffff000; ja 0x11d4f8; pop ebx; ret; 
0x0011d98c: cmp eax, 0xfffff000; ja 0x11d998; pop ebx; ret; 
0x0011de9c: cmp eax, 0xfffff000; ja 0x11dec0; pop ebx; pop esi; pop edi; ret; 
0x0011df19: cmp eax, 0xfffff000; ja 0x11df30; pop ebx; pop esi; pop edi; ret; 
0x0011df8b: cmp eax, 0xfffff000; ja 0x11dfb0; pop ebx; pop esi; pop edi; ret; 
0x0011e008: cmp eax, 0xfffff000; ja 0x11e020; pop ebx; pop esi; pop edi; ret; 
0x0011e0c5: cmp eax, 0xfffff000; ja 0x11e0d0; pop ebx; pop esi; ret; 
0x0011e435: cmp eax, 0xfffff000; ja 0x11e440; pop ebx; pop esi; ret; 
0x0011edb0: cmp eax, 0xfffff000; ja 0x11edc0; pop ebx; ret; 
0x0011ee00: cmp eax, 0xfffff000; ja 0x11ee10; pop ebx; ret; 
0x0011ef06: cmp eax, 0xfffff000; ja 0x11ef18; pop ebx; pop esi; pop edi; ret; 
0x0011ef56: cmp eax, 0xfffff000; ja 0x11ef68; pop ebx; pop esi; pop edi; ret; 
0x0012057a: cmp eax, 0xfffff000; ja 0x1205d0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00120aaa: cmp eax, 0xfffff000; ja 0x120b00; add esp, 0x14; pop ebx; pop esi; ret; 
0x00120b50: cmp eax, 0xfffff000; ja 0x120b60; pop ebx; ret; 
0x00120ba5: cmp eax, 0xfffff000; ja 0x120bb0; pop ebx; pop esi; ret; 
0x00123fc5: cmp eax, 0xfffff000; ja 0x123fd0; pop ebx; pop esi; ret; 
0x00126707: cmp eax, 0xfffff000; ja 0x126718; pop ebx; pop esi; ret; 
0x00127d90: cmp eax, 0xfffff000; ja 0x127da0; pop ebx; ret; 
0x00127de5: cmp eax, 0xfffff000; ja 0x127df0; pop ebx; pop esi; ret; 
0x00128fca: cmp eax, 0xfffff000; ja 0x128fd8; mov eax, ecx; pop ebx; ret; 
0x0012a0dc: cmp eax, 0xfffff000; ja 0x12a0e8; pop ebx; ret; 
0x0012a720: cmp eax, 0xfffff000; ja 0x12a730; pop ebx; ret; 
0x0012a887: cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0012a980: cmp eax, 0xfffff000; ja 0x12a990; pop ebx; ret; 
0x0012ac3f: cmp eax, 0xfffff000; ja 0x12ac68; pop ebx; pop esi; pop edi; ret; 
0x0012aeda: cmp eax, 0xfffff000; ja 0x12aee8; pop ebx; pop esi; pop edi; ret; 
0x0012b17a: cmp eax, 0xfffff000; ja 0x12b188; pop ebx; pop esi; pop edi; ret; 
0x0012b2bb: cmp eax, 0xfffff000; ja 0x12b2d0; pop ebx; pop esi; pop edi; ret; 
0x0012b970: cmp eax, 0xfffff000; ja 0x12b980; pop ebx; ret; 
0x0012bc00: cmp eax, 0xfffff000; ja 0x12bc10; pop ebx; ret; 
0x00189436: cmp eax, 0xfffff000; ja 0x189440; pop ebx; pop esi; ret; 
0x0003c431: cmp eax, 0xfffff000; ja 0x3c440; pop ebx; ret; 
0x0003c48f: cmp eax, 0xfffff000; ja 0x3c4e0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000603e0: cmp eax, 0xfffff000; ja 0x603f0; pop ebx; ret; 
0x0006043a: cmp eax, 0xfffff000; ja 0x60448; pop ebx; pop esi; pop edi; ret; 
0x0008db6d: cmp eax, 0xfffff000; ja 0x8db80; pop ebx; pop esi; pop edi; ret; 
0x00096290: cmp eax, 0xfffff000; ja 0x962a0; pop ebx; pop esi; pop edi; ret; 
0x0009cf7c: cmp eax, 0xfffff000; ja 0x9cf88; pop ebx; ret; 
0x0009d595: cmp eax, 0xfffff000; ja 0x9d5a0; pop ebx; pop esi; ret; 
0x0009daf6: cmp eax, 0xfffff000; ja 0x9db08; mov eax, ecx; pop ebx; ret; 
0x0009dea4: cmp eax, 0xfffff000; ja 0x9deb0; pop ebx; ret; 
0x000d92be: cmp eax, 0xfffff000; ja 0xd92d0; pop ebx; ret; 
0x000e5def: cmp eax, 0xfffff000; ja 0xe5e00; pop ebx; pop esi; ret; 
0x000f8275: cmp eax, 0xfffff000; ja 0xf82c0; add esp, 0x18; pop ebx; ret; 
0x00097c41: cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0011bf0a: cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0003c3f8: cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003fb27: cmp eax, 0xfffff001; jae 0x24ef0; xor eax, eax; ret; 
0x0008eec4: cmp eax, 1; ja 0x8eed8; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00097bf4: cmp eax, 1; ja 0x97c08; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00174f2e: cmp eax, 1; je 0x174f50; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0017500e: cmp eax, 1; je 0x175030; cmp eax, 2; sete al; movzx eax, al; ret; 
0x001755de: cmp eax, 1; je 0x175600; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00108428: cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x0010877f: cmp eax, 1; jg 0x1087a8; add esp, 4; pop ebx; pop esi; ret; 
0x00127368: cmp eax, 1; jg 0x127378; add esp, 8; pop ebx; ret; 
0x0014bfce: cmp eax, 1; jg 0x14bff0; add esp, 4; pop ebx; pop esi; ret; 
0x00151372: cmp eax, 1; jg 0x1513d0; pop ebx; pop esi; pop edi; ret; 
0x00151e5e: cmp eax, 1; jg 0x151e88; add esp, 8; pop ebx; ret; 
0x0015d002: cmp eax, 1; jg 0x15d060; add esp, 4; pop ebx; pop esi; ret; 
0x0017b7fd: cmp eax, 1; jg 0x17b828; add esp, 8; pop ebx; ret; 
0x0017b96d: cmp eax, 1; jg 0x17b998; add esp, 8; pop ebx; ret; 
0x001805c4: cmp eax, 1; jg 0x1805e8; add esp, 4; pop ebx; pop esi; ret; 
0x0018196e: cmp eax, 1; jg 0x181998; add esp, 4; pop ebx; pop esi; ret; 
0x00181a0e: cmp eax, 1; jg 0x181a38; add esp, 4; pop ebx; pop esi; ret; 
0x00041180: cmp eax, 1; jg 0x411a8; add esp, 4; pop ebx; pop esi; ret; 
0x0008b2a0: cmp eax, 1; jg 0x8b2b0; ret; 
0x0008d898: cmp eax, 1; jg 0x8d8d8; pop ebx; pop esi; pop edi; ret; 
0x000da4b3: cmp eax, 1; jg 0xda4d8; add esp, 8; pop ebx; ret; 
0x000e671a: cmp eax, 1; jg 0xe6740; add esp, 4; pop ebx; pop esi; ret; 
0x000e6f90: cmp eax, 1; jg 0xe6fb0; pop ebx; pop esi; pop edi; ret; 
0x0016e31f: cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0008ea98: cmp eax, 1; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x0005fd05: cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009adb3: cmp eax, 1; sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0017652e: cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00097bd4: cmp eax, 2; ja 0x97be8; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001259df: cmp eax, 2; jbe 0x125a10; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x001519bd: cmp eax, 2; jne 0x1519c8; mov eax, ecx; ret; 
0x00174f33: cmp eax, 2; sete al; movzx eax, al; ret; 
0x0002fba7: cmp eax, 3; je 0x2fbb8; add esp, 8; pop ebx; ret; 
0x0008fb5b: cmp eax, 3; je 0x8fb68; pop ebx; pop esi; pop edi; ret; 
0x0008fbbd: cmp eax, 3; je 0x8fbd0; pop ebx; pop esi; pop edi; ret; 
0x000fc88c: cmp eax, 3; je 0xfc8b0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009a13b: cmp eax, 4; sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0002561d: cmp eax, 8; ja 0x25697; mov ecx, dword ptr [esp + 4]; mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x0008cc01: cmp eax, 8; je 0x8cc0b; add esp, 8; pop ebx; ret; 
0x0008d54d: cmp eax, 8; je 0x8d557; add esp, 8; pop ebx; ret; 
0x00098670: cmp eax, 8; je 0x98676; ret; 
0x0012a562: cmp eax, 8; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0012a5a3: cmp eax, 8; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000a4298: cmp eax, 9; ja 0xa42c0; mov ecx, dword ptr [ebx + eax*4 - 0x71254]; add ecx, ebx; jmp ecx; 
0x00065904: cmp eax, dword ptr [eax + eax]; add byte ptr [ecx], bh; ret; 
0x00190c7b: cmp eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001335f2: cmp eax, dword ptr [eax]; add byte ptr [ebx + 0x56500cc4], al; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00068b74: cmp eax, dword ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0009baf6: cmp eax, dword ptr [eax]; add cl, ch; sar esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x00033156: cmp eax, dword ptr [ebx + 0x1c]; jae 0x3316e; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x0009a52b: cmp eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00027504: cmp eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00060e1c: cmp eax, dword ptr [ebx - 0x7972f714]; lodsd eax, dword ptr [esi]; inc edx; stc; call dword ptr [eax + 0x53]; 
0x0012b468: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b425: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001a0d71: cmp eax, dword ptr [edx]; add byte ptr [eax], al; pop ebx; ret; 
0x001a4f74: cmp eax, dword ptr [esi - 0x10]; jne 0x1a4fc0; pop edi; pop esi; pop ebx; ret; 
0x00068b73: cmp eax, dword ptr cs:[eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0011f664: cmp eax, ebx; jb 0x11f670; xor eax, eax; pop ebx; ret; 
0x0016c570: cmp eax, ebx; jne 0x16c560; pop ebx; ret; 
0x000a93bb: cmp eax, ebx; jne 0xa93b0; mov eax, edx; pop ebx; ret; 
0x000a93ff: cmp eax, ebx; jne 0xa93f0; mov eax, edx; pop ebx; pop esi; ret; 
0x0008b80a: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0008051d: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0007f2e5: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x7f2e0; ret; 
0x00089105: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x89100; ret; 
0x000be970: cmp eax, ecx; ja 0xbe980; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000a955f: cmp eax, ecx; jne 0xa9550; mov eax, edx; pop ebx; ret; 
0x000bfb4a: cmp eax, ecx; jne 0xbfd57; pop esi; xor eax, eax; pop ebx; ret; 
0x000bfc3d: cmp eax, ecx; jne 0xbfd6b; pop esi; xor eax, eax; pop ebx; ret; 
0x000bfd69: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0003b946: cmp eax, ecx; sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x000a5a64: cmp eax, edi; jae 0xa5a81; pop ebx; pop esi; pop edi; ret; 
0x00137143: cmp eax, edx; jae 0x137150; cmp dword ptr [eax + 4], ecx; jne 0x137140; mov eax, dword ptr [eax + 0x18]; ret; 
0x00172a03: cmp eax, edx; je 0x172a10; add esp, 4; pop ebx; pop esi; ret; 
0x0008ae28: cmp eax, edx; jne 0x8ae20; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0013a94c: cmp eax, esi; call dword ptr [eax - 0x73]; 
0x00120591: cmp eax, esp; idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000ea403: cmp ebp, 0x1f; ja 0xea7bf; mov eax, dword ptr [ebx + ebp*4 - 0x6fe68]; add eax, ebx; jmp eax; 
0x0010a90c: cmp ebp, 0x2d; ja 0x10a930; mov eax, dword ptr [ebx + ebp*4 - 0x6f150]; add eax, ebx; jmp eax; 
0x000542bc: cmp ebp, dword ptr [ecx]; ret 0x6b89; 
0x0009dae1: cmp ebp, dword ptr [edi]; jne 0x9db28; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00140cf6: cmp ebp, dword ptr [esi]; je 0x140d00; add esp, 8; pop ebx; ret; 
0x001854f3: cmp ebp, edi; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x000331a2: cmp ebx, 0x14; add byte ptr [ecx + 0x203c6ec5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x00168e42: cmp ebx, 0x2c8389ff; cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00079392: cmp ebx, 0x2e; ja 0x793c0; mov edi, dword ptr [ebp + ebx*4 - 0x71910]; add edi, ebp; jmp edi; 
0x0007236f: cmp ebx, 0x53; ja 0x72463; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x722c8]; jmp eax; 
0x0010ac7b: cmp ebx, 0x58; stc; call dword ptr [eax - 0x18]; 
0x001408aa: cmp ebx, 0x950f0308; ret; 
0x000f9fc5: cmp ebx, 0xa; je 0xf9ff3; add esp, 4; pop ebx; pop esi; ret; 
0x0008d89c: cmp ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00122d04: cmp ebx, dword ptr [edi - 7]; call dword ptr [eax + 0x55]; 
0x000dc0c2: cmp ecx, 0x28f5c28; jbe 0xdc0d0; mov eax, edx; ret; 
0x000e7255: cmp ecx, 0x2f; ja 0xe75d0; mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x0006f6e4: cmp ecx, 0x5a; jbe 0x705e3; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0013d3dc: cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0013d0fa: cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001a7e3d: cmp ecx, 0x940f0400; ret 0x9584; 
0x00128eb8: cmp ecx, 1; jg 0x128ee8; add esp, 8; pop ebx; ret; 
0x0003e640: cmp ecx, 1; jg 0x3e6b9; sub esp, 8; push 0; push edx; call eax; 
0x00156c2c: cmp ecx, 2; je 0x156c40; mov eax, edx; pop ebx; pop esi; ret; 
0x0016a5ad: cmp ecx, 3; jbe 0x16a5c0; mov eax, 2; pop ebx; pop esi; ret; 
0x000d1d17: cmp ecx, 3; je 0xd1d28; mov eax, esi; pop ebx; pop esi; ret; 
0x000e7226: cmp ecx, 5; ja 0xe72e1; mov eax, dword ptr [esi + ecx*4 - 0x700b0]; add eax, esi; jmp eax; 
0x000a971c: cmp ecx, 8; ja 0xa9733; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97dc: cmp ecx, 8; ja 0xa980b; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x0011dbf3: cmp ecx, 9; je 0x11dc28; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011dca3: cmp ecx, 9; je 0x11dcd8; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011b8b4: cmp ecx, dword ptr [ebx - 0x47cfdbb4]; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bb34: cmp ecx, dword ptr [ebx - 0x74cfdba4]; dec esp; and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000e4dd4: cmp ecx, dword ptr [edi]; xchg dword ptr [ebp - 0x73000000], ecx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00097087: cmp ecx, dword ptr [edi]; xchg edx, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x0013a761: cmp ecx, dword ptr [edx - 0x3b7c0012]; adc al, 0x5b; pop esi; ret; 
0x001a50a5: cmp ecx, dword ptr [edx - 4]; jne 0x1a50b0; pop ebx; ret; 
0x001a0d67: cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x1a0fb0; pop ebx; ret; 
0x000b83c1: cmp ecx, dword ptr [edx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a0c82: cmp ecx, dword ptr [edx]; je 0x1a0ca0; mov eax, 1; jg 0x1a0c90; neg eax; ret; 
0x0009104f: cmp ecx, eax; cmovb ecx, eax; mov eax, 0x182; xor edx, edx; call dword ptr gs:[0x10]; 
0x000a659a: cmp ecx, eax; jne 0xa6590; mov eax, edx; pop ebx; ret; 
0x0004271b: cmp ecx, eax; sbb ebx, edx; pop ebx; setb al; ret; 
0x0013ccd6: cmp ecx, eax; sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x0019f5f0: cmp ecx, ebx; mov eax, 0; jne 0x19fd70; pop ebx; ret; 
0x001a2422: cmp ecx, ebx; mov eax, 0; jne 0x1a2650; pop ebx; ret; 
0x0019fd84: cmp ecx, ebx; pop ebx; mov eax, 1; ja 0x19fd90; neg eax; ret; 
0x000c3e4e: cmp ecx, ebx; pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x000dc456: cmp ecx, edi; call dword ptr [eax + 0x53]; 
0x000da7f9: cmp ecx, edi; call dword ptr [eax + 0x56]; 
0x001463bb: cmp ecx, edi; call dword ptr [eax + 0x57]; 
0x000da87d: cmp ecx, edi; call dword ptr [eax + 0x6a]; 
0x00026fc2: cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x00035b4e: cmp ecx, edi; call dword ptr [eax - 0x73]; 
0x001221fe: cmp ecx, edi; call dword ptr [eax - 0x73]; or ebx, 0x5a; stc; call dword ptr [eax - 0x18]; ret 0xf588; 
0x00027f1e: cmp ecx, edi; call dword ptr [edi - 1]; 
0x00027a8e: cmp ecx, edi; call dword ptr [edx + 0x50]; 
0x000a0405: cmp ecx, edi; dec dword ptr [ebx - 0x72ebdbac]; sbb al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x00121f39: cmp ecx, edi; dec dword ptr [ecx - 0x7972af0d]; retf; pop edx; stc; call dword ptr [eax - 0x18]; 
0x00138b99: cmp ecx, edi; jmp dword ptr [ebp - 0x75]; 
0x000c3e30: cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0007fe78: cmp ecx, edx; jb 0x7fe70; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008a298: cmp ecx, edx; jb 0x8a290; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00120eda: cmp ecx, edx; jne 0x120ed0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000c258a: cmp ecx, edx; jne 0xc259a; ret; 
0x0013005b: cmp ecx, edx; sbb eax, eax; ret; 
0x001563b9: cmp ecx, edx; setne al; ret; 
0x00122c63: cmp edi, 0x5d; stc; call dword ptr [eax + 0x55]; 
0x0013e48c: cmp edi, 0x870f01ff; ret; 
0x000fb7e2: cmp edi, 0x8bffffff; push esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x00031d8a: cmp edi, 0xc; ja 0x32232; mov ecx, dword ptr [ebx + edi*4 - 0x86994]; add ecx, ebx; jmp ecx; 
0x0012a8e1: cmp edi, 1; je 0x12a918; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012bb61: cmp edi, 1; je 0x12bb98; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000f3d91: cmp edi, dword ptr [edi]; sti; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00030002: cmp edi, ecx; call dword ptr [eax + 0x56]; 
0x000299c3: cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0002fd17: cmp edi, ecx; call dword ptr [eax - 1]; 
0x0002fcf9: cmp edi, ecx; call dword ptr [edx + 0x50]; 
0x000923ef: cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00107371: cmp edi, edi; dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00107386: cmp edi, edi; dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0018f11c: cmp edi, edi; inc dword ptr [ecx + 0x45471c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001453c1: cmp edi, edi; jmp dword ptr [esi - 0x70]; 
0x0008ed12: cmp edi, edx; jae 0x8ece0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00193b18: cmp edi, esi; ret 3; 
0x000e5c2f: cmp edx, 0x10d; cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000f7f2e: cmp edx, 0x1badface; setne al; ret; 
0x000f7f09: cmp edx, 0x1cd1; setne al; ret; 
0x0012a9ed: cmp edx, 0x26; je 0x12aa3c; pop ebx; pop esi; ret; 
0x000f7ea8: cmp edx, 0x27e0eb; je 0xf7ddb; cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x0010a8e4: cmp edx, 0x3d; ja 0x10ac25; mov eax, dword ptr [ebx + edx*4 - 0x6f248]; add eax, ebx; jmp eax; 
0x0008eba9: cmp edx, 0x3fff; ja 0x8ebb8; ret; 
0x000a6eb1: cmp edx, 0x40; ja 0xa6ebd; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a6ed1: cmp edx, 0x40; ja 0xa6edd; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x0010a71f: cmp edx, 0x51; ja 0x10a930; mov eax, dword ptr [ebx + edx*4 - 0x6f390]; add eax, ebx; jmp eax; 
0x000f7e73: cmp edx, 0x52654973; mov edx, 0x20; cmovne eax, edx; ret; 
0x00089cef: cmp edx, 0x593; ja 0x89da0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0006f791: cmp edx, 0x5a; jbe 0x70520; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000f7dd3: cmp edx, 0x9123683e; jne 0xf7e40; ret; 
0x000f7f72: cmp edx, 0xadf5; setne al; ret; 
0x000f7eb4: cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x0016d61c: cmp edx, 0xf; ja 0x16d630; add eax, dword ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x001701aa: cmp edx, 0xf; ja 0x1701c0; add eax, dword ptr [eax + edx*4 - 0x6c910]; jmp eax; 
0x00170ada: cmp edx, 0xf; ja 0x170bf0; add eax, dword ptr [eax + edx*4 - 0x6c8d0]; jmp eax; 
0x000a5e9e: cmp edx, 1; ja 0xa5e80; pop ebx; pop esi; pop edi; ret; 
0x00096198: cmp edx, 1; je 0x961a8; mov eax, 0x16; ret; 
0x00150d6b: cmp edx, 1; jg 0x150d78; ret; 
0x0015d2fc: cmp edx, 1; jg 0x15d328; add esp, 0x18; pop ebx; ret; 
0x001627ae: cmp edx, 1; jg 0x1627d8; add esp, 0x18; pop ebx; ret; 
0x0017b87b: cmp edx, 1; jg 0x17b8a0; add esp, 0x18; pop ebx; ret; 
0x0017b8f7: cmp edx, 1; jg 0x17b920; add esp, 0x18; pop ebx; ret; 
0x0017bb1d: cmp edx, 1; jg 0x17bb48; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017bbcf: cmp edx, 1; jg 0x17bbf8; add esp, 0x18; pop ebx; ret; 
0x0003eb17: cmp edx, 1; jg 0x3ec88; sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x0003ebeb: cmp edx, 1; jg 0x3ecb0; call eax; 
0x0003fa2d: cmp edx, 1; jg 0x3fa58; add esp, 0x14; pop ebx; pop esi; ret; 
0x000412af: cmp edx, 1; jg 0x412d8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000602de: cmp edx, 1; jg 0x60318; add esp, 0x18; pop ebx; ret; 
0x000924ce: cmp edx, 1; jg 0x924f8; add esp, 0x18; pop ebx; ret; 
0x000e6299: cmp edx, 1; jg 0xe62c0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000961cc: cmp edx, 1; jne 0x961f0; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00109809: cmp edx, 2; ja 0x10981a; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008ea6d: cmp edx, 2; jbe 0x8ea78; ret; 
0x0008fc36: cmp edx, 2; je 0x8fc40; pop ebx; pop esi; pop edi; ret; 
0x00061792: cmp edx, 7; ja 0x61a48; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x0006d082: cmp edx, 7; ja 0x6d460; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x0007de5b: cmp edx, dword ptr [eax + 4]; jae 0x7de70; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x00085c97: cmp edx, dword ptr [eax + 8]; jae 0x85cb0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00085cd5: cmp edx, dword ptr [eax + 8]; jae 0x85ce8; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000f8698: cmp edx, dword ptr [ebx + 4]; je 0xf86ce; pop ebx; pop esi; pop edi; ret; 
0x0016f73a: cmp edx, dword ptr [edx - 0x15]; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0008c9c0: cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x000e5dde: cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000426e9: cmp edx, eax; setb al; ret; 
0x000426da: cmp edx, eax; setle al; ret; 
0x0008edc2: cmp edx, ebp; jae 0x8edf3; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000b7864: cmp edx, ebx; jb 0xb6c20; call 0x182d2d; add ecx, 0x10e4cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c8e: cmp edx, ebx; jb 0xb6c20; call 0x182d2d; add ecx, 0x10f0a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c77: cmp edx, ebx; jb 0xb6c20; call 0x182d2d; add ecx, 0x10f0c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c5c: cmp edx, ebx; jb 0xb6c20; call 0x182d2d; add ecx, 0x10f0db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c3a: cmp edx, ebx; jb 0xb6c20; call 0x182d2d; add ecx, 0x10f0fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8f64: cmp edx, ebx; jb 0xb8260; call 0x182d2d; add ecx, 0x10cf2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82b7: cmp edx, ebx; jb 0xb8260; call 0x182d2d; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b829c: cmp edx, ebx; jb 0xb8260; call 0x182d2d; add ecx, 0x10dbfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b827a: cmp edx, ebx; jb 0xb8260; call 0x182d2d; add ecx, 0x10dc1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be804: cmp edx, ebx; jb 0xbe200; call 0x182d2d; add ecx, 0x107863; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be26e: cmp edx, ebx; jb 0xbe200; call 0x182d2d; add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be257: cmp edx, ebx; jb 0xbe200; call 0x182d2d; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be23c: cmp edx, ebx; jb 0xbe200; call 0x182d2d; add ecx, 0x107e2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be21a: cmp edx, ebx; jb 0xbe200; call 0x182d2d; add ecx, 0x107e51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a9487: cmp edx, ebx; je 0xa9480; pop ebx; ret; 
0x0008b7d6: cmp edx, ecx; jae 0x8b7f0; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x00130057: cmp edx, ecx; jb 0x13005f; cmp ecx, edx; sbb eax, eax; ret; 
0x001563b3: cmp edx, ecx; jb 0x1563be; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x00180253: cmp edx, ecx; jb 0x18025b; cmp ecx, edx; sbb eax, eax; ret; 
0x000c2596: cmp edx, ecx; je 0xc259e; test edx, edx; jne 0xc2590; ret; 
0x00150bb0: cmp edx, ecx; jne 0x150ba0; add esp, 8; pop ebx; ret; 
0x001512f2: cmp edx, ecx; jne 0x1512c0; pop ebx; pop esi; ret; 
0x00046175: cmp edx, edx; std; jmp dword ptr [esi - 0x70]; 
0x000a94bb: cmp edx, esi; je 0xa94b0; pop ebx; pop esi; ret; 
0x00172a33: cmp edx, esi; jmp dword ptr [ebp - 0x75]; 
0x0007a0ab: cmp esi, -1; call dword ptr [eax - 0x76f3137d]; ret; 
0x0012ac2e: cmp esi, -1; je 0x12ac50; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00176e2a: cmp esi, -1; jmp dword ptr [esi - 0x70]; 
0x0010e304: cmp esi, 0x2f; ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ede0]; jmp eax; 
0x0010d3ff: cmp esi, 0x2f; ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x0010dc80: cmp esi, 0x2f; ja 0x10d5f0; mov eax, dword ptr [ebx + esi*4 - 0x6eea0]; add eax, ebx; jmp eax; 
0x0010d5de: cmp esi, 0x2f; ja 0x10d5f0; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x00122ebb: cmp esi, 0x62; stc; call dword ptr [edx + 0x52]; 
0x000dce4c: cmp esi, 0x840f0400; ret; 
0x00149921: cmp esi, dword ptr [eax + eax]; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x00179971: cmp esi, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x0015f823: cmp esi, ebx; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x00108894: cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0019f34d: cmp esi, edi; inc dword ptr [ecx + 0x35f00c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a90a1: cmp esi, edx; cld; jmp dword ptr [esi - 0x70]; 
0x0008f140: cmp esi, edx; jae 0x8f180; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000d01d1: cmp esi, esi; dec dword ptr [ebp - 0x652177d]; call dword ptr [eax - 0x73]; 
0x0002d5b2: cmp esi, esi; ret 0xf08; 
0x000671a5: cmp esp, 0x42; stc; call dword ptr [eax - 0x18]; 
0x0015e452: cmp esp, 0x78; int1; call dword ptr [eax - 0x73]; 
0x000d4c3b: cmp esp, 0xa40fffff; ret 0xc102; 
0x000bf574: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x00149a0d: cmp word ptr [edx + 2], bx; je 0x149a18; pop ebx; ret; 
0x001a2ac6: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000bff2f: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x001112b2: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00168e48: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00173ff6: cmpsb byte ptr [esi], byte ptr es:[edi]; int1; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x000a2cef: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0017d4ab: cmpsb byte ptr [esi], byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x0013c7e6: cmpsb byte ptr [esi], byte ptr es:[edi]; xor eax, 0xc483fff8; adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x0017ba35: cmpsd dword ptr [esi], dword ptr es:[edi]; aam 0xfb; jmp dword ptr [esi - 0x70]; 
0x0014bf63: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x693827d], cl; call dword ptr [eax - 0x73]; 
0x00033e74: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x699f27d], cl; call dword ptr [esi - 1]; 
0x00094733: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6afa27a], cl; call dword ptr [eax - 0x73]; 
0x00093919: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6afaa7a], cl; call dword ptr [eax - 0x73]; 
0x000e9f4d: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x001a47f5: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x001728b3: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; mov dword ptr gs:[edx], eax; ret; 
0x00087ab5: cmpsd dword ptr [esi], dword ptr es:[edi]; add eax, 0xec830000; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x00109e7b: cmpsd dword ptr [esi], dword ptr es:[edi]; add eax, dword ptr [eax]; add dh, dh; ret 0xf02; 
0x0013e315: cmpsd dword ptr [esi], dword ptr es:[edi]; in eax, 0xfe; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [edi + ebx*8 - 0x77]; ret; 
0x0005ab35: cmpsd dword ptr [esi], dword ptr es:[edi]; iretd; or eax, 0xc0868d00; mov ecx, edi; call dword ptr [eax - 0x73]; 
0x0016eb35: cmpsd dword ptr [esi], dword ptr es:[edi]; mov dword ptr [0x9066fffc], eax; nop; nop; nop; ret; 
0x0010efb5: cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0xffff; 
0x00196c6e: cmpsd dword ptr [esi], dword ptr es:[edi]; sar dh, 0xff; add ebx, 0x3e51e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a3253: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0015e7c6: cmpsd dword ptr [esi], dword ptr es:[edi]; std; jmp dword ptr [esi - 0x70]; 
0x00099909: cmpxchg dword ptr [ebx], edx; jne 0x99918; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00098932: cmpxchg dword ptr [ebx], esi; jne 0x98940; xor eax, eax; pop ebx; pop esi; ret; 
0x0008cfeb: cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0009994c: cmpxchg dword ptr [edx], ecx; jne 0x99942; xor eax, eax; pop ebx; ret; 
0x0009998a: cmpxchg dword ptr [edx], ecx; jne 0x99998; xor eax, eax; pop ebx; ret; 
0x0009863c: cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00092d49: cmpxchg dword ptr [esp + 4], edx; ret; 
0x0013a706: cmpxchg8b qword ptr [edi]; add byte ptr [ebx + 0xc480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0012ebd0: cvtdq2ps xmm3, xmmword ptr [esi + 0x5f]; pop ebp; ret; 
0x0013cd5a: cvtdq2ps xmm7, xmmword ptr [eax - 1]; pop esi; pop edi; ret; 
0x00026847: cwde; adc eax, 0x241c8900; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x000b0e44: cwde; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00192c7d: cwde; add bh, bh; inc dword ptr [ecx + 0x41e0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001115d3: cwde; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x0006cf03: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x0007ab1b: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000cc0c9: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c5709: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x00079f61: cwde; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0013a981: cwde; add dword ptr [eax + eax], -0x7f; ret 0xc48f; 
0x001a5364: cwde; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x0016a8e5: cwde; and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0018e1fa: cwde; arpl word ptr [eax + eax], ax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000328e5: cwde; call dword ptr [ecx]; 
0x0016f62b: cwde; cld; jmp dword ptr [esi - 0x70]; 
0x00190c7a: cwde; cmp eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a2cee: cwde; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x001501a8: cwde; fsubr dword ptr [ebp - 7]; call dword ptr [ebx - 0x73]; 
0x00146fa4: cwde; idiv edi; inc dword ptr [ebx - 0x7a72f714]; cmp ecx, edi; call dword ptr [eax - 0x73]; 
0x001892d2: cwde; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x00128dc8: cwde; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x0010abf9: cwde; mov edi, 0x850f001f; cmp eax, 0xf7fffffd; ret 0x67; 
0x00183f54: cwde; mov edi, gs; jmp dword ptr [ecx]; 
0x0019217d: cwde; or edi, edi; inc dword ptr [ecx + 0x4290fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013a55d: cwde; out dx, eax; call dword ptr [ebp + 0x57]; 
0x0003d5d9: cwde; pop ds; add byte ptr [ebx - 0x7f72e714], al; movsb byte ptr es:[edi], byte ptr [esi]; test ecx, edi; call dword ptr [eax - 0x18]; 
0x000c21b2: cwde; pop ebx; pop esi; ret; 
0x0007dad4: cwde; pushal; cli; jmp dword ptr [esi - 0x70]; 
0x00150a76: cwde; ret 0xfff9; 
0x0009b446: cwde; stc; call dword ptr [eax + 0x68]; 
0x0009a092: cwde; stc; call dword ptr [eax - 0x18]; 
0x00099d80: cwde; stc; call dword ptr [eax - 0x73]; 
0x0015f6dd: cwde; std; call dword ptr [edi + 0x31]; 
0x000a248c: cwde; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x00140a04: cwde; xor eax, 0xc483fffe; adc byte ptr [ebp - 0x7277f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x001922e4: daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002d456: daa; add al, byte ptr [eax]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0011b73d: daa; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000d7d14: daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011de8c: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0011b8ba: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9b0: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008efb1: daa; add dword ptr [eax], eax; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000b5205: daa; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0015d300: daa; add esp, 0x18; pop ebx; ret; 
0x00069716: daa; and eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x850f; 
0x000e1ef5: daa; call 0xc4921ef8; adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x7e9; 
0x000be302: daa; dec edx; or al, 0; add ecx, 0x107d6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00151429: daa; inc ebp; stc; call dword ptr [eax + 0x52]; 
0x00154bda: daa; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00161bb5: daa; jae 0x161bb5; jmp dword ptr [esi - 0x70]; 
0x0004ca55: daa; jae 0x4ca56; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x000c04be: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000c0864: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00169315: daa; mov ebp, 0xc4830000; adc byte ptr [ebp - 0x7c348b40], al; ret; 
0x000a11dd: daa; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc dword ptr [eax], -0x5f; stc; call dword ptr [eax - 0x18]; 
0x00110a13: daa; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x00151f40: daa; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00088258: daa; push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00092764: daa; push eax; stc; call dword ptr [eax - 0x18]; 
0x0015dfb5: daa; scasd eax, dword ptr es:[edi]; std; jmp dword ptr [esi - 0x70]; 
0x00191b58: das; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a0483: das; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add al, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x00128b6d: das; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cmc; arpl cx, di; call dword ptr [eax + 0x56]; 
0x0011a6e1: das; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000b88cd: das; add eax, 0x5e5f0000; pop ebx; ret; 
0x00192863: das; and al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019c80d: das; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0011e8ca: das; call dword ptr gs:[0x10]; 
0x00175f56: das; cld; jmp dword ptr [esi - 0x70]; 
0x000e4703: das; idiv edi; call dword ptr [eax + 0x55]; 
0x001903e3: das; inc esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b8f73: das; iretd; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0010e306: das; ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ede0]; jmp eax; 
0x0010d401: das; ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x0010dc82: das; ja 0x10d5f0; mov eax, dword ptr [ebx + esi*4 - 0x6eea0]; add eax, ebx; jmp eax; 
0x0010d5e0: das; ja 0x10d5f0; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x00181fcd: das; ja 0x24a04; mov eax, dword ptr [ebp - 0x38]; add eax, dword ptr [eax + edx*4 - 0x6c854]; jmp eax; 
0x000e7257: das; ja 0xe75d0; mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x00161ed3: das; jb 0x161ecf; call dword ptr [eax - 0x18]; 
0x00162049: das; jb 0x162045; call dword ptr [eax - 0x73]; 
0x0017d404: das; jbe 0x17d38c; in al, dx; add al, 0x83; ret; 
0x00059d2b: das; jbe 0x59cb9; ret 0x40c7; 
0x00151b9b: das; je 0x151c02; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00151dbb: das; je 0x151e22; mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x000f7f04: das; je 0xf7f62; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000be247: das; jle 0xbe25a; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000528fa: das; jne 0x528f0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0009dae2: das; jne 0x9db28; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0009e5e7: das; mov byte ptr [ecx], bl; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x9e600; ret; 
0x0012bbe7: das; mov dl, 0x10; add byte ptr [ebx - 0x48], dl; ret; 
0x0008f700: das; mov eax, edi; call dword ptr gs:[0x10]; 
0x0012a9c8: das; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0018ee63: das; push edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009fba5: das; push edx; stc; call dword ptr [eax - 0x18]; 
0x000aabe6: das; ret 0x18; 
0x000344e6: das; sub dword ptr [eax], esp; add byte ptr [ebx + 0x1d080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0007fdb0: das; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0019916b: dec byte ptr [ebp - 0x7af00487]; ret 6; 
0x0019d91b: dec byte ptr [ebp - 0x7af00587]; ret; 
0x001978db: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x0019b01b: dec byte ptr [ebp - 0x7af00687]; ret; 
0x0019866b: dec byte ptr [ebp - 0x7af00c87]; ret 0x11; 
0x001970db: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x0019a11b: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x0018c0b8: dec byte ptr [ebx + 0x5b082444]; ret; 
0x0010afa7: dec byte ptr [ebx + 0x882494]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00101383: dec byte ptr [ebx - 0x16fbdb84]; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x0012876e: dec byte ptr [ebx - 0x1d7cfbaa]; add dword ptr [ecx], ecx; ret 0x78b; 
0x0005b6e0: dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00066ed7: dec byte ptr [ecx + 0x72d938f3]; ret 0xf089; 
0x000d41ee: dec byte ptr [ecx - 0x364b6b]; call ebx; 
0x000960ab: dec dword ptr [0x2890f00]; xor eax, eax; ret; 
0x000be782: dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0018f20b: dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x000bdb52: dec dword ptr [eax + 0x5bf88938]; pop edi; ret; 
0x001911fb: dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0003a204: dec dword ptr [eax - 0x49f0f5fc]; inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0005b109: dec dword ptr [eax - 0xad73]; dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xa74b]; jmp dword ptr [ebp - 0x75]; 
0x00098615: dec dword ptr [eax]; jne 0x98620; xor eax, eax; ret; 
0x0010764c: dec dword ptr [ebp + 0x148b0076]; and al, 0xe9; ret; 
0x0003de44: dec dword ptr [ebp + 0x16ba0076]; add byte ptr [eax], al; add cl, ch; ret; 
0x0013c384: dec dword ptr [ebp + 0x1cba0076]; add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x001669fc: dec dword ptr [ebp + 0x1ce80076]; ret; 
0x00091b6a: dec dword ptr [ebp + 0x2208d]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x0003d820: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x0013d2ff: dec dword ptr [ebp + 0x393c2444]; ret; 
0x0018293c: dec dword ptr [ebp + 0x448b0076]; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x001403c1: dec dword ptr [ebp + 0x48d4004]; ret; 
0x000d36d2: dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x0008d5db: dec dword ptr [ebp + 0x5b002674]; pop esi; pop edi; ret; 
0x000558e5: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 4; 
0x00037bc3: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000bf262: dec dword ptr [ebp + 0x5f103844]; ret; 
0x0006d61a: dec dword ptr [ebp + 0x64450184]; jecxz 0x6d621; jmp eax; 
0x00117f9a: dec dword ptr [ebp + 0x6a501447]; add bh, bh; je 0x117fc8; sub al, 0xff; ja 0x117fb4; call dword ptr [edi + 0x24]; 
0x0011900a: dec dword ptr [ebp + 0x6a501447]; add bh, bh; je 0x119038; sub al, 0xff; ja 0x119024; call dword ptr [edi + 0x24]; 
0x0011a0aa: dec dword ptr [ebp + 0x6a501447]; add bh, bh; je 0x11a0d8; sub al, 0xff; ja 0x11a0c4; call dword ptr [edi + 0x24]; 
0x001ab7ec: dec dword ptr [ebp + 0x7d8b0076]; mov al, 0x39; ret; 
0x0017c451: dec dword ptr [ebp + 0xb6]; add al, ch; ret; 
0x00060c61: dec dword ptr [ebp + 0xb6]; add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6bf986d], cl; call dword ptr [esi + 0x52]; 
0x00056949: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x001086b1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10859a; call eax; 
0x001278c1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7972fb14], al; pushfd; mov ah, 0xf9; call dword ptr [edi - 0x7f]; 
0x0007a021: dec dword ptr [ebp + 0xb6]; add byte ptr [ecx], bh; ret; 
0x0008c3c9: dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x001302a1: dec dword ptr [ebp - 0x106dd380]; call dword ptr [eax + 0x6a]; 
0x0018a305: dec dword ptr [ebp - 0x12718380]; call dword ptr [eax + 0x6a]; 
0x000a53fc: dec dword ptr [ebp - 0x137cff8a]; add al, 0x8d; test dword ptr [ebp + 0x6afff954], ecx; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x000680fc: dec dword ptr [ebp - 0x137cff8a]; or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x0008babc: dec dword ptr [ebp - 0x137cff8a]; or al, 0x89; ret 0xe989; 
0x00136b7c: dec dword ptr [ebp - 0x137cff8a]; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x000f65c5: dec dword ptr [ebp - 0x1422c380]; call dword ptr [eax + 0x6a]; 
0x00188405: dec dword ptr [ebp - 0x1430a380]; call dword ptr [eax + 0x6a]; 
0x000f2d45: dec dword ptr [ebp - 0x145b4380]; call dword ptr [eax + 0x6a]; 
0x00186705: dec dword ptr [ebp - 0x14691380]; call dword ptr [eax + 0x6a]; 
0x000ef4c5: dec dword ptr [ebp - 0x1493c380]; call dword ptr [eax + 0x6a]; 
0x0017bd20: dec dword ptr [ebp - 0x14b7b]; call dword ptr [eax + 0x6a]; 
0x00094a76: dec dword ptr [ebp - 0x15fef3a1]; jmp edx; 
0x000c3575: dec dword ptr [ebp - 0x1600b380]; push esi; inc ecx; jnp 0xc3584; cmove eax, edx; ret; 
0x000c25b5: dec dword ptr [ebp - 0x160e1380]; push esi; inc ecx; jnp 0xc25c4; cmove eax, edx; ret; 
0x0015096c: dec dword ptr [ebp - 0x17acff8a]; mov dword ptr [0x81000323], eax; ret; 
0x00037b90: dec dword ptr [ebp - 0x1ff47379]; call dword ptr [eax + 0x6a]; 
0x00031203: dec dword ptr [ebp - 0x205e9379]; call dword ptr [eax + 0x6a]; 
0x0018309c: dec dword ptr [ebp - 0x2bb7d]; dec dword ptr [ecx + 0x34894c46]; and al, 0xe8; ret 0x12; 
0x000d3e08: dec dword ptr [ebp - 0x35e34b]; dec dword ptr [ebx - 0x36576b]; call dword ptr [eax - 0x73]; 
0x00058727: dec dword ptr [ebp - 0x35f343]; dec dword ptr [ecx - 0x361f43]; call ebx; 
0x00057ecd: dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000d4b8d: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x00057c8e: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x000992b7: dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x0008dafc: dec dword ptr [ebp - 0x3b7cff8a]; add al, 0x5b; pop esi; ret; 
0x0005aee4: dec dword ptr [ebp - 0x3b7cff8a]; or byte ptr [eax - 1], bh; pop ebx; ret; 
0x000eda74: dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0010841c: dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x0014352a: dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax - 0x77]; 
0x0012749d: dec dword ptr [ebp - 0x42c63]; call dword ptr [eax - 0x73]; 
0x00066fef: dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0012746a: dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x00077512: dec dword ptr [ebp - 0x4877b]; dec dword ptr [ecx - 0x5377b]; call dword ptr [eax + 0x50]; 
0x000716f6: dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x000761fc: dec dword ptr [ebp - 0x4cb6b]; call dword ptr [edx + 0x50]; 
0x00073f59: dec dword ptr [ebp - 0x4cb7b]; call dword ptr [ecx - 1]; 
0x000654ac: dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x000696d6: dec dword ptr [ebp - 0x56f7b]; call dword ptr [eax + 0x52]; 
0x0017e9b1: dec dword ptr [ebp - 0x634df7a]; call dword ptr [eax - 0x73]; 
0x0017adf8: dec dword ptr [ebp - 0x6355b79]; call dword ptr [eax - 0x73]; 
0x001747f2: dec dword ptr [ebp - 0x636bf7d]; call dword ptr [edx + 0x6a]; 
0x00173e64: dec dword ptr [ebp - 0x637737d]; call dword ptr [edx + 0x6a]; 
0x0016e967: dec dword ptr [ebp - 0x6388b7d]; call dword ptr [edx + 0x6a]; 
0x0016ea1a: dec dword ptr [ebp - 0x638bb7d]; call dword ptr [ebp + 0x6a]; 
0x00164fdb: dec dword ptr [ebp - 0x63a0779]; call dword ptr [eax - 0x73]; 
0x0014d82e: dec dword ptr [ebp - 0x63ed37d]; call dword ptr [eax - 0x73]; 
0x0014d41e: dec dword ptr [ebp - 0x63ee37d]; call dword ptr [eax - 0x73]; 
0x0014cba5: dec dword ptr [ebp - 0x63f1b7f]; call dword ptr [eax - 0x73]; 
0x0014cd1d: dec dword ptr [ebp - 0x63f277f]; call dword ptr [eax - 0x73]; 
0x0014cffa: dec dword ptr [ebp - 0x63f3f7a]; call dword ptr [eax - 0x73]; 
0x0014bf5a: dec dword ptr [ebp - 0x63f5b7d]; call dword ptr [eax + 0x68]; 
0x00139e04: dec dword ptr [ebp - 0x645e379]; call dword ptr [eax - 0x73]; 
0x001305c4: dec dword ptr [ebp - 0x648b37a]; call dword ptr [eax - 0x73]; 
0x00128dc5: dec dword ptr [ebp - 0x64a677d]; call dword ptr [eax - 0x73]; 
0x0018b1cf: dec dword ptr [ebp - 0x64ddb79]; call dword ptr [eax - 0x73]; 
0x0011096b: dec dword ptr [ebp - 0x64def7e]; call dword ptr [eax + 0x68]; 
0x000f748f: dec dword ptr [ebp - 0x64f4f79]; call dword ptr [eax - 0x73]; 
0x001892cf: dec dword ptr [ebp - 0x64f6779]; call dword ptr [eax - 0x73]; 
0x000f3c1b: dec dword ptr [ebp - 0x64f7379]; call dword ptr [eax - 0x73]; 
0x001875cf: dec dword ptr [ebp - 0x64f8779]; call dword ptr [eax - 0x73]; 
0x000f0391: dec dword ptr [ebp - 0x64f8f79]; call dword ptr [eax - 0x73]; 
0x000ee737: dec dword ptr [ebp - 0x64f9b7e]; call dword ptr [eax + 0x68]; 
0x000ec59d: dec dword ptr [ebp - 0x6509f7d]; call dword ptr [eax - 0x73]; 
0x000e8a96: dec dword ptr [ebp - 0x650c37d]; call dword ptr [eax - 0x73]; 
0x000ea7be: dec dword ptr [ebp - 0x650cf7d]; call dword ptr [eax - 0x73]; 
0x000db346: dec dword ptr [ebp - 0x6519b7d]; call dword ptr [eax - 0x73]; 
0x000dbccf: dec dword ptr [ebp - 0x651af7d]; call dword ptr [eax - 0x73]; 
0x000d5975: dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x000d5b74: dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x000d01d3: dec dword ptr [ebp - 0x652177d]; call dword ptr [eax - 0x73]; 
0x000c7c92: dec dword ptr [ebp - 0x652e37f]; call dword ptr [eax - 0x73]; 
0x000c331b: dec dword ptr [ebp - 0x6536f70]; call dword ptr [edx - 0x73]; 
0x000c23b5: dec dword ptr [ebp - 0x653ef7a]; call dword ptr [eax - 0x73]; 
0x000c1ac2: dec dword ptr [ebp - 0x654477b]; call dword ptr [eax - 0x73]; 
0x000aae79: dec dword ptr [ebp - 0x654ff70]; call dword ptr [edx - 0x73]; 
0x000a8dbe: dec dword ptr [ebp - 0x6559370]; call dword ptr [edx - 0x73]; 
0x000a29fd: dec dword ptr [ebp - 0x656af79]; call dword ptr [eax - 0x73]; 
0x0009fbfc: dec dword ptr [ebp - 0x656bf7a]; call dword ptr [eax - 0x73]; 
0x0009fb8f: dec dword ptr [ebp - 0x656e77a]; call dword ptr [eax - 0x73]; 
0x000a1ea6: dec dword ptr [ebp - 0x656f379]; call dword ptr [eax + 0x68]; 
0x000a20db: dec dword ptr [ebp - 0x656f379]; call dword ptr [eax - 0x73]; 
0x000a11ce: dec dword ptr [ebp - 0x656ff7d]; call dword ptr [eax - 0x73]; 
0x0009e8da: dec dword ptr [ebp - 0x657377f]; call dword ptr [eax - 0x73]; 
0x000a323c: dec dword ptr [ebp - 0x6574779]; call dword ptr [eax + 0x68]; 
0x000a35d9: dec dword ptr [ebp - 0x6575779]; call dword ptr [eax - 0x73]; 
0x000a3b58: dec dword ptr [ebp - 0x657977d]; call dword ptr [eax - 0x73]; 
0x0009b5ab: dec dword ptr [ebp - 0x6671b79]; call dword ptr [eax - 0x73]; 
0x0009b442: dec dword ptr [ebp - 0x6672f7b]; call dword ptr [eax + 0x68]; 
0x00095f79: dec dword ptr [ebp - 0x668bf7a]; call dword ptr [eax - 0x73]; 
0x0009583d: dec dword ptr [ebp - 0x668ff79]; call dword ptr [eax - 0x73]; 
0x0009472a: dec dword ptr [ebp - 0x669177a]; call dword ptr [eax + 0x68]; 
0x00094753: dec dword ptr [ebp - 0x669177a]; call dword ptr [eax + 0x6a]; 
0x00094805: dec dword ptr [ebp - 0x669177a]; call dword ptr [eax - 0x73]; 
0x00093910: dec dword ptr [ebp - 0x6694f7a]; call dword ptr [eax + 0x68]; 
0x0009394f: dec dword ptr [ebp - 0x6694f7a]; call dword ptr [eax + 0x6a]; 
0x000939ff: dec dword ptr [ebp - 0x6694f7a]; call dword ptr [eax - 0x73]; 
0x0008254f: dec dword ptr [ebp - 0x66ccf7a]; call dword ptr [eax - 0x73]; 
0x00076e8e: dec dword ptr [ebp - 0x6722f7a]; call dword ptr [eax + 0x68]; 
0x000688f0: dec dword ptr [ebp - 0x672437f]; call dword ptr [eax - 0x73]; 
0x0005d0e3: dec dword ptr [ebp - 0x6747f79]; call dword ptr [eax - 0x73]; 
0x0005d23a: dec dword ptr [ebp - 0x6747f7a]; call dword ptr [eax - 0x73]; 
0x0005d157: dec dword ptr [ebp - 0x6747f7d]; call dword ptr [eax - 0x73]; 
0x0005d108: dec dword ptr [ebp - 0x6747f7e]; call dword ptr [eax - 0x73]; 
0x0005a751: dec dword ptr [ebp - 0x676837a]; call dword ptr [eax - 0x73]; 
0x00058d04: dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x00058e33: dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x0004cb07: dec dword ptr [ebp - 0x677bf79]; call dword ptr [eax - 0x73]; 
0x00058de9: dec dword ptr [ebp - 0x677e37a]; call dword ptr [eax - 0x73]; 
0x0013e8be: dec dword ptr [ebp - 0x67bcb67]; call dword ptr [eax + 0x53]; 
0x0013e84f: dec dword ptr [ebp - 0x67bcb75]; call dword ptr [eax - 0x77]; 
0x000322d6: dec dword ptr [ebp - 0x67ca37d]; call dword ptr [eax - 0x73]; 
0x00031acf: dec dword ptr [ebp - 0x67ce37e]; call dword ptr [eax - 0x73]; 
0x0002fe59: dec dword ptr [ebp - 0x67d377d]; call dword ptr [eax - 0x73]; 
0x00094fa0: dec dword ptr [ebp - 0x682537b]; call dword ptr [eax - 0x73]; 
0x00093a76: dec dword ptr [ebp - 0x682937f]; call dword ptr [eax - 0x73]; 
0x000779ea: dec dword ptr [ebp - 0x682b37a]; call dword ptr [eax - 0x73]; 
0x0013f931: dec dword ptr [ebp - 0x68a3d7d]; call dword ptr [esi + 0x6a]; 
0x0016e9d3: dec dword ptr [ebp - 0x68b7e7d]; call dword ptr [edi + 0x6a]; 
0x0016ab99: dec dword ptr [ebp - 0x68bc77d]; call dword ptr [edx + 0x6a]; 
0x0013a7c1: dec dword ptr [ebp - 0x697d57a]; call dword ptr [ecx - 0x77]; 
0x00132747: dec dword ptr [ebp - 0x69a8379]; call dword ptr [ebp - 1]; 
0x0012f70a: dec dword ptr [ebp - 0x69aee7d]; call dword ptr [eax + 0x57]; 
0x0010a4e7: dec dword ptr [ebp - 0x6a77b79]; call dword ptr [eax - 0x18]; 
0x0010363d: dec dword ptr [ebp - 0x6a7e671]; call dword ptr [eax - 0x77]; 
0x000f79f8: dec dword ptr [ebp - 0x6a81e80]; call dword ptr [ebx + 0x50]; 
0x000f79bd: dec dword ptr [ebp - 0x6a84380]; call dword ptr [eax + 0x6a]; 
0x00103934: dec dword ptr [ebp - 0x6b0bf71]; call dword ptr [eax - 0x17]; 
0x000fad32: dec dword ptr [ebp - 0x6bcfe7d]; call dword ptr [edx + 0x52]; 
0x0005fbb2: dec dword ptr [ebp - 0x6bdcb7d]; call dword ptr [esi + 0x6a]; 
0x0005fb99: dec dword ptr [ebp - 0x6bde47d]; call dword ptr [esi + 0x6a]; 
0x00047ef4: dec dword ptr [ebp - 0x6c07c80]; call dword ptr [ebx + 0x6a]; 
0x00056a74: dec dword ptr [ebp - 0x6c07c80]; call dword ptr [esi + 0x6a]; 
0x0003f9ca: dec dword ptr [ebp - 0x6c0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003f9c4: dec dword ptr [ebp - 0x6c3237b]; dec dword ptr [ebp - 0x6c0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003f84b: dec dword ptr [ebp - 0x6c3237b]; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003f495: dec dword ptr [ebp - 0x6c3237b]; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x00107c3d: dec dword ptr [ebp - 0x6f43c7d]; call dword ptr [ecx + 0x6a]; 
0x00056130: dec dword ptr [ebp - 0x700b7c7c]; clc; call dword ptr [eax + 0x51]; 
0x000561b5: dec dword ptr [ebp - 0x700b7c7c]; clc; call dword ptr [eax - 1]; 
0x0005c6d4: dec dword ptr [ebp - 0x700b7d7c]; clc; call dword ptr [eax + 0x56]; 
0x0006aebf: dec dword ptr [ebp - 0x740375ac]; adc ch, cl; ret; 
0x0013b3fc: dec dword ptr [ebp - 0x74acff8a]; inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00105cd6: dec dword ptr [ebp - 0x74ffe2b4]; pop ecx; add al, 0xf7; ret; 
0x0012c983: dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012d038: dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000e1a03: dec dword ptr [ebp - 0x76ffd98c]; ret 0x56e9; 
0x0013e433: dec dword ptr [ebp - 0x76ffd98c]; ret; 
0x00035003: dec dword ptr [ebp - 0x76ffd98c]; ror byte ptr [ecx - 0x7439760e], 1; inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x00056a6e: dec dword ptr [ebp - 0x7d350]; dec dword ptr [ebp - 0x6c07c80]; call dword ptr [esi + 0x6a]; 
0x000567f5: dec dword ptr [ebp - 0x7d379]; call dword ptr [eax - 0x73]; 
0x000c2565: dec dword ptr [ebp - 0x91d4380]; push esi; inc ecx; jnp 0xc2574; cmove eax, edx; ret; 
0x000a9d95: dec dword ptr [ebp - 0x92a3380]; push esi; inc ecx; jnp 0xa9da4; cmove eax, edx; ret; 
0x0017a5de: dec dword ptr [ebp - 0x937b]; call dword ptr [ecx + 0x6a]; 
0x000a9f95: dec dword ptr [ebp - 0x9631380]; push esi; inc ecx; jbe 0xa9fb0; cmove eax, edx; ret; 
0x000a9dc5: dec dword ptr [ebp - 0x9641380]; push esi; inc ecx; jbe 0xa9de0; cmove eax, edx; ret; 
0x000a8e95: dec dword ptr [ebp - 0x9659380]; push esi; inc ecx; jbe 0xa8eb0; cmove eax, edx; ret; 
0x00136667: dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x0005b3fb: dec dword ptr [ebp - 0x9ffd98c]; ret 0xf50; 
0x0017b0a8: dec dword ptr [ebp - 0x9fffaa4]; ret; 
0x00130527: dec dword ptr [ebp - 0xa77b]; call dword ptr [ebx + 0x50]; 
0x0017ad8d: dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x00032e50: dec dword ptr [ebp - 0xc743]; dec dword ptr [ebp - 0xcb4b]; call dword ptr [edi + 0x56]; 
0x00032e56: dec dword ptr [ebp - 0xcb4b]; call dword ptr [edi + 0x56]; 
0x001727a5: dec dword ptr [ebp - 0xcdb434a]; call dword ptr [ebp - 0x73]; 
0x0014d650: dec dword ptr [ebp - 0xe9c537d]; call dword ptr [esi + 0x50]; 
0x0009ff28: dec dword ptr [ebx + 0x10883]; add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00027083: dec dword ptr [ebx + 0x10c083]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x210fd36d], cl; call dword ptr [edx + 0x50]; 
0x00105eb0: dec dword ptr [ebx + 0x1182454]; ret 0x7c80; 
0x000654a0: dec dword ptr [ebx + 0x15880]; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x000cfe84: dec dword ptr [ebx + 0x17082]; add byte ptr [ecx], dh; jmp dword ptr [ebp - 0x75]; 
0x000a6527: dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0010e5d1: dec dword ptr [ebx + 0x29042444]; ret; 
0x0010e30c: dec dword ptr [ebx + 0x3082444]; test byte ptr [eax - 0x6ede0], dh; jmp eax; 
0x0018370b: dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x000917b5: dec dword ptr [ebx + 0x311c244c]; ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011fbb2: dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x00126272: dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x00028d8f: dec dword ptr [ebx + 0x39042444]; ret 0x840f; 
0x00103bf8: dec dword ptr [ebx + 0x39082444]; ret; 
0x0002c09f: dec dword ptr [ebx + 0x390c2444]; ret 0x1a73; 
0x00164cbc: dec dword ptr [ebx + 0x39202444]; ret 0x1074; 
0x001567d4: dec dword ptr [ebx + 0x392c244c]; ret; 
0x00164e3f: dec dword ptr [ebx + 0x39302444]; ret 0x1074; 
0x0014758c: dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00068ac1: dec dword ptr [ebx + 0x39c12907]; fnstenv [ebp - 0x7d]; in al, dx; or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x00065b01: dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0005ce9d: dec dword ptr [ebx + 0x4589b055]; mov eax, 0xfff89ee9; call dword ptr [eax + 0x52]; 
0x000ee79b: dec dword ptr [ebx + 0x458b084d]; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x00107373: dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00107388: dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0006e0d0: dec dword ptr [ebx + 0x478b0457]; or byte ptr [ecx], bh; ret 0x840f; 
0x00136938: dec dword ptr [ebx + 0x538b2043]; sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x0012d234: dec dword ptr [ebx + 0x548b240c]; and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001aa162: dec dword ptr [ebx + 0x558bb045]; les ecx, ptr [ecx]; ret 0xfa09; 
0x00122f17: dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0018c097: dec dword ptr [ebx + 0x5b082444]; ret; 
0x00143a6e: dec dword ptr [ebx + 0x650c2454]; sub edx, dword ptr [0x14]; jne 0x143a80; add esp, 0x1c; ret; 
0x000ddf9f: dec dword ptr [ebx + 0x66142474]; or dword ptr [esp + 0x58], 0x46890408; adc cl, ch; ret 0xffed; 
0x000fd98e: dec dword ptr [ebx + 0x8093]; add dh, dh; ret 0x7540; 
0x000fdaea: dec dword ptr [ebx + 0x8093]; add dh, dh; ret 0xf40; 
0x0005bb5d: dec dword ptr [ebx + 0x9c8e]; add byte ptr [ebp - 0x6c07242], cl; jmp dword ptr [ebp - 0x75]; 
0x00071cb5: dec dword ptr [ebx + 0xa488]; add byte ptr [ebp - 0x75], ah; add dword ptr [ecx - 0x5577b], ecx; jmp dword ptr [ebp - 0x39]; 
0x0007277c: dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x0007400c: dec dword ptr [ebx + 0xa488]; add byte ptr [ecx - 0x50343], cl; jmp dword ptr [ebp - 0x75]; 
0x0006711e: dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00140f4c: dec dword ptr [ebx + 0xc480]; add byte ptr [ebp - 0x75], ah; add cl, ch; ret 0xfffe; 
0x000985c7: dec dword ptr [ebx + 0xf0c2444]; inc edi; ret 0x948b; 
0x00106fca: dec dword ptr [ebx + 0xf0c2444]; mov dh, 0x53; add al, 0x8b; mov word ptr [eax - 0x6f5e8], ss; add ecx, eax; jmp ecx; 
0x00047397: dec dword ptr [ebx + 0xf10247c]; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x001489b8: dec dword ptr [ebx + 0xf1c244c]; mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x001488b3: dec dword ptr [ebx + 0xf1c244c]; mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x001824a1: dec dword ptr [ebx - 0x137c37bb]; or al, 0x8d; or byte ptr [edi + 0x77], 0xf9; call dword ptr [eax - 0x18]; 
0x001357df: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x6629808d; stc; call dword ptr [eax - 0x75]; 
0x00134c3a: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xb844808d; stc; call dword ptr [eax - 0x75]; 
0x00135892: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xb87c808d; stc; call dword ptr [eax + 0x6a]; 
0x0003534d: dec dword ptr [ebx - 0x137c67bb]; or al, 0x89; push ebp; mov esp, 0x3e3f808d; stc; call dword ptr [eax - 0x18]; 
0x000e956a: dec dword ptr [ebx - 0x137cffbb]; or al, 0x31; call dword ptr [eax - 0x18]; 
0x00164b9d: dec dword ptr [ebx - 0x14ebdb8c]; adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x000f7afb: dec dword ptr [ebx - 0x15637b]; inc dword ptr [ebx - 0x7f72f714]; add bl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x00105067: dec dword ptr [ebx - 0x16fbdb94]; ret 0xfffe; 
0x000d4a5a: dec dword ptr [ebx - 0x1aff7b]; dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x00031ac9: dec dword ptr [ebx - 0x1d36b]; dec dword ptr [ebp - 0x67ce37e]; call dword ptr [eax - 0x73]; 
0x00037f41: dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x00071a71: dec dword ptr [ebx - 0x25576974]; clc; inc dword ptr [ecx]; int1; jmp ecx; 
0x0006d613: dec dword ptr [ebx - 0x29337e7c]; clc; dec dword ptr [ebp + 0x64450184]; jecxz 0x6d621; jmp eax; 
0x00178021: dec dword ptr [ebx - 0x2abb7700]; les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x000d4a60: dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x00058316: dec dword ptr [ebx - 0x35eb7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000d4284: dec dword ptr [ebx - 0x361b6b]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00055c07: dec dword ptr [ebx - 0x361f4b]; inc dword ptr [ecx]; ret 0xd389; 
0x000d414a: dec dword ptr [ebx - 0x362743]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d33a7: dec dword ptr [ebx - 0x362b63]; call dword ptr [ebx]; 
0x00055c01: dec dword ptr [ebx - 0x362f43]; dec dword ptr [ebx - 0x361f4b]; inc dword ptr [ecx]; ret 0xd389; 
0x00057c88: dec dword ptr [ebx - 0x362f73]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00056bf0: dec dword ptr [ebx - 0x36336b]; dec dword ptr [ebx - 0x36774b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d4f48: dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000d354b: dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x73]; 
0x00057d14: dec dword ptr [ebx - 0x36377b]; call dword ptr [ebx + 0x56]; 
0x000d46c6: dec dword ptr [ebx - 0x36377b]; call dword ptr [esi + 0x57]; 
0x000d2ebe: dec dword ptr [ebx - 0x36377b]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000d596f: dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x000d5c02: dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x677e37a]; call dword ptr [eax - 0x73]; 
0x000d5722: dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x000d5b6e: dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x000d3d33: dec dword ptr [ebx - 0x363f7b]; call dword ptr [edi + 0x6a]; 
0x00058cfe: dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x00058e2d: dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x00058de3: dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x677e37a]; call dword ptr [eax - 0x73]; 
0x0005891c: dec dword ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x00058062: dec dword ptr [ebx - 0x364763]; call dword ptr [eax - 0x73]; 
0x000d4909: dec dword ptr [ebx - 0x364773]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00056a68: dec dword ptr [ebx - 0x36477b]; dec dword ptr [ebp - 0x7d350]; dec dword ptr [ebp - 0x6c07c80]; call dword ptr [esi + 0x6a]; 
0x0005607b: dec dword ptr [ebx - 0x364b43]; call dword ptr [ebx]; 
0x000d35fc: dec dword ptr [ebx - 0x364f4b]; call dword ptr [ebx - 0x73]; 
0x00057d0e: dec dword ptr [ebx - 0x364f4b]; dec dword ptr [ebx - 0x36377b]; call dword ptr [ebx + 0x56]; 
0x000569cd: dec dword ptr [ebx - 0x364f63]; inc dword ptr [ebx - 0x362743]; call dword ptr [eax]; 
0x00055bf5: dec dword ptr [ebx - 0x364f6b]; dec dword ptr [ebx - 0x36737b]; dec dword ptr [ebx - 0x362f43]; dec dword ptr [ebx - 0x361f4b]; inc dword ptr [ecx]; ret 0xd389; 
0x000d3e0e: dec dword ptr [ebx - 0x36576b]; call dword ptr [eax - 0x73]; 
0x000d4b87: dec dword ptr [ebx - 0x365773]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x00057a11: dec dword ptr [ebx - 0x365b63]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00055ed4: dec dword ptr [ebx - 0x366f63]; dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x00055bfb: dec dword ptr [ebx - 0x36737b]; dec dword ptr [ebx - 0x362f43]; dec dword ptr [ebx - 0x361f4b]; inc dword ptr [ecx]; ret 0xd389; 
0x00056bf6: dec dword ptr [ebx - 0x36774b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00055eda: dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x00055ece: dec dword ptr [ebx - 0x36977b]; dec dword ptr [ebx - 0x366f63]; dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x0005aa33: dec dword ptr [ebx - 0x3763796c]; clc; inc dword ptr [ecx]; bnd jmp edx; 
0x0013758d: dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x00134c25: dec dword ptr [ebx - 0x3b7cf78b]; adc byte ptr [ecx], cl; ret; 
0x0008aef8: dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x00127f81: dec dword ptr [ebx - 0x3f7af7bd]; jne 0x127fa8; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000fb966: dec dword ptr [ebx - 0x3f7ce3a2]; add dword ptr [ecx], edi; ret; 
0x000fb7e6: dec dword ptr [ebx - 0x3f7ce3aa]; add dword ptr [ecx], edi; ret 0xef7f; 
0x0014372c: dec dword ptr [ebx - 0x44343]; jmp dword ptr [ebp - 0x75]; 
0x00067380: dec dword ptr [ebx - 0x4436b]; dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x00068872: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x00068d1b: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00068b7c: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x000673eb: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x00143726: dec dword ptr [ebx - 0x44f7b]; dec dword ptr [ebx - 0x44343]; jmp dword ptr [ebp - 0x75]; 
0x00143655: dec dword ptr [ebx - 0x4536b]; jmp dword ptr [ebp - 0x75]; 
0x0010c752: dec dword ptr [ebx - 0x45f73]; call dword ptr [eax + 0x53]; 
0x0010c7ac: dec dword ptr [ebx - 0x45f73]; call dword ptr [eax - 0x77]; 
0x0018b1c9: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64ddb79]; call dword ptr [eax - 0x73]; 
0x000f7489: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64f4f79]; call dword ptr [eax - 0x73]; 
0x001892c9: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64f6779]; call dword ptr [eax - 0x73]; 
0x001875c9: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64f8779]; call dword ptr [eax - 0x73]; 
0x000effa7: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x18]; 
0x000f3784: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x000eff14: dec dword ptr [ebx - 0x46f63]; call dword ptr [ecx - 0x7d]; 
0x000eeb13: dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0018a2f9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x12718380]; call dword ptr [eax + 0x6a]; 
0x000f65b9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1422c380]; call dword ptr [eax + 0x6a]; 
0x001883f9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1430a380]; call dword ptr [eax + 0x6a]; 
0x000f2d39: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x145b4380]; call dword ptr [eax + 0x6a]; 
0x001866f9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14691380]; call dword ptr [eax + 0x6a]; 
0x000ef4b9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1493c380]; call dword ptr [eax + 0x6a]; 
0x000efb7b: dec dword ptr [ebx - 0x4736b]; call dword ptr [edx - 1]; 
0x000ef3f2: dec dword ptr [ebx - 0x4776b]; call dword ptr [edi - 1]; 
0x000eed8f: dec dword ptr [ebx - 0x47f7b]; inc dword ptr [ecx]; ret; 
0x00097780: dec dword ptr [ebx - 0x47fbdbb4]; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018a2ff: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x12718380]; call dword ptr [eax + 0x6a]; 
0x000f65bf: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1422c380]; call dword ptr [eax + 0x6a]; 
0x001883ff: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1430a380]; call dword ptr [eax + 0x6a]; 
0x000f2d3f: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x145b4380]; call dword ptr [eax + 0x6a]; 
0x001866ff: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14691380]; call dword ptr [eax + 0x6a]; 
0x000ef4bf: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1493c380]; call dword ptr [eax + 0x6a]; 
0x000f001f: dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x000fbe3b: dec dword ptr [ebx - 0x49f0dbfc]; rol byte ptr [ebx], cl; test byte ptr [eax - 0x6f760], dl; jmp eax; 
0x000eff0e: dec dword ptr [ebx - 0x49f73]; dec dword ptr [ebx - 0x46f63]; call dword ptr [ecx - 0x7d]; 
0x000f377e: dec dword ptr [ebx - 0x49f7b]; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x00071e0c: dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x000716ea: dec dword ptr [ebx - 0x4eb43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x0007702b: dec dword ptr [ebx - 0x4ff4b]; dec dword ptr [ebp - 0x6722f7a]; call dword ptr [eax + 0x68]; 
0x00072eb7: dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x00077159: dec dword ptr [ebx - 0x4ff63]; inc dword ptr [ebx - 0x7c72f314]; cld; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00072776: dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x00074eeb: dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ecx - 0x4ef63]; dec dword ptr [ecx - 0x4f74b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x00077647: dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ecx - 0x4f74b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x00073ffa: dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ecx - 0x54763]; dec dword ptr [ecx - 0x4f74b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ecx - 0x50343], cl; jmp dword ptr [ebp - 0x75]; 
0x00071e00: dec dword ptr [ebx - 0x50363]; dec dword ptr [ecx - 0x4f343]; dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x000773a5: dec dword ptr [ebx - 0x5037b]; call dword ptr [ecx + 0x51]; 
0x0012f425: dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x000734dc: dec dword ptr [ebx - 0x5077b]; jmp dword ptr [ebp - 0x77]; 
0x00071d6b: dec dword ptr [ebx - 0x51343]; dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x75]; 
0x00072318: dec dword ptr [ebx - 0x51343]; dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x77]; 
0x00072353: dec dword ptr [ebx - 0x51373]; inc dword ptr [ebx]; test byte ptr [eax - 0x72418], bl; jmp eax; 
0x00073fa6: dec dword ptr [ebx - 0x51f4b]; inc dword ptr [ebx - 0x7bf0fe02]; ret; 
0x000740cc: dec dword ptr [ebx - 0x51f73]; dec dword ptr [ecx - 0x54743]; dec dword ptr [ecx - 0x4f74b]; jmp dword ptr [ebp - 0x75]; 
0x0007616c: dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x00071d71: dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x75]; 
0x0007231e: dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x77]; 
0x0019e761: dec dword ptr [ebx - 0x54737c7c]; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0019bf54: dec dword ptr [ebx - 0x54737c7c]; idiv edi; sub eax, ecx; pop ebx; ret; 
0x00076321: dec dword ptr [ebx - 0x54f7b]; jmp dword ptr [ebp - 0x75]; 
0x00187afe: dec dword ptr [ebx - 0x56174ffc]; ret 0xfff6; 
0x0006970b: dec dword ptr [ebx - 0x56f7b]; inc dword ptr [ebp + 0x27840fdb]; and eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x850f; 
0x00066264: dec dword ptr [ebx - 0x58b4b]; dec dword ptr [ecx - 0x58b6b]; jmp dword ptr [ebp - 0x77]; 
0x00065ae7: dec dword ptr [ebx - 0x58b4b]; jmp dword ptr [ebp - 0x75]; 
0x00067386: dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x00068ad2: dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x00067aa4: dec dword ptr [ebx - 0x58f63]; call dword ptr [edi - 0x18]; 
0x000688ea: dec dword ptr [ebx - 0x58f73]; dec dword ptr [ebp - 0x672437f]; call dword ptr [eax - 0x73]; 
0x0006c06f: dec dword ptr [ebx - 0x58f7b]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00068fc1: dec dword ptr [ebx - 0x58f7b]; dec dword ptr [ecx - 0x58b4b]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0006c141: dec dword ptr [ebx - 0x58f7b]; dec dword ptr [ecx - 0x59363]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0006710c: dec dword ptr [ebx - 0x58f7b]; dec dword ptr [ecx - 0x59363]; dec dword ptr [ebx - 0x59773]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00067118: dec dword ptr [ebx - 0x59773]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0006aeca: dec dword ptr [ebx - 0x5ab4b]; call dword ptr [eax + 0x50]; 
0x000667a4: dec dword ptr [ebx - 0x5ab4b]; dec dword ptr [ebx - 0x5cf7b]; jmp dword ptr [ebp - 0x77]; 
0x0006af7e: dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x77]; 
0x000ee0e3: dec dword ptr [ebx - 0x5ab63]; call dword ptr [edi - 0x77]; 
0x00110965: dec dword ptr [ebx - 0x5ab6b]; dec dword ptr [ebp - 0x64def7e]; call dword ptr [eax + 0x68]; 
0x000f11d5: dec dword ptr [ebx - 0x5ab6b]; dec dword ptr [ebp - 0x64f9b7e]; call dword ptr [eax + 0x68]; 
0x00068758: dec dword ptr [ebx - 0x5af7b]; dec dword ptr [ebx - 0x5cf6b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x000f51e3: dec dword ptr [ebx - 0x5bb63]; call dword ptr [edi - 0x77]; 
0x000f5825: dec dword ptr [ebx - 0x5bb6b]; dec dword ptr [ebp - 0x64f9b7e]; call dword ptr [eax + 0x68]; 
0x0006b2a7: dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x0006875e: dec dword ptr [ebx - 0x5cf6b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0006af78: dec dword ptr [ebx - 0x5cf7b]; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x77]; 
0x000667aa: dec dword ptr [ebx - 0x5cf7b]; jmp dword ptr [ebp - 0x77]; 
0x0006b88f: dec dword ptr [ebx - 0x5d343]; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x0006a40f: dec dword ptr [ebx - 0x5d36b]; dec dword ptr [ecx + 0x29d029f0]; ret; 
0x00055ac6: dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x0002eb33: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002d7a5: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [edx + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0002d680: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [edx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002b5b9: dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x00028d9b: dec dword ptr [ebx - 0x72c3db84]; xchg esp, ebp; jnp 0x28d9e; call dword ptr [eax - 0x73]; 
0x0002b0a4: dec dword ptr [ebx - 0x72c3db84]; xchg esp, ecx; jp 0x2b0a7; call dword ptr [eax - 0x73]; 
0x0002b69c: dec dword ptr [ebx - 0x72c3db8c]; xchg ah, cl; jp 0x2b69f; call dword ptr [eax - 0x73]; 
0x00029975: dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000299a8: dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [edx + eax*4 - 7], dh; call dword ptr [eax - 0x73]; 
0x0002b5ea: dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [edx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x00028714: dec dword ptr [ebx - 0x72c3dba4]; or dword ptr [esp + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x0002dfc1: dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002e08a: dec dword ptr [ebx - 0x72c7db84]; xchg esp, ebp; jns 0x2e08d; call dword ptr [eax - 0x73]; 
0x0002a8b4: dec dword ptr [ebx - 0x72c7db84]; xchg esp, ebp; jp 0x2a8b7; call dword ptr [eax - 0x73]; 
0x0002a93d: dec dword ptr [ebx - 0x72c7db84]; xchg esp, ebp; jp 0x2a940; call dword ptr [eax - 0x73]; 
0x000ce2bc: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x00050655: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x000505c2: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax - 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x0017f212: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [ebx + ecx*8], eax; stc; call dword ptr [eax - 0x73]; 
0x0017f235: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [edi + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0011afcf: dec dword ptr [ebx - 0x72d7db84]; xchg esp, ebp; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x000a3dd7: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax - 0x58], esp; stc; call dword ptr [eax - 0x73]; 
0x000c4128: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax], eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c44d7: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax], edx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c1d60: dec dword ptr [ebx - 0x72e3db84]; xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00094339: dec dword ptr [ebx - 0x72e3dba4]; or esp, 0xffffff96; stc; call dword ptr [eax - 0x73]; 
0x000c209c: dec dword ptr [ebx - 0x72e3dbac]; add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x0004ca7b: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x0004c8c5: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x00049563: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax], ebp; mov cl, bh; call dword ptr [eax - 0x73]; 
0x001816c2: dec dword ptr [ebx - 0x72ebdb84]; inc edx; dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x00046d44: dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0014c440: dec dword ptr [ebx - 0x72ebdba4]; sub dword ptr [eax - 0x40], -7; call dword ptr [eax - 0x73]; 
0x000a04f9: dec dword ptr [ebx - 0x72ebdbac]; and ah, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x000a03e4: dec dword ptr [ebx - 0x72ebdbac]; sbb al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x0009c026: dec dword ptr [ebx - 0x72f3db84]; xchg dword ptr [eax - 0x67], edx; stc; call dword ptr [eax - 0x73]; 
0x0010fb51: dec dword ptr [ebx - 0x72f3db84]; xchg esp, ebx; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0015074d: dec dword ptr [ebx - 0x72f3db8c]; xchg al, dh; ret 0xfff9; 
0x001423f8: dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [ebp + edi*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0014c9c8: dec dword ptr [ebx - 0x72f3dbac]; adc byte ptr [eax - 0x40], 0xf9; call dword ptr [eax + 0x68]; 
0x0014c88f: dec dword ptr [ebx - 0x72f3dbac]; adc byte ptr [eax - 0x40], 0xf9; call dword ptr [eax - 0x73]; 
0x0014c915: dec dword ptr [ebx - 0x72f3dbac]; cmp byte ptr [eax + eax*8], 0xf9; call dword ptr [eax - 0x73]; 
0x0010e75e: dec dword ptr [ebx - 0x72f7db84]; xchg eax, edi; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0010e6a4: dec dword ptr [ebx - 0x72f7db84]; xchg esp, ebp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0014a160: dec dword ptr [ebx - 0x72f7db8c]; xchg byte ptr [edi + edi*4 - 7], al; call dword ptr [eax - 0x73]; 
0x00090d2e: dec dword ptr [ebx - 0x72fbdb84]; xchg eax, eax; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x0014b77d: dec dword ptr [ebx - 0x72fbdba4]; cmp dword ptr [edi + edi*4], -7; call dword ptr [eax - 0x73]; 
0x0011c6dd: dec dword ptr [ebx - 0x74abdbb4]; push esp; and al, 0xc; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00111234: dec dword ptr [ebx - 0x74dfdba4]; dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0002cbc9: dec dword ptr [ebx - 0x74e7dbbc]; jl 0x2cbf5; or al, 0x89; cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x0011c697: dec dword ptr [ebx - 0x74f3dbac]; dec esp; and al, 0x54; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00103d5e: dec dword ptr [ebx - 0x74f3dbbc]; adc bh, dh; ret 0x30f; 
0x0010e4bb: dec dword ptr [ebx - 0x74fbdbbc]; jl 0x10e4e7; add al, 0x89; fidivr word ptr [ecx]; ret; 
0x001493bb: dec dword ptr [ebx - 0x74fbdbbc]; pop eax; or byte ptr [ebp + 0x26850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x00149659: dec dword ptr [ebx - 0x74fbdbbc]; pop eax; or dh, dh; ret; 
0x001a7a04: dec dword ptr [ebx - 0x764762a4]; fimul dword ptr [ecx - 0x9f63]; call ebx; 
0x000e4ffc: dec dword ptr [ebx - 0x76abdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0011b9e9: dec dword ptr [ebx - 0x76cfdbb4]; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00110fe4: dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x00120ac4: dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00120594: dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00040e13: dec dword ptr [ebx - 0x76dfdbb4]; ret; 
0x0009e3c4: dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000807cf: dec dword ptr [ebx - 0x76e3dbbc]; ret 0x4489; 
0x00112f3b: dec dword ptr [ebx - 0x76e7dba4]; rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29130fd4; ret; 
0x0011491b: dec dword ptr [ebx - 0x76e7dba4]; rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x291329b4; ret; 
0x001162fb: dec dword ptr [ebx - 0x76e7dba4]; rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29134394; ret; 
0x000a8f6e: dec dword ptr [ebx - 0x76ebdbac]; ret; 
0x00100943: dec dword ptr [ebx - 0x76ebdbb4]; ret; 
0x001419cb: dec dword ptr [ebx - 0x76ebdbbc]; ret 0x689; 
0x000c6864: dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x000fb88e: dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x00034c13: dec dword ptr [ebx - 0x76f3dbb4]; ret; 
0x001717c5: dec dword ptr [ebx - 0x76f7db8c]; ret; 
0x00181ddf: dec dword ptr [ebx - 0x76f7dbb4]; ret 0xd2e9; 
0x00162ae8: dec dword ptr [ebx - 0x77ce3ba]; dec dword ptr [edi]; test byte ptr [esi + edi*8 - 1], bh; call dword ptr [eax - 0x73]; 
0x0005c0d5: dec dword ptr [ebx - 0x77cefc0]; xor byte ptr [eax + ecx - 0x7b], dh; dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x0009c9d6: dec dword ptr [ebx - 0x78727783]; pushfd; cdq; stc; call dword ptr [eax + 0x68]; 
0x0009ca10: dec dword ptr [ebx - 0x78727783]; pushfd; cdq; stc; call dword ptr [eax - 0x73]; 
0x00027426: dec dword ptr [ebx - 0x79722b8b]; add al, 0x80; stc; call dword ptr [eax - 0x73]; 
0x0014348f: dec dword ptr [ebx - 0x7a76e3bb]; mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00044916: dec dword ptr [ebx - 0x7adfdbbc]; ror byte ptr [edi], 0x94; ret 0x3c83; 
0x001417f7: dec dword ptr [ebx - 0x7ae7dbbc]; ror byte ptr [ebx + 0xf102444], 0x95; ret 0xc085; 
0x000cc924: dec dword ptr [ebx - 0x7aefdbbc]; ror byte ptr [edi], 0x84; ret 0x14; 
0x00144b9f: dec dword ptr [ebx - 0x7cd7dbac]; ret 0x3b04; 
0x00134034: dec dword ptr [ebx - 0x7cdbdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x000aa529: dec dword ptr [ebx - 0x7cefdba4]; call 0x5573235; add byte ptr [ecx], al; ret; 
0x000dba65: dec dword ptr [ebx - 0x7cf3dbac]; ret 0x3909; 
0x000851f9: dec dword ptr [ebx - 0x7cf3dbb4]; in al, dx; or al, 0x83; ret; 
0x00156261: dec dword ptr [ebx - 0x7cf3dbbc]; mov byte ptr [ecx], 0xeb; ret; 
0x000ed600: dec dword ptr [ebx - 0x7cf3dbbc]; ret 0x8902; 
0x00091196: dec dword ptr [ebx - 0x7e724fb3]; lodsb al, byte ptr [esi]; xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x0005cebc: dec dword ptr [ebx - 0x874b]; call dword ptr [esi + 0x50]; 
0x001a9cc9: dec dword ptr [ebx - 0x874b]; dec dword ptr [ecx - 0x7c257608]; ret 0x8308; 
0x0005d0dd: dec dword ptr [ebx - 0x8b43]; dec dword ptr [ebp - 0x6747f79]; call dword ptr [eax - 0x73]; 
0x0005d234: dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x6747f7a]; call dword ptr [eax - 0x73]; 
0x000324c7: dec dword ptr [ebx - 0x8b63]; call dword ptr [edx - 0x18]; 
0x0005d176: dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x6747f7d]; call dword ptr [eax - 0x73]; 
0x0005d102: dec dword ptr [ebx - 0x8b6b]; dec dword ptr [ebp - 0x6747f7e]; call dword ptr [eax - 0x73]; 
0x0017801b: dec dword ptr [ebx - 0x8f63]; dec dword ptr [ebx - 0x2abb7700]; les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x001a6b8c: dec dword ptr [ebx - 0x8f6b]; inc dword ptr [ebx]; lea esi, [edi + edi*8 - 1]; call dword ptr [ebx]; 
0x001ab1a2: dec dword ptr [ebx - 0x934b]; call ebx; 
0x001403bb: dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000324c1: dec dword ptr [ebx - 0x9743]; dec dword ptr [ebx - 0x8b63]; call dword ptr [edx - 0x18]; 
0x001a8d42: dec dword ptr [ebx - 0x9763]; call ebx; 
0x0013686c: dec dword ptr [ebx - 0x9b43]; dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x0005ce97: dec dword ptr [ebx - 0x9b7b]; dec dword ptr [ebx + 0x4589b055]; mov eax, 0xfff89ee9; call dword ptr [eax + 0x52]; 
0x0011160f: dec dword ptr [ebx - 0x9efdbac]; ret 0x7549; 
0x001a80da: dec dword ptr [ebx - 0xa343]; call ebx; 
0x001ab096: dec dword ptr [ebx - 0xab4b]; dec dword ptr [ebx - 0xaf63]; call ebx; 
0x001ab09c: dec dword ptr [ebx - 0xaf63]; call ebx; 
0x001403b5: dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x001305be: dec dword ptr [ebx - 0xbb4b]; dec dword ptr [ebp - 0x648b37a]; call dword ptr [eax - 0x73]; 
0x00130694: dec dword ptr [ebx - 0xbb7b]; dec dword ptr [ebp - 0x106dd380]; call dword ptr [eax + 0x6a]; 
0x0017adf2: dec dword ptr [ebx - 0xef43]; dec dword ptr [ebp - 0x6355b79]; call dword ptr [eax - 0x73]; 
0x0008fe3f: dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082a10: dec dword ptr [ecx + 0x14abe9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0017802d: dec dword ptr [ecx + 0x1c8d544]; ret; 
0x000f828c: dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a0d45: dec dword ptr [ecx + 0x21d8f7f8]; ret 0xd589; 
0x0012d1f4: dec dword ptr [ecx + 0x240c8bef]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x000e4fc4: dec dword ptr [ecx + 0x244c8bee]; push esp; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00184cfd: dec dword ptr [ecx + 0x245489d1]; adc al, 0x89; ret 0xca29; 
0x00102222: dec dword ptr [ecx + 0x24548bd9]; sbb byte ptr [esi - 0x7f], ah; loope 0x10222c; add esi, esi; ret; 
0x00151424: dec dword ptr [ecx + 0x27838dc2]; inc ebp; stc; call dword ptr [eax + 0x52]; 
0x0006a415: dec dword ptr [ecx + 0x29d029f0]; ret; 
0x0006b895: dec dword ptr [ecx + 0x29f829f0]; ret; 
0x0012361c: dec dword ptr [ecx + 0x2c938d16]; jle 0x12361a; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0013034b: dec dword ptr [ecx + 0x31d389c1]; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x001830a2: dec dword ptr [ecx + 0x34894c46]; and al, 0xe8; ret 0x12; 
0x001aadc9: dec dword ptr [ecx + 0x458b805d]; mov al, byte ptr [0xf7d45d89]; out 0x89, al; ret; 
0x00122644: dec dword ptr [ecx + 0x45a083]; add bl, ch; fmul qword ptr [ebp - 0x17acff8a]; ret; 
0x00083ca0: dec dword ptr [ecx + 0x471e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x00176189: dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0005714c: dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x0007ec80: dec dword ptr [ecx + 0x5183e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007eab0: dec dword ptr [ecx + 0x5300e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x00083b80: dec dword ptr [ecx + 0x53ee9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007e8f8: dec dword ptr [ecx + 0x5465e9c3]; cli; call dword ptr [ebx - 0x75]; 
0x00176748: dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0007e7a0: dec dword ptr [ecx + 0x5569e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007e280: dec dword ptr [ecx + 0x5a35e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0016a5ca: dec dword ptr [ecx + 0x5b102454]; pop esi; jmp eax; 
0x0007e040: dec dword ptr [ecx + 0x5c21e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007de30: dec dword ptr [ecx + 0x5ddee9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007d032: dec dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x0005b0ad: dec dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000ffb66: dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x0007dad0: dec dword ptr [ecx + 0x6098e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007d96d: dec dword ptr [ecx + 0x61a8e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007d38a: dec dword ptr [ecx + 0x66e4e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007d23a: dec dword ptr [ecx + 0x67e1e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007cf70: dec dword ptr [ecx + 0x6a58e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007cdc4: dec dword ptr [ecx + 0x6bb0e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007cbe4: dec dword ptr [ecx + 0x6d3ce9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007c940: dec dword ptr [ecx + 0x6f87e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0007be28: dec dword ptr [ecx + 0x7a4ce9c3]; cli; call dword ptr [ebp + 0x57]; 
0x0007ba5e: dec dword ptr [ecx + 0x7dc2e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x00083838: dec dword ptr [ecx + 0x833e9c3]; cli; call dword ptr [edi + 0x56]; 
0x00131f8f: dec dword ptr [ecx + 0x8e82434]; adc ch, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00083690: dec dword ptr [ecx + 0x988e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x00083510: dec dword ptr [ecx + 0xab5e9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x0010abcf: dec dword ptr [ecx + 0xbad0]; pushal; add cl, al; call 0xfe0e4df; dec edi; ret 0xdce9; 
0x0010a197: dec dword ptr [ecx + 0xd0b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a2cf: dec dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000830f0: dec dword ptr [ecx + 0xe1ee9c3]; cli; jmp dword ptr [esi - 0x70]; 
0x000754c7: dec dword ptr [ecx + 0xfc085c6]; test esi, ebp; ret; 
0x00136872: dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x00136d09: dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x001516fd: dec dword ptr [ecx - 0x12b6b]; call dword ptr [eax - 0x18]; 
0x0003f748: dec dword ptr [ecx - 0x14d3dbbc]; mov ebx, 0x3cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0017bc52: dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x0005f265: dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x00085ed0: dec dword ptr [ecx - 0x1bb5163d]; stc; jmp dword ptr [esi - 0x70]; 
0x000311fd: dec dword ptr [ecx - 0x1cb4b]; dec dword ptr [ebp - 0x205e9379]; call dword ptr [eax + 0x6a]; 
0x00030faf: dec dword ptr [ecx - 0x1d34b]; jmp dword ptr [ebp - 0x75]; 
0x00031232: dec dword ptr [ecx - 0x1d77b]; jmp dword ptr [ecx]; 
0x0003122c: dec dword ptr [ecx - 0x1eb6b]; dec dword ptr [ecx - 0x1d77b]; jmp dword ptr [ecx]; 
0x00037f47: dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x0015072c: dec dword ptr [ecx - 0x2b7f723a]; ret 0xfff9; 
0x00033aa7: dec dword ptr [ecx - 0x2d7a3f88]; je 0x33ab9; mov dword ptr [esp + 4], eax; call edx; 
0x000d3ebe: dec dword ptr [ecx - 0x361b6b]; jmp dword ptr [ebx]; 
0x0005872d: dec dword ptr [ecx - 0x361f43]; call ebx; 
0x000576af: dec dword ptr [ecx - 0x361f4b]; call dword ptr [eax - 0x18]; 
0x00058d5b: dec dword ptr [ecx - 0x361f63]; call dword ptr [eax - 0x75]; 
0x000d4bb6: dec dword ptr [ecx - 0x361f6b]; call dword ptr [eax - 0x75]; 
0x000d3ff8: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x000d40a9: dec dword ptr [ecx - 0x361f73]; dec dword ptr [ecx - 0x362f4b]; call dword ptr [eax - 0x18]; 
0x000575f3: dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x000576a9: dec dword ptr [ecx - 0x362773]; dec dword ptr [ecx - 0x361f4b]; call dword ptr [eax - 0x18]; 
0x000d40af: dec dword ptr [ecx - 0x362f4b]; call dword ptr [eax - 0x18]; 
0x00057d49: dec dword ptr [ecx - 0x362f6b]; call dword ptr [eax - 0x75]; 
0x000d59d2: dec dword ptr [ecx - 0x362f73]; call dword ptr [eax - 0x18]; 
0x000d4d45: dec dword ptr [ecx - 0x363b63]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00057e21: dec dword ptr [ecx - 0x364373]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000d35f6: dec dword ptr [ecx - 0x36734b]; dec dword ptr [ebx - 0x364f4b]; call dword ptr [ebx - 0x73]; 
0x000d36cc: dec dword ptr [ecx - 0x36737b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x00137d9d: dec dword ptr [ecx - 0x3796163d]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00137ff5: dec dword ptr [ecx - 0x399b163d]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00138280: dec dword ptr [ecx - 0x3bd2163d]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0013862a: dec dword ptr [ecx - 0x3f28163d]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000a506d: dec dword ptr [ecx - 0x4517dbe4]; add esi, edi; jmp dword ptr [esi - 0x70]; 
0x000ee7a7: dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x00127470: dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x00127464: dec dword ptr [ecx - 0x47f7b]; dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x00027e92: dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + eax*4], edi; stc; jmp dword ptr [esi - 0x77]; 
0x000eeb19: dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f0019: dec dword ptr [ecx - 0x49b7b]; dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x001274f6: dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x0012f5d9: dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x000716fc: dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x000716f0: dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x00071645: dec dword ptr [ecx - 0x4eb4b]; dec dword ptr [ecx - 0x4ff63]; dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x00074ef1: dec dword ptr [ecx - 0x4ef63]; dec dword ptr [ecx - 0x4f74b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x00075d2c: dec dword ptr [ecx - 0x4ef6b]; call dword ptr [eax - 0x18]; 
0x00071e06: dec dword ptr [ecx - 0x4f343]; dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x0007230c: dec dword ptr [ecx - 0x4f743]; dec dword ptr [ecx - 0x50363]; dec dword ptr [ebx - 0x51343]; dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x77]; 
0x00072203: dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x00074ef7: dec dword ptr [ecx - 0x4f74b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x00074006: dec dword ptr [ecx - 0x4f74b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ecx - 0x50343], cl; jmp dword ptr [ebp - 0x75]; 
0x000740d8: dec dword ptr [ecx - 0x4f74b]; jmp dword ptr [ebp - 0x75]; 
0x000736cb: dec dword ptr [ecx - 0x4f763]; jmp dword ptr [ebp - 0x75]; 
0x00076b15: dec dword ptr [ecx - 0x4f76b]; call dword ptr [eax - 0x75]; 
0x000736c5: dec dword ptr [ecx - 0x4fb43]; dec dword ptr [ecx - 0x4f763]; jmp dword ptr [ebp - 0x75]; 
0x0007164b: dec dword ptr [ecx - 0x4ff63]; dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x00071d65: dec dword ptr [ecx - 0x50363]; dec dword ptr [ebx - 0x51343]; dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x75]; 
0x00072312: dec dword ptr [ecx - 0x50363]; dec dword ptr [ebx - 0x51343]; dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x77]; 
0x00076166: dec dword ptr [ecx - 0x51f73]; dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x000773eb: dec dword ptr [ecx - 0x52b6b]; inc dword ptr [ecx]; ret; 
0x00071702: dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x00071651: dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x00077518: dec dword ptr [ecx - 0x5377b]; call dword ptr [eax + 0x50]; 
0x000740d2: dec dword ptr [ecx - 0x54743]; dec dword ptr [ecx - 0x4f74b]; jmp dword ptr [ebp - 0x75]; 
0x00074000: dec dword ptr [ecx - 0x54763]; dec dword ptr [ecx - 0x4f74b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ecx - 0x50343], cl; jmp dword ptr [ebp - 0x75]; 
0x0006549a: dec dword ptr [ecx - 0x56743]; dec dword ptr [ebx + 0x15880]; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x000de9d6: dec dword ptr [ecx - 0x572f0828]; sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000846e0: dec dword ptr [ecx - 0x57b163d]; stc; jmp dword ptr [esi - 0x70]; 
0x00068fc7: dec dword ptr [ecx - 0x58b4b]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0006626a: dec dword ptr [ecx - 0x58b6b]; jmp dword ptr [ebp - 0x77]; 
0x00067363: dec dword ptr [ecx - 0x58b73]; call dword ptr [eax - 0x18]; 
0x0006b9b5: dec dword ptr [ecx - 0x58b73]; call dword ptr [edx + 0x52]; 
0x000691b6: dec dword ptr [ecx - 0x58b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006c147: dec dword ptr [ecx - 0x59363]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00067112: dec dword ptr [ecx - 0x59363]; dec dword ptr [ebx - 0x59773]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0006af9e: dec dword ptr [ecx - 0x5936b]; call dword ptr [eax - 0x75]; 
0x0006b1c1: dec dword ptr [ecx - 0x5936b]; call dword ptr [edi - 0x18]; 
0x00067bad: dec dword ptr [ecx - 0x59373]; call dword ptr [eax - 0x18]; 
0x00067f6b: dec dword ptr [ecx - 0x59373]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0006b1ef: dec dword ptr [ecx - 0x5937b]; jmp dword ptr [ebp - 0x75]; 
0x0006884f: dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0006b47b: dec dword ptr [ecx - 0x59773]; call dword ptr [edx + 0x52]; 
0x00067ba7: dec dword ptr [ecx - 0x59b6b]; dec dword ptr [ecx - 0x59373]; call dword ptr [eax - 0x18]; 
0x00068849: dec dword ptr [ecx - 0x59b73]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x00066fe9: dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x00067a9e: dec dword ptr [ecx - 0x5b373]; dec dword ptr [ebx - 0x58f63]; call dword ptr [edi - 0x18]; 
0x000edc4b: dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000f4d4b: dec dword ptr [ecx - 0x5cf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00069774: dec dword ptr [ecx - 0x5e76b]; inc dword ptr [ecx]; ret; 
0x00066c1a: dec dword ptr [ecx - 0x5e77b]; call dword ptr [eax - 0x18]; 
0x0006bf81: dec dword ptr [ecx - 0x5ef73]; call dword ptr [edi - 0x18]; 
0x000653db: dec dword ptr [ecx - 0x5f363]; jmp dword ptr [ebp - 0x5f]; 
0x000654b2: dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x0006b1e9: dec dword ptr [ecx - 0x5ff6b]; dec dword ptr [ecx - 0x5937b]; jmp dword ptr [ebp - 0x75]; 
0x0007a9c6: dec dword ptr [ecx - 0x6b77762f]; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007a1b0: dec dword ptr [ecx - 0x6c7f163d]; cli; jmp dword ptr [esi - 0x70]; 
0x0007a580: dec dword ptr [ecx - 0x6ffb163d]; cli; jmp dword ptr [esi - 0x70]; 
0x000855a2: dec dword ptr [ecx - 0x72afebaa]; cmp dword ptr [esp], -0x1c; call dword ptr [eax - 0x73]; 
0x00035dbf: dec dword ptr [ecx - 0x72ec142d]; je 0x35ded; add byte ptr [ebp - 0x7cd58a40], al; ret; 
0x0007a990: dec dword ptr [ecx - 0x7364163d]; cli; jmp dword ptr [esi - 0x70]; 
0x0010137f: dec dword ptr [ecx - 0x7401760f]; jl 0x1013ab; add al, 0xe9; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x000ab7e1: dec dword ptr [ecx - 0x76217609]; ret; 
0x00122125: dec dword ptr [ecx - 0x76227618]; ret; 
0x00037f4d: dec dword ptr [ecx - 0x76267631]; ret; 
0x001816c9: dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x00174b7d: dec dword ptr [ecx - 0x763e7606]; ret; 
0x0010f140: dec dword ptr [ecx - 0x768bdbbc]; ret; 
0x001485a5: dec dword ptr [ecx - 0x7693dbbc]; ret; 
0x000c333a: dec dword ptr [ecx - 0x769fdbac]; ret 0x52e9; 
0x00036e53: dec dword ptr [ecx - 0x76a3dbbc]; ret 0xc483; 
0x000c3242: dec dword ptr [ecx - 0x76a7dbac]; ret 0x1ce9; 
0x000510ae: dec dword ptr [ecx - 0x76b3db84]; ret; 
0x0003f6f5: dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003f3e0: dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00140612: dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x0010ed66: dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0014cda4: dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x0003f9d0: dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0010dab6: dec dword ptr [ecx - 0x76ebdbbc]; ret 0xc483; 
0x00132885: dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0011ee65: dec dword ptr [ecx - 0x76efdba4]; ret 0xf983; 
0x0003f49b: dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003f2d7: dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x0007afa0: dec dword ptr [ecx - 0x7920163d]; cli; jmp dword ptr [esi - 0x70]; 
0x00121f3b: dec dword ptr [ecx - 0x7972af0d]; retf; pop edx; stc; call dword ptr [eax - 0x18]; 
0x0007b0f8: dec dword ptr [ecx - 0x7a24163d]; cli; call dword ptr [ebp - 0x77]; 
0x000d4adc: dec dword ptr [ecx - 0x7a2e763d]; dec dword ptr [edi]; test dh, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0007b27d: dec dword ptr [ecx - 0x7b56163d]; cli; jmp dword ptr [esi - 0x70]; 
0x001516a9: dec dword ptr [ecx - 0x7c037607]; rcr byte ptr [edx], 0x89; ret 0x25; 
0x001a9ccf: dec dword ptr [ecx - 0x7c257608]; ret 0x8308; 
0x001a9cfe: dec dword ptr [ecx - 0x7c3e7639]; ret 0x8308; 
0x0005f25d: dec dword ptr [ecx - 0x7c54722a]; aas; stc; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x000c91dc: dec dword ptr [ecx - 0x7cefdbac]; in al, dx; or bh, bh; je 0xc920b; adc byte ptr [eax - 0x18], dl; ret 0x684; 
0x00081a40: dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x0007b730: dec dword ptr [ecx - 0x7f63163d]; cli; jmp dword ptr [esi - 0x70]; 
0x00136d03: dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x0005b5c2: dec dword ptr [ecx - 0x876b]; call dword ptr [eax - 1]; 
0x0013fc7e: dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0x9b7b]; dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x0005b10f: dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xa74b]; jmp dword ptr [ebp - 0x75]; 
0x0005cf18: dec dword ptr [ecx - 0x8f6b]; call dword ptr [eax - 1]; 
0x000358a6: dec dword ptr [ecx - 0x8f7b]; call dword ptr [eax - 0x73]; 
0x0003237a: dec dword ptr [ecx - 0x937b]; call dword ptr [eax + 0x57]; 
0x0013fc84: dec dword ptr [ecx - 0x9b7b]; dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x001ab835: dec dword ptr [ecx - 0xa167bbb]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x001aaaea: dec dword ptr [ecx - 0xa343]; jmp dword ptr [esi - 0x7f]; 
0x0013fc8a: dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x0005b11b: dec dword ptr [ecx - 0xa74b]; jmp dword ptr [ebp - 0x75]; 
0x00084ce4: dec dword ptr [ecx - 0xa75163d]; stc; jmp dword ptr [esi - 0x70]; 
0x0017a3e2: dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x0016fa90: dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x00084ea0: dec dword ptr [ecx - 0xbdd163d]; stc; jmp dword ptr [esi - 0x70]; 
0x0005b115: dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xa74b]; jmp dword ptr [ebp - 0x75]; 
0x0017a3dc: dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x0017a968: dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0017ad93: dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x0017ad87: dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x0017a962: dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x001a63b9: dec dword ptr [ecx]; ret 0x458b; 
0x001ac395: dec dword ptr [ecx]; ret; 
0x00106779: dec dword ptr [ecx]; retf 0x5489; ret; 
0x0011e6c0: dec dword ptr [ecx]; ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x00124356: dec dword ptr [edi]; add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x001a32a3: dec dword ptr [edi]; add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x00049a20: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x9d74; 
0x000c7de0: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x9e74; 
0x000ed8c8: dec dword ptr [edi]; and dword ptr [ecx], 0x76; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x0012c408: dec dword ptr [edi]; and ecx, 0xffffff8a; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0003fb2b: dec dword ptr [edi]; cmp dword ptr [esi + 0x31fffe53], -0x40; ret; 
0x0002822d: dec dword ptr [edi]; dec eax; ret 0x2ec3; 
0x000d36d5: dec dword ptr [edi]; dec edi; ret 0x48d; 
0x0006781d: dec dword ptr [edi]; dec edi; ret 0x8589; 
0x0005b608: dec dword ptr [edi]; dec esi; ret 0xec83; 
0x00039a85: dec dword ptr [edi]; inc ebp; call 0x2b276; jmp dword ptr [esi - 0x70]; 
0x0002b7f7: dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x000a64bf: dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00065dfa: dec dword ptr [edi]; inc ebp; ret 0x8589; 
0x000a654d: dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0012ad5e: dec dword ptr [edi]; inc ebp; ret 0xd231; 
0x0013051b: dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0019ec29: dec dword ptr [edi]; inc esi; ret 0x5d5e; 
0x000fa7fd: dec dword ptr [edi]; inc esp; call 0xe6eee; inc dword ptr [ebx - 0x7c72f714]; adc ebx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000a3228: dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a6500: dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a63b9: dec dword ptr [edi]; inc esp; ret 0xc083; 
0x00154efe: dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0003c389: dec dword ptr [edi]; inc esp; ret 0xefe9; 
0x000a382b: dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009eddc: dec dword ptr [edi]; inc esp; ret 0xff31; 
0x00033b87: dec dword ptr [edi]; inc esp; ret; 
0x000a2edf: dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x00123cc6: dec dword ptr [edi]; mov dh, 0x42; jnp 0x123c59; xchg ebx, eax; ret; 
0x001077e2: dec dword ptr [edi]; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0005b345: dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x00182b8b: dec dword ptr [edi]; mov dh, 0xc0; add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x0006581f: dec dword ptr [edi]; mov dh, 0xd2; mov ecx, dword ptr [edi + edx*4 - 0x72d38]; add ecx, edi; jmp ecx; 
0x0006637e: dec dword ptr [edi]; mov dh, 0xdb; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00065d0e: dec dword ptr [edi]; mov dh, 0xdb; add eax, dword ptr [eax + ebx*4 - 0x72c7c]; jmp eax; 
0x0006629b: dec dword ptr [edi]; mov dh, 0xdb; mov edx, dword ptr [ebp - 0x58c]; add eax, dword ptr [eax + ebx*4 - 0x72bf8]; jmp eax; 
0x000d4cdd: dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000dd6d2: dec dword ptr [edi]; mov esi, 0x246c8903; add al, 0x83; ret; 
0x0004847e: dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0005c0df: dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x0007a6ad: dec dword ptr [edi]; test ah, cl; add byte ptr [eax], al; add byte ptr [ebx + 0x7d8be045], cl; in al, 0x89; ret; 
0x000bff3e: dec dword ptr [edi]; test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x0010bab0: dec dword ptr [edi]; test byte ptr [eax - 0x75000000], bl; test byte ptr [eax + eax*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0012c531: dec dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; in al, dx; add al, 0x89; ret; 
0x000c74b0: dec dword ptr [edi]; test byte ptr [ebp + 0x31000003], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00072e32: dec dword ptr [edi]; test byte ptr [ebx], ch; sbb al, 0; add byte ptr [ecx], al; ret; 
0x0014fe4a: dec dword ptr [edi]; test byte ptr [edx + 0x39000001], ch; ret 0x840f; 
0x000bff1b: dec dword ptr [edi]; test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x00162aee: dec dword ptr [edi]; test byte ptr [esi + edi*8 - 1], bh; call dword ptr [eax - 0x73]; 
0x000d4ae2: dec dword ptr [edi]; test dh, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000bfbbf: dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000a48c4: dec dword ptr [edi]; test dword ptr [ebx + edi*8 - 9], esp; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000bfcca: dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000fabbe: dec dword ptr [edi]; test dword ptr [edx - 0xa000000], ebp; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0004de66: dec dword ptr [edi]; test dword ptr [esp + edx], ecx; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x000d4b93: dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x00057a17: dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00101937: dec dword ptr [edi]; xchg ebp, eax; ret 0xc209; 
0x0005457b: dec dword ptr [edi]; xchg ebp, eax; ret 0xd689; 
0x000674b1: dec dword ptr [edi]; xchg ebp, eax; ret; 
0x000668de: dec dword ptr [edi]; xchg ebp, eax; rol byte ptr [ebx - 0x59343], 0xff; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x00182ea4: dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x00031d15: dec dword ptr [edi]; xchg esp, eax; ret 0x4c89; 
0x000fcef4: dec dword ptr [edi]; xchg esp, eax; ret 0x87eb; 
0x00109b7f: dec dword ptr [edi]; xchg esp, eax; ret 0xd021; 
0x0016375a: dec dword ptr [edi]; xchg esp, eax; ret 0xd4e9; 
0x0007b5b8: dec dword ptr [edi]; xchg esp, eax; ret; 
0x0011f3e3: dec dword ptr [edi]; xchg esp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0xc; ret; 
0x000ed978: dec dword ptr [edi]; xor dword ptr [ecx + 0x75], 0xfffffff3; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000be592: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb10c: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000be531: dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bb0ae: dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000a4170: dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0018ff5b: dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00168c60: dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0016a0c7: dec eax; add al, 0x5b; ret; 
0x00137148: dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x001184cc: dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0x11f8836d], cl; call dword ptr [edx - 0x73]; 
0x00090c7b: dec eax; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0007f624: dec eax; add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0007f30a: dec eax; add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00085ca0: dec eax; add al, 0xf; mov dh, 2; ret; 
0x0011aa54: dec eax; add al, 9; retf 0x940f; ret 0x540a; 
0x000dff58: dec eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0006f7a1: dec eax; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00064052: dec eax; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x0014b588: dec eax; add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x0014ab67: dec eax; add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x0014b7b0: dec eax; add dword ptr [ebx + 0x3948245c], ecx; sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x0014fe5e: dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x0019995b: dec eax; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x00198152: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x000bb020: dec eax; add eax, 0x824448b; pop esi; ret; 
0x000be493: dec eax; add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0017f903: dec eax; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00089371: dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x00168a23: dec eax; and byte ptr [ebp + 0x50], dl; call dword ptr [ecx + 8]; 
0x0016da6e: dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0018e34a: dec eax; bound eax, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d2e64: dec eax; call 0xc4902e6f; adc byte ptr [ecx - 0x365f4b], cl; push dword ptr [ecx]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x0016f745: dec eax; call dword ptr [eax + 0x10]; 
0x0016f5ef: dec eax; call dword ptr [eax + 0x14]; 
0x0002846f: dec eax; call eax; 
0x0018f163: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191163: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00089ed1: dec eax; cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x89ed0; ret; 
0x00041a1c: dec eax; cmp al, 0x8b; inc eax; inc eax; ret; 
0x00190dca: dec eax; cmp al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a3252: dec eax; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0009ace1: dec eax; cwde; stc; call dword ptr [eax - 0x18]; 
0x0018f20a: dec eax; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x001911fa: dec eax; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0014d470: dec eax; dec esi; add byte ptr [eax], al; test eax, eax; jne 0x14d487; ret; 
0x0013e84c: dec eax; imul edi, ecx, 0x348b8dff; test cl, bh; call dword ptr [eax - 0x77]; 
0x000a9676: dec eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x000419d8: dec eax; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000a33a5: dec eax; jmp dword ptr [ecx]; 
0x000be54f: dec eax; jnp 0x5b18099a; pop esi; ret; 
0x000bb0cc: dec eax; jnp 0x5e13d517; ret; 
0x00059e48: dec eax; mov dword ptr [eax + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00059ef4: dec eax; mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0009d920: dec eax; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d6a0: dec eax; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009d8a7: dec eax; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d621: dec eax; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0016999d: dec eax; mov eax, dword ptr [ecx + 0x20]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x0009d96c: dec eax; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9ac: dec eax; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009d6ec: dec eax; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009d72c: dec eax; mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0005a764: dec eax; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0012df64: dec eax; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000c3dc9: dec eax; or al, 0x83; rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x0009f5bb: dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x0008eb89: dec eax; or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0005ad3b: dec eax; or byte ptr [ecx + 0x10890450], cl; ret; 
0x00084131: dec eax; or byte ptr [ecx + 0x4508910], cl; pop ebx; pop esi; ret; 
0x0007f33b: dec eax; or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0007f30d: dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0008e991: dec eax; or byte ptr [ecx], al; xor eax, eax; ret; 
0x0007930b: dec eax; out 0xf8, al; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0007a9d0: dec eax; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x000d7cae: dec eax; pop ebx; ret; 
0x000be4d3: dec eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb060: dec eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0019989f: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x001980f2: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x000be679: dec eax; pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1d6: dec eax; pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007cc5e: dec eax; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x001546e6: dec eax; push dword ptr [esp + 0x10]; call edi; 
0x00170369: dec eax; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x001546e2: dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x001549f1: dec eax; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0009c503: dec eax; push ecx; stc; call dword ptr [eax - 0x18]; 
0x000ec5b0: dec eax; push edi; stc; call dword ptr [eax - 0x18]; 
0x0009fd98: dec eax; push edx; stc; call dword ptr [eax + 0x53]; 
0x0009fe74: dec eax; push edx; stc; call dword ptr [eax + 0x56]; 
0x000be4b3: dec eax; push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb040: dec eax; push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0019997b: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00198162: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00169bfd: dec eax; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002822f: dec eax; ret 0x2ec3; 
0x000e006a: dec eax; ret 0x3c8d; 
0x00132a53: dec eax; ret 0x4639; 
0x0003d5c9: dec eax; ret 0x66c3; 
0x000412a7: dec eax; ret 0x9387; 
0x000d96de: dec eax; ret 0xb70f; 
0x0002fd89: dec eax; ret 0xc083; 
0x00040197: dec eax; ret 0xc483; 
0x0013278c: dec eax; ret 0xc629; 
0x000d80ee: dec eax; ret 0xef29; 
0x001217ae: dec eax; ret 0xf8c1; 
0x0019fb43: dec eax; ret 0xff3; 
0x0008b57f: dec eax; ret 0xff50; 
0x0019faa3: dec eax; ret; 
0x0005f935: dec eax; retf 0xfff8; add edx, ebx; jmp edx; 
0x0007f821: dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000be64b: dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bb1b8: dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0016b858: dec eax; sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014c2e8: dec eax; sbb byte ptr [ecx - 0x7cff6abc], cl; ret 0x3b01; 
0x000e8573: dec eax; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0019224a: dec eax; sub byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000404ae: dec eax; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0008ae08: dec eax; xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8ae28; ret; 
0x000ac432: dec ebp; aam 0x83; ret 0xf01; 
0x0018f7bb: dec ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a5826: dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000fba93: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x000f9ff7: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0018d6ad: dec ebp; add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x0015b9d0: dec ebp; bnd call dword ptr [eax - 0x18]; 
0x0009e3c2: dec ebp; clc; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000ed38e: dec ebp; inc eax; stc; call dword ptr [eax - 0x77]; 
0x0013ec4f: dec ebp; inc eax; stc; call dword ptr [edx - 0x46]; 
0x0005d16d: dec ebp; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x0005f915: dec ebp; inc edx; stc; call dword ptr [eax + 0x6a]; 
0x00127c7a: dec ebp; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x001a7436: dec ebp; mov byte ptr [ebx], al; lea esi, [edi + edi*8 - 1]; call dword ptr [ebx]; 
0x001366fc: dec ebp; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x0013668c: dec ebp; mov byte ptr [ecx - 0x837b], cl; call dword ptr [ebx + 0x6a]; 
0x0009aed2: dec ebp; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x0005336d: dec ebp; mov eax, 0x4f8d0103; add al, 0xf; xchg edx, eax; ret 0x789; 
0x0005c63f: dec ebp; mov eax, 0x8910c483; ret 0x458b; 
0x001aa58b: dec ebp; mov esp, 0x830fca39; ret; 
0x001a8b67: dec ebp; mov esp, 0x89c07d89; inc ebp; les ecx, ptr [ecx - 0x834b]; jmp dword ptr [esi - 0x7f]; 
0x0014e388: dec ebp; mov word ptr [ebp - 0x63ea37f], cs; call dword ptr [eax - 0x73]; 
0x00136cfc: dec ebp; mov word ptr [ebp - 0x9773], cs; dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x0010d041: dec ebp; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x0012b261: dec ebp; push esi; push ebx; call dword ptr gs:[0x10]; 
0x0005f15c: dec ebp; ret 0xb60f; 
0x00031841: dec ebp; ret 0xc389; 
0x000a471e: dec ebp; ret 0xc689; 
0x000317dd: dec ebp; ret 0xec83; 
0x0009ef7a: dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0018fc4e: dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c047: dec ebx; add byte ptr [eax + eax], 3; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000e4f1b: dec ebx; add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x000848d1: dec ebx; add byte ptr [eax], al; add bl, ch; mov dword ptr [ecx - 0x71e163d], ecx; stc; jmp dword ptr [esi - 0x70]; 
0x0007b471: dec ebx; add byte ptr [eax], al; add bl, ch; mov dword ptr [ecx - 0x7cfc163d], ecx; cli; jmp dword ptr [esi - 0x70]; 
0x0012ea66: dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x0011bdad: dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000d6b51: dec ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0002a73f: dec ebx; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x00111224: dec ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017d417: dec ebx; call dword ptr [edx + 0x50]; 
0x000b13f1: dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ad300: dec ebx; in al, 0x83; ret 0x8301; 
0x0018c6c7: dec ebx; jl 0x18c6ce; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001a48e4: dec ebx; lea eax, [eax + 9]; pop edi; ret; 
0x001a3f84: dec ebx; lea eax, [ecx + 0xa]; ret; 
0x001a38c4: dec ebx; lea eax, [edi + 9]; pop edi; ret; 
0x000ec674: dec ebx; mov edi, dword ptr [edx + eax*4 - 0x6fcf8]; add edi, edx; jmp edi; 
0x000be202: dec ebx; or al, 0; add ecx, 0x107def; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be1e4: dec ebx; or al, 0; add ecx, 0x107e0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be1bf: dec ebx; or al, 0; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be220: dec ebx; or al, 0; add ecx, 0x107e51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be195: dec ebx; or al, 0; add ecx, 0x107e5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be17c: dec ebx; or al, 0; add ecx, 0x107e75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be15b: dec ebx; or al, 0; add ecx, 0x107e96; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be137: dec ebx; or al, 0; add ecx, 0x107eba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008ec17: dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0007039f: dec ebx; or eax, dword ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x0011fa6d: dec ebx; pop edx; stc; call dword ptr [eax + 0x6a]; 
0x0016abcb: dec ebx; ret 0xc; 
0x0015abcb: dec ebx; ret 0xd; 
0x000c7b31: dec ebx; ret 0xfff6; 
0x0004de72: dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0014c36f: dec ebx; sbb byte ptr [ebx + 0x478910c4], al; adc al, 0x89; ret 0xc985; 
0x0005e691: dec ebx; test al, 0xd; add byte ptr [ebp - 0x674477d], cl; call dword ptr [eax - 0x73]; 
0x0016b5a1: dec ebx; xchg ebp, eax; in al, dx; call dword ptr [eax - 0x73]; 
0x001a3469: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001a3481: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0018fea4: dec ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006c903: dec ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008314b: dec ecx; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000b3437: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3597: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af057: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1b7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000bf101: dec ecx; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0006f4e4: dec ecx; fistp qword ptr [ecx]; ret 0x8d0f; 
0x000ae367: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x000afd5b: dec ecx; imul byte ptr [ecx]; ret 0xc301; 
0x000ae497: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x000afebb: dec ecx; imul dword ptr [ecx]; ret 0xc301; 
0x0011b6b3: dec ecx; imul edi, edi, -1; add esp, 0x1c; ret; 
0x000e21d8: dec ecx; in al, 0xff; call dword ptr [esi + 0x51]; 
0x00052266: dec ecx; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000c08fc: dec ecx; jne 0xc08f8; pop esi; ret; 
0x000e4cb8: dec ecx; lcall 0, 0x8e870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0009646e: dec ecx; lcall 0, 0xb8870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00097084: dec ecx; lcall 0, 0xca870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x00096e01: dec ecx; lcall 1, 0x3d870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00176668: dec ecx; lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000984a6: dec ecx; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x001701a8: dec ecx; or byte ptr [ebx + 0x11770ffa], al; add eax, dword ptr [eax + edx*4 - 0x6c910]; jmp eax; 
0x00170ad8: dec ecx; or byte ptr [ebx - 0x78f0f006], al; or eax, 0x3000001; test byte ptr [eax - 0x6c8d0], dl; jmp eax; 
0x00059873: dec ecx; or byte ptr [ecx], bh; retf 0x820f; mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x00151a97: dec ecx; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000b35d7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af1f7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000f7e76: dec ecx; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x000b35b7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af1d7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000e1085: dec ecx; ret 0x1c8d; 
0x00063cbc: dec ecx; ret 0x4489; 
0x000e0c6a: dec ecx; ret 0x5c89; 
0x00062191: dec ecx; ret 0x7489; 
0x0011f422: dec ecx; ret 0x8dc3; 
0x000e0681: dec ecx; ret 0xc101; 
0x000e3138: dec ecx; ret 0xc483; 
0x000253d1: dec ecx; ret 0xc789; 
0x000e1de9: dec ecx; ret 0xc8d; 
0x00066471: dec ecx; ret 0xe883; 
0x00028f2c: dec ecx; ret 0xec83; 
0x001adc62: dec ecx; ret 0xf8c1; 
0x0002912b: dec ecx; ret; 
0x000d6bc4: dec edi; adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b743f: dec edi; adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x0008fe41: dec edi; adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000b8a9c: dec edi; adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000b8abe: dec edi; adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000b8afc: dec edi; adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000b73bc: dec edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d6baf: dec edi; adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000bee3c: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0019d5ed: dec edi; adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0018e143: dec edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00053372: dec edi; add al, 0xf; xchg edx, eax; ret 0x789; 
0x001a2b1d: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x000e3d99: dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x0008ac35: dec edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x000539c5: dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000b8a30: dec edi; add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x00148cc8: dec edi; add esi, esi; ret; 
0x00110fd0: dec edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x000c7d9d: dec edi; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e5b91: dec edi; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000d6c24: dec edi; and al, 0x75; js 0xd6c88; pop esi; ret; 
0x000b75c6: dec edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d6c0f: dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00126ec6: dec edi; call dword ptr [eax]; 
0x000d6c94: dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x00190bc3: dec edi; cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000d6c89: dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x00183784: dec edi; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0005240b: dec edi; inc eax; stc; call dword ptr [edi + 0x6a]; 
0x001824aa: dec edi; ja 0x1824a6; call dword ptr [eax - 0x18]; 
0x000b8adc: dec edi; jge 0x5e6a9e2a; pop ebx; ret; 
0x0015f7d3: dec edi; jno 0x15f7cf; call dword ptr [eax - 0x18]; 
0x0015f949: dec edi; jno 0x15f945; call dword ptr [eax - 0x73]; 
0x00176528: dec edi; lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000b73fc: dec edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00139ede: dec edi; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x000d6b79: dec edi; or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00096165: dec edi; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000b7390: dec edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x000b7506: dec edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x00093076: dec edi; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000b7370: dec edi; push es; pop edi; pop esi; pop ebx; ret; 
0x0003abc6: dec edi; ret 0x1f; 
0x000c3e34: dec edi; ret 0x2ec3; 
0x00146d64: dec edi; ret 0x4189; 
0x000d36d7: dec edi; ret 0x48d; 
0x000fb9db: dec edi; ret 0x568b; 
0x0006781f: dec edi; ret 0x8589; 
0x0016d39d: dec edi; ret 0x8966; 
0x0011fa68: dec edi; ret 0x8d50; 
0x000c3e53: dec edi; ret 0xc35f; 
0x000563ae: dec edi; ret 0xdb31; 
0x0010abdd: dec edi; ret 0xdce9; 
0x0012121d: dec edi; ret; 
0x0010631c: dec edi; ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x000e523d: dec edi; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000d6bf4: dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000b8ba6: dec edi; sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000b8bc8: dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b8c16: dec edi; sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x000e5233: dec edi; sbb byte ptr [ecx - 0x76efdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000b74c6: dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d6bd9: dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000254c6: dec edi; sbb dword ptr [ecx], esp; add byte ptr [ebx + 0xa480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00192f43: dec edi; sbb eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fa823: dec edi; stc; call dword ptr [eax + 0x55]; 
0x00127755: dec edi; stc; call dword ptr [eax + 0x6a]; 
0x00103938: dec edi; stc; call dword ptr [eax - 0x17]; 
0x00090d26: dec edi; stc; call dword ptr [eax - 0x18]; 
0x00090d1f: dec edi; stc; call dword ptr [eax - 0x73]; 
0x00086cb2: dec edi; stc; call dword ptr [eax - 0x75]; 
0x0008bda7: dec edi; stc; call dword ptr [ecx + 0x52]; 
0x00090d99: dec edi; stc; call dword ptr [edx + 0x50]; 
0x0013df8d: dec edi; stc; cli; jmp dword ptr [esi - 0x3f]; 
0x0008c3c7: dec edi; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x0008e217: dec edi; stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x000d6c44: dec edi; sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x000d6c39: dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x000344c6: dec edi; sub dword ptr [eax], esp; add byte ptr [ebx + 0x9c80], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x001a2930: dec edi; test dh, 4; jne 0x1a2984; add eax, 0xb; ret; 
0x0002b62d: dec edi; xchg dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [edx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x000d6c74: dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000d6c5f: dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000bed8a: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00098f4d: dec edx; adc al, 0x74; pop es; ret; 
0x0003becd: dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x00175fc8: dec edx; adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x0003ffb2: dec edx; adc byte ptr [ecx + 0x5e5b145a], cl; pop edi; ret; 
0x000b0b4e: dec edx; adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000b4f3f: dec edx; adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0018fe0b: dec edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005a730: dec edx; add al, 0x5b; pop esi; pop edi; ret; 
0x0012f0c7: dec edx; add al, 0x80; cmp dword ptr [eax], eax; je 0x12f0d0; ret; 
0x000eb49e: dec edx; add al, 0x83; ret 0x8301; 
0x0005b7c1: dec edx; add al, 0x83; ret 0x8304; 
0x00135ae4: dec edx; add al, 0x83; ret 0x8518; 
0x0007fa99: dec edx; add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x0006f2f0: dec edx; add al, 0x89; ret 0x5d8d; 
0x0011d65e: dec edx; add al, 0x89; ret; 
0x000b119c: dec edx; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x00172cd4: dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x000b0d9a: dec edx; add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b0e00: dec edx; add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b3440: dec edx; add eax, 0x5f0c428d; ret; 
0x000b0de2: dec edx; add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0003c495: dec edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008f781: dec edx; and al, 2; xor eax, eax; pop ebx; pop edi; ret; 
0x001a50a6: dec edx; cld; jne 0x1a50b0; pop ebx; ret; 
0x001a0d68: dec edx; cld; mov eax, 0; jne 0x1a0fb0; pop ebx; ret; 
0x0018f166: dec edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191166: dec edx; cld; mov eax, edx; pop ebx; ret; 
0x00176003: dec edx; cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0018f29e: dec edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018f20d: dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x00138392: dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00085ed4: dec edx; in al, 0xf9; jmp dword ptr [esi - 0x70]; 
0x00174c5a: dec edx; in eax, 0xea; dec dword ptr [ecx - 0x763e7606]; ret; 
0x000f7f27: dec edx; inc ecx; add byte ptr [esi + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x000be303: dec edx; or al, 0; add ecx, 0x107d6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2de: dec edx; or al, 0; add ecx, 0x107d93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2be: dec edx; or al, 0; add ecx, 0x107db3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2a1: dec edx; or al, 0; add ecx, 0x107dd0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be274: dec edx; or al, 0; add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be25d: dec edx; or al, 0; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be242: dec edx; or al, 0; add ecx, 0x107e2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b0b14: dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000bdaaf: dec edx; or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x0008eb6e: dec edx; or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000b516b: dec edx; or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x00093a49: dec edx; or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000b0e64: dec edx; or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000b0ed8: dec edx; or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b12c4: dec edx; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x0012a9f1: dec edx; pop ebx; pop esi; ret; 
0x000b0e40: dec edx; pop es; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1240: dec edx; pop es; jne 0xb10e1; pop ebx; ret; 
0x000b3480: dec edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35e0: dec edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000af0a0: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x000b1c63: dec edx; pop es; mov eax, edx; pop ebx; ret; 
0x000af200: dec edx; pop es; mov eax, edx; ret; 
0x00122ba7: dec edx; pop esp; stc; call dword ptr [eax + 0x55]; 
0x000b0f08: dec edx; push cs; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1338: dec edx; push cs; jne 0xb10e1; pop ebx; ret; 
0x000b0e22: dec edx; push es; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1222: dec edx; push es; jne 0xb10e1; pop ebx; ret; 
0x000b3460: dec edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35c0: dec edx; push es; lea eax, [edx + 0xd]; ret; 
0x000af080: dec edx; push es; mov eax, edi; pop edi; ret; 
0x000af1e0: dec edx; push es; mov eax, edx; ret; 
0x00055a1f: dec edx; rol byte ptr [eax - 0x79f0f607], 1; xchg esi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00058f32: dec edx; scasb al, byte ptr es:[edi]; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x00128e32: dec edx; scasd eax, dword ptr es:[edi]; lock dec dword ptr [ebp - 0x64a677d]; call dword ptr [eax - 0x73]; 
0x0013468d: dec edx; stc; call dword ptr [eax - 0x75]; 
0x0018f332: dec edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191322: dec edx; std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0018f1b7: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911b7: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00127e75: dec edx; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x000bf589: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00165a47: dec esi; adc al, 0x39; ror byte ptr [edi], 1; dec esp; ret 0xec83; 
0x00106765: dec esi; adc al, 0x8b; push esp; ret; 
0x0009ae55: dec esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0018faa7: dec esi; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00151dc9: dec esi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00060512: dec esi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0014d4db: dec esi; add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x0014d471: dec esi; add byte ptr [eax], al; test eax, eax; jne 0x14d487; ret; 
0x0002de70: dec esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00040e46: dec esi; add dword ptr [eax], eax; add dh, dh; ret 0xf03; 
0x000bb017: dec esi; add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a2935: dec esi; add eax, 0xb; ret; 
0x00125a03: dec esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ffb44: dec esi; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00087d1f: dec esi; and byte ptr [ecx], ch; rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x001087b4: dec esi; clc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000d6c91: dec esi; cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x0002746f: dec esi; cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x00081f37: dec esi; or al, 0x89; ret 0x48d; 
0x00159d74: dec esi; or byte ptr [ebx - 0x76dbdbb4], cl; fisubr dword ptr [ecx]; ret 0xca39; 
0x0008deff: dec esi; or byte ptr [ebx - 0x76fbdbac], cl; ret; 
0x00133fb3: dec esi; or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x00097f7d: dec esi; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000f7f84: dec esi; push esp; inc esi; push ebx; setne al; ret; 
0x0010a894: dec esi; ret 0x25e9; 
0x000f907f: dec esi; ret 0x4489; 
0x0009b62a: dec esi; ret 0x578b; 
0x0009b643: dec esi; ret 0x8389; 
0x0016d4f8: dec esi; ret 0x8966; 
0x0011fc54: dec esi; ret 0x96e9; 
0x00126313: dec esi; ret 0x98e9; 
0x0011faed: dec esi; ret 0xc931; 
0x0010e16c: dec esi; ret 0xe883; 
0x0005b60a: dec esi; ret 0xec83; 
0x00038da9: dec esi; ret; 
0x000d6bf1: dec esi; sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000e5240: dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000e523a: dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000dcc45: dec esi; sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a8e2e: dec esi; scasd eax, dword ptr es:[edi]; clc; jmp dword ptr [esi - 0x70]; 
0x000851c0: dec esi; stc; call dword ptr [eax + 0x56]; 
0x0008023d: dec esi; stc; call dword ptr [eax - 0x18]; 
0x0008b4c5: dec esi; stc; call dword ptr [eax - 0x18]; mov dl, 0x88; cli; jmp dword ptr [esi - 0x70]; 
0x000d6c71: dec esi; xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0004de69: dec esp; adc al, 0; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x00040d61: dec esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009a0be: dec esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x19cd937d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0011eded: dec esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00064218: dec esp; add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x00152a44: dec esp; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0012c980: dec esp; add dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0004a50b: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00170db1: dec esp; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x00043c7a: dec esp; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8d0f; 
0x0012e038: dec esp; add eax, 0xd9c58100; lea edx, [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x00063b18: dec esp; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x0008c440: dec esp; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0018d251: dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0011df05: dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00129c76: dec esp; and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x00128fb9: dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0008bcc2: dec esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x00175d52: dec esp; and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00175312: dec esp; and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x0010fbc5: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c90b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012c15b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c23b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001226cb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ffb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0012060b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd9b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008d69f: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011ef48: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009d583: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011eef8: dec esp; and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011de85: dec esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00171a39: dec esp; and al, 0x10; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0007abb3: dec esp; and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00175d7f: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x00174fb7: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x0008bbd6: dec esp; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000e4d28: dec esp; and al, 0x14; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x00126740: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011dff5: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00111900: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b280: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c330: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfb0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c030: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdd0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c190: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bff0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bec0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c200: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012ad00: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270f0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241c0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x001206a0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012b2a9: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011df75: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012e04e: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011b82b: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00060424: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0018b82c: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e53c: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012aa73: dec esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009b990: dec esp; and al, 0x1c; call dword ptr gs:[0x10]; 
0x0016ae34: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ae6f: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x001271f5: dec esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00148a31: dec esp; and al, 0x1c; mov edx, dword ptr [ecx - 0x6e5c4]; add edx, ecx; jmp edx; 
0x001489ba: dec esp; and al, 0x1c; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x001488b5: dec esp; and al, 0x1c; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x001487ec: dec esp; and al, 0x1c; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x000917b7: dec esp; and al, 0x1c; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00064f00: dec esp; and al, 0x20; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00063809: dec esp; and al, 0x20; movzx edx, byte ptr [esi + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x72e94]; jmp eax; 
0x001802bc: dec esp; and al, 0x20; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017197a: dec esp; and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0012ab10: dec esp; and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fca0: dec esp; and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001250a0: dec esp; and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00126640: dec esp; and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00129160: dec esp; and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011be40: dec esp; and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c810: dec esp; and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d8b0: dec esp; and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011120f: dec esp; and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x0012ab42: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003fcd2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001250d2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00126672: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00129192: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011be72: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011c842: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0011d8e2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0011123a: dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0016fd12: dec esp; and al, 0x28; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0009b98a: dec esp; and al, 0x28; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00171967: dec esp; and al, 0x28; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x0011b8b6: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9ac: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012eb4c: dec esp; and al, 0x30; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011b8fb: dec esp; and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011b9eb: dec esp; and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001254fa: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125d9a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f837a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f851a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012a471: dec esp; and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010b182: dec esp; and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011bb3a: dec esp; and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bc30: dec esp; and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012b421: dec esp; and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012b9c1: dec esp; and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001254c9: dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001251f1: dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00125d69: dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125a91: dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012d6f1: dec esp; and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f834a: dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84ea: dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011bb7a: dec esp; and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011bc6a: dec esp; and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000c431e: dec esp; and al, 0x34; push eax; push ebp; call esi; 
0x0011b609: dec esp; and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0009b9ba: dec esp; and al, 0x38; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0015a38e: dec esp; and al, 0x3c; call ecx; 
0x0016999b: dec esp; and al, 0x48; mov eax, dword ptr [ecx + 0x20]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x0006f6ee: dec esp; and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000705f7: dec esp; and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0011c69d: dec esp; and al, 0x54; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011c64b: dec esp; and al, 0x54; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0011c5dc: dec esp; and al, 0x54; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x0011c6df: dec esp; and al, 0x54; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000e4f67: dec esp; and al, 0x54; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e4ffe: dec esp; and al, 0x54; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e4fc8: dec esp; and al, 0x54; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e4f08: dec esp; and al, 0x54; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000c168c: dec esp; and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x44]; push dword ptr [eax]; call edi; 
0x000ddfa6: dec esp; and al, 0x58; or byte ptr [ecx + ecx*4], al; inc esi; adc cl, ch; ret 0xffed; 
0x0009e0f7: dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012b79f: dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012b825: dec esp; and al, 0x64; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012b703: dec esp; and al, 0x64; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012ada2: dec esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0009e169: dec esp; and al, 0x64; mov esi, dword ptr [esp + 8]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009e067: dec esp; and al, 0x64; mov esi, dword ptr [esp + 8]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x000dbd59: dec esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0009df41: dec esp; and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012b539: dec esp; and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000e4ddc: dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0008d3f6: dec esp; and al, 0xc; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012bb67: dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012a8e7: dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012a677: dec esp; and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000f82fd: dec esp; and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0008d451: dec esp; and al, 0xc; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x000603d2: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012c426: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b786: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d516: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d026: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111336: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c096: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be06: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be66: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111056: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f446: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129256: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf76: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc36: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125056: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd16: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd46: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c066: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b76: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed936: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed906: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f76: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124316: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124026: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124056: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120636: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0007ab16: dec esp; and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00097c26: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0008bc39: dec esp; and al, 0xc; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x000254a3: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x254b3; add esp, 0x1c; ret; 
0x000920ea: dec esp; and al, 0xc; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091a78: dec esp; and al, 0xc; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0011efa9: dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x0006f6f2: dec esp; and al, 4; jmp eax; 
0x000705fb: dec esp; and al, 4; jmp edx; 
0x000e4e3c: dec esp; and al, 4; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000704c1: dec esp; and al, 4; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x000704d1: dec esp; and al, 4; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x000704f1: dec esp; and al, 4; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00070501: dec esp; and al, 4; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00070571: dec esp; and al, 4; mov dword ptr [esp + 0x34], 1; jmp eax; 
0x00070511: dec esp; and al, 4; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x0006f79b: dec esp; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000e4e40: dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e4b7c: dec esp; and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0008ea65: dec esp; and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x8ea78; ret; 
0x001089d1: dec esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00097782: dec esp; and al, 4; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000f821c: dec esp; and al, 4; mov eax, 1; test ecx, ecx; js 0xf8230; ret; 
0x0009b52b: dec esp; and al, 4; mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9b547; ret; 
0x0006f938: dec esp; and al, 4; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00025623: dec esp; and al, 4; mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x000391b5: dec esp; and al, 4; movzx eax, al; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x0008f313: dec esp; and al, 4; xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0017fec1: dec esp; and al, 8; call eax; 
0x0016d56f: dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00175ca4: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00175c7c: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016adcc: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016adf4: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0012e991: dec esp; and al, 8; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012bf43: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012c2c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012a523: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011bdf3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012c2f3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012c363: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012c393: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012c3c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012be33: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012c0c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012c1c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c3e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00108d53: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00126f73: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00127173: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00125193: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001116d3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00126cf3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012bc83: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00111ed3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00124633: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125143: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00108ba3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x001088e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x001292a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012bcb3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012bce3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003ca03: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ec933: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012c123: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00126773: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x00124083: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00120663: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000c2585: dec esp; and al, 8; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc259a; ret; 
0x000d92b2: dec esp; and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009303f: dec esp; and al, 8; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x000993bd: dec esp; and esi, esp; call dword ptr [eax - 0x73]; 
0x0013000b: dec esp; call 0x12fed0; add esp, 4; ret; 
0x0009d8b2: dec esp; call dword ptr gs:[0x10]; 
0x00029bed: dec esp; call eax; 
0x00138854: dec esp; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00107370: dec esp; cmp edi, edi; dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000be2dd: dec esp; dec edx; or al, 0; add ecx, 0x107d93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0006f372: dec esp; fdivr st(0); inc dword ptr [ecx]; ret; 
0x000705ee: dec esp; fprem; inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x00025fd1: dec esp; int 0x15; add byte ptr [0x210e3f], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000a654a: dec esp; into; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0016e211: dec esp; ja 0x16e207; call dword ptr [eax - 0x73]; 
0x000779d1: dec esp; jge 0x779cd; call dword ptr [eax - 0x73]; 
0x000779ed: dec esp; jge 0x779e9; call dword ptr [eax - 0x73]; 
0x00077a09: dec esp; jge 0x77a05; call dword ptr [eax - 0x73]; 
0x00077a25: dec esp; jge 0x77a21; call dword ptr [eax - 0x73]; 
0x00136e09: dec esp; jle 0x136e05; call dword ptr [eax - 0x75]; 
0x00136f11: dec esp; jle 0x136f0d; call dword ptr [eax - 0x75]; 
0x0015ea93: dec esp; jle 0x15ea88; call dword ptr [eax - 0x18]; 
0x0007be2c: dec esp; jp 0x7be29; call dword ptr [ebp + 0x57]; 
0x000ce2c3: dec esp; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00168756: dec esp; loope 0x16874c; call dword ptr [eax - 0x73]; 
0x0016c729: dec esp; loope 0x16c71f; call dword ptr [eax - 0x73]; 
0x001305c7: dec esp; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0015f71c: dec esp; mov dword ptr [0x8d500000], eax; sbb esp, -0x76; bnd call dword ptr [eax - 0x18]; 
0x0006f6f0: dec esp; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000705f9: dec esp; mov dword ptr [esp + 4], ecx; jmp edx; 
0x00170108: dec esp; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0009d976: dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9b6: dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00090cbf: dec esp; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0011ef9f: dec esp; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0011e816: dec esp; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000be119: dec esp; or al, 0; add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be096: dec esp; or al, 0; add ecx, 0x107f5b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0013cc8d: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0013cd2e: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [edx + esi + 0x39], cl; ret 0x1f72; 
0x000a1ecc: dec esp; or dword ptr [eax], eax; add byte ptr [ebx + 0x3910246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x000a3161: dec esp; or dword ptr [eax], eax; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0009fa8f: dec esp; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000855b7: dec esp; out 0xe4, al; call dword ptr [eax - 1]; 
0x00057151: dec esp; pop ds; add al, 0x83; ret; 
0x0003ad2b: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003f227: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00169cc6: dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0017015b: dec esp; push edx; call eax; 
0x0002cc90: dec esp; ret 0x10; 
0x0014bcc1: dec esp; ret 0x3904; 
0x00165a4c: dec esp; ret 0xec83; 
0x0010aabf: dec esp; ret 0xfae9; 
0x000311bb: dec esp; ret; 
0x000b6cdd: dec esp; ror byte ptr [eax + eax], 0x81; rcr dword ptr [edi - 0x10], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00031836: dec esp; ror byte ptr [ebx + 0x41031841], 1; adc al, 0x39; ret 0x4d0f; 
0x0004d692: dec esp; sar ecx, 1; jmp dword ptr [ebp - 0x39]; 
0x00126450: dec esp; sar ecx, 1; jmp dword ptr [ecx]; 
0x0010961e: dec esp; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000539c8: dec esp; xchg esi, eax; add al, 0x83; ret 0x8501; 
0x0006fb72: dec esp; xlatb; clc; inc dword ptr [ecx]; ret; 
0x00113af4: div al; jmp dword ptr [ebp - 0x77]; 
0x0009aed0: div byte ptr [ebp + ecx*2 - 0x77]; push esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00024dc8: div byte ptr [ebp + edi - 0x7d]; in al, dx; add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0013b9e5: div byte ptr [ebp - 0x18]; mov edx, dword ptr [esp + 4]; mov dword ptr gs:[ebp], edx; mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0008a918: div byte ptr [ebp - 0x1b]; add esp, 4; pop ebx; pop esi; ret; 
0x0003fabd: div byte ptr [ebp - 0x1c]; add esp, 4; pop ebx; pop esi; ret; 
0x00025f5e: div byte ptr [ebp - 0x1d]; add esp, 4; pop ebx; pop esi; ret; 
0x0015a51c: div byte ptr [ebp - 0x1f]; pop ebx; pop esi; pop edi; ret; 
0x00142282: div byte ptr [ebx + edx + 0xf]; mov edi, 0x39fe735c; ret; 
0x0002601d: div byte ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x56; call 0x180100; mov dword ptr [esp], ebx; call esi; 
0x000dbffc: div byte ptr [ecx + edx*2 - 0x73]; push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0003d72f: div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x0009d48c: div byte ptr [ecx]; sal dh, cl; rol dword ptr [eax + 0x75], 0x24; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0016326d: div byte ptr [esp + ebp*8 + 0x5b]; mov eax, edx; pop esi; pop edi; ret; 
0x0003030a: div dh; ret; 
0x00098f25: div dword ptr [ebp + edx*8 - 0x7d]; in al, dx; or al, 0x8d; xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; stc; ret 0xfffe; 
0x0016111c: div dword ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x0012d232: div ebp; dec dword ptr [ebx + 0x548b240c]; and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012d1f2: div ebp; dec dword ptr [ecx + 0x240c8bef]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x001382e8: div ebx; pop ebx; pop esi; pop edi; ret; 
0x001701ac: emms; adc dword ptr [ebx], eax; test byte ptr [eax - 0x6c910], dl; jmp eax; 
0x0016d61e: emms; lsl eax, word ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x0003b4be: fabs; test ah, 2; je 0x3b4c7; fchs; ret; 
0x0003b83e: fabs; test ah, 2; je 0x3b847; fchs; ret; 
0x00058e67: fadd dword ptr [0x8d500000]; xchg byte ptr [ebx], al; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0004984f: fadd dword ptr [0x8d500000]; xchg dword ptr [ebx], eax; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0019073a: fadd dword ptr [eax + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012b1a7: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b1a7: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011860a: fadd dword ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001175cb: fadd dword ptr [eax]; pop ebx; pop esi; ret; 
0x000a3221: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a3824: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009edd5: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000dcaf6: fadd dword ptr [ebp - 0x7cf28a2e]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000e4f20: fadd dword ptr [ebx + 0x440fdafb]; ret 0x548b; 
0x0019e938: fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x000c41f4: fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00086b23: fadd dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0003816e: fadd dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0008039b: fadd dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00182b80: fadd dword ptr [ebx + 0xc3c0fe0]; ja 0x24a13; movzx eax, al; add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x0012442d: fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x00036dc3: fadd dword ptr [ecx - 0x1fe0008]; jmp esi; 
0x000c0a38: fadd dword ptr [ecx]; add byte ptr [eax], al; ret; 
0x000fd8d5: fadd dword ptr [ecx]; ret 0x86eb; 
0x0013bea0: fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00054103: fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x000b0e04: fadd dword ptr [edx]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00065973: fadd qword ptr [eax - 0x7bf0d805]; ret; 
0x0013fe72: fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x000e5de4: fadd qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e5c3b: fadd qword ptr [eax]; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00081b9d: fadd qword ptr [eax]; add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x000db8a3: fadd qword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000c0a48: fadd qword ptr [ecx]; add byte ptr [eax], al; ret; 
0x000391b0: fadd qword ptr [edx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 4]; movzx eax, al; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x0003b454: fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003badf: fadd st(0); add esp, 8; pop ebx; ret; 
0x0003b559: fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0014cd20: fadd st(0); stc; call dword ptr [eax - 0x73]; 
0x0014e78f: fadd st(1), st(0); stc; call dword ptr [eax - 0x73]; 
0x0015733d: fadd st(3); stc; call dword ptr [eax - 0x18]; 
0x001573d2: fadd st(4); stc; call dword ptr [eax - 0x18]; 
0x001656c3: fadd st(5), st(0); stc; call dword ptr [eax - 0x73]; 
0x001823ee: fadd st(7), st(0); inc esp; ret; 
0x0016f7cb: fadd st(7); stc; call dword ptr [eax - 0x73]; 
0x00024b36: fbld tbyte ptr [edx]; and dword ptr [eax], eax; mov edx, dword ptr [eax + 0x118]; test edx, edx; je 0x24b45; ret; 
0x0003bb55: fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003b4c5: fchs; ret; 
0x0003bb57: fcmove st(0), st(1); fstp st(1); ret; 
0x000254c2: fcom dword ptr [0x194f0500]; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00127750: fcom dword ptr [eax - 0x73]; xchg byte ptr [ecx], cl; dec edi; stc; call dword ptr [eax + 0x6a]; 
0x0012786b: fcom dword ptr [eax - 0x73]; xchg dl, ah; arpl cx, di; call dword ptr [eax + 0x57]; 
0x00040f2e: fcom dword ptr [eax - 0x75]; inc esp; and al, 0x28; call eax; 
0x001938ba: fcom dword ptr [ecx]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b814f: fcom qword ptr [eax]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b8286: fcom qword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000a9c54: fcom qword ptr [edx - 0xa]; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x89; call 0xc24eac63; ret; 
0x000b6c67: fcomi st(0); adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0018543b: fcomi st(0); jmp dword ptr [esi - 0x70]; 
0x0013f0f5: fcomi st(0); jmp dword ptr [esi - 0x77]; 
0x00193b84: fcomi st(7); ret 1; 
0x0016a7f7: fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x000380ae: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00139de7: fcomp dword ptr [ebx + 0x5e]; pop edi; ret 4; 
0x00033cd7: fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0008ca0a: fcomp dword ptr [ebx + 0x5e]; ret; 
0x0003abb7: fcomp dword ptr [ebx + 0x5e]; shr eax, 0x1f; pop edi; ret; 
0x0018b2b2: fcomp dword ptr [ebx - 0x17]; xchg ebp, ecx; clc; jmp dword ptr [esi - 0x70]; 
0x00025347: fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x00171c14: fcomp dword ptr [ecx]; ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x171c37; add esp, 0x1c; ret; 
0x001a0108: fcomp dword ptr [edi + 0x5b]; ret; 
0x001a0668: fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0004d02b: fcomp dword ptr [edi + 0x5d]; xor eax, 0x7fffffff; ret; 
0x001a4fc8: fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d6ca8: fcomp dword ptr [edi + 0x5e]; ret; 
0x000529d4: fcomp dword ptr [esi + 0x5f]; ret; 
0x000410ce: fcos; jmp dword ptr [esi - 0x70]; 
0x0015e50c: fdiv dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0017bc3d: fdiv dword ptr [eax]; add byte ptr [ecx + 0xbb1d3c3], al; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x00156ba0: fdiv dword ptr [ebp + edx*8 - 0x7d]; ret 0xeb18; 
0x000a9400: fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x0016c571: fdiv dword ptr [ebp - 0x14]; pop ebx; ret; 
0x000a93bc: fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x00052f6c: fdiv dword ptr [ebp - 0xf]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0011f665: fdiv dword ptr [edx + 8]; xor eax, eax; pop ebx; ret; 
0x001af036: fdiv dword ptr [edx - 0x62dc4]; fstp st(0); leave; ret; 
0x000bae9a: fdiv qword ptr [eax + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x0015261c: fdiv qword ptr [ebp - 0xf]; call dword ptr [eax - 0x73]; 
0x0009f349: fdiv qword ptr [esi - 0x1a]; call dword ptr [eax + 0x57]; 
0x000852f1: fdivp st(1); inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0015b016: fdivp st(5); jmp dword ptr [esi - 0x70]; 
0x00194e6c: fdivp st(6); inc dword ptr [ecx + 0x40061c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013b02d: fdivp st(7); call dword ptr [ebp + 0x57]; 
0x000740ca: fdivp st(7); dec dword ptr [ebx - 0x51f73]; dec dword ptr [ecx - 0x54743]; dec dword ptr [ecx - 0x4f74b]; jmp dword ptr [ebp - 0x75]; 
0x000a74cb: fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000c3e4d: fdivr dword ptr [ecx]; fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x00073481: fdivr dword ptr [ecx]; ret 0x830f; 
0x0007271a: fdivr dword ptr [ecx]; ret 0x8f0f; 
0x000fb89f: fdivr dword ptr [ecx]; ret 0x972; 
0x0005c5cd: fdivr dword ptr [ecx]; ret 0xee7c; 
0x0012684b: fdivr dword ptr [ecx]; ret; 
0x001512f1: fdivr dword ptr [ecx]; retf 0xca75; pop ebx; pop esi; ret; 
0x0013bd56: fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000c3e2f: fdivr dword ptr [ecx]; stc; pop edi; cmovg eax, edx; ret; 
0x000be11e: fdivr dword ptr [esi + 0x10]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009613c: fdivr dword ptr [esi - 0x39]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0011181a: fdivr qword ptr [ecx + edi*8]; call dword ptr [eax + 0x55]; 
0x0013f11d: fdivr qword ptr [ecx + edi*8]; call dword ptr [eax + 0x56]; 
0x0010b805: fdivr qword ptr [ecx + edi*8]; call dword ptr [eax - 0x18]; 
0x00137781: fdivr qword ptr [ecx + edi*8]; call dword ptr [eax - 0x73]; 
0x00103931: fdivr qword ptr [ecx + edi*8]; dec dword ptr [ebp - 0x6b0bf71]; call dword ptr [eax - 0x17]; 
0x0003f9c7: fdivr qword ptr [ecx + edi*8]; dec dword ptr [ebp - 0x6c0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003f745: fdivr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x14d3dbbc]; mov ebx, 0x3cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003f6f2: fdivr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003f3dd: fdivr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x0003f498: fdivr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003f2d4: fdivr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x00154efb: fdivr qword ptr [ecx + edi*8]; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0008be0d: fdivr qword ptr [ecx + edi*8]; inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x0008bd9c: fdivr qword ptr [ecx + edi*8]; inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x00032784: fdivr qword ptr [ecx + edi*8]; jmp dword ptr [ebp - 0x75]; 
0x00136b6f: fdivr qword ptr [ecx]; ret; 
0x00161063: fdivr qword ptr [edx - 0xf]; call dword ptr [eax - 0x73]; 
0x001154d4: fdivr st(0), st(0); jmp dword ptr [ebp - 0x77]; 
0x000c6862: fdivr st(0); dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x0006f373: fdivr st(0); inc dword ptr [ecx]; ret; 
0x0018b63d: fdivr st(2); call dword ptr [ebx - 0x7d]; 
0x0018b6c9: fdivr st(2); jmp dword ptr [esi - 0x70]; 
0x0016e328: fdivr st(7); add esp, 0xc; ret; 
0x0006809d: fdivr st(7); call dword ptr [edx - 0x73]; 
0x000fc8a5: fdivr st(7); inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x00147e37: fdivr st(7); jmp dword ptr [ebp - 0x75]; 
0x0017ded2: fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x000bdb51: fdivr st(7); mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b55d6: fdivr st(7); pop ebx; ret; 
0x000b4e67: fdivr st(7); pop edi; pop ebx; ret; 
0x000bfd6e: fdivr st(7); pop esi; pop ebx; ret; 
0x0015f824: fdivrp st(2); inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x000a6dcb: fdivrp st(5); dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000def6b: fiadd dword ptr [eax + 0x440f2df9]; ret 0x10e9; 
0x001243ee: fiadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00184772: fiadd dword ptr [eax]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x000a2ed8: fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x0009ac24: fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x000e4955: fiadd dword ptr [ebx + 0x3b8eaf8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x0003ffee: fiadd dword ptr [ebx - 0x2508ff2e]; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000b0514: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x10; 
0x000aff94: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x15; 
0x000afa14: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x1a; 
0x0008ec35: fiadd dword ptr [ebx - 0x7a72f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x00040f57: fiadd dword ptr [ecx]; fist word ptr [edi + 0x52]; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x001a20e3: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x000c05a1: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x00053bf5: fiadd word ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00055c78: fiadd word ptr [ebx - 0x362743]; call dword ptr [eax]; 
0x0018da3b: ficom dword ptr [edx - 1]; inc dword ptr [ecx + 0x46b51c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005f90e: ficom word ptr [ecx - 3]; call dword ptr [eax - 0x73]; 
0x00050f8d: ficomp dword ptr [ebx + 0x5e]; xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x0007de34: ficomp word ptr [ebp - 6]; jmp dword ptr [esi - 0x70]; 
0x0013d442: fidiv dword ptr [eax]; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000e4b78: fidiv dword ptr [ebp + 0x35]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e493e: fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000a94b8: fidiv dword ptr [ebp + esi*8 + 0x39]; bnd je 0xa94b0; pop ebx; pop esi; ret; 
0x000a9488: fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x0014cba2: fidiv dword ptr [ecx - 0x12]; dec dword ptr [ebp - 0x63f1b7f]; call dword ptr [eax - 0x73]; 
0x000be21b: fidiv dword ptr [edx - 0x1e]; call 0x182d2d; add ecx, 0x107e51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b827b: fidiv dword ptr [edx - 0x1e]; call 0x182d2d; add ecx, 0x10dc1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c3b: fidiv dword ptr [edx - 0x1e]; call 0x182d2d; add ecx, 0x10f0fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be23d: fidiv dword ptr [edx - 0x40]; call 0x182d2d; add ecx, 0x107e2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b829d: fidiv dword ptr [edx - 0x40]; call 0x182d2d; add ecx, 0x10dbfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c5d: fidiv dword ptr [edx - 0x40]; call 0x182d2d; add ecx, 0x10f0db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be258: fidiv dword ptr [edx - 0x5b]; call 0x182d2d; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82b8: fidiv dword ptr [edx - 0x5b]; call 0x182d2d; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c78: fidiv dword ptr [edx - 0x5b]; call 0x182d2d; add ecx, 0x10f0c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be26f: fidiv dword ptr [edx - 0x72]; call 0x182d2d; add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c8f: fidiv dword ptr [edx - 0x72]; call 0x182d2d; add ecx, 0x10f0a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000780ea: fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x00097c40: fidivr dword ptr [0xfffff000]; mov eax, 0; cmova eax, edx; ret; 
0x0011bf09: fidivr dword ptr [0xfffff000]; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0012e158: fidivr dword ptr [ebx + 0xe]; call dword ptr gs:[0x10]; 
0x00172a32: fidivr dword ptr [ecx]; bnd jmp dword ptr [ebp - 0x75]; 
0x00036ec4: fidivr dword ptr [ecx]; ret 0x430f; 
0x0012a055: fidivr dword ptr [ecx]; ret 0x820f; 
0x00144a1e: fidivr dword ptr [ecx]; ret 0x8e0f; 
0x0009f45e: fidivr dword ptr [ecx]; ret 0xa72; 
0x00173a3e: fidivr word ptr [ebp - 1]; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00066a07: fidivr word ptr [ecx]; ret 0x840f; 
0x0010e4c5: fidivr word ptr [ecx]; ret; 
0x0003fe09: fidivr word ptr [ecx]; retf 0x5a8d; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x0009798f: fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x00183711: fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x000aaa3a: fild dword ptr [eax - 0x6bf0cf06]; ret; 
0x0012431e: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f8301: fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010f849: fild dword ptr [ebp - 0x14f48a2e]; jo 0x10f7d4; ret; 
0x000d1bb1: fild dword ptr [ebp - 0x760d8b37]; ret; 
0x00031c74: fild dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00046f2a: fild dword ptr [ebx + 0xf10243c]; xchg esp, eax; ret 0xc8b; 
0x001a73b6: fild dword ptr [ebx - 0x177ce010]; or al, 0x89; ret 0xe283; 
0x0007d101: fild dword ptr [ebx - 0x17adf314]; push ebp; add eax, 0xc4830001; adc bl, ch; int 0x80; 
0x00150f5c: fild dword ptr [ebx - 0x2776fb3c]; pop ebx; pop esi; ret; 
0x001309cc: fild dword ptr [ebx - 0x69f0f606]; ret; 
0x00131324: fild dword ptr [ebx - 0x69f0f608]; ret; 
0x00066381: fild dword ptr [ebx]; test byte ptr [eax - 0x72aa8], bl; jmp eax; 
0x00065d11: fild dword ptr [ebx]; test byte ptr [eax - 0x72c7c], bl; jmp eax; 
0x001219bf: fild dword ptr [ecx + 0x42cec]; add byte ptr [ebp - 0x6a53f80], cl; jmp dword ptr [ebp - 0x75]; 
0x00173ed1: fild dword ptr [esi - 0x10]; inc dword ptr [ebx - 0x17aaeb3c]; ret 0xeaf2; 
0x0003b780: fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000e9766: fild word ptr [ebx - 0x6bf0bf06]; ret; 
0x0014507d: fild word ptr [ecx]; ret; 
0x00190533: fild word ptr [edx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b871d: fild word ptr [esi]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b6e22: fimul dword ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000302a3: fimul dword ptr [ebp - 0x47f2ba8]; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00131be8: fimul dword ptr [ebx + 0x291c244c]; ret 0xca39; 
0x000f3c15: fimul dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64f7379]; call dword ptr [eax - 0x73]; 
0x0011d4b1: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011d4b1: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012b1a1: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b1a1: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00127151: fimul dword ptr [ebx - 0x47fbdba4]; jae 0x127159; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c261: fimul dword ptr [ebx - 0x47fbdba4]; je 0x12c269; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c3f1: fimul dword ptr [ebx - 0x47fbdba4]; jle 0x12c3fa; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bc61: fimul dword ptr [ebx - 0x47fbdba4]; jno 0x12bc69; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010acf1: fimul dword ptr [ebx - 0x47fbdba4]; jp 0x10acf9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012abb1: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012abb1: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00110f01: fimul dword ptr [ebx - 0x47fbdba4]; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e71b1: fimul dword ptr [ebx - 0x47fbdba4]; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001112c1: fimul dword ptr [ebx - 0x47fbdba4]; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed8b1: fimul dword ptr [ebx - 0x47fbdba4]; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001116b1: fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f501: fimul dword ptr [ebx - 0x47fbdba4]; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bf41: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012c2c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012a521: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011bdf1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012c2f1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012c361: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012c391: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012c3c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012be31: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012c0c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012c1c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c3e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00108d51: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00126f71: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00127171: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00125191: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001116d1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00126cf1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012bc81: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00111ed1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00124631: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125141: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00108ba1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x001088e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x001292a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012bcb1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012bce1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003ca01: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ec931: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012c121: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00126771: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x00124081: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00120661: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000c979d: fimul dword ptr [ebx - 0x76efdbbc]; ret; 
0x0009801a: fimul dword ptr [ecx + 0x247c8bc3]; adc al, 0x89; ret 0xfbd1; 
0x000fd846: fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x000d7eee: fimul dword ptr [ecx - 0x76a7dbbc]; ret; 
0x0003b388: fimul dword ptr [ecx - 0x76b3dbac]; ret; 
0x001a7a0a: fimul dword ptr [ecx - 0x9f63]; call ebx; 
0x000b8422: fimul dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001454a3: fimul dword ptr [ecx]; ret 0x448b; 
0x0003b409: fimul dword ptr [edi]; add byte ptr [esi - 0x70], ah; nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x000e1083: fimul dword ptr [edi]; dec ecx; ret 0x1c8d; 
0x0006218f: fimul dword ptr [edi]; dec ecx; ret 0x7489; 
0x000e4f23: fimul dword ptr [edi]; inc esp; ret 0x548b; 
0x000d835e: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000d8179: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b7865: fimul dword ptr [edi]; xor byte ptr [ebx + esi*8 - 0x43170001], 0xb4; or al, 0; add ecx, 0x10e4cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a1ed5: fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x0008dcd9: fimul word ptr [ebx + 0x1acc97]; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0007bb5d: fimul word ptr [ecx + 0x247c2bcf]; xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x00059661: fimul word ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x00163123: fimul word ptr [edi]; inc esp; ret 0x4789; 
0x000d4f3c: fimul word ptr [edi]; test edi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x0013b2ad: fimul word ptr [edi]; xchg ebx, eax; ret; 
0x00180e48: fimul word ptr [edi]; xchg edx, eax; ret; 
0x000b8268: fist dword ptr [eax]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b82a8: fist dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000e81c0: fist dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x0018efb3: fist word ptr [ebp + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00040f59: fist word ptr [edi + 0x52]; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x000a1ebc: fist word ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x000c21e1: fistp dword ptr [eax + eax]; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x0003fb98: fistp dword ptr [ebx + 0x31]; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000903cd: fistp qword ptr [eax + 0xf0]; mov ebx, dword ptr [esp]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085ced: fistp qword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006f4e5: fistp qword ptr [ecx]; ret 0x8d0f; 
0x0017d236: fistp word ptr [ebx - 0x137cfff5]; adc al, 0xff; je 0x17d264; sbb byte ptr [ebp - 0x6893b80], cl; call dword ptr [eax - 0x18]; 
0x00029126: fisttp dword ptr [ebp + 0x490f0343]; ret; 
0x000fc6c4: fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x000d7009: fisttp dword ptr [ebp - 0x7600e4a4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0009e3c1: fisttp dword ptr [ebp - 8]; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x0009de95: fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009def8: fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00028856: fisttp dword ptr [ebx + 0x450f0471]; ret 0x4489; 
0x0006629e: fisttp dword ptr [ebx - 0x58b6b]; inc dword ptr [ebx]; test byte ptr [eax - 0x72bf8], bl; jmp eax; 
0x00130d51: fisttp dword ptr [ebx - 0x5cf0f5ec]; ret 0x920f; 
0x00130765: fisttp dword ptr [ebx - 0x5cf0f7fc]; ror byte ptr [edi], 1; xchg edx, eax; ret; 
0x00028df3: fisttp dword ptr [ebx - 0x72c3db84]; xchg esp, ebp; jnp 0x28df6; call dword ptr [eax - 0x73]; 
0x0002a995: fisttp dword ptr [ebx - 0x72c7db84]; xchg dword ptr [eax - 0x7e], ebx; stc; call dword ptr [eax - 0x73]; 
0x0011ef46: fisttp dword ptr [ebx - 0x74efdbb4]; push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x001a9a71: fisttp dword ptr [ebx - 0x836b]; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x001abad1: fisttp dword ptr [ebx - 0x8f6b]; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0002dd61: fisttp dword ptr [ecx + 0x39f7891f]; ret 0xc275; 
0x0003fc74: fisttp dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000c2491: fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00137246: fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005de74: fisttp dword ptr [ecx + 0xf04245c]; lahf; ret; 
0x0011226f: fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x00028014: fisttp dword ptr [ecx - 0x7c2dce28]; ret; 
0x000ebc26: fisttp dword ptr [ecx - 0x7cf81432]; ret; 
0x00054fbf: fisttp dword ptr [edi]; dec ecx; ret; 
0x00029b13: fisttp dword ptr [edi]; inc ebp; ret 0x4489; 
0x0013ab09: fisttp dword ptr [edi]; inc ebp; ret 0x548b; 
0x000e246a: fisttp dword ptr [edi]; inc ebp; ret; 
0x00062175: fisttp dword ptr [edi]; test bh, dl; or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0003978a: fisttp dword ptr [edi]; test byte ptr [edi - 0x7d000000], ch; in al, dx; or byte ptr [ebp - 0x6c1407b], cl; call dword ptr [eax + 0x53]; 
0x001abc02: fisttp dword ptr [edi]; test byte ptr [edi - 0x900000d], ah; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [eax]; 
0x0014b391: fisttp dword ptr [edi]; test byte ptr [edi - 0xa000000], ch; ret 0xf08; 
0x00069713: fisttp dword ptr [edi]; test byte ptr [edi], ah; and eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x850f; 
0x0016392b: fisttp dword ptr [edi]; test byte ptr [esi - 0x7d000000], al; in al, dx; or al, 0x8d; test dword ptr [edx + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x001ab4c3: fisttp dword ptr [edi]; test ch, ch; add dword ptr [eax], eax; add byte ptr [ebx - 0x8b73], al; call dword ptr [eax]; 
0x0010df07: fisttp dword ptr [edi]; test dl, ch; add byte ptr [eax], al; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x001aba47: fisttp dword ptr [edi]; test dword ptr [0x89fffff5], eax; ret; 
0x00152a39: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], ebp; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0015db39: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], esi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0008ec83: fisttp dword ptr [edi]; xchg ebp, eax; ret 0xe2c1; 
0x0018ba84: fisttp dword ptr [edi]; xchg esp, eax; ret 0xc483; 
0x00039299: fisttp dword ptr [edi]; xchg esp, eax; ret; 
0x0013c85a: fisttp qword ptr [ebx - 0x7ce3dba4]; ret 0x8802; 
0x00108832: fisttp qword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000489b8: fisttp qword ptr [ecx - 0x76307608]; ret; 
0x00061249: fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x0009b46f: fisttp word ptr [ebp - 0x6672f7b]; call dword ptr [eax - 0x73]; 
0x0009f5b9: fisttp word ptr [ebx + 0x418d0c48]; jmp dword ptr [ecx]; 
0x00059340: fisttp word ptr [ebx + 0xf282444]; mov esi, 0x8b1b244c; je 0x59371; sbb al, 0x89; ret 0xc801; 
0x000bf6a0: fisttp word ptr [ecx + 0x5f5e5bf0]; ret; 
0x0008b551: fisttp word ptr [ecx - 0x14147618]; ret 0x8d2e; 
0x0013bc61: fisttp word ptr [ecx - 0x76c7dba4]; ret; 
0x000fcafc: fisttp word ptr [ecx]; ret 0x5388; 
0x00092200: fisttp word ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x0018c44d: fisub dword ptr [esi + 0xf]; jg 0x18c494; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018c9dd: fisub dword ptr [esi + 0xf]; jg 0x18ca24; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0019f6ac: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000498a2: fisub dword ptr [esi + edi*8 + 0x247c8bff]; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x0019f46c: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00038cbe: fisub word ptr [esi + edi*8 + 0x10c483ff]; add esp, 4; pop ebx; pop esi; ret; 
0x0006c405: fisubr dword ptr [ebx]; xchg ebp, eax; mov eax, 0x39fffffb; ret 0x2074; 
0x00069016: fisubr dword ptr [ebx]; xchg ebp, eax; mov eax, 0x39fffffb; ret 0x840f; 
0x00131efd: fisubr dword ptr [ecx]; lds ebp, ptr [ecx]; ret 0x6c01; 
0x00131cc5: fisubr dword ptr [ecx]; ret 0x6c6; 
0x001461f6: fisubr dword ptr [ecx]; ret 0x6f8b; 
0x00159d7b: fisubr dword ptr [ecx]; ret 0xca39; 
0x00066a8d: fisubr dword ptr [ecx]; ret 0xfa83; 
0x001893de: fisubr word ptr [edx - 0xd]; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000bea83: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0012c12b: fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003bd0b: fld dword ptr [ebx + 0x1cd904ec]; and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003ba8b: fld dword ptr [ebx + 0x1cdd08ec]; and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x000a581e: fld dword ptr [ebx - 0x3b7cfe40]; or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x001a0d16: fld dword ptr [ecx]; retf 0xc801; call 0x182d19; add ebx, 0x34634; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f346: fld dword ptr [ecx]; retf 0xc801; call 0x182d19; add ebx, 0x35f00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003bbe3: fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003bd12: fld dword ptr [esp]; add esp, 4; ret; 
0x0003bc85: fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000684da: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x58f63], cl; call dword ptr [ecx + 0x50]; 
0x000fe964: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x001119d4: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011dc31: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00111bd9: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00111a2f: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010d3fe: fld qword ptr [ebx + 0xd772ffe]; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x0008f71a: fld qword ptr [ebx - 0x7a72f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x001a3adf: fld qword ptr [ecx]; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0010b15d: fld qword ptr [edx]; add byte ptr [ebp - 0x18], dl; ret; 
0x0003b8db: fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00054465: fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003ba92: fld qword ptr [esp]; add esp, 8; ret; 
0x0003bb50: fld st(0); test ah, 2; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0004ca03: fld st(4); push cs; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x00058fa1: fld xword ptr [ebp - 0x42740003]; mov eax, 0x8dffffc9; xchg dword ptr [eax - 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x000f12f1: fld xword ptr [ecx - 5]; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00042071: fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000910b2: fld xword ptr [esi]; lea esi, [esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00024d67: fld xword ptr [esi]; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0003b555: fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003b784: fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003b54a: fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000544df: fld xword ptr [esp]; add esp, 0x1c; ret; 
0x001af034: fld1; fdiv dword ptr [edx - 0x62dc4]; fstp st(0); leave; ret; 
0x00144616: fld1; les ecx, ptr [eax - 1]; jmp dword ptr [esi - 0x70]; 
0x00137273: fld1; mov al, byte ptr [0x810004ba]; ret; 
0x0014a67d: fld1; sbb eax, 0x89fffffb; mov byte ptr [ebx - 0x7af0fe08], 0x5b; or eax, dword ptr [eax]; add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x000a0e2d: fldcw word ptr [ecx]; ret 0xcd89; 
0x000c247e: fldcw word ptr [ecx]; ret; 
0x0011f624: fldenv [0x80000000]; pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x000d7d13: fldenv [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000bed86: fldenv [esi + 0xf]; je 0xbedda; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bf585: fldenv [esi + 0xf]; je 0xbf5d4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0019f73c: fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000bec8a: fldenv [esi + 0xf]; xlatb; ret; 
0x001a5399: fldenv [esi + 0xf]; xlatb; retf 0xf66; xlatb; ret; 
0x001479f3: fldl2t; ret 0xfffb; 
0x00124874: fldz; call dword ptr [eax - 0x73]; 
0x000adc2c: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x0018f7ba: fmul dword ptr [ebp + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001016b1: fmul dword ptr [ebp - 0x4376fea9]; and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x0009c0f0: fmul dword ptr [ebp - 0x666c379]; call dword ptr [eax - 0x73]; 
0x0013bd44: fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00024efc: fmul dword ptr [ebx + 0xa492]; add byte ptr [ebp - 0x77], ah; add bh, byte ptr [eax - 1]; ret; 
0x00121217: fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x00037d27: fmul dword ptr [ebx - 0x1cb63]; call dword ptr [esi + 0x50]; 
0x0010b741: fmul dword ptr [ebx - 0x7cfbdbac]; ret; 
0x0005d1ef: fmul dword ptr [ebx - 0x8b63]; call dword ptr [eax - 0x75]; 
0x0018e13d: fmul dword ptr [ebx - 1]; inc dword ptr [ecx + 0x4644fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00096123: fmul dword ptr [ecx + 0x5bc03107]; pop esi; pop edi; ret; 
0x00175fcb: fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x001abdb7: fmul dword ptr [ecx - 0x7c0c7606]; ret 0x8308; 
0x000dcf41: fmul dword ptr [ecx - 0x7cb3dba4]; ret; 
0x0002dd2b: fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0003d5c7: fmul dword ptr [edi]; dec eax; ret 0x66c3; 
0x000a5ec6: fmul dword ptr [edi]; inc ebp; ret 0xc483; 
0x0011bf6c: fmul dword ptr [edi]; inc edi; ret 0x548b; 
0x000a74cd: fmul dword ptr [edi]; inc edx; ret; 
0x00109647: fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x00131002: fmul dword ptr [edi]; xchg edx, eax; ret 0xd089; 
0x000a730f: fmul dword ptr [edi]; xchg edx, eax; ret; 
0x0012264c: fmul qword ptr [ebp - 0x17acff8a]; ret; 
0x00027849: fmul qword ptr [ebp - 0x210ff37d]; call dword ptr [eax - 0x73]; 
0x000f8f83: fmul qword ptr [ebx - 0x5cf0afaf]; ret 0xd473; 
0x0003d5ae: fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000fa4c0: fmul qword ptr [edx + esi*8 + 0x243489ff]; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x001af03d: fmul st(1); ret; 
0x00145d41: fmul st(7), st(0); add eax, dword ptr [eax]; add eax, 0xf10cf; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr gs:[eax]; ret; 
0x00077dd2: fnsave dword ptr [ebx + ecx*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0019f5f1: fnstcw word ptr [eax]; jne 0x19fd70; pop ebx; ret; 
0x001a2423: fnstcw word ptr [eax]; jne 0x1a2650; pop ebx; ret; 
0x000ac8d3: fnstcw word ptr [ecx]; ret 0xe372; 
0x000ab3d9: fnstcw word ptr [ecx]; ret 0xe672; 
0x000f9cc6: fnstcw word ptr [ecx]; ret; 
0x0003bada: fnstcw word ptr [edx + 0x13]; jne 0x3baf0; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003b44f: fnstcw word ptr [edx + 0xe]; jne 0x3b460; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003b7ce: fnstcw word ptr [edx + 0xf]; jne 0x3b7e0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x000fbe11: fnstcw word ptr [esi + edx*2]; ja 0xfbee0; mov ebx, dword ptr [esp]; movzx eax, al; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x00068ac7: fnstenv [ebp - 0x7d]; in al, dx; or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0007225e: fnstenv [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x00088303: fnstenv [edx]; or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0003b796: fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x00110a42: fnstsw word ptr [ecx - 1]; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000e5833: fpatan; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000705ef: fprem; inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0019f50c: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0003b788: fscale; fstp st(1); ret; 
0x00024f62: fst qword ptr [0x1eaf0500]; and dword ptr [eax], eax; lea eax, [eax - 0x680b4]; ret; 
0x00024f42: fst qword ptr [0x1ecf0500]; and dword ptr [eax], eax; lea eax, [eax - 0x680ac]; ret; 
0x000c3e4f: fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x0008b77e: fstp dword ptr [ebx + 0x5e]; mov eax, ecx; pop edi; pop ebp; ret; 
0x0019fd85: fstp dword ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19fd90; neg eax; ret; 
0x0003bd0f: fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0003bcc0: fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003ea31: fstp qword ptr [eax]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a5ea2: fstp qword ptr [ebx + 0x5e]; pop edi; ret; 
0x000a95c2: fstp qword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000d7ccd: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003ba8f: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x0003b798: fstp st(0); and eax, 0x200; ret; 
0x001af03c: fstp st(0); leave; ret; 
0x0003b78a: fstp st(1); ret; 
0x0003bd0a: fstp st(1); sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0003ba8a: fstp st(1); sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x0009ddb7: fstp xword ptr [eax + 0x2e]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000e8117: fstp xword ptr [eax + 0x56]; mov eax, 0x166; lea ecx, [ebp - 0x6c324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0003b741: fstp xword ptr [eax]; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0009de91: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009def4: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00081d81: fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x0003b799: fsub dword ptr [0x200]; ret; 
0x0006044f: fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; pop esi; pop edi; ret; 
0x0009d5a7: fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; pop esi; ret; 
0x0003c447: fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; ret; 
0x0012a897: fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; ret; 
0x000a0d49: fsub dword ptr [ecx]; ret 0xd589; 
0x000a02c9: fsub dword ptr [ecx]; ror byte ptr [ecx - 0x744a8b3d], 1; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x001ab7e3: fsub dword ptr [esi + 0xd]; add byte ptr [eax - 0x2f517], al; dec dword ptr [ebp + 0x7d8b0076]; mov al, 0x39; ret; 
0x0019f7dc: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b643c: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x0019c5c7: fsub st(1), st(0); ret; 
0x00136e19: fsub st(7), st(0); inc dword ptr [ebx - 0x72afef3c]; xchg byte ptr [esi + 0x66], bl; stc; call dword ptr [ebx + 0x50]; 
0x0003b6e7: fsubp st(1); add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000d7ccb: fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003b717: fsubp st(1); ret; 
0x001501a9: fsubr dword ptr [ebp - 7]; call dword ptr [ebx - 0x73]; 
0x0007a467: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x7a560; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007d18f: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x7d231; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00082806: fsubr qword ptr [edx]; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0005083a: fsubr st(0); mov al, byte ptr [0x8b000e86]; jl 0x50867; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x000ce4f3: fsubr st(0); out 0xa9, eax; push es; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0004cc3e: fsubr st(0); pushfd; ret 0xe; 
0x000fee28: fsubr st(0); ret 0xff98; 
0x00169426: fucomi st(0); mov ah, 0xfa; cld; jmp dword ptr [esi - 0x70]; 
0x0013ee28: fucomi st(0); ret 0xfca2; 
0x0013a84f: fucomi st(3); ret 0x8d2e; 
0x0010138e: fucomi st(3); ret 0xc901; 
0x00136f21: fucomi st(7); inc dword ptr [ebx - 0x7072ef3c]; mov ebp, 0x89fff955; ret 0x68b; 
0x000f65c9: fucomp st(3); call dword ptr [eax + 0x6a]; 
0x00146076: fucomp st(6); jmp dword ptr [esi - 0x70]; 
0x0003b794: fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x00191103: getsec; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00164d98: hlt; add ah, dh; call dword ptr [ebp + 0x6a]; 
0x000a4b8b: hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x6567f80], cl; call dword ptr [eax + 0x68]; 
0x00120278: hlt; add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x1202c8; call eax; 
0x0012039c: hlt; add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x120448; call eax; 
0x0004bafe: hlt; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x7de9; 
0x0004ae39: hlt; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0016483f: hlt; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00042dd0: hlt; add byte ptr [eax], al; add cl, dl; call 0x21060e5d; ret 0xb60f; 
0x0013fbd3: hlt; add dword ptr [ecx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00195a61: hlt; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195cbc: hlt; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0007fe7b: hlt; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013c58b: hlt; add esp, 8; pop ebx; ret; 
0x00181ee0: hlt; call dword ptr [eax - 0x18]; 
0x0017ff12: hlt; call dword ptr [eax - 0x73]; 
0x000e858e: hlt; call dword ptr [ebp + 0x31]; 
0x00164d9a: hlt; call dword ptr [ebp + 0x6a]; 
0x00174b70: hlt; call ecx; 
0x0014d64f: hlt; dec dword ptr [ebp - 0xe9c537d]; call dword ptr [esi + 0x50]; 
0x000ec89a: hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0014d1a1: hlt; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000dac84: hlt; inc dword ptr [ebx - 0x7c76ef3c]; push 0x8900003e; ret 0xc085; 
0x001a02e3: hlt; int1; call dword ptr [ebx - 0x18]; 
0x001a02e3: hlt; int1; call dword ptr [ebx - 0x18]; sub eax, 0x81fffe2a; ret; 
0x000e222d: hlt; jecxz 0xe222f; call dword ptr [ebx + 0x52]; 
0x000ea7dc: hlt; jmp dword ptr [esi - 0x70]; 
0x001a4f85: hlt; jne 0x1a4fc0; pop edi; pop esi; pop ebx; ret; 
0x0014c488: hlt; js 0x14c479; dec dword ptr [ebx - 0x72ebdba4]; sub dword ptr [eax - 0x40], -7; call dword ptr [eax - 0x73]; 
0x000d5978: hlt; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0018c5b7: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c06e: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013714b: hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0008ae2b: hlt; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x000e7190: hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0018f161: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191161: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x000a24c2: hlt; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x001784e8: hlt; or esp, edi; jmp dword ptr [esi - 0x70]; 
0x000558e8: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002597b: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001a30ea: hlt; pop edi; ret; 
0x00040940: hlt; pop es; add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0014d48b: hlt; ret; 
0x00084ea5: hlt; stc; jmp dword ptr [esi - 0x70]; 
0x001a2167: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001764e8: hlt; sub esp, edi; jmp dword ptr [esi - 0x70]; 
0x000c04e3: hlt; xor eax, eax; ret; 
0x00127385: idiv bh; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0012089a: idiv bh; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x001524a9: idiv bh; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x000c0adc: idiv bh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001563d8: idiv bh; add esp, 0x1c; ret; 
0x000d1c26: idiv bh; and ch, 2; lea edx, [edx - 0x15fe54]; cmove eax, edx; ret; 
0x000a64f6: idiv bh; and ch, 2; lea edx, [edx - 0x177374]; cmove eax, edx; ret; 
0x000a9c16: idiv bh; and ch, 2; lea edx, [edx - 0x177664]; cmove eax, edx; ret; 
0x000a9c56: idiv bh; and ch, 2; lea edx, [edx - 0x1776d4]; cmove eax, edx; ret; 
0x000a6f86: idiv bh; and ch, 2; lea edx, [edx - 0x177754]; cmove eax, edx; ret; 
0x000a6fc6: idiv bh; and ch, 2; lea edx, [edx - 0x1777d4]; cmove eax, edx; ret; 
0x000a9cd6: idiv bh; and ch, 2; lea edx, [edx - 0x189834]; cmove eax, edx; ret; 
0x0004f5c7: idiv bh; call dword ptr [eax + 0x6a]; 
0x000ca475: idiv bh; call dword ptr [edi + 0x6a]; 
0x000a64be: idiv bh; cmovne eax, edx; ret; 
0x000ce2ba: idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0004c94e: idiv bh; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x00176187: idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x00176746: idiv bh; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00123cc4: idiv bh; dec dword ptr [edi]; mov dh, 0x42; jnp 0x123c59; xchg ebx, eax; ret; 
0x000dd6d0: idiv bh; dec dword ptr [edi]; mov esi, 0x246c8903; add al, 0x83; ret; 
0x000b1c9c: idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b1c46: idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b13f2: idiv bh; jmp dword ptr [esi + 0xf]; 
0x0006abfb: idiv bh; jmp dword ptr [esi - 0x70]; 
0x00120ac3: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120593: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x001ad797: idiv bh; push esi; ret; 
0x000c33ca: idiv bh; test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000a8e9a: idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a9d9a: idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x0008e000: idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x0008db5b: idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x000963c7: idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ed8e: idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008dd99: idiv byte ptr [edx + 1]; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001854c1: idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x0008f585: idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084b98: idiv cl; jmp dword ptr [esi - 0x70]; 
0x000f65b6: idiv di; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1422c380]; call dword ptr [eax + 0x6a]; 
0x0002dd65: idiv dword ptr [ecx]; ret 0xc275; 
0x0003e859: idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00031d98: idiv edi; add ecx, ebx; jmp ecx; 
0x0002562b: idiv edi; add edi, ecx; jmp edi; 
0x000a4934: idiv edi; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a8ee4: idiv edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e4704: idiv edi; call dword ptr [eax + 0x55]; 
0x0018b1c7: idiv edi; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64ddb79]; call dword ptr [eax - 0x73]; 
0x000f7487: idiv edi; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64f4f79]; call dword ptr [eax - 0x73]; 
0x001892c7: idiv edi; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64f6779]; call dword ptr [eax - 0x73]; 
0x001875c7: idiv edi; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64f8779]; call dword ptr [eax - 0x73]; 
0x0018a2f7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x12718380]; call dword ptr [eax + 0x6a]; 
0x000f65b7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1422c380]; call dword ptr [eax + 0x6a]; 
0x001883f7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1430a380]; call dword ptr [eax + 0x6a]; 
0x000f2d37: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x145b4380]; call dword ptr [eax + 0x6a]; 
0x001866f7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14691380]; call dword ptr [eax + 0x6a]; 
0x000ef4b7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1493c380]; call dword ptr [eax + 0x6a]; 
0x0010e4b9: idiv edi; dec dword ptr [ebx - 0x74fbdbbc]; jl 0x10e4e7; add al, 0x89; fidivr word ptr [ecx]; ret; 
0x00033aa5: idiv edi; dec dword ptr [ecx - 0x2d7a3f88]; je 0x33ab9; mov dword ptr [esp + 4], eax; call edx; 
0x000ca3d5: idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0009be7b: idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x00146fa5: idiv edi; inc dword ptr [ebx - 0x7a72f714]; cmp ecx, edi; call dword ptr [eax - 0x73]; 
0x000b14fd: idiv edi; jmp dword ptr [esi + 0xf]; 
0x0005e18b: idiv edi; jmp dword ptr [esi - 0x70]; 
0x0019e760: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0019bf53: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x00111233: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00110fe3: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011c6dc: idiv edi; mov ecx, dword ptr [esp + 0x54]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0011c696: idiv edi; mov edx, dword ptr [esp + 0xc]; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000a48c9: idiv edi; pop ebx; pop esi; pop edi; ret; 
0x0010138a: idiv edi; push dword ptr [ecx]; fucomi st(3); ret 0xc901; 
0x0019e767: idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0019bf5a: idiv edi; sub eax, ecx; pop ebx; ret; 
0x001a00d9: idiv edi; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x00171ec3: idiv edi; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00171862: imul bl; mov esi, 0xfc7676e8; jmp dword ptr [esi - 0x70]; 
0x001a2187: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000ae368: imul byte ptr [ecx]; ret 0x280f; 
0x000afd5c: imul byte ptr [ecx]; ret 0xc301; 
0x00057929: imul byte ptr [ecx]; ret; 
0x000b1be2: imul cl; mov eax, 0x2efffff0; lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x001a2118: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000ae498: imul dword ptr [ecx]; ret 0x280f; 
0x000afebc: imul dword ptr [ecx]; ret 0xc301; 
0x0002351f: imul eax, dword ptr [0x2cc48300], 0x5d5f5e5b; ret; 
0x0018da42: imul eax, dword ptr [eax + eax], 3; sbb al, 0x8b; jmp ebx; 
0x0014d8f2: imul eax, dword ptr [ebx + ecx*4], 0x33; mov dword ptr [esp], ebx; mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x00146242: imul eax, dword ptr [ecx], -0x7d; ret; 
0x0007b2c9: imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x000a9939: imul eax, dword ptr [ecx], 0; add esp, 0x18; pop ebx; ret; 
0x0004c726: imul eax, dword ptr [ecx], 0x17ba0000; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x0009f4d3: imul eax, dword ptr [ecx], 0xec830000; add al, 0x8d; xchg esp, edi; push ecx; stc; call dword ptr [eax + 0x53]; 
0x000b6f93: imul eax, dword ptr [edi], 0x5e5f0000; pop ebx; ret; 
0x000e548a: imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x001a5c05: imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x000b6cc0: imul eax, eax, 0xc181000c; jl 0xb6cb8; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00040f2a: imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x001500b1: imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x00041015: imul eax, esi; add eax, edi; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00093071: imul ebp, dword ptr [eax + 0x4f8b0005], 0x68; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00123fad: imul ebp, dword ptr [esi], 0x8b530011; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0013c583: imul ebp, edi, 0xf883ffff; cmc; je 0x13c580; add esp, 8; pop ebx; ret; 
0x0013c5b5: imul ebp, esi, -1; add esp, 0x18; pop ebx; ret; 
0x000a45b7: imul ebx, dword ptr [eax], -0x77; jae 0xa45dc; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0017dee1: imul ebx, eax, -1; jmp dword ptr [esi - 0x70]; 
0x0009ebe1: imul ecx, dword ptr [eax], 0x830ce8c1; ret 0x8901; 
0x000be1be: imul ecx, dword ptr [ebx + 0xc], 0; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00082531: imul ecx, dword ptr [ebx], 0x30868d00; xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x000987bd: imul ecx, dword ptr [ecx + eax], 0x5b; pop esi; pop edi; ret; 
0x000baebe: imul edi, dword ptr [esi + 0xc], 0; add ecx, 0x10b0b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00147589: imul edi, ebx, -1; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x000f12f2: imul edi, ebx, 0x768dff; xor eax, eax; ret; 
0x0013e84d: imul edi, ecx, 0x348b8dff; test cl, bh; call dword ptr [eax - 0x77]; 
0x000a1e48: imul edi, ecx, 0x878dffff; call dword ptr [edx - 7]; 
0x0018c1e8: imul edi, edi, -1; add ebx, 0x47f25; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c12a: imul edi, edi, -1; add ebx, 0x47fe3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0011b6b4: imul edi, edi, -1; add esp, 0x1c; ret; 
0x0007add6: imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0011b690: imul edi, edi, 0x18c483ff; pop ebx; ret; 
0x00138822: imul esi, ebp, -1; and ebx, 1; lea edx, [edx - 0xa31c4]; cmovne eax, edx; pop ebx; ret; 
0x000a9d23: imul esp, edi, -1; cmove eax, edx; ret; 
0x000a8e69: imul esp, edi, -1; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1769d4]; cmove eax, edx; ret; 
0x001206a8: in al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011b071: in al, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00193b6e: in al, 0x10; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002fe9a: in al, 0x10; add byte ptr [eax], al; call 0x128960; add esp, 0x1c; ret; 
0x000b7874: in al, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0015d818: in al, 0x28; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x00096d74: in al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00038afb: in al, 0x39; ret; 
0x00168653: in al, 0x50; push esi; call 0x169f00; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0007ce76: in al, 0x56; call dword ptr [eax + 0x2c]; 
0x0007d38e: in al, 0x66; cli; jmp dword ptr [esi - 0x70]; 
0x0007af25: in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0005d198: in al, 0x6b; std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x6747f7d]; call dword ptr [eax - 0x73]; 
0x0016fe28: in al, 0x74; stc; call dword ptr [edi + 0x56]; 
0x00025d4f: in al, 0x7f; stc; call dword ptr [eax - 0x73]; 
0x00030e56: in al, 0x82; stc; call dword ptr [eax - 0x73]; 
0x001110c9: in al, 0x83; in al, dx; or al, 0x8d; xchg byte ptr [eax - 0x4e], ch; stc; call dword ptr [eax - 0x18]; 
0x0003fabf: in al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000ad301: in al, 0x83; ret 0x8301; 
0x00083f9b: in al, 0x85; sar byte ptr [eax + 0x30], 1; ret; 
0x0007a6b9: in al, 0x89; ret; 
0x0005d143: in al, 0x8a; stc; call dword ptr [eax - 0x18]; 
0x0016fa13: in al, 0x8b; pop ebp; adc al, 0x8d; xchg ebp, eax; je 0x16fa15; call dword ptr [eax + 0x53]; 
0x000779e1: in al, 0x8d; stc; call dword ptr [eax - 0x18]; 
0x000779e1: in al, 0x8d; stc; call dword ptr [eax - 0x18]; xchg ebp, eax; ret; 
0x0012f106: in al, 0x8d; xchg eax, edi; stc; call dword ptr [eax - 0x18]; 
0x0009b5ae: in al, 0x98; stc; call dword ptr [eax - 0x73]; 
0x000a03fe: in al, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x000a0500: in al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x00128e80: in al, 0xb4; stc; call dword ptr [eax - 0x18]; 
0x0012c522: in al, 0xb5; stc; call dword ptr [eax - 0x18]; 
0x001305d7: in al, 0xb6; stc; call dword ptr [eax - 0x18]; 
0x0014cb89: in al, 0xc0; stc; call dword ptr [eax - 0x73]; 
0x000855aa: in al, 0xe4; call dword ptr [eax - 0x73]; 
0x000855a0: in al, 0xe4; dec dword ptr [ecx - 0x72afebaa]; cmp dword ptr [esp], -0x1c; call dword ptr [eax - 0x73]; 
0x00129c90: in al, 0xf0; sub esp, 0xc; push esi; call edx; 
0x000c4219: in al, 0xf6; push esi; inc ecx; jnp 0xc4224; cmove eax, edx; ret; 
0x0007877f: in al, 0xf8; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0009597d: in al, 0xf9; call dword ptr [ebp + 0x57]; 
0x00085ed5: in al, 0xf9; jmp dword ptr [esi - 0x70]; 
0x001a3ab9: in al, 0xf; test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x001a3be4: in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x000e21d9: in al, 0xff; call dword ptr [esi + 0x51]; 
0x0008aef6: in al, 0xff; dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x000773a3: in al, 0xff; dec dword ptr [ebx - 0x5037b]; call dword ptr [ecx + 0x51]; 
0x000dec16: in al, 0xff; push esi; ret; 
0x00024ac2: in al, 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x000c0a68: in al, 1; add byte ptr [eax], al; ret; 
0x000985f8: in al, 8; or al, byte ptr [eax]; nop; nop; xor eax, eax; ret; 
0x00108d81: in al, dx; adc al, 0x6a; add byte ptr [edx], ch; call 0x108d50; add esp, 0x1c; ret; 
0x0017d26b: in al, dx; adc al, 0x6a; add cl, byte ptr [ebp - 0x6893b80]; call dword ptr [eax - 0x18]; 
0x0009c581: in al, dx; adc al, 0x6a; add edi, edi; je 0x9c5ac; sbb al, 0xe8; ret 0xfff0; 
0x0016694b: in al, dx; adc al, 0x8d; adc byte ptr [ebp + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x001662eb: in al, dx; adc al, 0x8d; add byte ptr [edi + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016769b: in al, dx; adc al, 0x8d; cmp byte ptr [esi + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016501b: in al, dx; adc al, 0x8d; xor bl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x001672eb: in al, dx; adc al, 0x8d; xor byte ptr [eax + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x0017d23b: in al, dx; adc al, 0xff; je 0x17d264; sbb byte ptr [ebp - 0x6893b80], cl; call dword ptr [eax - 0x18]; 
0x0003c099: in al, dx; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x00024f1b: in al, dx; adc byte ptr [eax - 0x25], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6889380], cl; call dword ptr [eax + 0x6a]; 
0x0002febd: in al, dx; adc byte ptr [ebp - 0x2071d37d], cl; call dword ptr [eax - 1]; 
0x000379ab: in al, dx; adc byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 0x75]; 
0x001686bd: in al, dx; adc byte ptr [ebp - 0xce8437d], cl; call dword ptr [eax - 0x73]; 
0x0015c9fd: in al, dx; adc byte ptr [ebp - 0xda4537d], cl; call dword ptr [eax - 0x73]; 
0x000873ee: in al, dx; add al, 0x29; ret 0x5052; 
0x000815cb: in al, dx; add al, 0x29; ret 0xfac1; 
0x0011aef6: in al, dx; add al, 0x29; ret; 
0x000eed72: in al, dx; add al, 0x29; ror byte ptr [ecx - 0x49f7b], 1; call dword ptr [eax + 0x6a]; 
0x00024dcc: in al, dx; add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008869d: in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00081ceb: in al, dx; add al, 0x50; push edx; push esi; call ecx; 
0x00127ea8: in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x00087d24: in al, dx; add al, 0x51; push eax; push esi; call edx; 
0x00088909: in al, dx; add al, 0x52; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0007ce71: in al, dx; add al, 0x53; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007ab52: in al, dx; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00077fb2: in al, dx; add al, 0x53; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x000861cd: in al, dx; add al, 0x55; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007c7af: in al, dx; add al, 0x56; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00085f8b: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0007e2f8: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024e81: in al, dx; add al, 0x56; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000860fb: in al, dx; add al, 0x56; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007bf41: in al, dx; add al, 0x56; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007e637: in al, dx; add al, 0x56; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00127e50: in al, dx; add al, 0x57; push 0; push ebx; call esi; 
0x00127e64: in al, dx; add al, 0x57; push 1; push ebx; call esi; 
0x00127e77: in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x0007e209: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007ae92: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007bec1: in al, dx; add al, 0x6a; adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x0008ac3a: in al, dx; add al, 0x6a; add byte ptr [edx], ch; push esi; call dword ptr [ebp + 0x2c]; 
0x0013e621: in al, dx; add al, 0x6a; add dword ptr [ebx - 0x72e7dbbc], ecx; sbb ah, 0x3c; stc; call dword ptr [eax + 0x55]; 
0x000ec88b: in al, dx; add al, 0x6a; add eax, 0x34818d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0005f7b9: in al, dx; add al, 0x6a; add eax, 0x34838d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00134f01: in al, dx; add al, 0x6a; add eax, 0x65f3978d; stc; call dword ptr [edx + 0x50]; 
0x001357e4: in al, dx; add al, 0x6a; add eax, 0x6629808d; stc; call dword ptr [eax - 0x75]; 
0x00134687: in al, dx; add al, 0x6a; add eax, 0x664a808d; stc; call dword ptr [eax - 0x75]; 
0x00136e03: in al, dx; add al, 0x6a; add eax, 0x7e4c868d; stc; call dword ptr [eax - 0x75]; 
0x00136f0b: in al, dx; add al, 0x6a; add eax, 0x7e4c878d; stc; call dword ptr [eax - 0x75]; 
0x001437a7: in al, dx; add al, 0x6a; add eax, 0x8d8134ff; xor byte ptr [esp + eax*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000ece35: in al, dx; add al, 0x6a; add eax, 0xaf70838d; stc; call dword ptr [eax - 0x73]; 
0x00134c3f: in al, dx; add al, 0x6a; add eax, 0xb844808d; stc; call dword ptr [eax - 0x75]; 
0x00135897: in al, dx; add al, 0x6a; add eax, 0xb87c808d; stc; call dword ptr [eax + 0x6a]; 
0x00107a6b: in al, dx; add al, 0x6a; add eax, 0xcc03848d; or bh, cl; call dword ptr [eax - 0x73]; 
0x00174e9e: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00174e9e: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0017689e: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x0009e841: in al, dx; add al, 0x80; int1; call dword ptr [edx + 0x51]; 
0x00136444: in al, dx; add al, 0x83; ret; 
0x001210c4: in al, dx; add al, 0x89; ret; 
0x0008c93e: in al, dx; add al, 0x8b; adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x0013ec47: in al, dx; add al, 0x8b; je 0x13ec70; adc byte ptr [ebp - 0x6bfb26a], cl; call dword ptr [edx - 0x46]; 
0x000d5948: in al, dx; add al, 0x8b; popfd; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x001893b8: in al, dx; add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0013a7ba: in al, dx; add al, 0x8d; mov ds, word ptr [edi]; push 0x868dfff9; sub ch, byte ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x00127273: in al, dx; add al, 0x8d; mov ecx, dword ptr [esi + edx]; stc; jmp dword ptr [ebp - 0x75]; 
0x0009fe70: in al, dx; add al, 0x8d; or dword ptr [eax + 0x52], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x0009fd94: in al, dx; add al, 0x8d; test dword ptr [eax + 0x52], ecx; stc; call dword ptr [eax + 0x53]; 
0x0013d5c1: in al, dx; add al, 0x8d; test dword ptr [eax + 0x6afff968], esp; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0013eb5a: in al, dx; add al, 0x8d; test dword ptr [ebp + 0x40], ecx; stc; call dword ptr [eax - 0x77]; 
0x000a5401: in al, dx; add al, 0x8d; test dword ptr [ebp + 0x6afff954], ecx; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00169099: in al, dx; add al, 0x8d; xchg byte ptr [edx + 0x6afff973], bh; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0009f4d8: in al, dx; add al, 0x8d; xchg esp, edi; push ecx; stc; call dword ptr [eax + 0x53]; 
0x0003bd0d: in al, dx; add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00040a79: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x5750; 
0x00040929: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x00041004: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x000408dc: in al, dx; add al, 0xff; je 0x40905; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00040991: in al, dx; add al, 0xff; je 0x409ba; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00040a09: in al, dx; add al, 0xff; je 0x40a32; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0007abac: in al, dx; add al, 0xff; je 0x7abd5; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007d0a7: in al, dx; add al, 0xff; jne 0x7d0c0; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0012044f: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x690aa7d], cl; call dword ptr [eax + 0x6a]; 
0x001202cf: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax + 0x6a]; 
0x00180330: in al, dx; add al, 0xff; xor edi, edi; push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00127868: in al, dx; add al, 1; fcom dword ptr [eax - 0x73]; xchg dl, ah; arpl cx, di; call dword ptr [eax + 0x57]; 
0x0016b1a6: in al, dx; add al, 1; ret 0xc129; 
0x0017f248: in al, dx; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ebx, esi; jbe 0x17f24b; call dword ptr [eax - 0x18]; 
0x000462d0: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d7e00: in al, dx; add byte ptr es:[eax], al; add esp, 0x1c; ret; 
0x00101f6e: in al, dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00109e72: in al, dx; add eax, dword ptr [eax]; add dh, dh; ret 0xf80; 
0x00135b27: in al, dx; add esp, 4; pop ebx; pop esi; ret; 
0x00150bb3: in al, dx; add esp, 8; pop ebx; ret; 
0x0016b5a3: in al, dx; call dword ptr [eax - 0x73]; 
0x0016aac6: in al, dx; call dword ptr [ebp + 0x50]; 
0x00164fc9: in al, dx; call dword ptr [edx + 0x52]; 
0x0016ab92: in al, dx; call dword ptr [esi - 0x17]; 
0x0017e441: in al, dx; cmp al, 0x89; ret 0x489; 
0x0016386f: in al, dx; cmp byte ptr [ebp - 0x68d8380], cl; jmp dword ptr [ebp - 0x75]; 
0x000c3adf: in al, dx; cmp byte ptr [ebp - 0x6c5dc48], cl; jmp dword ptr [ebp - 0x75]; 
0x0018faa6: in al, dx; dec esi; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00176745: in al, dx; idiv bh; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00033aa4: in al, dx; idiv edi; dec dword ptr [ecx - 0x2d7a3f88]; je 0x33ab9; mov dword ptr [esp + 4], eax; call edx; 
0x0018c129: in al, dx; imul edi, edi, -1; add ebx, 0x47fe3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00024ac1: in al, dx; in al, 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x0016f7c3: in al, dx; inc dword ptr [ebx - 0x72afef3c]; sbb eax, -0x39; stc; call dword ptr [eax - 0x73]; 
0x001748b9: in al, dx; inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [ecx + ebp*2], -7; call dword ptr [eax + 0x6a]; 
0x0017424c: in al, dx; inc dword ptr [ebx - 0x72aff33c]; xchg byte ptr [ecx + ebp*2], dl; stc; call dword ptr [eax + 0x6a]; 
0x0016f811: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00151404: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00026059: in al, dx; jg 0x26055; call dword ptr [edx - 0x73]; 
0x00026fae: in al, dx; jg 0x26faa; call dword ptr [eax - 0x73]; 
0x00155efb: in al, dx; jmp dword ptr [ebp - 0x77]; 
0x0009dc29: in al, dx; jne 0x9dc12; call dword ptr [eax - 0x73]; 
0x0016106a: in al, dx; jno 0x161066; call dword ptr [eax - 0x18]; 
0x001611de: in al, dx; jno 0x1611da; call dword ptr [eax - 0x73]; 
0x00028c7a: in al, dx; jnp 0x28c76; call dword ptr [eax - 0x73]; 
0x00028da2: in al, dx; jnp 0x28d9e; call dword ptr [eax - 0x73]; 
0x00028dc5: in al, dx; jnp 0x28dc1; call dword ptr [eax + 0x68]; 
0x00028de8: in al, dx; jnp 0x28de4; call dword ptr [eax + 0x68]; 
0x00028dfa: in al, dx; jnp 0x28df6; call dword ptr [eax - 0x73]; 
0x0002e00e: in al, dx; jns 0x2e00a; call dword ptr [eax - 0x73]; 
0x0002e031: in al, dx; jns 0x2e02d; call dword ptr [eax - 0x73]; 
0x0002e091: in al, dx; jns 0x2e08d; call dword ptr [eax - 0x73]; 
0x0002a62b: in al, dx; jp 0x2a627; call dword ptr [eax - 0x73]; 
0x0002a8bb: in al, dx; jp 0x2a8b7; call dword ptr [eax - 0x73]; 
0x0002a944: in al, dx; jp 0x2a940; call dword ptr [eax - 0x73]; 
0x0002a967: in al, dx; jp 0x2a963; call dword ptr [eax + 0x68]; 
0x0002a98a: in al, dx; jp 0x2a986; call dword ptr [eax + 0x68]; 
0x000d5b90: in al, dx; loope 0xd5b88; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x0010d42b: in al, dx; mov cl, 0xf9; call dword ptr [eax + 0x68]; 
0x0010d02e: in al, dx; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0011afd6: in al, dx; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x0018c3f2: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000f823b: in al, dx; mov eax, 0xffffffff; ret; 
0x00150533: in al, dx; mov ebx, dword ptr [esp + 0xc]; movzx eax, byte ptr [edi]; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x0018f6c3: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191663: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x001686d7: in al, dx; movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; pop ebx; ret; 
0x0006735a: in al, dx; or al, 0x29; ret; 
0x000e956f: in al, dx; or al, 0x31; call dword ptr [eax - 0x18]; 
0x0013e169: in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x0007a3e5: in al, dx; or al, 0x31; call dword ptr [ebp - 0x18]; 
0x00086857: in al, dx; or al, 0x31; call dword ptr [ebx - 0x18]; 
0x000e63aa: in al, dx; or al, 0x31; call dword ptr [esi - 0x18]; 
0x00137243: in al, dx; or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000964ed: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x0015d476: in al, dx; or al, 0x50; call 0x180100; mov dword ptr [esp], ebp; call edi; 
0x0015d665: in al, dx; or al, 0x50; call 0x180100; mov dword ptr [esp], ebp; call esi; 
0x00168981: in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00171ae1: in al, dx; or al, 0x50; call dword ptr [edx + 0x10]; 
0x000a48b3: in al, dx; or al, 0x50; call edx; 
0x00026198: in al, dx; or al, 0x51; call 0x180100; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00026842: in al, dx; or al, 0x52; call 0x180100; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x001547de: in al, dx; or al, 0x53; call 0x180100; add esp, 0x10; mov eax, ebx; call eax; 
0x0015d814: in al, dx; or al, 0x53; call 0x180100; mov dword ptr [esp], ebp; call ebx; 
0x0002f332: in al, dx; or al, 0x53; call 0x180100; mov dword ptr [esp], esi; call ebx; 
0x0016955c: in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0008688b: in al, dx; or al, 0x53; call dword ptr [edi + 0x44]; 
0x0007f610: in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x00085d34: in al, dx; or al, 0x53; call dword ptr [esi + 0x30]; 
0x001708a5: in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0016aa6f: in al, dx; or al, 0x55; call dword ptr [esi]; 
0x001708bc: in al, dx; or al, 0x55; call eax; 
0x0016f73f: in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00025e95: in al, dx; or al, 0x56; call 0x180100; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00026021: in al, dx; or al, 0x56; call 0x180100; mov dword ptr [esp], ebx; call esi; 
0x00168b13: in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00084976: in al, dx; or al, 0x56; call dword ptr [eax + 0x30]; 
0x00089cfc: in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0007a476: in al, dx; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0007d19e: in al, dx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x00184777: in al, dx; or al, 0x56; call dword ptr [ebx + 0x44]; 
0x00089952: in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x001848c0: in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x000a47e9: in al, dx; or al, 0x56; call eax; 
0x00129c93: in al, dx; or al, 0x56; call edx; 
0x00129c93: in al, dx; or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0016f3cc: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00026f70: in al, dx; or al, 0x57; call 0x180100; mov dword ptr [esp], ebx; call edi; 
0x00169a0c: in al, dx; or al, 0x57; call eax; 
0x001699e9: in al, dx; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x000a452d: in al, dx; or al, 0x6a; add eax, 0x547c838d; stc; call dword ptr [eax - 0x73]; 
0x0010541d: in al, dx; or al, 0x83; into; call dword ptr [edi - 0x18]; 
0x00081f17: in al, dx; or al, 0x83; ret 0x2b2c; 
0x0016e311: in al, dx; or al, 0x83; ret 0x5208; 
0x00036c20: in al, dx; or al, 0x83; ret; 
0x00066fe2: in al, dx; or al, 0x89; lea ebp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x00068101: in al, dx; or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x00068dd5: in al, dx; or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x00068c89: in al, dx; or al, 0x89; lea esp, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x00035352: in al, dx; or al, 0x89; push ebp; mov esp, 0x3e3f808d; stc; call dword ptr [eax - 0x18]; 
0x00109041: in al, dx; or al, 0x89; ret 0x438d; 
0x0008bac1: in al, dx; or al, 0x89; ret 0xe989; 
0x0006bc14: in al, dx; or al, 0x89; ret; 
0x0014bd34: in al, dx; or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x00168c5d: in al, dx; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x000e6bc1: in al, dx; or al, 0x8b; inc ebp; aam 0x56; call eax; 
0x00170df7: in al, dx; or al, 0x8b; inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0016907c: in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0017405a: in al, dx; or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x001727db: in al, dx; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0009a003: in al, dx; or al, 0x8b; jg 0x9a014; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000e5560: in al, dx; or al, 0x8b; jl 0xe5589; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000e68f7: in al, dx; or al, 0x8b; jne 0xe68d0; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000e6db7: in al, dx; or al, 0x8b; jne 0xe6d90; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x00168df6: in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00041221: in al, dx; or al, 0x8d; adc dword ptr [eax + ebx], 0; add byte ptr [eax - 0x18], dl; push ecx; ret; 
0x0007a29c: in al, dx; or al, 0x8d; adc dword ptr [eax - 6], -1; call dword ptr [eax - 0x73]; 
0x00145dbd: in al, dx; or al, 0x8d; adc dword ptr [ebx], 0x6b; stc; call dword ptr [eax - 0x18]; 
0x000399a6: in al, dx; or al, 0x8d; adc ecx, 0x3e; stc; call dword ptr [eax - 0x18]; 
0x0003e7b1: in al, dx; or al, 0x8d; add dword ptr [eax], -0x7a; stc; call dword ptr [eax - 0x18]; 
0x00108150: in al, dx; or al, 0x8d; add dword ptr [esi + 0x58], -7; call dword ptr [eax - 0x18]; 
0x000da855: in al, dx; or al, 0x8d; add dword ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x0017ec57: in al, dx; or al, 0x8d; add esp, -0x36; stc; call dword ptr [eax - 0x18]; 
0x001184f9: in al, dx; or al, 0x8d; and dword ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x00165803: in al, dx; or al, 0x8d; cmp dword ptr [ecx], 0x73; stc; call dword ptr [eax - 0x18]; 
0x0011ba99: in al, dx; or al, 0x8d; cmp eax, -0x4e; stc; call dword ptr [eax - 0x18]; 
0x000923bc: in al, dx; or al, 0x8d; cmp eax, -0x6c; stc; call dword ptr [eax - 0x18]; 
0x000671a2: in al, dx; or al, 0x8d; cmp esp, 0x42; stc; call dword ptr [eax - 0x18]; 
0x0015137c: in al, dx; or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x001824a6: in al, dx; or al, 0x8d; or byte ptr [edi + 0x77], 0xf9; call dword ptr [eax - 0x18]; 
0x00161219: in al, dx; or al, 0x8d; or dword ptr [eax - 0x5c], 0; add byte ptr [eax - 0x18], dl; pop ecx; ret; 
0x00082a6a: in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0005b6dc: in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00146666: in al, dx; or al, 0x8d; popfd; je 0x1466d7; stc; call dword ptr [ebx - 0x18]; 
0x00170157: in al, dx; or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x0003597d: in al, dx; or al, 0x8d; sbb byte ptr [ebx + 0x3e], 0xf9; call dword ptr [eax - 0x18]; 
0x0012142a: in al, dx; or al, 0x8d; sbb byte ptr [esp + esi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00085b8a: in al, dx; or al, 0x8d; sbb dword ptr [eax - 0x6d], -7; call dword ptr [eax - 0x18]; 
0x00151460: in al, dx; or al, 0x8d; sbb dword ptr [edi], 0x6e; stc; call dword ptr [eax - 0x73]; 
0x0010b801: in al, dx; or al, 0x8d; sbb esp, 0x3c; stc; call dword ptr [eax - 0x18]; 
0x000e7e11: in al, dx; or al, 0x8d; sub dword ptr [ecx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x000e8811: in al, dx; or al, 0x8d; sub ecx, 0x56; stc; call dword ptr [eax - 0x18]; 
0x00027f19: in al, dx; or al, 0x8d; test dword ptr [eax + 0x39], edi; stc; call dword ptr [edi - 1]; 
0x00068842: in al, dx; or al, 0x8d; test dword ptr [eax - 0x76000005], edi; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x00127941: in al, dx; or al, 0x8d; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x000250da: in al, dx; or al, 0x8d; test dword ptr [edi + edi*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x00163933: in al, dx; or al, 0x8d; test dword ptr [edx + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0008f0f2: in al, dx; or al, 0x8d; xchg ah, bl; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0011bd23: in al, dx; or al, 0x8d; xchg byte ptr [eax - 0x4d], ch; stc; call dword ptr [eax - 0x18]; 
0x001110cb: in al, dx; or al, 0x8d; xchg byte ptr [eax - 0x4e], ch; stc; call dword ptr [eax - 0x18]; 
0x0011bd83: in al, dx; or al, 0x8d; xchg byte ptr [ebx + esi*4 - 0x17af0007], ah; pop ds; ret; 
0x00024fe6: in al, dx; or al, 0x8d; xchg byte ptr [edi + edi*2 - 7], bl; call dword ptr [eax - 0x18]; 
0x0011f791: in al, dx; or al, 0x8d; xchg byte ptr [esi], ah; push esi; stc; call dword ptr [eax - 0x18]; 
0x00091079: in al, dx; or al, 0x8d; xchg dword ptr [eax], edi; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x00096f23: in al, dx; or al, 0x8d; xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; jmp edx; 
0x00098f29: in al, dx; or al, 0x8d; xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; stc; ret 0xfffe; 
0x000e82d1: in al, dx; or al, 0x8d; xchg ecx, ebp; push esi; stc; call dword ptr [eax - 0x18]; 
0x001523a1: in al, dx; or al, 0x8d; xor byte ptr [eax - 0x3d], 0xf9; call dword ptr [eax - 0x18]; 
0x0011bae9: in al, dx; or al, 0x8d; xor dword ptr [eax], 0xffffffb3; stc; call dword ptr [eax - 0x18]; 
0x0008f145: in al, dx; or al, 0xff; jae 0x8f14e; call dword ptr [ebx]; 
0x00096240: in al, dx; or al, 0xff; jae 0x96249; call dword ptr [ebx]; 
0x001469d3: in al, dx; or al, 0xff; je 0x1469fc; xor al, ch; ret 0xedc7; 
0x000243f9: in al, dx; or al, 0xff; jne 0x243ca; call dword ptr [ebp - 0x38]; 
0x000a9ed0: in al, dx; or al, 0xff; mov bh, 0x88; add al, 0; add al, ch; ret; 
0x00173950: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc33437d], cl; call dword ptr [eax - 0x73]; 
0x0016e200: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc8a637d], cl; call dword ptr [eax - 0x73]; 
0x001727c7: in al, dx; or bh, al; add dword ptr [esi], ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x0012d3c1: in al, dx; or bh, bh; je 0x12d37b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x001688d2: in al, dx; or bh, bh; je 0x1688fb; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000c91e2: in al, dx; or bh, bh; je 0xc920b; adc byte ptr [eax - 0x18], dl; ret 0x684; 
0x00120201: in al, dx; or byte ptr [eax - 0x73], dl; or dword ptr [ecx + edx*8], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000a4889: in al, dx; or byte ptr [eax - 1], dl; jae 0xa48b3; call edx; 
0x0013f5f3: in al, dx; or byte ptr [ebp + 0x48ac83], cl; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x00079d90: in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00086620: in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00086316: in al, dx; or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0008190d: in al, dx; or byte ptr [ebp + 0x50402444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00110c85: in al, dx; or byte ptr [ebp + 0x51], dl; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000f4cf9: in al, dx; or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000e4b4b: in al, dx; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000edbf9: in al, dx; or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x00171ec6: in al, dx; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x00087aba: in al, dx; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x00184d15: in al, dx; or byte ptr [ebp + 0x52382454], cl; push esi; call dword ptr [eax + 0x48]; 
0x000e49f1: in al, dx; or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x00168a04: in al, dx; or byte ptr [ebp + 0x5540246c], cl; push eax; call dword ptr [ecx + 8]; 
0x00089aba: in al, dx; or byte ptr [ebp + 0x5650015a], cl; call dword ptr [ebp + 0xc]; 
0x000f7abd: in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000f7928: in al, dx; or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x000f7961: in al, dx; or byte ptr [ebp - 0x15337b], cl; call dword ptr [eax + 0x52]; 
0x0009d311: in al, dx; or byte ptr [ebp - 0x199ce379], cl; call dword ptr [eax - 0x73]; 
0x000318b3: in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x00085a21: in al, dx; or byte ptr [ebp - 0x1b16c37d], cl; call dword ptr [eax - 0x73]; 
0x0008559b: in al, dx; or byte ptr [ebp - 0x1b1b437d], cl; dec dword ptr [ecx - 0x72afebaa]; cmp dword ptr [esp], -0x1c; call dword ptr [eax - 0x73]; 
0x0002708f: in al, dx; or byte ptr [ebp - 0x210fd36d], cl; call dword ptr [edx + 0x50]; 
0x000d3e01: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x35e34b]; dec dword ptr [ebx - 0x36576b]; call dword ptr [eax - 0x73]; 
0x000d3544: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x73]; 
0x00057ec6: in al, dx; or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x00148c0f: in al, dx; or byte ptr [ebp - 0x41c6b], cl; call dword ptr [edi + 0x52]; 
0x00127447: in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000ee701: in al, dx; or byte ptr [ebp - 0x59f7b], cl; call dword ptr [eax - 0x75]; 
0x000f5801: in al, dx; or byte ptr [ebp - 0x5ab7b], cl; call dword ptr [eax - 0x75]; 
0x0017d041: in al, dx; or byte ptr [ebp - 0x6354b45], cl; call dword ptr [edi + 0x56]; 
0x0012c56b: in al, dx; or byte ptr [ebp - 0x649bf79], cl; call dword ptr [eax + 0x55]; 
0x0012c586: in al, dx; or byte ptr [ebp - 0x649d779], cl; call dword ptr [eax + 0x55]; 
0x0012c5a4: in al, dx; or byte ptr [ebp - 0x649ef79], cl; call dword ptr [eax + 0x55]; 
0x00038231: in al, dx; or byte ptr [ebp - 0x67b0f6d], cl; call dword ptr [edx - 0x77]; 
0x000305d7: in al, dx; or byte ptr [ebp - 0x67bd379], cl; call dword ptr [eax + 0x56]; 
0x0003328a: in al, dx; or byte ptr [ebp - 0x67bd37b], cl; call dword ptr [eax + 0x56]; 
0x0017bf62: in al, dx; or byte ptr [ebp - 0x6894955], cl; call dword ptr [ebp + 0x56]; 
0x0017d668: in al, dx; or byte ptr [ebp - 0x689497d], cl; call dword ptr [ebp + 0x50]; 
0x0017bf47: in al, dx; or byte ptr [ebp - 0x6895745], cl; call dword ptr [edi + 0x56]; 
0x0017c783: in al, dx; or byte ptr [ebp - 0x689574d], cl; call dword ptr [esi + 0x57]; 
0x0017d142: in al, dx; or byte ptr [ebp - 0x689666a], cl; call dword ptr [edx - 0x77]; 
0x0017bf7d: in al, dx; or byte ptr [ebp - 0x689666d], cl; call dword ptr [edx - 0x77]; 
0x0017c7bd: in al, dx; or byte ptr [ebp - 0x6896675], cl; call dword ptr [ecx - 0x77]; 
0x0017bfa0: in al, dx; or byte ptr [ebp - 0x6897545], cl; call dword ptr [edi + 0x56]; 
0x0017d161: in al, dx; or byte ptr [ebp - 0x689754a], cl; call dword ptr [esi + 0x53]; 
0x0017c7e0: in al, dx; or byte ptr [ebp - 0x689754d], cl; call dword ptr [esi + 0x57]; 
0x0016c8cd: in al, dx; or byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax - 1]; 
0x00166f52: in al, dx; or byte ptr [ebp - 0x68d907d], cl; call dword ptr [eax + 0x55]; 
0x00165e73: in al, dx; or byte ptr [ebp - 0x68d9080], cl; call dword ptr [eax + 0x57]; 
0x0015d0b4: in al, dx; or byte ptr [ebp - 0x68f706f], cl; call dword ptr [edx + 0x50]; 
0x0015cbd1: in al, dx; or byte ptr [ebp - 0x68fac6d], cl; call dword ptr [edx + 0x50]; 
0x000f79f1: in al, dx; or byte ptr [ebp - 0x6903f68], cl; dec dword ptr [ebp - 0x6a81e80]; call dword ptr [ebx + 0x50]; 
0x00120721: in al, dx; or byte ptr [ebp - 0x6903f7d], cl; call dword ptr [eax - 0x73]; 
0x00151440: in al, dx; or byte ptr [ebp - 0x6923b7d], cl; call dword ptr [eax - 1]; 
0x00128b72: in al, dx; or byte ptr [ebp - 0x69c0a7d], cl; call dword ptr [eax + 0x56]; 
0x00122b37: in al, dx; or byte ptr [ebp - 0x69eaa7d], cl; call dword ptr [eax + 0x55]; 
0x00122ccc: in al, dx; or byte ptr [ebp - 0x6a1337d], cl; call dword ptr [eax + 0x55]; 
0x00122cb1: in al, dx; or byte ptr [ebp - 0x6a1657d], cl; call dword ptr [eax + 0x55]; 
0x00122c96: in al, dx; or byte ptr [ebp - 0x6a1997d], cl; call dword ptr [eax + 0x55]; 
0x00122c7b: in al, dx; or byte ptr [ebp - 0x6a1ce7d], cl; call dword ptr [eax + 0x55]; 
0x00122c60: in al, dx; or byte ptr [ebp - 0x6a2007d], cl; call dword ptr [eax + 0x55]; 
0x00122c45: in al, dx; or byte ptr [ebp - 0x6a24c7d], cl; call dword ptr [eax + 0x55]; 
0x00122c2a: in al, dx; or byte ptr [ebp - 0x6a2907d], cl; call dword ptr [eax + 0x55]; 
0x00122c0f: in al, dx; or byte ptr [ebp - 0x6a2c27d], cl; call dword ptr [eax + 0x55]; 
0x00122bf4: in al, dx; or byte ptr [ebp - 0x6a2f87d], cl; call dword ptr [eax + 0x55]; 
0x00122bd9: in al, dx; or byte ptr [ebp - 0x6a3397d], cl; call dword ptr [eax + 0x55]; 
0x00122bbe: in al, dx; or byte ptr [ebp - 0x6a36e7d], cl; call dword ptr [eax + 0x55]; 
0x00122ba3: in al, dx; or byte ptr [ebp - 0x6a3b57d], cl; call dword ptr [eax + 0x55]; 
0x00122b88: in al, dx; or byte ptr [ebp - 0x6a3ee7d], cl; call dword ptr [eax + 0x55]; 
0x00122b6d: in al, dx; or byte ptr [ebp - 0x6a4427d], cl; call dword ptr [eax + 0x55]; 
0x00122b52: in al, dx; or byte ptr [ebp - 0x6a4ac7d], cl; call dword ptr [eax + 0x55]; 
0x0012081f: in al, dx; or byte ptr [ebp - 0x6a56d6a], cl; call dword ptr [edx - 0x77]; 
0x00120800: in al, dx; or byte ptr [ebp - 0x6a5706a], cl; call dword ptr [edx - 0x77]; 
0x001207e1: in al, dx; or byte ptr [ebp - 0x6a5766a], cl; call dword ptr [edx - 0x77]; 
0x000fa964: in al, dx; or byte ptr [ebp - 0x6a7c77d], cl; call dword ptr [eax + 0x55]; 
0x000faca1: in al, dx; or byte ptr [ebp - 0x6a7ce7d], cl; call dword ptr [eax + 0x55]; 
0x000fab95: in al, dx; or byte ptr [ebp - 0x6a7d47d], cl; call dword ptr [eax + 0x55]; 
0x000faa70: in al, dx; or byte ptr [ebp - 0x6a7da7d], cl; call dword ptr [eax + 0x55]; 
0x000fa719: in al, dx; or byte ptr [ebp - 0x6a7e07d], cl; call dword ptr [eax + 0x55]; 
0x000fa7e0: in al, dx; or byte ptr [ebp - 0x6a7ec7d], cl; call dword ptr [eax + 0x55]; 
0x000fab39: in al, dx; or byte ptr [ebp - 0x6a7f27d], cl; call dword ptr [eax + 0x55]; 
0x000fa908: in al, dx; or byte ptr [ebp - 0x6a7f87d], cl; call dword ptr [eax + 0x55]; 
0x000f7aa6: in al, dx; or byte ptr [ebp - 0x6a7fd80], cl; call dword ptr [eax + 0x53]; 
0x000f7b03: in al, dx; or byte ptr [ebp - 0x6a7fd80], cl; call dword ptr [eax - 1]; 
0x000da771: in al, dx; or byte ptr [ebp - 0x6a9db7d], cl; call dword ptr [eax + 0x56]; 
0x000da281: in al, dx; or byte ptr [ebp - 0x6aa107d], cl; call dword ptr [eax + 0x56]; 
0x000a4466: in al, dx; or byte ptr [ebp - 0x6ab997a], cl; call dword ptr [ebx + 0x50]; 
0x0015249c: in al, dx; or byte ptr [ebp - 0x6abcf7f], cl; call dword ptr [eax + 0x52]; 
0x001577cf: in al, dx; or byte ptr [ebp - 0x6aec979], cl; call dword ptr [eax + 0x53]; 
0x000fa81e: in al, dx; or byte ptr [ebp - 0x6b0bf7d], cl; call dword ptr [eax + 0x55]; 
0x00060d3b: in al, dx; or byte ptr [ebp - 0x6bd527a], cl; call dword ptr [eax + 0x53]; 
0x00060c6d: in al, dx; or byte ptr [ebp - 0x6bf986d], cl; call dword ptr [esi + 0x52]; 
0x00039792: in al, dx; or byte ptr [ebp - 0x6c1407b], cl; call dword ptr [eax + 0x53]; 
0x00121682: in al, dx; or byte ptr [ebp - 0x6c1a67a], cl; call dword ptr [eax - 1]; 
0x001201b2: in al, dx; or byte ptr [ebp - 0x6c1a67d], cl; call dword ptr [eax + 0x6a]; 
0x0014743e: in al, dx; or byte ptr [ebp - 0x6c1a87b], cl; call dword ptr [eax + 0x52]; 
0x00147480: in al, dx; or byte ptr [ebp - 0x6c1a87b], cl; call dword ptr [eax + 0x53]; 
0x0002fd12: in al, dx; or byte ptr [ebp - 0x6c47b7d], cl; call dword ptr [eax - 1]; 
0x0002fcf4: in al, dx; or byte ptr [ebp - 0x6c4816d], cl; call dword ptr [edx + 0x50]; 
0x0013d519: in al, dx; or byte ptr [ebp - 0x6c6987b], cl; call dword ptr [eax + 0x53]; 
0x00146fa9: in al, dx; or byte ptr [ebp - 0x6c6987b], cl; call dword ptr [eax - 0x73]; 
0x000da7f4: in al, dx; or byte ptr [ebp - 0x6c6987d], cl; call dword ptr [eax + 0x56]; 
0x001221f9: in al, dx; or byte ptr [ebp - 0x6c6987d], cl; call dword ptr [eax - 0x73]; 
0x000d2d44: in al, dx; or byte ptr [ebp - 0x7d348], cl; call dword ptr [edi + 0x53]; 
0x000499e6: in al, dx; or byte ptr [ebp - 0x7d379], cl; call dword ptr [eax + 0x6a]; 
0x000d5fbb: in al, dx; or byte ptr [ebp - 0x7d37b], cl; call dword ptr [eax + 0x6a]; 
0x0013d057: in al, dx; or byte ptr [ebp - 0x7d37d], cl; call dword ptr [eax + 0x6a]; 
0x0016fa2c: in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0016fa89: in al, dx; or byte ptr [ebp - 0x8b7b], cl; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x0016fbf1: in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x0017a57e: in al, dx; or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x0017ad34: in al, dx; or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x00168752: in al, dx; or byte ptr [ebp - 0xc1eb379], cl; call dword ptr [eax - 0x73]; 
0x00172999: in al, dx; or byte ptr [ebp - 0xc45737d], cl; call dword ptr [eax - 0x73]; 
0x001708c5: in al, dx; or byte ptr [ebp - 0xc68037d], cl; call dword ptr [eax - 0x73]; 
0x0016df67: in al, dx; or byte ptr [ebp - 0xc92137d], cl; call dword ptr [eax - 0x73]; 
0x001368d0: in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x0016d846: in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0016a23a: in al, dx; or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x001282f3: in al, dx; or byte ptr [ebx + 0x33fffee3], al; push esi; call edi; 
0x0016ee41: in al, dx; or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00168a20: in al, dx; or byte ptr [ebx + 0x50552048], cl; call dword ptr [ecx + 8]; 
0x001688bc: in al, dx; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00170dc8: in al, dx; or byte ptr [ebx + 0x50572050], cl; call dword ptr [edx + 4]; 
0x0016eda1: in al, dx; or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x0017572b: in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0007fdb2: in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x00137325: in al, dx; or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0016ae47: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0016ae91: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00173341: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00173540: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x001688a1: in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0017037e: in al, dx; or byte ptr [ebx + 0x74ff5043], cl; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0016ed5c: in al, dx; or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x0016a2ec: in al, dx; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0016a330: in al, dx; or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0016a2bf: in al, dx; or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00072262: in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x0007615f: in al, dx; or byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ecx - 0x51f73]; dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x0006b239: in al, dx; or byte ptr [ebx - 0x58f63], cl; call dword ptr [edx + 0x50]; 
0x00069743: in al, dx; or byte ptr [ebx - 0x58f63], cl; call dword ptr [esi + 0x50]; 
0x000663b7: in al, dx; or byte ptr [ebx - 0x5ab4b], cl; call dword ptr [eax - 1]; 
0x000ce9bd: in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x00154678: in al, dx; or byte ptr [ebx - 0x72dfdbbc], cl; or dh, 0x6e; stc; call dword ptr [eax + 0x55]; 
0x000cf281: in al, dx; or byte ptr [ebx - 0x72dfdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0015cb21: in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax + 0x55]; 
0x000cb0f1: in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x00159737: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; add dl, 0x6f; stc; call dword ptr [eax - 1]; 
0x0018b4d6: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x5a; stc; call dword ptr [eax + 0x53]; 
0x0013e1ad: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x69; stc; call dword ptr [eax + 0x6a]; 
0x001577b4: in al, dx; or byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [ebx + 0x6f], edi; stc; call dword ptr [eax + 0x55]; 
0x001501a1: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; cwde; fsubr dword ptr [ebp - 7]; call dword ptr [ebx - 0x73]; 
0x0005913a: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax + 0x6a]; 
0x00157cd9: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [ebp + 0x6f], 0xf9; call dword ptr [eax + 0x55]; 
0x0015d459: in al, dx; or byte ptr [ebx - 0x72efdbac], cl; xchg edx, eax; push ebx; jo 0x15d45d; call dword ptr [edx + 0x50]; 
0x0015d4fd: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax - 1]; 
0x001665d4: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; sub byte ptr [edi + 0x72], 0xf9; call dword ptr [eax + 0x57]; 
0x00086ca9: in al, dx; or byte ptr [ebx - 0x72f3dba4], cl; add dword ptr [ecx], 0x4f; stc; call dword ptr [eax - 0x75]; 
0x00092755: in al, dx; or byte ptr [ebx - 0x72f3dba4], cl; and dword ptr [edi + 0x39], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00143204: in al, dx; or byte ptr [ebx - 0x72f7dbbc], cl; adc byte ptr [ecx + 0x6a], 0xf9; call dword ptr [eax + 0x53]; 
0x00173589: in al, dx; or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000f7c07: in al, dx; or byte ptr [ebx - 0x73], dl; sub dh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x00178e71: in al, dx; or byte ptr [ebx - 0x7ccbdbac], cl; ret 0x5204; 
0x000ed03c: in al, dx; or byte ptr [ebx - 0x7f72378b], cl; pop ecx; stc; call dword ptr [eax - 0x75]; 
0x0008b572: in al, dx; or byte ptr [ebx - 0xe7dbbc], cl; je 0x8b59f; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x00135fb5: in al, dx; or byte ptr [ebx - 1], dl; jae 0x135feb; call eax; 
0x0015463b: in al, dx; or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x6913a80], cl; call dword ptr [eax + 0x55]; 
0x001283b3: in al, dx; or byte ptr [ecx + 0x30ffd055], cl; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x001694a9: in al, dx; or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x00037ea4: in al, dx; or byte ptr [ecx - 0x1cf6b], cl; call dword ptr [eax - 1]; 
0x00068acb: in al, dx; or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0006ae69: in al, dx; or byte ptr [ecx - 0x58b73], cl; call dword ptr [eax - 1]; 
0x000697bd: in al, dx; or byte ptr [ecx - 0x5eb63], cl; call dword ptr [eax - 1]; 
0x00032e04: in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x0017ad80: in al, dx; or byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x000a4823: in al, dx; or byte ptr [ecx - 1], dl; jae 0xa484d; call eax; 
0x0003eb21: in al, dx; or byte ptr [ecx - 1], dl; je 0x3eb4b; dec esp; call eax; 
0x00039fd9: in al, dx; or byte ptr [ecx], al; ret 0x8952; 
0x00117a21: in al, dx; or byte ptr [ecx], al; ret; 
0x00037e22: in al, dx; or byte ptr [ecx], al; ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x00073de7: in al, dx; or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x000a5c98: in al, dx; or byte ptr [ecx], ch; ret 0x348d; 
0x00072eae: in al, dx; or byte ptr [ecx], ch; ror dword ptr [ecx - 0x50363], cl; dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x0017f864: in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x0017f8eb: in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x00080fe3: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008750b: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0016a8ea: in al, dx; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003e646: in al, dx; or byte ptr [edx], ch; push edx; call eax; 
0x00079f09: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x0008a1c5: in al, dx; or byte ptr [esi + 0x53], dl; call dword ptr [edi + 0x18]; 
0x000e4b15: in al, dx; or byte ptr [esi + 0x53], dl; call eax; 
0x00140e9d: in al, dx; or byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x000a4730: in al, dx; or byte ptr [esi - 1], dl; jae 0xa475a; call eax; 
0x0003ba8d: in al, dx; or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x0016326f: in al, dx; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0016c573: in al, dx; pop ebx; ret; 
0x00030ed0: in al, dx; pop ss; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x000a9f98: in al, dx; pushfd; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000f4330: in al, dx; ret; 
0x0017a3d2: in al, dx; rol byte ptr [eax], 0; add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x000b6b3d: in al, dx; ror dword ptr [eax + eax], 0x81; sar dword ptr [edi - 0xf], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0014bb6e: in al, dx; sbb al, 0x8b; push edx; or byte ptr [ecx], bh; ret 0x460f; 
0x00121e60: in al, dx; sbb al, 0x8b; xchg byte ptr [eax - 0x7affffbb], dl; ror byte ptr [edi], 0x84; ret; 
0x00092f8e: in al, dx; sbb al, byte ptr [eax]; add byte ptr [ebp + 0xc], dh; xor eax, eax; pop ebx; ret; 
0x0009a873: in al, dx; sbb bh, bh; je 0x9a89c; sbb al, 0xe8; add bh, byte ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x00085ce9: in al, dx; sbb byte ptr [eax - 0x18], dl; fistp qword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009a08d: in al, dx; sbb byte ptr [ebp - 0x667d780], cl; call dword ptr [eax - 0x18]; 
0x0003d5dd: in al, dx; sbb byte ptr [ebp - 0x67a5b80], cl; call dword ptr [eax - 0x18]; 
0x00138eed: in al, dx; sbb byte ptr [ebp - 0x6985c80], cl; call dword ptr [eax - 0x18]; 
0x00137aed: in al, dx; sbb byte ptr [ebp - 0x6988d80], cl; call dword ptr [eax - 0x18]; 
0x001444d0: in al, dx; sbb byte ptr [ebx - 0x74d3dba4], cl; jl 0x1444fd; xor byte ptr [ebx - 0x18], dl; inc eax; ret 0xfff7; 
0x0007de71: in al, dx; sbb byte ptr [ecx - 0x18], dl; ja 0x7de92; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00167941: in al, dx; sbb byte ptr [edx + 0xa], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00163ca1: in al, dx; sbb byte ptr [edx + 1], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00163fa1: in al, dx; sbb byte ptr [edx + 2], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00165031: in al, dx; sbb byte ptr [edx + 3], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00166301: in al, dx; sbb byte ptr [edx + 4], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00166961: in al, dx; sbb byte ptr [edx + 5], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00166cb1: in al, dx; sbb byte ptr [edx + 6], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00167ea1: in al, dx; sbb byte ptr [edx + 7], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00167301: in al, dx; sbb byte ptr [edx + 8], ch; call 0x150e60; add esp, 0x1c; ret; 
0x001676b1: in al, dx; sbb byte ptr [edx + 9], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00163851: in al, dx; sbb byte ptr [edx], ch; call 0x150e60; add esp, 0x1c; ret; 
0x0003ccb1: in al, dx; sbb byte ptr [edx], ch; call 0x3c5a0; add esp, 0x1c; ret; 
0x0016934f: in al, dx; sub al, 0x8d; test al, 0xbc; and al, 0xf3; jmp dword ptr [ebp - 0x75]; 
0x00167ebf: in al, dx; sub byte ptr [ebp - 0x68c6880], cl; jmp dword ptr [ebp - 0x75]; 
0x0016795f: in al, dx; sub byte ptr [ebp - 0x68c7480], cl; jmp dword ptr [ebp - 0x75]; 
0x001676cf: in al, dx; sub byte ptr [ebp - 0x68c8180], cl; jmp dword ptr [ebp - 0x75]; 
0x0016731f: in al, dx; sub byte ptr [ebp - 0x68c8f80], cl; jmp dword ptr [ebp - 0x75]; 
0x00166ccf: in al, dx; sub byte ptr [ebp - 0x68c9b80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016697f: in al, dx; sub byte ptr [ebp - 0x68caa80], cl; jmp dword ptr [ebp - 0x75]; 
0x00163fbf: in al, dx; sub byte ptr [ebp - 0x68d6a80], cl; jmp dword ptr [ebp - 0x75]; 
0x00163cbf: in al, dx; sub byte ptr [ebp - 0x68d7680], cl; jmp dword ptr [ebp - 0x75]; 
0x0003e47e: in al, dx; test ecx, edi; call dword ptr [edx - 0x73]; 
0x000a9dc8: in al, dx; wait; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x00025629: in al, dx; xchg ecx, eax; idiv edi; add edi, ecx; jmp edi; 
0x00130518: in al, dx; xchg ecx, eax; out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x000a8e92: in al, dx; xchg esi, eax; call 0x6c8b1c98; lcall 0x1076, 0x41f6fff6; cmove eax, edx; ret; 
0x001226d3: in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a4847: in eax, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x0004250a: in eax, 0x2e; lea esi, [esi]; xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x00176527: in eax, 0x4f; lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000a951a: in eax, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000fc8b7: in eax, 0x68; inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x0017e9c4: in eax, 0x76; stc; call dword ptr [eax - 0x18]; 
0x0008a91a: in eax, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017384a: in eax, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0009f019: in eax, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000b1126: in eax, 0x83; ret; 
0x000c41f2: in eax, 0x89; fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000c3412: in eax, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00039f8a: in eax, 0x89; int 0x80; 
0x0018159a: in eax, 0x89; ret; 
0x000c62bd: in eax, 0x89; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x001a5bd6: in eax, 0x8b; inc ebp; or byte ptr [ebp - 0x77], bl; ret 0xead1; 
0x0010b473: in eax, 0x8d; add dword ptr [edx + esi*4], -7; call dword ptr [eax - 0x73]; 
0x0017ddf7: in eax, 0xb0; sti; jmp dword ptr [esi - 0x70]; 
0x00174c5b: in eax, 0xea; dec dword ptr [ecx - 0x763e7606]; ret; 
0x001727a3: in eax, 0xf3; dec dword ptr [ebp - 0xcdb434a]; call dword ptr [ebp - 0x73]; 
0x000d6eb3: in eax, 0xf; je 0xd6ed0; add eax, 2; ret; 
0x0016a336: in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0013e316: in eax, 0xfe; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [edi + ebx*8 - 0x77]; ret; 
0x000fc576: in eax, 0xff; add esi, dword ptr [eax + esi - 0xa]; ret 0x7404; 
0x000d4a5e: in eax, 0xff; dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x00057d47: in eax, 0xff; dec dword ptr [ecx - 0x362f6b]; call dword ptr [eax - 0x75]; 
0x000d35f4: in eax, 0xff; dec dword ptr [ecx - 0x36734b]; dec dword ptr [ebx - 0x364f4b]; call dword ptr [ebx - 0x73]; 
0x001394f2: in eax, 0xff; jmp dword ptr [esi - 0x70]; 
0x000d1c29: in eax, 2; lea edx, [edx - 0x15fe54]; cmove eax, edx; ret; 
0x000a7cb9: in eax, 2; lea edx, [edx - 0x176944]; cmove eax, edx; ret; 
0x000a64f9: in eax, 2; lea edx, [edx - 0x177374]; cmove eax, edx; ret; 
0x000a9c19: in eax, 2; lea edx, [edx - 0x177664]; cmove eax, edx; ret; 
0x000a9c59: in eax, 2; lea edx, [edx - 0x1776d4]; cmove eax, edx; ret; 
0x000a6f89: in eax, 2; lea edx, [edx - 0x177754]; cmove eax, edx; ret; 
0x000a6fc9: in eax, 2; lea edx, [edx - 0x1777d4]; cmove eax, edx; ret; 
0x000a9cd9: in eax, 2; lea edx, [edx - 0x189834]; cmove eax, edx; ret; 
0x00196c75: in eax, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a03c2: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0019ef3b: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x000e34c0: in eax, dx; add al, 0x83; ret 0x930; 
0x001ab4c6: in eax, dx; add dword ptr [eax], eax; add byte ptr [ebx - 0x8b73], al; call dword ptr [eax]; 
0x0006e0b8: in eax, dx; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x000bf257: in eax, dx; add eax, ecx; pop edi; ret; 
0x00129c8e: in eax, dx; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00110b0f: in eax, dx; call dword ptr [eax + 0x56]; 
0x0018a30a: in eax, dx; call dword ptr [eax + 0x6a]; 
0x0009e3aa: in eax, dx; clc; jmp dword ptr [ebp - 1]; 
0x001489b7: in eax, dx; dec dword ptr [ebx + 0xf1c244c]; mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x001488b2: in eax, dx; dec dword ptr [ebx + 0xf1c244c]; mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x0014cda3: in eax, dx; dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x00164fc8: in eax, dx; in al, dx; call dword ptr [edx + 0x52]; 
0x0014d89b: in eax, dx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000a11ef: in eax, dx; jl 0xa11fb; add byte ptr [ebp - 0x656ff7d], cl; call dword ptr [eax - 0x73]; 
0x0014cfcc: in eax, dx; jmp dword ptr [ebp - 0x77]; 
0x000a47f4: in eax, dx; jne 0xa4745; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x000a9402: in eax, dx; mov eax, edx; pop ebx; pop esi; ret; 
0x000a9562: in eax, dx; mov eax, edx; pop ebx; ret; 
0x0018c3c2: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000aab87: in eax, dx; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x0019f037: in eax, dx; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000f86d2: in eax, dx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000ec552: in eax, dx; stc; inc dword ptr [ebx - 0x17a8f314]; ret 0x644; 
0x00094ffb: in eax, dx; stc; jmp dword ptr [esi - 0x70]; 
0x0016610f: in eax, dx; sub eax, 0x558bfffd; mov eax, 0x8910c483; ret; 
0x0012a59f: in eax, dx; xor bh, bh; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00150a8f: in eax, dx; xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x0012a0cd: inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d4994: inc byte ptr [ebx - 0x36477b]; jmp eax; 
0x000430f0: inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x0012e527: inc byte ptr [edi + 5]; add byte ptr [ecx + 0x1088e9c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0013cfc8: inc dword ptr [eax + 0x7500027a]; push es; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x000b1c9e: inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b1c48: inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001368c7: inc dword ptr [eax + 0xf]; test byte ptr [ecx - 0x7cfffffe], dh; in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x000d1c27: inc dword ptr [eax - 0x6d72fd1b]; lodsb al, byte ptr [esi]; add edx, ebp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a6f87: inc dword ptr [eax - 0x6d72fd1b]; lodsb al, byte ptr [esi]; mov al, ch; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a7cb7: inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe896; inc esp; ret 0x66c3; 
0x000a64f7: inc dword ptr [eax - 0x6d72fd1b]; mov word ptr [eax + ebp*8 - 0x3dbbf001], cs; ret; 
0x000a9c17: inc dword ptr [eax - 0x6d72fd1b]; pushfd; mov eax, ebp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a6fc7: inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x88; call 0xc24e7fd3; ret; 
0x000a9c57: inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x89; call 0xc24eac63; ret; 
0x00055de2: inc dword ptr [eax - 0x7af09a07]; push eax; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0005b833: inc dword ptr [eax - 0x7bf09a07]; push ebx; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x0005cada: inc dword ptr [eax - 0xcb43]; jmp dword ptr [edi + 0xf]; 
0x0012bda3: inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7dcf: inc dword ptr [eax]; add byte ptr [eax], al; cmp edx, 0x9123683e; jne 0xf7e40; ret; 
0x001a326c: inc dword ptr [eax]; add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0003b607: inc dword ptr [eax]; add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed7731; or eax, ecx; ret; 
0x0019d82c: inc dword ptr [eax]; add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00199228: inc dword ptr [eax]; add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0009e633: inc dword ptr [eax]; add byte ptr [esi + 8], dh; ret; 
0x000fa429: inc dword ptr [eax]; clc; jmp dword ptr [esi + 0xb]; 
0x00106776: inc dword ptr [eax]; cld; dec dword ptr [ecx]; retf 0x5489; ret; 
0x000bf8ef: inc dword ptr [eax]; je 0xbf8f4; inc eax; pop edi; ret; 
0x000bfa93: inc dword ptr [eax]; je 0xbfa98; inc eax; pop edi; pop esi; ret; 
0x0013d127: inc dword ptr [eax]; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0013d10b: inc dword ptr [eax]; ret; 
0x00069711: inc dword ptr [ebp + 0x27840fdb]; and eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x850f; 
0x000b140c: inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ebc20: inc dword ptr [ebp + 0x312074c9]; fisttp dword ptr [ecx - 0x7cf81432]; ret; 
0x000b13ec: inc dword ptr [ebp + 0x4b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00057a99: inc dword ptr [ebp + 0x6d850ff6]; add al, 0; add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x000b142c: inc dword ptr [ebp + 0xb850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000684f4: inc dword ptr [ebp + 0xfc389c0]; test byte ptr [eax], cl; xor al, byte ptr [eax]; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x0006b299: inc dword ptr [ebp - 0x327bf040]; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e76b], cl; dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x00073c87: inc dword ptr [ebp - 0x357bf040]; add al, byte ptr [eax]; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00059d24: inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x59cb9; ret 0x40c7; 
0x00175a81: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; ret; 
0x00107f52: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0x2c; movzx eax, al; ret; 
0x0005278a: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0xc; movzx eax, al; ret; 
0x00076479: inc dword ptr [ebp - 0x47bf040]; or eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x0017eb3e: inc dword ptr [ebp - 0x567af040]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016fb1e: inc dword ptr [ebp - 0x667af040]; add byte ptr [eax], al; add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00181596: inc dword ptr [ebp - 0x761a8b40]; ret; 
0x0013afaa: inc dword ptr [ebp - 0x76928740]; ret; 
0x001a9ae8: inc dword ptr [ebp - 0x7b7af02e]; add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0005f7b3: inc dword ptr [ebp - 0x7cb78b40]; in al, dx; add al, 0x6a; add eax, 0x34838d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0005fc21: inc dword ptr [ebp - 0x7cc68b40]; in al, dx; add al, 0x6a; add eax, 0x34838d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00122251: inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x000d36be: inc dword ptr [ebx + 0x2ba03fe]; add byte ptr [eax], al; add byte ptr [ebx - 0x365773], cl; dec dword ptr [ecx - 0x36737b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x001259de: inc dword ptr [ebx + 0x2c7602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000acc69: inc dword ptr [ebx + 0x440ffff8]; ret; 
0x000e62cc: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009250a: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0017377a: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x00027843: inc dword ptr [ebx + 0x45890cc4]; fmul qword ptr [ebp - 0x210ff37d]; call dword ptr [eax - 0x73]; 
0x0009b028: inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x00106b25: inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x0016aa54: inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x16aa6b; push edi; call dword ptr [eax + 8]; 
0x000d5712: inc dword ptr [ebx + 0x48d04ec]; mov ch, 4; add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x0013c7e9: inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x0011ec9d: inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x001387c6: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x00139966: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x0018b9dc: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0009097e: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x000966ae: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b0e: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x0009703a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x0009748a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x00128f7d: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0018568a: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x000d7bef: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000e2323: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47a3: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x00145fb4: inc dword ptr [ebx + 0x548b20c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x00171ec4: inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0005e8ce: inc dword ptr [ebx + 0x57530cc4]; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001843b5: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000a9645: inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x0005af9f: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0006016d: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0017ea9c: inc dword ptr [ebx + 0x5e5b14c4]; pop edi; pop ebp; ret; 
0x0002fc71: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001758dd: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; jmp eax; 
0x00025d1f: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00138a52: inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x00025eee: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001448c8: inc dword ptr [ebx + 0x5e5b38c4]; pop edi; pop ebp; ret; 
0x00163730: inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x00127cd6: inc dword ptr [ebx + 0x658d10c4]; clc; pop ebx; pop esi; pop ebp; ret; 
0x0006e4b0: inc dword ptr [ebx + 0x6a5004ec]; and byte ptr [edi - 0x18], dl; ret; 
0x00040a07: inc dword ptr [ebx + 0x74ff04ec]; and al, 8; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000ece7a: inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x0010d5dd: inc dword ptr [ebx + 0xd772ffe]; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x0016f1cd: inc dword ptr [ebx - 0x137cef3c]; or al, 0x31; call dword ptr [esi - 0x18]; 
0x00146661: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; popfd; je 0x1466d7; stc; call dword ptr [ebx - 0x18]; 
0x0017d663: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x689497d], cl; call dword ptr [ebp + 0x50]; 
0x0016a2e7: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00092348: inc dword ptr [ebx - 0x1614ef3c]; nop; mov eax, 3; add esp, 0xc; ret; 
0x000cfe5b: inc dword ptr [ebx - 0x173cd33c]; mov eax, 0x81000b2e; ret 0x6faf; 
0x00072a63: inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x000ec554: inc dword ptr [ebx - 0x17a8f314]; ret 0x644; 
0x00173ed4: inc dword ptr [ebx - 0x17aaeb3c]; ret 0xeaf2; 
0x000a4ba4: inc dword ptr [ebx - 0x17aceb3c]; add byte ptr [esi], 0xfe; jmp dword ptr [esi - 0x70]; 
0x00081222: inc dword ptr [ebx - 0x17adf314]; push esp; ret; 
0x0016374b: inc dword ptr [ebx - 0x17aef314]; jnp 0x1637b2; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd4e9; 
0x001711d4: inc dword ptr [ebx - 0x17aef314]; ret 0xfcb3; 
0x000a5e9d: inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x00182e8a: inc dword ptr [ebx - 0x247aef3c]; jne 0x182ea0; add esp, 8; pop ebx; ret; 
0x00025342: inc dword ptr [ebx - 0x2708ef3c]; pop ebx; adc edx, 0; neg edx; ret; 
0x0013d445: inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0014d1a2: inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00024893: inc dword ptr [ebx - 0x2816ef3c]; test al, 0x11; add byte ptr [ebp - 0x699f27d], cl; call dword ptr [edi + 0x57]; 
0x000d78a9: inc dword ptr [ebx - 0x287cfe3a]; add byte ptr [ecx], bh; ret; 
0x00057a2d: inc dword ptr [ebx - 0x2c7c003f]; call dword ptr [ebx + 0x51]; 
0x000d428a: inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00176704: inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0010a2c9: inc dword ptr [ebx - 0x357c0035]; dec dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00055ab9: inc dword ptr [ebx - 0x362743]; call dword ptr [eax]; 
0x00057945: inc dword ptr [ebx - 0x362743]; call dword ptr [ecx + 0xf]; 
0x00057b1f: inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000d2ec4: inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0008a235: inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0009f6a0: inc dword ptr [ebx - 0x3b7cef3c]; adc al, 0x5b; pop esi; ret; 
0x00038cc1: inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00124e3f: inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0008b5ce: inc dword ptr [ebx - 0x3b7cf7f2]; adc al, 0x5b; pop esi; ret; 
0x0010a2cc: inc dword ptr [ebx - 0x3e760036]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0013865b: inc dword ptr [ebx - 0x3f7aef3c]; je 0x138670; add esp, 8; pop ebx; ret; 
0x0015cbdf: inc dword ptr [ebx - 0x3f7aef3c]; je 0x15cbf0; sub esp, 0xc; push esi; call eax; 
0x0015cf3f: inc dword ptr [ebx - 0x3f7aef3c]; je 0x15cf50; sub esp, 0xc; push esi; call eax; 
0x000418e1: inc dword ptr [ebx - 0x3f7aef3c]; je 0x418f0; add esp, 8; pop ebx; ret; 
0x00124883: inc dword ptr [ebx - 0x3f7aef3c]; jne 0x124848; add esp, 0xc; ret; 
0x000f780f: inc dword ptr [ebx - 0x3f7aef3c]; jne 0xf7820; add esp, 8; pop ebx; ret; 
0x001524aa: inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x000a6060: inc dword ptr [ebx - 0x3f7af33c]; jne 0xa6073; ret; 
0x0008e219: inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x000852f3: inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00039baa: inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000fc8ba: inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x001088b8: inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x000fc8a7: inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x0009be7d: inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x00073642: inc dword ptr [ebx - 0x4ef43]; call dword ptr [eax]; 
0x00076bc4: inc dword ptr [ebx - 0x51b73]; inc dword ptr [ecx + ecx*4]; ret; 
0x000c69be: inc dword ptr [ebx - 0x5bf0002e]; ret 0xc102; 
0x00056b44: inc dword ptr [ebx - 0x5bf0ff26]; ret 0xc102; 
0x000d5946: inc dword ptr [ebx - 0x6274fb14]; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x00099049: inc dword ptr [ebx - 0x69f00208]; ret; 
0x0012a5a2: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012a561: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00117f19: inc dword ptr [ebx - 0x6bf0fc02]; ret 0xfce9; 
0x000d4a66: inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x00138824: inc dword ptr [ebx - 0x6d72fe1d]; cmp al, 0xce; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00138874: inc dword ptr [ebx - 0x6d72fe1d]; or al, 0xee; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001388c4: inc dword ptr [ebx - 0x6d72fe1d]; sbb al, 0xde; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a6d74: inc dword ptr [ebx - 0x6d72fe1d]; sbb al, 0xee; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a6dc4: inc dword ptr [ebx - 0x6d72fe1d]; sub al, 0xde; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00136f23: inc dword ptr [ebx - 0x7072ef3c]; mov ebp, 0x89fff955; ret 0x68b; 
0x0006e477: inc dword ptr [ebx - 0x71f0fa05]; ret 0xfff2; 
0x000d34a7: inc dword ptr [ebx - 0x7274f314]; ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x000f7c05: inc dword ptr [ebx - 0x72acf714]; sub dh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0016f7c4: inc dword ptr [ebx - 0x72afef3c]; sbb eax, -0x39; stc; call dword ptr [eax - 0x73]; 
0x00136e1b: inc dword ptr [ebx - 0x72afef3c]; xchg byte ptr [esi + 0x66], bl; stc; call dword ptr [ebx + 0x50]; 
0x0008be10: inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x0008bd9f: inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x000a4543: inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [ecx + ebp*2], -7; call dword ptr [eax + 0x6a]; 
0x00134488: inc dword ptr [ebx - 0x72aff33c]; or dword ptr [ebx], 0x66; stc; call dword ptr [eax + 0x56]; 
0x00120131: inc dword ptr [ebx - 0x72aff33c]; or dword ptr [ebx], 0x66; stc; call dword ptr [eax + 0x6a]; 
0x0017424d: inc dword ptr [ebx - 0x72aff33c]; xchg byte ptr [ecx + ebp*2], dl; stc; call dword ptr [eax + 0x6a]; 
0x0012f76d: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [edi], edx; stc; call dword ptr [eax + 0x6a]; 
0x0018954d: inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x0016cb22: inc dword ptr [ebx - 0x749aeb3c]; xor edi, edi; je 0x16cb50; adc byte ptr [ecx + 0x446ce8c7], cl; cli; jmp dword ptr [ebp - 0x77]; 
0x0016f73d: inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x00152676: inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x00127d66: inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x0016e31b: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0017652a: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0012c52b: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; in al, dx; add al, 0x89; ret; 
0x00163754: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd4e9; 
0x00183048: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [ecx + edi*4 - 0x77]; ret 0xe283; 
0x0013e318: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [edi + ebx*8 - 0x77]; ret; 
0x0008ddbf: inc dword ptr [ebx - 0x7872f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x00096f21: inc dword ptr [ebx - 0x7872f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; jmp edx; 
0x000fb90c: inc dword ptr [ebx - 0x78f00306]; push cs; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x0011bd81: inc dword ptr [ebx - 0x7972f314]; movsb byte ptr es:[edi], byte ptr [esi]; mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x0011bd81: inc dword ptr [ebx - 0x7972f314]; movsb byte ptr es:[edi], byte ptr [esi]; mov bl, 0xf9; call dword ptr [eax - 0x18]; pop ds; ret; 
0x00174235: inc dword ptr [ebx - 0x7972f33c]; call 0x6b173c08; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0009f343: inc dword ptr [ebx - 0x7972f33c]; fdiv qword ptr [esi - 0x1a]; call dword ptr [eax + 0x57]; 
0x0009f367: inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; ja 0x9f356; call dword ptr [eax + 0x57]; 
0x0009f31f: inc dword ptr [ebx - 0x7972f33c]; lodsb al, byte ptr [esi]; jbe 0x9f30e; call dword ptr [eax + 0x57]; 
0x0009f331: inc dword ptr [ebx - 0x7972f33c]; pop esp; ja 0x9f320; call dword ptr [eax + 0x57]; 
0x0009f3af: inc dword ptr [ebx - 0x7972f33c]; pop esp; js 0x9f39e; call dword ptr [eax + 0x57]; 
0x00121680: inc dword ptr [ebx - 0x7972f714]; pop ecx; stc; call dword ptr [eax - 1]; 
0x00068840: inc dword ptr [ebx - 0x7a72f314]; mov eax, 0x89fffffb; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x000951c3: inc dword ptr [ebx - 0x7a72f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x00146fa7: inc dword ptr [ebx - 0x7a72f714]; cmp ecx, edi; call dword ptr [eax - 0x73]; 
0x0013d5bf: inc dword ptr [ebx - 0x7a72fb14]; mov al, byte ptr [0x6afff968]; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00073fac: inc dword ptr [ebx - 0x7bf0fe02]; ret; 
0x001686d1: inc dword ptr [ebx - 0x7c72e73c]; in al, dx; movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; pop ebx; ret; 
0x0011ba97: inc dword ptr [ebx - 0x7c72f314]; clc; mov dl, 0xf9; call dword ptr [eax - 0x18]; 
0x000671a0: inc dword ptr [ebx - 0x7c72f314]; cld; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0011a62f: inc dword ptr [ebx - 0x7c72f314]; push esi; stc; call dword ptr [eax - 0x18]; 
0x000399a4: inc dword ptr [ebx - 0x7c72f314]; sar dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000fa805: inc dword ptr [ebx - 0x7c72f714]; adc ebx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000dab23: inc dword ptr [ebx - 0x7c72f714]; and al, 0x56; stc; call dword ptr [eax + 0x56]; 
0x000fa962: inc dword ptr [ebx - 0x7c72f714]; cmp byte ptr [eax - 7], bl; call dword ptr [eax + 0x55]; 
0x000fa906: inc dword ptr [ebx - 0x7c72f714]; pop es; pop eax; stc; call dword ptr [eax + 0x55]; 
0x000fab93: inc dword ptr [ebx - 0x7c72f714]; sub ebx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000dac85: inc dword ptr [ebx - 0x7c76ef3c]; push 0x8900003e; ret 0xc085; 
0x000937a3: inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0009594e: inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0xac73; 
0x000ef875: inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x000f7aa4: inc dword ptr [ebx - 0x7f72f714]; add bl, byte ptr [eax - 7]; call dword ptr [eax + 0x53]; 
0x000f7b01: inc dword ptr [ebx - 0x7f72f714]; add bl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x0008fdac: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008f66e: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x0016623b: inc dword ptr [ebx - 0xafdf3c]; je 0x166267; sbb bh, bh; je 0x16626b; sbb byte ptr [esi - 0x18], dl; ret 0xfebc; 
0x0013c586: inc dword ptr [ebx - 0xb8b0a08]; add esp, 8; pop ebx; ret; 
0x001808c0: inc dword ptr [ebx - 0xc2ef3c]; add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [ecx - 0x77000000], al; ret 0xe283; 
0x0013a395: inc dword ptr [ebx - 0xf76cb3c]; pop ebx; pop esi; ret; 
0x0007ad8d: inc dword ptr [ebx - 0xf76df3c]; pop ebx; pop esi; pop edi; ret; 
0x0009ad49: inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x000e7008: inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00138f38: inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x001ae957: inc dword ptr [ebx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x45c7; 
0x00137bc3: inc dword ptr [ebx]; add byte ptr [eax], al; ja 0x137bd0; sar eax, 5; add esp, 0xc; ret; 
0x001a3361: inc dword ptr [ebx]; add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x00041137: inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x00194f7c: inc dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a6b92: inc dword ptr [ebx]; lea esi, [edi + edi*8 - 1]; call dword ptr [ebx]; 
0x0007237d: inc dword ptr [ebx]; test byte ptr [eax - 0x722c8], bl; jmp eax; 
0x00072359: inc dword ptr [ebx]; test byte ptr [eax - 0x72418], bl; jmp eax; 
0x00071de9: inc dword ptr [ebx]; test byte ptr [eax - 0x7249c], bl; jmp eax; 
0x000662a4: inc dword ptr [ebx]; test byte ptr [eax - 0x72bf8], bl; jmp eax; 
0x001a0d1f: inc dword ptr [ecx + 0x34634c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a0c5a: inc dword ptr [ecx + 0x346f9c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019f34f: inc dword ptr [ecx + 0x35f00c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019f240: inc dword ptr [ecx + 0x3600fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196c71: inc dword ptr [ecx + 0x3e51ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196a6d: inc dword ptr [ecx + 0x3e622c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195f78: inc dword ptr [ecx + 0x3f117c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195e6e: inc dword ptr [ecx + 0x3f221c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195d67: inc dword ptr [ecx + 0x3f328c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195c6b: inc dword ptr [ecx + 0x3f424c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195a5d: inc dword ptr [ecx + 0x3f472c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195cb8: inc dword ptr [ecx + 0x3f497c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00194f78: inc dword ptr [ecx + 0x3ff57c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194e6e: inc dword ptr [ecx + 0x40061c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194d67: inc dword ptr [ecx + 0x40168c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194c5e: inc dword ptr [ecx + 0x40271c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194a8d: inc dword ptr [ecx + 0x40282c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194cb8: inc dword ptr [ecx + 0x402d7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00194c6e: inc dword ptr [ecx + 0x40361c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193f98: inc dword ptr [ecx + 0x40d77c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193e8e: inc dword ptr [ecx + 0x40e81c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193d87: inc dword ptr [ecx + 0x40f88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193c7e: inc dword ptr [ecx + 0x41091c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193b6b: inc dword ptr [ecx + 0x410e4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193cd8: inc dword ptr [ecx + 0x410f7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00193c8e: inc dword ptr [ecx + 0x41181c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001938b7: inc dword ptr [ecx + 0x411d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019321e: inc dword ptr [ecx + 0x41871c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193200: inc dword ptr [ecx + 0x4188fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193167: inc dword ptr [ecx + 0x41928c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001930a0: inc dword ptr [ecx + 0x419efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193007: inc dword ptr [ecx + 0x41a88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192f40: inc dword ptr [ecx + 0x41b4fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192ea7: inc dword ptr [ecx + 0x41be8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192de0: inc dword ptr [ecx + 0x41cafc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192d47: inc dword ptr [ecx + 0x41d48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192c80: inc dword ptr [ecx + 0x41e0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192be7: inc dword ptr [ecx + 0x41ea8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192b20: inc dword ptr [ecx + 0x41f6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192a87: inc dword ptr [ecx + 0x42008c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001929c0: inc dword ptr [ecx + 0x420cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192927: inc dword ptr [ecx + 0x42168c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192860: inc dword ptr [ecx + 0x4222fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001927c7: inc dword ptr [ecx + 0x422c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192700: inc dword ptr [ecx + 0x4238fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192667: inc dword ptr [ecx + 0x42428c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001925a0: inc dword ptr [ecx + 0x424efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192507: inc dword ptr [ecx + 0x42588c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192440: inc dword ptr [ecx + 0x4264fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001923a7: inc dword ptr [ecx + 0x426e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001922e0: inc dword ptr [ecx + 0x427afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192247: inc dword ptr [ecx + 0x42848c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192180: inc dword ptr [ecx + 0x4290fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001920e7: inc dword ptr [ecx + 0x429a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192020: inc dword ptr [ecx + 0x42a6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191f87: inc dword ptr [ecx + 0x42b08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191ec0: inc dword ptr [ecx + 0x42bcfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191e27: inc dword ptr [ecx + 0x42c68c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191d5f: inc dword ptr [ecx + 0x42df0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191c5a: inc dword ptr [ecx + 0x42e35c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191b54: inc dword ptr [ecx + 0x42ffbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191a4b: inc dword ptr [ecx + 0x43044c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191757: inc dword ptr [ecx + 0x430b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191a95: inc dword ptr [ecx + 0x4317ac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0019111e: inc dword ptr [ecx + 0x436f1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191100: inc dword ptr [ecx + 0x4370fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191067: inc dword ptr [ecx + 0x437a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190fb0: inc dword ptr [ecx + 0x4385fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190f17: inc dword ptr [ecx + 0x438f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190e60: inc dword ptr [ecx + 0x439afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190dc7: inc dword ptr [ecx + 0x43a48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190d10: inc dword ptr [ecx + 0x43affc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190c77: inc dword ptr [ecx + 0x43b98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190bc0: inc dword ptr [ecx + 0x43c4fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190b27: inc dword ptr [ecx + 0x43ce8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190a70: inc dword ptr [ecx + 0x43d9fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001909d7: inc dword ptr [ecx + 0x43e38c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190920: inc dword ptr [ecx + 0x43eefc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190887: inc dword ptr [ecx + 0x43f88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001907d0: inc dword ptr [ecx + 0x4403fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190737: inc dword ptr [ecx + 0x440d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190680: inc dword ptr [ecx + 0x4418fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001905e7: inc dword ptr [ecx + 0x44228c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190530: inc dword ptr [ecx + 0x442dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190497: inc dword ptr [ecx + 0x44378c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001903e0: inc dword ptr [ecx + 0x4442fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190347: inc dword ptr [ecx + 0x444c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190290: inc dword ptr [ecx + 0x4457fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001901f7: inc dword ptr [ecx + 0x44618c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190140: inc dword ptr [ecx + 0x446cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001900a7: inc dword ptr [ecx + 0x44768c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018fff0: inc dword ptr [ecx + 0x4481fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ff57: inc dword ptr [ecx + 0x448b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018fea0: inc dword ptr [ecx + 0x4496fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018fe07: inc dword ptr [ecx + 0x44a08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018fd4f: inc dword ptr [ecx + 0x44b80c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018fc4a: inc dword ptr [ecx + 0x44bc5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018fb44: inc dword ptr [ecx + 0x44d8bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018fa3e: inc dword ptr [ecx + 0x44dd1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f7b7: inc dword ptr [ecx + 0x44dd8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018faa3: inc dword ptr [ecx + 0x44eecc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0018fa54: inc dword ptr [ecx + 0x44f7bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f11e: inc dword ptr [ecx + 0x45471c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f100: inc dword ptr [ecx + 0x4548fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f067: inc dword ptr [ecx + 0x45528c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018efb0: inc dword ptr [ecx + 0x455dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ef17: inc dword ptr [ecx + 0x45678c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ee60: inc dword ptr [ecx + 0x4572fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018edc7: inc dword ptr [ecx + 0x457c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ed10: inc dword ptr [ecx + 0x4587fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ec77: inc dword ptr [ecx + 0x45918c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ebc0: inc dword ptr [ecx + 0x459cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018eb27: inc dword ptr [ecx + 0x45a68c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ea70: inc dword ptr [ecx + 0x45b1fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e9d7: inc dword ptr [ecx + 0x45bb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e920: inc dword ptr [ecx + 0x45c6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e887: inc dword ptr [ecx + 0x45d08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e7d0: inc dword ptr [ecx + 0x45dbfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e737: inc dword ptr [ecx + 0x45e58c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e680: inc dword ptr [ecx + 0x45f0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e5e7: inc dword ptr [ecx + 0x45fa8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e530: inc dword ptr [ecx + 0x4605fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e497: inc dword ptr [ecx + 0x460f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e3e0: inc dword ptr [ecx + 0x461afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e347: inc dword ptr [ecx + 0x46248c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e290: inc dword ptr [ecx + 0x462ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e1f7: inc dword ptr [ecx + 0x46398c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e140: inc dword ptr [ecx + 0x4644fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e0a7: inc dword ptr [ecx + 0x464e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018dff0: inc dword ptr [ecx + 0x4659fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018df57: inc dword ptr [ecx + 0x46638c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018dea0: inc dword ptr [ecx + 0x466efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018de07: inc dword ptr [ecx + 0x46788c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018dd4f: inc dword ptr [ecx + 0x46900c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018dc4a: inc dword ptr [ecx + 0x46945c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018db44: inc dword ptr [ecx + 0x46b0bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018da3e: inc dword ptr [ecx + 0x46b51c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018daa3: inc dword ptr [ecx + 0x46c6cc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0018da54: inc dword ptr [ecx + 0x46cfbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c85c: inc dword ptr [ecx + 0x47b33c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c7ac: inc dword ptr [ecx + 0x47be3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c6c4: inc dword ptr [ecx + 0x47c4bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c302: inc dword ptr [ecx + 0x47e0dc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c246: inc dword ptr [ecx + 0x47ec9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c1ea: inc dword ptr [ecx + 0x47f25c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c12c: inc dword ptr [ecx + 0x47fe3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c044: inc dword ptr [ecx + 0x4804bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000f7e72: inc dword ptr [ecx + 0x654973fa]; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0018941f: inc dword ptr [ecx + 0xad9f4c6]; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0018423b: inc dword ptr [ecx + 0xb2bd8c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x00076bca: inc dword ptr [ecx + ecx*4]; ret; 
0x000f7eb3: inc dword ptr [ecx - 0x2ff42f06]; or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x000f32e4: inc dword ptr [ecx]; add byte ptr [eax], al; add cl, ch; ret 0xfff1; 
0x001a3351: inc dword ptr [ecx]; add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0005aa3a: inc dword ptr [ecx]; bnd jmp edx; 
0x000bf216: inc dword ptr [ecx]; clc; pop edi; ret; 
0x000bf253: inc dword ptr [ecx]; clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0003747d: inc dword ptr [ecx]; cli; jmp edx; 
0x0012774e: inc dword ptr [ecx]; fcom dword ptr [eax - 0x73]; xchg byte ptr [ecx], cl; dec edi; stc; call dword ptr [eax + 0x6a]; 
0x0007347f: inc dword ptr [ecx]; fdivr dword ptr [ecx]; ret 0x830f; 
0x00037d25: inc dword ptr [ecx]; fmul dword ptr [ebx - 0x1cb63]; call dword ptr [esi + 0x50]; 
0x00105878: inc dword ptr [ecx]; inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00071a78: inc dword ptr [ecx]; int1; jmp ecx; 
0x0002562c: inc dword ptr [ecx]; iretd; jmp edi; 
0x001097bc: inc dword ptr [ecx]; ja 0x1097c9; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012a8e2: inc dword ptr [ecx]; je 0x12a918; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012bb62: inc dword ptr [ecx]; je 0x12bb98; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00036a82: inc dword ptr [ecx]; lds ebp, ptr [ecx]; ret; 
0x00078781: inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0006b2ad: inc dword ptr [ecx]; ret 0x389; 
0x0005b5ea: inc dword ptr [ecx]; ret 0x5589; 
0x00068878: inc dword ptr [ecx]; ret 0x9589; 
0x00056e26: inc dword ptr [ecx]; ret 0xbe0f; 
0x00038527: inc dword ptr [ecx]; ret 0xd089; 
0x00055c0d: inc dword ptr [ecx]; ret 0xd389; 
0x0006738c: inc dword ptr [ecx]; ret 0xd801; 
0x00068b82: inc dword ptr [ecx]; ret 0xf001; 
0x000673f1: inc dword ptr [ecx]; ret 0xf801; 
0x00031119: inc dword ptr [ecx]; ret; 
0x00106837: inc dword ptr [ecx]; retf; jmp ebx; 
0x000f0025: inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x00037f39: inc dword ptr [ecx]; ror byte ptr [ecx - 0x1cf7b], 1; dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x000705f1: inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0008c139: inc dword ptr [ecx]; salc; jmp esi; 
0x00065829: inc dword ptr [ecx]; stc; jmp ecx; 
0x000ec67b: inc dword ptr [ecx]; xlatb; jmp edi; 
0x001a3371: inc dword ptr [edi]; add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001762f5: inc eax; adc al, 4; mov eax, 1; ret; 
0x0005a037: inc eax; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x00089f29: inc eax; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x001a479c: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x00081400: inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0008bd2f: inc eax; adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; jmp eax; 
0x001842c4: inc eax; adc byte ptr [ecx + 0x39042444], cl; ret 0x9174; 
0x0008621c: inc eax; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x001a456d: inc eax; adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0008ec9b: inc eax; add al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x001492f7: inc eax; add al, 0; add dh, dh; ret; 
0x0019073b: inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00159023: inc eax; add al, 0x3c; jg 0x159037; inc esp; ret 0x8489; 
0x00120edf: inc eax; add al, 0x5b; ret; 
0x001a48aa: inc eax; add al, 0x5f; ret; 
0x00174ff1: inc eax; add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x00026c39: inc eax; add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x0014d481: inc eax; add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x0016ebc1: inc eax; add al, 0x8b; pop edx; and al, 0x83; ret 0x8b18; 
0x000a041a: inc eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub byte ptr [edi + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000ed8f1: inc eax; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000f7e4c: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0003412d: inc eax; add byte ptr [eax], al; ret; 
0x0006475b: inc eax; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000351f0: inc eax; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x000bf155: inc eax; add edx, eax; jl 0xbf190; add eax, ecx; ret; 
0x000c05a4: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x001458c3: inc eax; add esp, 0x118; pop ebx; ret; 
0x0007f9bd: inc eax; and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00034249: inc eax; and al, 0x8b; add al, 0x90; ret; 
0x000342da: inc eax; and al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x000ffa56: inc eax; and al, 0xe8; mov esp, 0x81000832; ret; 
0x000dc103: inc eax; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3e8c8a], cl; add byte ptr [ebp - 0x15f1136e], cl; call dword ptr [ecx + 0x52]; 
0x00120f26: inc eax; and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x000557ac: inc eax; and byte ptr [ebx - 0x7a76f314], al; ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x00069b3e: inc eax; and dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x00024e8b: inc eax; call dword ptr [ebp]; 
0x00024e2d: inc eax; call ecx; 
0x00024dd6: inc eax; call esi; 
0x0018f19b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019119b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00132465: inc eax; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00120f01: inc eax; cmp al, 0x5b; ret; 
0x00034489: inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x000c07cf: inc eax; cmp cl, 0; je 0xc07d6; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000e4cb4: inc eax; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe4d50; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0008f13f: inc eax; cmp esi, edx; jae 0x8f180; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000fa822: inc eax; dec edi; stc; call dword ptr [eax + 0x55]; 
0x00103937: inc eax; dec edi; stc; call dword ptr [eax - 0x17]; 
0x0013000a: inc eax; dec esp; call 0x12fed0; add esp, 4; ret; 
0x001828b5: inc eax; dec esp; ret; 
0x000b155c: inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00170a2e: inc eax; in al, dx; call dword ptr [eax - 0x73]; 
0x0008a234: inc eax; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000c05a3: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000c05a2: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x00041a1f: inc eax; inc eax; ret; 
0x000a6eb3: inc eax; ja 0xa6ebd; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a6ed3: inc eax; ja 0xa6edd; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x00122f19: inc eax; je 0x122ea5; push esi; add al, 0x89; ret 0xeac1; 
0x00123457: inc eax; je 0x1233e3; push esi; add al, 0x89; ret 0xeac1; 
0x001234cc: inc eax; je 0x123458; push esi; add al, 0x89; ret 0xeac1; 
0x00123626: inc eax; je 0x1235b2; push esi; add al, 0x89; ret 0xeac1; 
0x00123712: inc eax; je 0x12369e; push esi; add al, 0x89; ret 0xeac1; 
0x00123787: inc eax; je 0x123713; push esi; add al, 0x89; ret 0xeac1; 
0x00123932: inc eax; je 0x1238be; push esi; add al, 0x89; ret 0xeac1; 
0x00123d27: inc eax; je 0x123cb3; push esi; add al, 0x89; ret 0xeac1; 
0x00150a4e: inc eax; jl 0x150a51; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00065b06: inc eax; jmp dword ptr [eax]; 
0x0018f32e: inc eax; jmp dword ptr [esi - 0x77]; 
0x001980ed: inc eax; jne 0x198160; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a290c: inc eax; jne 0x1a2974; add eax, 7; ret; 
0x001a294c: inc eax; jne 0x1a2994; add eax, 0xf; ret; 
0x001a2c25: inc eax; jne 0x1a2cf0; lea eax, [edi + 7]; pop edi; ret; 
0x001a2c78: inc eax; jne 0x1a2d60; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a2b99: inc eax; jne 0x1a2d70; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a2af6: inc eax; jne 0x1a2d70; lea eax, [edi + 7]; pop edi; ret; 
0x001a35e1: inc eax; jne 0x1a3710; lea eax, [edi + 7]; pop edi; ret; 
0x001a3634: inc eax; jne 0x1a3770; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a3c59: inc eax; jne 0x1a3d00; test al, 0x20; jne 0x1a3cf0; lea eax, [ecx + 4]; ret; 
0x001a42b1: inc eax; jne 0x1a4360; lea eax, [edx + 7]; ret; 
0x001a4304: inc eax; jne 0x1a43c0; lea eax, [edx + 0xf]; ret; 
0x001a46e4: inc eax; jne 0x1a4a99; add eax, 7; pop edi; ret; 
0x001a4734: inc eax; jne 0x1a4ac1; add eax, 0xf; pop edi; ret; 
0x00091f22: inc eax; jne 0x91706; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009d491: inc eax; jne 0x9d4b8; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0011e9ed: inc eax; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x001747f5: inc eax; leave; stc; call dword ptr [edx + 0x6a]; 
0x0005ae64: inc eax; mov bh, cl; call dword ptr [eax - 0x18]; 
0x0004c8cc: inc eax; mov cl, bh; call dword ptr [eax - 0x73]; 
0x0012c56f: inc eax; mov dh, 0xf9; call dword ptr [eax + 0x55]; 
0x00153395: inc eax; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0012d067: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d88e: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006f936: inc eax; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0008e0a5: inc eax; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x000be785: inc eax; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0012b636: inc eax; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0011c649: inc eax; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0009d91c: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d69c: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009d8a3: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d61d: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0011cf59: inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00149a99: inc eax; or al, 0x39; inc ebx; or al, 0x75; ret; 
0x001372fa: inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00175685: inc eax; or al, 0x5e; pop edi; jmp eax; 
0x001a4906: inc eax; or al, 0x5f; ret; 
0x000815c8: inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0009b518: inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x0011e665: inc eax; or byte ptr [0x100f], ah; ret; 
0x00059d39: inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0008e699: inc eax; or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x00137340: inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0014cb7e: inc eax; or byte ptr [ecx], al; je 0x14cba6; add esp, 0xc; ret; 
0x001756be: inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0008e709: inc eax; or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x000b6dbc: inc eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00182945: inc eax; pop eax; ret; 
0x00106262: inc eax; pop eax; stc; call dword ptr [edx - 1]; 
0x000c024c: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0003b713: inc eax; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0003b6a9: inc eax; pop ebx; pop esi; pop edi; ret; 
0x0011de4f: inc eax; pop ebx; pop esi; ret; 
0x000b8ee3: inc eax; pop edi; pop esi; pop ebx; ret; 
0x000bfa97: inc eax; pop edi; pop esi; ret; 
0x000a7c8c: inc eax; pop edi; ret; 
0x001a4815: inc eax; pop es; pop edi; ret; 
0x001828e5: inc eax; pop esp; ret; 
0x001a4926: inc eax; push cs; pop edi; ret; 
0x001323f4: inc eax; push dword ptr [esp + 0x20]; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00024e87: inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e29: inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x00024dd2: inc eax; push dword ptr [esp + 0x40]; call esi; 
0x000c0c31: inc eax; push eax; push dword ptr [edi]; call ebx; 
0x00081912: inc eax; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x001828d5: inc eax; push eax; ret; 
0x000c4432: inc eax; push ebp; call esi; 
0x00168a09: inc eax; push ebp; push eax; call dword ptr [ecx + 8]; 
0x001021f8: inc eax; push es; adc byte ptr [ebx - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x001a48c6: inc eax; push es; pop edi; ret; 
0x00032936: inc eax; push esp; ret; 
0x001444dc: inc eax; ret 0xfff7; 
0x00033d5a: inc eax; ret; 
0x0008cb01: inc eax; sbb al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x00137328: inc eax; sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x0008c291: inc eax; sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x001587f1: inc eax; sbb al, 0x83; ret 0x8501; 
0x001708b5: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00168673: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x00169a05: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x000e6041: inc eax; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00146bd9: inc eax; sbb byte ptr [ebp + 0x5b0975c0], al; pop esi; pop edi; ret; 
0x00133ef3: inc eax; sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x00134efb: inc eax; sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x65f3978d; stc; call dword ptr [edx + 0x50]; 
0x0003b4d9: inc eax; shr eax, 0x1f; ret; 
0x000234c7: inc eax; stc; call dword ptr [eax + 0x52]; 
0x0004975b: inc eax; stc; call dword ptr [eax - 0x18]; 
0x00046d35: inc eax; stc; call dword ptr [eax - 0x73]; 
0x000ed38f: inc eax; stc; call dword ptr [eax - 0x77]; 
0x0005240c: inc eax; stc; call dword ptr [edi + 0x6a]; 
0x0013ec50: inc eax; stc; call dword ptr [edx - 0x46]; 
0x00060c72: inc eax; stc; call dword ptr [esi + 0x52]; 
0x00059d22: inc eax; stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x59cb9; ret 0x40c7; 
0x0016e121: inc eax; sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x00034219: inc eax; sub al, 0x8b; add al, 0x90; ret; 
0x000342aa: inc eax; sub al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x000c07d5: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000bf8ea: inc eax; test ecx, 0xff0000; je 0xbf8f4; inc eax; pop edi; ret; 
0x00095f7c: inc eax; xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x000401d3: inc eax; xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00065b03: inc eax; xor al, 0xf6; inc eax; jmp dword ptr [eax]; 
0x00034459: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00034439: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034419: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00034399: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x000343d9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00034339: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000343b9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034379: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x00034279: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x00034359: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x000343f9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x00034319: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x00173f61: inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000f9f25: inc eax; xor byte ptr [ecx], bh; ret; 
0x0008ea7b: inc eax; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000961d6: inc eax; xor eax, eax; ret; 
0x000e6bc4: inc ebp; aam 0x56; call eax; 
0x000ace71: inc ebp; aam 0x83; ret 0x3901; 
0x000ac8a2: inc ebp; aam 0x83; ret 0xf01; 
0x000277c6: inc ebp; aam 0x89; ret; 
0x00025b69: inc ebp; aam 0xeb; ret 0x9066; 
0x000d06a2: inc ebp; aam 1; ret 0x1689; 
0x000d0468: inc ebp; aam 1; ret 0x5389; 
0x000ee7a0: inc ebp; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x001273b4: inc ebp; adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013f4ba: inc ebp; adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00032961: inc ebp; adc byte ptr [ecx - 0xe37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0017a95b: inc ebp; adc byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00190294: inc ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000780e7: inc ebp; add al, 0x29; fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x000fd5e1: inc ebp; add al, 0x83; ret; 
0x000e838d: inc ebp; add al, byte ptr [eax - 0x6bf0a206]; ret 0xb60f; 
0x000e841c: inc ebp; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000d996e: inc ebp; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00122635: inc ebp; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001226b7: inc ebp; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001227c0: inc ebp; add byte ptr [eax], al; push eax; call 0x1228c0; add esp, 0x1c; ret; 
0x000e9207: inc ebp; add byte ptr [ebp + 0x3f850fc9], al; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x001418a1: inc ebp; add byte ptr [ebx - 0x7af0fd08], al; ret 0xfffe; 
0x000a4ed2: inc ebp; add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x000552d2: inc ebp; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xc483; 
0x00029641: inc ebp; add dh, dh; ret; 
0x001a294e: inc ebp; add eax, 0xf; ret; 
0x0014349a: inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0002aaf2: inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x00039a87: inc ebp; call 0x2b276; jmp dword ptr [esi - 0x70]; 
0x00170dfa: inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0007c1a1: inc ebp; cmp byte ptr [ecx], bh; ret; 
0x0012442c: inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x0013fe71: inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x001823ed: inc ebp; fadd st(7), st(0); inc esp; ret; 
0x00027848: inc ebp; fmul qword ptr [ebp - 0x210ff37d]; call dword ptr [eax - 0x73]; 
0x0012f105: inc ebp; in al, 0x8d; xchg eax, edi; stc; call dword ptr [eax - 0x18]; 
0x00099048: inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0014888f: inc ebp; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0006d61e: inc ebp; jecxz 0x6d621; jmp eax; 
0x000918c7: inc ebp; jmp dword ptr [ecx]; 
0x000acb8f: inc ebp; les eax, ptr [ecx]; ret; 
0x00165e6a: inc ebp; les ecx, ptr [ecx + 0x458bcc45]; rol byte ptr [ebx - 0x7f72f714], 1; outsd dx, dword ptr [esi]; jb 0x165e73; call dword ptr [eax + 0x57]; 
0x001a8b6d: inc ebp; les ecx, ptr [ecx - 0x834b]; jmp dword ptr [esi - 0x7f]; 
0x0003500f: inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x00084a06: inc ebp; les edi, ptr [ecx]; ret 0x850f; 
0x0009c29d: inc ebp; mov ah, 0x89; ret 0x458b; 
0x001a9625: inc ebp; mov ah, 0x89; ret 0x5d89; 
0x000351f3: inc ebp; mov ah, 0x8d; inc ecx; sbb al, 0x89; ret 0x25; 
0x000277bc: inc ebp; mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x00034fc1: inc ebp; mov al, 0x39; ret 0x820f; 
0x0003597a: inc ebp; mov al, 0x83; in al, dx; or al, 0x8d; sbb byte ptr [ebx + 0x3e], 0xf9; call dword ptr [eax - 0x18]; 
0x001a9ff5: inc ebp; mov al, 0x8b; push ebp; les ecx, ptr [ecx]; ret 0xfa09; 
0x00035b49: inc ebp; mov al, 0x8d; cmp byte ptr [eax + 0x39], 0xf9; call dword ptr [eax - 0x73]; 
0x001aa350: inc ebp; mov al, 9; ret 0x950f; 
0x001aadce: inc ebp; mov al, byte ptr [0xf7d45d89]; out 0x89, al; ret; 
0x001a7189: inc ebp; mov byte ptr [ebx], al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [ebx]; 
0x000d0308: inc ebp; mov byte ptr [edi], cl; mov dh, 0x14; or dh, dh; ret 0xf04; 
0x0005cea2: inc ebp; mov eax, 0xfff89ee9; call dword ptr [eax + 0x52]; 
0x001ada06: inc ebp; mov ecx, gs; ret; 
0x00080dce: inc ebp; mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x00133116: inc ebp; mov esp, 0x6585808d; stc; call dword ptr [eax - 1]; 
0x001330d6: inc ebp; mov esp, 0x65a4808d; stc; call dword ptr [eax - 1]; 
0x000e7e84: inc ebp; mov esp, 0x83c0458b; ror byte ptr [edi], 0x89; ret 0x25; 
0x000d040a: inc ebp; mov esp, 0xc0830a8b; add al, 0x83; ret 0x8904; 
0x00035b77: inc ebp; mov esp, 0xe9ac4589; ret 0xfffd; 
0x00136ea2: inc ebp; mov word ptr [ecx - 0x11f73], cs; call dword ptr [ecx - 1]; 
0x0017f566: inc ebp; movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x000be80e: inc ebp; or al, 0; add ecx, 0x107863; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001728a7: inc ebp; or al, 0; mov edx, dword ptr [eax + 0x8c]; lea eax, [eax + 0xa78c]; mov dword ptr gs:[edx], eax; ret; 
0x000edc44: inc ebp; or al, 0x89; lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x001a5bd8: inc ebp; or byte ptr [ebp - 0x77], bl; ret 0xead1; 
0x001141c1: inc ebp; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000e8305: inc ebp; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005acea: inc ebp; or byte ptr [ecx], bh; ret; 
0x000c3337: inc ebp; or dh, bh; dec dword ptr [ecx - 0x769fdbac]; ret 0x52e9; 
0x000619ab: inc ebp; or eax, 0x8901e683; ret; 
0x000f2385: inc ebp; or eax, 0xbf850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f5bf5: inc ebp; or eax, 0xcf850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x00139497: inc ebp; out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x0019fd2a: inc ebp; pop ebx; ret; 
0x0009b554: inc ebp; ret 0x2ec3; 
0x0002885b: inc ebp; ret 0x4489; 
0x0007f392: inc ebp; ret 0x4689; 
0x0013ab0b: inc ebp; ret 0x548b; 
0x00042570: inc ebp; ret 0x66c3; 
0x000898de: inc ebp; ret 0x689; 
0x00065dfc: inc ebp; ret 0x8589; 
0x0008eaa6: inc ebp; ret 0x8dc3; 
0x000a654f: inc ebp; ret 0xc35b; 
0x000a5ec8: inc ebp; ret 0xc483; 
0x000646b9: inc ebp; ret 0xc689; 
0x0012ad60: inc ebp; ret 0xd231; 
0x0007b4a8: inc ebp; ret 0xec83; 
0x00086127: inc ebp; ret 0xffff; 
0x0003fe14: inc ebp; ret; 
0x00165e70: inc ebp; rol byte ptr [ebx - 0x7f72f714], 1; outsd dx, dword ptr [esi]; jb 0x165e73; call dword ptr [eax + 0x57]; 
0x00025977: inc ebp; ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x00042082: inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x00166125: inc ebp; ror byte ptr [edi], 1; mov bh, 0x80; push -0x35; stc; jmp dword ptr [esi - 0x77]; 
0x001076e7: inc ebp; sbb al, 0x89; ret 0xeac0; 
0x00143491: inc ebp; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00090c75: inc ebp; sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x00177862: inc ebp; sbb byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000ac880: inc ebp; shr cl, 1; ret 0xffeb; 
0x0015142a: inc ebp; stc; call dword ptr [eax + 0x52]; 
0x00154bdb: inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00107378: inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00110c83: inc ebp; sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00035b92: inc ebp; test al, 0xe9; ret; 
0x0009631a: inc ebp; test al, 1; je 0x96360; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x001ad5b7: inc ebp; test byte ptr [ebx], al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [ecx]; 
0x001a9a99: inc ebp; test byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x458b; 
0x001a87b3: inc ebp; test byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd189; 
0x001ab837: inc ebp; test cl, ch; cmc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0010738d: inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0009f1d0: inc ebx; adc al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x00083922: inc ebx; adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x001322f4: inc ebx; adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00169eec: inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00084fae: inc ebx; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00095933: inc ebx; adc al, 0x83; ret; 
0x00087886: inc ebx; adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x001688a4: inc ebx; adc bh, bh; je 0x1688cd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016af8a: inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00039b3b: inc ebx; adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0005a7fd: inc ebx; adc byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x0016899d: inc ebx; adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0019049b: inc ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001808b4: inc ebx; add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x00109204: inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00028cd5: inc ebx; add al, 0x39; ret 0x9173; 
0x0015137f: inc ebx; add al, 0x50; call edi; 
0x0016907f: inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016eda4: inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016958f: inc ebx; add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x000a48dc: inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x00077d20: inc ebx; add al, 0x74; xor al, byte ptr [ebx + 0x1b804c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00169559: inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00034d7e: inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016919e: inc ebx; add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00030d52: inc ebx; add al, 0x83; ret; 
0x001054ca: inc ebx; add al, 0x89; ret 0xe283; 
0x0017f93d: inc ebx; add al, 0x89; ret; 
0x0008c131: inc ebx; add al, 0x8b; mov ah, 0x82; push 0x1fff8e9; salc; jmp esi; 
0x0016ae4a: inc ebx; add al, 0xff; je 0x16ae73; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016ae94: inc ebx; add al, 0xff; je 0x16aebd; sbb al, 0x53; call dword ptr [eax]; 
0x0013ce0e: inc ebx; add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000638b3: inc ebx; add al, byte ptr [ebx - 0x57ccf16]; or dword ptr [edi], ecx; xchg dword ptr [edx - 0x76000008], esi; ret 0xc083; 
0x00147af7: inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00090d18: inc ebx; add dword ptr [eax], eax; add byte ptr [ebp - 0x6b09579], cl; call dword ptr [eax - 0x73]; 
0x00084d29: inc ebx; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0009dae4: inc ebx; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00029128: inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x0008ce2c: inc ebx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00026fa6: inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg ah, ch; jg 0x26faa; call dword ptr [eax - 0x73]; 
0x0013693a: inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x000a481e: inc ebx; and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0xa484d; call eax; 
0x00120284: inc ebx; call eax; 
0x001a66ae: inc ebx; call ebx; 
0x0016cc32: inc ebx; cli; jmp dword ptr [ebp - 0x77]; 
0x000ce2b9: inc ebx; idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x001259dd: inc ebx; inc dword ptr [ebx + 0x2c7602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000f8289: inc ebx; inc edi; stc; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00094a69: inc ebx; ja 0x94b50; mov edx, dword ptr [ebp + eax*4 - 0x714fc]; lea ebx, [edi + 0xc]; add edx, ebp; jmp edx; 
0x000ed8ce: inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000ed97e: inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x0012c40e: inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0009d2cc: inc ebx; mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012c27e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012c29e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0010892e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010894e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0012bf3e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012c2be: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012716e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x001116ce: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012bc7e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012929e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00168996: inc ebx; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0017405d: inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0008d92a: inc ebx; or al, 0x5b; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x00149a9c: inc ebx; or al, 0x75; ret; 
0x0008c213: inc ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017f6dd: inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0008c616: inc ebx; or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x00169fc7: inc ebx; or al, 0x83; ret; 
0x0009ac21: inc ebx; or al, 0x89; fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x0008782f: inc ebx; or al, 0x89; ret 0x532b; 
0x000937d3: inc ebx; or al, 0x89; ret 0xe281; 
0x00173344: inc ebx; or bh, bh; je 0x17336d; adc al, 0x53; call dword ptr [eax]; 
0x00173543: inc ebx; or bh, bh; je 0x17356c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0008c658: inc ebx; or bh, bh; je 0x8c681; xor byte ptr [edx + 0x51], dl; call eax; 
0x00143840: inc ebx; or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00174037: inc ebx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00096239: inc ebx; or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x96249; call dword ptr [ebx]; 
0x0008c141: inc ebx; or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00084fa8: inc ebx; or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008c8cf: inc ebx; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00084382: inc ebx; or byte ptr [ecx + 0x4538913], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008c151: inc ebx; or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x0010a0c4: inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0016d398: inc ebx; or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00093815: inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00027e94: inc ebx; or byte ptr [edi], cl; mov bh, 0x85; cmp al, 0x80; stc; jmp dword ptr [esi - 0x77]; 
0x00183099: inc ebx; outsb dx, byte ptr [esi]; lock dec dword ptr [ebp - 0x2bb7d]; dec dword ptr [ecx + 0x34894c46]; and al, 0xe8; ret 0x12; 
0x0010ad0e: inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x001843b0: inc ebx; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00170365: inc ebx; push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00170381: inc ebx; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00041972: inc ebx; push es; pop ebx; ret; 
0x0008b068: inc ebx; ret 0x4489; 
0x000e7d06: inc ebx; ret 0xc383; 
0x001427fb: inc ebx; ret 0xc589; 
0x0004c89b: inc ebx; ret 0xd029; 
0x00036ec8: inc ebx; ret 0xda89; 
0x000d9975: inc ebx; ret 0xe883; 
0x00039fd6: inc ebx; ret 0xec83; 
0x001801c3: inc ebx; ret 0xfa83; 
0x0003724e: inc ebx; ret; 
0x0013be99: inc ebx; ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x0013bd3d: inc ebx; ror byte ptr [ebx + 0x29302444], 1; fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x001401f1: inc ebx; sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x00033157: inc ebx; sbb al, 0x73; adc ecx, dword ptr [ebx + 0x5b208354]; mov eax, edx; ret; 
0x000ad0d8: inc ebx; sbb al, 0x83; ret; 
0x0005ae4a: inc ebx; sbb byte ptr [ebx - 0x14f3dbac], cl; mov bh, 0x8d; xchg dword ptr [eax - 0x76], esi; stc; call dword ptr [eax - 0x73]; 
0x0003be21: inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x000893ea: inc ebx; sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00096bc6: inc ebx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00049678: inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x00130166: inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x000a61ba: inc ebx; shr byte ptr [ecx], 1; ret 0xf001; 
0x000607ef: inc ebx; stc; call dword ptr [eax + 0x53]; 
0x00068907: inc ebx; stc; call dword ptr [eax - 0x18]; 
0x00076e9e: inc ebx; stc; call dword ptr [eax - 0x73]; 
0x000fad36: inc ebx; stc; call dword ptr [edx + 0x52]; 
0x000a48ad: inc ebx; sub byte ptr [ecx], al; jne 0xa4888; sub esp, 0xc; push eax; call edx; 
0x0002820e: inc ebx; xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0007fecb: inc ebx; xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008cf0c: inc ebx; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00129c8b: inc ebx; xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x0008dd0a: inc ecx; adc al, 0x39; ret 0x1074; 
0x0003183c: inc ecx; adc al, 0x39; ret 0x4d0f; 
0x00085702: inc ecx; adc byte ptr [ecx + 0x4538903], cl; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x0009ae52: inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x000814d3: inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x00055037: inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00190684: inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b33a6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000b34e6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000aefd6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000af106: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0002fc0c: inc ecx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00165537: inc ecx; add al, 0x85; ror byte ptr [edi], 0x85; ret 1; 
0x00059f9a: inc ecx; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x40], 0xf9; call dword ptr [eax - 0x18]; 
0x000ed8d1: inc ecx; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000f7f28: inc ecx; add byte ptr [esi + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x000af0d7: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000bd71a: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000aefb7: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x000f8739: inc ecx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000b7ccb: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000bd83e: inc ecx; add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x000b33c5: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000b34f5: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x000af115: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x000bd788: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000aefe5: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000a61b1: inc ecx; add esi, eax; add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x0013d092: inc ecx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017de73: inc ecx; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00175582: inc ecx; add esp, 0x18; pop ebx; ret; 
0x00108c68: inc ecx; add esp, 0x28; pop ebx; ret; 
0x00143869: inc ecx; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00031831: inc ecx; and byte ptr [ecx], bh; ret 0x4c0f; 
0x001909d4: inc ecx; and edi, edi; inc dword ptr [ecx + 0x43e38c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010fba9: inc ecx; bnd jmp dword ptr [esi - 0x70]; 
0x00174cf4: inc ecx; cld; jmp dword ptr [esi - 0x70]; 
0x000a149b: inc ecx; cmp byte ptr [ecx + 0x39142444], cl; ret 0x840f; 
0x0002f3c1: inc ecx; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0003122b: inc ecx; dec dword ptr [ecx - 0x1eb6b]; dec dword ptr [ecx - 0x1d77b]; jmp dword ptr [ecx]; 
0x0012b260: inc ecx; dec ebp; push esi; push ebx; call dword ptr gs:[0x10]; 
0x000c04de: inc ecx; inc edx; test al, al; jne 0xc04d8; xor eax, eax; ret; 
0x00162050: inc ecx; jb 0x16204c; call dword ptr [eax - 0x18]; 
0x000a8e9d: inc ecx; jbe 0xa8eb0; cmove eax, edx; ret; 
0x000a9dcd: inc ecx; jbe 0xa9de0; cmove eax, edx; ret; 
0x000a9f9d: inc ecx; jbe 0xa9fb0; cmove eax, edx; ret; 
0x0009f5be: inc ecx; jmp dword ptr [ecx]; 
0x000ae769: inc ecx; jmp dword ptr [esi + 0xf]; 
0x000a6f0d: inc ecx; jne 0xa6f12; lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x000a6f4d: inc ecx; jne 0xa6f52; lea edx, [edx - 0x1765a4]; cmove eax, edx; ret; 
0x000a7add: inc ecx; jne 0xa7ae2; lea edx, [edx - 0x176f04]; cmove eax, edx; ret; 
0x000a8e6d: inc ecx; jne 0xa8e72; lea edx, [edx - 0x1769d4]; cmove eax, edx; ret; 
0x000a9c9d: inc ecx; jne 0xa9ca2; lea edx, [edx - 0x1785e4]; cmove eax, edx; ret; 
0x000a9d1d: inc ecx; jne 0xa9d22; lea edx, [edx - 0x1894a4]; cmove eax, edx; ret; 
0x000c33cd: inc ecx; jne 0xc33d2; cmove eax, edx; ret; 
0x000a9d9d: inc ecx; jnp 0xa9da4; cmove eax, edx; ret; 
0x000c256d: inc ecx; jnp 0xc2574; cmove eax, edx; ret; 
0x000c25bd: inc ecx; jnp 0xc25c4; cmove eax, edx; ret; 
0x000c357d: inc ecx; jnp 0xc3584; cmove eax, edx; ret; 
0x000c421d: inc ecx; jnp 0xc4224; cmove eax, edx; ret; 
0x00146db1: inc ecx; js 0x146d9f; ret 0x768d; 
0x0009631e: inc ecx; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x00084ef5: inc ecx; or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x00175f9a: inc ecx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x000b676b: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000bd7bc: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b660b: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x00158bf9: inc ecx; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x000c3a2b: inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000b67cb: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000bd81c: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b666b: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000c3a31: inc ecx; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000b7b9a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e8b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b657a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b684b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b3515: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000af135: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b3575: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000af195: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b3536: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000af156: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0010e778: inc ecx; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x000b7c8b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b7deb: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b664b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b67ab: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b7d0b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e6b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b66cb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b682b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3555: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af175: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b1047: inc ecx; pop es; pop ebx; ret; 
0x001a3d11: inc ecx; pop es; ret; 
0x0009ff7b: inc ecx; push 0xc4830008; adc byte ptr [ebx + 0x974fff8], al; add esp, 0xc; ret; 
0x001a3d61: inc ecx; push cs; ret; 
0x000b7ceb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e4b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b66ab: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b680b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b1037: inc ecx; push es; pop ebx; ret; 
0x001a3d01: inc ecx; push es; ret; 
0x00077a3b: inc ecx; ret; 
0x000351f6: inc ecx; sbb al, 0x89; ret 0x25; 
0x00031839: inc ecx; sbb byte ptr [ebx], al; inc ecx; adc al, 0x39; ret 0x4d0f; 
0x0005cd62: inc ecx; stc; call dword ptr [eax + 0x57]; 
0x0005d16e: inc ecx; stc; call dword ptr [eax - 0x18]; 
0x00131b33: inc edi; adc al, 0x29; ret 0x478b; 
0x00094e20: inc edi; adc al, 0x29; ret; 
0x0008e0c8: inc edi; adc al, 0x39; ret 0x1074; 
0x00117c59: inc edi; adc al, 0x50; push 1; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00117f9c: inc edi; adc al, 0x50; push 2; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00117e7d: inc edi; adc al, 0x50; push 5; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0007fa6f: inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x000b8aff: inc edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x0014c375: inc edi; adc al, 0x89; ret 0xc985; 
0x00039e68: inc edi; adc al, 0x89; ret; 
0x00112703: inc edi; adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b8ac1: inc edi; adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000b8a89: inc edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007fbbf: inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000b8a9f: inc edi; adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b8adf: inc edi; adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0009eb3f: inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x001900ab: inc edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00077dcf: inc edi; add al, 0x29; fnsave dword ptr [ebx + ecx*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0005f157: inc edi; add al, 0x39; ret 0x4d0f; 
0x001727de: inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000b8925: inc edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x001a2cd1: inc edi; add al, 0x5f; ret; 
0x0016a333: inc edi; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00182545: inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x00039e9f: inc edi; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x7c8b; 
0x000534b8: inc edi; add al, 0xf; xchg edx, eax; ret; 
0x0014c9d5: inc edi; add al, byte ptr [eax]; add byte ptr [ebp - 0x693827e], cl; call dword ptr [eax - 0x73]; 
0x000b88f7: inc edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0017678b: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0012fcc2: inc edi; add byte ptr [eax], al; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x000b88e5: inc edi; add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0012e528: inc edi; add eax, 0xe9c58100; mov byte ptr [eax], dl; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000b890d: inc edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00145a23: inc edi; add esp, 0x118; pop ebx; ret; 
0x00171eaf: inc edi; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0009a1b7: inc edi; add esp, 0x38; pop ebx; ret; 
0x00170a15: inc edi; and byte ptr [eax], al; add byte ptr [ecx - 0x7c72af3b], cl; xor dword ptr [ecx + edi*8 - 1], 0x8d50056a; xor dword ptr [esp + eax*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0002cd52: inc edi; and byte ptr [ecx - 0x9c3dbbc], cl; ret 0x7501; 
0x00029fd2: inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x000b8c93: inc edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b7643: inc edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x001a3113: inc edi; clc; pop edi; ret; 
0x001a313c: inc edi; cld; pop edi; ret; 
0x001a31b1: inc edi; cli; pop edi; ret; 
0x001a3171: inc edi; cmc; pop edi; ret; 
0x001a8d41: inc edi; dec dword ptr [ebx - 0x9763]; call ebx; 
0x001ab095: inc edi; dec dword ptr [ebx - 0xab4b]; dec dword ptr [ebx - 0xaf63]; call ebx; 
0x001a30e9: inc edi; hlt; pop edi; ret; 
0x000430ef: inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x000b8ee2: inc edi; inc eax; pop edi; pop esi; pop ebx; ret; 
0x0016cc55: inc edi; inc ebx; cli; jmp dword ptr [ebp - 0x77]; 
0x00107b16: inc edi; inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x001a3141: inc edi; int1; pop edi; ret; 
0x001662ef: inc edi; jae 0x1662eb; call dword ptr [eax + 0x6a]; 
0x001663cf: inc edi; jae 0x1663cb; call dword ptr [eax - 0x18]; 
0x000b8a73: inc edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00095001: inc edi; or al, 0x25; add byte ptr [eax], 0; add byte ptr [ecx - 0x16f3dbbc], cl; ret; 
0x000b8a0f: inc edi; or al, 0x5f; pop esi; pop ebx; ret; 
0x001a2d41: inc edi; or al, 0x5f; ret; 
0x001119cd: inc edi; or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f6056: inc edi; or al, 0xe9; ret; 
0x000b89d1: inc edi; or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0016aa59: inc edi; or byte ptr [ebp - 1], dl; jbe 0x16aa6b; push edi; call dword ptr [eax + 8]; 
0x0016aa9c: inc edi; or byte ptr [ebp - 1], dl; jbe 0x16aaae; push edi; call dword ptr [eax + 0x10]; 
0x00122a86: inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x000ef1bd: inc edi; or byte ptr [ecx], bh; ret 0x830f; 
0x0006e0d5: inc edi; or byte ptr [ecx], bh; ret 0x840f; 
0x001095e3: inc edi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000b8999: inc edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b89af: inc edi; or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b89ef: inc edi; or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000b8c73: inc edi; pop ds; pop edi; pop esi; pop ebx; ret; 
0x001a4f78: inc edi; pop edi; pop esi; pop ebx; ret; 
0x001a3151: inc edi; pop edi; ret; 
0x000b897b: inc edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x001a2afe: inc edi; pop es; pop edi; ret; 
0x000b8b63: inc edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x00103b83: inc edi; push cs; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x000b8a53: inc edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x001a2d61: inc edi; push cs; pop edi; ret; 
0x000b8c53: inc edi; push ds; pop edi; pop esi; pop ebx; ret; 
0x001708a2: inc edi; push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000b76b7: inc edi; push es; pop edi; pop esi; pop ebx; ret; 
0x001a2cf1: inc edi; push es; pop edi; ret; 
0x000b8b43: inc edi; push ss; pop edi; pop esi; pop ebx; ret; 
0x0014282b: inc edi; rcl byte ptr [edx + 0x6a]; or dword ptr [ebx - 0x72dfdba4], ecx; cmp dword ptr [edi], 0x6a; stc; call dword ptr [eax + 0x51]; 
0x00093099: inc edi; ret 0x4489; 
0x000a3dc0: inc edi; ret 0x508d; 
0x000ad5aa: inc edi; ret 0x5350; 
0x0011bf6e: inc edi; ret 0x548b; 
0x0011bf16: inc edi; ret 0x66c3; 
0x000930db: inc edi; ret 0x72e9; 
0x0009e69f: inc edi; ret 0x8188; 
0x00097c4c: inc edi; ret 0x90c3; 
0x000984d0: inc edi; ret 0x948b; 
0x000a1c60: inc edi; ret 0xc083; 
0x000e5de1: inc edi; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x000b8c19: inc edi; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x001356f2: inc edi; sbb al, 0x89; ret 0x572b; 
0x00106b2a: inc edi; sbb al, 0x89; ret 0xc085; 
0x001353ac: inc edi; sbb al, 0x89; ret 0xc985; 
0x000c2135: inc edi; sbb al, 0xf7; dec dword ptr [ebx - 0x72e3dbac]; add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x000b8bcb: inc edi; sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00134923: inc edi; sbb byte ptr [ebp + 0x63840fc9], al; or byte ptr [eax], al; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x00131efa: inc edi; sbb byte ptr [ecx + 0x29c529da], cl; ret 0x6c01; 
0x000b8b83: inc edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b8ba9: inc edi; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b8bf9: inc edi; sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000f828a: inc edi; stc; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a31a1: inc edi; stc; pop edi; ret; 
0x001a31d1: inc edi; std; pop edi; ret; 
0x001a31c1: inc edi; sti; pop edi; ret; 
0x0010587a: inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0012f61b: inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x001a2113: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000b516e: inc edx; adc byte ptr [edi + 0x5b], bl; ret; 
0x0012a0a6: inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00111d87: inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00190534: inc edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00175d56: inc edx; add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x00175316: inc edx; add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x000a984b: inc edx; add al, 0x5b; pop esi; ret; 
0x000b50c2: inc edx; add al, 0x5f; pop ebx; ret; 
0x000b339b: inc edx; add al, 0x5f; ret; 
0x000b7dc8: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b6788: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00070740: inc edx; add al, 0x83; ret 0x8304; 
0x000c4581: inc edx; add al, 0x83; ret 0x8504; 
0x00123f8e: inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x000bd74b: inc edx; add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000aefc8: inc edx; add al, 0x89; clc; pop edi; ret; 
0x00175ca1: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00175c79: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016adc9: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016adf1: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000814d0: inc edx; add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x000a974b: inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000b6768: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b6608: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000b67c8: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b6668: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0009eb81: inc edx; add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0008ae05: inc edx; add al, 0x8d; dec eax; xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8ae28; ret; 
0x000b3398: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000b7b49: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000b7d98: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x001583bf: inc edx; add al, 0xf; test byte ptr [ecx - 0x7d000000], al; ret 0x8014; 
0x00093a51: inc edx; add al, 1; add esp, 0xc; ret; 
0x00059e59: inc edx; add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x000a9766: inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000b11ba: inc edx; add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xb10e1; pop ebx; ret; 
0x0013c5e2: inc edx; add dword ptr [eax + 2], edi; ret; 
0x000a9814: inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000f758b: inc edx; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xf755d; xor eax, eax; ret; 
0x000fabc7: inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000b7cd0: inc edx; add eax, 0x5f0c428d; ret; 
0x000bd843: inc edx; add eax, 0x5f5bf889; ret; 
0x000a9837: inc edx; add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000b1238: inc edx; add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xb10e1; pop ebx; ret; 
0x00028f29: inc edx; add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x0009aa50: inc edx; add esp, 0x124; pop ebx; pop esi; ret; 
0x0012a90d: inc edx; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0008cba3: inc edx; and al, 0x65; mov dword ptr [0x7c], edx; pop ebx; ret; 
0x0018c4c1: inc edx; call 0x42eed42d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018ca51: inc edx; call 0x42eed9bd; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00133145: inc edx; call dword ptr [esi + 0x53]; 
0x0018c070: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c4c6: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911a0: inc edx; clc; mov eax, edx; pop ebx; ret; 
0x0018c073: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911ba: inc edx; cld; mov eax, edx; pop ebx; ret; 
0x0018c0b3: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00172bca: inc edx; cmp dl, dh; jmp dword ptr [ebp - 0x75]; 
0x0018c0b7: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018c096: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x001816c8: inc edx; dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x000bfbbe: inc edx; dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000bfcc9: inc edx; dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0018c44c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x18c494; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018c9dc: inc edx; fisub dword ptr [esi + 0xf]; jg 0x18ca24; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018c5b6: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c3f1: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00115a4a: inc edx; inc edx; xor eax, eax; ret; 
0x00024b86: inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b130370], ecx; jmp dword ptr [ebp + 0x33]; 
0x00131d21: inc edx; jmp dword ptr [eax]; 
0x0009ff37: inc edx; jmp dword ptr [ecx]; 
0x00123cc9: inc edx; jnp 0x123c59; xchg ebx, eax; ret; 
0x0018c232: inc edx; jo 0x18c1b6; ret 0x80; 
0x0018c299: inc edx; jo 0x18c21d; ret 0x80; 
0x0018c2eb: inc edx; jo 0x18c26f; ret 0x80; 
0x001a546d: inc edx; lea eax, [edi - 0x10]; pop edi; ret; 
0x0018c451: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018c69a: inc edx; mov ah, 0xfa; jmp dword ptr [esi - 0x70]; 
0x0018c5f6: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c636: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000fbd5d: inc edx; mov eax, dword ptr [esp]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x0018f196: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191196: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0018c536: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x000b512f: inc edx; or al, 0x5f; pop ebx; ret; 
0x000b3443: inc edx; or al, 0x5f; ret; 
0x000591c6: inc edx; or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00170af8: inc edx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0011e67d: inc edx; or byte ptr [0x100f], ah; ret; 
0x0017eea4: inc edx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x0007c82a: inc edx; or byte ptr [ebp + 0x393074c9], al; ret; 
0x00085dcf: inc edx; or byte ptr [ebp + 0x396374c9], al; ret; 
0x0007db7f: inc edx; or byte ptr [ebp + 0x397374c9], al; ret; 
0x00083145: inc edx; or byte ptr [ebp + 0x49840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000b512c: inc edx; or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x0007ae1e: inc edx; or byte ptr [ebp - 0x2f7bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0008d4eb: inc edx; or byte ptr [ebp - 0x77], ah; adc eax, 0x78; pop ebx; ret; 
0x000828ef: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000658fa: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; cmp eax, dword ptr [eax + eax]; add byte ptr [ecx], bh; ret; 
0x0007b2bf: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x00183f1f: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebx, 0x39000000; ret; 
0x0007e6b4: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov esi, 0x39000000; ret; 
0x0008341f: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; ret; 
0x0008b805: inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000b127c: inc edx; or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xb10e1; pop ebx; ret; 
0x000b129e: inc edx; or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xb10e1; pop ebx; ret; 
0x000b12dc: inc edx; or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xb10e1; pop ebx; ret; 
0x000b50f4: inc edx; or byte ptr [edi + 0x5b], bl; ret; 
0x0007060b: inc edx; or byte ptr [edi], cl; test dl, ah; or dword ptr [eax], eax; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x00083802: inc edx; or cl, ch; ret; 
0x0018c391: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c361: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00097e89: inc edx; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000b620e: inc edx; pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b341c: inc edx; pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b355c: inc edx; pop es; lea eax, [edx + 0xa]; ret; 
0x000b7d10: inc edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e70: inc edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000bd7ff: inc edx; pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000af03c: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x000af17c: inc edx; pop es; mov eax, edx; ret; 
0x000a97fe: inc edx; pop es; pop ebx; pop esi; ret; 
0x000b32c9: inc edx; pop es; pop edi; ret; 
0x000b3509: inc edx; pop es; ret; 
0x001998a3: inc edx; pop es; sub eax, ecx; pop ebp; ret; 
0x001980f6: inc edx; pop es; sub eax, ecx; ret; 
0x000b6136: inc edx; push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3483: inc edx; push cs; pop edi; ret; 
0x000b35e3: inc edx; push cs; ret; 
0x000426d6: inc edx; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x000a97a9: inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000a9869: inc edx; push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x000b7cf0: inc edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e50: inc edx; push es; lea eax, [edx + 0xd]; ret; 
0x000bd863: inc edx; push es; mov eax, edi; pop ebx; pop edi; ret; 
0x000b66b0: inc edx; push es; mov eax, edi; pop edi; ret; 
0x000b6810: inc edx; push es; mov eax, edx; ret; 
0x000a986f: inc edx; push es; pop ebx; pop esi; ret; 
0x000b33cb: inc edx; push es; pop edi; ret; 
0x000b34fb: inc edx; push es; ret; 
0x0019997f: inc edx; push es; sub eax, ecx; pop ebp; ret; 
0x00198166: inc edx; push es; sub eax, ecx; ret; 
0x000dbd23: inc edx; push esi; stc; call dword ptr [eax - 0x18]; 
0x000de2a9: inc edx; ret 0x4c80; 
0x0013c390: inc edx; ret 0x578d; 
0x0013cdbd: inc edx; ret 0x57c3; 
0x000791d8: inc edx; ret 0x789; 
0x00144b50: inc edx; ret 0xb60f; 
0x000371c9: inc edx; ret 0xc189; 
0x00034ebd: inc edx; ret 0xc389; 
0x000d79e4: inc edx; ret 0xc501; 
0x0013bea4: inc edx; ret 0xd129; 
0x0013bd4c: inc edx; ret 0xd329; 
0x000c48ff: inc edx; ret 0xd9f7; 
0x0013bd5a: inc edx; ret 0xe883; 
0x000a5996: inc edx; ret 0xea89; 
0x0018c627: inc edx; ret 0xf66; 
0x000a74cf: inc edx; ret; 
0x0005d1dc: inc edx; ror byte ptr [ecx + 0x29fa89d1], 1; ret 0x448d; 
0x000f9f2d: inc edx; sbb al, 0x39; ret; 
0x00060d40: inc edx; stc; call dword ptr [eax + 0x53]; 
0x0005f7ce: inc edx; stc; call dword ptr [eax + 0x6a]; 
0x00061076: inc edx; stc; call dword ptr [eax - 0x18]; 
0x0005fa41: inc edx; stc; call dword ptr [ebp + 0x50]; 
0x0005f949: inc edx; stc; call dword ptr [ecx + 0x50]; 
0x0005fb9d: inc edx; stc; call dword ptr [esi + 0x6a]; 
0x0018c0d7: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c093: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00111d77: inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x000c04df: inc edx; test al, al; jne 0xc04d8; xor eax, eax; ret; 
0x0018c0b0: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018f250: inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0011e2f2: inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0011406a: inc edx; xor eax, eax; ret; 
0x00107b18: inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00184bb6: inc esi; adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4972; 
0x00080b6d: inc esi; adc al, 0xe9; ret; 
0x0005a92b: inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x00178807: inc esi; adc byte ptr [ecx], al; ret; 
0x0008767b: inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000ddfac: inc esi; adc cl, ch; ret 0xffed; 
0x000585e6: inc esi; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00049058: inc esi; add al, 0; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00190144: inc esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008aeb2: inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0017572e: inc esi; add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x00184986: inc esi; add al, 0x5b; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x0017b058: inc esi; add al, 0x75; test byte ptr [ebx - 0x74c7dba4], cl; inc esi; or byte ptr [ecx], al; ret; 
0x000c51f5: inc esi; add al, 0x83; mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x00077c00: inc esi; add al, 0x89; inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001280fb: inc esi; add al, 0x89; ret 0xe083; 
0x0009b02d: inc esi; add al, 0x89; ret 0xe283; 
0x00088623: inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x00027a1d: inc esi; add al, 0x8d; or dword ptr [eax + esi*8], 0xffffffde; call dword ptr [eax - 0x73]; 
0x001447b2: inc esi; add al, byte ptr [ebp - 0x76c98b37]; ret; 
0x00120525: inc esi; add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00129c2c: inc esi; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000653d4: inc esi; add byte ptr [ecx - 0x5a77b], cl; dec dword ptr [ecx - 0x5f363]; jmp dword ptr [ebp - 0x5f]; 
0x0009173b: inc esi; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x00131be5: inc esi; add dword ptr [ecx + 0x244c8bda], ecx; sbb al, 0x29; ret 0xca39; 
0x001a0c5e: inc esi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c0434: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x0008c5ae: inc esi; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00108cfb: inc esi; add esp, 0x28; pop ebx; ret; 
0x0003c6f7: inc esi; add esp, 0x94; pop ebx; pop edi; ret; 
0x00183bba: inc esi; and al, 0x29; ret; 
0x001176a5: inc esi; and bh, bh; xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00089bd6: inc esi; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x00088986: inc esi; and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x001319a9: inc esi; and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00081ce6: inc esi; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0017482d: inc esi; cld; call dword ptr [eax - 0x73]; 
0x001715a6: inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0007f395: inc esi; cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d36d4: inc esi; dec dword ptr [edi]; dec edi; ret 0x48d; 
0x000be1e3: inc esi; dec ebx; or al, 0; add ecx, 0x107e0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00108897: inc esi; into; call dword ptr gs:[0x10]; 
0x000923f5: inc esi; iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000baee3: inc esi; jle 0xbaef2; add byte ptr [ecx + 0x10b08dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00173ed2: inc esi; lock inc dword ptr [ebx - 0x17aaeb3c]; ret 0xeaf2; 
0x00024b87: inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b130370], ecx; jmp dword ptr [ebp + 0x33]; 
0x0011b829: inc esi; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00156421: inc esi; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0014b04f: inc esi; or al, 0x39; ret; 
0x00168199: inc esi; or al, 0x56; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016b0bc: inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0005a928: inc esi; or al, 0x89; inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x0008aeaf: inc esi; or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00102cdd: inc esi; or al, 0x8b; je 0x102d06; sub al, 0x83; ret; 
0x000dd6cc: inc esi; or al, 0xe9; mov byte ptr [0xffffff6], al; mov esi, 0x246c8903; add al, 0x83; ret; 
0x00081d18: inc esi; or al, 1; ret 0xc101; 
0x00083d56: inc esi; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0008c519: inc esi; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00077c03: inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000fb784: inc esi; or byte ptr [ebx - 0x14f7dbac], cl; jge 0x830fde05; ret; 
0x000871cc: inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0004003f: inc esi; or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x001743b4: inc esi; or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0017b061: inc esi; or byte ptr [ecx], al; ret; 
0x0003e7a0: inc esi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0007eb06: inc esi; or eax, dword ptr [eax]; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x000f7e98: inc esi; pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x00108154: inc esi; pop eax; stc; call dword ptr [eax - 0x18]; 
0x0009e6b4: inc esi; push cs; add byte ptr [ecx + 0x19875dc2], al; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0009e672: inc esi; push cs; add byte ptr [ecx + 0x19879fc1], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x000f7f86: inc esi; push ebx; setne al; ret; 
0x0013c038: inc esi; ret 0x4489; 
0x0019ec2b: inc esi; ret 0x5d5e; 
0x000a4306: inc esi; ret 0x8388; 
0x0013a1ba: inc esi; ret 0xbe0f; 
0x00158856: inc esi; ret 0xfff4; 
0x0008c9bc: inc esi; sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x00132009: inc esi; sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x00162aea: inc esi; sbb al, 0x83; clc; dec dword ptr [edi]; test byte ptr [esi + edi*8 - 1], bh; call dword ptr [eax - 0x73]; 
0x00132c59: inc esi; sbb al, 0x89; ret; 
0x00184fae: inc esi; sbb al, 1; ret 0x4689; 
0x00165ba0: inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e6602: inc esi; sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00183bb7: inc esi; sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x0010a1dc: inc esi; sub al, 0x6a; jg 0x10a1c9; mov ecx, edi; std; call dword ptr [ecx + 0x6a]; 
0x0008af5c: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00089454: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000860f9: inc esi; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x001a2949: inc esi; test dh, 0x40; jne 0x1a2994; add eax, 0xf; ret; 
0x0006bc09: inc esi; test eax, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x000bf5a4: inc esp; adc al, dh; ret; 
0x000bf5d4: inc esp; adc byte ptr [eax], ah; ret; 
0x0016a1cc: inc esp; adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x000bf5c4: inc esp; adc byte ptr [eax], dl; ret; 
0x000a6933: inc esp; adc eax, 0x83e87401; ret 0x8b01; 
0x0019034b: inc esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009d3b8: inc esp; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005f76d: inc esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax + 0x68]; 
0x00098fb3: inc esp; add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x0006405c: inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x001206fd: inc esp; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00120a72: inc esp; add byte ptr [eax], al; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0009a26d: inc esp; add byte ptr [edx], al; ret; 
0x0013d001: inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x000bf59b: inc esp; add dh, byte ptr [eax]; ret; 
0x00064723: inc esp; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x0016f812: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00151405: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000bf16b: inc esp; add dword ptr [eax], edx; ret; 
0x000bf18b: inc esp; add dword ptr [eax], esi; ret; 
0x000bf17b: inc esp; add dword ptr [eax], esp; ret; 
0x00168b98: inc esp; add edi, ebp; call dword ptr [eax - 0x73]; 
0x0011b139: inc esp; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x000f827b: inc esp; add esp, 0x18; pop ebx; ret; 
0x00063492: inc esp; and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0006344a: inc esp; and al, 0x10; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00139652: inc esp; and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0003b411: inc esp; and al, 0x10; and eax, 0x80000000; ret; 
0x0015465c: inc esp; and al, 0x10; call 0x180100; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x000408e5: inc esp; and al, 0x10; call eax; 
0x0003b552: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003b781: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003b547: inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0018ba31: inc esp; and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0012da13: inc esp; and al, 0x10; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x00130006: inc esp; and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x12fed0; add esp, 4; ret; 
0x0012d061: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00092446: inc esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000a5a7a: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00140d2e: inc esp; and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0006f739: inc esp; and al, 0x14; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0006faf9: inc esp; and al, 0x14; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x001271fd: inc esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00024d3e: inc esp; and al, 0x14; call eax; 
0x0012d069: inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012dd07: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d890: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00093e86: inc esp; and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006d08c: inc esp; and al, 0x18; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x0006179c: inc esp; and al, 0x18; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x00063812: inc esp; and al, 0x18; add eax, dword ptr [ecx + edx*4 - 0x72e94]; jmp eax; 
0x00064f09: inc esp; and al, 0x18; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00064791: inc esp; and al, 0x18; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x0006400b: inc esp; and al, 0x18; add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x0016f3d0: inc esp; and al, 0x18; call dword ptr [eax + 0x10]; 
0x001842ef: inc esp; and al, 0x18; call dword ptr [eax + 0x40]; 
0x00110c8a: inc esp; and al, 0x18; call eax; 
0x0016865c: inc esp; and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000e4d2c: inc esp; and al, 0x18; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0012c9a8: inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012e603: inc esp; and al, 0x18; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000704c5: inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00063df3: inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x000e24e8: inc esp; and al, 0x1c; add eax, dword ptr [eax + ecx*4 - 0x70488]; jmp eax; 
0x0009e3c6: inc esp; and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x000379bb: inc esp; and al, 0x1c; push dword ptr [eax]; call 0xbf640; add esp, 0x1c; ret; 
0x00174ef8: inc esp; and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x174f08; add esp, 0x2c; ret; 
0x0006f176: inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x001688da: inc esp; and al, 0x20; call eax; 
0x0003d252: inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000632b9: inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000704d5: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000646e1: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000dd1a5: inc esp; and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x0017319e: inc esp; and al, 0x24; add eax, 0x8b000000; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0008c3b4: inc esp; and al, 0x24; call eax; 
0x0012cd30: inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012ceab: inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012da17: inc esp; and al, 0x24; mov eax, 0x66; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x0011e88e: inc esp; and al, 0x24; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000704f5: inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00064769: inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00103b88: inc esp; and al, 0x28; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x0016a63a: inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x00040f31: inc esp; and al, 0x28; call eax; 
0x00040f5d: inc esp; and al, 0x28; mov dword ptr [esp + 0x24], edx; call eax; 
0x0012cada: inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d93b: inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001119d0: inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000635b8: inc esp; and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x0015cb40: inc esp; and al, 0x2c; call 0x180100; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0015cb4c: inc esp; and al, 0x2c; call eax; 
0x0009b9c0: inc esp; and al, 0x2c; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000985a5: inc esp; and al, 0x2c; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0006ee5c: inc esp; and al, 0x30; add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x00070505: inc esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000985b0: inc esp; and al, 0x30; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012cc8c: inc esp; and al, 0x30; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cdb2: inc esp; and al, 0x30; mov eax, 0x66; mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x0009dcf4: inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00070575: inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00157fed: inc esp; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0002efa1: inc esp; and al, 0x34; call eax; 
0x0012cd2c: inc esp; and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000825f0: inc esp; and al, 0x34; push eax; call ebx; 
0x000d88d7: inc esp; and al, 0x34; push eax; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000d1aa8: inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000647c1: inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x0012ca4b: inc esp; and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d504: inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cd34: inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00086319: inc esp; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0006f321: inc esp; and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00070515: inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000646f1: inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x000c19a9: inc esp; and al, 0x3c; call eax; 
0x0012dd0b: inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017300e: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x17301e; add esp, 0x4c; ret; 
0x0017307e: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x17308e; add esp, 0x4c; ret; 
0x001730ee: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1730fe; add esp, 0x4c; ret; 
0x00173151: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x173161; add esp, 0x4c; ret; 
0x001731b1: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1731c1; add esp, 0x4c; ret; 
0x0017321e: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x17322e; add esp, 0x4c; ret; 
0x0017329e: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1732ae; add esp, 0x4c; ret; 
0x00064759: inc esp; and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x0012d065: inc esp; and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c0c2f: inc esp; and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00081910: inc esp; and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0009d3b6: inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006405a: inc esp; and al, 0x44; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00064721: inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp edx; 
0x00159bee: inc esp; and al, 0x44; call eax; 
0x000e3d96: inc esp; and al, 0x44; dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x0012d894: inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c1691: inc esp; and al, 0x44; push dword ptr [eax]; call edi; 
0x000c22ea: inc esp; and al, 0x44; push eax; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x00091739: inc esp; and al, 0x46; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x0006f79f: inc esp; and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0014b586: inc esp; and al, 0x48; add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x0014ab65: inc esp; and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x0014b7ae: inc esp; and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x0016f743: inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0016f5ed: inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x0002846d: inc esp; and al, 0x48; call eax; 
0x001549ef: inc esp; and al, 0x48; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x00064216: inc esp; and al, 0x4c; add byte ptr [ecx], ch; retf 0x490f; ret 0x4489; 
0x00043c78: inc esp; and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8d0f; 
0x00063b16: inc esp; and al, 0x4c; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00029beb: inc esp; and al, 0x4c; call eax; 
0x0003711e: inc esp; and al, 0x50; add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x0002c71d: inc esp; and al, 0x54; call eax; 
0x001574e4: inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000636d1: inc esp; and al, 0x58; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00169cc9: inc esp; and al, 0x5c; call eax; 
0x0012da7e: inc esp; and al, 0x60; mov dword ptr [esp + 0x18], edi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d933: inc esp; and al, 0x60; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c431a: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c1c3c: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0012cc84: inc esp; and al, 0x68; mov dword ptr [esp + 0x38], edi; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129655: inc esp; and al, 0x68; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012965f: inc esp; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0002a14d: inc esp; and al, 0x70; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x001407fc: inc esp; and al, 0x74; and byte ptr [edi], cl; test dword ptr [0x89fffffe], ebp; ret 0xf883; 
0x0011e892: inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d8229: inc esp; and al, 0x78; call eax; 
0x0002f0d0: inc esp; and al, 0x78; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x001329a1: inc esp; and al, 0xc; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x0003c4d4: inc esp; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006032f: inc esp; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000a46c7: inc esp; and al, 0xc; call dword ptr [edx]; 
0x0003b8d8: inc esp; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008e783: inc esp; and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000e5004: inc esp; and al, 0xc; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00125236: inc esp; and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125ad6: inc esp; and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0012d23d: inc esp; and al, 0xc; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000e4fce: inc esp; and al, 0xc; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0012d1ff: inc esp; and al, 0xc; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012ca4f: inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011b557: inc esp; and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a4611: inc esp; and al, 0xc; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x0012f0d1: inc esp; and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0003d081: inc esp; and al, 0xc; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d039: inc esp; and al, 0xc; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0009d970: inc esp; and al, 0xc; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9b0: inc esp; and al, 0xc; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009d6f0: inc esp; and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009d730: inc esp; and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00106fcc: inc esp; and al, 0xc; movzx edx, byte ptr [ebx + 4]; mov ecx, dword ptr [eax + edx*4 - 0x6f5e8]; add ecx, eax; jmp ecx; 
0x0003b4d1: inc esp; and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000be323: inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x001a47a3: inc esp; and al, 0xc; pop edi; ret; 
0x00024e23: inc esp; and al, 0xc; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0015186e: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x15187e; add esp, 0x1c; ret; 
0x0017377f: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x001737c7: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x173804; add esp, 0x1c; ret; 
0x0003e8a2: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b5: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x001762f1: inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013cb51: inc esp; and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0008eab1: inc esp; and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00085c21: inc esp; and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x000342f1: inc esp; and al, 4; and eax, 0x7f; ret; 
0x0013a721: inc esp; and al, 4; bswap eax; ret; 
0x00033ab0: inc esp; and al, 4; call edx; 
0x0008ccdc: inc esp; and al, 4; cmp dword ptr [eax], 1; je 0x8cce8; ret; 
0x00054462: inc esp; and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000544dc: inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0016d573: inc esp; and al, 4; jmp edx; 
0x00098611: inc esp; and al, 4; lock dec dword ptr [eax]; jne 0x98620; xor eax, eax; ret; 
0x001097e7: inc esp; and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0010980f: inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008ebb9: inc esp; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00097bb1: inc esp; and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0008eeb1: inc esp; and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00098651: inc esp; and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003b8dc: inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0012c8fd: inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00111aae: inc esp; and al, 4; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0014d1b1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x00176321: inc esp; and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00173f5d: inc esp; and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008b181: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x001828b1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001828d1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00182951: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00182941: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x001828e1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009beb1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x0011e661: inc esp; and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00182895: inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00084f61: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00084f11: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0009e5ec: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9e600; ret; 
0x0009e67c: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9e690; ret; 
0x0009e62c: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9e640; ret; 
0x000e5b01: inc esp; and al, 4; mov eax, dword ptr [eax]; ret; 
0x0012cea7: inc esp; and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cad6: inc esp; and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000a63b2: inc esp; and al, 4; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x00176301: inc esp; and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00110e91: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001828c1: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008e9b1: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001097d1: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008ae41: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00182881: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f81: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001097c1: inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00085c31: inc esp; and al, 4; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00085c41: inc esp; and al, 4; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0008b191: inc esp; and al, 4; ret; 
0x0013a732: inc esp; and al, 4; rol ax, 8; ret; 
0x00092375: inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x00088db1: inc esp; and al, 4; test byte ptr [eax], 0x80; jne 0x88dc0; ret; 
0x0010e30e: inc esp; and al, 8; add eax, dword ptr [eax + esi*4 - 0x6ede0]; jmp eax; 
0x0010d5e4: inc esp; and al, 8; add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x0010d405: inc esp; and al, 8; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x000bfe62: inc esp; and al, 8; cld; pop edi; ret; 
0x00092371: inc esp; and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003bbe0: inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008e6b8: inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000e4e44: inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0010b1c8: inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0011b901: inc esp; and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011c6a1: inc esp; and al, 8; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011c6e7: inc esp; and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0012cade: inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012debb: inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012dfbb: inc esp; and al, 8; mov eax, 0x75; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00111c16: inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012ca47: inc esp; and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013b402: inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001917a7: inc esp; and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001254fe: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125d9e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f837e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f851e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0007abc8: inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00034471: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034481: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003bfca: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x001096a8: inc esp; and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0007fe7d: inc esp; and al, 8; pop ebx; ret; 
0x000bfe38: inc esp; and al, 8; pop edi; ret; 
0x000baf03: inc esp; and al, 8; pop esi; ret; 
0x00079d93: inc esp; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00086623: inc esp; and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000344b5: inc esp; and al, 8; ret; 
0x00130f95: inc esp; and dword ptr [eax], 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000a9c99: inc esp; call 0x754c939e; add cl, byte ptr [ebp - 0x1785e36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000fa7ff: inc esp; call 0xe6eee; inc dword ptr [ebx - 0x7c72f714]; adc ebx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x00159bf0: inc esp; call eax; 
0x0016cb31: inc esp; cli; jmp dword ptr [ebp - 0x77]; 
0x000bee54: inc esp; cmp al, dh; pop edi; ret; 
0x000bee84: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x000bee74: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x000d0d17: inc esp; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00080330: inc esp; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000e3d98: inc esp; dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x0012d896: inc esp; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012b259: inc esp; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0011d0b6: inc esp; mov eax, edx; pop ebx; pop esi; ret; 
0x000e4cb0: inc esp; mov ebx, dword ptr [esp + 0x40]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe4d50; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0011e9e9: inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0010afea: inc esp; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00033d58: inc esp; nop; inc eax; ret; 
0x000bf134: inc esp; or byte ptr [eax], ah; ret; 
0x000bf144: inc esp; or byte ptr [eax], dh; ret; 
0x000bf124: inc esp; or byte ptr [eax], dl; ret; 
0x000a7754: inc esp; or eax, 0xe8555000; ret 0xf7b8; 
0x000b778e: inc esp; out 0x10, al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000a0d1b: inc esp; pop es; adc byte ptr [ebx - 0x76efdb84], cl; ret 0xfa29; 
0x001941de: inc esp; pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001940be: inc esp; pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019402e: inc esp; pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0019426e: inc esp; pop es; add eax, 0x8b1c035f; jmp ebx; 
0x0019414e: inc esp; pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019480e: inc esp; pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x0019465e: inc esp; pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019453e: inc esp; pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019441e: inc esp; pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00192858: inc esp; pop es; or byte ptr [edi - 0x18], bl; mov eax, 0x81ffff04; ret; 
0x001944ae: inc esp; pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x001946ee: inc esp; pop es; or eax, 0x8b1c035f; jmp ebx; 
0x001945ce: inc esp; pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019438e: inc esp; pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019477e: inc esp; pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001942fe: inc esp; pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c1693: inc esp; push dword ptr [eax]; call edi; 
0x001371c1: inc esp; push eax; add eax, eax; call 0x1f3f4d0; pop ebx; ret; 
0x000c22ec: inc esp; push eax; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x0006102f: inc esp; push es; aad 0x83; ret 0x101; 
0x00180204: inc esp; push es; jmp dword ptr [ecx]; 
0x00122d86: inc esp; pushal; stc; call dword ptr [eax + 0x55]; 
0x00136f35: inc esp; rcl dword ptr [eax - 0x73], 0x87; stc; call dword ptr [eax - 1]; 
0x000def70: inc esp; ret 0x10e9; 
0x0009621a: inc esp; ret 0x118b; 
0x0014c400: inc esp; ret 0x148b; 
0x001826b4: inc esp; ret 0x178b; 
0x000c0db7: inc esp; ret 0x188b; 
0x000c0ca7: inc esp; ret 0x288b; 
0x0010acb4: inc esp; ret 0x2ec3; 
0x000c18a8: inc esp; ret 0x4489; 
0x0015f44d: inc esp; ret 0x4789; 
0x000f7875: inc esp; ret 0x4c89; 
0x000e4f25: inc esp; ret 0x548b; 
0x000a322a: inc esp; ret 0x568d; 
0x000428c6: inc esp; ret 0x66c3; 
0x000fd5fd: inc esp; ret 0x804; 
0x00159028: inc esp; ret 0x8489; 
0x000a608a: inc esp; ret 0x8dc3; 
0x000a0d2e: inc esp; ret 0x938b; 
0x0008c927: inc esp; ret 0x978b; 
0x0010a1d0: inc esp; ret 0xb58b; 
0x000a63bb: inc esp; ret 0xc083; 
0x00121b46: inc esp; ret 0xc483; 
0x00032b04: inc esp; ret 0xc89; 
0x0009e952: inc esp; ret 0xec83; 
0x0003c38b: inc esp; ret 0xefe9; 
0x000311b3: inc esp; ret 0xf289; 
0x000a382d: inc esp; ret 0xf821; 
0x00063af7: inc esp; ret 0xfa89; 
0x0009edde: inc esp; ret 0xff31; 
0x000c0d6c: inc esp; ret 0xff50; 
0x000c1e21: inc esp; ret 0xff65; 
0x0011cc98: inc esp; ret 1; 
0x0014fe65: inc esp; ret 4; 
0x001401fb: inc esp; ret 8; 
0x00026c3e: inc esp; ret; 
0x0013de60: inc esp; ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6474; 
0x0011fd8d: inc esp; sar cl, cl; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0006e474: inc esp; sar ecx, 1; inc dword ptr [ebx - 0x71f0fa05]; ret 0xfff2; 
0x000929a7: inc esp; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x000a2ee1: inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x00086a1b: inc esp; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0015139f: inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x00049879: inc esp; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x0008f31a: inc esp; xchg edi, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00191a4e: inc esp; xor byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003a20a: inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0009e6b3: inc si; push cs; add byte ptr [ecx + 0x19875dc2], al; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax - 0x18]; 
0x001491c6: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0018da58: insb byte ptr es:[edi], dx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018daa7: insb byte ptr es:[edi], dx; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001a9b82: insb byte ptr es:[edi], dx; add byte ptr [eax], al; add cl, ch; ret; 
0x000d85f0: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001734c4: insb byte ptr es:[edi], dx; add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x0014ab8d: insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x000e41f5: insb byte ptr es:[edi], dx; and al, 0x38; add al, 0x8b; je 0xe4220; cmp byte ptr [ecx], ch; ret 0xc889; 
0x0006f934: insb byte ptr es:[edi], dx; and al, 0x40; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00168a07: insb byte ptr es:[edi], dx; and al, 0x40; push ebp; push eax; call dword ptr [ecx + 8]; 
0x000e49f4: insb byte ptr es:[edi], dx; and al, 0xc; push ebp; push ebx; call eax; 
0x0003b556: insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003b785: insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0003b54b: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000e4a21: insb byte ptr es:[edi], dx; and al, 4; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0013b9f8: insb byte ptr es:[edi], dx; call dword ptr gs:[0x10]; 
0x0002b8d0: insb byte ptr es:[edi], dx; call edi; 
0x001578e7: insb byte ptr es:[edi], dx; cmc; int1; call dword ptr [eax + 0x6a]; 
0x000be2bd: insb byte ptr es:[edi], dx; dec edx; or al, 0; add ecx, 0x107db3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000fc4f0: insb byte ptr es:[edi], dx; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0016cb30: insb byte ptr es:[edi], dx; inc esp; cli; jmp dword ptr [ebp - 0x77]; 
0x0018daa6: insb byte ptr es:[edi], dx; insb byte ptr es:[edi], dx; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00025fb1: insb byte ptr es:[edi], dx; int 0x15; add byte ptr [0x210e5f], al; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x0012d860: insb byte ptr es:[edi], dx; int1; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00024f24: insb byte ptr es:[edi], dx; ja 0x24f20; call dword ptr [eax + 0x6a]; 
0x00093a5a: insb byte ptr es:[edi], dx; jge 0x93a56; call dword ptr [eax - 0x73]; 
0x00093a79: insb byte ptr es:[edi], dx; jge 0x93a75; call dword ptr [eax - 0x73]; 
0x00093a98: insb byte ptr es:[edi], dx; jge 0x93a94; call dword ptr [eax - 0x73]; 
0x00029875: insb byte ptr es:[edi], dx; jnp 0x29871; call dword ptr [eax - 0x73]; 
0x0002997c: insb byte ptr es:[edi], dx; jnp 0x29978; call dword ptr [eax - 0x73]; 
0x000299d2: insb byte ptr es:[edi], dx; jnp 0x299ce; call dword ptr [eax - 0x73]; 
0x000299f5: insb byte ptr es:[edi], dx; jnp 0x299f1; call dword ptr [eax + 0x68]; 
0x00029a18: insb byte ptr es:[edi], dx; jnp 0x29a14; call dword ptr [eax + 0x68]; 
0x0002eb3a: insb byte ptr es:[edi], dx; jns 0x2eb36; call dword ptr [eax - 0x73]; 
0x0002ec05: insb byte ptr es:[edi], dx; jns 0x2ec01; call dword ptr [eax - 0x73]; 
0x0002ec3d: insb byte ptr es:[edi], dx; jns 0x2ec39; call dword ptr [eax - 0x73]; 
0x0002ec60: insb byte ptr es:[edi], dx; jns 0x2ec5c; call dword ptr [eax - 0x73]; 
0x0002ec83: insb byte ptr es:[edi], dx; jns 0x2ec7f; call dword ptr [eax - 0x73]; 
0x0002eca6: insb byte ptr es:[edi], dx; jns 0x2eca2; call dword ptr [eax - 0x73]; 
0x0002d460: insb byte ptr es:[edi], dx; jp 0x2d45c; call dword ptr [eax - 0x73]; 
0x0002d687: insb byte ptr es:[edi], dx; jp 0x2d683; call dword ptr [eax - 0x73]; 
0x0002d7ac: insb byte ptr es:[edi], dx; jp 0x2d7a8; call dword ptr [eax + 0x68]; 
0x0002d859: insb byte ptr es:[edi], dx; jp 0x2d855; call dword ptr [eax - 0x73]; 
0x0002d8c2: insb byte ptr es:[edi], dx; jp 0x2d8be; call dword ptr [eax + 0x68]; 
0x000a8e98: insb byte ptr es:[edi], dx; lcall 0x1076, 0x41f6fff6; cmove eax, edx; ret; 
0x00052264: insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000e7139: insb byte ptr es:[edi], dx; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00090e9f: insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0011d72e: insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00129661: insb byte ptr es:[edi], dx; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0011d674: insb byte ptr es:[edi], dx; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000a9bdc: insb byte ptr es:[edi], dx; mov eax, 0x450ffff6; ret 0x66c3; 
0x000419d9: insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000a9e0c: insb byte ptr es:[edi], dx; mov edi, 0x450ffff6; ret 0x66c3; 
0x0002a5ce: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002eee4: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007a3bb: insb byte ptr es:[edi], dx; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0008b15c: insb byte ptr es:[edi], dx; push cs; add byte ptr [eax], al; ret; 
0x0002b8cc: insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x00029be0: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002daf6: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c712: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0014eb4f: insb byte ptr es:[edi], dx; ret 0xfff9; 
0x0014781e: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0014bf6a: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x00132010: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 1]; 
0x00131fa5: insb byte ptr es:[edi], dx; stc; call dword ptr [edx + 0x50]; 
0x0008c3db: insb byte ptr es:[edi], dx; stc; jmp dword ptr [esi - 0x70]; 
0x0005d174: insb byte ptr es:[edi], dx; std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x6747f7d]; call dword ptr [eax - 0x73]; 
0x0005d100: insb byte ptr es:[edi], dx; std; dec dword ptr [ebx - 0x8b6b]; dec dword ptr [ebp - 0x6747f7e]; call dword ptr [eax - 0x73]; 
0x00162246: insb byte ptr es:[edi], dx; std; jmp dword ptr [esi - 0x70]; 
0x000a8dc1: insb byte ptr es:[edi], dx; stosb byte ptr es:[edi], al; stc; call dword ptr [edx - 0x73]; 
0x000889d3: insb byte ptr es:[edi], dx; sub eax, 1; mov dword ptr [ebx + 0x1a78], eax; add esp, 8; pop ebx; ret; 
0x0005e80d: insb byte ptr es:[edi], dx; sub eax, dword ptr gs:[0x14]; jne 0x5e82e; add esp, 0x78; pop ebx; ret; 
0x0010fe24: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x10fe46; add esp, 0x78; pop ebx; ret; 
0x0012de30: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x12de3e; add esp, 0x7c; ret; 
0x000606ff: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x6070e; add esp, 0x78; pop ebx; ret; 
0x000edbe4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xedc06; add esp, 0x78; pop ebx; ret; 
0x000f0694: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf06b6; add esp, 0x78; pop ebx; ret; 
0x000f1464: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf1486; add esp, 0x78; pop ebx; ret; 
0x000f3f04: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf3f26; add esp, 0x78; pop ebx; ret; 
0x000f4ce4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf4d06; add esp, 0x78; pop ebx; ret; 
0x00031d96: insb byte ptr es:[edi], dx; xchg esi, eax; idiv edi; add ecx, ebx; jmp ecx; 
0x0009a0c4: insb byte ptr es:[edi], dx; xor ah, dh; jmp dword ptr [ebp - 0x5d]; 
0x0003fb12: insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00057a9e: insd dword ptr es:[edi], dx; add al, 0; add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x001089c6: insd dword ptr es:[edi], dx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00139053: insd dword ptr es:[edi], dx; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0007cbe9: insd dword ptr es:[edi], dx; cli; jmp dword ptr [esi - 0x70]; 
0x0014b8b4: insd dword ptr es:[edi], dx; je 0x14b8ba; add byte ptr [ecx + 0xeb55cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000bebe2: insd dword ptr es:[edi], dx; lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000765c7: insd dword ptr es:[edi], dx; mov edi, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0014cff8: insd dword ptr es:[edi], dx; out dx, al; dec dword ptr [ebp - 0x63f3f7a]; call dword ptr [eax - 0x73]; 
0x000c2113: insd dword ptr es:[edi], dx; pop es; add byte ptr [ebx - 0x72e3dbac], cl; add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x0014fedc: insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x53]; 
0x0014fe94: insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x56]; 
0x0014d011: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0014e700: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; ja 0x14e75d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014ec00: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; ja 0x14ec58; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014eac0: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; mov bh, 0x52; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e5c0: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; mov bh, 0x57; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e480: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; neg dword ptr [eax - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0014e980: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; not dword ptr [ebx - 0x12]; jmp dword ptr [esi - 0x70]; 
0x00151445: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 1]; 
0x001501aa: insd dword ptr es:[edi], dx; stc; call dword ptr [ebx - 0x73]; 
0x000b82bc: insd dword ptr es:[edi], dx; stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ec93b: int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a0c8: int 0x10; add byte ptr [ebx - 0x48], dl; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00025fd2: int 0x15; add byte ptr [0x210e3f], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00025fb2: int 0x15; add byte ptr [0x210e5f], al; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000be25c: int 0x4a; or al, 0; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000eda46: int 0x5b; ret; 
0x00039f8c: int 0x80; 
0x0010ad16: int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003854f: int 0x83; in al, dx; or al, 0x83; ret; 
0x00183b25: int 0xe8; mov ch, 0x53; sti; jmp dword ptr [esi - 0x70]; 
0x00173962: int 0xf3; call dword ptr [eax - 0x73]; 
0x0018b2b6: int 0xf8; jmp dword ptr [esi - 0x70]; 
0x00029868: int 0xf; test dword ptr [edi], eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00118d2a: int 0xfc; jmp dword ptr [ebp - 0x77]; 
0x00195f76: int 0xfe; inc dword ptr [ecx + 0x3f117c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000767af: int 0xff; call dword ptr [edx - 0x75]; 
0x000b6b1f: int1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00191121: int1; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000dbcfd: int1; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc dword ptr [eax], -0x52; stc; call dword ptr [eax - 0x18]; 
0x0015d06b: int1; add eax, 0xc483fff3; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000a607e: int1; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00195f7c: int1; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008f317: int1; add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00192924: int1; add edi, edi; inc dword ptr [ecx + 0x42168c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008d6a7: int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x00190b24: int1; and edi, edi; inc dword ptr [ecx + 0x43ce8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001578e9: int1; call dword ptr [eax + 0x6a]; 
0x00152575: int1; call dword ptr [eax - 0x18]; 
0x0015261e: int1; call dword ptr [eax - 0x73]; 
0x00153376: int1; call dword ptr [eax - 1]; 
0x0014d9ca: int1; call dword ptr [ebx + 0x50]; 
0x0019fde4: int1; call dword ptr [ebx - 0x18]; 
0x001a02e4: int1; call dword ptr [ebx - 0x18]; sub eax, 0x81fffe2a; ret; 
0x0019fde4: int1; call dword ptr [ebx - 0x18]; sub eax, 0x81fffe2f; ret; 
0x0009e844: int1; call dword ptr [edx + 0x51]; 
0x00158896: int1; call dword ptr [edx + 0x6a]; 
0x0014d655: int1; call dword ptr [esi + 0x50]; 
0x0009d2da: int1; call dword ptr gs:[0x10]; 
0x00169db1: int1; cld; jmp dword ptr [esi - 0x70]; 
0x0012d861: int1; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00031b5e: int1; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0010dab5: int1; dec dword ptr [ecx - 0x76ebdbbc]; ret 0xc483; 
0x0017b8b1: int1; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00106b24: int1; inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x0010959b: int1; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x0015e4ac: int1; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x0010892d: int1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010894d: int1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010ad0d: int1; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x00155365: int1; int1; call dword ptr [eax - 1]; 
0x0012054a: int1; jmp dword ptr [esi - 0x70]; 
0x00071a7a: int1; jmp ecx; 
0x0002cc8b: int1; jo 0x2cc8e; add al, ch; dec esp; ret 0x10; 
0x00173ff7: int1; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0003fb75: int1; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000a93be: int1; mov eax, edx; pop ebx; ret; 
0x00042466: int1; mov eax, edx; ret; 
0x0018198b: int1; mov ebx, 0xc483fff0; adc bl, ch; ret; 
0x000984a8: int1; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017e40e: int1; mov edx, dword ptr [ecx]; add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x00156c6e: int1; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x00111bde: int1; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00111c12: int1; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00111a34: int1; mov edx, edi; call dword ptr gs:[0x10]; 
0x00111aaa: int1; mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000424ee: int1; pop ds; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000427c0: int1; pop ds; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x000420e6: int1; pop ds; shr eax, cl; ret; 
0x000a94be: int1; pop ebx; pop esi; ret; 
0x00052f6e: int1; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00117eeb: int1; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x001a3142: int1; pop edi; ret; 
0x00122e70: int1; popal; stc; call dword ptr [eax + 0x55]; 
0x0010dab3: int1; push esi; int1; dec dword ptr [ecx - 0x76ebdbbc]; ret 0xc483; 
0x001a2137: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00095e01: int1; xchg dword ptr [eax + 0xf0], edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00099950: int1; xor eax, eax; pop ebx; ret; 
0x000a485e: int1; xor eax, eax; ret; 
0x000322e5: into; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x000d4ae5: into; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00060569: into; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0012ece3: into; add dword ptr [ebx + 0x18], edi; call dword ptr gs:[0x10]; 
0x000be131: into; bsf edx, edx; call 0x182d2d; add ecx, 0x107eba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be113: into; bsf edx, edx; call 0x182d2d; add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae31: into; bsf edx, edx; call 0x182d2d; add ecx, 0x10b13a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae13: into; bsf edx, edx; call 0x182d2d; add ecx, 0x10b158; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8143: into; bsf edx, edx; call 0x182d2d; add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b13: into; bsf edx, edx; call 0x182d2d; add ecx, 0x10f1a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be2db: into; call 0x182d2d; add ecx, 0x107d93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2bb: into; call 0x182d2d; add ecx, 0x107db3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be29e: into; call 0x182d2d; add ecx, 0x107dd0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b831b: into; call 0x182d2d; add ecx, 0x10db7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82fe: into; call 0x182d2d; add ecx, 0x10db9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cfb: into; call 0x182d2d; add ecx, 0x10f03f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cdb: into; call 0x182d2d; add ecx, 0x10f05f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cbe: into; call 0x182d2d; add ecx, 0x10f07c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00105420: into; call dword ptr [edi - 0x18]; 
0x00108898: into; call dword ptr gs:[0x10]; 
0x000a654b: into; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00108895: into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0002872e: into; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00024eb4: into; cmp cl, bh; call dword ptr [eax - 1]; 
0x000bfae3: into; jmp ebx; 
0x000c0430: into; jne 0xc0436; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0015e45a: into; jo 0x15e456; call dword ptr [eax - 0x18]; 
0x0015e5da: into; jo 0x15e5d6; call dword ptr [eax - 0x73]; 
0x0004209a: into; lea esi, cs:[esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x0015de0e: into; mov al, 0xfd; jmp dword ptr [esi - 0x70]; 
0x000975b7: into; mov eax, 0x10; pop ebx; ret; 
0x00046466: into; mov eax, esi; pop esi; pop edi; ret; 
0x0011223f: into; or byte ptr [ebp - 0x75], ah; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0009ab43: into; or dword ptr [esi], 0xcdc78100; ret 0x19; 
0x00154680: into; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x0015354c: into; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00181f0e: into; outsd dx, dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x0018fc47: into; xor bh, bh; inc dword ptr [ecx + 0x44bc5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b8f74: iretd; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000eeb0a: iretd; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f5bfa: iretd; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x00166946: iretd; add al, 0xd; add byte ptr [ebx - 0x7f72eb14], al; push ebp; jae 0x16694b; call dword ptr [eax + 0x6a]; 
0x000b535d: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00145d42: iretd; add eax, dword ptr [eax]; add eax, 0xf10cf; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr gs:[eax]; ret; 
0x0019453a: iretd; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001945ca: iretd; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019465a: iretd; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946ea: iretd; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019477a: iretd; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019480a: iretd; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019402a: iretd; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001940ba: iretd; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019414a: iretd; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001941da: iretd; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019426a: iretd; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001942fa: iretd; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019438a: iretd; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019441a: iretd; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001944aa: iretd; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b82fc: iretd; add esi, ecx; call 0x182d2d; add ecx, 0x10db9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cbc: iretd; add esi, ecx; call 0x182d2d; add ecx, 0x10f07c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001929c3: iretd; and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000be15a: iretd; dec ebx; or al, 0; add ecx, 0x107e96; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b7873: iretd; in al, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00190143: iretd; inc esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bae5a: iretd; jle 0xbae69; add byte ptr [ecx + 0x10b116c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00064798: iretd; jmp eax; 
0x0002562e: iretd; jmp edi; 
0x000635c0: iretd; jmp edx; 
0x00082c4a: iretd; mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x00063490: iretd; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x00063448: iretd; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x00063df1: iretd; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00064058: iretd; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x0012d101: iretd; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000923f6: iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000923f0: iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0005ab36: iretd; or eax, 0xc0868d00; mov ecx, edi; call dword ptr [eax - 0x73]; 
0x00096166: iretd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00036410: iretd; pop ebx; pop esi; pop edi; ret; 
0x0018ebc3: iretd; pop ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00024f46: iretd; push ds; and dword ptr [eax], eax; lea eax, [eax - 0x680ac]; ret; 
0x00085c26: iretd; ret; 
0x0010a1e2: iretd; std; call dword ptr [ecx + 0x6a]; 
0x00191ec3: iretd; sub eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00108b7a: ja 0x108b80; pop ebx; pop esi; ret; 
0x001097be: ja 0x1097c9; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0010980c: ja 0x10981a; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00109edc: ja 0x109f50; mov edx, dword ptr [ebp - 0x148]; mov eax, dword ptr [ebx]; mov ecx, dword ptr [edx + eax*4 - 0x6f3b4]; add ecx, edx; jmp ecx; 
0x0010a90f: ja 0x10a930; mov eax, dword ptr [ebx + ebp*4 - 0x6f150]; add eax, ebx; jmp eax; 
0x0010a722: ja 0x10a930; mov eax, dword ptr [ebx + edx*4 - 0x6f390]; add eax, ebx; jmp eax; 
0x0010a8e7: ja 0x10ac25; mov eax, dword ptr [ebx + edx*4 - 0x6f248]; add eax, ebx; jmp eax; 
0x0010e307: ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ede0]; jmp eax; 
0x0010d402: ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x0010dc83: ja 0x10d5f0; mov eax, dword ptr [ebx + esi*4 - 0x6eea0]; add eax, ebx; jmp eax; 
0x0010d5e1: ja 0x10d5f0; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x0010ee34: ja 0x10ee50; mov esi, dword ptr [esp + 0xc]; movzx edx, dl; mov ecx, dword ptr [esi + edx*4 - 0x6ec98]; add ecx, esi; jmp ecx; 
0x0010fbd8: ja 0x10fbe0; pop ebx; pop esi; ret; 
0x00110ed5: ja 0x110ee0; pop ebx; ret; 
0x00110f45: ja 0x110f50; pop ebx; ret; 
0x00110fcf: ja 0x111020; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111223: ja 0x111270; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111305: ja 0x111310; pop ebx; ret; 
0x0011271b: ja 0x112720; pop ebx; pop esi; ret; 
0x00114062: ja 0x114070; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00115a42: ja 0x115a50; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00117422: ja 0x117430; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00117c63: ja 0x117c71; call dword ptr [edi + 0x24]; 
0x00117e87: ja 0x117e95; call dword ptr [edi + 0x24]; 
0x00117fa6: ja 0x117fb4; call dword ptr [edi + 0x24]; 
0x00118cd3: ja 0x118ce1; call dword ptr [edi + 0x24]; 
0x00118ef7: ja 0x118f05; call dword ptr [edi + 0x24]; 
0x00119016: ja 0x119024; call dword ptr [edi + 0x24]; 
0x00119d73: ja 0x119d81; call dword ptr [edi + 0x24]; 
0x00119f97: ja 0x119fa5; call dword ptr [edi + 0x24]; 
0x0011a0b6: ja 0x11a0c4; call dword ptr [edi + 0x24]; 
0x0011b245: ja 0x11b250; pop ebx; ret; 
0x0011b755: ja 0x11b760; pop ebx; ret; 
0x0011b849: ja 0x11b858; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0011bdc3: ja 0x11bdd0; pop ebx; ret; 
0x0011be58: ja 0x11beb0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011c828: ja 0x11c880; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011c8da: ja 0x11c8e0; pop ebx; pop esi; ret; 
0x0011c951: ja 0x11c958; pop ebx; ret; 
0x0011c99f: ja 0x11c9a8; pop ebx; pop esi; pop edi; ret; 
0x0011c9ef: ja 0x11c9f8; pop ebx; pop esi; pop edi; ret; 
0x0011cc1b: ja 0x11cc20; pop ebx; pop esi; ret; 
0x0011cff5: ja 0x11d000; pop ebx; ret; 
0x0011d4f1: ja 0x11d4f8; pop ebx; ret; 
0x0011d8c8: ja 0x11d920; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011d991: ja 0x11d998; pop ebx; ret; 
0x0011dea1: ja 0x11dec0; pop ebx; pop esi; pop edi; ret; 
0x0011df1e: ja 0x11df30; pop ebx; pop esi; pop edi; ret; 
0x0011df90: ja 0x11dfb0; pop ebx; pop esi; pop edi; ret; 
0x0011e00d: ja 0x11e020; pop ebx; pop esi; pop edi; ret; 
0x0011e074: ja 0x11e080; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011e0ca: ja 0x11e0d0; pop ebx; pop esi; ret; 
0x0011e43a: ja 0x11e440; pop ebx; pop esi; ret; 
0x0011eb5a: ja 0x11ebb0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011edb5: ja 0x11edc0; pop ebx; ret; 
0x0011ee05: ja 0x11ee10; pop ebx; ret; 
0x0011ef0b: ja 0x11ef18; pop ebx; pop esi; pop edi; ret; 
0x0011ef5b: ja 0x11ef68; pop ebx; pop esi; pop edi; ret; 
0x0011f648: ja 0x11f65b; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012057f: ja 0x1205d0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00120aaf: ja 0x120b00; add esp, 0x14; pop ebx; pop esi; ret; 
0x00120b55: ja 0x120b60; pop ebx; ret; 
0x00120baa: ja 0x120bb0; pop ebx; pop esi; ret; 
0x00123fca: ja 0x123fd0; pop ebx; pop esi; ret; 
0x001250b8: ja 0x125110; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00126658: ja 0x1266b0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012670c: ja 0x126718; pop ebx; pop esi; ret; 
0x00127d95: ja 0x127da0; pop ebx; ret; 
0x00127dea: ja 0x127df0; pop ebx; pop esi; ret; 
0x00127e61: ja 0x127e90; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x00127ef1: ja 0x127f20; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x00128fcf: ja 0x128fd8; mov eax, ecx; pop ebx; ret; 
0x00129178: ja 0x1291d0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012a0e1: ja 0x12a0e8; pop ebx; ret; 
0x0012a725: ja 0x12a730; pop ebx; ret; 
0x0012a838: ja 0x12a840; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012a88c: ja 0x12a890; ret; 
0x0012a985: ja 0x12a990; pop ebx; ret; 
0x0012aa8f: ja 0x12aad0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012ab28: ja 0x12ab80; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012ac44: ja 0x12ac68; pop ebx; pop esi; pop edi; ret; 
0x0012aedf: ja 0x12aee8; pop ebx; pop esi; pop edi; ret; 
0x0012b17f: ja 0x12b188; pop ebx; pop esi; pop edi; ret; 
0x0012b2c0: ja 0x12b2d0; pop ebx; pop esi; pop edi; ret; 
0x0012b975: ja 0x12b980; pop ebx; ret; 
0x0012bc05: ja 0x12bc10; pop ebx; ret; 
0x0012e061: ja 0x12e070; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012e553: ja 0x12e560; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012ebcf: ja 0x12ebe0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012ec33: ja 0x12ec40; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00137bc7: ja 0x137bd0; sar eax, 5; add esp, 0xc; ret; 
0x00142cc6: ja 0x142c51; ret 0x4439; 
0x0014dad6: ja 0x14dacb; jmp dword ptr [esi - 0x70]; 
0x0014e705: ja 0x14e75d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014ec05: ja 0x14ec58; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015348d: ja 0x153480; call dword ptr [eax - 0x73]; 
0x00153546: ja 0x153539; call dword ptr [eax - 0x73]; 
0x00153603: ja 0x1535f6; call dword ptr [eax - 0x73]; 
0x0015ba84: ja 0x15ba77; call dword ptr [eax - 0x73]; 
0x0015bb36: ja 0x15bb29; call dword ptr [eax - 0x73]; 
0x0015bc04: ja 0x15bbf7; call dword ptr [eax - 0x73]; 
0x0015e3a0: ja 0x15e394; call dword ptr [eax - 0x18]; 
0x0015fe65: ja 0x15fdf7; std; jmp dword ptr [esi - 0x70]; 
0x00161706: ja 0x161705; jmp dword ptr [esi - 0x70]; 
0x0016cc65: ja 0x16cc29; cld; jmp dword ptr [esi - 0x70]; 
0x0016d61f: ja 0x16d630; add eax, dword ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x0016e212: ja 0x16e207; call dword ptr [eax - 0x73]; 
0x001701ad: ja 0x1701c0; add eax, dword ptr [eax + edx*4 - 0x6c910]; jmp eax; 
0x00170add: ja 0x170bf0; add eax, dword ptr [eax + edx*4 - 0x6c8d0]; jmp eax; 
0x0017f22d: ja 0x17f228; call dword ptr [eax - 0x18]; 
0x0017f273: ja 0x17f26e; call dword ptr [eax - 0x18]; 
0x0017f2a4: ja 0x17f29f; call dword ptr [eax - 0x18]; 
0x00181f38: ja 0x181f49; mov eax, edx; mov edx, dword ptr [ecx + 0x108]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x001824ab: ja 0x1824a6; call dword ptr [eax - 0x18]; 
0x001831ea: ja 0x1833e0; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0018426b: ja 0x184338; sub esp, 4; push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00184770: ja 0x184850; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x001848bd: ja 0x1848d0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x001854d3: ja 0x1854e0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0018943b: ja 0x189440; pop ebx; pop esi; ret; 
0x0018b843: ja 0x18b850; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0018b943: ja 0x18b950; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00193f9b: ja 0x193faa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001981b5: ja 0x1981b9; neg eax; ret; 
0x001999f5: ja 0x1999f9; neg eax; pop ebp; ret; 
0x0019c0a5: ja 0x19c0a9; neg eax; add esp, 4; pop ebx; ret; 
0x0019e935: ja 0x19e939; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0019edf5: ja 0x19edf9; neg eax; ret; 
0x0019f0e5: ja 0x19f0e9; neg eax; pop ebp; ret; 
0x0019f2a5: ja 0x19f2a9; neg eax; ret; 
0x0019fd8c: ja 0x19fd90; neg eax; ret; 
0x001a0105: ja 0x1a0109; neg eax; pop edi; pop ebx; ret; 
0x001a0665: ja 0x1a0669; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x001a0ffd: ja 0x1a1001; neg eax; ret; 
0x001a2676: ja 0x1a267a; neg eax; ret; 
0x0005aa2e: ja 0x2352a; mov edx, dword ptr [esi + eax*4 - 0x73764]; add edx, esi; jmp edx; 
0x00181fce: ja 0x24a04; mov eax, dword ptr [ebp - 0x38]; add eax, dword ptr [eax + edx*4 - 0x6c854]; jmp eax; 
0x00182a80: ja 0x24a0e; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00182b86: ja 0x24a13; movzx eax, al; add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x00024f25: ja 0x24f20; call dword ptr [eax + 0x6a]; 
0x00025620: ja 0x25697; mov ecx, dword ptr [esp + 4]; mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x00031d8d: ja 0x32232; mov ecx, dword ptr [ebx + edi*4 - 0x86994]; add ecx, ebx; jmp ecx; 
0x00036d1c: ja 0x36d2c; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e7c]; add esi, edi; jmp esi; 
0x00036de4: ja 0x36df4; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77dd4]; add esi, edi; jmp esi; 
0x00036e1f: ja 0x36e2f; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77d80]; add esi, edi; jmp esi; 
0x00036db7: ja 0x3736c; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x0003739e: ja 0x37403; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77d2c]; add esi, edi; jmp esi; 
0x000374e5: ja 0x37537; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77bdc]; add edx, edi; jmp edx; 
0x000391ae: ja 0x39490; mov ecx, dword ptr [esp + 4]; movzx eax, al; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x0003c20a: ja 0x3c20c; add byte ptr [eax], al; int 0x80; 
0x0003c436: ja 0x3c440; pop ebx; ret; 
0x0003c494: ja 0x3c4e0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003fcb8: ja 0x3fd10; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00058e05: ja 0x58db6; std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x0005f930: ja 0x5f940; mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x000603e5: ja 0x603f0; pop ebx; ret; 
0x0006043f: ja 0x60448; pop ebx; pop esi; pop edi; ret; 
0x00061795: ja 0x61a48; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x00065d07: ja 0x65d2d; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72c7c]; jmp eax; 
0x00066373: ja 0x676f8; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00066290: ja 0x67fab; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; mov edx, dword ptr [ebp - 0x58c]; add eax, dword ptr [eax + ebx*4 - 0x72bf8]; jmp eax; 
0x0006d085: ja 0x6d460; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x00071dde: ja 0x72458; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x7249c]; jmp eax; 
0x00072372: ja 0x72463; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x722c8]; jmp eax; 
0x00077faf: ja 0x77fe8; sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00078776: ja 0x787b0; movzx edx, dl; mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x00078825: ja 0x78850; movzx ecx, cl; mov edi, dword ptr [ebp + ecx*4 - 0x71b54]; add edi, ebp; jmp edi; 
0x00079306: ja 0x79318; mov edi, dword ptr [ebp + eax*4 - 0x719b8]; add edi, ebp; jmp edi; 
0x00079395: ja 0x793c0; mov edi, dword ptr [ebp + ebx*4 - 0x71910]; add edi, ebp; jmp edi; 
0x00079f02: ja 0x7a170; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007a3ba: ja 0x7a428; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007a46f: ja 0x7a560; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ae8b: ja 0x7af80; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007bf3e: ja 0x7bf69; sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007ce6a: ja 0x7cf50; sub esp, 4; push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007d197: ja 0x7d231; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007de75: ja 0x7de92; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0007e206: ja 0x7e260; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007e2f5: ja 0x7e318; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x0007e634: ja 0x7e65f; sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007f60d: ja 0x7f640; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007fdaf: ja 0x7fde0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00080fdc: ja 0x81219; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x00083188: ja 0x833b0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000844ae: ja 0x84433; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008496c: ja 0x84b60; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00084b97: ja 0x84b8f; stc; jmp dword ptr [esi - 0x70]; 
0x00085d31: ja 0x85d58; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00085f88: ja 0x85ff0; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x000860f8: ja 0x86140; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00086884: ja 0x869b0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00086a1a: ja 0x86a60; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00086b00: ja 0x86b70; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00087508: ja 0x87570; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00087ab3: ja 0x88060; sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00087ec3: ja 0x88082; push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00087c32: ja 0x8809c; push 0; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x00088257: ja 0x88280; push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00088696: ja 0x88798; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00088906: ja 0x8891e; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0008994f: ja 0x899b0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000899fd: ja 0x89a20; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00089cf5: ja 0x89da0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0008a1c2: ja 0x8a200; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x0008ac99: ja 0x8ada6; sub esp, 4; push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0008db72: ja 0x8db80; pop ebx; pop esi; pop edi; ret; 
0x0008ebaf: ja 0x8ebb8; ret; 
0x0008eec7: ja 0x8eed8; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00094a6a: ja 0x94b50; mov edx, dword ptr [ebp + eax*4 - 0x714fc]; lea ebx, [edi + 0xc]; add edx, ebp; jmp edx; 
0x00096295: ja 0x962a0; pop ebx; pop esi; pop edi; ret; 
0x00097bd7: ja 0x97be8; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00097bf7: ja 0x97c08; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0009cf81: ja 0x9cf88; pop ebx; ret; 
0x0009d4aa: ja 0x9d4c8; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0009d59a: ja 0x9d5a0; pop ebx; pop esi; ret; 
0x0009dafb: ja 0x9db08; mov eax, ecx; pop ebx; ret; 
0x0009dea9: ja 0x9deb0; pop ebx; ret; 
0x0009f302: ja 0x9f2ea; call dword ptr [eax + 0x57]; 
0x0009f314: ja 0x9f2fc; call dword ptr [eax + 0x57]; 
0x0009f338: ja 0x9f320; call dword ptr [eax + 0x57]; 
0x0009f35c: ja 0x9f344; call dword ptr [eax + 0x57]; 
0x0009f36e: ja 0x9f356; call dword ptr [eax + 0x57]; 
0x0009f380: ja 0x9f368; call dword ptr [eax + 0x57]; 
0x0009f679: ja 0x9f694; add byte ptr [ebx - 0x77], dl; ret; 
0x000a429b: ja 0xa42c0; mov ecx, dword ptr [ebx + eax*4 - 0x71254]; add ecx, ebx; jmp ecx; 
0x000a5ea1: ja 0xa5e80; pop ebx; pop esi; pop edi; ret; 
0x000a6eb4: ja 0xa6ebd; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a6ed4: ja 0xa6edd; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000a971f: ja 0xa9733; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97df: ja 0xa980b; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x000be972: ja 0xbe980; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000c09c7: ja 0xc0aa0; mov ecx, dword ptr [edx + eax*4 - 0x70c9c]; add ecx, edx; jmp ecx; 
0x000d92c3: ja 0xd92d0; pop ebx; ret; 
0x000e24e1: ja 0xe25f0; mov eax, dword ptr [esp + 0x1c]; add eax, dword ptr [eax + ecx*4 - 0x70488]; jmp eax; 
0x000e4cbc: ja 0xe4d50; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e4dd5: ja 0xe4e68; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e5df4: ja 0xe5e00; pop ebx; pop esi; ret; 
0x000e7229: ja 0xe72e1; mov eax, dword ptr [esi + ecx*4 - 0x700b0]; add eax, esi; jmp eax; 
0x000e7258: ja 0xe75d0; mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x000e7bd4: ja 0xe7be0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ea406: ja 0xea7bf; mov eax, dword ptr [ebx + ebp*4 - 0x6fe68]; add eax, ebx; jmp eax; 
0x000ec673: ja 0xec6c0; mov edi, dword ptr [edx + eax*4 - 0x6fcf8]; add edi, edx; jmp edi; 
0x000f0522: ja 0xf051f; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000f804c: ja 0xf81e1; mov ecx, dword ptr [edi + eax*4 - 0x6fa20]; add ecx, edi; jmp ecx; 
0x000f827a: ja 0xf82c0; add esp, 0x18; pop ebx; ret; 
0x000fbe36: ja 0xfbda0; mov eax, dword ptr [esp]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f760]; jmp eax; 
0x000fbd5c: ja 0xfbda0; mov eax, dword ptr [esp]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x000fbe14: ja 0xfbee0; mov ebx, dword ptr [esp]; movzx eax, al; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x00127157: jae 0x127159; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fcbd: jae 0x12fcca; mov eax, dword ptr [ecx + 0x4794]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x001327c9: jae 0x1327a0; add esp, 4; pop ebx; pop esi; ret; 
0x00135fb9: jae 0x135feb; call eax; 
0x00137145: jae 0x137150; cmp dword ptr [eax + 4], ecx; jne 0x137140; mov eax, dword ptr [eax + 0x18]; ret; 
0x0013cd59: jae 0x13cd6a; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0013cff9: jae 0x13d004; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0014c9e9: jae 0x14c9d9; dec dword ptr [ebx - 0x72f3dbac]; adc byte ptr [eax - 0x40], 0xf9; call dword ptr [eax + 0x68]; 
0x001569c9: jae 0x1569cf; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00161bb6: jae 0x161bb5; jmp dword ptr [esi - 0x70]; 
0x0016571d: jae 0x165718; call dword ptr [eax - 0x18]; 
0x00165808: jae 0x165803; call dword ptr [eax - 0x18]; 
0x001662f0: jae 0x1662eb; call dword ptr [eax + 0x6a]; 
0x001663d0: jae 0x1663cb; call dword ptr [eax - 0x18]; 
0x00166950: jae 0x16694b; call dword ptr [eax + 0x6a]; 
0x00166984: jae 0x16697f; jmp dword ptr [ebp - 0x75]; 
0x00166a20: jae 0x166a1b; call dword ptr [eax - 0x18]; 
0x00166ca0: jae 0x166c9b; call dword ptr [eax + 0x6a]; 
0x00166ca0: jae 0x166c9b; call dword ptr [eax + 0x6a]; push es; call 0x150d90; add esp, 0x1c; ret; 
0x00166cd4: jae 0x166ccf; jmp dword ptr [ebp - 0x75]; 
0x00166d70: jae 0x166d6b; call dword ptr [eax - 0x18]; 
0x001672f0: jae 0x1672eb; call dword ptr [eax + 0x6a]; 
0x00167324: jae 0x16731f; jmp dword ptr [ebp - 0x75]; 
0x001673c0: jae 0x1673bb; call dword ptr [eax - 0x18]; 
0x001676a0: jae 0x16769b; call dword ptr [eax + 0x6a]; 
0x001676d4: jae 0x1676cf; jmp dword ptr [ebp - 0x75]; 
0x00167770: jae 0x16776b; call dword ptr [eax - 0x18]; 
0x00167930: jae 0x16792b; call dword ptr [eax + 0x6a]; 
0x00167964: jae 0x16795f; jmp dword ptr [ebp - 0x75]; 
0x00167a00: jae 0x1679fb; call dword ptr [eax - 0x18]; 
0x00167e90: jae 0x167e8b; call dword ptr [eax + 0x6a]; 
0x00167e90: jae 0x167e8b; call dword ptr [eax + 0x6a]; pop es; call 0x150d90; add esp, 0x1c; ret; 
0x00167ec4: jae 0x167ebf; jmp dword ptr [ebp - 0x75]; 
0x00167f60: jae 0x167f5b; call dword ptr [eax - 0x18]; 
0x001694ae: jae 0x1694b8; push esi; call dword ptr [ebx + 0xc]; 
0x0016c8d2: jae 0x16c8cd; call dword ptr [eax - 1]; 
0x00170368: jae 0x1703b2; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x001763c6: jae 0x1763d0; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x00176b38: jae 0x176b33; call dword ptr [eax + 0x6a]; 
0x00179b51: jae 0x179b4c; call dword ptr [eax + 0x6a]; 
0x00179fc2: jae 0x179fbd; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x0017e3a8: jae 0x17e390; mov eax, 1; pop ebx; ret; 
0x0017f727: jae 0x17f72d; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0017f779: jae 0x17f77f; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0017fcb0: jae 0x17fcb6; call dword ptr [edx + 0x380]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0018c240: jae 0x18c200; call 0x182d19; add ebx, 0x47ec9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c7a6: jae 0x18c7c0; call 0x182d19; add ebx, 0x47be3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0019f5f9: jae 0x19f602; add byte ptr [eax], al; pop ebx; ret; 
0x001a2af9: jae 0x1a2afd; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x00024939: jae 0x24934; call dword ptr [eax - 0x18]; 
0x00024958: jae 0x24953; call dword ptr [eax - 0x18]; 
0x00024989: jae 0x24984; call dword ptr [eax - 0x18]; 
0x0003c3fd: jae 0x24ef0; ret; 
0x0003fb2c: jae 0x24ef0; xor eax, eax; ret; 
0x00025c6c: jae 0x25c72; call edi; 
0x00025cce: jae 0x25cd4; call edi; 
0x00033159: jae 0x3316e; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x0003e826: jae 0x3e82c; call eax; 
0x0003fb72: jae 0x3fb99; mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000497e6: jae 0x49827; stc; call dword ptr [eax - 0x18]; 
0x0004c994: jae 0x4c994; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004c9b7: jae 0x4c9b7; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004c9da: jae 0x4c9da; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004ca56: jae 0x4ca56; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004ca20: jae 0x4ca61; stc; call dword ptr [eax - 0x18]; 
0x0004ca79: jae 0x4ca79; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x00050859: jae 0x5089a; stc; call dword ptr [eax - 0x18]; 
0x00051329: jae 0x5132b; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000531a8: jae 0x531a0; mov eax, edx; pop ebx; pop esi; ret; 
0x00058f2c: jae 0x58f6d; stc; call dword ptr [eax - 0x18]; 
0x0008ca58: jae 0x5e63d722; pop edi; pop ebp; ret; 
0x000ffc78: jae 0x5e6b2942; pop edi; pop ebp; ret; 
0x0013cf9d: jae 0x5e6f1c67; pop edi; pop ebp; ret; 
0x0014bd48: jae 0x5e6fca12; pop edi; pop ebp; ret; 
0x0005f774: jae 0x5f76f; call dword ptr [eax + 0x68]; 
0x0003e63f: jae 0x7482e83e; sub esp, 8; push 0; push edx; call eax; 
0x0007db84: jae 0x7dbbf; ret; 
0x0007dca0: jae 0x7dcb0; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007de5e: jae 0x7de70; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007fc06: jae 0x7fb80; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0007fed0: jae 0x7ff02; add esp, 4; pop ebx; pop esi; ret; 
0x00082a68: jae 0x829ed; in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x00085c9a: jae 0x85cb0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00085cd8: jae 0x85ce8; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000875d8: jae 0x875e8; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0008addb: jae 0x8ae0d; add esp, 4; pop ebx; pop esi; ret; 
0x0008b7d8: jae 0x8b7f0; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0008dbd4: jae 0x8db5f; ret 0xca83; 
0x0008ed14: jae 0x8ece0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008edc4: jae 0x8edf3; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008f148: jae 0x8f14e; call dword ptr [ebx]; 
0x0008f142: jae 0x8f180; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00094509: jae 0x94503; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00096243: jae 0x96249; call dword ptr [ebx]; 
0x0009c9d4: jae 0x9c9cf; dec dword ptr [ebx - 0x78727783]; pushfd; cdq; stc; call dword ptr [eax + 0x68]; 
0x000a45ba: jae 0xa45dc; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000a4734: jae 0xa475a; call eax; 
0x000a4827: jae 0xa484d; call eax; 
0x000a4856: jae 0xa4868; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa4850; xor eax, eax; ret; 
0x000a488d: jae 0xa48b3; call edx; 
0x000a5a66: jae 0xa5a81; pop ebx; pop esi; pop edi; ret; 
0x000b775f: jae 0xb7747; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8689: jae 0xb8692; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bfe98: jae 0xbfe9c; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x0016a000: jae 0xc047a4ca; pop ebx; pop esi; ret; 
0x0016ba88: jae 0xc047bf52; pop ebx; pop esi; ret; 
0x000c1ae1: jae 0xc1aea; add byte ptr [ebp - 0x654477b], cl; call dword ptr [eax - 0x73]; 
0x000cade9: jae 0xcadeb; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ce6d9: jae 0xce6db; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cef99: jae 0xcef9b; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cf649: jae 0xcf64b; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000e8569: jae 0xe8574; add eax, 0x244c8b00; or byte ptr [ebp - 0x650b77f], cl; call dword ptr [eax - 0x73]; 
0x000f7e75: jae 0xf7ec0; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0010aeb2: jb 0x10aeb4; add byte ptr [eax], al; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0010afa0: jb 0x10afa2; add byte ptr [eax], al; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0010aff4: jb 0x10aff6; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0010fbc0: jb 0x10fbd4; add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00111d71: jb 0x111d93; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0011f666: jb 0x11f670; xor eax, eax; pop ebx; ret; 
0x00130059: jb 0x13005f; cmp ecx, edx; sbb eax, eax; ret; 
0x00137af1: jb 0x137b5a; stc; call dword ptr [eax - 0x18]; 
0x0014c079: jb 0x14bffe; ret 0x8901; 
0x00156393: jb 0x15639d; setne al; movzx eax, al; neg eax; ret; 
0x001563b5: jb 0x1563be; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x001611e6: jb 0x1611e1; call dword ptr [eax - 0x18]; 
0x0016145a: jb 0x161455; call dword ptr [ebp - 0x73]; 
0x00161902: jb 0x1618fd; call dword ptr [ebp - 0x73]; 
0x00161ed4: jb 0x161ecf; call dword ptr [eax - 0x18]; 
0x00161f8d: jb 0x161f88; call dword ptr [eax - 0x18]; 
0x0016204a: jb 0x162045; call dword ptr [eax - 0x73]; 
0x00162051: jb 0x16204c; call dword ptr [eax - 0x18]; 
0x00162992: jb 0x16298d; call dword ptr [eax + 0x6a]; 
0x00162a00: jb 0x1629fb; call dword ptr [eax + 0x6a]; 
0x00162a35: jb 0x162a30; call dword ptr [eax + 0x6a]; 
0x00162a66: jb 0x162a61; call dword ptr [eax + 0x6a]; 
0x00162a97: jb 0x162a92; call dword ptr [eax + 0x6a]; 
0x00162ac8: jb 0x162ac3; call dword ptr [eax + 0x6a]; 
0x00162af9: jb 0x162af4; call dword ptr [eax + 0x6a]; 
0x00163840: jb 0x16383b; call dword ptr [eax + 0x6a]; 
0x00163874: jb 0x16386f; jmp dword ptr [ebp - 0x75]; 
0x00163938: jb 0x163933; call dword ptr [eax - 0x18]; 
0x001639fc: jb 0x1639f7; jmp dword ptr [ebp - 0x75]; 
0x00163c90: jb 0x163c8b; call dword ptr [eax + 0x6a]; 
0x00163cc4: jb 0x163cbf; jmp dword ptr [ebp - 0x75]; 
0x00163f90: jb 0x163f8b; call dword ptr [eax + 0x6a]; 
0x00163fc4: jb 0x163fbf; jmp dword ptr [ebp - 0x75]; 
0x00164060: jb 0x16405b; call dword ptr [eax - 0x18]; 
0x00164f5a: jb 0x164f55; call dword ptr [eax - 0x18]; 
0x00164fc2: jb 0x164fbd; call dword ptr [eax - 0x18]; 
0x00165020: jb 0x16501b; call dword ptr [eax + 0x6a]; 
0x0016510d: jb 0x165108; call dword ptr [eax - 0x18]; 
0x0016542a: jb 0x165425; call dword ptr [eax - 0x18]; 
0x001656fa: jb 0x1656f5; call dword ptr [eax - 0x18]; 
0x00165e78: jb 0x165e73; call dword ptr [eax + 0x57]; 
0x001665dd: jb 0x1665d8; call dword ptr [eax + 0x57]; 
0x00166f57: jb 0x166f52; call dword ptr [eax + 0x55]; 
0x00167b1d: jb 0x167b18; call dword ptr [eax + 0x57]; 
0x001682c8: jb 0x1682c3; call dword ptr [eax - 0x18]; 
0x0016af10: jb 0x16aed8; mov dword ptr [eax + 0x10], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x001750fd: jb 0x175130; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x001751ed: jb 0x175220; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00175ae9: jb 0x175a6e; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00175f95: jb 0x175fa8; sub edx, eax; mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x001770b9: jb 0x1770b4; call dword ptr [eax + 0x6a]; 
0x00177897: jb 0x177892; call dword ptr [eax + 0x6a]; 
0x001784b9: jb 0x1784b4; call dword ptr [eax + 0x6a]; 
0x00178561: jb 0x17855c; call dword ptr [eax + 0x6a]; 
0x00178adf: jb 0x178ada; call dword ptr [eax + 0x6a]; 
0x00180255: jb 0x18025b; cmp ecx, edx; sbb eax, eax; ret; 
0x00183715: jb 0x183726; xchg esp, eax; ret; 
0x00183bb5: jb 0x183b42; inc esi; sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x0018d26a: jb 0x18d214; cli; jmp dword ptr [esi - 0x70]; 
0x00195a60: jb 0x195a56; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f2c0: jb 0x19f2d0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001a38d3: jb 0x1a3910; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a3815: jb 0x1a3910; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a38e3: jb 0x1a3910; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a38f3: jb 0x1a3910; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a3903: jb 0x1a3910; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a383e: jb 0x1a3910; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a3863: jb 0x1a3910; lea eax, [edi + 1]; pop edi; ret; 
0x001a3873: jb 0x1a3910; lea eax, [edi + 2]; pop edi; ret; 
0x001a37aa: jb 0x1a3910; lea eax, [edi + 3]; pop edi; ret; 
0x001a3883: jb 0x1a3910; lea eax, [edi + 4]; pop edi; ret; 
0x001a3893: jb 0x1a3910; lea eax, [edi + 5]; pop edi; ret; 
0x001a38a3: jb 0x1a3910; lea eax, [edi + 6]; pop edi; ret; 
0x001a37db: jb 0x1a3910; lea eax, [edi + 7]; pop edi; ret; 
0x001a38b3: jb 0x1a3910; lea eax, [edi + 8]; pop edi; ret; 
0x001a38c3: jb 0x1a3910; lea eax, [edi + 9]; pop edi; ret; 
0x001a48f3: jb 0x1a4930; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a4845: jb 0x1a4930; lea eax, [eax + 0xb]; pop edi; ret; 
0x001a4903: jb 0x1a4930; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a4913: jb 0x1a4930; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a4923: jb 0x1a4930; lea eax, [eax + 0xe]; pop edi; ret; 
0x001a486e: jb 0x1a4930; lea eax, [eax + 0xf]; pop edi; ret; 
0x001a4883: jb 0x1a4930; lea eax, [eax + 1]; pop edi; ret; 
0x001a4893: jb 0x1a4930; lea eax, [eax + 2]; pop edi; ret; 
0x001a47db: jb 0x1a4930; lea eax, [eax + 3]; pop edi; ret; 
0x001a48a3: jb 0x1a4930; lea eax, [eax + 4]; pop edi; ret; 
0x001a48b3: jb 0x1a4930; lea eax, [eax + 5]; pop edi; ret; 
0x001a48c3: jb 0x1a4930; lea eax, [eax + 6]; pop edi; ret; 
0x001a480e: jb 0x1a4930; lea eax, [eax + 7]; pop edi; ret; 
0x001a48d3: jb 0x1a4930; lea eax, [eax + 8]; pop edi; ret; 
0x001a48e3: jb 0x1a4930; lea eax, [eax + 9]; pop edi; ret; 
0x00031d88: jb 0x31df0; cmp edi, 0xc; ja 0x32232; mov ecx, dword ptr [ebx + edi*4 - 0x86994]; add ecx, ebx; jmp ecx; 
0x0004ca9c: jb 0x4ca9c; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004cabf: jb 0x4cabf; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004cae2: jb 0x4cae2; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004cb05: jb 0x4cb05; dec dword ptr [ebp - 0x677bf79]; call dword ptr [eax - 0x73]; 
0x0004cb24: jb 0x4cb24; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0007ecba: jb 0x7ecd0; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x0007fe7a: jb 0x7fe70; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008a29a: jb 0x8a290; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00093772: jb 0x937c4; stc; call dword ptr [eax - 0x18]; 
0x00094503: jb 0x94555; stc; call dword ptr [eax - 0x18]; 
0x00095274: jb 0x952c6; stc; call dword ptr [eax - 0x18]; 
0x0009e0f5: jb 0x9e082; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009e84a: jb 0x9e862; add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000b7866: jb 0xb6c20; call 0x182d2d; add ecx, 0x10e4cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c90: jb 0xb6c20; call 0x182d2d; add ecx, 0x10f0a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c79: jb 0xb6c20; call 0x182d2d; add ecx, 0x10f0c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c5e: jb 0xb6c20; call 0x182d2d; add ecx, 0x10f0db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c3c: jb 0xb6c20; call 0x182d2d; add ecx, 0x10f0fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b77d6: jb 0xb6cb8; movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000b8f66: jb 0xb8260; call 0x182d2d; add ecx, 0x10cf2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82b9: jb 0xb8260; call 0x182d2d; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b829e: jb 0xb8260; call 0x182d2d; add ecx, 0x10dbfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b827c: jb 0xb8260; call 0x182d2d; add ecx, 0x10dc1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be806: jb 0xbe200; call 0x182d2d; add ecx, 0x107863; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be270: jb 0xbe200; call 0x182d2d; add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be259: jb 0xbe200; call 0x182d2d; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be23e: jb 0xbe200; call 0x182d2d; add ecx, 0x107e2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be21c: jb 0xbe200; call 0x182d2d; add ecx, 0x107e51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c22f3: jb 0xc22fd; call ebx; 
0x000c2393: jb 0xc239d; call ebx; 
0x000dbd0a: jb 0xdbc8c; cmc; dec dword ptr [ebp - 0x651af7d]; call dword ptr [eax - 0x73]; 
0x000e725a: jb 0xe725f; add byte ptr [eax], al; mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x000f7f6b: jb 0xf7f6d; add byte ptr [edx + esi*8 + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x0010841e: jbe 0x108420; xor eax, eax; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x001088b6: jbe 0x1088b3; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x001089ce: jbe 0x1089d0; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00108aae: jbe 0x108ab0; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00109656: jbe 0x109658; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00109f9f: jbe 0x109fa9; call dword ptr [eax + 0xc]; 
0x00109f9c: jbe 0x109fb6; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x00109f97: jbe 0x109fb9; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0010fcb6: jbe 0x10fcb8; xor eax, eax; ret; 
0x001176ac: jbe 0x1176ba; call dword ptr [esi + 0x24]; 
0x001186ff: jbe 0x11870d; call dword ptr [esi + 0x24]; 
0x0011979f: jbe 0x1197ad; call dword ptr [esi + 0x24]; 
0x00120a9f: jbe 0x120aa1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120acc: jbe 0x120ace; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120e5e: jbe 0x120e60; xor eax, eax; ret; 
0x00120f06: jbe 0x120f08; mov eax, dword ptr [eax + 0x35c]; pop ebx; ret; 
0x001259e2: jbe 0x125a10; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00127e4d: jbe 0x127ea0; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x00127edd: jbe 0x127f30; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x001282f0: jbe 0x128310; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x0012a6a6: jbe 0x12a6a8; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012a916: jbe 0x12a918; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012a9f6: jbe 0x12a9f8; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0012b536: jbe 0x12b538; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0012b63e: jbe 0x12b640; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0012bb96: jbe 0x12bb98; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f54f: jbe 0x12f510; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x0013246e: jbe 0x132470; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00137240: jbe 0x137294; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00139016: jbe 0x139018; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0013b3fe: jbe 0x13b400; push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013c836: jbe 0x13c838; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0014056e: jbe 0x140570; ret; 
0x0014bafe: jbe 0x14bb00; xor eax, eax; ret; 
0x00156b87: jbe 0x156b0c; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00161886: jbe 0x161885; jmp dword ptr [esi - 0x70]; 
0x00169567: jbe 0x169579; push ebx; call dword ptr [esi + 0x14]; 
0x0016a5b0: jbe 0x16a5c0; mov eax, 2; pop ebx; pop esi; ret; 
0x0016aa5d: jbe 0x16aa6b; push edi; call dword ptr [eax + 8]; 
0x0016aaa0: jbe 0x16aaae; push edi; call dword ptr [eax + 0x10]; 
0x0016adfe: jbe 0x16ae00; xor eax, eax; ret; 
0x00171867: jbe 0x171865; jmp dword ptr [esi - 0x70]; 
0x00171866: jbe 0x1718de; cld; jmp dword ptr [esi - 0x70]; 
0x00172a0e: jbe 0x172a10; mov eax, dword ptr [ebx + 0x174]; add esp, 4; pop ebx; pop esi; ret; 
0x00174f0e: jbe 0x174f10; mov eax, 1; ret; 
0x00174f3e: jbe 0x174f40; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0017501e: jbe 0x175020; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001755ee: jbe 0x1755f0; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00175fa6: jbe 0x175fa8; xor eax, eax; ret; 
0x00178f48: jbe 0x178f43; call dword ptr [eax - 0x18]; 
0x00178f75: jbe 0x178f70; call dword ptr [eax - 0x18]; 
0x00179972: jbe 0x17996d; call dword ptr [eax - 0x18]; 
0x0017a92e: jbe 0x17a929; call dword ptr [eax - 0x18]; 
0x0017ae0f: jbe 0x17ae0a; call dword ptr [eax - 0x18]; 
0x0017bf4c: jbe 0x17bf47; call dword ptr [edi + 0x56]; 
0x0017bf67: jbe 0x17bf62; call dword ptr [ebp + 0x56]; 
0x0017bf82: jbe 0x17bf7d; call dword ptr [edx - 0x77]; 
0x0017bfa5: jbe 0x17bfa0; call dword ptr [edi + 0x56]; 
0x0017c788: jbe 0x17c783; call dword ptr [esi + 0x57]; 
0x0017c7c2: jbe 0x17c7bd; call dword ptr [ecx - 0x77]; 
0x0017c7e5: jbe 0x17c7e0; call dword ptr [esi + 0x57]; 
0x0017d10d: jbe 0x17d108; call dword ptr [edi + 0x53]; 
0x0017d147: jbe 0x17d142; call dword ptr [edx - 0x77]; 
0x0017d166: jbe 0x17d161; call dword ptr [esi + 0x53]; 
0x0017d244: jbe 0x17d23f; call dword ptr [eax - 0x18]; 
0x0017d272: jbe 0x17d26d; call dword ptr [eax - 0x18]; 
0x0017d407: jbe 0x17d38c; in al, dx; add al, 0x83; ret; 
0x0017d66d: jbe 0x17d668; call dword ptr [ebp + 0x50]; 
0x0017d9a5: jbe 0x17d9a0; call dword ptr [eax - 0x18]; 
0x0017e9c5: jbe 0x17e9c0; call dword ptr [eax - 0x18]; 
0x0017f250: jbe 0x17f24b; call dword ptr [eax - 0x18]; 
0x00180136: jbe 0x180138; ret; 
0x0018293e: jbe 0x182940; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001829fe: jbe 0x182a00; mov eax, 2; add esp, 0xc; ret; 
0x0018ba1e: jbe 0x18ba20; mov eax, 0xffffffff; ret; 
0x00199913: jbe 0x199a03; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x00199933: jbe 0x199a03; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001a2cae: jbe 0x1a2cb0; lea eax, [edi + 2]; pop edi; ret; 
0x001a2cbe: jbe 0x1a2cc0; lea eax, [edi + 3]; pop edi; ret; 
0x001a2cce: jbe 0x1a2cd0; lea eax, [edi + 4]; pop edi; ret; 
0x001a2cde: jbe 0x1a2ce0; lea eax, [edi + 5]; pop edi; ret; 
0x001a2cee: jbe 0x1a2cf0; lea eax, [edi + 6]; pop edi; ret; 
0x001a2cfe: jbe 0x1a2d00; lea eax, [edi + 8]; pop edi; ret; 
0x001a2d0e: jbe 0x1a2d10; lea eax, [edi + 9]; pop edi; ret; 
0x001a2d1e: jbe 0x1a2d20; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a2d2e: jbe 0x1a2d30; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a2d3e: jbe 0x1a2d40; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a2d4e: jbe 0x1a2d50; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a2d5e: jbe 0x1a2d60; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a2d6e: jbe 0x1a2d70; xor eax, eax; pop edi; ret; 
0x001a314e: jbe 0x1a3150; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a315e: jbe 0x1a3160; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a316e: jbe 0x1a3170; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a317e: jbe 0x1a3180; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a318e: jbe 0x1a3190; lea eax, [edi - 9]; pop edi; ret; 
0x001a319e: jbe 0x1a31a0; lea eax, [edi - 7]; pop edi; ret; 
0x001a31ae: jbe 0x1a31b0; lea eax, [edi - 6]; pop edi; ret; 
0x001a31be: jbe 0x1a31c0; lea eax, [edi - 5]; pop edi; ret; 
0x001a31ce: jbe 0x1a31d0; lea eax, [edi - 3]; pop edi; ret; 
0x001a31de: jbe 0x1a31e0; lea eax, [edi - 2]; pop edi; ret; 
0x001a31ee: jbe 0x1a31f0; lea eax, [edi - 1]; pop edi; ret; 
0x001a31fe: jbe 0x1a3200; xor eax, eax; pop edi; ret; 
0x001a32fe: jbe 0x1a3300; and eax, 3; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a330e: jbe 0x1a3310; and eax, 7; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a331e: jbe 0x1a3320; and eax, 0x1f; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a332e: jbe 0x1a3330; and eax, 0x3f; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a333e: jbe 0x1a3340; and eax, 0x7f; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a334e: jbe 0x1a3350; and eax, 0x1ff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a36de: jbe 0x1a36e0; lea eax, [edi + 2]; pop edi; ret; 
0x001a36ee: jbe 0x1a36f0; lea eax, [edi + 4]; pop edi; ret; 
0x001a36fe: jbe 0x1a3700; lea eax, [edi + 5]; pop edi; ret; 
0x001a370e: jbe 0x1a3710; lea eax, [edi + 6]; pop edi; ret; 
0x001a371e: jbe 0x1a3720; lea eax, [edi + 8]; pop edi; ret; 
0x001a372e: jbe 0x1a3730; lea eax, [edi + 9]; pop edi; ret; 
0x001a373e: jbe 0x1a3740; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a374e: jbe 0x1a3750; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a375e: jbe 0x1a3760; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a376e: jbe 0x1a3770; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a3f1e: jbe 0x1a3f20; add edx, 2; jl 0x1a3fd0; lea eax, [ecx + 2]; ret; 
0x001a3f2e: jbe 0x1a3f30; add edx, 3; jl 0x1a3fd0; lea eax, [ecx + 3]; ret; 
0x001a3f3e: jbe 0x1a3f40; add edx, 5; jl 0x1a3fd0; lea eax, [ecx + 5]; ret; 
0x001a3f4e: jbe 0x1a3f50; add edx, 6; jl 0x1a3fd0; lea eax, [ecx + 6]; ret; 
0x001a4fce: jbe 0x1a4fd0; pop edi; pop esi; pop ebx; ret; 
0x001a521e: jbe 0x1a5220; mov eax, ecx; ret; 
0x001a54be: jbe 0x1a54c0; test ah, 0xf0; jne 0x1a54e0; lea eax, [edi - 8]; pop edi; ret; 
0x001a54de: jbe 0x1a54e0; lea eax, [edi - 4]; pop edi; ret; 
0x001a54ee: jbe 0x1a54f0; xor eax, eax; pop edi; ret; 
0x00025fa6: jbe 0x25fa8; add esp, 4; pop ebx; pop esi; ret; 
0x000303ed: jbe 0x303f3; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003446e: jbe 0x34470; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0004200c: jbe 0x4201b; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x0004202c: jbe 0x4203b; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00059d2e: jbe 0x59cb9; ret 0x40c7; 
0x0005aee6: jbe 0x5aee8; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00063e8c: jbe 0x64824; mov edi, eax; jmp edx; 
0x0006f794: jbe 0x70520; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0006f6e7: jbe 0x705e3; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00078066: jbe 0x78068; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0007bfb6: jbe 0x7bfb8; test eax, eax; je 0x7bfd0; sub eax, 1; mov dword ptr [edx + 0x1a44], eax; ret; 
0x00085bd6: jbe 0x85bd8; test eax, eax; je 0x85bf0; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x00088dae: jbe 0x88db0; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x88dc0; ret; 
0x0008a0be: jbe 0x8a0c0; xor eax, eax; ret; 
0x0008ae6e: jbe 0x8ae70; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0008b0ee: jbe 0x8b0f0; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008b1ee: jbe 0x8b1f0; add dword ptr [ebx + 0x1a78], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0008b276: jbe 0x8b278; test eax, eax; je 0x8b290; sub eax, 1; mov dword ptr [edx + 0x1a78], eax; ret; 
0x0008dafe: jbe 0x8db00; add esp, 4; pop ebx; pop esi; ret; 
0x0008ea70: jbe 0x8ea78; ret; 
0x00092408: jbe 0x92410; pop ebx; neg eax; pop esi; pop edi; ret; 
0x00092461: jbe 0x92470; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x00096196: jbe 0x96198; cmp edx, 1; je 0x961a8; mov eax, 0x16; ret; 
0x0009df3e: jbe 0x9df40; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0009e166: jbe 0x9e168; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 8]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009e5f6: jbe 0x9e600; ret; 
0x0009e636: jbe 0x9e640; ret; 
0x0009e684: jbe 0x9e690; ret; 
0x0009f326: jbe 0x9f30e; call dword ptr [eax + 0x57]; 
0x0009f34a: jbe 0x9f332; call dword ptr [eax + 0x57]; 
0x000a283e: jbe 0xa2840; ret; 
0x000a4426: jbe 0xa4428; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x000a8e9e: jbe 0xa8eb0; cmove eax, edx; ret; 
0x000a9dce: jbe 0xa9de0; cmove eax, edx; ret; 
0x000a9f9e: jbe 0xa9fb0; cmove eax, edx; ret; 
0x000af11e: jbe 0xaf120; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000af20e: jbe 0xaf210; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b0f7e: jbe 0xb0f80; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b334e: jbe 0xb3350; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b53ce: jbe 0xb53d0; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b658e: jbe 0xb6590; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b76be: jbe 0xb76c0; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b8dae: jbe 0xb8db0; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000be35a: jbe 0xbe35e; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000beb5e: jbe 0xbeb60; xor eax, eax; pop edi; ret; 
0x000bebbe: jbe 0xbebf0; add eax, ecx; ret; 
0x000bee95: jbe 0xbeed0; add eax, edi; pop edi; ret; 
0x000beea8: jbe 0xbeed0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000beeb8: jbe 0xbeed0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000beec8: jbe 0xbeed0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c09ee: jbe 0xc09f0; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c09fe: jbe 0xc0a00; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c0a0e: jbe 0xc0a10; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c0a1e: jbe 0xc0a20; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c0a2e: jbe 0xc0a30; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c0a3e: jbe 0xc0a40; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c0a4e: jbe 0xc0a50; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c0a5e: jbe 0xc0a60; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c0a6e: jbe 0xc0a70; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c0a7e: jbe 0xc0a80; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c0a8e: jbe 0xc0a90; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c0a9e: jbe 0xc0aa0; mov eax, 0xffffffff; ret; 
0x000c1869: jbe 0xc1872; add byte ptr [ebp - 0x654537e], cl; call dword ptr [eax - 0x73]; 
0x000c3b72: jbe 0xc3af7; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d1aad: jbe 0xd1ab7; call ebx; 
0x000d6cce: jbe 0xd6cd0; mov eax, 1; jg 0xd6cd9; neg eax; ret; 
0x000dc0c8: jbe 0xdc0d0; mov eax, edx; ret; 
0x000e5496: jbe 0xe5498; xor eax, eax; add esp, 0xc; ret; 
0x000e61be: jbe 0xe61c0; mov eax, dword ptr [edx + 0xa4]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x000ed8cc: jbe 0xed8c1; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000eda76: jbe 0xeda78; xor eax, eax; ret; 
0x000f0526: jbe 0xf0528; xor eax, eax; ret; 
0x000f12f6: jbe 0xf12f8; xor eax, eax; ret; 
0x000f3d96: jbe 0xf3d98; xor eax, eax; ret; 
0x000f4b76: jbe 0xf4b78; xor eax, eax; ret; 
0x000f8736: jbe 0xf8738; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x0010098d: je 0x1009b5; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x001010fd: je 0x101125; add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x001029a8: je 0x10296c; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x001029a4: je 0x102998; or al, 0x89; je 0x10296c; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00102ce0: je 0x102d06; sub al, 0x83; ret; 
0x00103b81: je 0x1049ce; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x001072ed: je 0x107315; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00108371: je 0x10838c; cmp byte ptr [esp + 0x17], 0; jne 0x108420; call ecx; 
0x00108605: je 0x10854b; call eax; 
0x001086a5: je 0x10859a; call eax; 
0x0010869d: je 0x1086c5; add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10859a; call eax; 
0x00108a62: je 0x108a88; xor al, 0x8b; pop esp; and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010a0bd: je 0x10a0e5; add byte ptr [ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0010ac6c: je 0x10ac1f; stc; call dword ptr [eax - 0x73]; 
0x0010acab: je 0x10acc0; xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x0010ad36: je 0x10ad5c; sbb byte ptr [edx - 1], ch; call 0x10b230; add esp, 0x1c; ret; 
0x0010ad5c: je 0x10ad82; sbb byte ptr [edx - 1], ch; call 0x10ae60; add esp, 0x1c; ret; 
0x0010b1c4: je 0x10b1ea; cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0010c080: je 0x10c0a6; push 0x10768e8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [eax - 0x77]; ret 0xc085; 
0x0010c71d: je 0x10c745; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0010ee37: je 0x10ee5d; or al, 0xf; mov dh, 0xd2; mov ecx, dword ptr [esi + edx*4 - 0x6ec98]; add ecx, esi; jmp ecx; 
0x0010efb3: je 0x10ef9d; cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0xffff; 
0x0010f144: je 0x10f0cf; ret; 
0x0010f843: je 0x10f7d0; jl 0x10f86b; sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x10f7d4; ret; 
0x0010fc85: je 0x10fc54; pop ebx; ret; 
0x0010fcbd: je 0x10fce5; add byte ptr [eax + 1], bh; ret; 
0x0010fe35: je 0x10fe5d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0011064e: je 0x110667; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x00110c82: je 0x110cc9; sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001115cd: je 0x1115f5; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00111b6c: je 0x111b92; sbb al, 0xe8; or al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00111d1e: je 0x111d30; mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x00111e90: je 0x111eed; pop esi; ret; 
0x00111ff9: je 0x112056; pop esi; ret; 
0x001125e9: je 0x112576; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x001125a7: je 0x112604; pop esi; ret; 
0x001125e3: je 0x112609; pop esp; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x001125e7: je 0x11260d; je 0x112576; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00117c5f: je 0x117c85; sub al, 0xff; ja 0x117c71; call dword ptr [edi + 0x24]; 
0x00117e83: je 0x117ea9; sub al, 0xff; ja 0x117e95; call dword ptr [edi + 0x24]; 
0x00117fa2: je 0x117fc8; sub al, 0xff; ja 0x117fb4; call dword ptr [edi + 0x24]; 
0x001184f5: je 0x11851d; add byte ptr [ebx - 0x7c72f314], al; push esi; stc; call dword ptr [eax - 0x18]; 
0x00118ccf: je 0x118cf5; sub al, 0xff; ja 0x118ce1; call dword ptr [edi + 0x24]; 
0x00118d25: je 0x118d4b; cmp al, 0xe8; or ebp, 0xfffffffc; jmp dword ptr [ebp - 0x77]; 
0x00118ef3: je 0x118f19; sub al, 0xff; ja 0x118f05; call dword ptr [edi + 0x24]; 
0x00119012: je 0x119038; sub al, 0xff; ja 0x119024; call dword ptr [edi + 0x24]; 
0x00119d6f: je 0x119d95; sub al, 0xff; ja 0x119d81; call dword ptr [edi + 0x24]; 
0x00119dc5: je 0x119deb; cmp al, 0xe8; jecxz 0x119d87; cld; jmp dword ptr [ebp - 0x77]; 
0x00119f93: je 0x119fb9; sub al, 0xff; ja 0x119fa5; call dword ptr [edi + 0x24]; 
0x0011a0b2: je 0x11a0d8; sub al, 0xff; ja 0x11a0c4; call dword ptr [edi + 0x24]; 
0x0011a8fb: je 0x11a921; and byte ptr [ebx - 0x72cbdbbc], cl; and byte ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x0011b1dd: je 0x11b203; sbb byte ptr [edx - 0x64], ch; call 0x111700; add esp, 0x1c; ret; 
0x0011b689: je 0x11b6af; sbb byte ptr [edx - 0x64], ch; call 0x112030; add esp, 0x18; pop ebx; ret; 
0x0011b6ad: je 0x11b6d3; sbb byte ptr [edx - 0x64], ch; call 0x112200; add esp, 0x1c; ret; 
0x0011b704: je 0x11b761; pop esi; ret; 
0x0011b7c0: je 0x11b7e6; sbb al, 0xe8; sub byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011b7e4: je 0x11b80a; sub al, 0xe8; and al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0011b800: je 0x11b826; sub byte ptr [edx - 0x64], ch; call 0x11b810; add esp, 0x2c; ret; 
0x0011bef1: je 0x11bf17; sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0011ca26: je 0x11ca4c; sbb byte ptr [edx - 0x64], ch; call 0x112030; add esp, 0x18; pop ebx; ret; 
0x0011ca4a: je 0x11ca70; sbb byte ptr [edx - 0x64], ch; call 0x112200; add esp, 0x1c; ret; 
0x0011cae9: je 0x11ca76; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0011caa1: je 0x11cafe; pop esi; ret; 
0x0011cae3: je 0x11cb09; pop esp; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0011cae7: je 0x11cb0d; je 0x11ca76; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0011d672: je 0x11d698; insb byte ptr es:[edi], dx; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011d66b: je 0x11d6c0; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011d72c: je 0x11d752; insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011dbf6: je 0x11dc28; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011dca6: je 0x11dcd8; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011df02: je 0x11df28; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011dff2: je 0x11e018; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011e894: je 0x11e823; mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011e814: je 0x11e83a; dec esp; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011e818: je 0x11e83e; js 0x11e7a7; pop esp; and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011e9e7: je 0x11ea0d; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0011eb0e: je 0x11eb34; sbb al, 0xe8; mov dl, byte ptr [eax + eax]; add esp, 0x1c; ret; 
0x0011ec63: je 0x11ec89; sbb al, 0xe8; xor eax, 0x83000053; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0011f347: je 0x11f36d; adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x0011fa62: je 0x11fa88; sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x001200b6: je 0x1200dc; sbb al, 0xe8; mov byte ptr [0x83fffffe], al; les ebx, ptr [eax]; pop ebx; ret; 
0x00120283: je 0x1202c8; call eax; 
0x001203a7: je 0x120448; call eax; 
0x0012086d: je 0x120895; add byte ptr [ebx - 0x18], dl; mov dword ptr [0x81000624], eax; ret; 
0x00120ed8: je 0x120ee8; cmp ecx, edx; jne 0x120ed0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00121426: je 0x121429; ret; 
0x00121b2a: je 0x121b30; add esp, 0xc; ret; 
0x00121b6a: je 0x121b70; add esp, 0xc; ret; 
0x001221f5: je 0x12221d; add byte ptr [ebx - 0x7c72f714], al; cmp ecx, edi; call dword ptr [eax - 0x73]; 
0x001227fe: je 0x122810; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00122b17: je 0x122b3d; sub al, 0x8b; jl 0x122b41; xor byte ptr [ebp - 0x6a3367d], cl; call dword ptr [eax + 0x55]; 
0x00122f1a: je 0x122ea5; push esi; add al, 0x89; ret 0xeac1; 
0x00123458: je 0x1233e3; push esi; add al, 0x89; ret 0xeac1; 
0x001234cd: je 0x123458; push esi; add al, 0x89; ret 0xeac1; 
0x00123627: je 0x1235b2; push esi; add al, 0x89; ret 0xeac1; 
0x00123713: je 0x12369e; push esi; add al, 0x89; ret 0xeac1; 
0x00123788: je 0x123713; push esi; add al, 0x89; ret 0xeac1; 
0x00123933: je 0x1238be; push esi; add al, 0x89; ret 0xeac1; 
0x00123d28: je 0x123cb3; push esi; add al, 0x89; ret 0xeac1; 
0x00123f74: je 0x123f79; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x00123f8b: je 0x123f90; mov dword ptr [edx + 4], eax; test eax, eax; je 0x123f96; mov dword ptr [eax], edx; ret; 
0x00123f92: je 0x123f96; mov dword ptr [eax], edx; ret; 
0x00124446: je 0x12446c; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x0012444c: je 0x124472; sbb al, 0xe8; cld; ret 0xfff3; 
0x0012449e: je 0x1244c4; sbb al, 0xe8; stosb byte ptr es:[edi], al; ret 0xfff3; 
0x001244f1: je 0x124517; sbb al, 0xe8; push edi; ret 0xfff3; 
0x0012452a: je 0x124550; sbb al, 0xe8; push ds; ret 0xfff3; 
0x0012454d: je 0x124573; sbb al, 0xe8; sti; sal ebx, 0xff; add esp, 0x1c; ret; 
0x00124853: je 0x124879; sbb al, 0xe8; add eax, 0x83000007; les edx, ptr [eax]; add esp, 0xc; ret; 
0x00124e78: je 0x124e88; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x001259d9: je 0x1259ff; sub al, 0x8d; inc ebx; inc dword ptr [ebx + 0x2c7602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00125a0d: je 0x125a35; add byte ptr [ebp - 0x47f7db8c], cl; sbb al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125a11: je 0x125a37; or byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x00126138: je 0x12615e; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x0012643f: je 0x126465; xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x0012894a: je 0x128950; test edx, edx; jne 0x128958; ret; 
0x0012896e: je 0x128974; test edx, edx; jne 0x128978; ret; 
0x00128e48: je 0x128dff; stc; call dword ptr [eax - 0x18]; 
0x001292d4: je 0x1292fa; sbb byte ptr [edx], ch; call 0x129520; add esp, 0x1c; ret; 
0x00129a9f: je 0x129aa2; ret; 
0x00129b2f: je 0x129b4f; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x00129bf6: je 0x129c00; pop ebx; setg al; pop esi; pop edi; ret; 
0x00129c27: je 0x129c38; mov dword ptr [edi + 0x46cc], ecx; pop ebx; pop esi; pop edi; ret; 
0x00129c82: je 0x129c8d; pop esi; pop ebx; jl 0x24ef0; ret; 
0x00129c70: je 0x129c96; sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x0012a4b4: je 0x12a4da; cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a8e4: je 0x12a918; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012a9c7: je 0x12a9f8; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012a9f0: je 0x12aa3c; pop ebx; pop esi; ret; 
0x0012ac31: je 0x12ac50; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0012b254: je 0x12b270; mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012b257: je 0x12b27d; inc esp; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012b464: je 0x12b48a; cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b5f2: je 0x12b618; push esp; mov ebx, dword ptr [esp + 0x50]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012b6fc: je 0x12b760; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012b936: je 0x12b95c; sbb al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012ba04: je 0x12ba2a; cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bb64: je 0x12bb98; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012c267: je 0x12c269; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ce73: je 0x12ced0; pop esi; ret; 
0x0012d3c4: je 0x12d37b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0012d4f5: je 0x12d51b; add al, 0x89; loope 0x12d484; ret 0x448b; 
0x0012d937: je 0x12d95d; and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012df66: je 0x12df8c; push eax; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012e50e: je 0x12e534; sbb al, 0xe8; push 5; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012e98a: je 0x12e9e0; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012eb48: je 0x12eb6e; or byte ptr [ebx - 0x74cfdbb4], cl; push esp; and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012f0cc: je 0x12f0d0; ret; 
0x0012f416: je 0x12f433; lea edx, [ecx + ecx]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00131b2f: je 0x131b55; or al, 0x89; inc edi; adc al, 0x29; ret 0x478b; 
0x00131d1d: je 0x131d45; add dh, al; inc edx; jmp dword ptr [eax]; 
0x001320f4: je 0x13211a; adc al, ch; sbb eax, 0x8100050c; ret; 
0x001323f6: je 0x13241c; and byte ptr [edi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00132553: je 0x132540; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x00132883: je 0x13287c; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0013287e: je 0x1328a4; adc al, ch; stosb byte ptr es:[edi], al; je 0x13287c; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x00132e09: je 0x132e2f; or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x00132e3a: je 0x132e40; xor eax, eax; pop ebx; ret; 
0x00135f9d: je 0x135fa8; add esp, 8; pop ebx; ret; 
0x00135fb2: je 0x135fd8; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x001371ef: je 0x137200; ret; 
0x001372cb: je 0x1372f1; sbb al, 0xe8; std; retf 0xfff4; add esp, 0x1c; ret; 
0x00137f35: je 0x137f5d; add dh, dh; ret 0x7420; 
0x00138661: je 0x138670; add esp, 8; pop ebx; ret; 
0x001388fb: je 0x138913; lea eax, [edx - 0xaae04]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa784]; cmovne eax, edx; ret; 
0x00138ba8: je 0x138bce; push 0x27838d50; push eax; stc; call dword ptr [eax - 0x18]; 
0x00138e83: je 0x138ea9; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x841c0; add esp, 0x2c; ret; 
0x0013904e: je 0x139074; sbb al, 0xe8; cmp ch, byte ptr [ebp - 8]; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00139273: je 0x139299; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x00139915: je 0x13993d; add al, ch; ret; 
0x00139a05: je 0x139a2b; sbb al, 0xe8; and dword ptr [ebx - 8], 0xffffffff; add esp, 0x18; pop ebx; ret; 
0x0013a015: je 0x13a03b; sbb al, 0xe8; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013a335: je 0x13a35b; sbb al, 0xe8; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013a97d: je 0x13a9a5; add al, ch; cwde; add dword ptr [eax + eax], -0x7f; ret 0xc48f; 
0x0013c58a: je 0x13c580; add esp, 8; pop ebx; ret; 
0x0013c5b0: je 0x13c5d6; sbb al, 0xe8; call 0x8413b424; les ebx, ptr [eax]; pop ebx; ret; 
0x0013c755: je 0x13c760; test eax, eax; jne 0x13c770; mov eax, ebx; pop ebx; ret; 
0x0013c939: je 0x13c95f; sub al, 0x83; ret 0x8902; 
0x0013c954: je 0x13c97a; adc al, 0xe8; mov ebp, 0x81000463; ret; 
0x0013cb8d: je 0x13cbb5; add byte ptr [eax - 1], bh; ret; 
0x0013d105: je 0x13d12d; add byte ptr [0xffffff], ah; ret; 
0x0013e738: je 0x13e75e; sbb byte ptr [ebp - 0x644b37a], cl; call dword ptr [eax - 0x73]; 
0x0013e7ca: je 0x13e787; stc; call dword ptr [eax + 0x53]; 
0x0013ec4a: je 0x13ec70; adc byte ptr [ebp - 0x6bfb26a], cl; call dword ptr [edx - 0x46]; 
0x0013fbd5: je 0x13fbe0; add esp, 4; pop ebx; pop esi; ret; 
0x00140cf8: je 0x140d00; add esp, 8; pop ebx; ret; 
0x00140ce2: je 0x140d08; sub al, 0xff; je 0x140d0c; sub al, 0xe8; ret 0x41; 
0x00140ce6: je 0x140d0c; sub al, 0xe8; ret 0x41; 
0x001423fa: je 0x142420; or al, 0x8d; xchg byte ptr [ebp + edi*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x00145325: je 0x14534d; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00146044: je 0x146050; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0014609e: je 0x1460c4; adc byte ptr [ecx - 0x72fd9532], cl; add dword ptr [edi], 0x3d; stc; call dword ptr [eax + 0x51]; 
0x0014666a: je 0x1466d7; stc; call dword ptr [ebx - 0x18]; 
0x001469d6: je 0x1469fc; xor al, ch; ret 0xedc7; 
0x001483f6: je 0x14841c; sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0014859b: je 0x1485c1; sub al, 0x6a; add byte ptr [ebp - 0x18], dl; retf 0xfff8; dec dword ptr [ecx - 0x7693dbbc]; ret; 
0x00149a11: je 0x149a18; pop ebx; ret; 
0x00149a61: je 0x149a88; mov eax, 1; xor eax, 1; pop ebx; ret; 
0x0014a162: je 0x14a188; or byte ptr [ebp - 0x640bb7a], cl; call dword ptr [eax - 0x73]; 
0x0014a691: je 0x14a616; ret; 
0x0014ab85: je 0x14abad; add byte ptr [ebx - 0x7ce3dbac], cl; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x0014b8b5: je 0x14b8ba; add byte ptr [ecx + 0xeb55cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0014ba28: je 0x14ba30; add esp, 0x18; pop ebx; ret; 
0x0014baf4: je 0x14bb08; xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x0014c767: je 0x14c78d; add al, 0x83; ret; 
0x0014cb7b: je 0x14cb87; add dword ptr [eax + 8], 1; je 0x14cba6; add esp, 0xc; ret; 
0x0014cb81: je 0x14cba6; add esp, 0xc; ret; 
0x0014d485: je 0x14d48c; cmp dword ptr [eax + 8], edx; jne 0x14d480; ret; 
0x0014d4e5: je 0x14d50d; add byte ptr [edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x0014f181: je 0x14f1a7; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0014f7e6: je 0x14f80c; adc al, 0x55; call edi; 
0x001502a8: je 0x1502ce; adc al, 0x8d; xchg byte ptr [edi + 0x39], ah; stc; call dword ptr [eax + 0x53]; 
0x0015058e: je 0x1505b4; and byte ptr [ebx - 0x17e3dba4], cl; push es; cdq; bnd jmp dword ptr [ebp - 0x39]; 
0x0015074f: je 0x150775; or al, 0x8d; xchg al, dh; ret 0xfff9; 
0x001519b9: je 0x1519d0; xor ecx, ecx; cmp eax, 2; jne 0x1519c8; mov eax, ecx; ret; 
0x00151ad4: je 0x151afa; adc al, ch; cmp eax, 0x81000312; ret; 
0x00151b9d: je 0x151c02; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00151dbd: je 0x151e22; mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x00152509: je 0x1524f0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00152515: je 0x15253d; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00152623: je 0x152693; stc; call dword ptr [eax - 0x18]; 
0x00152799: je 0x152809; stc; call dword ptr [eax - 0x73]; 
0x001546e0: je 0x154706; dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x001546e4: je 0x15470a; dec eax; push dword ptr [esp + 0x10]; call edi; 
0x001549eb: je 0x154a11; xor byte ptr [ebp + 0x50482444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x001549f4: je 0x154a1a; xor al, 0xff; je 0x154a1e; inc eax; call esi; 
0x001549f8: je 0x154a1e; inc eax; call esi; 
0x00156c2f: je 0x156c40; mov eax, edx; pop ebx; pop esi; ret; 
0x00156ce5: je 0x156d0d; add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x001570e5: je 0x15710b; adc al, 0x83; ret 0x8301; 
0x00157115: je 0x15713b; sbb al, 0x83; ret 0x8301; 
0x00158852: je 0x158878; cmp al, ch; inc esi; ret 0xfff4; 
0x001598c6: je 0x1598ec; and byte ptr [ebp - 0xe01137a], cl; call dword ptr [eax + 0x6a]; 
0x00159ad2: je 0x159af8; sbb al, 0x8d; xchg byte ptr [edi + 0x6f], ah; stc; call dword ptr [eax - 0x18]; 
0x00159b6d: je 0x159b93; sbb byte ptr [ebp - 0x6905f7a], cl; call dword ptr [eax - 1]; 
0x00159be1: je 0x159be4; add byte ptr [eax], al; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00159be6: je 0x159c0c; push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00159bea: je 0x159c10; push eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0015a195: je 0x15a1bb; adc byte ptr [ebp - 0x63acb7a], cl; call dword ptr [eax - 0x73]; 
0x0015a4e4: je 0x15a50a; adc al, ch; sub eax, 0x81000288; ret; 
0x0015cbe5: je 0x15cbf0; sub esp, 0xc; push esi; call eax; 
0x0015cce4: je 0x15cd0a; adc al, 0xe8; sub eax, 0x81000260; ret; 
0x0015cf45: je 0x15cf50; sub esp, 0xc; push esi; call eax; 
0x0015d106: je 0x15d12c; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0015d10a: je 0x15d130; pop eax; push esi; call edi; 
0x0015d473: je 0x15d486; sub esp, 0xc; push eax; call 0x180100; mov dword ptr [esp], ebp; call edi; 
0x0015d5b5: je 0x15d5db; or al, 0x55; call edi; 
0x0015d662: je 0x15d675; sub esp, 0xc; push eax; call 0x180100; mov dword ptr [esp], ebp; call esi; 
0x0015d811: je 0x15d824; sub esp, 0xc; push ebx; call 0x180100; mov dword ptr [esp], ebp; call ebx; 
0x0015d8a6: je 0x15d8b9; sub esp, 0xc; push ebx; call 0x180100; mov dword ptr [esp], ebp; call ebx; 
0x0015dae9: je 0x15db0f; sub byte ptr [ebp - 0x68f4f52], cl; call dword ptr [ebp - 0x73]; 
0x0015e020: je 0x15e046; sub byte ptr [ebp - 0x68f4052], cl; call dword ptr [ebp - 0x73]; 
0x0015e2a6: je 0x15e2cc; xor al, 0xe8; ret 0xfeec; 
0x0016326e: je 0x16325c; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x001633d4: je 0x1633fa; add al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x00164b9f: je 0x164bc5; adc al, 0xeb; adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x001650d2: je 0x1650f8; and al, 0x89; ret; 
0x00165388: je 0x1653ae; cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x00166241: je 0x166267; sbb bh, bh; je 0x16626b; sbb byte ptr [esi - 0x18], dl; ret 0xfebc; 
0x00166245: je 0x16626b; sbb byte ptr [esi - 0x18], dl; ret 0xfebc; 
0x0016819d: je 0x1681c3; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00168677: je 0x168682; sub esp, 0xc; push esi; call eax; 
0x001688a7: je 0x1688cd; adc al, 0x56; call dword ptr [eax + 4]; 
0x001688d5: je 0x1688fb; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001688e4: je 0x1689cb; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00168976: je 0x168a00; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x00168b2a: je 0x168b35; sub esp, 0xc; push esi; call eax; 
0x00168b09: je 0x168b9c; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00168c5a: je 0x168c6f; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00168d13: je 0x168d39; adc al, 0xff; je 0x168d3d; je 0x168d6b; call dword ptr [ecx]; 
0x00168d17: je 0x168d3d; je 0x168d6b; call dword ptr [ecx]; 
0x00168d19: je 0x168d6b; call dword ptr [ecx]; 
0x00168df3: je 0x168e02; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00168e37: je 0x168e40; add esp, 8; pop ebx; ret; 
0x00169556: je 0x1694e8; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00169572: je 0x1694e8; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001696b9: je 0x1696df; xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x001699e6: je 0x16998c; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00169a09: je 0x169a14; sub esp, 0xc; push edi; call eax; 
0x00169c14: je 0x169ade; sub esp, 0xc; push esi; call eax; 
0x00169bfb: je 0x169c21; dec eax; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00169d15: je 0x169d20; sub esp, 0xc; push esi; call eax; 
0x00169d3b: je 0x169d36; call dword ptr [eax - 0x73]; 
0x00169ecd: je 0x169ef5; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00169fff: je 0x16a010; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016a0aa: je 0x16a0d0; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016a135: je 0x16a15d; add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x0016a635: je 0x16a65b; or byte ptr [esi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x0016a66d: je 0x16a678; sub esp, 0xc; push esi; call eax; 
0x0016a7fd: je 0x16a825; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0016a894: je 0x16a8b8; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0016aa68: je 0x16ab6b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0016ab9d: je 0x16ab98; call dword ptr [edx + 0x6a]; 
0x0016ad96: je 0x16ad91; call dword ptr [edx + 0x6a]; 
0x0016ad95: je 0x16ae0b; stc; call dword ptr [edx + 0x6a]; 
0x0016ae4d: je 0x16ae73; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016ae44: je 0x16ae80; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016ae97: je 0x16aebd; sbb al, 0x53; call dword ptr [eax]; 
0x0016aed6: je 0x16aee0; xor edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x0016c6b4: je 0x16c6c0; add esp, 4; pop ebx; pop esi; ret; 
0x0016c774: je 0x16c780; add esp, 4; pop ebx; pop esi; ret; 
0x0016c834: je 0x16c840; add esp, 4; pop ebx; pop esi; ret; 
0x0016c8f5: je 0x16c91b; xor al, ch; ret; 
0x0016cb2a: je 0x16cb50; adc byte ptr [ecx + 0x446ce8c7], cl; cli; jmp dword ptr [ebp - 0x77]; 
0x0016cc51: je 0x16cc77; adc al, ch; inc edi; inc ebx; cli; jmp dword ptr [ebp - 0x77]; 
0x0016d5b7: je 0x16d5c8; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0016d861: je 0x16d887; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x0016dac0: je 0x16dae6; inc eax; push ebp; call esi; 
0x0016df5b: je 0x16df66; sub esp, 0xc; push esi; call eax; 
0x0016df34: je 0x16e078; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016e198: je 0x16e1a6; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0016e28a: je 0x16e285; call dword ptr [eax - 0x73]; 
0x0016e96a: je 0x16e933; stc; call dword ptr [edx + 0x6a]; 
0x0016e9d7: je 0x16e9d2; call dword ptr [edi + 0x6a]; 
0x0016ed9d: je 0x16edc5; add byte ptr [ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016f304: je 0x16f32a; adc al, ch; or eax, 0x8100013a; ret; 
0x0016f3e8: je 0x16f3f3; sub esp, 0xc; push esi; call eax; 
0x0016f3c9: je 0x16f408; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0016f59f: je 0x16f5aa; sub esp, 0xc; push edi; call eax; 
0x0016fa1a: je 0x16fa15; call dword ptr [eax + 0x53]; 
0x0016fe29: je 0x16fe24; call dword ptr [edi + 0x56]; 
0x0017006d: je 0x170095; add byte ptr [ebx - 0x18], dl; mov dword ptr [0x8100012c], eax; ret; 
0x001703b6: je 0x1703dc; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x001705e8: je 0x17060e; inc eax; push ebp; call esi; 
0x001708b9: je 0x1708c4; sub esp, 0xc; push ebp; call eax; 
0x0017089b: je 0x1709a8; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00170c24: je 0x170c32; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x00170de1: je 0x170e07; adc byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call eax; 
0x00170df0: je 0x171280; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x001713e2: je 0x1713fb; mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0017159f: je 0x171640; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x001716d4: je 0x1716cf; call dword ptr [ecx + 0x6a]; 
0x001718ef: je 0x1718ea; call dword ptr [eax - 0x73]; 
0x00171b4d: je 0x171b73; cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x00171ca4: je 0x171d01; pop edi; ret; 
0x001721e9: je 0x1721fa; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0017298b: je 0x172998; add esp, 4; pop ebx; pop esi; ret; 
0x00172a05: je 0x172a10; add esp, 4; pop ebx; pop esi; ret; 
0x00172a12: je 0x172a15; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00172a85: je 0x172a90; add esp, 4; sub eax, -0x80; pop ebx; pop esi; ret; 
0x00172b05: je 0x172b18; add esp, 4; add eax, 0x90; pop ebx; pop esi; ret; 
0x00172b95: je 0x172ba8; add esp, 4; add eax, 0x94; pop ebx; pop esi; ret; 
0x00172d64: je 0x172d70; add esp, 4; pop ebx; pop esi; ret; 
0x00172f35: je 0x172f5d; add byte ptr [ecx + 0xb4a9], cl; add bl, ch; ret; 
0x00173347: je 0x17336d; adc al, 0x53; call dword ptr [eax]; 
0x0017347a: je 0x1734a0; sbb al, 0x53; call eax; 
0x00173546: je 0x17356c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x001737c4: je 0x1737e0; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x173804; add esp, 0x1c; ret; 
0x001738e8: je 0x1738f6; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00173fd1: je 0x173fdf; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00174057: je 0x17408f; sub esp, 0xc; mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00174e0e: je 0x174e09; call dword ptr [eax - 0x73]; 
0x00174e9b: je 0x174eb8; sub esp, 4; push -1; push ebp; push esi; call edi; 
0x00174f31: je 0x174f50; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00175011: je 0x175030; cmp eax, 2; sete al; movzx eax, al; ret; 
0x001755e1: je 0x175600; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00175680: je 0x1756a6; adc byte ptr [ebx - 0x75], bl; inc eax; or al, 0x5e; pop edi; jmp eax; 
0x001756b9: je 0x1756df; adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0017582a: je 0x175825; call dword ptr [eax - 0x73]; 
0x001763fd: je 0x176425; add byte ptr [ebx - 0x7cfbdbbc], cl; inc eax; adc al, 4; mov eax, 1; ret; 
0x0017680d: je 0x176833; adc byte ptr [ebp - 0x68a487a], cl; call dword ptr [eax - 0x73]; 
0x00176fd2: je 0x176ff8; xor byte ptr [ecx], ch; ret 0x5356; 
0x001777a2: je 0x1777c8; xor byte ptr [ecx], ch; ret 0x5356; 
0x00179a41: je 0x179a67; jo 0x179a6e; ret; 
0x0017b6da: je 0x17b6e8; add esp, 4; pop ebx; pop esi; ret; 
0x0017bedd: je 0x17bf05; add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0017d23e: je 0x17d264; sbb byte ptr [ebp - 0x6893b80], cl; call dword ptr [eax - 0x18]; 
0x0017efd6: je 0x17effc; cmp al, ch; ret 0xfa05; 
0x0017f7ec: je 0x17f7e0; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0017f861: je 0x17f888; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0017f8e8: je 0x17f910; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x0017fabd: je 0x17fad0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00181350: je 0x181376; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0018169f: je 0x1816c5; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00181a4d: je 0x181a75; add byte ptr [ebx - 0x18], dl; ret; 
0x00181fc9: je 0x182020; cmp dl, 0x2f; ja 0x24a04; mov eax, dword ptr [ebp - 0x38]; add eax, dword ptr [eax + edx*4 - 0x6c854]; jmp eax; 
0x001828cd: je 0x1828f5; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x001829d6: je 0x1829f4; cmp al, 4; jne 0x24a09; mov eax, 8; add esp, 0xc; ret; 
0x00182b5d: je 0x182b85; add al, ch; mov eax, 0x81000001; ret 0x42af; 
0x00182e26: je 0x182e4c; sbb al, 0xe8; xor byte ptr [esi - 0x3b7c0015], 0x1c; ret; 
0x00182ecd: je 0x182ee7; sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00182f21: je 0x182f2f; lea edx, [ebx - 0x214]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x00182fa1: je 0x182fb0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00183801: je 0x183810; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0018464b: je 0x184658; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001848e4: je 0x18490a; adc al, ch; sub eax, 0x81ffffe4; ret; 
0x00184bb2: je 0x184bd8; and byte ptr [ebx + 0x568b1446], cl; adc byte ptr [ecx], bh; ret 0x4972; 
0x00186a9d: je 0x186ac5; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0018879d: je 0x1887c5; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0018947a: je 0x1894a0; sub al, 0xe8; sahf; psubb mm7, mm7; add esp, 0x2c; ret; 
0x001894aa: je 0x1894d0; sub al, 0xe8; outsb dx, byte ptr [esi]; psubb mm7, mm7; add esp, 0x2c; ret; 
0x0018a69d: je 0x18a6c5; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0018be12: je 0x18be38; sub al, 0xff; je 0x18be3c; sub al, 0xe8; ret 0xfd41; 
0x0018be16: je 0x18be3c; sub al, 0xe8; ret 0xfd41; 
0x0018c88c: je 0x18c890; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018da9d: je 0x18dab0; call 0x182d19; add ebx, 0x46c6c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018fa9d: je 0x18fab0; call 0x182d19; add ebx, 0x44eec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00191a8f: je 0x191ab0; call 0x182d19; add ebx, 0x4317a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00193bbd: je 0x193be5; add bh, dh; ret 0xf; 
0x00193cd2: je 0x193cf0; call 0x182d19; add ebx, 0x410f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194cb2: je 0x194cd0; call 0x182d19; add ebx, 0x402d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00196cbd: je 0x196ce5; add bh, dh; ret 0xf; 
0x001980fd: je 0x198125; add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0019814d: je 0x198175; add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x001981ad: je 0x1981d5; add byte ptr [eax + 1], bh; ja 0x1981b9; neg eax; ret; 
0x001999fd: je 0x199a25; add byte ptr [esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x0019eded: je 0x19ee15; add byte ptr [eax + 1], bh; ja 0x19edf9; neg eax; ret; 
0x0019f29d: je 0x19f2b0; pop ebx; mov eax, 1; ja 0x19f2a9; neg eax; ret; 
0x0019f2bd: je 0x19f2e5; add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001a0add: je 0x1a0ac0; add eax, ecx; pop ebx; pop esi; ret; 
0x001a0c0d: je 0x1a0c35; add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x001a0c84: je 0x1a0ca0; mov eax, 1; jg 0x1a0c90; neg eax; ret; 
0x001a0ff6: je 0x1a1010; mov eax, 1; ja 0x1a1001; neg eax; ret; 
0x001a28fd: je 0x1a2925; add dh, dh; ret 0x7510; 
0x001a3b42: je 0x1a3b4d; pmovmskb eax, xmm1; test eax, eax; jne 0x1a3d80; xor eax, eax; ret; 
0x001a4052: je 0x1a40b0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x001a4987: je 0x1a4a8a; mov eax, 4; pop edi; ret; 
0x001a49e0: je 0x1a4a9e; mov eax, 8; pop edi; ret; 
0x001a4a30: je 0x1a4ab2; mov eax, 0xc; pop edi; ret; 
0x001a4a62: je 0x1a4ac6; cmp byte ptr [edx + 0xf], 0; je 0x1a4ac6; mov eax, 0x10; pop edi; ret; 
0x001a4a68: je 0x1a4ac6; mov eax, 0x10; pop edi; ret; 
0x001a5262: je 0x1a5270; test al, 1; jne 0x1a5280; lea eax, [ecx + 4]; ret; 
0x001a525d: je 0x1a5285; add byte ptr [eax + eax*8 + 0x1a80c74], al; jne 0x1a5280; lea eax, [ecx + 4]; ret; 
0x001a52fb: je 0x1a528a; je 0x1a5325; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001a526d: je 0x1a5295; add dh, dh; les eax, ptr [ecx]; jne 0x1a5290; lea eax, [ecx + 0xc]; ret; 
0x001a52fd: je 0x1a5325; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001a544c: je 0x1a53e4; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a5510: je 0x1a54f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a5523: je 0x1a54f0; test al, 0xf0; jne 0x1a54b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a550b: je 0x1a5520; and eax, 1; je 0x1a54f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001ad985: je 0x1ad998; add al, 0x83; ret 0x3908; 
0x001af032: je 0x1af03e; fld1; fdiv dword ptr [edx - 0x62dc4]; fstp st(0); leave; ret; 
0x000243f6: je 0x24413; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0016f738: je 0x24979; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00024b42: je 0x24b45; ret; 
0x00024d3a: je 0x24d60; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00024d5f: je 0x24d7b; mov edx, 1; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00024dd0: je 0x24df6; inc eax; push dword ptr [esp + 0x40]; call esi; 
0x00024dd4: je 0x24dfa; inc eax; call esi; 
0x00024dc9: je 0x24e08; sub esp, 4; push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x00024e27: je 0x24e4d; inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x00024e2b: je 0x24e51; inc eax; call ecx; 
0x00024e85: je 0x24eab; inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e89: je 0x24eaf; inc eax; call dword ptr [ebp]; 
0x00025c63: je 0x25c89; pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00025c68: je 0x25c8e; xor bh, bh; jae 0x25c72; call edi; 
0x0002601e: je 0x26033; sub esp, 0xc; push esi; call 0x180100; mov dword ptr [esp], ebx; call esi; 
0x00026f6d: je 0x26f82; sub esp, 0xc; push edi; call 0x180100; mov dword ptr [esp], ebx; call edi; 
0x00028461: je 0x28487; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028465: je 0x2848b; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028469: je 0x2848f; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028fb2: je 0x28fd8; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00028fb6: je 0x28fdc; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x00029545: je 0x2956b; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00029549: je 0x2956f; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002954d: je 0x29573; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00029870: je 0x29896; cmp al, 0x8d; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000299af: je 0x29933; stc; call dword ptr [eax - 0x73]; 
0x00029977: je 0x2999d; cmp al, 0x8d; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000299aa: je 0x299d0; cmp al, 0x8d; xchg byte ptr [edx + eax*4 - 7], dh; call dword ptr [eax - 0x73]; 
0x000299cd: je 0x299f3; cmp al, 0x8d; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000299f0: je 0x29a16; cmp al, 0x8d; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x00029a13: je 0x29a39; cmp al, 0x8d; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x00029be3: je 0x29c09; push esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00029be7: je 0x29c0d; pop esp; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002a152: je 0x2a178; push esp; push dword ptr [esp + 0x54]; call esi; 
0x0002a156: je 0x2a17c; push esp; call esi; 
0x0002ac4d: je 0x2ac73; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002ac51: je 0x2ac77; pushal; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002b5ec: je 0x2b612; cmp al, 0x8d; xchg byte ptr [edx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x0002b632: je 0x2b658; cmp al, 0x8d; xchg byte ptr [edx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x0002b69e: je 0x2b6c4; cmp al, 0x8d; xchg ah, cl; jp 0x2b69f; call dword ptr [eax - 0x73]; 
0x0002b8ca: je 0x2b8f0; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x0002b8ce: je 0x2b8f4; insb byte ptr es:[edi], dx; call edi; 
0x0002bab9: je 0x2badf; sub byte ptr [ebp - 0x2e7af00a], al; or byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x0002bac5: je 0x2baeb; sbb al, 0x89; ret 0xb60f; 
0x0002c20a: je 0x2c230; and byte ptr [ebx - 0x76dbdb84], cl; ret 0xf229; 
0x0002c715: je 0x2c73b; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002c719: je 0x2c73f; pop esp; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002cf02: je 0x2cf28; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002cf06: je 0x2cf2c; mov eax, dword ptr fs:[esp + 0x54]; call eax; 
0x0002d29d: je 0x2d2c5; add byte ptr [ecx - 0x769fdbbc], cl; ret 0x9de9; 
0x0002daf9: je 0x2db1f; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002dafd: je 0x2db23; pop eax; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002e2de: je 0x2e304; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002e2e2: je 0x2e308; mov eax, dword ptr fs:[esp + 0x54]; call eax; 
0x0002ef9d: je 0x2efc3; cmp al, 0x8b; inc esp; and al, 0x34; call eax; 
0x0002f32f: je 0x2f352; sub esp, 0xc; push ebx; call 0x180100; mov dword ptr [esp], esi; call ebx; 
0x0002fbaa: je 0x2fbb8; add esp, 8; pop ebx; ret; 
0x0002fba5: je 0x2fbb8; cmp eax, 3; je 0x2fbb8; add esp, 8; pop ebx; ret; 
0x00033107: je 0x3312d; sbb al, 0xe8; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00033519: je 0x3351d; call edx; 
0x000337f5: je 0x337f9; call eax; 
0x00033aad: je 0x33ab9; mov dword ptr [esp + 4], eax; call edx; 
0x00034a7b: je 0x34a82; cmp byte ptr [eax], 0; jne 0x34a90; mov eax, edx; add esp, 0xc; ret; 
0x00034abb: je 0x34ac2; cmp byte ptr [eax], 0; jne 0x34ad0; mov eax, edx; add esp, 0xc; ret; 
0x00034b02: je 0x34b28; sub al, 0xe8; mov dh, 0xc; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00034b36: je 0x34b5c; sbb byte ptr [edx], ch; call 0x34af0; add esp, 0x1c; ret; 
0x00035dc5: je 0x35ded; add byte ptr [ebp - 0x7cd58a40], al; ret; 
0x0003610e: je 0x36134; sub byte ptr [edx], ch; call 0x360b0; add esp, 0x2c; ret; 
0x00036bed: je 0x36c15; add byte ptr [ecx - 0x7cbbdb94], cl; ret; 
0x000396b6: je 0x396dc; and al, 0xe8; ret 0xfff5; 
0x0003b4c3: je 0x3b4c7; fchs; ret; 
0x0003b843: je 0x3b847; fchs; ret; 
0x0003cb11: je 0x3cb23; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0003cee5: je 0x3cf00; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x0003d928: je 0x3d94e; sbb al, 0xe8; nop; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003d948: je 0x3d96e; sbb al, 0xe8; jo 0x3d941; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003e275: je 0x3e29b; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x0003e644: je 0x3e5c9; in al, dx; or byte ptr [edx], ch; push edx; call eax; 
0x0003e968: je 0x3e98e; sbb byte ptr [eax + 0x50], dl; call 0x3e9d0; add esp, 0x1c; ret; 
0x0003eb25: je 0x3eb4b; dec esp; call eax; 
0x0003f285: je 0x3f2ab; xor byte ptr [eax - 0x73], dl; test dword ptr [edx], ebp; aas; stc; call dword ptr [ebx + 0x50]; 
0x0003ff55: je 0x3ff7b; sbb al, 0xe8; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000408df: je 0x40905; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00040994: je 0x409ba; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00040a0c: je 0x40a32; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00040ac4: je 0x40aea; or bh, bh; push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000418e7: je 0x418f0; add esp, 8; pop ebx; ret; 
0x00041f95: je 0x41fbb; sbb al, 0xe8; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0004209d: je 0x420c5; add byte ptr [eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x000420f6: je 0x42105; bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00042116: je 0x42125; bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00042157: je 0x4215d; mov eax, edx; xor edx, edx; ret; 
0x00042197: je 0x4219f; bsr eax, eax; add eax, 1; ret; 
0x000421a6: je 0x421ae; bsr eax, eax; add eax, 1; ret; 
0x000421b6: je 0x421be; bsr eax, eax; add eax, 1; ret; 
0x00042207: je 0x4220f; bsr eax, eax; add eax, 1; ret; 
0x00042260: je 0x42286; sbb al, 0xe8; push 0x83001639; les ebx, ptr [eax]; pop ebx; ret; 
0x000423d6: je 0x423e1; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x000423f6: je 0x42401; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00042421: je 0x42438; bsr eax, edx; xor eax, 0x1f; add eax, 1; pop ebx; ret; 
0x0004250d: je 0x42535; add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x00042548: je 0x42554; movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000425b7: je 0x425d0; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000425e9: je 0x425f5; movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042629: je 0x42634; not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042649: je 0x42654; not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004267e: je 0x42690; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x0004269d: je 0x426c5; add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x00042751: je 0x4275c; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x0004276c: je 0x42774; bsr eax, edx; xor eax, 0x1f; ret; 
0x0004278c: je 0x42794; bsr eax, edx; xor eax, 0x1f; ret; 
0x000427f1: je 0x427fc; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x0004280c: je 0x42817; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x0004282b: je 0x42833; bsr eax, edx; xor eax, 0x1f; ret; 
0x0004284b: je 0x42853; bsr eax, edx; xor eax, 0x1f; ret; 
0x0004289c: je 0x428a7; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042885: je 0x428ad; add byte ptr [edi], cl; mov ebp, 0xf0835bc2; pop ds; ret; 
0x00042930: je 0x42938; pop ebx; ret; 
0x000429ec: je 0x429f0; pop ebx; ret; 
0x000463df: je 0x46405; sbb al, 0xe8; jns 0x463ee; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00048ced: je 0x48d13; or al, 0x89; ret; 
0x0004ac95: je 0x4ac98; ret; 
0x0004c971: je 0x4c971; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0004cb6a: je 0x4cb90; sbb al, 0xff; je 0x4cb94; sbb al, 0xe8; ljmp 0x1cc4:0x83ffffd6; ret; 
0x0004cb6e: je 0x4cb94; sbb al, 0xe8; ljmp 0x1cc4:0x83ffffd6; ret; 
0x0004d3bd: je 0x4d3e3; sbb al, 0xe8; sbb ecx, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00051325: je 0x5134b; sub al, 0xe8; jae 0x5132b; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00055045: je 0x55060; add al, 0x83; ret; 
0x0005934b: je 0x59371; sbb al, 0x89; ret 0xc801; 
0x00059d35: je 0x59dab; jns 0x59cff; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x00059d36: je 0x59db1; mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x00059f52: je 0x59f60; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x00059fbe: je 0x59fe4; sbb al, 0xe8; jp 0x59fdb; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0005a2aa: je 0x5a2d0; sbb al, 0xff; je 0x5a2d4; sbb al, 0xe8; ljmp 0x1cc4:0x830000b0; ret; 
0x0005a2ae: je 0x5a2d4; sbb al, 0xe8; ljmp 0x1cc4:0x830000b0; ret; 
0x0005a8d4: je 0x5a8fa; adc al, ch; cmp eax, 0x81001284; ret; 
0x0005a94c: je 0x5a958; add esp, 0xc; ret; 
0x0005aa29: je 0x5aa84; cmp eax, 0xb; ja 0x2352a; mov edx, dword ptr [esi + eax*4 - 0x73764]; add edx, esi; jmp edx; 
0x0005ae0d: je 0x5ae33; or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0005b3fd: je 0x5b425; add dh, dh; ret 0xf50; 
0x0005f6a5: je 0x5f6cb; sub al, ch; ret; 
0x0005facd: je 0x5faf5; add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x63], -7; call dword ptr [eax + 0x6a]; 
0x00060485: je 0x604a8; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x00060536: je 0x6055c; sub al, 0xe8; cmp byte ptr [edx + eax], 0; add esp, 0x2c; ret; 
0x0006055e: je 0x60584; sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x7d3a0; add esp, 0x2c; ret; 
0x00060564: je 0x6058a; sub al, 0xe8; xor al, 0xce; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x00060744: je 0x6076a; sbb al, 0xe8; xor al, 0xb1; or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x00060c69: je 0x60c8f; adc byte ptr [ebx - 0x6c72f714], al; inc eax; stc; call dword ptr [esi + 0x52]; 
0x0006108e: je 0x610b4; sbb al, 0xe8; jp 0x610d3; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00061b11: je 0x61b37; sbb byte ptr [ebp - 0x6725f7a], cl; call dword ptr [eax - 0x73]; 
0x00061f0c: je 0x61e9b; stc; call dword ptr [eax - 0x18]; 
0x00063020: je 0x63046; sub al, 1; ret; 
0x00064ff4: je 0x64f83; stc; call dword ptr [eax - 0x18]; 
0x0006531e: je 0x65344; sbb al, 0xe8; jp 0x65324; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006d521: je 0x6d547; sbb byte ptr [ebp - 0x6725f7a], cl; call dword ptr [eax - 0x73]; 
0x0006d82a: je 0x6d7b9; stc; call dword ptr [eax - 0x18]; 
0x00070e65: je 0x70e8b; or al, 0xe8; ret; 
0x000712b6: je 0x71245; stc; call dword ptr [eax - 0x18]; 
0x0007159e: je 0x715c4; sbb al, 0xe8; jp 0x715a4; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00071de0: je 0x71de8; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x7249c]; jmp eax; 
0x00077c1c: je 0x77c28; add esp, 0xc; ret; 
0x00077d22: je 0x77d56; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0007ab4f: je 0x7ab68; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0007abaf: je 0x7abd5; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007abc5: je 0x7abd8; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0007ac06: je 0x7ac18; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007bfba: je 0x7bfd0; sub eax, 1; mov dword ptr [edx + 0x1a44], eax; ret; 
0x0007c4a4: je 0x7c4b0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0007dae4: je 0x7db0a; adc al, 0xe8; sub eax, 0x81001052; ret; 
0x0007e40d: je 0x7e435; add byte ptr [ecx - 0x76207622], cl; ret 0xcb89; 
0x0007f9f4: je 0x7fa1a; adc al, ch; sbb eax, 0x81001033; ret; 
0x0007fa6a: je 0x7fa90; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0007fbba: je 0x7fbe0; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0007fdbf: je 0x7fdc4; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x0007fe19: je 0x7fe1e; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0007fe76: je 0x7fe88; cmp ecx, edx; jb 0x7fe70; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007ffe4: je 0x8000a; adc al, ch; sub eax, 0x8100102d; ret; 
0x000806dd: je 0x80705; add byte ptr [ecx], bh; ret; 
0x000813fc: je 0x81422; adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x00081d7d: je 0x81da5; add byte ptr [ecx], dh; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x00082045: je 0x8206d; add al, ch; ret; 
0x00082b54: je 0x82b7a; adc al, ch; mov ebp, 0x81001001; ret; 
0x00082f23: je 0x82f30; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x82f30; ret; 
0x00083954: je 0x8397a; adc al, ch; mov ebp, 0x81000ff3; ret; 
0x0008416f: je 0x84174; mov byte ptr [edx], 0; pop ebx; ret; 
0x0008454d: je 0x84575; add byte ptr [ebx - 0x18], dl; ret; 
0x0008459b: je 0x845c1; sbb al, 0xe8; cmp eax, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x00085bda: je 0x85bf0; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x00085ce5: je 0x85d0d; add byte ptr [ebx - 0x17afe714], al; fistp qword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00085f25: je 0x85f4d; add byte ptr [ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x00085fe1: je 0x86007; cmp bl, ch; ret 0x8d2e; 
0x00086215: je 0x8623d; add byte ptr [ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x000871e4: je 0x8720a; adc al, ch; sub eax, 0x81000fbb; ret; 
0x00087223: je 0x87230; pop ebx; pop esi; pop edi; ret; 
0x000876b2: je 0x876d8; adc al, 0x8b; adc esi, esi; ret 0xf08; 
0x0008825a: je 0x88280; sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0008890d: je 0x88933; cmp al, 0x55; call dword ptr [esi + 0x20]; 
0x000889d2: je 0x88a40; sub eax, 1; mov dword ptr [ebx + 0x1a78], eax; add esp, 8; pop ebx; ret; 
0x00089504: je 0x8952a; adc al, ch; or eax, 0x81000f98; ret; 
0x0008959c: je 0x895c2; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000896d4: je 0x896fa; adc al, ch; cmp eax, 0x81000f96; ret; 
0x0008976c: je 0x89792; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x00089875: je 0x8989d; add al, ch; xchg ebx, eax; ret 0xffff; 
0x00089dfd: je 0x89e23; cmp byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00089f78: je 0x89f8e; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008a16d: je 0x8a195; add byte ptr [eax - 1], bh; mov edx, eax; ret; 
0x0008a296: je 0x8a2a8; cmp ecx, edx; jb 0x8a290; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008ae26: je 0x8ae38; cmp eax, edx; jne 0x8ae20; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0008b12d: je 0x8b155; add byte ptr [eax - 1], bh; ret; 
0x0008b26c: je 0x8b288; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008b27a: je 0x8b290; sub eax, 1; mov dword ptr [edx + 0x1a78], eax; ret; 
0x0008b29c: je 0x8b2b8; add byte ptr [eax], al; cmp eax, 1; jg 0x8b2b0; ret; 
0x0008b2b5: je 0x8b2d1; add byte ptr [eax], al; push eax; call 0x8d660; add esp, 0x1c; ret; 
0x0008b579: je 0x8b59f; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0008bbd3: je 0x8bbe8; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0008bcbf: je 0x8bcd0; mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0008c421: je 0x8c447; sub al, 0xff; je 0x8c44b; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0008c425: je 0x8c44b; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0008c593: je 0x8c5b9; xor bh, bh; je 0x8c5bd; cmp al, 0x51; call eax; 
0x0008c597: je 0x8c5bd; cmp al, 0x51; call eax; 
0x0008c65b: je 0x8c681; xor byte ptr [edx + 0x51], dl; call eax; 
0x0008c73c: je 0x8c762; sub al, 0x52; push ecx; push edi; call eax; 
0x0008c8c4: je 0x8c8ea; and al, 0x51; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008ca04: je 0x8ca18; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0008cafd: je 0x8cb25; add byte ptr [ebx - 0x5c9ae3c0], cl; jl 0x8cb07; add byte ptr [eax], al; ret; 
0x0008cb54: je 0x8cb60; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008cc04: je 0x8cc0b; add esp, 8; pop ebx; ret; 
0x0008cc39: je 0x8cc48; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008cce2: je 0x8cce8; ret; 
0x0008d3ef: je 0x8d4a0; mov ecx, dword ptr [esp + 0xc]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008d550: je 0x8d557; add esp, 8; pop ebx; ret; 
0x0008d5a2: je 0x8d5e0; mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008d5dd: je 0x8d605; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008d9e2: je 0x8d9c0; sub esp, 0xc; add ebx, 8; add esi, 8; push eax; call ecx; 
0x0008dcb6: je 0x8dcc0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008dffd: je 0x8e038; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008e569: je 0x8e578; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008e97b: je 0x8e990; test edx, edx; jne 0x8e9a0; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0008ea96: je 0x8eab0; cmp eax, 1; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x0008ec14: je 0x8ec48; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008eeea: je 0x8eef8; add esp, 4; pop ebx; pop esi; ret; 
0x0008f401: je 0x8f419; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008f6ff: je 0x8f730; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008f951: je 0x8f96c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008fa65: je 0x8fa8d; add byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008fb5e: je 0x8fb68; pop ebx; pop esi; pop edi; ret; 
0x0008fbc0: je 0x8fbd0; pop ebx; pop esi; pop edi; ret; 
0x0008fc39: je 0x8fc40; pop ebx; pop esi; pop edi; ret; 
0x000909cd: je 0x909f5; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00090cbe: je 0x90d0c; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00090f02: je 0x90f08; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009114b: je 0x91173; mov ecx, dword ptr [ebp - 0x58]; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091f1b: je 0x91706; test al, 0x40; jne 0x91706; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00091b33: je 0x91b59; add al, 0x89; ret; 
0x0009274d: je 0x92775; add byte ptr [ecx - 0x7cefdbb4], cl; in al, dx; or byte ptr [ebx - 0x72f3dba4], cl; and dword ptr [edi + 0x39], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00092d2e: je 0x92d54; sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0009314d: je 0x93175; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0009619b: je 0x961a8; mov eax, 0x16; ret; 
0x000961a5: je 0x961cd; add byte ptr [ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x000961ca: je 0x961e0; cmp edx, 1; jne 0x961f0; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0009623d: je 0x96251; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0009631d: je 0x96360; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0009641c: je 0x96428; xor eax, eax; add esp, 0xc; ret; 
0x000975b2: je 0x975b8; test al, 1; jne 0x97586; mov eax, 0x10; pop ebx; ret; 
0x0009759a: je 0x975c0; mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0009777b: je 0x976f8; mov ecx, dword ptr [esp + 4]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097c05: je 0x97c2d; add byte ptr [eax + 0x16], bh; ret; 
0x00097e61: je 0x97e87; adc al, 0x89; ret 0xe283; 
0x00097e88: je 0x97ecc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00097f51: je 0x97f77; adc al, 0x89; ret 0xe283; 
0x00097f85: je 0x97fad; add byte ptr [ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00097f7c: je 0x97fcc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0009806d: je 0x98095; add byte ptr [eax + 0x16], bh; ret; 
0x00098572: je 0x98598; sbb al, 0x89; ret; 
0x00098673: je 0x98676; ret; 
0x00098758: je 0x9877e; sub al, 0x52; call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x000987eb: je 0x987c0; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000987b9: je 0x987c8; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x00098a3d: je 0x98a50; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00098ede: je 0x98efd; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00098f4f: je 0x98f58; ret; 
0x0009947b: je 0x99450; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099449: je 0x99458; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x000997bb: je 0x99790; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099789: je 0x99798; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0009a876: je 0x9a89c; sbb al, 0xe8; add bh, byte ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x0009aef4: je 0x9aeb2; pop ebx; pop esi; ret; 
0x0009aed1: je 0x9af20; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x0009b515: je 0x9b502; mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x9b510; pop ebx; ret; 
0x0009b4fe: je 0x9b513; xor eax, eax; pop ebx; ret; 
0x0009c586: je 0x9c5ac; sbb al, 0xe8; ret 0xfff0; 
0x0009cfa4: je 0x9cfca; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x9d570; add esp, 0x1c; ret; 
0x0009d2cb: je 0x9d310; mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009d562: je 0x9d588; sub al, 0xe8; test byte ptr [eax + eax], 0; add esp, 0x2c; ret; 
0x0009d6f4: je 0x9d71a; add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009d8b0: je 0x9d8d6; dec esp; call dword ptr gs:[0x10]; 
0x0009d929: je 0x9d94f; dec esp; call dword ptr gs:[0x10]; 
0x0009d974: je 0x9d99a; dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9b4: je 0x9d9da; dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009e06b: je 0x9e091; or byte ptr [eax + 0x199], bh; call dword ptr gs:[0x10]; 
0x0009e0fb: je 0x9e121; sub al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009e0f4: je 0x9e168; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009e16d: je 0x9e193; or byte ptr [eax + 0x104], bh; call dword ptr gs:[0x10]; 
0x0009eb7d: je 0x9eba5; add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0009ff85: je 0x9ff90; add esp, 0xc; ret; 
0x0009ffad: je 0x9ffd5; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000a2487: je 0xa24ad; or byte ptr [ebp - 0x657677a], cl; call dword ptr [eax - 0x73]; 
0x000a24aa: je 0xa24d0; or byte ptr [ebp - 0x657677a], cl; call dword ptr [eax - 0x73]; 
0x000a2bdd: je 0xa2c05; add byte ptr [ecx - 0x76e7743a], cl; ret 0xeec1; 
0x000a4729: je 0xa47e8; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000a4820: je 0xa4830; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000a4885: je 0xa48ad; add byte ptr [ebx - 0xaff714], al; jae 0xa48b3; call edx; 
0x000a5f16: je 0xa5f3c; sbb al, 0xe8; mov byte ptr [0x8300019f], al; les ebx, ptr [eax]; pop ebx; ret; 
0x000a6e3b: je 0xa6e53; lea eax, [edx - 0xaadf4]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa774]; cmovne eax, edx; ret; 
0x000a75c8: je 0xa75ee; or byte ptr [ecx], al; ret 0xfe83; 
0x000a7c86: je 0xa7c8d; cmp cl, dl; je 0xa7c8d; inc eax; pop edi; ret; 
0x000a7c8a: je 0xa7c8d; inc eax; pop edi; ret; 
0x000a8f07: je 0xa8f2d; sbb al, 0xe8; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a93b9: je 0xa93bf; cmp eax, ebx; jne 0xa93b0; mov eax, edx; pop ebx; ret; 
0x000a9489: je 0xa9480; pop ebx; ret; 
0x000a94b9: je 0xa94b0; cmp edx, esi; je 0xa94b0; pop ebx; pop esi; ret; 
0x000a94bd: je 0xa94b0; pop ebx; pop esi; ret; 
0x000a955d: je 0xa9570; cmp eax, ecx; jne 0xa9550; mov eax, edx; pop ebx; ret; 
0x000a9715: je 0xa973b; adc byte ptr [ebx - 0x7cebdba4], cl; stc; or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97d5: je 0xa97fb; adc byte ptr [ebx - 0x7cebdba4], cl; stc; or byte ptr [edi + 0x2a], dh; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x000a9898: je 0xa98be; sbb al, 0xe8; lock add dword ptr fs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x000a98fa: je 0xa9920; sbb al, 0xe8; mov esi, 0x83000165; les ebx, ptr [eax]; pop ebx; ret; 
0x000aa35d: je 0xaa383; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000aef8d: je 0xaefb5; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x000b0e68: je 0xb0e6c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b0f9d: je 0xb0fc5; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000b102d: je 0xb1055; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b103d: je 0xb1065; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b104d: je 0xb1075; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b1d7a: je 0xb11b0; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000b1d1f: je 0xb1230; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b53ed: je 0xb5415; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000b547d: je 0xb54a5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b548d: je 0xb54b5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b549d: je 0xb54c5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b6e88: je 0xb6e92; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b75cd: je 0xb75f5; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b75dd: je 0xb7605; add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000b787d: je 0xb78a5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000b8cbd: je 0xb8ce5; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b8ccd: je 0xb8cf5; add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000b8f7d: je 0xb8fa5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000ba87d: je 0xba8a5; add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000bae02: je 0xbadb5; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be81d: je 0xbe845; add byte ptr [ebx + 0x5e], bl; ret; 
0x000be9ff: je 0xbeb60; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000beb6d: je 0xbeb95; add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x000bebb7: je 0xbebd0; bsf ecx, ecx; sub edx, ecx; jbe 0xbebf0; add eax, ecx; ret; 
0x000bed89: je 0xbedda; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bee3b: je 0xbee8c; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000bf0d2: je 0xbf0dd; pmovmskb eax, xmm1; test eax, eax; jne 0xbf150; xor eax, eax; ret; 
0x000bf100: je 0xbf14b; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000bf1ba: je 0xbf190; bsr ecx, edx; add eax, ecx; ret; 
0x000bf212: je 0xbf270; bsr edi, edi; add eax, edi; pop edi; ret; 
0x000bf3ff: je 0xbf410; bsf ecx, ecx; add eax, ecx; ret; 
0x000bf448: je 0xbf460; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000bf588: je 0xbf5d4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bf69f: je 0xbf680; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000bf71f: je 0xbf700; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000bf8f1: je 0xbf8f4; inc eax; pop edi; ret; 
0x000bfa95: je 0xbfa98; inc eax; pop edi; pop esi; ret; 
0x000bfe43: je 0xbfe53; call ecx; 
0x000c00ae: je 0xc00b4; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c07d3: je 0xc07d6; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000c08f6: je 0xc08ff; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xc08f8; pop esi; ret; 
0x000c09a0: je 0xc09a9; or dword ptr [eax + 0x3c90], 1; xor eax, eax; pop ebx; ret; 
0x000c13a3: je 0xc13c9; sbb byte ptr [edx], ch; call 0xc18c0; add esp, 0x1c; ret; 
0x000c1868: je 0xc18e0; pop es; add byte ptr [ebp - 0x654537e], cl; call dword ptr [eax - 0x73]; 
0x000c19a3: je 0xc19c9; xor bh, bh; aaa; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000c1b0b: je 0xc1b16; mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000c1e30: je 0xc1e56; sub al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000c2598: je 0xc259e; test edx, edx; jne 0xc2590; ret; 
0x000c3411: je 0xc33f8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c34f4: je 0xc351a; adc al, 0xe8; sbb eax, 0x81000bf8; ret; 
0x000c41f1: je 0xc41d8; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000c442c: je 0xc4452; xor al, 0xff; je 0xc4456; inc eax; push ebp; call esi; 
0x000c4430: je 0xc4456; inc eax; push ebp; call esi; 
0x000c4aff: je 0xc4b25; sbb al, 0xe8; cmp dword ptr [ecx], ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c4b2d: je 0xc4b53; sbb al, 0xe8; or ecx, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c6235: je 0xc6207; stc; call dword ptr [eax + 0x56]; 
0x000c63a1: je 0xc63c7; xor byte ptr [ecx - 0x76227612], cl; ret; 
0x000c7e4d: je 0xc7e73; sbb al, 0xe8; mov eax, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c8f65: je 0xc8f37; stc; call dword ptr [eax + 0x56]; 
0x000c90d1: je 0xc90f7; xor byte ptr [ecx - 0x76227612], cl; ret; 
0x000c91e5: je 0xc920b; adc byte ptr [eax - 0x18], dl; ret 0x684; 
0x000cac3a: je 0xcac60; sbb al, 0xff; je 0xcac64; sbb al, 0xe8; lcall 0x1cc4, 0x83ffffd9; ret; 
0x000cac3e: je 0xcac64; sbb al, 0xe8; lcall 0x1cc4, 0x83ffffd9; ret; 
0x000cade5: je 0xcae0b; sub al, 0xe8; jae 0xcadeb; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cc765: je 0xcc737; stc; call dword ptr [eax + 0x56]; 
0x000cc8b1: je 0xcc8d7; cmp byte ptr [ecx - 0x76227612], cl; ret; 
0x000ce6d5: je 0xce6fb; sub al, 0xe8; jae 0xce6db; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cef95: je 0xcefbb; sub al, 0xe8; jae 0xcef9b; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cf645: je 0xcf66b; sub al, 0xe8; jae 0xcf64b; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cff3f: je 0xcff65; sbb al, 0xe8; sbb dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d1b59: je 0xd1b61; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d1bad: je 0xd1bd5; add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000d1d1a: je 0xd1d28; mov eax, esi; pop ebx; pop esi; ret; 
0x000d2285: je 0xd22a0; add al, 0x83; ret; 
0x000d2cc5: je 0xd2ced; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000d378d: je 0xd37b5; add byte ptr [ebx - 0x365f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000d38fd: je 0xd38cf; stc; call dword ptr [eax + 0x56]; 
0x000d6bed: je 0xd6c15; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000d6cad: je 0xd6cd5; add byte ptr [edi + 0x5e], bl; ret; 
0x000d6e97: je 0xd6eb0; mov cl, dl; and cl, 0xf; je 0xd6ec0; ret; 
0x000d6e9e: je 0xd6ec0; ret; 
0x000d6eb5: je 0xd6ed0; add eax, 2; ret; 
0x000d6eed: je 0xd6f15; add byte ptr [eax + 1], bh; ret; 
0x000d6f88: je 0xd6fb0; mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd6f70; add eax, 1; ret; 
0x000d70b3: je 0xd70d9; sbb al, 0xe8; test dword ptr [ebx - 0x3b7c0001], ebp; adc al, 0x5b; pop esi; ret; 
0x000d8a70: je 0xd8a96; xor al, 0x8b; inc esp; and al, 0x78; call eax; 
0x000d8bff: je 0xd8c25; xor al, 0x8b; inc esp; and al, 0x78; call eax; 
0x000dbedb: je 0xdbe68; pop esp; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000dbeda: je 0xdbf50; mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000dbffd: je 0xdc050; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000dd819: je 0xdd83f; sub byte ptr [ebx - 0x72dbdbbc], cl; sbb byte ptr [ecx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x000dd8b1: je 0xdd8d7; sub byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [edx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x000ddfa1: je 0xddfc7; adc al, 0x66; or dword ptr [esp + 0x58], 0x46890408; adc cl, ch; ret 0xffed; 
0x000de2a5: je 0xde2cb; adc al, 0xf; inc edx; ret 0x4c80; 
0x000dec0d: je 0xdec33; cmp byte ptr [ecx - 0x16bfdbbc], cl; xchg edi, eax; in al, 0xff; push esi; ret; 
0x000df04c: je 0xdf072; jns 0xdefd9; ret 0x448b; 
0x000df101: je 0xdf127; jns 0xdf08e; ret 0x448b; 
0x000df182: je 0xdf1a8; jns 0xdf10f; ret 0x448b; 
0x000dff23: je 0xdff49; sub al, 0xe8; lds esp, ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000e1ef1: je 0xe1e74; and al, ch; daa; call 0xc4921ef8; adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x7e9; 
0x000e308f: je 0xe30b5; xor byte ptr [ecx], ch; ret; 
0x000e41fa: je 0xe4220; cmp byte ptr [ecx], ch; ret 0xc889; 
0x000e47ca: je 0xe47d0; add esp, 0xc; ret; 
0x000e489a: je 0xe48a0; add esp, 0xc; ret; 
0x000e4993: je 0xe49b9; xor al, 0x8b; pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e49ee: je 0xe4a20; sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x000e4b74: je 0xe4b26; cmp eax, -0x26; jne 0xe4bb0; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e4b12: je 0xe4b40; sub esp, 8; push esi; push ebx; call eax; 
0x000e4b48: je 0xe4b64; sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000e5488: je 0xe5498; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x000e5567: je 0xe558d; and al, 0x83; jmp dword ptr [ebx + 0x77]; 
0x000e68f4: je 0xe6888; sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000e6db4: je 0xe6d48; sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000e718d: je 0xe71b5; add ah, dh; mov eax, edx; call dword ptr gs:[0x10]; 
0x000eda45: je 0xeda14; pop ebx; ret; 
0x000eda7d: je 0xedaa5; add byte ptr [eax + 1], bh; ret; 
0x000edbf5: je 0xedc1d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000ee40e: je 0xee427; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000ef86d: je 0xef895; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x000f04f5: je 0xf04c4; pop ebx; ret; 
0x000f052d: je 0xf0555; add byte ptr [eax + 1], bh; ret; 
0x000f06a5: je 0xf06cd; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f0ebe: je 0xf0ed7; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f12c5: je 0xf1294; pop ebx; ret; 
0x000f12fd: je 0xf1325; add byte ptr [eax + 1], bh; ret; 
0x000f1475: je 0xf149d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f1c8e: je 0xf1ca7; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f30dd: je 0xf3105; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x000f3d65: je 0xf3d34; pop ebx; ret; 
0x000f3d9d: je 0xf3dc5; add byte ptr [eax + 1], bh; ret; 
0x000f3f15: je 0xf3f3d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f472e: je 0xf4747; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f4b45: je 0xf4b14; pop ebx; ret; 
0x000f4b7d: je 0xf4ba5; add byte ptr [eax + 1], bh; ret; 
0x000f4cf5: je 0xf4d1d; add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f550e: je 0xf5527; sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x000f695d: je 0xf6985; add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x000f756b: je 0xf7571; cmp al, 0x3f; jne 0xf7589; mov eax, 1; ret; 
0x000f7eae: je 0xf7ddb; cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x000f7def: je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000f7ec5: je 0xf7eed; add byte ptr [eax + 0x40], bh; ret; 
0x000f7f4f: je 0xf7f62; mov eax, 0xffffffff; ret; 
0x000f7f2a: je 0xf7f62; xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000f7f05: je 0xf7f62; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000f7f6e: je 0xf7f62; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x000f823a: je 0xf8228; mov eax, 0xffffffff; ret; 
0x000f82fa: je 0xf8312; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f869b: je 0xf86ce; pop ebx; pop esi; pop edi; ret; 
0x000f8725: je 0xf8738; pop ebx; pop esi; ret; 
0x000f90f6: je 0xf911c; and al, ch; ret 0xfc87; 
0x000f9c25: je 0xf9c4d; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000f9fc8: je 0xf9ff3; add esp, 4; pop ebx; pop esi; ret; 
0x000fa005: je 0xfa02d; add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x000fa136: je 0xfa09b; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000fc86d: je 0xfc895; add byte ptr [ebx - 0x18], dl; mov dword ptr [0x81000864], eax; ret; 
0x000fc88f: je 0xfc8b0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001021fc: jecxz 0x102189; pop eax; add al, 0xf7; ret; 
0x00119dc9: jecxz 0x119d87; cld; jmp dword ptr [ebp - 0x77]; 
0x00122353: jecxz 0x1223af; stc; call dword ptr [eax - 0x39]; 
0x001241c8: jecxz 0x1241ca; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001282f6: jecxz 0x1282f6; push dword ptr [ebx]; push esi; call edi; 
0x0012843e: jecxz 0x128469; ret; 
0x00128549: jecxz 0x128574; ret; 
0x0012ddc1: jecxz 0x12ddbf; add eax, ebx; pop ebx; pop esi; ret; 
0x00130786: jecxz 0x130790; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00130816: jecxz 0x130818; add al, 0; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x001308b6: jecxz 0x1308b9; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00130946: jecxz 0x13094a; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00130c46: jecxz 0x130c4c; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00131158: jecxz 0x131162; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001311c8: jecxz 0x1311ca; add al, 0; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00131248: jecxz 0x13124b; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001312b8: jecxz 0x1312bc; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00131528: jecxz 0x13152e; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00138826: jecxz 0x138829; lea edx, [edx - 0xa31c4]; cmovne eax, edx; pop ebx; ret; 
0x00138876: jecxz 0x138879; lea edx, [edx - 0xa11f4]; cmovne eax, edx; pop ebx; ret; 
0x001388c6: jecxz 0x1388c9; lea edx, [edx - 0xa21e4]; cmovne eax, edx; pop ebx; ret; 
0x001396e2: jecxz 0x1396e3; jmp dword ptr [esi - 0x70]; 
0x00139722: jecxz 0x139723; jmp dword ptr [esi - 0x70]; 
0x0013ab56: jecxz 0x13ab57; jmp dword ptr [esi - 0x70]; 
0x0014db4e: jecxz 0x14dad9; ret 0x25; 
0x0015a47b: jecxz 0x15a47c; jmp dword ptr [esi - 0x70]; 
0x001669f9: jecxz 0x166a1f; std; dec dword ptr [ebp + 0x1ce80076]; ret; 
0x0016bd06: jecxz 0x16bcf0; aam 0xd1; cld; jmp dword ptr [esi - 0x70]; 
0x0016c723: jecxz 0x16c6a8; in al, dx; or byte ptr [ebp - 0xc1eb379], cl; call dword ptr [eax - 0x73]; 
0x00174eac: jecxz 0x174e31; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017689c: jecxz 0x176821; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00177c76: jecxz 0x177ca1; ret; 
0x0018c12f: jecxz 0x18c1b0; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018c7af: jecxz 0x18c82c; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00193e99: jecxz 0x193e28; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00194d72: jecxz 0x194d5c; mov eax, dword ptr [0x81fffedf]; ret; 
0x00194e79: jecxz 0x194e08; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00195d72: jecxz 0x195d5c; mov eax, dword ptr [0x81fffecf]; ret; 
0x00195e79: jecxz 0x195e08; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0019f79f: jecxz 0x19f7a6; add byte ptr [eax], al; pop ebx; ret; 
0x001a3e29: jecxz 0x1a3e2b; add byte ptr [eax], al; add edx, 0; jl 0x1a3fd0; mov eax, ecx; ret; 
0x001a421e: jecxz 0x1a41a3; ret 0x6640; 
0x00025f60: jecxz 0x25ee5; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00053160: jecxz 0x530eb; pop ds; pop ebx; pop esi; pop edi; ret; 
0x00058e99: jecxz 0x58e49; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x0006d620: jecxz 0x6d621; jmp eax; 
0x000734da: jecxz 0x734db; dec dword ptr [ebx - 0x5077b]; jmp dword ptr [ebp - 0x77]; 
0x00091b63: jecxz 0x91b85; jne 0x91706; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000a6546: jecxz 0xa6549; lea edx, [edx - 0xa31b4]; cmovne eax, edx; pop ebx; ret; 
0x000a6d76: jecxz 0xa6d79; lea edx, [edx - 0xa11e4]; cmovne eax, edx; pop ebx; ret; 
0x000a6dc6: jecxz 0xa6dc9; lea edx, [edx - 0xa21d4]; cmovne eax, edx; pop ebx; ret; 
0x000b7019: jecxz 0xb7021; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bfd3f: jecxz 0xbfcc4; ret 0x8304; 
0x000de9d4: jecxz 0xde9d5; dec dword ptr [ecx - 0x572f0828]; sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000e0f13: jecxz 0xe0e9e; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd329; 
0x000e21e2: jecxz 0xe21e3; call dword ptr [edx + 0x51]; 
0x000e222e: jecxz 0xe222f; call dword ptr [ebx + 0x52]; 
0x000e2287: jecxz 0xe2288; call dword ptr [eax + 0x57]; 
0x000e3eb5: jecxz 0xe3ea0; ret 0xffec; 
0x000ecda4: jecxz 0xecd29; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x001080db: jg 0x10813b; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0010842b: jg 0x108468; call dword ptr [esi]; 
0x00108782: jg 0x1087a8; add esp, 4; pop ebx; pop esi; ret; 
0x00109c8e: jg 0x109c13; jmp dword ptr [esi]; 
0x0010a1df: jg 0x10a1c9; mov ecx, edi; std; call dword ptr [ecx + 0x6a]; 
0x0010dcc0: jg 0x10dd1b; stc; call dword ptr [eax - 0x73]; 
0x0011d959: jg 0x11d95f; call dword ptr gs:[0x10]; 
0x0011d959: jg 0x11d95f; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x0011ec9b: jg 0x11ec9c; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0012736b: jg 0x127378; add esp, 8; pop ebx; ret; 
0x00127c79: jg 0x127cc8; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00127d2e: jg 0x127d58; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00128ebb: jg 0x128ee8; add esp, 8; pop ebx; ret; 
0x0012bd1e: jg 0x12bd20; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00139372: jg 0x139367; jmp dword ptr [esi - 0x70]; 
0x00139f9e: jg 0x139faf; dec eax; ret 0xc483; 
0x00139fc7: jg 0x13a024; pop esi; pop edi; pop ebp; ret; 
0x0014bfd1: jg 0x14bff0; add esp, 4; pop ebx; pop esi; ret; 
0x00150918: jg 0x150940; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00150d6e: jg 0x150d78; ret; 
0x00151375: jg 0x1513d0; pop ebx; pop esi; pop edi; ret; 
0x00151e61: jg 0x151e88; add esp, 8; pop ebx; ret; 
0x00152644: jg 0x152668; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x001526fd: jg 0x152710; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x001534b4: jg 0x1534d8; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0015356d: jg 0x153580; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x001554a4: jg 0x1554c8; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0015555d: jg 0x155570; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00159026: jg 0x159037; inc esp; ret 0x8489; 
0x0015baab: jg 0x15bad0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0015bb5d: jg 0x15bb70; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0015d005: jg 0x15d060; add esp, 4; pop ebx; pop esi; ret; 
0x0015d2ff: jg 0x15d328; add esp, 0x18; pop ebx; ret; 
0x0015e47b: jg 0x15e4a0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0015e52d: jg 0x15e540; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0015eb6b: jg 0x15eb90; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0015ec1d: jg 0x15ec30; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0015f7f4: jg 0x15f818; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0015f8ad: jg 0x15f8c0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00160d9b: jg 0x160dc0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00160e4d: jg 0x160e60; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0016108b: jg 0x1610b0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0016113d: jg 0x161150; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00161ef4: jg 0x161f18; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00161fad: jg 0x161fc0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x001627b1: jg 0x1627d8; add esp, 0x18; pop ebx; ret; 
0x0016c568: jg 0x16c579; mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x16c560; pop ebx; ret; 
0x0016d4ee: jg 0x16d4f0; add byte ptr [ebx + 0x3914244c], cl; ret 0x4e0f; 
0x00172dd2: jg 0x172dc0; add esp, 4; pop ebx; pop esi; ret; 
0x0017b800: jg 0x17b828; add esp, 8; pop ebx; ret; 
0x0017b87e: jg 0x17b8a0; add esp, 0x18; pop ebx; ret; 
0x0017b8fa: jg 0x17b920; add esp, 0x18; pop ebx; ret; 
0x0017b970: jg 0x17b998; add esp, 8; pop ebx; ret; 
0x0017bb20: jg 0x17bb48; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017bbd2: jg 0x17bbf8; add esp, 0x18; pop ebx; ret; 
0x0017d7fc: jg 0x17d808; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0017f23d: jg 0x17f238; call dword ptr [eax - 0x73]; 
0x001805c7: jg 0x1805e8; add esp, 4; pop ebx; pop esi; ret; 
0x00181971: jg 0x181998; add esp, 4; pop ebx; pop esi; ret; 
0x00181a11: jg 0x181a38; add esp, 4; pop ebx; pop esi; ret; 
0x0018c130: jg 0x18c136; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c1ee: jg 0x18c1f4; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c298: jg 0x18c2dc; jo 0x18c21d; ret 0x80; 
0x0018c360: jg 0x18c3a4; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c390: jg 0x18c3d4; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c3f0: jg 0x18c434; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c44b: jg 0x18c48f; fisub dword ptr [esi + 0xf]; jg 0x18c494; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018c450: jg 0x18c494; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018c4c0: jg 0x18c504; call 0x42eed42d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c5e6: jg 0x18c62a; ret; 
0x0018c626: jg 0x18c66a; ret 0xf66; 
0x0018c8f0: jg 0x18c934; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c920: jg 0x18c964; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c980: jg 0x18c9c4; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c9db: jg 0x18ca1f; fisub dword ptr [esi + 0xf]; jg 0x18ca24; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018c9e0: jg 0x18ca24; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018ca50: jg 0x18ca94; call 0x42eed9bd; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018cb76: jg 0x18cbba; ret; 
0x0018cbb6: jg 0x18cbfa; ret 0xf66; 
0x0018ed13: jg 0x18ed6d; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190293: jg 0x1902da; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a0c8b: jg 0x1a0c90; neg eax; ret; 
0x001a0fb6: jg 0x1a0fc0; neg eax; ret; 
0x001a4fc5: jg 0x1a4fd0; neg eax; pop edi; pop esi; pop ebx; ret; 
0x001a50b6: jg 0x1a50c0; neg eax; ret; 
0x001a5b3b: jg 0x1a5b3f; mov eax, edi; pop edi; ret; 
0x001a5bc6: jg 0x1a5bca; mov eax, edx; ret; 
0x001a8515: jg 0x1a8517; add cl, ch; ret; 
0x001aa102: jg 0x1aa104; add byte ptr [ecx + edi*2 + 0x39], dh; ret; 
0x00024feb: jg 0x24fe6; call dword ptr [eax - 0x18]; 
0x0002507e: jg 0x25079; call dword ptr [eax - 0x18]; 
0x000250df: jg 0x250da; call dword ptr [eax - 0x18]; 
0x0002512b: jg 0x25126; call dword ptr [eax - 0x18]; 
0x0002569e: jg 0x25699; call dword ptr [eax - 0x73]; 
0x000256ae: jg 0x256a9; call dword ptr [eax - 0x18]; 
0x00025d50: jg 0x25d4b; call dword ptr [eax - 0x73]; 
0x00025d6c: jg 0x25d67; call dword ptr [eax - 0x73]; 
0x00025d7c: jg 0x25d77; call dword ptr [eax - 0x18]; 
0x0002605a: jg 0x26055; call dword ptr [edx - 0x73]; 
0x00026faf: jg 0x26faa; call dword ptr [eax - 0x73]; 
0x0003a90e: jg 0x3a891; ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x0003bb67: jg 0x3bb68; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003cede: jg 0x3cef8; cmp dword ptr [esp + 4], 0; je 0x3cf00; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x0003e43b: jg 0x3e448; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003e643: jg 0x3e6b9; sub esp, 8; push 0; push edx; call eax; 
0x0003eb1a: jg 0x3ec88; sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x0003ebee: jg 0x3ecb0; call eax; 
0x0003f03f: jg 0x3f021; call dword ptr [eax - 0x73]; 
0x0003fa30: jg 0x3fa58; add esp, 0x14; pop ebx; pop esi; ret; 
0x00040476: jg 0x40480; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00041183: jg 0x411a8; add esp, 4; pop ebx; pop esi; ret; 
0x000412b2: jg 0x412d8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041ed6: jg 0x41f00; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00050f95: jg 0x50ff6; pop ebp; ret; 
0x000601e0: jg 0x60220; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000602e1: jg 0x60318; add esp, 0x18; pop ebx; ret; 
0x00066375: jg 0x6638a; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00070888: jg 0x70899; xchg esp, eax; ret 0xca08; 
0x00072716: jg 0x72719; shr byte ptr [ecx], cl; fdivr dword ptr [ecx]; ret 0x8f0f; 
0x0008b2a3: jg 0x8b2b0; ret; 
0x0008cc96: jg 0x8cc39; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008d89b: jg 0x8d8d8; pop ebx; pop esi; pop edi; ret; 
0x0008eae2: jg 0x8ea67; bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x0008f469: jg 0x8f3f4; ret 0x78b; 
0x0008f525: jg 0x8f558; test byte ptr [ecx], 0xc3; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008f9c9: jg 0x8f954; ret; 
0x000924d1: jg 0x924f8; add esp, 0x18; pop ebx; ret; 
0x00092bb2: jg 0x92c78; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00094991: jg 0x949c4; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096596: jg 0x965a7; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096cda: jg 0x96ceb; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096efa: jg 0x96f0b; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009751c: jg 0x9752d; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097991: jg 0x979ac; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00099e3e: jg 0x99ed8; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009a006: jg 0x9a014; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000ad6bd: jg 0xad640; ret 0x7f7f; 
0x000ad6bb: jg 0xad73c; jg 0xad640; ret 0x7f7f; 
0x000aef86: jg 0xaef8a; mov eax, edi; pop edi; ret; 
0x000af216: jg 0xaf21a; mov eax, edx; ret; 
0x000b3346: jg 0xb334a; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b35f6: jg 0xb35fa; lea eax, [edx + 0xf]; ret; 
0x000b6b43: jg 0xb6b36; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d56: jg 0xb6d59; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6ddb: jg 0xb6de2; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6e00: jg 0xb6e08; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6e1e: jg 0xb6e27; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6e3c: jg 0xb6e46; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6e5f: jg 0xb6e6a; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6e84: jg 0xb6e90; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6ec2: jg 0xb6ed0; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6ee6: jg 0xb6ef5; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6f46: jg 0xb6f57; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6f6c: jg 0xb6f7e; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b7046: jg 0xb705e; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b7076: jg 0xb708f; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b710e: jg 0xb712a; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b713c: jg 0xb7159; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b716c: jg 0xb718a; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b7196: jg 0xb71b5; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b71c6: jg 0xb71e6; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b71f6: jg 0xb7217; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b7226: jg 0xb7248; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b73a6: jg 0xb73af; pop edi; pop esi; pop ebx; ret; 
0x000b73b9: jg 0xb73c2; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b73da: jg 0xb73e3; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b73f9: jg 0xb7402; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b7419: jg 0xb7422; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b745b: jg 0xb7464; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b747b: jg 0xb7484; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b749b: jg 0xb74a4; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b753b: jg 0xb7544; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b755b: jg 0xb7564; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b757b: jg 0xb7584; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b759b: jg 0xb75a4; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b755f: jg 0xb75b8; push cs; pop edi; pop esi; pop ebx; ret; 
0x000b757f: jg 0xb75d8; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000b759f: jg 0xb75f8; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b75c2: jg 0xb761b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000b76d2: jg 0xb76db; pop edi; pop esi; pop ebx; ret; 
0x000b76c2: jg 0xb770b; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000b7753: jg 0xb775c; add edi, 0x10; call 0x182d2d; add ecx, 0x10e673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b776f: jg 0xb7778; add edi, 0x10; call 0x182d2d; add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b77df: jg 0xb7811; pop edi; pop esi; pop ebx; ret; 
0x000b77de: jg 0xb785f; xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b8323: jg 0xb8300; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b83bd: jg 0xb83c1; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b83e0: jg 0xb83e5; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b83fb: jg 0xb8401; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b841e: jg 0xb8425; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8443: jg 0xb844b; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8461: jg 0xb846a; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b84c7: jg 0xb84d3; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b84f5: jg 0xb8502; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8525: jg 0xb8533; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8559: jg 0xb8568; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8589: jg 0xb8599; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b85b9: jg 0xb85ca; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b85df: jg 0xb85f1; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8655: jg 0xb866a; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b877c: jg 0xb8797; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b880f: jg 0xb882d; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8839: jg 0xb8858; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8869: jg 0xb8889; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8899: jg 0xb88ba; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b88c9: jg 0xb88eb; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8a86: jg 0xb8a8f; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b8c2f: jg 0xb8c88; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000b8c6f: jg 0xb8cc8; jge 0x5e6aabbe; pop ebx; ret; 
0x000b8c8f: jg 0xb8ce8; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000b8cb2: jg 0xb8d0b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000b8dc2: jg 0xb8dcb; pop edi; pop esi; pop ebx; ret; 
0x000b8db2: jg 0xb8dfb; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000b8e53: jg 0xb8e5c; add edi, 0x10; call 0x182d2d; add ecx, 0x10d0d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e6f: jg 0xb8e78; add edi, 0x10; call 0x182d2d; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8edf: jg 0xb8f11; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b8ede: jg 0xb8f5f; xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x000badfd: jg 0xbae0b; add byte ptr [ecx + 0x10b174c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bae19: jg 0xbae27; add byte ptr [ecx + 0x10b158c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bb076: jg 0xbb078; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb086: jg 0xbb088; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb0aa: jg 0xbb0ac; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb0c9: jg 0xbb0cb; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb0e9: jg 0xbb0eb; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb109: jg 0xbb10b; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb12b: jg 0xbb12d; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb14b: jg 0xbb14d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb16b: jg 0xbb16d; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb18b: jg 0xbb18d; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1af: jg 0xbb1b1; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1ce: jg 0xbb1d0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1ee: jg 0xbb1f0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb20b: jg 0xbb20d; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb22b: jg 0xbb22d; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb24b: jg 0xbb24d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb20f: jg 0xbb261; or eax, 0x824448b; pop esi; ret; 
0x000bb26b: jg 0xbb26d; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb22f: jg 0xbb281; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb24f: jg 0xbb2a1; jnp 0x5e13d69b; ret; 
0x000bb26f: jg 0xbb2c1; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000be09c: jg 0xbe0ae; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be4e9: jg 0xbe4eb; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be50c: jg 0xbe50e; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be52d: jg 0xbe52f; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be54c: jg 0xbe54e; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be56c: jg 0xbe56e; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be5ae: jg 0xbe5b0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be5ce: jg 0xbe5d0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be5ee: jg 0xbe5f0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be6ce: jg 0xbe6d0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be6ee: jg 0xbe6f0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be70e: jg 0xbe710; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be6d2: jg 0xbe724; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x000be72e: jg 0xbe730; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be6f2: jg 0xbe744; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be712: jg 0xbe764; jnp 0x5b180b5e; pop esi; ret; 
0x000be732: jg 0xbe784; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000cbdc5: jg 0xcbdbd; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000cecbd: jg 0xced1e; pop ebp; ret; 
0x000d6ca5: jg 0xd6cb0; neg eax; pop edi; pop esi; ret; 
0x000d6cd5: jg 0xd6cd9; neg eax; ret; 
0x000da4b6: jg 0xda4d8; add esp, 8; pop ebx; ret; 
0x000e1ac5: jg 0xe1ab0; jmp esi; 
0x000e629c: jg 0xe62c0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e671d: jg 0xe6740; add esp, 4; pop ebx; pop esi; ret; 
0x000e6f93: jg 0xe6fb0; pop ebx; pop esi; pop edi; ret; 
0x000e6fe3: jg 0xe7000; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00102220: jge 0x102221; dec dword ptr [ecx + 0x24548bd9]; sbb byte ptr [esi - 0x7f], ah; loope 0x10222c; add esi, esi; ret; 
0x0011f1e6: jge 0x11f16b; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00122da0: jge 0x122e02; stc; call dword ptr [eax + 0x55]; 
0x0012505e: jge 0x125060; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129d6a: jge 0x129cef; ret 0x3113; 
0x0012c3cb: jge 0x12c3ce; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00136952: jge 0x1368d8; mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x00143202: jge 0x143187; in al, dx; or byte ptr [ebx - 0x72f7dbbc], cl; adc byte ptr [ecx + 0x6a], 0xf9; call dword ptr [eax + 0x53]; 
0x0014bf69: jge 0x14bfd7; stc; call dword ptr [eax - 0x73]; 
0x0014c9db: jge 0x14ca49; stc; call dword ptr [eax - 0x73]; 
0x00160d74: jge 0x160d67; call dword ptr [eax - 0x73]; 
0x00160e26: jge 0x160e19; call dword ptr [eax - 0x73]; 
0x00160ee8: jge 0x160edb; call dword ptr [eax - 0x73]; 
0x0017229c: jge 0x17221f; les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00173a3f: jge 0x173a40; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00183713: jge 0x183715; jb 0x183726; xchg esp, eax; ret; 
0x00187fc4: jge 0x187fb9; call dword ptr [edi - 1]; 
0x001a30bf: jge 0x1a30c1; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a3c3f: jge 0x1a3c41; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000243f3: jge 0x243c5; add byte ptr [ebx + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x243ca; call dword ptr [ebp - 0x38]; 
0x0005d0ff: jge 0x5d16d; std; dec dword ptr [ebx - 0x8b6b]; dec dword ptr [ebp - 0x6747f7e]; call dword ptr [eax - 0x73]; 
0x000b8add: jge 0x5e6a9e2a; pop ebx; ret; 
0x000b8b61: jge 0x5e6aa2ae; pop ebx; ret; 
0x000b8c71: jge 0x5e6aabbe; pop ebx; ret; 
0x000779d2: jge 0x779cd; call dword ptr [eax - 0x73]; 
0x000779ee: jge 0x779e9; call dword ptr [eax - 0x73]; 
0x00077a0a: jge 0x77a05; call dword ptr [eax - 0x73]; 
0x00077a26: jge 0x77a21; call dword ptr [eax - 0x73]; 
0x0007ba63: jge 0x7ba5f; jmp dword ptr [esi - 0x70]; 
0x000fb78b: jge 0x830fde05; ret; 
0x00084c14: jge 0x84c15; jmp dword ptr [ecx]; 
0x000b0f36: jge 0x851a1e86; mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x000b85b7: jge 0x851a953c; aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00093a5b: jge 0x93a56; call dword ptr [eax - 0x73]; 
0x00093a7a: jge 0x93a75; call dword ptr [eax - 0x73]; 
0x00093a99: jge 0x93a94; call dword ptr [eax - 0x73]; 
0x00094fa4: jge 0x94f9f; call dword ptr [eax - 0x73]; 
0x00094fe2: jge 0x94fdd; call dword ptr [eax - 0x73]; 
0x00095078: jge 0x95073; call dword ptr [eax - 0x73]; 
0x00095262: jge 0x9525d; call dword ptr [eax - 0x73]; 
0x000964f2: jge 0x9650d; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00096c72: jge 0x96c8d; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00096d78: jge 0x96d93; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00096e8a: jge 0x96ea5; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0009ae25: jge 0x9ae48; pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0009bc41: jge 0x9bc43; mov dword ptr [esp], ebp; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x000be208: jge 0xbe21a; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be27a: jge 0xbe28c; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be2a7: jge 0xbe2b9; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be2c4: jge 0xbe2d6; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be2e4: jge 0xbe2f6; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be309: jge 0xbe31b; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000d5bff: jge 0xd5be2; cmc; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x677e37a]; call dword ptr [eax - 0x73]; 
0x000f7dcc: jge 0xf7e00; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf7e40; ret; 
0x001000d5: jl 0x100060; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00100a2a: jl 0x100a50; adc al, 0xeb; or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x00101385: jl 0x1013ab; add al, 0xe9; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x0010392c: jl 0x103952; xor al, 0x8d; xchg esp, ebx; cmp al, 0xf9; dec dword ptr [ebp - 0x6b0bf71]; call dword ptr [eax - 0x17]; 
0x0010474b: jl 0x104771; or al, 0x89; ret 0xf889; 
0x00106129: jl 0x1060b4; ret 0xe8c0; 
0x0010d029: jl 0x10d04f; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax - 0x73]; 
0x0010d426: jl 0x10d44c; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax + 0x68]; 
0x0010d605: jl 0x10d62b; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax + 0x68]; 
0x0010dcbb: jl 0x10dce1; adc byte ptr [ebp - 0x6a68079], cl; call dword ptr [eax - 0x73]; 
0x0010e4c1: jl 0x10e4e7; add al, 0x89; fidivr word ptr [ecx]; ret; 
0x0010e577: jl 0x10e59d; or byte ptr [ebp - 0x64e2f79], cl; call dword ptr [eax - 0x73]; 
0x0010e6a6: jl 0x10e6cc; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax - 0x73]; 
0x0010e6be: jl 0x10e719; stc; call dword ptr [eax - 0x18]; 
0x0010e760: jl 0x10e786; or byte ptr [ebp - 0x64e0779], cl; call dword ptr [eax - 0x73]; 
0x0010f845: jl 0x10f86b; sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x10f7d4; ret; 
0x0010fa67: jl 0x10fa8d; or al, 0x8d; xchg eax, edi; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0010fb53: jl 0x10fb79; or al, 0x8d; xchg esp, ebx; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0010fb8a: jl 0x10fbb0; or al, 0x8d; xchg esp, ebx; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x001115c5: jl 0x111622; pop esi; pop edi; pop ebp; ret; 
0x001122f7: jl 0x11231d; adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00112c79: jl 0x112cd6; pop esi; pop edi; pop ebp; ret; 
0x001184d3: jl 0x1184dc; out dx, al; call dword ptr [edx - 0x73]; 
0x0011afd1: jl 0x11aff7; sub byte ptr [ebp - 0x64d1379], cl; call dword ptr [eax - 0x73]; 
0x0011bef7: jl 0x11bf1d; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0011cf57: jl 0x11cf7d; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00122b1b: jl 0x122b41; xor byte ptr [ebp - 0x6a3367d], cl; call dword ptr [eax + 0x55]; 
0x00125232: jl 0x125258; add al, 0x89; inc esp; and al, 0xc; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125ad2: jl 0x125af8; add al, 0x89; inc esp; and al, 0xc; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00129a88: jl 0x129aae; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x0012a01d: jl 0x12a039; add al, 0x83; ret; 
0x0012a7b3: jl 0x12a810; pop esi; pop edi; pop ebp; ret; 
0x0012ac34: jl 0x12ac37; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d650: jl 0x12d645; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012deb7: jl 0x12dedd; xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012e136: jl 0x12e193; pop esi; pop edi; pop ebp; ret; 
0x0013274a: jl 0x1327b1; stc; call dword ptr [ebp - 1]; 
0x0013420d: jl 0x134233; and byte ptr [ebp - 0x6470f79], cl; call dword ptr [eax - 0x73]; 
0x00134230: jl 0x134256; and byte ptr [ebp - 0x6470379], cl; call dword ptr [eax - 0x73]; 
0x001342b1: jl 0x13426a; stc; call dword ptr [eax - 0x18]; 
0x00134253: jl 0x134279; and byte ptr [ebp - 0x6470379], cl; call dword ptr [eax - 0x73]; 
0x00134276: jl 0x13429c; and byte ptr [ebp - 0x6470379], cl; call dword ptr [eax - 0x73]; 
0x00134299: jl 0x1342bf; and byte ptr [ebp - 0x6470379], cl; call dword ptr [eax - 0x73]; 
0x001342bc: jl 0x1342e2; and byte ptr [ebp - 0x6470f79], cl; call dword ptr [eax - 0x73]; 
0x0013589d: jl 0x135857; stc; call dword ptr [eax + 0x6a]; 
0x0013890c: jl 0x138966; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0013aba9: jl 0x13ab2e; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0013bc52: jl 0x13bc78; sbb al, 0x89; ret; 
0x0013c935: jl 0x13c95b; sub byte ptr [ebx - 0x7cd3db8c], cl; ret 0x8902; 
0x0013cdb5: jl 0x13cddb; or byte ptr [eax + 0xf000000], al; inc edx; ret 0x57c3; 
0x0013d23a: jl 0x13d260; sbb al, 0x39; ret; 
0x0013d509: jl 0x13d494; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0013e367: jl 0x13e38d; sbb byte ptr [ebp - 0x6443b79], cl; call dword ptr [eax - 0x73]; 
0x0013e5c6: jl 0x13e5ec; sbb byte ptr [ebp - 0x644d379], cl; call dword ptr [eax - 0x73]; 
0x0013e958: jl 0x13e97e; sbb byte ptr [ebp - 0x696e779], cl; call dword ptr [eax - 0x73]; 
0x001444d7: jl 0x1444fd; xor byte ptr [ebx - 0x18], dl; inc eax; ret 0xfff7; 
0x001473b1: jl 0x1473d7; add byte ptr es:[edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x0014c4a5: jl 0x14c466; stc; call dword ptr [eax - 0x18]; 
0x0014f325: jl 0x14f2aa; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00150a4f: jl 0x150a51; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00154c36: jl 0x154c5c; adc al, 0x8d; xchg eax, eax; ret; 
0x0015547c: jl 0x1554f9; int1; call dword ptr [eax - 0x73]; 
0x00155535: jl 0x1555b2; int1; call dword ptr [eax - 0x73]; 
0x001555f2: jl 0x15566f; int1; call dword ptr [eax - 0x73]; 
0x001577b7: jl 0x1577dd; adc al, 0x8d; xchg dword ptr [ebx + 0x6f], edi; stc; call dword ptr [eax + 0x55]; 
0x00157fe6: jl 0x15800c; xor byte ptr [ecx + 0x44830c78], cl; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x00158307: jl 0x15832d; or al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x0015888f: jl 0x1588b5; adc byte ptr [ebp - 0xe0a5369], cl; call dword ptr [edx + 0x6a]; 
0x00159b47: jl 0x159b6d; adc byte ptr [ebp - 0x63aa379], cl; call dword ptr [eax - 0x73]; 
0x0015a491: jl 0x15a4b7; adc byte ptr [ebp - 0x63aa379], cl; call dword ptr [eax - 0x73]; 
0x0015c845: jl 0x15c86b; sub al, 0x89; ret 0x7eb; 
0x00160cc3: jl 0x160c65; bnd call dword ptr [eax - 0x18]; 
0x00161ecd: jl 0x161ec0; call dword ptr [eax - 0x73]; 
0x00161f86: jl 0x161f79; call dword ptr [eax - 0x73]; 
0x00162043: jl 0x162036; call dword ptr [eax - 0x73]; 
0x0016383f: jl 0x1638b3; stc; call dword ptr [eax + 0x6a]; 
0x00163873: jl 0x1638e7; stc; jmp dword ptr [ebp - 0x75]; 
0x00163937: jl 0x1639ab; stc; call dword ptr [eax - 0x18]; 
0x001656be: jl 0x1656e4; sub byte ptr [ebp - 0x63a2379], cl; call dword ptr [eax - 0x73]; 
0x001656e1: jl 0x165707; sub byte ptr [ebp - 0x63a2379], cl; call dword ptr [eax - 0x73]; 
0x00165704: jl 0x16572a; sub byte ptr [ebp - 0x63a2379], cl; call dword ptr [eax - 0x73]; 
0x00169cc4: jl 0x169cea; dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0016cdf9: jl 0x16ce1f; and al, 0x89; ret 0xfeb; 
0x0016eb54: jl 0x16eb7a; adc al, ch; mov ebp, 0x81000141; ret; 
0x00173a69: jl 0x173a6a; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00174e08: jl 0x174e2e; adc byte ptr [ebp - 0x68b7e79], cl; call dword ptr [eax - 0x73]; 
0x00176bf7: jl 0x176b82; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x001776e2: jl 0x177708; sub byte ptr [ebp - 0x6358f79], cl; call dword ptr [eax - 0x73]; 
0x0017f214: jl 0x17f23a; sub byte ptr [ebp - 0x634fb79], cl; call dword ptr [eax - 0x73]; 
0x0017f237: jl 0x17f25d; sub byte ptr [ebp - 0x680d379], cl; call dword ptr [eax - 0x73]; 
0x0017f25a: jl 0x17f280; sub byte ptr [ebp - 0x634fb79], cl; call dword ptr [eax - 0x73]; 
0x0017f28b: jl 0x17f2b1; sub byte ptr [ebp - 0x634fb79], cl; call dword ptr [eax - 0x73]; 
0x0018012d: jl 0x180132; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001816c4: jl 0x1816ea; adc al, 0x8d; inc edx; dec dword ptr [ecx - 0x762e7635]; ret 0x6c8b; 
0x0018a308: jl 0x18a298; in eax, dx; call dword ptr [eax + 0x6a]; 
0x0018b8b3: jl 0x18b8d9; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0018bffd: jl 0x18c002; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0018c6c8: jl 0x18c6ce; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001a3f83: jl 0x1a3fd0; lea eax, [ecx + 0xa]; ret; 
0x001a3f93: jl 0x1a3fd0; lea eax, [ecx + 0xb]; ret; 
0x001a3efe: jl 0x1a3fd0; lea eax, [ecx + 0xc]; ret; 
0x001a3fa3: jl 0x1a3fd0; lea eax, [ecx + 0xd]; ret; 
0x001a3fb3: jl 0x1a3fd0; lea eax, [ecx + 0xe]; ret; 
0x001a3fc3: jl 0x1a3fd0; lea eax, [ecx + 0xf]; ret; 
0x001a3f13: jl 0x1a3fd0; lea eax, [ecx + 1]; ret; 
0x001a3f23: jl 0x1a3fd0; lea eax, [ecx + 2]; ret; 
0x001a3f33: jl 0x1a3fd0; lea eax, [ecx + 3]; ret; 
0x001a3e9b: jl 0x1a3fd0; lea eax, [ecx + 4]; ret; 
0x001a3f43: jl 0x1a3fd0; lea eax, [ecx + 5]; ret; 
0x001a3f53: jl 0x1a3fd0; lea eax, [ecx + 6]; ret; 
0x001a3f63: jl 0x1a3fd0; lea eax, [ecx + 7]; ret; 
0x001a3ed4: jl 0x1a3fd0; lea eax, [ecx + 8]; ret; 
0x001a3f73: jl 0x1a3fd0; lea eax, [ecx + 9]; ret; 
0x001a3db1: jl 0x1a3fd0; mov eax, ecx; ret; 
0x001a4a32: jl 0x1a4a34; add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x001a9af5: jl 0x1a9b10; add al, 0x83; ret; 
0x001aeefd: jl 0x1aef19; add al, 0x83; ret; 
0x00023275: jl 0x2328a; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129a99: jl 0x24ef0; je 0x129aa2; ret; 
0x00129c86: jl 0x24ef0; ret; 
0x0002865e: jl 0x28659; call dword ptr [eax - 0x73]; 
0x0002868f: jl 0x2868a; call dword ptr [eax - 0x73]; 
0x0002871c: jl 0x28717; call dword ptr [eax + 0x68]; 
0x00028744: jl 0x2873f; call dword ptr [eax - 0x73]; 
0x00028767: jl 0x28762; call dword ptr [eax + 0x68]; 
0x00028c75: jl 0x28c9b; cmp al, 0x8d; xchg esp, ebp; jnp 0x28c76; call dword ptr [eax - 0x73]; 
0x00028d9d: jl 0x28dc3; cmp al, 0x8d; xchg esp, ebp; jnp 0x28d9e; call dword ptr [eax - 0x73]; 
0x00028dc0: jl 0x28de6; cmp al, 0x8d; xchg esp, ebp; jnp 0x28dc1; call dword ptr [eax + 0x68]; 
0x00028de3: jl 0x28e09; cmp al, 0x8d; xchg esp, ebp; jnp 0x28de4; call dword ptr [eax + 0x68]; 
0x00028df5: jl 0x28e1b; cmp al, 0x8d; xchg esp, ebp; jnp 0x28df6; call dword ptr [eax - 0x73]; 
0x000291a1: jl 0x291c7; sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax - 0x73]; 
0x000292e6: jl 0x2930c; sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax - 0x73]; 
0x00029309: jl 0x2932f; sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax + 0x68]; 
0x0002932c: jl 0x29352; sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax + 0x68]; 
0x0002933e: jl 0x29364; sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax - 0x73]; 
0x00029ea3: jl 0x29ec9; cmp al, 0x8d; xchg dword ptr [ebx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00029efa: jl 0x29f20; cmp al, 0x8d; xchg dword ptr [ebx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00029f1d: jl 0x29f43; cmp al, 0x8d; xchg dword ptr [ebx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002a626: jl 0x2a64c; cmp byte ptr [ebp - 0x6851379], cl; call dword ptr [eax - 0x73]; 
0x0002a8b6: jl 0x2a8dc; cmp byte ptr [ebp - 0x6851379], cl; call dword ptr [eax - 0x73]; 
0x0002a93f: jl 0x2a965; cmp byte ptr [ebp - 0x6851379], cl; call dword ptr [eax - 0x73]; 
0x0002a962: jl 0x2a988; cmp byte ptr [ebp - 0x6851379], cl; call dword ptr [eax + 0x68]; 
0x0002a985: jl 0x2a9ab; cmp byte ptr [ebp - 0x6851379], cl; call dword ptr [eax + 0x68]; 
0x0002a997: jl 0x2a9bd; cmp byte ptr [ebp - 0x67da779], cl; call dword ptr [eax - 0x73]; 
0x0002a9ba: jl 0x2a9e0; cmp byte ptr [ebp - 0x67da779], cl; call dword ptr [eax - 0x73]; 
0x0002a9dd: jl 0x2aa03; cmp byte ptr [ebp - 0x67da779], cl; call dword ptr [eax - 0x73]; 
0x0002aa00: jl 0x2aa26; cmp byte ptr [ebp - 0x67da779], cl; call dword ptr [eax - 0x73]; 
0x0002aa23: jl 0x2aa49; cmp byte ptr [ebp - 0x67da779], cl; call dword ptr [eax - 0x73]; 
0x0002aa46: jl 0x2aa6c; cmp byte ptr [ebp - 0x67da779], cl; call dword ptr [eax - 0x73]; 
0x0002aee7: jl 0x2af44; pop esi; pop edi; pop ebp; ret; 
0x0002af79: jl 0x2af9f; cmp al, 0x8d; xchg esp, ecx; jp 0x2af7a; call dword ptr [eax - 0x73]; 
0x0002b090: jl 0x2b0b6; adc al, 0x89; ret; 
0x0002b0a6: jl 0x2b0cc; cmp al, 0x8d; xchg esp, ecx; jp 0x2b0a7; call dword ptr [eax - 0x73]; 
0x0002b088: jl 0x2b0e5; pop esi; pop edi; pop ebp; jmp eax; 
0x0002b5bb: jl 0x2b5e1; cmp al, 0x8d; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0002b60f: jl 0x2b635; cmp al, 0x8d; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0002b655: jl 0x2b67b; cmp al, 0x8d; xchg esp, ecx; jp 0x2b656; call dword ptr [eax + 0x68]; 
0x0002b678: jl 0x2b69e; cmp al, 0x8d; xchg esp, ecx; jp 0x2b679; call dword ptr [eax + 0x68]; 
0x0002b6c1: jl 0x2b6e7; cmp al, 0x8d; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0002b6e4: jl 0x2b70a; cmp al, 0x8d; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0002c20e: jl 0x2c234; and al, 0x89; ret 0xf229; 
0x0002cbcf: jl 0x2cbf5; or al, 0x89; cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x0002ce8d: jl 0x2ceea; pop esi; pop edi; pop ebp; ret; 
0x0002d420: jl 0x2d47d; pop esi; pop edi; pop ebp; jmp eax; 
0x0002dd23: jl 0x2dd49; adc byte ptr [ecx - 0x76f3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0002de75: jl 0x2de9b; cmp byte ptr [ebp - 0x685d379], cl; call dword ptr [eax - 0x73]; 
0x0002dfc3: jl 0x2dfe9; cmp byte ptr [ebp - 0x685d379], cl; call dword ptr [eax - 0x73]; 
0x0002dfe6: jl 0x2e00c; cmp byte ptr [ebp - 0x685d379], cl; call dword ptr [eax + 0x68]; 
0x0002e009: jl 0x2e02f; cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax - 0x73]; 
0x0002e02c: jl 0x2e052; cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax - 0x73]; 
0x0002e04f: jl 0x2e075; cmp byte ptr [ebp - 0x685d379], cl; call dword ptr [eax - 0x73]; 
0x0002e077: jl 0x2e09d; cmp byte ptr [ebp - 0x685d379], cl; call dword ptr [eax + 0x68]; 
0x0002e08c: jl 0x2e0b2; cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax - 0x73]; 
0x0002e26d: jl 0x2e2ca; pop esi; pop edi; pop ebp; ret; 
0x0002e7f3: jl 0x2e850; pop esi; pop edi; pop ebp; jmp eax; 
0x00034303: jl 0x34329; add al, 0x7f; setbe al; ret; 
0x00038549: jl 0x3856f; sbb byte ptr [ecx - 0x7c327611], cl; in al, dx; or al, 0x83; ret; 
0x00039e98: jl 0x39ebe; adc al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0003bee4: jl 0x3bf0a; adc al, ch; sub eax, 0x8100146e; ret; 
0x0003cea1: jl 0x3cf01; adc al, 0; add eax, 0x1f9f6f; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003cee1: jl 0x3cf07; add al, 0; je 0x3cf00; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x0003e85a: jl 0x3e880; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0003ffca: jl 0x3fff0; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x00046d23: jl 0x46d49; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x00046d46: jl 0x46d6c; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0004716d: jl 0x47193; or al, 1; ret 0xd389; 
0x00047399: jl 0x473bf; adc byte ptr [edi], cl; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x000475c9: jl 0x475ef; sbb byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x00049565: jl 0x4958b; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x0004971f: jl 0x49745; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x00049742: jl 0x49768; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x00049765: jl 0x4978b; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x00049788: jl 0x497ae; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x000497ab: jl 0x497d1; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x000497ce: jl 0x497f4; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x000497f1: jl 0x49817; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x0004981b: jl 0x49841; sbb byte ptr [ebp - 0x677e379], cl; call dword ptr [eax - 0x73]; 
0x0004983e: jl 0x49864; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x00049861: jl 0x49887; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x00049884: jl 0x498aa; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x000498a7: jl 0x498cd; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x000498ca: jl 0x498f0; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x000498ed: jl 0x49913; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x00049910: jl 0x49936; sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x0004a223: jl 0x4a249; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0004a246: jl 0x4a26c; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0004a66d: jl 0x4a693; or byte ptr [ecx], al; ret 0xd389; 
0x0004a899: jl 0x4a8bf; adc byte ptr [edi], cl; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x0004aac9: jl 0x4aaef; sbb byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x0004c8c7: jl 0x4c8ed; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004c952: jl 0x4c978; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004c975: jl 0x4c99b; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004c998: jl 0x4c9be; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004c9bb: jl 0x4c9e1; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004c9de: jl 0x4ca04; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004ca08: jl 0x4ca2e; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004ca37: jl 0x4ca5d; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004ca5a: jl 0x4ca80; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004ca7d: jl 0x4caa3; sbb byte ptr [ebp - 0x677e379], cl; call dword ptr [eax - 0x73]; 
0x0004caa0: jl 0x4cac6; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004cac3: jl 0x4cae9; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004cae6: jl 0x4cb0c; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004cb28: jl 0x4cb4e; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0004dca5: jl 0x4dccb; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0004dcc8: jl 0x4dcee; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0004e069: jl 0x4e08f; and byte ptr [eax - 0x7bf0cf05], al; ret; 
0x0004e13d: jl 0x4e163; sbb byte ptr [ecx], al; ret 0xd389; 
0x0004e599: jl 0x4e5bf; sub byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x0004e766: jl 0x4e769; ret; 
0x000505c4: jl 0x505ea; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x00050657: jl 0x5067d; sub byte ptr [ebp - 0x677e379], cl; call dword ptr [eax - 0x73]; 
0x0005067a: jl 0x506a0; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x0005069d: jl 0x506c3; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x000506c0: jl 0x506e6; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x000506e3: jl 0x50709; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x00050706: jl 0x5072c; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x00050729: jl 0x5074f; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x0005074c: jl 0x50772; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x0005078b: jl 0x507b1; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x000507ae: jl 0x507d4; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x000507d1: jl 0x507f7; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x000507f4: jl 0x5081a; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x00050817: jl 0x5083d; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x00050841: jl 0x50867; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x000539c1: jl 0x53959; add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000556e5: jl 0x5570b; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x00055708: jl 0x5572e; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0005a738: jl 0x5a6c3; stc; call dword ptr [eax - 0x73]; 
0x0005a754: jl 0x5a6df; stc; call dword ptr [eax - 0x73]; 
0x0005a770: jl 0x5a6fb; stc; call dword ptr [eax - 0x73]; 
0x0005a78c: jl 0x5a717; stc; call dword ptr [eax - 0x73]; 
0x0005d22b: jl 0x5d26e; stc; call dword ptr [eax - 0x18]; 
0x0005d361: jl 0x5d2ee; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x0005d684: jl 0x5d6e1; pop esi; pop edi; pop ebp; ret; 
0x00060a54: jl 0x60ab1; pop esi; pop edi; pop ebp; ret; 
0x00079dfd: jl 0x79e5a; pop esi; pop edi; pop ebp; ret; 
0x0007bb61: jl 0x7bb87; xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0007be4b: jl 0x7be71; or byte ptr [ebp - 0x66d0771], cl; jmp dword ptr [ebp - 0x75]; 
0x0008032e: jl 0x80354; inc esp; dec dword ptr [edi]; xchg esp, eax; ret; 
0x00081264: jl 0x81271; add byte ptr [ecx + 0x2bf0e9c3], cl; cli; jmp dword ptr [esi - 0x70]; 
0x00081a91: jl 0x81ab7; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0008452c: jl 0x84552; or byte ptr [ebp - 0x66cc379], cl; call dword ptr [eax - 0x73]; 
0x000851ba: jl 0x851e0; or al, 0x8d; xchg ebx, esi; dec esi; stc; call dword ptr [eax + 0x56]; 
0x00086675: jl 0x866d2; pop esi; pop edi; pop ebp; ret; 
0x0008b1e3: jl 0x8b1ff; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0008b2f0: jl 0x8b30c; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008caf6: jl 0x8caf8; add byte ptr [eax], al; ret; 
0x0008cb05: jl 0x8cb07; add byte ptr [eax], al; ret; 
0x0008cba8: jl 0x8cbaa; add byte ptr [eax], al; pop ebx; ret; 
0x0008cbc6: jl 0x8cbc8; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8cbd8; ret; 
0x0008d5d9: jl 0x8d5da; dec dword ptr [ebp + 0x5b002674]; pop esi; pop edi; ret; 
0x0008d843: jl 0x8d7ce; ret 0xca83; 
0x0008ffc7: jl 0x8ff52; call 0x5d685e29; ret; 
0x000906da: jl 0x90665; call 0x5d68653c; ret; 
0x00090d0d: jl 0x90d33; add al, 0x8d; xchg eax, eax; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x00090d30: jl 0x90d56; add al, 0x8d; xchg eax, eax; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x000921bc: jl 0x9220d; stc; call dword ptr [eax - 0x18]; 
0x00092258: jl 0x922a9; stc; call dword ptr [eax - 0x18]; 
0x000923b8: jl 0x923ba; add byte ptr [ebx - 0x7c72f314], al; clc; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x000929a1: jl 0x929a6; sldt word ptr [0x1a446f]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x00097ea1: jl 0x97ec7; adc al, 0x89; ret 0xca83; 
0x00097eeb: jl 0x97f11; adc al, 0x89; ret 0xc389; 
0x00097f05: jl 0x97f2b; adc al, 0x89; ret; 
0x00097f99: jl 0x97fbf; adc al, 0x89; ret 0xca83; 
0x00097ff8: jl 0x9801e; adc al, 0x89; ret 0xfbd1; 
0x0009801e: jl 0x98044; adc al, 0x89; ret 0xfbd1; 
0x0009b4fc: jl 0x9b4f0; je 0x9b513; xor eax, eax; pop ebx; ret; 
0x0009b54c: jl 0x9b540; mov edx, 0; cmovne eax, edx; ret; 
0x0009b5d4: jl 0x9b5fa; adc al, ch; cmp eax, 0x81000e77; ret; 
0x0009c028: jl 0x9c04e; or al, 0x8d; xchg dword ptr [eax - 0x67], edx; stc; call dword ptr [eax - 0x73]; 
0x000a11f0: jl 0xa11fb; add byte ptr [ebp - 0x656ff7d], cl; call dword ptr [eax - 0x73]; 
0x000a263b: jl 0xa2661; or al, 0x8d; xchg dword ptr [eax - 0x58], edi; stc; call dword ptr [eax - 0x73]; 
0x000a3dd9: jl 0xa3dff; and al, 0x8d; xchg dword ptr [eax - 0x58], esp; stc; call dword ptr [eax - 0x73]; 
0x000a3dfc: jl 0xa3e22; and al, 0x8d; xchg dword ptr [eax - 0x58], esp; stc; call dword ptr [eax - 0x73]; 
0x000a4533: jl 0xa4589; stc; call dword ptr [eax - 0x73]; 
0x000a6f08: jl 0xa6eb9; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x000a71a3: jl 0xa71c9; adc al, 0x83; ret 0x8301; 
0x000a7ad8: jl 0xa7afb; call 0x754c71de; add cl, byte ptr [ebp - 0x176f036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a8729: jl 0xa874f; sbb byte ptr [ecx], dh; ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x000a94dd: jl 0xa9503; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000a9c98: jl 0xa9cde; call 0x754c939e; add cl, byte ptr [ebp - 0x1785e36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aa355: jl 0xaa37b; sub byte ptr [ebx - 0x76d3dbac], cl; je 0xaa383; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000aaa7b: jl 0xaaaa1; pop es; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x000b6cc6: jl 0xb6cb8; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8780: jl 0xb8788; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bf158: jl 0xbf190; add eax, ecx; ret; 
0x000bf168: jl 0xbf190; lea eax, [ecx + eax + 0x10]; ret; 
0x000bf178: jl 0xbf190; lea eax, [ecx + eax + 0x20]; ret; 
0x000bf188: jl 0xbf190; lea eax, [ecx + eax + 0x30]; ret; 
0x000c1d62: jl 0xc1d88; sbb al, 0x8d; xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c1db5: jl 0xc1ddb; sbb al, 0x8d; xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c1dd5: jl 0xc1dfb; sbb al, 0x8d; xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c412a: jl 0xc4150; sbb al, 0x8d; xchg dword ptr [eax], eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c417d: jl 0xc41a3; sbb al, 0x8d; xchg dword ptr [eax], eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c419d: jl 0xc41c3; sbb al, 0x8d; xchg dword ptr [eax], eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c44b9: jl 0xc44df; sbb al, 0x8d; xchg dword ptr [eax], edx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c44d9: jl 0xc44ff; sbb al, 0x8d; xchg dword ptr [eax], edx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c44f9: jl 0xc451f; sbb al, 0x8d; xchg dword ptr [eax], edx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c451c: jl 0xc4542; sbb al, 0x8d; xchg dword ptr [eax], edx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c4531: jl 0xc4588; stc; call dword ptr [eax - 0x18]; 
0x000c5404: jl 0xc542a; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000c5427: jl 0xc544d; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000c7667: jl 0xc768d; xor byte ptr [edi], cl; xchg edx, eax; ret 0x7439; 
0x000c85a4: jl 0xc85ca; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000c85c7: jl 0xc85ed; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000c9c3b: jl 0xc9c61; or byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000cbda6: jl 0xcbdcc; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000cbdc9: jl 0xcbdef; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000cdf57: jl 0xcdf7d; cmp byte ptr [edi], cl; xchg edx, eax; ret 0x7439; 
0x000ce2be: jl 0xce2e4; sub al, 0x8d; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000ce372: jl 0xce398; sub al, 0x8d; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000ce3db: jl 0xce401; sub al, 0x8d; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000ce467: jl 0xce48d; sub al, 0x8d; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000ce4ad: jl 0xce4d3; sub al, 0x8d; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000ce4fa: jl 0xce520; sub al, 0x8d; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000ce540: jl 0xce566; sub al, 0x8d; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000d28e6: jl 0xd290c; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000d2909: jl 0xd292f; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x000d6d40: jl 0xd6d4c; mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x000d9ee4: jl 0xd9f1b; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000e19da: jl 0xe1a00; or al, 0x29; retf 0x490f; ret 0x1c8d; 
0x000e47c6: jl 0xe47ec; adc al, 1; je 0xe47d0; add esp, 0xc; ret; 
0x000e4896: jl 0xe48bc; adc al, 1; je 0xe48a0; add esp, 0xc; ret; 
0x000e5367: jl 0xe538d; add al, 0x83; ret 0x8301; 
0x000e5418: jl 0xe543e; add al, 0x83; ret 0x8301; 
0x000e5563: jl 0xe5589; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000e72b3: jl 0xe723e; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000ed58c: jl 0xed5b2; adc al, 0x8d; xchg dword ptr [esi + 0x57], esp; stc; call dword ptr [eax - 0x73]; 
0x000ed659: jl 0xed67f; adc al, 0x8d; xchg dword ptr [eax], edi; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x000ed69c: jl 0xed6c2; adc al, 0x8d; xchg dword ptr [eax], edi; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x000f11fd: jl 0xf1203; add byte ptr [ebx - 0x5ab6b], cl; dec dword ptr [ebp - 0x64f9b7e]; call dword ptr [eax + 0x68]; 
0x000f75e4: jl 0xf760a; adc al, ch; sub eax, 0x810008b7; ret; 
0x000f7654: jl 0xf767a; adc al, ch; mov ebp, 0x810008b6; ret; 
0x000fd83e: jl 0xfd864; or byte ptr [ecx + 0x293c244c], cl; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x000fd913: jl 0xfd939; or byte ptr [ecx], bh; ret; 
0x000ffad3: jl 0xffa5e; clc; pop ebx; pop esi; pop edi; ret; 
0x00108651: jle 0x1085d6; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0012012e: jle 0x120182; clc; inc dword ptr [ebx - 0x72aff33c]; or dword ptr [ebx], 0x66; stc; call dword ptr [eax + 0x6a]; 
0x0012072c: jle 0x120788; stc; call dword ptr [eax - 0x18]; 
0x001208ec: jle 0x120948; stc; call dword ptr [eax - 0x18]; 
0x00123622: jle 0x12361a; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0012c3f7: jle 0x12c3fa; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00136e0a: jle 0x136e05; call dword ptr [eax - 0x75]; 
0x00136f12: jle 0x136f0d; call dword ptr [eax - 0x75]; 
0x00140cf3: jle 0x140cfa; cmp byte ptr [ebx], 0x2e; je 0x140d00; add esp, 8; pop ebx; ret; 
0x00141011: jle 0x141012; jmp dword ptr [esi - 0x70]; 
0x0014bf77: jle 0x14bf67; dec dword ptr [ebp - 0x63f5b7d]; call dword ptr [eax + 0x68]; 
0x0015ea94: jle 0x15ea88; call dword ptr [eax - 0x18]; 
0x0016769f: jle 0x167714; stc; call dword ptr [eax + 0x6a]; 
0x001676d3: jle 0x167748; stc; jmp dword ptr [ebp - 0x75]; 
0x0016776f: jle 0x1677e4; stc; call dword ptr [eax - 0x18]; 
0x00172605: jle 0x172610; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001763c9: jle 0x1763df; pop ebx; pop esi; pop edi; ret; 
0x0018c24a: jle 0x18c250; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c306: jle 0x18c30c; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018f19a: jle 0x18f1dc; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f3a6: jle 0x18f3e8; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f83a: jle 0x18f83c; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019119a: jle 0x1911dc; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00191396: jle 0x1913d8; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0019329a: jle 0x1932dc; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001934a6: jle 0x1934e8; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019393a: jle 0x19393c; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0002fcf8: jle 0x2fd35; stc; call dword ptr [edx + 0x50]; 
0x0003fb1b: jle 0x3fb1d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000419e0: jle 0x419e2; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005226e: jle 0x52270; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005b0a8: jle 0x5afd5; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0007ab66: jle 0x7ab6b; or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x00084eb9: jle 0x84ed0; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00084fe9: jle 0x85000; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0009613d: jle 0x96106; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x00097082: jle 0x9708c; dec ecx; lcall 0, 0xca870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x000b6d7e: jle 0xb6d89; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bae37: jle 0xbae45; add byte ptr [ecx + 0x10b13ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bae5b: jle 0xbae69; add byte ptr [ecx + 0x10b116c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bae7c: jle 0xbae8a; add byte ptr [ecx + 0x10b0f5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bae95: jle 0xbaea3; add byte ptr [ecx + 0x10b0dcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000baebf: jle 0xbaecd; add byte ptr [ecx + 0x10b0b2c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000baee4: jle 0xbaef2; add byte ptr [ecx + 0x10b08dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be11f: jle 0xbe131; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be13d: jle 0xbe14f; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be161: jle 0xbe173; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be182: jle 0xbe194; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be19b: jle 0xbe1ad; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be1c5: jle 0xbe1d7; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be1ea: jle 0xbe1fc; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be226: jle 0xbe238; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be248: jle 0xbe25a; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be263: jle 0xbe275; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000d7a79: jle 0xd7a74; call dword ptr [eax + 0x56]; 
0x000dcb83: jle 0xdcb95; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000f9ff6: jle 0xfa045; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x000fba92: jle 0xfbae1; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x00060d17: jmp dword ptr [eax + 0x1d]; 
0x00175cab: jmp dword ptr [eax + 0x20]; 
0x00175c83: jmp dword ptr [eax + 0x24]; 
0x0017fac3: jmp dword ptr [eax + 0x30]; 
0x0016add3: jmp dword ptr [eax + 4]; 
0x0004fc78: jmp dword ptr [eax]; 
0x00024ac3: jmp dword ptr [ebp + 0x33]; 
0x0003d13a: jmp dword ptr [ebp - 0x39]; 
0x00069ace: jmp dword ptr [ebp - 0x3a]; 
0x0009a0c7: jmp dword ptr [ebp - 0x5d]; 
0x00032968: jmp dword ptr [ebp - 0x5f]; 
0x00030fb5: jmp dword ptr [ebp - 0x75]; 
0x00032632: jmp dword ptr [ebp - 0x77]; 
0x00098e48: jmp dword ptr [ebp - 0x7d]; 
0x0003d731: jmp dword ptr [ebp - 1]; 
0x00074db7: jmp dword ptr [ebp]; 
0x000e556b: jmp dword ptr [ebx + 0x77]; 
0x00023010: jmp dword ptr [ebx + 0xc]; 
0x00023006: jmp dword ptr [ebx + 8]; 
0x0016b4df: jmp dword ptr [ebx - 0x41]; 
0x000d3ec4: jmp dword ptr [ebx]; 
0x00024760: jmp dword ptr [ecx]; 
0x0012f170: jmp dword ptr [edi + 0x6d]; 
0x00160617: jmp dword ptr [edi + 0xd]; 
0x0005cae0: jmp dword ptr [edi + 0xf]; 
0x00040b16: jmp dword ptr [edx + 0x1f]; 
0x0018e293: jmp dword ptr [edx + 4]; 
0x0004526f: jmp dword ptr [edx]; 
0x0005d012: jmp dword ptr [esi + 0x25]; 
0x0005e330: jmp dword ptr [esi + 0x3d]; 
0x000fa42c: jmp dword ptr [esi + 0xb]; 
0x000add8f: jmp dword ptr [esi + 0xf]; 
0x0011301d: jmp dword ptr [esi + 3]; 
0x00058a00: jmp dword ptr [esi + 6]; 
0x0013c537: jmp dword ptr [esi - 0x39]; 
0x0013df90: jmp dword ptr [esi - 0x3f]; 
0x00024a17: jmp dword ptr [esi - 0x70]; 
0x0005b842: jmp dword ptr [esi - 0x75]; 
0x00027e9c: jmp dword ptr [esi - 0x77]; 
0x0015bf4a: jmp dword ptr [esi - 0x7b]; 
0x0005d01c: jmp dword ptr [esi - 0x7d]; 
0x000deb17: jmp dword ptr [esi - 0x7f]; 
0x000edfc3: jmp dword ptr [esi - 9]; 
0x00109c90: jmp dword ptr [esi]; 
0x00024fe3: jmp eax; 
0x0006ee63: jmp ebx; 
0x00031d9c: jmp ecx; 
0x000249e7: jmp edi; 
0x00037480: jmp edx; 
0x00036799: jmp esi; 
0x00112a9d: jmp esp; 
0x00108378: jne 0x108420; call ecx; 
0x00108695: jne 0x108591; lea esi, cs:[esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10859a; call eax; 
0x00108831: jne 0x108810; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x001089c5: jne 0x108a34; add esp, 0x14; pop ebx; pop esi; ret; 
0x00108c43: jne 0x108c70; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00108c67: jne 0x108caa; add esp, 0x28; pop ebx; ret; 
0x00108cd6: jne 0x108d08; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00108cfa: jne 0x108d42; add esp, 0x28; pop ebx; ret; 
0x00108dbb: jne 0x108df0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00108ddf: jne 0x108e32; add esp, 0x24; pop ebx; pop esi; ret; 
0x00108e6b: jne 0x108ea0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00108e8f: jne 0x108ee2; add esp, 0x24; pop ebx; pop esi; ret; 
0x00108f33: jne 0x108f60; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00108f57: jne 0x108f9a; add esp, 0x28; pop ebx; ret; 
0x0010adb3: jne 0x10ae5b; add esp, 0x68; pop ebx; ret; 
0x0010b097: jne 0x10b15b; add esp, 0x64; pop ebx; pop esi; ret; 
0x0010d5d8: jne 0x10d450; cmp esi, 0x2f; ja 0x10d5f0; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x0010fc52: jne 0x10fc33; xor eax, eax; pop ebx; ret; 
0x0010fe2c: jne 0x10fe46; add esp, 0x78; pop ebx; ret; 
0x00110a12: jne 0x110a3b; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x00110b3b: jne 0x110b7a; add esp, 0x34; pop ebx; pop esi; ret; 
0x00110e22: jne 0x110e62; add esp, 0x14; pop ebx; pop esi; ret; 
0x00110fb8: jne 0x110fe0; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001110ac: jne 0x1110b8; add esp, 4; pop ebx; pop esi; ret; 
0x00111208: jne 0x111230; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00111e0c: jne 0x111e2f; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00111e8c: jne 0x111ec4; add esp, 0x74; pop ebx; pop esi; ret; 
0x00111ff5: jne 0x112024; add esp, 0x74; pop ebx; pop esi; ret; 
0x001125a3: jne 0x1125b7; add esp, 0x74; pop ebx; pop esi; ret; 
0x00112783: jne 0x112797; add esp, 0x54; pop ebx; pop esi; ret; 
0x001127ef: jne 0x112807; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0011a791: jne 0x11a7b4; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011b06d: jne 0x11b0cb; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0011b138: jne 0x11b17e; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x0011b1be: jne 0x11b1c7; movzx eax, al; add esp, 0x4c; ret; 
0x0011b327: jne 0x11b3cc; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011b467: jne 0x11b50c; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011b700: jne 0x11b71e; add esp, 0x74; pop ebx; pop esi; ret; 
0x0011b828: jne 0x11b870; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0011b8b3: jne 0x11b8f0; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9a9: jne 0x11b9e0; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011bb33: jne 0x11bb70; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bc29: jne 0x11bc60; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011be39: jne 0x11be68; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011bf7b: jne 0x11bf84; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011c648: jne 0x11c68a; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0011c7da: jne 0x11c7e2; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011c809: jne 0x11c838; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011ca9d: jne 0x11cab6; add esp, 0x74; pop ebx; pop esi; ret; 
0x0011cc83: jne 0x11cc97; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011cce3: jne 0x11ccf7; add esp, 0x64; pop ebx; pop esi; ret; 
0x0011d0b2: jne 0x11d0ed; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x0011d5a2: jne 0x11d5a9; add esp, 0x38; pop ebx; ret; 
0x0011d612: jne 0x11d619; add esp, 0x38; pop ebx; ret; 
0x0011d865: jne 0x11d882; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011d8a9: jne 0x11d8d8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011dc1a: jne 0x11dc72; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011dcca: jne 0x11dd22; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011e8b6: jne 0x11e8db; mov edi, dword ptr [ebp + 0xa4]; mov ecx, 0x5401; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x0011ea7e: jne 0x11eaa2; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011eae6: jne 0x11eaf3; add esp, 0x1c; ret; 
0x0011eb39: jne 0x11eb68; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011eea7: jne 0x11eed2; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0011f060: jne 0x11f082; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011f158: jne 0x11f172; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011f1e5: jne 0x11f264; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0011f2d2: jne 0x11f2f4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011f3a0: jne 0x11f3af; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011f555: jne 0x11f55f; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00120155: jne 0x12015f; add esp, 0x418; pop ebx; ret; 
0x001202b9: jne 0x1202e6; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00120568: jne 0x120590; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x001209a7: jne 0x120980; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00120a08: jne 0x1209e0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00120a98: jne 0x120ac0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120c47: jne 0x120c4e; add esp, 0x38; pop ebx; ret; 
0x00120cd8: jne 0x120ce0; add esp, 0x34; pop ebx; pop esi; ret; 
0x00120d6b: jne 0x120d73; add esp, 0x34; pop ebx; pop esi; ret; 
0x00120dfc: jne 0x120e05; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00120edc: jne 0x120ed0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00120fe0: jne 0x12101f; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x00121066: jne 0x12106c; add esp, 0x1c; ret; 
0x00121ae1: jne 0x121aff; add esp, 0x1018; pop ebx; ret; 
0x00121c04: jne 0x121c0e; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x00121c94: jne 0x121c9e; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x00122769: jne 0x12276f; add esp, 0x1c; ret; 
0x0012426c: jne 0x124274; add esp, 0x34; pop ebx; pop esi; ret; 
0x001242fd: jne 0x124306; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001246e6: jne 0x12471a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001247ab: jne 0x1247e2; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00124889: jne 0x124848; add esp, 0xc; ret; 
0x001248f0: jne 0x1248cb; mov eax, esi; pop ebx; pop esi; ret; 
0x00124f56: jne 0x124f16; pop ebx; pop esi; pop edi; ret; 
0x00125099: jne 0x1250c8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00125a02: jne 0x125a52; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00126639: jne 0x126668; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00126d50: jne 0x126d90; mov eax, 0xd2; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00126d7c: jne 0x126de1; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00126e20: jne 0x126e60; mov eax, 0xd0; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00126e4c: jne 0x126eb1; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00126f42: jne 0x126f64; add esp, 0x14; pop ebx; pop esi; ret; 
0x00126fc6: jne 0x126ff8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00126fea: jne 0x127032; add esp, 0x28; pop ebx; ret; 
0x00127066: jne 0x127098; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012708a: jne 0x1270d2; add esp, 0x28; pop ebx; ret; 
0x00127ea5: jne 0x127e4f; sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x00127e74: jne 0x127ec0; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x00127f35: jne 0x127edf; sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x00127f04: jne 0x127f50; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x00127f87: jne 0x127fa8; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x00128302: jne 0x1282e0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001283be: jne 0x128388; call eax; 
0x0012894e: jne 0x128958; ret; 
0x00128972: jne 0x128978; ret; 
0x00128b15: jne 0x128b1b; add esp, 0x3c; ret; 
0x00128f8c: jne 0x128f92; add esp, 0x1c; ret; 
0x00128fb6: jne 0x128ff0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00129079: jne 0x129081; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012910a: jne 0x129113; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00129159: jne 0x129188; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00129505: jne 0x129511; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x00129a2c: jne 0x129a38; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0012a61c: jne 0x12a63a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012a69c: jne 0x12a6f0; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012a90c: jne 0x12a950; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012aa70: jne 0x12aaa0; mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012ab09: jne 0x12ab38; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012af5c: jne 0x12af7a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012afdc: jne 0x12affa; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012b529: jne 0x12b5bf; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012bb8c: jne 0x12bbd0; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012c4ed: jne 0x12c4f6; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012c92c: jne 0x12c952; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012c9d7: jne 0x12c9fa; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012ca70: jne 0x12ca92; add esp, 0x28; pop ebx; ret; 
0x0012cb0d: jne 0x12cb32; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012cb95: jne 0x12cbb2; add esp, 0x18; pop ebx; ret; 
0x0012cc15: jne 0x12cc32; add esp, 0x18; pop ebx; ret; 
0x0012ce6f: jne 0x12ce77; add esp, 0x74; pop ebx; pop esi; ret; 
0x0012ced0: jne 0x12cef2; add esp, 0x18; pop ebx; ret; 
0x0012cfe7: jne 0x12d00a; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012d17b: jne 0x12d230; mov ecx, dword ptr [esp]; mov edx, dword ptr [esp + 4]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012d5fc: jne 0x12d622; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012d6a7: jne 0x12d6ca; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012d80c: jne 0x12d832; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012d8c7: jne 0x12d8ea; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012db30: jne 0x12db52; add esp, 0x18; pop ebx; ret; 
0x0012dba6: jne 0x12dbd0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0012dc37: jne 0x12dc3d; add esp, 0x1c; ret; 
0x0012dca5: jne 0x12dcc2; add esp, 0x18; pop ebx; ret; 
0x0012dd30: jne 0x12dd52; add esp, 0x28; pop ebx; ret; 
0x0012de38: jne 0x12de3e; add esp, 0x7c; ret; 
0x0012de75: jne 0x12de77; add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012debf: jne 0x12dec1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012dfbf: jne 0x12dfc1; add byte ptr [eax], al; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012e101: jne 0x12e103; add byte ptr [eax], al; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0012e151: jne 0x12e153; add byte ptr [eax], al; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012e607: jne 0x12e609; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012eaf5: jne 0x12eb12; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0012ecdc: jne 0x12ecde; add byte ptr [eax], al; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0012f3a8: jne 0x12f3e2; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00130e7f: jne 0x130e90; mov eax, edx; pop ebx; pop esi; ret; 
0x00130eea: jne 0x130ef8; mov eax, edx; pop ebx; pop esi; ret; 
0x001310d5: jne 0x1310e0; mov eax, edx; pop ebx; pop esi; ret; 
0x001316ea: jne 0x1316f8; mov eax, edx; pop ebx; pop esi; ret; 
0x0013174a: jne 0x131758; mov eax, edx; pop ebx; pop esi; ret; 
0x00131925: jne 0x131930; mov eax, edx; pop ebx; pop esi; ret; 
0x00132168: jne 0x132170; add esp, 4; pop ebx; pop esi; ret; 
0x00132eb3: jne 0x132e9f; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00134b25: jne 0x134adb; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00135032: jne 0x134fd8; push ebx; call dword ptr [esi + 0x14]; 
0x0013595a: jne 0x135980; pop ebx; pop esi; pop edi; ret; 
0x00135b26: jne 0x135b14; add esp, 4; pop ebx; pop esi; ret; 
0x00136bea: jne 0x136b70; mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x0013714a: jne 0x137140; mov eax, dword ptr [eax + 0x18]; ret; 
0x00137205: jne 0x1371f1; mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x001371e9: jne 0x1371f8; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x137200; ret; 
0x001382bc: jne 0x1382c8; pop ebx; pop esi; pop edi; ret; 
0x001387d5: jne 0x1387e5; add esp, 0x2c; ret; 
0x00139573: jne 0x139560; call 0x137ae0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0013964f: jne 0x139640; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x001397e4: jne 0x13979e; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x00139975: jne 0x139985; add esp, 0x2c; ret; 
0x0013a9eb: jne 0x13aa4a; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013aba8: jne 0x13ac26; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013b4bc: jne 0x13b4e3; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0013b9e6: jne 0x13b9d0; mov edx, dword ptr [esp + 4]; mov dword ptr gs:[ebp], edx; mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0013c5d9: jne 0x13c5f0; shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0013c759: jne 0x13c770; mov eax, ebx; pop ebx; ret; 
0x0013cbe6: jne 0x13cc10; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0013cfcd: jne 0x13cfd5; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0013d091: jne 0x13d0d4; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013f935: jne 0x13f930; call dword ptr [esi + 0x6a]; 
0x00143868: jne 0x1438ab; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00143a32: jne 0x143a44; add esp, 0x18; pop ebx; ret; 
0x00143a7a: jne 0x143a80; add esp, 0x1c; ret; 
0x00143ac9: jne 0x143acf; add esp, 0x1c; ret; 
0x001453b3: jne 0x1453bf; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x00145676: jne 0x145682; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0014581e: jne 0x1457e8; mov eax, 1; pop ebx; ret; 
0x001458c2: jne 0x145904; add esp, 0x118; pop ebx; ret; 
0x00145962: jne 0x1459c0; add esp, 0x118; pop ebx; ret; 
0x00145a22: jne 0x145a6b; add esp, 0x118; pop ebx; ret; 
0x00145ac2: jne 0x145aed; add esp, 0x11c; ret; 
0x00145fc3: jne 0x146004; add esp, 0x1c; ret; 
0x00146bdd: jne 0x146be8; pop ebx; pop esi; pop edi; ret; 
0x00146c27: jne 0x146c10; pop ebx; pop esi; pop edi; ret; 
0x001499d6: jne 0x1499df; movzx eax, ax; add esp, 0x2c; ret; 
0x0014ca5c: jne 0x14ca68; add esp, 4; pop ebx; pop esi; ret; 
0x0014d48a: jne 0x14d480; ret; 
0x0014d476: jne 0x14d487; ret; 
0x0014daa3: jne 0x14da50; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0014df66: jne 0x14df6d; add esp, 0x28; pop ebx; ret; 
0x00150532: jne 0x150520; mov ebx, dword ptr [esp + 0xc]; movzx eax, byte ptr [edi]; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x00150bb2: jne 0x150ba0; add esp, 8; pop ebx; ret; 
0x001512f4: jne 0x1512c0; pop ebx; pop esi; ret; 
0x00151878: jne 0x15187e; add esp, 0x1c; ret; 
0x001519c0: jne 0x1519c8; mov eax, ecx; ret; 
0x00151f3f: jne 0x151f68; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0015261d: jne 0x152610; call dword ptr [eax - 0x73]; 
0x001526d6: jne 0x1526c9; call dword ptr [eax - 0x73]; 
0x00152793: jne 0x152786; call dword ptr [eax - 0x73]; 
0x00156c6d: jne 0x156c60; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x00157ce1: jne 0x157d52; stc; call dword ptr [eax + 0x55]; 
0x0015a51d: jne 0x15a500; pop ebx; pop esi; pop edi; ret; 
0x0015cf26: jne 0x15cf10; add esp, 4; pop ebx; pop esi; ret; 
0x0016868d: jne 0x168696; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00168705: jne 0x168710; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00168e9b: jne 0x168ea2; add esp, 0x28; pop ebx; ret; 
0x00169079: jne 0x169098; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00169110: jne 0x1691b3; add esp, 0x34; pop ebx; pop esi; ret; 
0x00169248: jne 0x169280; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x001692e9: jne 0x1692f8; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00169480: jne 0x1694b9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00169e12: jne 0x169e20; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00169e59: jne 0x169e68; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00169f19: jne 0x169f28; add esp, 4; pop ebx; pop esi; ret; 
0x00169f95: jne 0x169fa0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0016a0e5: jne 0x16a108; mov dword ptr [eax], 0; pop ebx; ret; 
0x0016a233: jne 0x16a370; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0016adc6: jne 0x16ae00; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016ae7e: jne 0x16ae90; xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0016b323: jne 0x16b356; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016b3ae: jne 0x16b3e6; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016ba87: jne 0x16ba98; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016bcf5: jne 0x16bd07; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0016c572: jne 0x16c560; pop ebx; ret; 
0x0016c662: jne 0x16c670; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016c705: jne 0x16c710; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0016e20b: jne 0x16e200; call dword ptr [eax - 0x73]; 
0x0016ebb9: jne 0x16ec2b; add esp, 0x18; pop ebx; ret; 
0x0016ffcf: jne 0x16ffca; call dword ptr [edi + 0x50]; 
0x00170d9d: jne 0x170def; push edi; call dword ptr [eax + 0x14]; 
0x001716eb: jne 0x1716e6; call dword ptr [eax - 0x73]; 
0x00171a56: jne 0x171af7; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00171c22: jne 0x171c37; add esp, 0x1c; ret; 
0x00171ca0: jne 0x171cbc; add esp, 0x74; pop ebx; pop edi; ret; 
0x00171d4e: jne 0x171d5f; add esp, 0x28; pop ebx; ret; 
0x00171dee: jne 0x171dff; add esp, 0x28; pop ebx; ret; 
0x00171eae: jne 0x171ef7; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00171f9e: jne 0x171fe7; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001720ba: jne 0x1720ca; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00172115: jne 0x172130; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x172137; add esp, 0x1c; ret; 
0x00172122: jne 0x172137; add esp, 0x1c; ret; 
0x001721a5: jne 0x1721b7; add esp, 0x18; pop ebx; ret; 
0x001722c5: jne 0x1722c0; call dword ptr [eax + 0x6a]; 
0x0017229b: jne 0x17231a; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x001723e5: jne 0x1723e0; call dword ptr [eax + 0x6a]; 
0x001726ad: jne 0x1726d3; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00172fa8: jne 0x172fae; add esp, 0x4c; ret; 
0x00173018: jne 0x17301e; add esp, 0x4c; ret; 
0x00173088: jne 0x17308e; add esp, 0x4c; ret; 
0x001730f8: jne 0x1730fe; add esp, 0x4c; ret; 
0x0017315b: jne 0x173161; add esp, 0x4c; ret; 
0x001731bb: jne 0x1731c1; add esp, 0x4c; ret; 
0x00173228: jne 0x17322e; add esp, 0x4c; ret; 
0x001732a8: jne 0x1732ae; add esp, 0x4c; ret; 
0x0017369d: jne 0x1736a8; add esp, 0x94; pop ebx; pop edi; ret; 
0x00173789: jne 0x17378f; add esp, 0x1c; ret; 
0x001737d1: jne 0x173804; add esp, 0x1c; ret; 
0x00173849: jne 0x173830; add esp, 8; pop ebx; ret; 
0x001739da: jne 0x1739d5; call dword ptr [eax - 0x73]; 
0x00173aaf: jne 0x173ac0; mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x001747ba: jne 0x1747b5; call dword ptr [eax - 0x73]; 
0x00174f02: jne 0x174f08; add esp, 0x2c; ret; 
0x00174f94: jne 0x174ff9; add esp, 0x18; pop ebx; ret; 
0x00175074: jne 0x1750d9; add esp, 0x18; pop ebx; ret; 
0x00175116: jne 0x1751be; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00175206: jne 0x1752ae; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0017532b: jne 0x175364; add esp, 0x18; pop ebx; ret; 
0x001753bb: jne 0x1753f4; add esp, 0x18; pop ebx; ret; 
0x00175465: jne 0x175483; add esp, 0x18; pop ebx; ret; 
0x001754ed: jne 0x17551f; add esp, 0x18; pop ebx; ret; 
0x00175581: jne 0x1755c4; add esp, 0x18; pop ebx; ret; 
0x00175ae8: jne 0x175b5c; add esp, 0x14; pop ebx; pop esi; ret; 
0x00175bd8: jne 0x175c3c; add esp, 0x14; pop ebx; pop esi; ret; 
0x00175c76: jne 0x175cb0; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x00175cd6: jne 0x175d10; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x00175d6b: jne 0x175da4; add esp, 0x18; pop ebx; ret; 
0x00175dfb: jne 0x175e34; add esp, 0x18; pop ebx; ret; 
0x00175e8b: jne 0x175ec4; add esp, 0x18; pop ebx; ret; 
0x00175f1b: jne 0x175f54; add esp, 0x18; pop ebx; ret; 
0x001761d2: jne 0x176157; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001762ca: jne 0x1762e9; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001764df: jne 0x1764e7; add esp, 0x54; pop ebx; pop esi; ret; 
0x0017650e: jne 0x176518; add esp, 0xc; ret; 
0x00176582: jne 0x17658b; movzx eax, al; add esp, 0x1c; ret; 
0x001765d2: jne 0x1765db; movzx eax, al; add esp, 0x1c; ret; 
0x0017662c: jne 0x176633; add esp, 0x18; pop ebx; ret; 
0x0017664e: jne 0x176658; add esp, 0xc; ret; 
0x001766cc: jne 0x1766d3; add esp, 0x18; pop ebx; ret; 
0x00176813: jne 0x17680e; call dword ptr [eax - 0x73]; 
0x00176fec: jne 0x176ff5; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001777bc: jne 0x1777c5; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017b266: jne 0x17b293; add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x0017b797: jne 0x17b7c4; add esp, 0x18; pop ebx; ret; 
0x0017b9fe: jne 0x17ba34; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017ba8e: jne 0x17bac4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017d2ca: jne 0x17d2e1; add esp, 0x18; pop ebx; ret; 
0x0017d344: jne 0x17d359; add esp, 0x18; pop ebx; ret; 
0x0017de72: jne 0x17deb5; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017e40d: jne 0x17e400; mov edx, dword ptr [ecx]; add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0017eb41: jne 0x17ebf0; pop ebx; pop esi; pop edi; ret; 
0x0017f569: jne 0x17f50b; push 0x28; push edi; call eax; 
0x0017f65e: jne 0x17f68e; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017f87b: jne 0x17f8a1; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017f902: jne 0x17f94c; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001800bd: jne 0x1800c4; add esp, 0x28; pop ebx; ret; 
0x001804b6: jne 0x180568; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0018134d: jne 0x18134f; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00181884: jne 0x181890; pop ebx; ret; 
0x001818ac: jne 0x1818b0; ret; 
0x001818d8: jne 0x1818e0; add esp, 4; pop ebx; pop esi; ret; 
0x00181be7: jne 0x181bf0; add esp, 8; pop ebx; ret; 
0x00182931: jne 0x182938; add esp, 0x18; pop ebx; ret; 
0x001829f2: jne 0x182a16; mov eax, 4; add esp, 0xc; ret; 
0x00182e90: jne 0x182ea0; add esp, 8; pop ebx; ret; 
0x001846dc: jne 0x1846e8; add esp, 8; pop ebx; ret; 
0x00185699: jne 0x18569f; add esp, 0x1c; ret; 
0x0018b34b: jne 0x18b354; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0018b6a4: jne 0x18b6c7; add esp, 0x18; pop ebx; ret; 
0x0018b73f: jne 0x18b747; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018b7b9: jne 0x18b7c1; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018b8b7: jne 0x18b8b9; add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0018b9eb: jne 0x18b9f1; add esp, 0x2c; ret; 
0x001980ee: jne 0x198160; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00199b97: jne 0x1999f0; pop ebp; xor eax, eax; ret; 
0x0019ec0c: jne 0x19ec20; pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0019f5f7: jne 0x19fd70; pop ebx; ret; 
0x0019f430: jne 0x19fd86; pop ebx; ret; 
0x001a0d6f: jne 0x1a0fb0; pop ebx; ret; 
0x001a2429: jne 0x1a2650; pop ebx; ret; 
0x001a24e6: jne 0x1a2670; pop ebx; ret; 
0x001a28ea: jne 0x1a28e2; ret 0x7504; 
0x001a28e9: jne 0x1a2960; test dl, 4; jne 0x1a2964; add eax, 3; ret; 
0x001a28ee: jne 0x1a2964; add eax, 3; ret; 
0x001a2908: jne 0x1a2970; test dl, 0x40; jne 0x1a2974; add eax, 7; ret; 
0x001a290d: jne 0x1a2974; add eax, 7; ret; 
0x001a292f: jne 0x1a2980; test dh, 4; jne 0x1a2984; add eax, 0xb; ret; 
0x001a2934: jne 0x1a2984; add eax, 0xb; ret; 
0x001a2948: jne 0x1a2990; test dh, 0x40; jne 0x1a2994; add eax, 0xf; ret; 
0x001a294d: jne 0x1a2994; add eax, 0xf; ret; 
0x001a2c1e: jne 0x1a2ce0; test al, 0x40; jne 0x1a2cf0; lea eax, [edi + 7]; pop edi; ret; 
0x001a2c26: jne 0x1a2cf0; lea eax, [edi + 7]; pop edi; ret; 
0x001a2aee: jne 0x1a2cf0; test dl, 0x40; jne 0x1a2d70; lea eax, [edi + 7]; pop edi; ret; 
0x001a2c79: jne 0x1a2d60; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a2be0: jne 0x1a2d70; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a2b9a: jne 0x1a2d70; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a2b3d: jne 0x1a2d70; lea eax, [edi + 3]; pop edi; ret; 
0x001a2af7: jne 0x1a2d70; lea eax, [edi + 7]; pop edi; ret; 
0x001a323d: jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a30bd: jne 0x1a3140; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a30e2: jne 0x1a3170; lea eax, [edi - 0xc]; pop edi; ret; 
0x001a310c: jne 0x1a31a0; lea eax, [edi - 8]; pop edi; ret; 
0x001a3135: jne 0x1a31d0; lea eax, [edi - 4]; pop edi; ret; 
0x001a3234: jne 0x1a3310; and eax, 0xf; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a35bf: jne 0x1a36e0; lea eax, [edi + 3]; pop edi; ret; 
0x001a35e2: jne 0x1a3710; lea eax, [edi + 7]; pop edi; ret; 
0x001a3603: jne 0x1a3730; test ah, 4; jne 0x1a3740; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a360c: jne 0x1a3740; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a362c: jne 0x1a3760; test ah, 0x40; jne 0x1a3770; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a3635: jne 0x1a3770; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a36b2: jne 0x1a3780; xor eax, eax; pop edi; ret; 
0x001a37a1: jne 0x1a3870; sub edx, 4; jb 0x1a3910; lea eax, [edi + 3]; pop edi; ret; 
0x001a37d2: jne 0x1a38a0; sub edx, 8; jb 0x1a3910; lea eax, [edi + 7]; pop edi; ret; 
0x001a380c: jne 0x1a38d0; sub edx, 0xc; jb 0x1a3910; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a3ffa: jne 0x1a3c20; xor eax, eax; ret; 
0x001a3add: jne 0x1a3cc0; mov eax, ecx; ret; 
0x001a3ad5: jne 0x1a3cd0; test al, 2; jne 0x1a3cc0; mov eax, ecx; ret; 
0x001a3c62: jne 0x1a3cf0; lea eax, [ecx + 4]; ret; 
0x001a3c5a: jne 0x1a3d00; test al, 0x20; jne 0x1a3cf0; lea eax, [ecx + 4]; ret; 
0x001a3c8c: jne 0x1a3d20; lea eax, [ecx + 8]; ret; 
0x001a3cb5: jne 0x1a3d50; lea eax, [ecx + 0xc]; ret; 
0x001a3b4a: jne 0x1a3d80; xor eax, eax; ret; 
0x001a3b89: jne 0x1a3e00; xor eax, eax; ret; 
0x001a3da8: jne 0x1a3f10; add edx, 0; jl 0x1a3fd0; mov eax, ecx; ret; 
0x001a3e92: jne 0x1a3f40; add edx, 4; jl 0x1a3fd0; lea eax, [ecx + 4]; ret; 
0x001a3ecb: jne 0x1a3f70; add edx, 8; jl 0x1a3fd0; lea eax, [ecx + 8]; ret; 
0x001a3ef5: jne 0x1a3fa0; add edx, 0xc; jl 0x1a3fd0; lea eax, [ecx + 0xc]; ret; 
0x001a4287: jne 0x1a4320; test al, 4; jne 0x1a4330; lea eax, [edx + 3]; ret; 
0x001a428f: jne 0x1a4330; lea eax, [edx + 3]; ret; 
0x001a42aa: jne 0x1a4350; test al, 0x40; jne 0x1a4360; lea eax, [edx + 7]; ret; 
0x001a42b2: jne 0x1a4360; lea eax, [edx + 7]; ret; 
0x001a42d3: jne 0x1a4380; test ah, 4; jne 0x1a4390; lea eax, [edx + 0xb]; ret; 
0x001a42dc: jne 0x1a4390; lea eax, [edx + 0xb]; ret; 
0x001a42fc: jne 0x1a43b0; test ah, 0x40; jne 0x1a43c0; lea eax, [edx + 0xf]; ret; 
0x001a4305: jne 0x1a43c0; lea eax, [edx + 0xf]; ret; 
0x001a47a0: jne 0x1a47b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x001a47d2: jne 0x1a4890; sub edi, 4; jb 0x1a4930; lea eax, [eax + 3]; pop edi; ret; 
0x001a46bf: jne 0x1a4a85; add eax, 3; pop edi; ret; 
0x001a46e5: jne 0x1a4a99; add eax, 7; pop edi; ret; 
0x001a4703: jne 0x1a4aa8; test dh, 4; jne 0x1a4aad; add eax, 0xb; pop edi; ret; 
0x001a470c: jne 0x1a4aad; add eax, 0xb; pop edi; ret; 
0x001a4735: jne 0x1a4ac1; add eax, 0xf; pop edi; ret; 
0x001a4f77: jne 0x1a4fc0; pop edi; pop esi; pop ebx; ret; 
0x001a50a8: jne 0x1a50b0; pop ebx; ret; 
0x001a515c: jne 0x1a5220; test dl, 0xf; jne 0x1a52a0; lea eax, [ecx + 4]; ret; 
0x001a5237: jne 0x1a5250; test dh, 0xf; jne 0x1a52a0; lea eax, [ecx + 0xc]; ret; 
0x001a5266: jne 0x1a5280; lea eax, [ecx + 4]; ret; 
0x001a5273: jne 0x1a5290; lea eax, [ecx + 0xc]; ret; 
0x001a523c: jne 0x1a52a0; lea eax, [ecx + 0xc]; ret; 
0x001a5165: jne 0x1a52a0; lea eax, [ecx + 4]; ret; 
0x001a53f7: jne 0x1a54b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a53ef: jne 0x1a54c0; test al, 0xf0; jne 0x1a54b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a5493: jne 0x1a54d0; test al, 0xf0; jne 0x1a54b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a54c3: jne 0x1a54e0; lea eax, [edi - 8]; pop edi; ret; 
0x001a5b1b: jne 0x1a5b50; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001a5b33: jne 0x1a5b60; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00023439: jne 0x23434; call dword ptr [esi + 0x53]; 
0x000243fc: jne 0x243ca; call dword ptr [ebp - 0x38]; 
0x000a48c5: jne 0x2442f; pop ebx; pop esi; pop edi; ret; 
0x001829da: jne 0x24a09; mov eax, 8; add esp, 0xc; ret; 
0x00024aef: jne 0x24abe; ret; 
0x00024b2b: jne 0x24b20; ret; 
0x000254ad: jne 0x254b3; add esp, 0x1c; ret; 
0x0002554d: jne 0x2557f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00025621: jne 0x255ae; dec esp; and al, 4; mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x00025f5f: jne 0x25f44; add esp, 4; pop ebx; pop esi; ret; 
0x0002f60c: jne 0x2f63a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00033cd4: jne 0x33ce0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00034a80: jne 0x34a90; mov eax, edx; add esp, 0xc; ret; 
0x00034ac0: jne 0x34ad0; mov eax, edx; add esp, 0xc; ret; 
0x0003640f: jne 0x363e0; pop ebx; pop esi; pop edi; ret; 
0x000398e1: jne 0x398c0; ret; 
0x0003a8c9: jne 0x3a8d3; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003b452: jne 0x3b460; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003b813: jne 0x3b7d5; mov eax, dword ptr [ebx + 0xa4]; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0003b7d1: jne 0x3b7e0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bb1f: jne 0x3bae1; mov eax, dword ptr [ebx + 0xa4]; mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x0003badd: jne 0x3baf0; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003bdb8: jne 0x3bdbf; add esp, 0x18; pop ebx; ret; 
0x0003be1e: jne 0x3be30; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0003c0f8: jne 0x3c103; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003c136: jne 0x3c140; add esp, 8; pop ebx; ret; 
0x0003c3c5: jne 0x3c3d0; add esp, 8; pop ebx; ret; 
0x0003c478: jne 0x3c4a0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003c609: jne 0x3c614; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c689: jne 0x3c694; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c6f6: jne 0x3c73e; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003c79d: jne 0x3c7a8; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003c80b: jne 0x3c81f; add esp, 0x98; pop ebx; ret; 
0x0003c9b0: jne 0x3c9ec; add esp, 0x28; pop ebx; ret; 
0x0003cd68: jne 0x3cd72; add esp, 0x128; pop ebx; ret; 
0x0003cd98: jne 0x3cd9c; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x0003d1a8: jne 0x3d1b0; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003d2f3: jne 0x3d307; add esp, 0x98; pop ebx; ret; 
0x0003d363: jne 0x3d377; add esp, 0x98; pop ebx; ret; 
0x0003d3dc: jne 0x3d3e5; add esp, 0x9c; ret; 
0x0003d553: jne 0x3d567; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0003d5ad: jne 0x3d58b; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003d85a: jne 0x3d860; add esp, 0x1c; ret; 
0x0003e847: jne 0x3e810; pop ebx; pop esi; pop edi; ret; 
0x0003e8ac: jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9bf: jne 0x3e9c5; add esp, 0x1c; ret; 
0x0003fabe: jne 0x3faa4; add esp, 4; pop ebx; pop esi; ret; 
0x0003fc99: jne 0x3fcc8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fe7f: jne 0x3fe85; add esp, 0x1c; ret; 
0x0004008c: jne 0x40092; add esp, 0x1c; ret; 
0x0004015d: jne 0x40168; add esp, 4; pop ebx; pop esi; ret; 
0x0004023a: jne 0x40240; add esp, 0x2c; ret; 
0x0004033c: jne 0x40342; add esp, 0x1c; ret; 
0x000403bf: jne 0x403c5; add esp, 0x1c; ret; 
0x0004135d: jne 0x41394; add esp, 0x18; pop ebx; ret; 
0x000427ba: jne 0x427d0; bsr ecx, ecx; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042876: jne 0x42888; bsr ebx, ebx; xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x000526f5: jne 0x52754; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000527ea: jne 0x527f0; add esp, 0x2c; ret; 
0x000528fb: jne 0x528f0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000529cf: jne 0x52980; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x00052abe: jne 0x52ab0; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00052f6d: jne 0x52f60; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00052f95: jne 0x52f80; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0005305d: jne 0x53050; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00053095: jne 0x53080; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000541cf: jne 0x54180; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x00054a57: jne 0x54a62; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00054ad5: jne 0x54ae0; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00059075: jne 0x59080; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00059dc8: jne 0x59de3; add esp, 0x434; pop ebx; pop esi; ret; 
0x00059f33: jne 0x59f50; test eax, eax; jne 0x59f54; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x00059f37: jne 0x59f54; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0005a008: jne 0x5a017; add esp, 0x1c; ret; 
0x0005a72d: jne 0x5a752; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0005e815: jne 0x5e82e; add esp, 0x78; pop ebx; ret; 
0x0005fc3e: jne 0x5fc39; call dword ptr [ebp + 0x56]; 
0x00060688: jne 0x60692; add esp, 0x1018; pop ebx; ret; 
0x00060707: jne 0x6070e; add esp, 0x78; pop ebx; ret; 
0x00060fc5: jne 0x60fd0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000779c6: jne 0x779eb; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0007ae96: jne 0x7aea0; push esi; call dword ptr [ebx + 0x1c]; 
0x0007b5ad: jne 0x7b5b7; push esi; call dword ptr [ebx + 0x1c]; 
0x0007bf9a: jne 0x7bfb8; test eax, eax; jne 0x7bfbc; mov dword ptr [edx + 0x1a48], 0; mov dword ptr [edx + 0x1a40], 0; ret; 
0x0007bf9e: jne 0x7bfbc; mov dword ptr [edx + 0x1a48], 0; mov dword ptr [edx + 0x1a40], 0; ret; 
0x0007c7b3: jne 0x7c7bd; push edx; call dword ptr [ebx + 0x1c]; 
0x0007ce75: jne 0x7ce5b; push esi; call dword ptr [eax + 0x2c]; 
0x0007cf0a: jne 0x7cef0; push esi; call dword ptr [eax + 0x2c]; 
0x0007d0ad: jne 0x7d0bb; push esi; call dword ptr [ebx + 0x2c]; 
0x0007d0aa: jne 0x7d0c0; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0007d438: jne 0x7d48e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0007d517: jne 0x7d51f; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007e20d: jne 0x7e217; push esi; call dword ptr [eax + 0x1c]; 
0x0007eea1: jne 0x7eeb8; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0007f2ec: jne 0x7f2e0; ret; 
0x0007f803: jne 0x7f868; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0007fa87: jne 0x7fa19; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0007fbd7: jne 0x7fb69; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0008273b: jne 0x82750; mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x0008280a: jne 0x827e0; push edx; push ebx; push esi; call eax; 
0x00084082: jne 0x84097; add esp, 0x824; pop ebx; pop esi; ret; 
0x00084269: jne 0x84284; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00084334: jne 0x8434c; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00085b82: jne 0x85b98; add esp, 0x28; pop ebx; ret; 
0x00085ef2: jne 0x85f00; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0008725c: jne 0x87268; add esp, 8; pop ebx; ret; 
0x000878da: jne 0x87875; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00088db7: jne 0x88dc0; ret; 
0x0008910c: jne 0x89100; ret; 
0x00089edc: jne 0x89ed0; ret; 
0x0008a12a: jne 0x8a158; add esp, 4; pop ebx; pop esi; ret; 
0x0008a919: jne 0x8a900; add esp, 4; pop ebx; pop esi; ret; 
0x0008ae2a: jne 0x8ae20; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0008ae0f: jne 0x8ae28; ret; 
0x0008ae62: jne 0x8ae70; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0008b1df: jne 0x8b220; mov dword ptr [ebx + 0x1a7c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0008c2da: jne 0x8c2e2; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008c43f: jne 0x8c48d; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008c5ad: jne 0x8c5f5; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008ca8d: jne 0x8ca59; mov ebp, 0xf0; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008cbcf: jne 0x8cbd8; ret; 
0x0008cda4: jne 0x8cdac; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008ce2b: jne 0x8ce70; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008cf0b: jne 0x8cf50; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008d04b: jne 0x8d060; xend; xor eax, eax; add esp, 0xc; ret; 
0x0008dc1f: jne 0x8dbc1; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008e97f: jne 0x8e9a0; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0008efaf: jne 0x8f0dc; add esp, 0x94; pop ebx; pop esi; ret; 
0x0008f228: jne 0x8f243; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009098d: jne 0x90993; add esp, 0x2c; ret; 
0x00090a4d: jne 0x90a56; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00090dc3: jne 0x90de7; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00091b65: jne 0x91706; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00091f23: jne 0x91706; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00092335: jne 0x92340; xor eax, eax; add esp, 0xc; ret; 
0x0009232c: jne 0x92359; test byte ptr [edx + 0x80], 0x10; jne 0x92340; xor eax, eax; add esp, 0xc; ret; 
0x00092cd4: jne 0x92ce0; mov eax, edx; pop ebx; pop esi; ret; 
0x00092f92: jne 0x92fa0; xor eax, eax; pop ebx; ret; 
0x00093a4e: jne 0x93a54; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00093b7f: jne 0x93b87; add esp, 0x14; pop ebx; pop esi; ret; 
0x00093ba8: jne 0x93bb6; mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00095389: jne 0x95390; add esp, 0x28; pop ebx; ret; 
0x00095427: jne 0x9542e; add esp, 0x28; pop ebx; ret; 
0x0009618a: jne 0x96198; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000961cf: jne 0x961f0; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00096319: jne 0x96360; test al, 1; je 0x96360; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x000966bd: jne 0x966c3; add esp, 0x2c; ret; 
0x00096b1d: jne 0x96b23; add esp, 0x2c; ret; 
0x00097049: jne 0x9704f; add esp, 0x2c; ret; 
0x00097499: jne 0x9749f; add esp, 0x2c; ret; 
0x000974f6: jne 0x97500; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000975b6: jne 0x97586; mov eax, 0x10; pop ebx; ret; 
0x000984a5: jne 0x984f0; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000984e0: jne 0x9850f; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x00098617: jne 0x98620; xor eax, eax; ret; 
0x0009871c: jne 0x98731; add esp, 0x24; pop ebx; pop esi; ret; 
0x00098935: jne 0x98940; xor eax, eax; pop ebx; pop esi; ret; 
0x000989de: jne 0x98a14; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000995e4: jne 0x995f0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00099689: jne 0x996bc; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009972a: jne 0x99764; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009990c: jne 0x99918; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009994f: jne 0x99942; xor eax, eax; pop ebx; ret; 
0x0009998d: jne 0x99998; xor eax, eax; pop ebx; ret; 
0x0009a1b6: jne 0x9a1ff; add esp, 0x38; pop ebx; ret; 
0x0009a424: jne 0x9a447; add esp, 0x2c; ret; 
0x0009a52a: jne 0x9a567; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009a690: jne 0x9a6b7; add esp, 0x2c; ret; 
0x0009a8d0: jne 0x9a8f7; add esp, 0x18; pop ebx; ret; 
0x0009aa4f: jne 0x9aa93; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009aafa: jne 0x9ab34; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009ae4f: jne 0x9ae40; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0009b51c: jne 0x9b510; pop ebx; ret; 
0x0009b536: jne 0x9b547; ret; 
0x0009bbca: jne 0x9bbc4; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0009be30: jne 0x9bdd0; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009c566: jne 0x9c56d; add esp, 0x28; pop ebx; ret; 
0x0009d0c1: jne 0x9d0cd; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0009d492: jne 0x9d4b8; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009d840: jne 0x9d848; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009dabe: jne 0x9dac5; add esp, 0x28; pop ebx; ret; 
0x0009dae3: jne 0x9db28; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0009dc2a: jne 0x9dc12; call dword ptr [eax - 0x73]; 
0x0009df31: jne 0x9dfbf; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009e01e: jne 0x9e025; add esp, 0x38; pop ebx; ret; 
0x0009e495: jne 0x9e4af; add esp, 0xb4; pop ebx; pop esi; ret; 
0x0009e837: jne 0x9e840; add esp, 8; pop ebx; ret; 
0x0009f3ec: jne 0x9f425; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009fcb4: jne 0x9fce0; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000a21e2: jne 0xa216b; pop ebx; pop esi; pop edi; ret; 
0x000a2678: jne 0xa2688; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000a4033: jne 0xa403e; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000a47f5: jne 0xa4745; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x000a485d: jne 0xa4850; xor eax, eax; ret; 
0x000a48b0: jne 0xa4888; sub esp, 0xc; push eax; call edx; 
0x000a490b: jne 0xa4900; mov eax, ecx; ret; 
0x000a5011: jne 0xa501d; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x000a5638: jne 0xa5620; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a5e71: jne 0xa5e87; pop ebx; pop esi; pop edi; ret; 
0x000a607d: jne 0xa6070; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x000a6066: jne 0xa6073; ret; 
0x000a64f0: jne 0xa6504; lea eax, [edx - 0x95e44]; and ch, 2; lea edx, [edx - 0x177374]; cmove eax, edx; ret; 
0x000a659c: jne 0xa6590; mov eax, edx; pop ebx; ret; 
0x000a6f0e: jne 0xa6f12; lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x000a6f4e: jne 0xa6f52; lea edx, [edx - 0x1765a4]; cmove eax, edx; ret; 
0x000a6f80: jne 0xa6f94; lea eax, [edx - 0x9d264]; and ch, 2; lea edx, [edx - 0x177754]; cmove eax, edx; ret; 
0x000a6fc0: jne 0xa6fd4; lea eax, [edx - 0x9d234]; and ch, 2; lea edx, [edx - 0x1777d4]; cmove eax, edx; ret; 
0x000a7ade: jne 0xa7ae2; lea edx, [edx - 0x176f04]; cmove eax, edx; ret; 
0x000a7cb0: jne 0xa7cc4; lea eax, [edx - 0xa00c4]; and ch, 2; lea edx, [edx - 0x176944]; cmove eax, edx; ret; 
0x000a8e6e: jne 0xa8e72; lea edx, [edx - 0x1769d4]; cmove eax, edx; ret; 
0x000a93bd: jne 0xa93b0; mov eax, edx; pop ebx; ret; 
0x000a9401: jne 0xa93f0; mov eax, edx; pop ebx; pop esi; ret; 
0x000a9561: jne 0xa9550; mov eax, edx; pop ebx; ret; 
0x000a9c50: jne 0xa9c64; lea eax, [edx - 0x9ad24]; and ch, 2; lea edx, [edx - 0x1776d4]; cmove eax, edx; ret; 
0x000a9c9e: jne 0xa9ca2; lea edx, [edx - 0x1785e4]; cmove eax, edx; ret; 
0x000a9cd0: jne 0xa9ce4; lea eax, [edx - 0x9ec54]; and ch, 2; lea edx, [edx - 0x189834]; cmove eax, edx; ret; 
0x000a9d1e: jne 0xa9d22; lea edx, [edx - 0x1894a4]; cmove eax, edx; ret; 
0x000aab86: jne 0xaab75; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x000ad055: jne 0xad040; pop ebx; pop esi; pop edi; ret; 
0x000ad0e7: jne 0xad0a0; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x000ad348: jne 0xad310; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x000b0a7c: jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b117c: jne 0xb10e1; pop ebx; ret; 
0x000b4f41: jne 0xb5530; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000b55cc: jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b56f1: jne 0xb5531; pop ebx; ret; 
0x000b6d1b: jne 0xb6c8b; call 0x182d2d; add ecx, 0x10f01a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6d58: jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b835b: jne 0xb82cb; call 0x182d2d; add ecx, 0x10db3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b839a: jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b91fa: jne 0xb91f2; ret 0x7504; 
0x000bb4fa: jne 0xbb4f2; ret 0x7504; 
0x000be181: jne 0xbe201; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be2fb: jne 0xbe26b; call 0x182d2d; add ecx, 0x107d6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bed92: jne 0xbee80; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bee44: jne 0xbeea0; xor eax, eax; pop edi; ret; 
0x000bee0a: jne 0xbeec0; xor eax, eax; pop edi; ret; 
0x000bf06a: jne 0xbf120; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x000bf0da: jne 0xbf150; xor eax, eax; ret; 
0x000bf109: jne 0xbf170; xor eax, eax; ret; 
0x000bf591: jne 0xbf5d0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000bfab7: jne 0xbfabd; xor eax, eax; pop ebx; ret; 
0x000bfb4c: jne 0xbfd57; pop esi; xor eax, eax; pop ebx; ret; 
0x000bfbc0: jne 0xbfd6b; pop esi; xor eax, eax; pop ebx; ret; 
0x000c0431: jne 0xc0436; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x000c04e2: jne 0xc04d8; xor eax, eax; ret; 
0x000c065d: jne 0xc0661; xor eax, eax; ret; 
0x000c08fd: jne 0xc08f8; pop esi; ret; 
0x000c143b: jne 0xc1595; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c259c: jne 0xc2590; ret; 
0x000c258c: jne 0xc259a; ret; 
0x000c33ce: jne 0xc33d2; cmove eax, edx; ret; 
0x000c35ed: jne 0xc3614; add esp, 0x18; pop ebx; ret; 
0x000c3a5c: jne 0xc3ab5; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c3e15: jne 0xc3e00; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000c7d9c: jne 0xc7ded; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cacdc: jne 0xcad1d; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000ce63c: jne 0xce69f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d19fb: jne 0xd1afa; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000d1bc6: jne 0xd1be7; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000d1c20: jne 0xd1c34; lea eax, [edx - 0x92344]; and ch, 2; lea edx, [edx - 0x15fe54]; cmove eax, edx; ret; 
0x000d5df5: jne 0xd5e00; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d5e77: jne 0xd5e82; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d5ef5: jne 0xd5f00; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d6b4f: jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6b2e: jne 0xd6ca0; xor eax, eax; pop edi; pop esi; ret; 
0x000d6d2f: jne 0xd6d20; mov eax, ecx; pop ebx; pop esi; ret; 
0x000d6f90: jne 0xd6f70; add eax, 1; ret; 
0x000d6f6a: jne 0xd6f8a; ret; 
0x000d7053: jne 0xd7048; xor edx, edx; mov eax, edx; ret; 
0x000d707c: jne 0xd7070; mov eax, ecx; pop ebx; ret; 
0x000d7b7a: jne 0xd7b8f; add esp, 0x28; pop ebx; ret; 
0x000d7bfe: jne 0xd7c04; add esp, 0x1c; ret; 
0x000d7c48: jne 0xd7c4f; add esp, 0x38; pop ebx; ret; 
0x000d7caa: jne 0xd7cb1; add esp, 0x48; pop ebx; ret; 
0x000d8f1e: jne 0xd8f25; add esp, 0x28; pop ebx; ret; 
0x000d9183: jne 0xd91c2; add esp, 0x28; pop ebx; ret; 
0x000d9238: jne 0xd928c; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d94f7: jne 0xd9510; add esp, 0x38; pop ebx; ret; 
0x000dbdaa: jne 0xdbdca; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dbe32: jne 0xdbe52; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dc2b8: jne 0xdc2c1; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000dcaf9: jne 0xdcb08; add esp, 4; pop ebx; pop esi; ret; 
0x000dfe5a: jne 0xdfeb2; stc; call dword ptr [eax - 0x18]; 
0x000e2332: jne 0xe2338; add esp, 0x1c; ret; 
0x000e47b2: jne 0xe47b8; add esp, 0x1c; ret; 
0x000e48e6: jne 0xe491a; add esp, 0x28; pop ebx; ret; 
0x000e493f: jne 0xe494d; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000e4ad4: jne 0xe4adb; add esp, 0x28; pop ebx; ret; 
0x000e4b79: jne 0xe4bb0; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e4b33: jne 0xe4be3; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e4f5b: jne 0xe4ff8; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e50aa: jne 0xe50e3; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000e58aa: jne 0xe58b4; add esp, 0xe8; pop ebx; ret; 
0x000e591c: jne 0xe5926; add esp, 0xe8; pop ebx; ret; 
0x000e59c0: jne 0xe59ca; add esp, 0xe8; pop ebx; ret; 
0x000e5a54: jne 0xe5a60; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x000e5b90: jne 0xe5be1; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000e60ff: jne 0xe612d; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000e68fa: jne 0xe68d0; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000e6dba: jne 0xe6d90; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000ec8df: jne 0xec8ef; add esp, 0x1c; ret; 
0x000ed97c: jne 0xed971; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000eda12: jne 0xed9f3; xor eax, eax; pop ebx; ret; 
0x000edbec: jne 0xedc06; add esp, 0x78; pop ebx; ret; 
0x000f04c2: jne 0xf04a3; xor eax, eax; pop ebx; ret; 
0x000f069c: jne 0xf06b6; add esp, 0x78; pop ebx; ret; 
0x000f1292: jne 0xf1273; xor eax, eax; pop ebx; ret; 
0x000f146c: jne 0xf1486; add esp, 0x78; pop ebx; ret; 
0x000f3d32: jne 0xf3d13; xor eax, eax; pop ebx; ret; 
0x000f3f0c: jne 0xf3f26; add esp, 0x78; pop ebx; ret; 
0x000f4b12: jne 0xf4af3; xor eax, eax; pop ebx; ret; 
0x000f4cec: jne 0xf4d06; add esp, 0x78; pop ebx; ret; 
0x000f7592: jne 0xf755d; xor eax, eax; ret; 
0x000f756f: jne 0xf7589; mov eax, 1; ret; 
0x000f7815: jne 0xf7820; add esp, 8; pop ebx; ret; 
0x000f789c: jne 0xf78dc; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000f7cef: jne 0xf7d90; mov eax, edx; pop ebx; ret; 
0x000f7dd9: jne 0xf7e40; ret; 
0x000f8267: jne 0xf8288; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000f8343: jne 0xf8370; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84e3: jne 0xf8510; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000ffad2: jne 0xffb50; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00125918: jno 0x125910; jmp dword ptr [ebp - 0x75]; 
0x0012bbe2: jno 0x12bbe9; add byte ptr [ecx + 0x10b22fc2], al; add byte ptr [ebx - 0x48], dl; ret; 
0x0012bc67: jno 0x12bc69; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013729d: jno 0x1372a3; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0014cba3: jno 0x14cb93; dec dword ptr [ebp - 0x63f1b7f]; call dword ptr [eax - 0x73]; 
0x0015eb4b: jno 0x15eb46; call dword ptr [eax - 0x18]; 
0x0015ebfd: jno 0x15ebf8; call dword ptr [eax - 0x18]; 
0x0015ecbf: jno 0x15ecba; call dword ptr [eax - 0x73]; 
0x0015ecc6: jno 0x15ecc1; call dword ptr [eax - 0x18]; 
0x0015f68f: jno 0x15f68a; call dword ptr [eax + 0x6a]; 
0x0015f7d4: jno 0x15f7cf; call dword ptr [eax - 0x18]; 
0x0015f88d: jno 0x15f888; call dword ptr [eax - 0x18]; 
0x0015f94a: jno 0x15f945; call dword ptr [eax - 0x73]; 
0x0015f951: jno 0x15f94c; call dword ptr [eax - 0x18]; 
0x001603e1: jno 0x1603dc; call dword ptr [ecx - 1]; 
0x00160d7b: jno 0x160d76; call dword ptr [eax - 0x18]; 
0x00160e2d: jno 0x160e28; call dword ptr [eax - 0x18]; 
0x00160eef: jno 0x160eea; call dword ptr [eax - 0x73]; 
0x00160ef6: jno 0x160ef1; call dword ptr [eax - 0x18]; 
0x0016106b: jno 0x161066; call dword ptr [eax - 0x18]; 
0x0016111d: jno 0x161118; call dword ptr [eax - 0x18]; 
0x001611df: jno 0x1611da; call dword ptr [eax - 0x73]; 
0x0018f121: jno 0x18f177; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193221: jno 0x19323b; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c61: jno 0x194c65; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3b8b: jno 0x1a3b8f; add byte ptr [eax], al; xor eax, eax; ret; 
0x00083ca4: jno 0x83caa; cli; jmp dword ptr [esi - 0x70]; 
0x000c1db1: jno 0xc1dba; add byte ptr [ebx - 0x72e3db84], cl; xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000d53ce: jno 0xd5359; ret; 
0x000ed97b: jno 0xed9f2; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x00123cca: jnp 0x123c59; xchg ebx, eax; ret; 
0x0012bc3e: jnp 0x12bc40; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015547d: jnp 0x155470; call dword ptr [eax - 0x73]; 
0x00155536: jnp 0x155529; call dword ptr [eax - 0x73]; 
0x001555f3: jnp 0x1555e6; call dword ptr [eax - 0x73]; 
0x001577bc: jnp 0x15782d; stc; call dword ptr [eax + 0x55]; 
0x0015cc1f: jnp 0x15cc91; stc; call dword ptr [eax - 0x18]; 
0x001613d6: jnp 0x1613d5; jmp dword ptr [esi - 0x70]; 
0x00163751: jnp 0x1637b2; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd4e9; 
0x0018347f: jnp 0x1834b9; jmp dword ptr [ebp - 0x75]; 
0x0018c7b0: jnp 0x18c7b6; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c860: jnp 0x18c866; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018fa57: jnp 0x18faa8; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3f54: jnp 0x1a3ee3; inc ecx; push es; ret; 
0x00028c7b: jnp 0x28c76; call dword ptr [eax - 0x73]; 
0x00028da3: jnp 0x28d9e; call dword ptr [eax - 0x73]; 
0x00028dc6: jnp 0x28dc1; call dword ptr [eax + 0x68]; 
0x00028de9: jnp 0x28de4; call dword ptr [eax + 0x68]; 
0x00028dfb: jnp 0x28df6; call dword ptr [eax - 0x73]; 
0x000291a7: jnp 0x291a2; call dword ptr [eax - 0x73]; 
0x000292ec: jnp 0x292e7; call dword ptr [eax - 0x73]; 
0x0002930f: jnp 0x2930a; call dword ptr [eax + 0x68]; 
0x00029332: jnp 0x2932d; call dword ptr [eax + 0x68]; 
0x00029344: jnp 0x2933f; call dword ptr [eax - 0x73]; 
0x00029876: jnp 0x29871; call dword ptr [eax - 0x73]; 
0x0002997d: jnp 0x29978; call dword ptr [eax - 0x73]; 
0x000299d3: jnp 0x299ce; call dword ptr [eax - 0x73]; 
0x000299f6: jnp 0x299f1; call dword ptr [eax + 0x68]; 
0x00029a19: jnp 0x29a14; call dword ptr [eax + 0x68]; 
0x00029ea9: jnp 0x29ea4; call dword ptr [eax - 0x73]; 
0x00029f00: jnp 0x29efb; call dword ptr [eax - 0x73]; 
0x00029f23: jnp 0x29f1e; call dword ptr [eax - 0x73]; 
0x000379c1: jnp 0x37a3f; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x00054294: jnp 0x5429a; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a1c7f: jnp 0x59952cce; add al, 0xf6; ret; 
0x000be550: jnp 0x5b18099a; pop esi; ret; 
0x000be5d4: jnp 0x5b180a1e; pop esi; ret; 
0x000be714: jnp 0x5b180b5e; pop esi; ret; 
0x000bb0cd: jnp 0x5e13d517; ret; 
0x000bb151: jnp 0x5e13d59b; ret; 
0x000bb251: jnp 0x5e13d69b; ret; 
0x0008b152: jnp 0x8b163; add byte ptr [0x1abcbf], al; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0008d64b: jnp 0x8d64c; jmp dword ptr [esi - 0x70]; 
0x00090d25: jnp 0x90d76; stc; call dword ptr [eax - 0x18]; 
0x0009646c: jnp 0x96476; dec ecx; lcall 0, 0xb8870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00096dff: jnp 0x96e09; dec ecx; lcall 1, 0x3d870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0009a87b: jnp 0x9a87c; jmp dword ptr [esi - 0x70]; 
0x0009f3c8: jnp 0x9f3b0; call dword ptr [eax + 0x57]; 
0x000a1eb5: jnp 0xa1f08; stc; call dword ptr [eax - 0x73]; 
0x000a324b: jnp 0xa329e; stc; call dword ptr [eax - 0x73]; 
0x000a4ba1: jnp 0xa4b5c; sti; inc dword ptr [ebx - 0x17aceb3c]; add byte ptr [esi], 0xfe; jmp dword ptr [esi - 0x70]; 
0x000a9d9e: jnp 0xa9da4; cmove eax, edx; ret; 
0x000a9e00: jnp 0xa9dea; push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bf6c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000c256e: jnp 0xc2574; cmove eax, edx; ret; 
0x000c25be: jnp 0xc25c4; cmove eax, edx; ret; 
0x000c357e: jnp 0xc3584; cmove eax, edx; ret; 
0x000c421e: jnp 0xc4224; cmove eax, edx; ret; 
0x000c6861: jnp 0xc683b; clc; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x000ec551: jnp 0xec540; stc; inc dword ptr [ebx - 0x17a8f314]; ret 0x644; 
0x0010ed63: jns 0x10ed73; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0011f706: jns 0x11f691; ret; 
0x00124619: jns 0x12461e; mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00126cfb: jns 0x126cfd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001372a0: jns 0x1372aa; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0013ae56: jns 0x13ae5a; add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x001534e3: jns 0x153486; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x0015eb44: jns 0x15eb37; call dword ptr [eax - 0x73]; 
0x0015ebf6: jns 0x15ebe9; call dword ptr [eax - 0x73]; 
0x0015ecb8: jns 0x15ecab; call dword ptr [eax - 0x73]; 
0x001aa106: jns 0x1aa141; ret; 
0x0002e00f: jns 0x2e00a; call dword ptr [eax - 0x73]; 
0x0002e032: jns 0x2e02d; call dword ptr [eax - 0x73]; 
0x0002e092: jns 0x2e08d; call dword ptr [eax - 0x73]; 
0x0002e834: jns 0x2e82f; call dword ptr [eax - 0x73]; 
0x0002ea5c: jns 0x2ea57; call dword ptr [eax - 0x73]; 
0x0002eb3b: jns 0x2eb36; call dword ptr [eax - 0x73]; 
0x0002eb5e: jns 0x2eb59; call dword ptr [eax + 0x68]; 
0x0002ebe3: jns 0x2ebde; call dword ptr [eax - 0x73]; 
0x0002ec06: jns 0x2ec01; call dword ptr [eax - 0x73]; 
0x0002ec29: jns 0x2ec24; call dword ptr [eax + 0x68]; 
0x0002ec3e: jns 0x2ec39; call dword ptr [eax - 0x73]; 
0x0002ec61: jns 0x2ec5c; call dword ptr [eax - 0x73]; 
0x0002ec84: jns 0x2ec7f; call dword ptr [eax - 0x73]; 
0x0002eca7: jns 0x2eca2; call dword ptr [eax - 0x73]; 
0x000463e3: jns 0x463ee; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b8976: jns 0x47988cd3; pop es; pop edi; pop esi; pop ebx; ret; 
0x00055703: jns 0x556eb; std; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x00129c28: jns 0x5968bd; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00059d37: jns 0x59cff; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x000b72a6: jns 0x5e6a7603; pop ebx; ret; 
0x000f8b35: jns 0x5f6de713; pop ebp; ret; 
0x000653d3: jns 0x6541b; add byte ptr [ecx - 0x5a77b], cl; dec dword ptr [ecx - 0x5f363]; jmp dword ptr [ebp - 0x5f]; 
0x00055040: jns 0x748e697a; sbb dword ptr [ebx + eax*4], eax; ret; 
0x000d2280: jns 0x74963bba; sbb dword ptr [ebx + eax*4], eax; ret; 
0x00156ce0: jns 0x74a330b6; add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00077a03: jns 0x779c8; sti; dec dword ptr [ebp - 0x682b37a]; call dword ptr [eax - 0x73]; 
0x000815c6: jns 0x81553; inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0010b2ca: jns 0x8dca9e96; adc eax, -0x4f; stc; call dword ptr [eax - 0x73]; 
0x000934be: jns 0x93664; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009426c: jns 0x9426f; add byte ptr [eax], al; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009426a: jns 0x943e9; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009de92: jns 0x9de98; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009def5: jns 0x9defb; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000aacf4: jns 0xaac7b; ror byte ptr [edi], 0x84; ret 2; 
0x000b1c4a: jns 0xb1c59; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b1ca0: jns 0xb1cac; add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b611a: jns 0xb6129; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b8483: jns 0xb848e; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000df04e: jns 0xdefd9; ret 0x448b; 
0x000df103: jns 0xdf08e; ret 0x448b; 
0x000df184: jns 0xdf10f; ret 0x448b; 
0x000e4b62: jns 0xe4bc8; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e4cb6: jns 0xe4cc0; dec ecx; lcall 0, 0x8e870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000e4ffa: jns 0xe4ff6; dec dword ptr [ebx - 0x76abdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00185985: jns 0xe91c7dcf; adc dword ptr [eax - 0xe], edx; jmp dword ptr [esi - 0x70]; 
0x000f86d1: jns 0xf86c0; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0010d3fd: jo 0x10d3dc; cmp esi, 0x2f; ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x0010e302: jo 0x10e2e1; cmp esi, 0x2f; ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ede0]; jmp eax; 
0x0010f84f: jo 0x10f7d4; ret; 
0x00111e10: jo 0x111e6d; pop esi; pop edi; ret; 
0x001125ed: jo 0x11257c; push esp; and al, 8; call dword ptr gs:[0x10]; 
0x0011caed: jo 0x11ca7c; push esp; and al, 8; call dword ptr gs:[0x10]; 
0x0011e81e: jo 0x11e7ad; push esp; and al, 0x28; call dword ptr gs:[0x10]; 
0x0011f744: jo 0x11f6cf; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0012a6a0: jo 0x12a6fd; pop esi; pop edi; ret; 
0x0012a910: jo 0x12a96d; pop esi; pop edi; ret; 
0x0012bb90: jo 0x12bbed; pop esi; pop edi; ret; 
0x00143975: jo 0x1438fa; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001470c5: jo 0x147100; ret 0x840f; 
0x00147394: jo 0x1473cf; ret; 
0x00147590: jo 0x1475cb; ret 0x840f; 
0x00147a8c: jo 0x147ac7; ret 0x840f; 
0x001523a5: jo 0x15236a; stc; call dword ptr [eax - 0x18]; 
0x0015ba8b: jo 0x15ba86; call dword ptr [eax - 0x18]; 
0x0015bb3d: jo 0x15bb38; call dword ptr [eax - 0x18]; 
0x0015bc0b: jo 0x15bc06; call dword ptr [eax - 0x73]; 
0x0015bc12: jo 0x15bc0d; call dword ptr [eax - 0x18]; 
0x0015cb2a: jo 0x15cb25; call dword ptr [eax + 0x55]; 
0x0015cbd6: jo 0x15cbd1; call dword ptr [edx + 0x50]; 
0x0015cc0f: jo 0x15cbd6; stc; call dword ptr [eax - 0x73]; 
0x0015cc20: jo 0x15cc1b; call dword ptr [eax - 0x18]; 
0x0015cf36: jo 0x15cf31; call dword ptr [edx + 0x50]; 
0x0015d016: jo 0x15d011; call dword ptr [edx + 0x50]; 
0x0015d0b9: jo 0x15d0b4; call dword ptr [edx + 0x50]; 
0x0015d462: jo 0x15d45d; call dword ptr [edx + 0x50]; 
0x0015d506: jo 0x15d501; call dword ptr [eax - 1]; 
0x0015d64b: jo 0x15d646; call dword ptr [eax - 1]; 
0x0015d7fa: jo 0x15d7f5; call dword ptr [eax - 1]; 
0x0015d878: jo 0x15d873; call dword ptr [eax - 0x18]; 
0x0015d88f: jo 0x15d88a; call dword ptr [eax - 1]; 
0x0015daef: jo 0x15daea; call dword ptr [ebp - 0x73]; 
0x0015e026: jo 0x15e021; call dword ptr [ebp - 0x73]; 
0x0015e45b: jo 0x15e456; call dword ptr [eax - 0x18]; 
0x0015e50d: jo 0x15e508; call dword ptr [eax - 0x18]; 
0x0015e5db: jo 0x15e5d6; call dword ptr [eax - 0x73]; 
0x0015e5e2: jo 0x15e5dd; call dword ptr [eax - 0x18]; 
0x001672ef: jo 0x167364; stc; call dword ptr [eax + 0x6a]; 
0x00167323: jo 0x167398; stc; jmp dword ptr [ebp - 0x75]; 
0x001673bf: jo 0x167434; stc; call dword ptr [eax - 0x18]; 
0x00168579: jo 0x16858f; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016aef7: jo 0x16af25; mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x0016ebba: jo 0x16eb3f; les ebx, ptr [eax]; pop ebx; ret; 
0x0017207e: jo 0x1720b7; stc; call dword ptr [edi + 0x52]; 
0x001766fe: jo 0x17670c; call 0x833f0; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x001776e7: jo 0x1776b3; stc; call dword ptr [eax - 0x73]; 
0x00179a43: jo 0x179a6e; ret; 
0x0017bc3e: jo 0x17bc40; add byte ptr [ecx + 0xbb1d3c3], al; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x0018c0f6: jo 0x18c0b8; add bh, dh; ret 0xf; 
0x0018c233: jo 0x18c1b6; ret 0x80; 
0x0018c29a: jo 0x18c21d; ret 0x80; 
0x0018c2ec: jo 0x18c26f; ret 0x80; 
0x0018c776: jo 0x18c738; add bh, dh; ret 0xf; 
0x001980ef: jo 0x198100; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0002a14f: jo 0x2a1a1; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x0002cc8c: jo 0x2cc8e; add al, ch; dec esp; ret 0x10; 
0x0003292c: jo 0x3292f; add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00033d50: jo 0x33d53; add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003bfc1: jo 0x3bfc7; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0003c011: jo 0x3c017; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0003d94c: jo 0x3d941; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003f2d1: jo 0x3f260; test esp, ebx; cmp al, 0xf9; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x00058d07: jo 0x58c91; stc; call dword ptr [eax - 0x73]; 
0x00058e11: jo 0x58d9b; stc; call dword ptr [eax - 0x73]; 
0x00058e36: jo 0x58dc0; stc; call dword ptr [eax - 0x73]; 
0x00058e5b: jo 0x58de5; stc; call dword ptr [eax - 0x73]; 
0x00058e80: jo 0x58e0a; stc; call dword ptr [eax - 0x73]; 
0x00058ea5: jo 0x58e2f; stc; call dword ptr [eax - 0x73]; 
0x00058eca: jo 0x58e54; stc; call dword ptr [eax - 0x73]; 
0x00058eef: jo 0x58e79; stc; call dword ptr [eax - 0x73]; 
0x00058f19: jo 0x58ea3; stc; call dword ptr [eax - 0x73]; 
0x00058f3e: jo 0x58ec8; stc; call dword ptr [eax - 0x73]; 
0x00058f63: jo 0x58eed; stc; call dword ptr [eax - 0x73]; 
0x00058f88: jo 0x58f12; stc; call dword ptr [eax - 0x73]; 
0x00058fad: jo 0x58f37; stc; call dword ptr [eax - 0x73]; 
0x00058fd2: jo 0x58f5c; stc; call dword ptr [eax - 0x73]; 
0x00058ff7: jo 0x58f81; stc; call dword ptr [eax - 0x73]; 
0x0005ad0c: jo 0x5ac9e; std; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0005ae54: jo 0x5ade0; stc; call dword ptr [eax - 0x73]; 
0x0017fd3b: jo 0x8427043b; ret; 
0x00085c69: jo 0x85c7f; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00085d79: jo 0x85d8f; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00088300: jo 0x8833a; call 0x11b5e0; add esp, 0x18; pop ebx; ret; 
0x0009a009: jo 0x9a00f; call dword ptr [eax]; 
0x0009c9cd: jo 0x9c968; stc; call dword ptr [eax - 0x18]; 
0x0009ce9d: jo 0x9ce38; stc; call dword ptr [eax - 0x18]; 
0x0009e50c: jo 0x9e511; add byte ptr [eax], al; ret; 
0x000a2a13: jo 0xa29ba; stc; call dword ptr [eax - 0x18]; 
0x000ad34b: jo 0xad369; pop ebx; pop esi; ret; 
0x000baf27: jo 0xbaf2b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000baf43: jo 0xbaf49; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000baf95: jo 0xbaf9f; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb089: jo 0xbb09b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb10f: jo 0xbb125; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb193: jo 0xbb1ad; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be35d: jo 0xbe361; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be389: jo 0xbe38f; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be40b: jo 0xbe415; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be50f: jo 0xbe521; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be595: jo 0xbe5ab; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be619: jo 0xbe633; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000d7d0e: jo 0xd7d14; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x000d7d5b: jo 0xd7d61; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x000d7dae: jo 0xd7db4; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x000d7dfb: jo 0xd7e01; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x000da089: jo 0xda08f; pop ebx; pop esi; pop edi; ret; 
0x000e5b94: jo 0xe5bf1; pop esi; pop edi; ret; 
0x000e6103: jo 0xe6160; pop esi; pop edi; ret; 
0x000ece3b: jo 0xecdec; stc; call dword ptr [eax - 0x73]; 
0x000f0394: jo 0xf0346; stc; call dword ptr [eax - 0x73]; 
0x0010acf7: jp 0x10acf9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00111d74: jp 0x111d9a; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0011e2ef: jp 0x11e32d; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0012490b: jp 0x124910; xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x0013cfca: jp 0x13cfce; add byte ptr [ebp + 6], dh; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0014e47f: jp 0x14e4ee; stc; call dword ptr [eax - 0x18]; 
0x0014e47f: jp 0x14e4ee; stc; call dword ptr [eax - 0x18]; neg dword ptr [eax - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0014e51f: jp 0x14e58e; stc; call dword ptr [eax - 0x18]; 
0x0014e5bf: jp 0x14e62e; stc; call dword ptr [eax - 0x18]; 
0x0014e5bf: jp 0x14e62e; stc; call dword ptr [eax - 0x18]; mov bh, 0x57; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e65f: jp 0x14e6ce; stc; call dword ptr [eax - 0x18]; 
0x0014e6ff: jp 0x14e76e; stc; call dword ptr [eax - 0x18]; 
0x0014e6ff: jp 0x14e76e; stc; call dword ptr [eax - 0x18]; ja 0x14e75d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e79f: jp 0x14e80e; stc; call dword ptr [eax - 0x18]; 
0x0014e83f: jp 0x14e8ae; stc; call dword ptr [eax - 0x18]; 
0x0014e8df: jp 0x14e94e; stc; call dword ptr [eax - 0x18]; 
0x0014e97f: jp 0x14e9ee; stc; call dword ptr [eax - 0x18]; 
0x0014e97f: jp 0x14e9ee; stc; call dword ptr [eax - 0x18]; not dword ptr [ebx - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0014ea1f: jp 0x14ea8e; stc; call dword ptr [eax - 0x18]; 
0x0014eabf: jp 0x14eb2e; stc; call dword ptr [eax - 0x18]; 
0x0014eabf: jp 0x14eb2e; stc; call dword ptr [eax - 0x18]; mov bh, 0x52; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014eb5f: jp 0x14ebce; stc; call dword ptr [eax - 0x18]; 
0x0014ebff: jp 0x14ec6e; stc; call dword ptr [eax - 0x18]; 
0x0014ebff: jp 0x14ec6e; stc; call dword ptr [eax - 0x18]; ja 0x14ec58; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015f7cd: jp 0x15f7c0; call dword ptr [eax - 0x73]; 
0x0015f886: jp 0x15f879; call dword ptr [eax - 0x73]; 
0x0015f943: jp 0x15f936; call dword ptr [eax - 0x73]; 
0x00161064: jp 0x161057; call dword ptr [eax - 0x73]; 
0x00161116: jp 0x161109; call dword ptr [eax - 0x73]; 
0x001611d8: jp 0x1611cb; call dword ptr [eax - 0x73]; 
0x00191a98: jp 0x191acb; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001a49ca: jp 0x1a49d2; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001a4a2d: jp 0x1a4a3a; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x001a4a65: jp 0x1a4a76; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0002a62c: jp 0x2a627; call dword ptr [eax - 0x73]; 
0x0002a8bc: jp 0x2a8b7; call dword ptr [eax - 0x73]; 
0x0002a945: jp 0x2a940; call dword ptr [eax - 0x73]; 
0x0002a968: jp 0x2a963; call dword ptr [eax + 0x68]; 
0x0002a98b: jp 0x2a986; call dword ptr [eax + 0x68]; 
0x0002af7f: jp 0x2af7a; call dword ptr [eax - 0x73]; 
0x0002b0ac: jp 0x2b0a7; call dword ptr [eax - 0x73]; 
0x0002b65b: jp 0x2b656; call dword ptr [eax + 0x68]; 
0x0002b67e: jp 0x2b679; call dword ptr [eax + 0x68]; 
0x0002b6a4: jp 0x2b69f; call dword ptr [eax - 0x73]; 
0x0002bdcb: jp 0x2bdc6; call dword ptr [eax - 0x73]; 
0x0002c155: jp 0x2c150; call dword ptr [eax - 0x73]; 
0x0002c2e6: jp 0x2c2e1; call dword ptr [eax - 0x73]; 
0x0002c379: jp 0x2c374; call dword ptr [eax - 0x73]; 
0x0002c39c: jp 0x2c397; call dword ptr [eax - 0x73]; 
0x0002ca8e: jp 0x2ca89; call dword ptr [eax - 0x73]; 
0x0002cbe7: jp 0x2cbe2; call dword ptr [eax - 0x73]; 
0x0002cc0a: jp 0x2cc05; call dword ptr [eax + 0x68]; 
0x0002cc73: jp 0x2cc6e; call dword ptr [eax - 0x73]; 
0x0002cc9b: jp 0x2cc96; call dword ptr [eax + 0x68]; 
0x0002d461: jp 0x2d45c; call dword ptr [eax - 0x73]; 
0x0002d688: jp 0x2d683; call dword ptr [eax - 0x73]; 
0x0002d7ad: jp 0x2d7a8; call dword ptr [eax + 0x68]; 
0x0002d85a: jp 0x2d855; call dword ptr [eax - 0x73]; 
0x0002d8c3: jp 0x2d8be; call dword ptr [eax + 0x68]; 
0x0002de7b: jp 0x2de76; call dword ptr [eax - 0x73]; 
0x0002dfc9: jp 0x2dfc4; call dword ptr [eax - 0x73]; 
0x0002dfec: jp 0x2dfe7; call dword ptr [eax + 0x68]; 
0x0002e055: jp 0x2e050; call dword ptr [eax - 0x73]; 
0x0002e07d: jp 0x2e078; call dword ptr [eax + 0x68]; 
0x0003b450: jp 0x3b460; jne 0x3b460; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003b7cf: jp 0x3b7e0; jne 0x3b7e0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003badb: jp 0x3baf0; jne 0x3baf0; fadd st(0); add esp, 8; pop ebx; ret; 
0x00059fc2: jp 0x59fdb; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00061092: jp 0x610d3; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00065322: jp 0x65324; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000715a2: jp 0x715a4; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0007be2d: jp 0x7be29; call dword ptr [ebp + 0x57]; 
0x0008023c: jp 0x8028c; stc; call dword ptr [eax - 0x18]; 
0x00086b9e: jp 0x86bd8; jmp dword ptr [ebp - 0x75]; 
0x0008b4c4: jp 0x8b514; stc; call dword ptr [eax - 0x18]; 
0x0008b4c4: jp 0x8b514; stc; call dword ptr [eax - 0x18]; mov dl, 0x88; cli; jmp dword ptr [esi - 0x70]; 
0x000a7b10: jp 0xa7afa; push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bb8c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9ca3: jp 0xa9c8d; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000ba841: jp 0xba844; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000ba851: jp 0xba855; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000ba881: jp 0xba887; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000ba8f1: jp 0xba8fb; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000bda55: jp 0xbda5f; mov eax, edi; pop ebx; pop edi; ret; 
0x000bdab2: jp 0xbdac4; mov eax, edi; pop ebx; pop edi; ret; 
0x000d5d02: jp 0xd5ce4; cmc; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x000e24e0: jp 0xe24f1; xchg dword ptr [ecx], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x31c2444], cl; test byte ptr [eax - 0x70488], cl; jmp eax; 
0x00106318: js 0x106353; ret 0x4f0f; 
0x0010fe30: js 0x10fe8d; ret; 
0x0011e67a: js 0x11e684; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0011e81a: js 0x11e7a7; pop esp; and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011f5c8: js 0x11f5d0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00129a8c: js 0x129a8e; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0012a9ce: js 0x12a9d1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012cf22: js 0x12cf30; add esp, 8; pop ebx; ret; 
0x0013c42b: js 0x13c3b0; rol byte ptr [ecx], 0x83; ret; 
0x00140d2b: js 0x140d38; mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0014584a: js 0x14584d; sub eax, 0x8feb0974; lea esi, [esi]; xor eax, eax; ret; 
0x00146db2: js 0x146d9f; ret 0x768d; 
0x0014c489: js 0x14c479; dec dword ptr [ebx - 0x72ebdba4]; sub dword ptr [eax - 0x40], -7; call dword ptr [eax - 0x73]; 
0x0014f449: js 0x14f3ce; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00150f32: js 0x150f40; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00151ba8: js 0x151b39; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00151dc8: js 0x151e18; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0015e454: js 0x15e447; call dword ptr [eax - 0x73]; 
0x0015e506: js 0x15e4f9; call dword ptr [eax - 0x73]; 
0x0015e5d4: js 0x15e5c7; call dword ptr [eax - 0x73]; 
0x00172ca7: js 0x172c2c; ret 0x8901; 
0x001739d9: js 0x173a50; stc; call dword ptr [eax - 0x73]; 
0x00185471: js 0x185480; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001875d2: js 0x187584; stc; call dword ptr [eax - 0x73]; 
0x0018ef1a: js 0x18ef72; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019049a: js 0x1904df; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00027f1d: js 0x27f58; stc; call dword ptr [edi - 1]; 
0x0002f0d2: js 0x2f124; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x0002f3be: js 0x2f34d; add dword ptr [ecx + 0x3b], -7; call dword ptr [eax - 0x18]; 
0x00032dfe: js 0x32e14; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00033aa9: js 0x33a6b; test edx, edx; je 0x33ab9; mov dword ptr [esp + 4], eax; call edx; 
0x00035b4d: js 0x35b88; stc; call dword ptr [eax - 0x73]; 
0x0003bfc4: js 0x3bfce; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0003c014: js 0x3c01e; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000b8908: js 0x47988b65; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000b7268: js 0x5e6a74c5; pop ebx; ret; 
0x000b7286: js 0x5e6a76e3; pop ebx; ret; 
0x0005e819: js 0x5e876; ret; 
0x0006070b: js 0x60768; ret; 
0x0006d8be: js 0x6d8e9; ret; 
0x00082f2a: js 0x82f30; ret; 
0x000889d9: js 0x889f5; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0008b1f2: js 0x8b20e; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0008b281: js 0x8b29d; add byte ptr [eax], al; ret; 
0x0008caed: js 0x8caef; add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008cb24: js 0x8cb26; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0008cb2d: js 0x8cb2f; add byte ptr [eax], al; ret; 
0x0008d4f0: js 0x8d4f2; add byte ptr [eax], al; pop ebx; ret; 
0x00098061: js 0x98070; mov dword ptr [edx + 0x3af4], eax; xor eax, eax; ret; 
0x0009acce: js 0x9ac68; stc; call dword ptr [eax - 0x73]; 
0x0009ddb8: js 0x9dde8; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0009e4d2: js 0x9e4d7; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e502: js 0x9e507; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e532: js 0x9e537; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e582: js 0x9e587; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009f392: js 0x9f37a; call dword ptr [eax + 0x57]; 
0x0009f3a4: js 0x9f38c; call dword ptr [eax + 0x57]; 
0x0009f3b6: js 0x9f39e; call dword ptr [eax + 0x57]; 
0x000a0404: js 0xa043f; stc; dec dword ptr [ebx - 0x72ebdbac]; sbb al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x000a2640: js 0xa25ea; stc; call dword ptr [eax - 0x73]; 
0x000be784: js 0xbe7c6; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be814: js 0xbe826; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000d01ca: js 0xd0176; stc; call dword ptr [eax - 0x18]; 
0x000d6c27: js 0xd6c88; pop esi; ret; 
0x000da87c: js 0xda8b7; stc; call dword ptr [eax + 0x6a]; 
0x000e7114: js 0xe7116; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7111: js 0xe717b; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000e8118: js 0xe8170; mov eax, 0x166; lea ecx, [ebp - 0x6c324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000edbf0: js 0xedc4d; ret; 
0x000f06a0: js 0xf06fd; ret; 
0x000f1470: js 0xf14cd; ret; 
0x000f3f10: js 0xf3f6d; ret; 
0x000f4cf0: js 0xf4d4d; ret; 
0x000f8226: js 0xf8230; ret; 
0x000fa717: js 0xfa69c; in al, dx; or byte ptr [ebp - 0x6a7e07d], cl; call dword ptr [eax + 0x55]; 
0x0002619d: lahf; adc eax, 0x241c8900; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0019d39d: lahf; adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00031d8f: lahf; add al, 0; add byte ptr [ebx - 0x69934474], cl; idiv edi; add ecx, ebx; jmp ecx; 
0x0018dff3: lahf; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011b329: lahf; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0017d13d: lahf; add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; cdq; jbe 0x17d142; call dword ptr [edx - 0x77]; 
0x001aeef5: lahf; add byte ptr [eax], al; add byte ptr [ecx + 0x7c891a3c], cl; sbb al, byte ptr [ebx + eax*4]; ret; 
0x0015173c: lahf; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x000b538d: lahf; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000a5eed: lahf; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000a1ecb: lahf; dec esp; or dword ptr [eax], eax; add byte ptr [ebx + 0x3910246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x00181edf: lahf; hlt; call dword ptr [eax - 0x18]; 
0x0016ab91: lahf; in al, dx; call dword ptr [esi - 0x17]; 
0x0012a877: lahf; lds edx, ptr [eax]; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x0008cc76: lahf; mov eax, dword ptr [0x548b001a]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x000b855d: lahf; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00139e6b: lahf; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0014a54a: lahf; ret 0xd009; 
0x00109649: lahf; ret 0xe8c1; 
0x0002aa76: lahf; ret; 
0x000a0380: lahf; stc; call dword ptr [eax - 0x18]; 
0x0009e677: lahf; xchg dword ptr [ecx], ebx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x00144a15: lar eax, word ptr [eax]; add byte ptr [ebx + 0x29042454], cl; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x000c3030: lar eax, word ptr [eax]; add byte ptr [ecx - 0x76a7dbac], cl; ret 0x448b; 
0x000899b6: lcall 0, 0x26b48d2e; add byte ptr [eax], al; nop; mov eax, 0xffffffff; ret; 
0x000e4cba: lcall 0, 0x8e870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x00096470: lcall 0, 0xb8870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00097086: lcall 0, 0xca870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x000a8e99: lcall 0x1076, 0x41f6fff6; cmove eax, edx; ret; 
0x000cac42: lcall 0x1cc4, 0x83ffffd9; ret; 
0x0014bcf9: lcall 0x1cc4, 0x83fffffe; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00193c7b: lcall 0x91c3, 0x81fffef0; adc byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bfccd: lcall 0xc031, 0x5e000000; pop ebx; ret; 
0x00096e03: lcall 1, 0x3d870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x001a8af3: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x0016fe42: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x000e035c: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000e3971: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000e1293: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x478b; 
0x000e1d39: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x748d; 
0x000ded66: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000d96cf: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000e4297: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf089; 
0x000dc9d2: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x000d9718: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0012a67b: lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a70d: lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a47ef: lds eax, ptr [ebx - 0x127aef3c]; jne 0xa4745; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x001a0de7: lds eax, ptr [ecx]; add byte ptr [eax], al; pop ebx; ret; 
0x00040f2c: lds eax, ptr [ecx]; fcom dword ptr [eax - 0x75]; inc esp; and al, 0x28; call eax; 
0x0009fe97: lds ebp, ptr [ecx]; ret 0x4589; 
0x00131eff: lds ebp, ptr [ecx]; ret 0x6c01; 
0x00036a84: lds ebp, ptr [ecx]; ret; 
0x00154645: lds ebp, ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x00153493: lds ebp, ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x00153609: lds ebp, ptr [esi - 7]; call dword ptr [eax - 0x73]; 
0x00169563: lds ebx, ptr [eax + 0x5a]; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0003d8e9: lds ebx, ptr [ebx + 0x5e]; mov eax, ebp; pop edi; pop ebp; ret; 
0x0016d5d7: lds ebx, ptr [ebx - 0x15]; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00033ee5: lds ecx, ptr [eax]; add byte ptr [ebx - 0x7c72f33c], al; xor byte ptr [esi], bh; stc; call dword ptr [eax - 1]; 
0x0009d1f4: lds ecx, ptr [ebp - 0x199e537d]; call dword ptr [eax + 0x56]; 
0x0010ac69: lds ecx, ptr [ebp - 0x64e8b7d]; call dword ptr [eax - 0x73]; 
0x001716d0: lds ecx, ptr [ebp - 0x68b7e7d]; call dword ptr [ecx + 0x6a]; 
0x0005fab2: lds ecx, ptr [ebp - 0x6bdd97d]; call dword ptr [ebp + 0x50]; 
0x0018fc4d: lds ecx, ptr [ebx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003009c: lds ecx, ptr [ecx + 0xbe8243c]; mov es, word ptr [edi]; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00029199: lds ecx, ptr [edi]; test dword ptr [ebp - 0x74ffffff], ebx; jl 0x291c7; sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax - 0x73]; 
0x000a94e4: lds ecx, ptr [edi]; xchg esp, eax; ret 0xc739; 
0x0009eb87: lds edi, ptr [ecx]; ret; 
0x0012a878: lds edx, ptr [eax]; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x0012a878: lds edx, ptr [eax]; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x000dff27: lds esp, ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0013e927: lds esp, ptr [ecx - 0x11]; call dword ptr [ebx + 0x50]; 
0x001a479b: lea eax, [eax + 0x10]; test edx, edx; jne 0x1a47b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00032910: lea eax, [eax + 0x11cc]; ret; 
0x00093b10: lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x00097e2d: lea eax, [eax + 0x3b2c]; push eax; call 0x8e510; add esp, 0x1c; ret; 
0x001227bd: lea eax, [eax + 0x45b0]; push eax; call 0x1228c0; add esp, 0x1c; ret; 
0x001728b0: lea eax, [eax + 0xa78c]; mov dword ptr gs:[edx], eax; ret; 
0x001a48f5: lea eax, [eax + 0xa]; pop edi; ret; 
0x001a484b: lea eax, [eax + 0xb]; pop edi; ret; 
0x001a4905: lea eax, [eax + 0xc]; pop edi; ret; 
0x001a4915: lea eax, [eax + 0xd]; pop edi; ret; 
0x001a4925: lea eax, [eax + 0xe]; pop edi; ret; 
0x001a4874: lea eax, [eax + 0xf]; pop edi; ret; 
0x001a4889: lea eax, [eax + 1]; pop edi; ret; 
0x001a4899: lea eax, [eax + 2]; pop edi; ret; 
0x001a47e1: lea eax, [eax + 3]; pop edi; ret; 
0x001a48a9: lea eax, [eax + 4]; pop edi; ret; 
0x001a48b5: lea eax, [eax + 5]; pop edi; ret; 
0x001a48c5: lea eax, [eax + 6]; pop edi; ret; 
0x001a4814: lea eax, [eax + 7]; pop edi; ret; 
0x001a48d5: lea eax, [eax + 8]; pop edi; ret; 
0x001a48e5: lea eax, [eax + 9]; pop edi; ret; 
0x0009a26c: lea eax, [eax + eax + 2]; ret; 
0x00098fb2: lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0005296b: lea eax, [eax + eax*8 + 6]; call 0x52930; jmp eax; 
0x00054170: lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x000c21b0: lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000bf123: lea eax, [eax + ecx + 0x10]; ret; 
0x000bf133: lea eax, [eax + ecx + 0x20]; ret; 
0x000bf143: lea eax, [eax + ecx + 0x30]; ret; 
0x00193216: lea eax, [eax + ecx]; pop edi; call 0x182d19; add ebx, 0x41871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bee73: lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000bee83: lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bee53: lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bf5c3: lea eax, [eax + edx + 0x10]; ret; 
0x000bf5d3: lea eax, [eax + edx + 0x20]; ret; 
0x0016a1cb: lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00181f45: lea eax, [eax + edx + 0x5c]; ret; 
0x000bf5a3: lea eax, [eax + edx - 0x10]; ret; 
0x000c4a7c: lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x000c3576: lea eax, [eax - 0x1600b4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c25b6: lea eax, [eax - 0x160e14]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00121b5d: lea eax, [eax - 0x64b88]; call 0x121860; test eax, eax; je 0x121b70; add esp, 0xc; ret; 
0x00121b1d: lea eax, [eax - 0x64ba8]; call 0x121860; test eax, eax; je 0x121b30; add esp, 0xc; ret; 
0x00024f4a: lea eax, [eax - 0x680ac]; ret; 
0x00024f6a: lea eax, [eax - 0x680b4]; ret; 
0x00024f22: lea eax, [eax - 0x68894]; push eax; push 1; call 0x11d890; add esp, 0x1c; ret; 
0x0017d241: lea eax, [eax - 0x6893c]; push eax; call 0x11b880; add esp, 0x1c; ret; 
0x0016792d: lea eax, [eax - 0x68c75]; push eax; push 0xa; call 0x150d90; add esp, 0x1c; ret; 
0x0016769d: lea eax, [eax - 0x68c82]; push eax; push 9; call 0x150d90; add esp, 0x1c; ret; 
0x001672ed: lea eax, [eax - 0x68c90]; push eax; push 8; call 0x150d90; add esp, 0x1c; ret; 
0x00166c9d: lea eax, [eax - 0x68c9c]; push eax; push 6; call 0x150d90; add esp, 0x1c; ret; 
0x0016694d: lea eax, [eax - 0x68cab]; push eax; push 5; call 0x150d90; add esp, 0x1c; ret; 
0x001662ed: lea eax, [eax - 0x68cb9]; push eax; push 4; call 0x150d90; add esp, 0x1c; ret; 
0x0016501d: lea eax, [eax - 0x68d0d]; push eax; push 3; call 0x150d90; add esp, 0x1c; ret; 
0x00163f8d: lea eax, [eax - 0x68d6b]; push eax; push 2; call 0x150d90; add esp, 0x1c; ret; 
0x00163c8d: lea eax, [eax - 0x68d77]; push eax; push 1; call 0x150d90; add esp, 0x1c; ret; 
0x0016383d: lea eax, [eax - 0x68d84]; push eax; push 0; call 0x150d90; add esp, 0x1c; ret; 
0x000c2566: lea eax, [eax - 0x91d44]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000a9d96: lea eax, [eax - 0x92a34]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000a9f96: lea eax, [eax - 0x96314]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a9dc6: lea eax, [eax - 0x96414]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a8e96: lea eax, [eax - 0x96594]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000929d5: lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d59be: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x00073ded: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x00069289: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x59373], cl; call dword ptr [ebx - 0x75]; 
0x000e4dd7: lea eax, [eax]; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00168b0b: lea eax, [eax]; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000e841b: lea eax, [ebp + 2]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e8304: lea eax, [ebp + 8]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004287e: lea eax, [ebx + 0x20]; pop ebx; ret; 
0x001686d5: lea eax, [ebx + 0xa5ec]; pop ebx; ret; 
0x0015137e: lea eax, [ebx + 4]; push eax; call edi; 
0x00041971: lea eax, [ebx + 6]; pop ebx; ret; 
0x0009e061: lea eax, [ebx + ebx]; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 8]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x001259dc: lea eax, [ebx - 1]; cmp eax, 2; jbe 0x125a10; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0007fe8d: lea eax, [ebx - 1]; pop ebx; ret; 
0x000427c2: lea eax, [ecx + 0x20]; pop ebx; ret; 
0x000429f5: lea eax, [ecx + 0x20]; ret; 
0x001a3d30: lea eax, [ecx + 0xa]; ret; 
0x001a3d40: lea eax, [ecx + 0xb]; ret; 
0x001a3cbb: lea eax, [ecx + 0xc]; ret; 
0x001a3d50: lea eax, [ecx + 0xd]; ret; 
0x001a3d60: lea eax, [ecx + 0xe]; ret; 
0x001a3d70: lea eax, [ecx + 0xf]; ret; 
0x000f8738: lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x001a3cc0: lea eax, [ecx + 1]; ret; 
0x001a3cd0: lea eax, [ecx + 2]; ret; 
0x001a3ce0: lea eax, [ecx + 3]; ret; 
0x001a3c68: lea eax, [ecx + 4]; ret; 
0x001a3cf0: lea eax, [ecx + 5]; ret; 
0x001a3d00: lea eax, [ecx + 6]; ret; 
0x001a3d10: lea eax, [ecx + 7]; ret; 
0x001a3c92: lea eax, [ecx + 8]; ret; 
0x001a3d20: lea eax, [ecx + 9]; ret; 
0x000bf16a: lea eax, [ecx + eax + 0x10]; ret; 
0x000bf17a: lea eax, [ecx + eax + 0x20]; ret; 
0x000bf18a: lea eax, [ecx + eax + 0x30]; ret; 
0x0008d930: lea eax, [ecx + eax + 0x4000]; ret; 
0x0006d61b: lea eax, [ecx + eax - 0x1c9bbb]; jmp eax; 
0x0007e460: lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x0003cf00: lea eax, [ecx - 1]; mov dword ptr [edx + 0x1f0], eax; mov eax, ecx; ret; 
0x000b8a88: lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b8a9e: lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000b8ac0: lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000b8ade: lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000b8afe: lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x00117c58: lea eax, [edi + 0x14]; push eax; push 1; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00117f9b: lea eax, [edi + 0x14]; push eax; push 2; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00117e7c: lea eax, [edi + 0x14]; push eax; push 5; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x000b8b24: lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000b8b42: lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000b8b62: lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b8b82: lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b8ba8: lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000b8bca: lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000b8bf8: lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000b8c18: lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000b8c32: lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000b8c52: lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000b8c72: lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000b8c92: lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x0010846b: lea eax, [edi + 0x3fac]; push eax; call 0x8d660; call dword ptr [esi]; 
0x000b8ee1: lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b89d0: lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x001a2d20: lea eax, [edi + 0xa]; pop edi; ret; 
0x000b89ee: lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x001a2be6: lea eax, [edi + 0xb]; pop edi; ret; 
0x000b8a0e: lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x001a2d40: lea eax, [edi + 0xc]; pop edi; ret; 
0x000b8a32: lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x001a2d50: lea eax, [edi + 0xd]; pop edi; ret; 
0x000b8a52: lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x001a2d60: lea eax, [edi + 0xe]; pop edi; ret; 
0x000b8a72: lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x001a2ba0: lea eax, [edi + 0xf]; pop edi; ret; 
0x000b88e4: lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x001a2ca0: lea eax, [edi + 1]; pop edi; ret; 
0x000b88f6: lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x001a2cb0: lea eax, [edi + 2]; pop edi; ret; 
0x000b890c: lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x001a2b43: lea eax, [edi + 3]; pop edi; ret; 
0x000b8924: lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x001a2cd0: lea eax, [edi + 4]; pop edi; ret; 
0x000b893a: lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x001a2ce0: lea eax, [edi + 5]; pop edi; ret; 
0x000b895c: lea eax, [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x001a2cf0: lea eax, [edi + 6]; pop edi; ret; 
0x000b897a: lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x001a2afd: lea eax, [edi + 7]; pop edi; ret; 
0x000b8998: lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x001a2d00: lea eax, [edi + 8]; pop edi; ret; 
0x000b89ae: lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x001a2d10: lea eax, [edi + 9]; pop edi; ret; 
0x000beeaa: lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000beeba: lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000bed9f: lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0019453d: lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190a67: lea eax, [edi + eax + 0xa]; pop edi; call 0x182d19; add ebx, 0x43d9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea67: lea eax, [edi + eax + 0xa]; pop edi; call 0x182d19; add ebx, 0x45b1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001945cd: lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ebb7: lea eax, [edi + eax + 0xb]; pop edi; call 0x182d19; add ebx, 0x459cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019465d: lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946ed: lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192f37: lea eax, [edi + eax + 0xd]; pop edi; call 0x182d19; add ebx, 0x41b4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190e57: lea eax, [edi + eax + 0xd]; pop edi; call 0x182d19; add ebx, 0x439af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ee57: lea eax, [edi + eax + 0xd]; pop edi; call 0x182d19; add ebx, 0x4572f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019477d: lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019480d: lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001931f7: lea eax, [edi + eax + 0xf]; pop edi; call 0x182d19; add ebx, 0x4188f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019402d: lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191eb7: lea eax, [edi + eax + 1]; pop edi; call 0x182d19; add ebx, 0x42bcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fe97: lea eax, [edi + eax + 1]; pop edi; call 0x182d19; add ebx, 0x4496f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018de97: lea eax, [edi + eax + 1]; pop edi; call 0x182d19; add ebx, 0x466ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001940bd: lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019414d: lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190137: lea eax, [edi + eax + 3]; pop edi; call 0x182d19; add ebx, 0x446cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001941dd: lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019426d: lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192437: lea eax, [edi + eax + 5]; pop edi; call 0x182d19; add ebx, 0x4264f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903d7: lea eax, [edi + eax + 5]; pop edi; call 0x182d19; add ebx, 0x4442f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3d7: lea eax, [edi + eax + 5]; pop edi; call 0x182d19; add ebx, 0x461af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001942fd: lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019438d: lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019441d: lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192857: lea eax, [edi + eax + 8]; pop edi; call 0x182d19; add ebx, 0x4222f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e7c7: lea eax, [edi + eax + 8]; pop edi; call 0x182d19; add ebx, 0x45dbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001944ad: lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e917: lea eax, [edi + eax + 9]; pop edi; call 0x182d19; add ebx, 0x45c6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a30c3: lea eax, [edi - 0x10]; pop edi; ret; 
0x001a3180: lea eax, [edi - 0xa]; pop edi; ret; 
0x001a3170: lea eax, [edi - 0xb]; pop edi; ret; 
0x001a30e8: lea eax, [edi - 0xc]; pop edi; ret; 
0x001a3160: lea eax, [edi - 0xd]; pop edi; ret; 
0x001a3150: lea eax, [edi - 0xe]; pop edi; ret; 
0x001a3140: lea eax, [edi - 0xf]; pop edi; ret; 
0x001a31f0: lea eax, [edi - 1]; pop edi; ret; 
0x001a31e0: lea eax, [edi - 2]; pop edi; ret; 
0x001a31d0: lea eax, [edi - 3]; pop edi; ret; 
0x001a313b: lea eax, [edi - 4]; pop edi; ret; 
0x001a31c0: lea eax, [edi - 5]; pop edi; ret; 
0x001a31b0: lea eax, [edi - 6]; pop edi; ret; 
0x001a31a0: lea eax, [edi - 7]; pop edi; ret; 
0x001a3112: lea eax, [edi - 8]; pop edi; ret; 
0x001a3190: lea eax, [edi - 9]; pop edi; ret; 
0x001a2c90: lea eax, [edi]; pop edi; ret; 
0x000b516d: lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0008b2b3: lea eax, [edx + 0x1a74]; push eax; call 0x8d660; add esp, 0x1c; ret; 
0x000b341e: lea eax, [edx + 0xa]; pop edi; ret; 
0x000b355e: lea eax, [edx + 0xa]; ret; 
0x000b6187: lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b330e: lea eax, [edx + 0xb]; pop edi; ret; 
0x000b357e: lea eax, [edx + 0xb]; ret; 
0x000b512e: lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b3442: lea eax, [edx + 0xc]; pop edi; ret; 
0x000b35a2: lea eax, [edx + 0xc]; ret; 
0x000b3462: lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35c2: lea eax, [edx + 0xd]; ret; 
0x000b6135: lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3482: lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35e2: lea eax, [edx + 0xe]; ret; 
0x000b3348: lea eax, [edx + 0xf]; pop edi; ret; 
0x000b35f8: lea eax, [edx + 0xf]; ret; 
0x000a9813: lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000b3366: lea eax, [edx + 1]; pop edi; ret; 
0x000b34a6: lea eax, [edx + 1]; ret; 
0x000b337c: lea eax, [edx + 2]; pop edi; ret; 
0x000b34bc: lea eax, [edx + 2]; ret; 
0x000b6264: lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a9836: lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000b3294: lea eax, [edx + 3]; pop edi; ret; 
0x000b34c4: lea eax, [edx + 3]; ret; 
0x000a984a: lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000b50c1: lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000b339a: lea eax, [edx + 4]; pop edi; ret; 
0x000b34da: lea eax, [edx + 4]; ret; 
0x000a985a: lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000b33ac: lea eax, [edx + 5]; pop edi; ret; 
0x000b34ec: lea eax, [edx + 5]; ret; 
0x000a986e: lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000b33ca: lea eax, [edx + 6]; pop edi; ret; 
0x000b34fa: lea eax, [edx + 6]; ret; 
0x000b620d: lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a97fd: lea eax, [edx + 7]; pop ebx; pop esi; ret; 
0x000b32c8: lea eax, [edx + 7]; pop edi; ret; 
0x000b3508: lea eax, [edx + 7]; ret; 
0x000b50f3: lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000b33de: lea eax, [edx + 8]; pop edi; ret; 
0x000b351e: lea eax, [edx + 8]; ret; 
0x000b3400: lea eax, [edx + 9]; pop edi; ret; 
0x000b3540: lea eax, [edx + 9]; ret; 
0x000bf59a: lea eax, [edx + eax + 0x30]; ret; 
0x0013d000: lea eax, [edx + eax + 8]; pop ebx; ret; 
0x000edc47: lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000a9c96: lea eax, [edx - 0x17bb84]; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1785e4]; cmove eax, edx; ret; 
0x000a6f46: lea eax, [edx - 0x183814]; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1765a4]; cmove eax, edx; ret; 
0x000a6f06: lea eax, [edx - 0x185084]; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x000a8e66: lea eax, [edx - 0x189444]; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1769d4]; cmove eax, edx; ret; 
0x00143787: lea eax, [edx - 0x67bcc]; push eax; call 0x34af0; add esp, 0x10; add esp, 0xc; ret; 
0x000d1c22: lea eax, [edx - 0x92344]; and ch, 2; lea edx, [edx - 0x15fe54]; cmove eax, edx; ret; 
0x000a64f2: lea eax, [edx - 0x95e44]; and ch, 2; lea edx, [edx - 0x177374]; cmove eax, edx; ret; 
0x000a9c52: lea eax, [edx - 0x9ad24]; and ch, 2; lea edx, [edx - 0x1776d4]; cmove eax, edx; ret; 
0x000a6fc2: lea eax, [edx - 0x9d234]; and ch, 2; lea edx, [edx - 0x1777d4]; cmove eax, edx; ret; 
0x000a6f82: lea eax, [edx - 0x9d264]; and ch, 2; lea edx, [edx - 0x177754]; cmove eax, edx; ret; 
0x000a9cd2: lea eax, [edx - 0x9ec54]; and ch, 2; lea edx, [edx - 0x189834]; cmove eax, edx; ret; 
0x000a7cb2: lea eax, [edx - 0xa00c4]; and ch, 2; lea edx, [edx - 0x176944]; cmove eax, edx; ret; 
0x000a6d6f: lea eax, [edx - 0xa5414]; and ebx, 1; lea edx, [edx - 0xa11e4]; cmovne eax, edx; pop ebx; ret; 
0x0013886f: lea eax, [edx - 0xa5424]; and ebx, 1; lea edx, [edx - 0xa11f4]; cmovne eax, edx; pop ebx; ret; 
0x000a6dbf: lea eax, [edx - 0xa73f4]; and ebx, 1; lea edx, [edx - 0xa21d4]; cmovne eax, edx; pop ebx; ret; 
0x001388bf: lea eax, [edx - 0xa7404]; and ebx, 1; lea edx, [edx - 0xa21e4]; cmovne eax, edx; pop ebx; ret; 
0x000a653f: lea eax, [edx - 0xa93f4]; and ebx, 1; lea edx, [edx - 0xa31b4]; cmovne eax, edx; pop ebx; ret; 
0x000a6e3d: lea eax, [edx - 0xaadf4]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa774]; cmovne eax, edx; ret; 
0x001388fd: lea eax, [edx - 0xaae04]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa784]; cmovne eax, edx; ret; 
0x000426d5: lea eax, [edx - 1]; xor eax, edx; cmp edx, eax; setle al; ret; 
0x000b3354: lea eax, [edx]; pop edi; ret; 
0x000b3494: lea eax, [edx]; ret; 
0x0007977c: lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x000c0433: lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0013c7ed: lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x000d88cf: lea eax, [esp + 0x104]; mov dword ptr [esp + 0x34], eax; push eax; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0012da12: lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x0012cd2f: lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d1aa7: lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x00086318: lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000c0c2e: lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0008190f: lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000c22e9: lea eax, [esp + 0x44]; push eax; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x001549ee: lea eax, [esp + 0x48]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x000c4319: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c1c3b: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0002a14c: lea eax, [esp + 0x70]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x0002f0cf: lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x0015a384: lea eax, [esp + 0x9a4]; push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x00079d92: lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00086622: lea eax, [esp + 8]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000bf169: lea eax, es:[ecx + eax + 0x10]; ret; 
0x000beea9: lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000777ca: lea ebp, [eax - 0x76000005]; ret 0xc889; 
0x000d3673: lea ebp, [eax - 0x76000037]; ret 0x8589; 
0x000d36c8: lea ebp, [eax - 0x76000037]; test dword ptr [ecx + ecx*8 + 0x468dffff], ecx; dec dword ptr [edi]; dec edi; ret 0x48d; 
0x0009dde8: lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x00177cc1: lea ebp, [edi + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x001ad034: lea ebp, [edi + edi*8 - 1]; call dword ptr [ebx]; 
0x001a74a1: lea ebp, [edi + edi*8 - 1]; call ebx; 
0x001a7a00: lea ebp, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x764762a4]; fimul dword ptr [ecx - 0x9f63]; call ebx; 
0x001aaae6: lea ebp, [edi + edi*8 - 1]; dec dword ptr [ecx - 0xa343]; jmp dword ptr [esi - 0x7f]; 
0x001a63b5: lea ebp, [edi + edi*8 - 1]; dec dword ptr [ecx]; ret 0x458b; 
0x00067baf: lea ebp, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x0006928f: lea ebp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x75]; 
0x00067f6d: lea ebp, [edx + edi*8 - 1]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00066fe5: lea ebp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006a931: lea ebp, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x00168a06: lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x000e49f3: lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x000e4a20: lea ebp, [esp + 4]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0007882c: lea ebp, [esp - 0x10fe0008]; jmp edi; 
0x0017ff80: lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000e7137: lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00090e9d: lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000d1be0: lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000d1bc8: lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000d1bd0: lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000d700a: lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x000e492e: lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00094a77: lea ebx, [edi + 0xc]; add edx, ebp; jmp edx; 
0x0008f84a: lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0013fc8c: lea ebx, [edi + edi*8 - 1]; jmp dword ptr [ebp - 0x5f]; 
0x001248ed: lea ebx, [edx + 1]; jne 0x1248cb; mov eax, esi; pop ebx; pop esi; ret; 
0x00089abc: lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x0007e918: lea ebx, [edx + 4]; mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0009f263: lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x0017140e: lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x00110e30: lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008ae07: lea ecx, [eax + 0x30]; mov eax, dword ptr [eax + 0x30]; test eax, eax; jne 0x8ae28; ret; 
0x0011e895: lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000419d7: lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0005ad34: lea ecx, [eax + 0x9c]; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x0003cee7: lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x00099948: lea ecx, [eax - 2]; lock cmpxchg dword ptr [edx], ecx; jne 0x99942; xor eax, eax; pop ebx; ret; 
0x00091b6b: lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e811f: lea ecx, [ebp - 0x6c324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0009e3a7: lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x0012abe9: lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00063e86: lea ecx, [ebx - 0x20]; cmp cl, 0x5a; jbe 0x64824; mov edi, eax; jmp edx; 
0x00092fea: lea ecx, [ebx - 0x71504]; mov eax, 0xaf; mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00052265: lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00176184: lea ecx, [ecx - 0x954]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000b0b4d: lea ecx, [edx + 0x10]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b138d: lea ecx, [edx + 0x10]; jne 0xb10e1; pop ebx; ret; 
0x000b585e: lea ecx, [edx + 0x10]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b12a5: lea ecx, [edx + 0xa]; jne 0xb10e1; pop ebx; ret; 
0x000b5746: lea ecx, [edx + 0xa]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b12c3: lea ecx, [edx + 0xb]; jne 0xb10e1; pop ebx; ret; 
0x000b5774: lea ecx, [edx + 0xb]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b0b13: lea ecx, [edx + 0xc]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b12e3: lea ecx, [edx + 0xc]; jne 0xb10e1; pop ebx; ret; 
0x000b57a4: lea ecx, [edx + 0xc]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b0ed7: lea ecx, [edx + 0xd]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1307: lea ecx, [edx + 0xd]; jne 0xb10e1; pop ebx; ret; 
0x000b57d8: lea ecx, [edx + 0xd]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b0f07: lea ecx, [edx + 0xe]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1337: lea ecx, [edx + 0xe]; jne 0xb10e1; pop ebx; ret; 
0x000b0f37: lea ecx, [edx + 0xf]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1367: lea ecx, [edx + 0xf]; jne 0xb10e1; pop ebx; ret; 
0x000b5838: lea ecx, [edx + 0xf]; jne 0xb5531; pop ebx; ret; 
0x000b0d99: lea ecx, [edx + 1]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1179: lea ecx, [edx + 1]; jne 0xb10e1; pop ebx; ret; 
0x000b55c9: lea ecx, [edx + 1]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00085c9c: lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000b119b: lea ecx, [edx + 2]; jne 0xb10e1; pop ebx; ret; 
0x000b55ec: lea ecx, [edx + 2]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b0de1: lea ecx, [edx + 3]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b11c1: lea ecx, [edx + 3]; jne 0xb10e1; pop ebx; ret; 
0x000b5612: lea ecx, [edx + 3]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000bf345: lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x000b11d9: lea ecx, [edx + 4]; jne 0xb10e1; pop ebx; ret; 
0x000b563a: lea ecx, [edx + 4]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0007dca2: lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000b0dff: lea ecx, [edx + 5]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b11ff: lea ecx, [edx + 5]; jne 0xb10e1; pop ebx; ret; 
0x000b5660: lea ecx, [edx + 5]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b0e21: lea ecx, [edx + 6]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1221: lea ecx, [edx + 6]; jne 0xb10e1; pop ebx; ret; 
0x000b0e3f: lea ecx, [edx + 7]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b123f: lea ecx, [edx + 7]; jne 0xb10e1; pop ebx; ret; 
0x000b125d: lea ecx, [edx + 8]; jne 0xb10e1; pop ebx; ret; 
0x000b56ee: lea ecx, [edx + 8]; jne 0xb5531; pop ebx; ret; 
0x000b0e63: lea ecx, [edx + 9]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1283: lea ecx, [edx + 9]; jne 0xb10e1; pop ebx; ret; 
0x000b5714: lea ecx, [edx + 9]; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00067aa0: lea ecx, [edx + edi*8 - 1]; dec dword ptr [ebx - 0x58f63]; call dword ptr [edi - 0x18]; 
0x00175d51: lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00175311: lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00171a38: lea ecx, [esp + 0x10]; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0007abb2: lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00175d7e: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x00174fb6: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax]; 
0x000e4d27: lea ecx, [esp + 0x14]; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0012b5f9: lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00171979: lea ecx, [esp + 0x20]; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0016fd11: lea ecx, [esp + 0x28]; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00171966: lea ecx, [esp + 0x28]; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000c168b: lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x44]; push dword ptr [eax]; call edi; 
0x000dbd58: lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009df40: lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012b538: lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000e4ddb: lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0012bb66: lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012a8e6: lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012a676: lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0011efa8: lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000e4e3f: lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e4b7b: lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x001089d0: lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000e7110: lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000d490b: lea edi, [eax + 0xfffffc9]; xchg ebp, eax; ret 0xb60f; 
0x000d4c2f: lea edi, [eax - 0x76000037]; popfd; mov esp, 0xe9ffffc9; cmp esp, 0xa40fffff; ret 0xc102; 
0x000b6f6b: lea edi, [edi + 0x10]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b85de: lea edi, [edi + 0x10]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8654: lea edi, [edi + 0x13]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b7045: lea edi, [edi + 0x16]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b7075: lea edi, [edi + 0x17]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b877b: lea edi, [edi + 0x19]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b710d: lea edi, [edi + 0x1a]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b713b: lea edi, [edi + 0x1b]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b716b: lea edi, [edi + 0x1c]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b880e: lea edi, [edi + 0x1c]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b7195: lea edi, [edi + 0x1d]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8838: lea edi, [edi + 0x1d]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b71c5: lea edi, [edi + 0x1e]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8868: lea edi, [edi + 0x1e]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b71f5: lea edi, [edi + 0x1f]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8898: lea edi, [edi + 0x1f]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b7225: lea edi, [edi + 0x20]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b88c8: lea edi, [edi + 0x20]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b6e83: lea edi, [edi + 0xa]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b84c6: lea edi, [edi + 0xa]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b84f4: lea edi, [edi + 0xb]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b6ec1: lea edi, [edi + 0xc]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8524: lea edi, [edi + 0xc]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b6ee5: lea edi, [edi + 0xd]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8558: lea edi, [edi + 0xd]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8588: lea edi, [edi + 0xe]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b6f45: lea edi, [edi + 0xf]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b85b8: lea edi, [edi + 0xf]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b6d55: lea edi, [edi + 1]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b83bc: lea edi, [edi + 2]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b83df: lea edi, [edi + 3]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b83fa: lea edi, [edi + 4]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b6dda: lea edi, [edi + 5]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b841d: lea edi, [edi + 5]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b6dff: lea edi, [edi + 6]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8442: lea edi, [edi + 6]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b6e1d: lea edi, [edi + 7]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8460: lea edi, [edi + 7]; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b6e3b: lea edi, [edi + 8]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b6e5e: lea edi, [edi + 9]; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x001a6a1d: lea edi, [edi + edi*8 - 1]; call ebx; 
0x0005bb66: lea edi, [edi]; stc; jmp dword ptr [ebp - 0x75]; 
0x0012df6d: lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0018b8b2: lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0005ad31: lea edx, [eax + 0x1c]; lea ecx, [eax + 0x9c]; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x00024b23: lea edx, [eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b20; ret; 
0x00052262: lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003fb10: lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000a5ec2: lea edx, [eax + 1]; mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x000424a3: lea edx, [eax + 1]; mov eax, edx; ret; 
0x00146056: lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x000427f9: lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000c25b0: lea edx, [eax - 0x160114]; lea eax, [eax - 0x160e14]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000423c3: lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x00042759: lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x0002fe91: lea edx, [eax - 0x207284]; push edx; push dword ptr [eax + 0x10e4]; call 0x128960; add esp, 0x1c; ret; 
0x00042464: lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000426e4: lea edx, [eax - 1]; xor eax, edx; cmp edx, eax; setb al; ret; 
0x0012e03e: lea edx, [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x0010a8e1: lea edx, [ebp - 0x48]; cmp edx, 0x3d; ja 0x10ac25; mov eax, dword ptr [ebx + edx*4 - 0x6f248]; add eax, ebx; jmp eax; 
0x00169235: lea edx, [ebp - 0xc1f04]; push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x00078dc5: lea edx, [ebx + 0x28]; push edx; push 1; push ebx; call eax; 
0x00170c29: lea edx, [ebx + 0x38]; push edx; call eax; 
0x00170159: lea edx, [ebx + 0x4c]; push edx; call eax; 
0x0015d02a: lea edx, [ebx + 0xa22c]; push edx; call eax; 
0x0016d5bc: lea edx, [ebx + 0xac]; push edx; call eax; 
0x00182f23: lea edx, [ebx - 0x214]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0016ae37: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ae72: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0012f418: lea edx, [ecx + ecx]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00033168: lea edx, [ecx - 0x6c324]; mov eax, edx; pop ebx; ret; 
0x0016e19d: lea edx, [edi + 8]; push edx; call eax; 
0x0014374f: lea edx, [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x000d1c2b: lea edx, [edx - 0x15fe54]; cmove eax, edx; ret; 
0x000a6f50: lea edx, [edx - 0x1765a4]; cmove eax, edx; ret; 
0x000a6f10: lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x000a7cbb: lea edx, [edx - 0x176944]; cmove eax, edx; ret; 
0x000a8e70: lea edx, [edx - 0x1769d4]; cmove eax, edx; ret; 
0x000a7ae0: lea edx, [edx - 0x176f04]; cmove eax, edx; ret; 
0x000a64fb: lea edx, [edx - 0x177374]; cmove eax, edx; ret; 
0x000a9c1b: lea edx, [edx - 0x177664]; cmove eax, edx; ret; 
0x000a9c5b: lea edx, [edx - 0x1776d4]; cmove eax, edx; ret; 
0x000a6f8b: lea edx, [edx - 0x177754]; cmove eax, edx; ret; 
0x000a6fcb: lea edx, [edx - 0x1777d4]; cmove eax, edx; ret; 
0x000a9ca0: lea edx, [edx - 0x1785e4]; cmove eax, edx; ret; 
0x000a9d20: lea edx, [edx - 0x1894a4]; cmove eax, edx; ret; 
0x000a9cdb: lea edx, [edx - 0x189834]; cmove eax, edx; ret; 
0x0007a9c1: lea edx, [edx - 0x508]; mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x000a6e8a: lea edx, [edx - 0x92d54]; cmovne eax, edx; ret; 
0x000a6e0a: lea edx, [edx - 0x934f4]; cmovne eax, edx; ret; 
0x000a64ba: lea edx, [edx - 0x93a64]; cmovne eax, edx; ret; 
0x000a9e0a: lea edx, [edx - 0x94094]; cmovne eax, edx; ret; 
0x000a7b1a: lea edx, [edx - 0x94474]; cmovne eax, edx; ret; 
0x000a9bda: lea edx, [edx - 0x94794]; cmovne eax, edx; ret; 
0x000a6d78: lea edx, [edx - 0xa11e4]; cmovne eax, edx; pop ebx; ret; 
0x00138878: lea edx, [edx - 0xa11f4]; cmovne eax, edx; pop ebx; ret; 
0x000a6dc8: lea edx, [edx - 0xa21d4]; cmovne eax, edx; pop ebx; ret; 
0x001388c8: lea edx, [edx - 0xa21e4]; cmovne eax, edx; pop ebx; ret; 
0x000a6548: lea edx, [edx - 0xa31b4]; cmovne eax, edx; pop ebx; ret; 
0x00138828: lea edx, [edx - 0xa31c4]; cmovne eax, edx; pop ebx; ret; 
0x000a6e4a: lea edx, [edx - 0xaa774]; cmovne eax, edx; ret; 
0x0013890a: lea edx, [edx - 0xaa784]; cmovne eax, edx; ret; 
0x00090cc9: lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000825eb: lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000826ca: lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00172084: lea edx, [esi - 0xc1f04]; push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x00169068: lea edx, [esi - 0xcdb44]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x00169191: lea edx, [esi - 0xcdb44]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x001373ed: lea edx, [esi - 0xffb34]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00175b0c: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016edb8: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001751a6: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00175143: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax]; 
0x0017543e: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00175476: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax]; 
0x0013a8f6: lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013a9c7: lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000edbfb: lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00170dae: lea edx, [esp + 0x14c]; push edx; push edi; call dword ptr [eax + 4]; 
0x0009db93: lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00171ec8: lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0017577a: lea edx, [esp + 0x20]; push edx; push esi; call dword ptr [eax]; 
0x0011e81f: lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00087abc: lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0011243a: lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000dbee0: lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0017358c: lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x00184d17: lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0003c2a2: lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0011ee8a: lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00175af6: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00175acb: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00175183: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017512e: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax]; 
0x000e4b4d: lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x001754c6: lea edx, [esp + 0xc]; push edx; push ecx; call dword ptr [eax + 4]; 
0x0011dc2c: lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x001125ee: lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000f4cfb: lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00024b22: lea edx, fs:[eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b20; ret; 
0x000baee9: lea esi, [eax + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x0010e301: lea esi, [eax - 0x23]; cmp esi, 0x2f; ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ede0]; jmp eax; 
0x0010d3fc: lea esi, [eax - 0x23]; cmp esi, 0x2f; ja 0x10d411; mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x001ab4cb: lea esi, [edi + edi*8 - 1]; call dword ptr [eax]; 
0x001a6b94: lea esi, [edi + edi*8 - 1]; call dword ptr [ebx]; 
0x001ab19e: lea esi, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x934b]; call ebx; 
0x00136868: lea esi, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x9b43]; dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x001ab32b: lea esi, [edi + edi*8 - 1]; jmp dword ptr [eax]; 
0x00067365: lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x0006ae6c: lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 1]; 
0x00068104: lea esi, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x0006b9b7: lea esi, [edx + edi*8 - 1]; call dword ptr [edx + 0x52]; 
0x00068dd8: lea esi, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x00067388: lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0008b1ed: lea esi, [esi]; add dword ptr [ebx + 0x1a78], 1; add esp, 4; pop ebx; pop esi; ret; 
0x001a4a79: lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d6ebc: lea esi, [esi]; add eax, 1; ret; 
0x000d6ecc: lea esi, [esi]; add eax, 3; ret; 
0x001a3f1d: lea esi, [esi]; add edx, 2; jl 0x1a3fd0; lea eax, [ecx + 2]; ret; 
0x001a3f2d: lea esi, [esi]; add edx, 3; jl 0x1a3fd0; lea eax, [ecx + 3]; ret; 
0x001a3f3d: lea esi, [esi]; add edx, 5; jl 0x1a3fd0; lea eax, [ecx + 5]; ret; 
0x001a3f4d: lea esi, [esi]; add edx, 6; jl 0x1a3fd0; lea eax, [ecx + 6]; ret; 
0x00152514: lea esi, [esi]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00139015: lea esi, [esi]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00025fa5: lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x001072ec: lea esi, [esi]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000a4425: lea esi, [esi]; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005aee5: lea esi, [esi]; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0013957a: lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00109655: lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000961da: lea esi, [esi]; and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x001a331d: lea esi, [esi]; and eax, 0x1f; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a334d: lea esi, [esi]; and eax, 0x1ff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a332d: lea esi, [esi]; and eax, 0x3f; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a333d: lea esi, [esi]; and eax, 0x7f; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0013d104: lea esi, [esi]; and eax, 0xffffff; ret; 
0x001a32fd: lea esi, [esi]; and eax, 3; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a330d: lea esi, [esi]; and eax, 7; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x000bf5a9: lea esi, [esi]; bsf eax, eax; add eax, edx; ret; 
0x000bee4a: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bf5c9: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bf129: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bf139: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00042884: lea esi, [esi]; bsr eax, edx; pop ebx; xor eax, 0x1f; ret; 
0x000bf25c: lea esi, [esi]; bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0018fa4a: lea esi, [esi]; call 0x182d19; add ebx, 0x44f7b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00024f3c: lea esi, [esi]; call 0x182d21; add eax, 0x211ecf; lea eax, [eax - 0x680ac]; ret; 
0x000b825a: lea esi, [esi]; call 0x182d2d; add ecx, 0x10dbbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00096195: lea esi, [esi]; cmp edx, 1; je 0x961a8; mov eax, 0x16; ret; 
0x000e718c: lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0019f2bc: lea esi, [esi]; jb 0x19f2d0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001a3d2c: lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a3d3c: lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a3d4c: lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a3d5c: lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a3d6c: lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x000f8735: lea esi, [esi]; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x001a3ccc: lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a3cdc: lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a3cec: lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a3cfc: lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a3d0c: lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a524a: lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a3d1c: lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a2d1d: lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a2d2d: lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a2d3d: lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a2d4d: lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a2d5d: lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a2c9c: lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a2cad: lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a2cbd: lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a2ccd: lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a2cdd: lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a2ced: lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a2cfd: lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a2d0d: lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001a317d: lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a316d: lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a315d: lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a314d: lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a31ed: lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001a31dd: lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001a31cd: lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001a54dd: lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001a31bd: lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001a31ad: lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001a319d: lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001a54ca: lea esi, [esi]; lea eax, [edi - 8]; pop edi; ret; 
0x001a318d: lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a2c8c: lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001a438c: lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a439c: lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a43ac: lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a43bc: lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a431c: lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x001a432c: lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a433c: lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a434c: lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a435c: lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a436c: lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a437c: lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x00110e2a: lea esi, [esi]; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009df3d: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012b535: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x001089cd: lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00033164: lea esi, [esi]; lea edx, [ecx - 0x6c324]; mov eax, edx; pop ebx; ret; 
0x000d6ec5: lea esi, [esi]; lea esi, [esi]; add eax, 3; ret; 
0x001a3d25: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a3d35: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a3d45: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a3d55: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a3d65: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a3cc5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a3cd5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a3ce5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a3cf5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a3d05: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a5243: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a3d15: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a4385: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a4395: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a43a5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a43b5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a4325: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a4335: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a4345: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a4355: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a4365: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a4375: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000a44b2: lea esi, [esi]; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x001685a2: lea esi, [esi]; lea esi, [esi]; mov eax, 1; ret; 
0x001a5216: lea esi, [esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x0008d082: lea esi, [esi]; lea esi, [esi]; ret; 
0x0008b162: lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x00125a0c: lea esi, [esi]; lea esi, [esp + 8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x001a2954: lea esi, [esi]; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a5284: lea esi, [esi]; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a4314: lea esi, [esi]; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x0008b124: lea esi, [esi]; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000d6ee4: lea esi, [esi]; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000910b4: lea esi, [esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b0f44: lea esi, [esi]; lea esi, cs:[esi]; pop ebx; ret; 
0x001687a4: lea esi, [esi]; lea esi, cs:[esi]; ret; 
0x000bebe4: lea esi, [esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000b334d: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000aef8c: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000baefa: lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b0f5a: lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000b75dc: lea esi, [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00098f52: lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x0016a149: lea esi, [esi]; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016a134: lea esi, [esi]; mov dword ptr [eax], 0xc; pop ebx; ret; 
0x0016a159: lea esi, [esi]; mov dword ptr [eax], 8; pop ebx; ret; 
0x0017e419: lea esi, [esi]; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x0009ae5a: lea esi, [esi]; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x000b0f9c: lea esi, [esi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000b0f89: lea esi, [esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0009e639: lea esi, [esi]; mov dword ptr [edx + 0x390], eax; ret; 
0x00098769: lea esi, [esi]; mov eax, 0x10; add esp, 0xc; ret; 
0x0008eca9: lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x0008eed2: lea esi, [esi]; mov eax, 0x16; ret; 
0x000f7ec4: lea esi, [esi]; mov eax, 0x40; ret; 
0x000dc049: lea esi, [esi]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0012bb95: lea esi, [esi]; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012a915: lea esi, [esi]; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000930a1: lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0008fa64: lea esi, [esi]; mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008a16c: lea esi, [esi]; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0003cef1: lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0009a271: lea esi, [esi]; mov eax, 1; add esp, 0xc; ret; 
0x001981ac: lea esi, [esi]; mov eax, 1; ja 0x1981b9; neg eax; ret; 
0x0019edec: lea esi, [esi]; mov eax, 1; ja 0x19edf9; neg eax; ret; 
0x000d6ccd: lea esi, [esi]; mov eax, 1; jg 0xd6cd9; neg eax; ret; 
0x000a4862: lea esi, [esi]; mov eax, 1; ret; 
0x0004209c: lea esi, [esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x001829fd: lea esi, [esi]; mov eax, 2; add esp, 0xc; ret; 
0x000929e1: lea esi, [esi]; mov eax, 3; ret; 
0x0008cafc: lea esi, [esi]; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x00120f05: lea esi, [esi]; mov eax, dword ptr [eax + 0x35c]; pop ebx; ret; 
0x00120ef9: lea esi, [esi]; mov eax, dword ptr [eax + 0x3c]; pop ebx; ret; 
0x001086b2: lea esi, [esi]; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10859a; call eax; 
0x0010865a: lea esi, [esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10854b; call eax; 
0x0010869c: lea esi, [esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10859a; call eax; 
0x00172a0d: lea esi, [esi]; mov eax, dword ptr [ebx + 0x174]; add esp, 4; pop ebx; pop esi; ret; 
0x00120ee4: lea esi, [esi]; mov eax, dword ptr [ebx + 0xa4]; mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x00182df4: lea esi, [esi]; mov eax, dword ptr [ecx + 0xa4]; mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x001a5b7a: lea esi, [esi]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000c09ed: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c09fd: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c0a0d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c0a1d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c0a2d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c0a3d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c0a4d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c0a5d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c0a6d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c0a7d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c0a8d: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c09d9: lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00084ff9: lea esi, [esi]; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00084ec9: lea esi, [esi]; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x000e61bd: lea esi, [esi]; mov eax, dword ptr [edx + 0xa4]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00174f3d: lea esi, [esi]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x000fa004: lea esi, [esi]; mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a460c: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x001a492a: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x001763fc: lea esi, [esi]; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013cb4c: lea esi, [esi]; mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x000342ec: lea esi, [esi]; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0008ebb2: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00176319: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008b17c: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001828aa: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001828cc: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00182949: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0018293d: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001828d9: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0008b189: lea esi, [esi]; mov eax, dword ptr [esp + 4]; ret; 
0x00088dad: lea esi, [esi]; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x88dc0; ret; 
0x0003446d: lea esi, [esi]; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x001a521d: lea esi, [esi]; mov eax, ecx; ret; 
0x000b787c: lea esi, [esi]; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x001a36bc: lea esi, [esi]; mov eax, edi; pop edi; ret; 
0x00024d69: lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b1be9: lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x0012a6a5: lea esi, [esi]; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012a9f5: lea esi, [esi]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0009e165: lea esi, [esi]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 8]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000647cc: lea esi, [esi]; mov edi, ecx; jmp edx; 
0x0014d4e4: lea esi, [esi]; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x00084f01: lea esi, [esi]; mov edx, 1; mov eax, edx; ret; 
0x000a46bc: lea esi, [esi]; mov edx, dword ptr [edi + 0x90]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0016a0cc: lea esi, [esi]; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00096424: lea esi, [esi]; mov edx, dword ptr [esp + 0x14]; call 0x962c0; xor eax, eax; add esp, 0xc; ret; 
0x001115cc: lea esi, [esi]; mov edx, dword ptr [esp + 0x98]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000e4962: lea esi, [esi]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000b0f7d: lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b0f6c: lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000af20d: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b76bd: lea esi, [esi]; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b102c: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b103c: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b104c: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000af11d: lea esi, [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0019811c: lea esi, [esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019812c: lea esi, [esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0019813c: lea esi, [esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0019814c: lea esi, [esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001980fc: lea esi, [esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x000d6f97: lea esi, [esi]; nop; add eax, 2; ret; 
0x0008e998: lea esi, [esi]; nop; mov eax, 0x16; ret; 
0x00085117: lea esi, [esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00082748: lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x0016add7: lea esi, [esi]; nop; mov eax, 1; ret; 
0x000d6ef7: lea esi, [esi]; nop; mov eax, 2; ret; 
0x000d6f07: lea esi, [esi]; nop; mov eax, 3; ret; 
0x000d6f17: lea esi, [esi]; nop; mov eax, 4; ret; 
0x000d6f27: lea esi, [esi]; nop; mov eax, 5; ret; 
0x0013b4c8: lea esi, [esi]; nop; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d6f37: lea esi, [esi]; nop; mov eax, 6; ret; 
0x000d6f47: lea esi, [esi]; nop; mov eax, 7; ret; 
0x0013d3e7: lea esi, [esi]; nop; movzx eax, dl; ret; 
0x0008b137: lea esi, [esi]; nop; ret; 
0x0008b117: lea esi, [esi]; nop; xor eax, eax; ret; 
0x0008e989: lea esi, [esi]; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x000961a4: lea esi, [esi]; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0008ea74: lea esi, [esi]; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x00097f84: lea esi, [esi]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0013c835: lea esi, [esi]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0008d5dc: lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x000beb6c: lea esi, [esi]; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x000be81c: lea esi, [esi]; pop ebx; pop esi; ret; 
0x00030ed4: lea esi, [esi]; pop ebx; ret; 
0x000f86dc: lea esi, [esi]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0019f2aa: lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x000b75cc: lea esi, [esi]; pop edi; pop esi; pop ebx; ret; 
0x000d6cac: lea esi, [esi]; pop edi; pop esi; ret; 
0x000bb279: lea esi, [esi]; pop esi; ret; 
0x001a540a: lea esi, [esi]; pop esi; xor eax, eax; pop edi; ret; 
0x0013b3fd: lea esi, [esi]; push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000398e4: lea esi, [esi]; ret; 
0x0008a2a2: lea esi, [esi]; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x001a385c: lea esi, [esi]; sub edx, 2; jb 0x1a3910; lea eax, [edi + 1]; pop edi; ret; 
0x0008ae6d: lea esi, [esi]; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00085ce4: lea esi, [esi]; sub esp, 0x18; push eax; call 0x896d0; add esp, 0x1c; ret; 
0x000e6bba: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x0017359c: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x0017348c: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00171ad9: lea esi, [esi]; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a47e2: lea esi, [esi]; sub esp, 0xc; push esi; call eax; 
0x000edbf4: lea esi, [esi]; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f4cf4: lea esi, [esi]; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016ed9c: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x000a4884: lea esi, [esi]; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x001a54bd: lea esi, [esi]; test ah, 0xf0; jne 0x1a54e0; lea eax, [edi - 8]; pop edi; ret; 
0x001a526c: lea esi, [esi]; test ah, 1; jne 0x1a5290; lea eax, [ecx + 0xc]; ret; 
0x0007bfb5: lea esi, [esi]; test eax, eax; je 0x7bfd0; sub eax, 1; mov dword ptr [edx + 0x1a44], eax; ret; 
0x00085bd5: lea esi, [esi]; test eax, eax; je 0x85bf0; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x0008b275: lea esi, [esi]; test eax, eax; je 0x8b290; sub eax, 1; mov dword ptr [edx + 0x1a78], eax; ret; 
0x0009ff8c: lea esi, [esi]; xor eax, eax; add esp, 0xc; ret; 
0x00052a5c: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x000421e2: lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000d6cbc: lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000be97c: lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00041944: lea esi, [esi]; xor eax, eax; ret; 
0x0010841d: lea esi, [esi]; xor eax, eax; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x0004250c: lea esi, [esi]; xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x0013246d: lea esi, [esi]; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0009e0fa: lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012b7a2: lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x001696b8: lea esi, [esp + 0x34]; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00125a10: lea esi, [esp + 8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012eb47: lea esi, [esp + 8]; mov ecx, dword ptr [esp + 0x30]; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000d6ebb: lea esi, cs:[esi]; add eax, 1; ret; 
0x00152513: lea esi, cs:[esi]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x001072eb: lea esi, cs:[esi]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000bf5a8: lea esi, cs:[esi]; bsf eax, eax; add eax, edx; ret; 
0x000bf5c8: lea esi, cs:[esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bf128: lea esi, cs:[esi]; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bf138: lea esi, cs:[esi]; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00042883: lea esi, cs:[esi]; bsr eax, edx; pop ebx; xor eax, 0x1f; ret; 
0x001a528b: lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a431b: lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x00033163: lea esi, cs:[esi]; lea edx, [ecx - 0x6c324]; mov eax, edx; pop ebx; ret; 
0x000d6ec4: lea esi, cs:[esi]; lea esi, [esi]; add eax, 3; ret; 
0x001a3d24: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a3d34: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a3d44: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a3d54: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a3d64: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a3cc4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a3cd4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a3ce4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a3cf4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a3d04: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a5242: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a3d14: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a4384: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a4394: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a43a4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a43b4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a4324: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a4334: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a4344: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a4354: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a4364: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a4374: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000a44b1: lea esi, cs:[esi]; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x001685a1: lea esi, cs:[esi]; lea esi, [esi]; mov eax, 1; ret; 
0x001a5215: lea esi, cs:[esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x0008d081: lea esi, cs:[esi]; lea esi, [esi]; ret; 
0x0008b161: lea esi, cs:[esi]; lea esi, [esi]; xor eax, eax; ret; 
0x00125a0b: lea esi, cs:[esi]; lea esi, [esp + 8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x001a2953: lea esi, cs:[esi]; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a5283: lea esi, cs:[esi]; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a4313: lea esi, cs:[esi]; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x0008b123: lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000d6ee3: lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000910b3: lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b0f43: lea esi, cs:[esi]; lea esi, cs:[esi]; pop ebx; ret; 
0x001687a3: lea esi, cs:[esi]; lea esi, cs:[esi]; ret; 
0x000bebe3: lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0016a148: lea esi, cs:[esi]; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016a158: lea esi, cs:[esi]; mov dword ptr [eax], 8; pop ebx; ret; 
0x000b0f88: lea esi, cs:[esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x00098768: lea esi, cs:[esi]; mov eax, 0x10; add esp, 0xc; ret; 
0x0008eca8: lea esi, cs:[esi]; mov eax, 0x16; pop ebx; ret; 
0x00097c03: lea esi, cs:[esi]; mov eax, 0x16; ret; 
0x000f7ec3: lea esi, cs:[esi]; mov eax, 0x40; ret; 
0x000dc048: lea esi, cs:[esi]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0008b0f8: lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x0019edeb: lea esi, cs:[esi]; mov eax, 1; ja 0x19edf9; neg eax; ret; 
0x000d6eeb: lea esi, cs:[esi]; mov eax, 1; ret; 
0x0004209b: lea esi, cs:[esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x0008cafb: lea esi, cs:[esi]; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0010869b: lea esi, cs:[esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10859a; call eax; 
0x00120ee3: lea esi, cs:[esi]; mov eax, dword ptr [ebx + 0xa4]; mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x000c09d8: lea esi, cs:[esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00084ff8: lea esi, cs:[esi]; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00084ec8: lea esi, cs:[esi]; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x001763fb: lea esi, cs:[esi]; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0008b17b: lea esi, cs:[esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x00182948: lea esi, cs:[esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x001828d8: lea esi, cs:[esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0008b188: lea esi, cs:[esi]; mov eax, dword ptr [esp + 4]; ret; 
0x00024d68: lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b1be8: lea esi, cs:[esi]; mov eax, edx; pop ebx; ret; 
0x0014d4e3: lea esi, cs:[esi]; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x0016a0cb: lea esi, cs:[esi]; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x001115cb: lea esi, cs:[esi]; mov edx, dword ptr [esp + 0x98]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000b102b: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b103b: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b104b: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0019811b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019812b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0019813b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0019814b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001980fb: lea esi, cs:[esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x000d6f96: lea esi, cs:[esi]; nop; add eax, 2; ret; 
0x0008e997: lea esi, cs:[esi]; nop; mov eax, 0x16; ret; 
0x00085116: lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00082747: lea esi, cs:[esi]; nop; mov eax, 0xffffffff; ret; 
0x0016add6: lea esi, cs:[esi]; nop; mov eax, 1; ret; 
0x000d6ef6: lea esi, cs:[esi]; nop; mov eax, 2; ret; 
0x000d6f06: lea esi, cs:[esi]; nop; mov eax, 3; ret; 
0x000d6f16: lea esi, cs:[esi]; nop; mov eax, 4; ret; 
0x000d6f26: lea esi, cs:[esi]; nop; mov eax, 5; ret; 
0x0013b4c7: lea esi, cs:[esi]; nop; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d6f36: lea esi, cs:[esi]; nop; mov eax, 6; ret; 
0x000d6f46: lea esi, cs:[esi]; nop; mov eax, 7; ret; 
0x0013d3e6: lea esi, cs:[esi]; nop; movzx eax, dl; ret; 
0x0008b136: lea esi, cs:[esi]; nop; ret; 
0x0008b116: lea esi, cs:[esi]; nop; xor eax, eax; ret; 
0x0008e988: lea esi, cs:[esi]; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x000961a3: lea esi, cs:[esi]; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0008ea73: lea esi, cs:[esi]; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000b0f4b: lea esi, cs:[esi]; pop ebx; ret; 
0x000bb278: lea esi, cs:[esi]; pop esi; ret; 
0x0016869b: lea esi, cs:[esi]; ret; 
0x0017348b: lea esi, cs:[esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00171ad8: lea esi, cs:[esi]; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000edbf3: lea esi, cs:[esi]; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f4cf3: lea esi, cs:[esi]; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016ed9b: lea esi, cs:[esi]; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0009ff8b: lea esi, cs:[esi]; xor eax, eax; add esp, 0xc; ret; 
0x000a3e78: lea esi, cs:[esi]; xor eax, eax; pop ebx; ret; 
0x000d6cbb: lea esi, cs:[esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000be97b: lea esi, cs:[esi]; xor eax, eax; pop edi; ret; 
0x00041943: lea esi, cs:[esi]; xor eax, eax; ret; 
0x0004250b: lea esi, cs:[esi]; xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x0009e0f9: lea esi, fs:[esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012b7a1: lea esi, fs:[esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00091b6c: lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x000558e6: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00025979: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00137360: lea esp, [ebp - 8]; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x00127c7b: lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00137357: lea esp, [ebp - 8]; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x00126141: lea esp, [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x001ae361: lea esp, [edi + edi*8 - 1]; call ebx; 
0x00068c8c: lea esp, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x0006884b: lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x00127be1: lea esp, cs:[ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000dc0c0: leave; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x000ec911: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000bf403: leave; add eax, ecx; ret; 
0x0003c8f5: leave; add edi, esi; ret 0; 
0x00041ff8: leave; bsr ecx, ecx; shl eax, cl; ret; 
0x00034a95: leave; call 0x34570; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0011bdb6: leave; call dword ptr gs:[0x10]; 
0x0011bdb6: leave; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11bdd0; pop ebx; ret; 
0x0016c523: leave; cld; jmp dword ptr [esi - 0x70]; 
0x001519bc: leave; cmp eax, 2; jne 0x1519c8; mov eax, ecx; ret; 
0x0019f34c: leave; cmp esi, edi; inc dword ptr [ecx + 0x35f00c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001154d3: leave; fdivr st(0), st(0); jmp dword ptr [ebp - 0x77]; 
0x000b82d9: leave; fist dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0003bb58: leave; fstp st(1); ret; 
0x000952da: leave; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00108370: leave; je 0x10838c; cmp byte ptr [esp + 0x17], 0; jne 0x108420; call ecx; 
0x00123f73: leave; je 0x123f79; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x00132e39: leave; je 0x132e40; xor eax, eax; pop ebx; ret; 
0x001371ee: leave; je 0x137200; ret; 
0x0004292f: leave; je 0x42938; pop ebx; ret; 
0x0008416e: leave; je 0x84174; mov byte ptr [edx], 0; pop ebx; ret; 
0x000bf3fe: leave; je 0xbf410; bsf ecx, ecx; add eax, ecx; ret; 
0x00187fc3: leave; jge 0x187fb9; call dword ptr [edi - 1]; 
0x0018c249: leave; jle 0x18c250; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0010fc51: leave; jne 0x10fc33; xor eax, eax; pop ebx; ret; 
0x00130e7e: leave; jne 0x130e90; mov eax, edx; pop ebx; pop esi; ret; 
0x00130ee9: leave; jne 0x130ef8; mov eax, edx; pop ebx; pop esi; ret; 
0x001310d4: leave; jne 0x1310e0; mov eax, edx; pop ebx; pop esi; ret; 
0x001316e9: leave; jne 0x1316f8; mov eax, edx; pop ebx; pop esi; ret; 
0x00131749: leave; jne 0x131758; mov eax, edx; pop ebx; pop esi; ret; 
0x00131924: leave; jne 0x131930; mov eax, edx; pop ebx; pop esi; ret; 
0x0016a0e4: leave; jne 0x16a108; mov dword ptr [eax], 0; pop ebx; ret; 
0x001818ab: leave; jne 0x1818b0; ret; 
0x0009e836: leave; jne 0x9e840; add esp, 8; pop ebx; ret; 
0x000c065c: leave; jne 0xc0661; xor eax, eax; ret; 
0x000d6f8f: leave; jne 0xd6f70; add eax, 1; ret; 
0x000d6f69: leave; jne 0xd6f8a; ret; 
0x000eda11: leave; jne 0xed9f3; xor eax, eax; pop ebx; ret; 
0x000f04c1: leave; jne 0xf04a3; xor eax, eax; pop ebx; ret; 
0x000f1291: leave; jne 0xf1273; xor eax, eax; pop ebx; ret; 
0x000f3d31: leave; jne 0xf3d13; xor eax, eax; pop ebx; ret; 
0x000f4b11: leave; jne 0xf4af3; xor eax, eax; pop ebx; ret; 
0x0011e679: leave; js 0x11e684; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000f8225: leave; js 0xf8230; ret; 
0x000e4cb9: leave; lcall 0, 0x8e870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0009646f: leave; lcall 0, 0xb8870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00097085: leave; lcall 0, 0xca870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x00096e02: leave; lcall 1, 0x3d870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00176838: leave; ljmp 0x5e5b:0x2cc483ff; pop edi; pop ebp; ret; 
0x0009863a: leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000bd954: leave; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000e4926: leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000420dc: leave; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x0014baf7: leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0003fb14: leave; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00078829: leave; mov edi, dword ptr [ebp + ecx*4 - 0x71b54]; add edi, ebp; jmp edi; 
0x0008eb6c: leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0010ac53: leave; pop eax; stc; call dword ptr [eax - 0x18]; 
0x000429f3: leave; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x00042511: leave; pop ebx; mov eax, ecx; ret; 
0x00122b20: leave; pop esp; stc; call dword ptr [eax + 0x55]; 
0x00106dd3: leave; ret; 
0x00041ffb: leave; shl eax, cl; ret; 
0x001747f6: leave; stc; call dword ptr [edx + 0x6a]; 
0x000bebbb: leave; sub edx, ecx; jbe 0xbebf0; add eax, ecx; ret; 
0x000f7593: leave; xor eax, eax; ret; 
0x000427be: leave; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x000420e4: leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x000934ca: leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b0b18: les eax, ptr [0x5b5f0000]; ret; 
0x0003b712: les eax, ptr [eax + 0x5b]; pop esi; pop edi; fsubp st(1); ret; 
0x0003b6a8: les eax, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00172b08: les eax, ptr [eax + 0x90]; pop ebx; pop esi; ret; 
0x00172b98: les eax, ptr [eax + 0x94]; pop ebx; pop esi; ret; 
0x00168801: les eax, ptr [eax + edi*4]; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0005aa61: les eax, ptr [eax + edi*4]; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a44a1: les eax, ptr [eax + edi*4]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0012b635: les eax, ptr [eax - 0x77]; rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x0013a70c: les eax, ptr [eax]; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x0012a8eb: les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a2c28: les eax, ptr [eax]; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0012954b: les eax, ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012a96d: les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000bf4bd: les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001a3a86: les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bf042: les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00146b9b: les eax, ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00121e2f: les eax, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00081403: les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0014558b: les eax, ptr [ebx + ebx*2]; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00039b3e: les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00025f62: les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00024fd5: les eax, ptr [ebx + ebx*2]; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0019c0aa: les eax, ptr [ebx + ebx*2]; ret; 
0x0016b0bf: les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0011d0b5: les eax, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; ret; 
0x0016a7f4: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0013c90d: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0008ca07: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00135b8c: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00150139: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x0005a103: les eax, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00111744: les eax, ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a5271: les eax, ptr [ecx]; jne 0x1a5290; lea eax, [ecx + 0xc]; ret; 
0x000d0766: les eax, ptr [ecx]; ret 0x148d; 
0x000acb90: les eax, ptr [ecx]; ret; 
0x00132187: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0016ba5e: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00092464: les eax, ptr [edi + esi*8]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0003bb53: les eax, ptr [edx]; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003b4c1: les eax, ptr [edx]; je 0x3b4c7; fchs; ret; 
0x0003b841: les eax, ptr [edx]; je 0x3b847; fchs; ret; 
0x001a310a: les eax, ptr [edx]; jne 0x1a31a0; lea eax, [edi - 8]; pop edi; ret; 
0x001a3c8a: les eax, ptr [edx]; jne 0x1a3d20; lea eax, [ecx + 8]; ret; 
0x001a3ec9: les eax, ptr [edx]; jne 0x1a3f70; add edx, 8; jl 0x1a3fd0; lea eax, [ecx + 8]; ret; 
0x001a42d1: les eax, ptr [edx]; jne 0x1a4380; test ah, 4; jne 0x1a4390; lea eax, [edx + 0xb]; ret; 
0x0019e941: les eax, ptr [esi + ebx*2]; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0008eb26: les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x0010adba: les ebp, ptr [eax + 0x5b]; ret; 
0x000335e2: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00054a5a: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x0008c442: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0018ba89: les ebp, ptr [eax]; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x0003c9b3: les ebp, ptr [eax]; pop ebx; ret; 
0x000dc2bb: les ebp, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x001734c3: les ebp, ptr [ebp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00151444: les ebp, ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x0002a5cd: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002eee3: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008bd32: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00023523: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00146b11: les ebp, ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x000d85ef: les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038705: les ebp, ptr [ecx + ecx*4]; call 0x5d62e568; ret; 
0x000e4c73: les ebp, ptr [ecx + ecx*4]; call 0x5d6daad6; ret; 
0x000ed235: les ebp, ptr [ecx + ecx*4]; call 0x5d6e3098; ret; 
0x00107505: les ebp, ptr [ecx + ecx*4]; call 0x5d6fd368; ret; 
0x0010b60e: les ebp, ptr [ecx + ecx*4]; call 0x5d701471; ret; 
0x0010b72c: les ebp, ptr [ecx + ecx*4]; call 0x5d70158f; ret; 
0x0003cfbc: les ebp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000d8f8b: les ebp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0008543a: les ebp, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0012a5aa: les ebp, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x00107f59: les ebp, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x0006edc3: les ebp, ptr [esp + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001491c5: les ebp, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c80e: les ebx, ptr [eax + 0x5b000000]; ret; 
0x0003c585: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000eac05: les ebx, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000ec0c3: les ebx, ptr [eax + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001686d3: les ebx, ptr [eax]; lea eax, [ebx + 0xa5ec]; pop ebx; ret; 
0x0004196f: les ebx, ptr [eax]; lea eax, [ebx + 6]; pop ebx; ret; 
0x0011f1e8: les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0004239b: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00042309: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004236d: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000422db: les ebx, ptr [eax]; mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00174ff4: les ebx, ptr [eax]; pop ebx; jmp eax; 
0x000a71b9: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003ba28: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000244f8: les ebx, ptr [eax]; pop ebx; ret; 
0x0008e21b: les ebx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0010b8ee: les ebx, ptr [ebx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00028640: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0003aaf7: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00029cbc: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00098faf: les ebx, ptr [ebx + ebx*2]; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0007e45d: les ebx, ptr [ebx + ebx*2]; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x00030538: les ebx, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00171bc3: les ebx, ptr [ebx + ebx*2]; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0003827f: les ebx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00033368: les ebx, ptr [ebx + ebx*2]; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0007c9ef: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0002518d: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008878a: les ebx, ptr [ebx + ebx*2]; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0007e498: les ebx, ptr [ebx + ebx*2]; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x0011241b: les ebx, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0018954f: les ebx, ptr [ecx + eax*8]; clc; pop ds; ret; 
0x00145ac5: les ebx, ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x000e5d7a: les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00034b9f: les ebx, ptr [ecx + ecx*4]; call 0x5d62aa02; ret; 
0x0003d8d1: les ebx, ptr [ecx + ecx*4]; call 0x5d633734; ret; 
0x0007e30b: les ebx, ptr [ecx + ecx*4]; call 0x5d67416e; ret; 
0x00096767: les ebx, ptr [ecx + ecx*4]; call 0x5d68c5ca; ret; 
0x000970f4: les ebx, ptr [ecx + ecx*4]; call 0x5d68cf57; ret; 
0x0009783f: les ebx, ptr [ecx + ecx*4]; call 0x5d68d6a2; ret; 
0x0009f50a: les ebx, ptr [ecx + ecx*4]; call 0x5d69536d; ret; 
0x0009f58d: les ebx, ptr [ecx + ecx*4]; call 0x5d6953f0; ret; 
0x000a22f0: les ebx, ptr [ecx + ecx*4]; call 0x5d698153; ret; 
0x0010b45a: les ebx, ptr [ecx + ecx*4]; call 0x5d7012bd; ret; 
0x0014f92f: les ebx, ptr [ecx + ecx*4]; call 0x5d745792; ret; 
0x00151973: les ebx, ptr [ecx + ecx*4]; call 0x5d7477d6; ret; 
0x001640cf: les ebx, ptr [ecx + ecx*4]; call 0x5d759f32; ret; 
0x00166ddf: les ebx, ptr [ecx + ecx*4]; call 0x5d75cc42; ret; 
0x001677df: les ebx, ptr [ecx + ecx*4]; call 0x5d75d642; ret; 
0x00167a6f: les ebx, ptr [ecx + ecx*4]; call 0x5d75d8d2; ret; 
0x00185348: les ebx, ptr [ecx + ecx*4]; call 0x5d77b1ab; ret; 
0x000380ab: les ebx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00038a19: les ebx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000251bc: les ebx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0012a569: les ebx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x0016c596: les ebx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x00158419: les ebx, ptr [edx + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0004700a: les ebx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001416dc: les ebx, ptr [esp + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d7cad: les ecx, ptr [eax + 0x5b]; ret; 
0x00100f1f: les ecx, ptr [eax + edi + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0010b56e: les ecx, ptr [eax + edi*4]; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x00132d0c: les ecx, ptr [eax + edx*2]; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00134b21: les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013502e: les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x00132e05: les ecx, ptr [eax + edx*2]; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0013289d: les ecx, ptr [eax + edx*2]; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00133822: les ecx, ptr [eax + edx*2]; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x001335f6: les ecx, ptr [eax + edx*2]; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00144618: les ecx, ptr [eax - 1]; jmp dword ptr [esi - 0x70]; 
0x00146054: les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x00095319: les ecx, ptr [eax]; mov eax, 0x16; pop ebx; ret; 
0x0005aee9: les ecx, ptr [eax]; mov eax, 0xffffffff; pop ebx; ret; 
0x00124e44: les ecx, ptr [eax]; mov eax, 1; pop ebx; ret; 
0x00060fc8: les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000528fe: les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0008727d: les ecx, ptr [eax]; movzx eax, al; pop ebx; neg eax; ret; 
0x0016a907: les ecx, ptr [eax]; movzx eax, al; pop ebx; ret; 
0x0010964f: les ecx, ptr [eax]; or eax, edx; pop ebx; ret; 
0x00059499: les ecx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000270a2: les ecx, ptr [eax]; pop ebx; ret; 
0x0003ba96: les ecx, ptr [eax]; ret; 
0x0003be24: les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0009accb: les ecx, ptr [ebp - 0x6678779]; call dword ptr [eax - 0x73]; 
0x000277b7: les ecx, ptr [ebx + 0x45c7c84d]; mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x00035edc: les ecx, ptr [ebx + eax*4]; ret 0x5201; 
0x000a5823: les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0003ad2a: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0003f226: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000aa977: les ecx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00152268: les ecx, ptr [ebx + ebx*2]; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x001454ca: les ecx, ptr [ebx + ebx*2]; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0007f699: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000a4f3d: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00027015: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016aa56: les ecx, ptr [ebx + ecx*4]; inc edi; or byte ptr [ebp - 1], dl; jbe 0x16aa6b; push edi; call dword ptr [eax + 8]; 
0x0005e8d0: les ecx, ptr [ebx + edx*2]; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00177fdb: les ecx, ptr [ebx - 0x8f7b]; inc dword ptr [ecx]; ret; 
0x00178027: les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x001a8b99: les ecx, ptr [ecx + 0x348dc445]; lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x00165e6b: les ecx, ptr [ecx + 0x458bcc45]; rol byte ptr [ebx - 0x7f72f714], 1; outsd dx, dword ptr [esi]; jb 0x165e73; call dword ptr [eax + 0x57]; 
0x0004a50a: les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000c24eb: les ecx, ptr [ecx + ebp]; ret; 
0x0014c3f9: les ecx, ptr [ecx + ecx*4]; call 0x44248d86; ret 0x148b; 
0x0007aaa1: les ecx, ptr [ecx + ecx*4]; call 0x5d670904; ret; 
0x000a42d7: les ecx, ptr [ecx + ecx*4]; call 0x5d69a13a; ret; 
0x000c34b1: les ecx, ptr [ecx + ecx*4]; call 0x5d6b9314; ret; 
0x0014c0a6: les ecx, ptr [ecx + ecx*4]; call 0x5d741f09; ret; 
0x001830d1: les ecx, ptr [ecx + ecx*4]; call 0x5d778f34; ret; 
0x0003fc60: les ecx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00027845: les ecx, ptr [ecx + ecx*4]; inc ebp; fmul qword ptr [ebp - 0x210ff37d]; call dword ptr [eax - 0x73]; 
0x0007e0ab: les ecx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000ad59c: les ecx, ptr [ecx + ecx*4]; ret 0x468d; 
0x0006721f: les ecx, ptr [ecx + ecx*4]; ret 0xc031; 
0x00033fd8: les ecx, ptr [ecx + ecx*4]; ret; 
0x00026ff1: les ecx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x001a8b6e: les ecx, ptr [ecx - 0x834b]; jmp dword ptr [esi - 0x7f]; 
0x000e8419: les ecx, ptr [ecx*4 + 0x5e5b0245]; pop edi; pop ebp; ret; 
0x000e8302: les ecx, ptr [ecx*4 + 0x5e5b0845]; pop edi; pop ebp; ret; 
0x0009f3c3: les ecx, ptr [ecx*4 - 0x1984e37a]; call dword ptr [eax + 0x57]; 
0x0009f3b1: les ecx, ptr [ecx*4 - 0x1987a37a]; call dword ptr [eax + 0x57]; 
0x0009f39f: les ecx, ptr [ecx*4 - 0x1987c37a]; call dword ptr [eax + 0x57]; 
0x0009f38d: les ecx, ptr [ecx*4 - 0x1987f37a]; call dword ptr [eax + 0x57]; 
0x0009f37b: les ecx, ptr [ecx*4 - 0x1988337a]; call dword ptr [eax + 0x57]; 
0x0009f369: les ecx, ptr [ecx*4 - 0x1988537a]; call dword ptr [eax + 0x57]; 
0x0009f357: les ecx, ptr [ecx*4 - 0x1988737a]; call dword ptr [eax + 0x57]; 
0x0009f333: les ecx, ptr [ecx*4 - 0x1988a37a]; call dword ptr [eax + 0x57]; 
0x0009f30f: les ecx, ptr [ecx*4 - 0x1988c37a]; call dword ptr [eax + 0x57]; 
0x0009f345: les ecx, ptr [ecx*4 - 0x1989237a]; call dword ptr [eax + 0x57]; 
0x0009f321: les ecx, ptr [ecx*4 - 0x1989537a]; call dword ptr [eax + 0x57]; 
0x00033ee9: les ecx, ptr [ecx*4 - 0x6c1cf7d]; call dword ptr [eax - 1]; 
0x001a9ff9: les ecx, ptr [ecx]; ret 0xfa09; 
0x0009a267: les ecx, ptr [edi + ecx]; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00052791: les ecx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x00092178: les ecx, ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x001a5235: les ecx, ptr [edi]; jne 0x1a5250; test dh, 0xf; jne 0x1a52a0; lea eax, [ecx + 0xc]; ret; 
0x0016ffc7: les ecx, ptr [edx*2 - 0x7972afad]; sub dword ptr [ebp - 7], esi; call dword ptr [edi + 0x50]; 
0x0004ca04: les ecx, ptr [esi]; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x00040d60: les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005e818: les edi, ptr [eax + 0x5b]; ret; 
0x00027ddc: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0015bd2d: les edi, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000a4036: les edi, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x001448ca: les edi, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009a1b9: les edi, ptr [eax]; pop ebx; ret; 
0x0002b087: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002aee6: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000c4a78: les edi, ptr [ebx + ebx*2]; pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x000cf1da: les edi, ptr [ebx + ebx*2]; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x001aef5e: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00026da4: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017dacc: les edi, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0008ffc6: les edi, ptr [ecx + ecx*4 - 0x18]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013d508: les edi, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e72b2: les edi, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f4ed: les edi, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00059772: les edi, ptr [ecx + ecx*4]; call 0x5d64f5d5; ret; 
0x000cf065: les edi, ptr [ecx + ecx*4]; call 0x5d6c4ec8; ret; 
0x000e5161: les edi, ptr [ecx + ecx*4]; call 0x5d6dafc4; ret; 
0x0012d965: les edi, ptr [ecx + ecx*4]; call 0x5d7237c8; ret; 
0x0013ddc9: les edi, ptr [ecx + ecx*4]; call 0x5d733c2c; ret; 
0x00051574: les edi, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00092dfa: les edi, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000801d1: les edi, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00035010: les edi, ptr [ecx]; ret 0x830f; 
0x00084a07: les edi, ptr [ecx]; ret 0x850f; 
0x00149e67: les edi, ptr [edx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000984e3: les edx, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x00120fe3: les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x0008efb6: les edx, ptr [eax + eax + 0x5e5b0000]; ret; 
0x0003c6f9: les edx, ptr [eax + eax + 0x5f5b0000]; ret; 
0x0017be1a: les edx, ptr [eax - 0x76ffffff]; rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x0017b269: les edx, ptr [eax - 0xf770000]; pop ebx; pop esi; ret; 
0x0011b13b: les edx, ptr [eax]; adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00145679: les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00138f3a: les edx, ptr [eax]; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009f6a2: les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000400ba: les edx, ptr [eax]; add esp, 0xc; ret; 
0x0017f810: les edx, ptr [eax]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0016a985: les edx, ptr [eax]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00142473: les edx, ptr [eax]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00026043: les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0008e545: les edx, ptr [eax]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00124e41: les edx, ptr [eax]; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0002709f: les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x000963aa: les edx, ptr [eax]; call eax; 
0x0009ff80: les edx, ptr [eax]; cmp eax, -1; je 0x9ff90; add esp, 0xc; ret; 
0x0016e31d: les edx, ptr [eax]; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0017652c: les edx, ptr [eax]; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0010a90a: les edx, ptr [eax]; cmp ebp, 0x2d; ja 0x10a930; mov eax, dword ptr [ebx + ebp*4 - 0x6f150]; add eax, ebx; jmp eax; 
0x001627ac: les edx, ptr [eax]; cmp edx, 1; jg 0x1627d8; add esp, 0x18; pop ebx; ret; 
0x0017b879: les edx, ptr [eax]; cmp edx, 1; jg 0x17b8a0; add esp, 0x18; pop ebx; ret; 
0x0017b8f5: les edx, ptr [eax]; cmp edx, 1; jg 0x17b920; add esp, 0x18; pop ebx; ret; 
0x0017bbcd: les edx, ptr [eax]; cmp edx, 1; jg 0x17bbf8; add esp, 0x18; pop ebx; ret; 
0x000924cc: les edx, ptr [eax]; cmp edx, 1; jg 0x924f8; add esp, 0x18; pop ebx; ret; 
0x0010dc7e: les edx, ptr [eax]; cmp esi, 0x2f; ja 0x10d5f0; mov eax, dword ptr [ebx + esi*4 - 0x6eea0]; add eax, ebx; jmp eax; 
0x0013c7eb: les edx, ptr [eax]; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x00127cd8: les edx, ptr [eax]; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x001457b3: les edx, ptr [eax]; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x00152678: les edx, ptr [eax]; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000e47df: les edx, ptr [eax]; mov eax, 1; add esp, 0xc; ret; 
0x0012089d: les edx, ptr [eax]; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0007b4ce: les edx, ptr [eax]; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0012027d: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x1202c8; call eax; 
0x001203a1: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x120448; call eax; 
0x00132276: les edx, ptr [eax]; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00174ef5: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x174f08; add esp, 0x2c; ret; 
0x0017300b: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x17301e; add esp, 0x4c; ret; 
0x0017307b: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x17308e; add esp, 0x4c; ret; 
0x001730eb: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1730fe; add esp, 0x4c; ret; 
0x0017314e: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x173161; add esp, 0x4c; ret; 
0x001731ae: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1731c1; add esp, 0x4c; ret; 
0x0017321b: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x17322e; add esp, 0x4c; ret; 
0x0017329b: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1732ae; add esp, 0x4c; ret; 
0x0003c4d1: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006032c: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0017377c: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x0003e89f: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b2: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x00154665: les edx, ptr [eax]; mov eax, dword ptr [esp]; call eax; 
0x001547e7: les edx, ptr [eax]; mov eax, ebx; call eax; 
0x000c352a: les edx, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0018081d: les edx, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000993ad: les edx, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0013a8bb: les edx, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000e700a: les edx, ptr [eax]; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x001480d3: les edx, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000254a0: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x254b3; add esp, 0x1c; ret; 
0x00122253: les edx, ptr [eax]; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001387c8: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x00139968: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x0018b9de: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0004022d: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x000527dd: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x00090980: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x000966b0: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b10: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x0009703c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x0009748c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x00172f9b: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x172fae; add esp, 0x4c; ret; 
0x00128f7f: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0018568c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x0003fe72: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x0004007f: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x0004032f: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b2: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x000d7bf1: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000e2325: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47a5: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x00025344: les edx, ptr [eax]; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x000257a1: les edx, ptr [eax]; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x001453b6: les edx, ptr [eax]; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005ffb7: les edx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f60f: les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0011e79e: les edx, ptr [eax]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001424cd: les edx, ptr [eax]; pop esi; pop edi; pop ebp; ret; 
0x0015d5aa: les edx, ptr [eax]; push dword ptr [esp]; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001546da: les edx, ptr [eax]; push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00146f5b: les edx, ptr [eax]; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x001727d8: les edx, ptr [eax]; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x001721f8: les edx, ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016a2e9: les edx, ptr [eax]; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0013865d: les edx, ptr [eax]; test eax, eax; je 0x138670; add esp, 8; pop ebx; ret; 
0x0015cbe1: les edx, ptr [eax]; test eax, eax; je 0x15cbf0; sub esp, 0xc; push esi; call eax; 
0x0015cf41: les edx, ptr [eax]; test eax, eax; je 0x15cf50; sub esp, 0xc; push esi; call eax; 
0x00169d11: les edx, ptr [eax]; test eax, eax; je 0x169d20; sub esp, 0xc; push esi; call eax; 
0x0016aa64: les edx, ptr [eax]; test eax, eax; je 0x16ab6b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x000418e3: les edx, ptr [eax]; test eax, eax; je 0x418f0; add esp, 8; pop ebx; ret; 
0x00124885: les edx, ptr [eax]; test eax, eax; jne 0x124848; add esp, 0xc; ret; 
0x00173845: les edx, ptr [eax]; test eax, eax; jne 0x173830; add esp, 8; pop ebx; ret; 
0x0003c132: les edx, ptr [eax]; test eax, eax; jne 0x3c140; add esp, 8; pop ebx; ret; 
0x0003c3c1: les edx, ptr [eax]; test eax, eax; jne 0x3c3d0; add esp, 8; pop ebx; ret; 
0x000f7811: les edx, ptr [eax]; test eax, eax; jne 0xf7820; add esp, 8; pop ebx; ret; 
0x0012cf1e: les edx, ptr [eax]; test eax, eax; js 0x12cf30; add esp, 8; pop ebx; ret; 
0x001524ac: les edx, ptr [eax]; test eax, eax; sete al; add esp, 0xc; ret; 
0x000a47f1: les edx, ptr [eax]; test ebp, ebp; jne 0xa4745; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x00182e8c: les edx, ptr [eax]; test ebx, ebx; jne 0x182ea0; add esp, 8; pop ebx; ret; 
0x00039bac: les edx, ptr [eax]; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000fc8bc: les edx, ptr [eax]; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00092423: les edx, ptr [eax]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00112786: les edx, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0012fabd: les edx, ptr [ebx + ebx*2]; pop edi; ret; 
0x000ad6fc: les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002fc73: les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x001691a1: les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x0003c60c: les edx, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x00121c07: les edx, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; ret; 
0x000aaa5c: les edx, ptr [ecx + ecx*4]; call 0x5d6a08bf; ret; 
0x0012c92f: les edx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000591c9: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x0011f558: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000c21ae: les edx, ptr [ecx*4 + 0x5e5b9804]; ret; 
0x001650cf: les edx, ptr [edi + edi*8]; je 0x1650f8; and al, 0x89; ret; 
0x0018da51: les edx, ptr [edx - 1]; inc dword ptr [ecx + 0x46cfbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a20f1: les edx, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00143366: les edx, ptr [esi - 0x18]; ret; 
0x000e5b93: les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0009e498: les esi, ptr [eax + eax + 0x5e5b0000]; ret; 
0x0011f743: les esi, ptr [eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0017fa7d: les esi, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017840b: les esi, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0017f9b8: les esi, ptr [eax]; pop ebx; pop esi; pop edi; jmp eax; 
0x00090dc6: les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00111e8f: les esi, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x00171ca3: les esi, ptr [ebx + ebx*2 + 0x5f]; ret; 
0x00040047: les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x00110b3e: les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017d243: les esi, ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x00059dcb: les esi, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008426c: les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x001127f2: les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00084085: les esp, ptr [eax + ecx]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00122dd4: les esp, ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x0003d556: les esp, ptr [eax]; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008f1b9: les esp, ptr [eax]; add esp, 0xc; ret; 
0x0015ca3a: les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0015d2fa: les esp, ptr [eax]; cmp edx, 1; jg 0x15d328; add esp, 0x18; pop ebx; ret; 
0x001a3133: les esp, ptr [eax]; jne 0x1a31d0; lea eax, [edi - 4]; pop edi; ret; 
0x001a3cb3: les esp, ptr [eax]; jne 0x1a3d50; lea eax, [ecx + 0xc]; ret; 
0x001a3ef3: les esp, ptr [eax]; jne 0x1a3fa0; add edx, 0xc; jl 0x1a3fd0; lea eax, [ecx + 0xc]; ret; 
0x001a42fa: les esp, ptr [eax]; jne 0x1a43b0; test ah, 0x40; jne 0x1a43c0; lea eax, [edx + 0xf]; ret; 
0x00139de4: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x0008c675: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d902d: les esp, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00060f36: les esp, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00108aa5: les esp, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0007ad8f: les esp, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012275c: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x00145fb6: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x00025550: les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0010b09e: les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0008c294: les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000d95d3: les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0003d1ab: les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003c0fb: les esp, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0012c9da: les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00126d7f: les esp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001829de: ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x0013d3da: ljmp 0:0xf98110; or byte ptr [edi], 0x44; ret 0x2ec3; 
0x000398d8: ljmp 0x11b6:0xfd03118; test dl, dl; jne 0x398c0; ret; 
0x000f86cf: ljmp 0x1b8:0x5bed7901; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000d8d82: ljmp 0x1c24:0x74ff50ff; call 0xd7e40; add esp, 0x18; pop ebx; ret; 
0x000ad346: ljmp 0x1c70:0x89c67508; pop ebx; pop esi; ret; 
0x0005a2b2: ljmp 0x1cc4:0x830000b0; ret; 
0x0004cb72: ljmp 0x1cc4:0x83ffffd6; ret; 
0x00078771: ljmp 0x3877:0x29fa8020; movzx edx, dl; mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x000fbd57: ljmp 0x4277:0x35fa800a; mov eax, dword ptr [esp]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x0018c452: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0007b4a2: ljmp 0x450f:0x107f602; ret 0xec83; 
0x001a3891: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x000f79bb: ljmp 0x57bc:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x00089cec: ljmp 0x593:0xfa81ca29; add byte ptr [eax], al; ja 0x89da0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x000b7112: ljmp 0x5b5e:0x5f000005; ret; 
0x00132eb4: ljmp 0x5bf0:0x8904c483; pop esi; ret; 
0x000a9224: ljmp 0x5d5f:0x5e5b1789; ret; 
0x00173905: ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0017a910: ljmp 0x5e5b:0x14c483ff; ret; 
0x00176839: ljmp 0x5e5b:0x2cc483ff; pop edi; pop ebp; ret; 
0x0018c88a: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001a38a1: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x0015eb9c: ljmp 0x6510:0xc483fff2; mov dword ptr [esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00093a92: ljmp 0x6c81:0x8dfffa02; jge 0x93a94; call dword ptr [eax - 0x73]; 
0x000680fa: ljmp 0x8300:0x768dffff; in al, dx; or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x000dbd1c: ljmp 0x838d:0x50000002; inc edx; push esi; stc; call dword ptr [eax - 0x18]; 
0x001a38b1: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x00174234: ljmp 0x868d:0xcc483ff; call 0x6b173c08; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00174b7c: ljmp 0x89c1:0x89fa89ff; ret; 
0x000bf184: ljmp 0x8d06:0x7cc20110; inc esp; add dword ptr [eax], esi; ret; 
0x000f7aa2: ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x58; stc; call dword ptr [eax + 0x53]; 
0x000f7aff: ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x58; stc; call dword ptr [eax - 1]; 
0x000bf174: ljmp 0x8d16:0x7cc20120; inc esp; add dword ptr [eax], esp; ret; 
0x000bf164: ljmp 0x8d26:0x7cc20130; inc esp; add dword ptr [eax], edx; ret; 
0x00182b8a: ljmp 0x9403:0xc0b60fff; sub byte ptr [eax + edi - 7], 0xff; jmp edx; 
0x001a38c1: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x001a38d1: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x00182a84: ljmp 0xc031:0x8c483ff; pop ebx; ret; 
0x000beea1: ljmp 0xc229:0xc0bc0f10; jbe 0xbeed0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000beeb1: ljmp 0xc229:0xc0bc0f20; jbe 0xbeed0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000beec1: ljmp 0xc229:0xc0bc0f30; jbe 0xbeed0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x001a38e1: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x00078545: ljmp 0xc483:0x4518901; adc al, 0x5b; pop esi; ret; 
0x0003a910: ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x001a38f1: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x0013d0ef: ljmp 0xe181:0xc0b70f18; add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001a3901: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x000c3574: ljmp 0xe9ff:0x4c808dff; push esi; inc ecx; jnp 0xc3584; cmove eax, edx; ret; 
0x0017d662: ljmp 0xec83:0x10c483ff; or byte ptr [ebp - 0x689497d], cl; call dword ptr [ebp + 0x50]; 
0x000e4958: ljmp 0xf00:0x3b8; inc ebp; ret 0x8dc3; 
0x001a85c6: ljmp 0xf283:0x1e28312; add dword ptr [ecx], ecx; retf 0xb60f; ret 0x4589; 
0x0019f6ca: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x000c2564: ljmp 0xf6e2:0xbc808dff; push esi; inc ecx; jnp 0xc2574; cmove eax, edx; ret; 
0x00196ccf: ljmp 0xf702:0x89068b04; ret 0xf; 
0x00193bcf: ljmp 0xf702:0x89078b04; ret 0xf; 
0x0003898a: ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x000b6c3f: ljmp 0xfdc1:0x81000cc0; lock adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001438bc: lldt word ptr [ebx - 0x77]; ret; 
0x000b6c46: lock adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c28: lock adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00127dce: lock adc byte ptr [eax], al; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00096320: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008d5a5: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008ca90: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0009be38: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000910e3: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x000963bd: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008dd8f: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00093e7a: lock add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00095dd1: lock add byte ptr [eax], al; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001854b7: lock add byte ptr [eax], al; add byte ptr [ecx + 1], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000958c6: lock add byte ptr [eax], al; add byte ptr [ecx + 7], bh; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009558d: lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008db56: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008ed89: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f580: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000934c5: lock add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009658e: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097786: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00094989: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096970: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fb6d: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fe44: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095b43: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f5b4: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fa69: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008f8da: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096946: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d619: lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001831ec: lock add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x000729e6: lock add dword ptr [ebx - 0x4ef43], eax; call dword ptr [eax]; 
0x001854b2: lock add dword ptr [ebx], 1; mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a989c: lock add dword ptr fs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x0012f612: lock add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0008fb68: lock and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099908: lock cmpxchg dword ptr [ebx], edx; jne 0x99918; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00098931: lock cmpxchg dword ptr [ebx], esi; jne 0x98940; xor eax, eax; pop ebx; pop esi; ret; 
0x0008cfea: lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0009994b: lock cmpxchg dword ptr [edx], ecx; jne 0x99942; xor eax, eax; pop ebx; ret; 
0x00099989: lock cmpxchg dword ptr [edx], ecx; jne 0x99998; xor eax, eax; pop ebx; ret; 
0x0009863b: lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00092d48: lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00098614: lock dec dword ptr [eax]; jne 0x98620; xor eax, eax; ret; 
0x0018309b: lock dec dword ptr [ebp - 0x2bb7d]; dec dword ptr [ecx + 0x34894c46]; and al, 0xe8; ret 0x12; 
0x00128de0: lock dec dword ptr [ebp - 0x64a677d]; call dword ptr [eax - 0x73]; 
0x000a3227: lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a382a: lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009eddb: lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000a2ede: lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x00173ed3: lock inc dword ptr [ebx - 0x17aaeb3c]; ret 0xeaf2; 
0x00176703: lock inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00176529: lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0013fbd0: lock sub dword ptr [eax - 0xc], 1; je 0x13fbe0; add esp, 4; pop ebx; pop esi; ret; 
0x000987bb: lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x00108424: lodsb al, byte ptr [esi]; aas; add byte ptr [eax], al; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x0010846d: lodsb al, byte ptr [esi]; aas; add byte ptr [eax], al; push eax; call 0x8d660; call dword ptr [esi]; 
0x00049833: lodsb al, byte ptr [esi]; aas; stc; call dword ptr [eax - 0x18]; 
0x000e8aa5: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [eax - 0x73], dl; or dword ptr [eax], 0xffffffaf; stc; call dword ptr [eax - 0x18]; 
0x0006edc4: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00094df4: lodsb al, byte ptr [esi]; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x4f0f; 
0x001099c7: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000c6bde: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x001442b5: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp + 0x396374ed], al; ret; 
0x0012b25b: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x001804b8: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000335e3: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0004f53e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000ca6e5: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x4d7bf033], cl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x0016d56a: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x000990b8: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0005d365: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add dh, dh; ret; 
0x0011ff84: lodsb al, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx + 0xfcb3], cl; add bh, bh; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x000d1c2d: lodsb al, byte ptr [esi]; add edx, ebp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000cda2b: lodsb al, byte ptr [esi]; and al, 0x7c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x00112249: lodsb al, byte ptr [esi]; and al, 0x8c; add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004fc39: lodsb al, byte ptr [esi]; and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0014d653: lodsb al, byte ptr [esi]; arpl cx, si; call dword ptr [esi + 0x50]; 
0x00158894: lodsb al, byte ptr [esi]; cmc; int1; call dword ptr [edx + 0x6a]; 
0x000d01d0: lodsb al, byte ptr [esi]; cmp esi, esi; dec dword ptr [ebp - 0x652177d]; call dword ptr [eax - 0x73]; 
0x000852f0: lodsb al, byte ptr [esi]; fdivp st(1); inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00139312: lodsb al, byte ptr [esi]; hlt; jmp dword ptr [esi - 0x70]; 
0x00176186: lodsb al, byte ptr [esi]; idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x00082530: lodsb al, byte ptr [esi]; imul ecx, dword ptr [ebx], 0x30868d00; xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x0007882d: lodsb al, byte ptr [esi]; in al, 0xf8; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0009f36d: lodsb al, byte ptr [esi]; ja 0x9f356; call dword ptr [eax + 0x57]; 
0x0009f325: lodsb al, byte ptr [esi]; jbe 0x9f30e; call dword ptr [eax + 0x57]; 
0x00094fa3: lodsb al, byte ptr [esi]; jge 0x94f9f; call dword ptr [eax - 0x73]; 
0x00094fe1: lodsb al, byte ptr [esi]; jge 0x94fdd; call dword ptr [eax - 0x73]; 
0x00095077: lodsb al, byte ptr [esi]; jge 0x95073; call dword ptr [eax - 0x73]; 
0x00095261: lodsb al, byte ptr [esi]; jge 0x9525d; call dword ptr [eax - 0x73]; 
0x000291a6: lodsb al, byte ptr [esi]; jnp 0x291a2; call dword ptr [eax - 0x73]; 
0x000292eb: lodsb al, byte ptr [esi]; jnp 0x292e7; call dword ptr [eax - 0x73]; 
0x0002930e: lodsb al, byte ptr [esi]; jnp 0x2930a; call dword ptr [eax + 0x68]; 
0x00029331: lodsb al, byte ptr [esi]; jnp 0x2932d; call dword ptr [eax + 0x68]; 
0x00029343: lodsb al, byte ptr [esi]; jnp 0x2933f; call dword ptr [eax - 0x73]; 
0x0002e833: lodsb al, byte ptr [esi]; jns 0x2e82f; call dword ptr [eax - 0x73]; 
0x0002ea5b: lodsb al, byte ptr [esi]; jns 0x2ea57; call dword ptr [eax - 0x73]; 
0x0002eb5d: lodsb al, byte ptr [esi]; jns 0x2eb59; call dword ptr [eax + 0x68]; 
0x0002ebe2: lodsb al, byte ptr [esi]; jns 0x2ebde; call dword ptr [eax - 0x73]; 
0x0002ec28: lodsb al, byte ptr [esi]; jns 0x2ec24; call dword ptr [eax + 0x68]; 
0x0002bdca: lodsb al, byte ptr [esi]; jp 0x2bdc6; call dword ptr [eax - 0x73]; 
0x0002c154: lodsb al, byte ptr [esi]; jp 0x2c150; call dword ptr [eax - 0x73]; 
0x0002c2e5: lodsb al, byte ptr [esi]; jp 0x2c2e1; call dword ptr [eax - 0x73]; 
0x0002c378: lodsb al, byte ptr [esi]; jp 0x2c374; call dword ptr [eax - 0x73]; 
0x0002c39b: lodsb al, byte ptr [esi]; jp 0x2c397; call dword ptr [eax - 0x73]; 
0x00181ede: lodsb al, byte ptr [esi]; lahf; hlt; call dword ptr [eax - 0x18]; 
0x000a6f8d: lodsb al, byte ptr [esi]; mov al, ch; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000793fc: lodsb al, byte ptr [esi]; out 0xf8, eax; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0015ca01: lodsb al, byte ptr [esi]; pop ebx; bnd call dword ptr [eax - 0x73]; 
0x000cd660: lodsb al, byte ptr [esi]; pop edx; clc; call dword ptr [esi + 0x53]; 
0x000db655: lodsb al, byte ptr [esi]; ret 0xf0; 
0x00134fa4: lodsb al, byte ptr [esi]; ret; 
0x0012437c: lodsb al, byte ptr [esi]; ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x000a6e8c: lodsb al, byte ptr [esi]; sal dh, cl; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00199c84: lodsb al, byte ptr [esi]; sar ecx, 1; jmp dword ptr [esi + 0xf]; 
0x000c3abb: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000c20a4: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c331f: lodsb al, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x000c170f: lodsb al, byte ptr [esi]; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000303f0: lodsb al, byte ptr [esi]; sub eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x00099d8f: lodsb al, byte ptr [esi]; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x0009119c: lodsb al, byte ptr [esi]; xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x0012fc71: lodsb al, byte ptr [esi]; xor byte ptr [0x719f0500], al; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0016fea5: lodsb al, byte ptr [esi]; xor edi, ecx; call dword ptr [eax + 0x52]; 
0x00061797: lodsd eax, dword ptr [esi]; add al, byte ptr [eax]; add byte ptr [ebx + 0x3182444], cl; test byte ptr [eax - 0x73134], dl; jmp eax; 
0x000f7f75: lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x00030446: lodsd eax, dword ptr [esi]; add byte ptr [esi - 7], dl; call dword ptr [eax - 0x18]; 
0x000d481e: lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x361f7b], cl; push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x00122bef: lodsd eax, dword ptr [esi]; add eax, 0xec830000; or byte ptr [ebp - 0x6a2f87d], cl; call dword ptr [eax + 0x55]; 
0x001808af: lodsd eax, dword ptr [esi]; and al, byte ptr [eax]; add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x0004d691: lodsd eax, dword ptr [esi]; dec esp; sar ecx, 1; jmp dword ptr [ebp - 0x39]; 
0x00054102: lodsd eax, dword ptr [esi]; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x00060d3f: lodsd eax, dword ptr [esi]; inc edx; stc; call dword ptr [eax + 0x53]; 
0x000fc4ef: lodsd eax, dword ptr [esi]; insb byte ptr es:[edi], dx; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0013ab69: lodsd eax, dword ptr [esi]; ret 0xf; 
0x0005411e: lodsd eax, dword ptr [esi]; ret; 
0x000b6c7c: lodsd eax, dword ptr [esi]; ror byte ptr [eax + eax], 0x81; rol eax, 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00195c68: lodsd eax, dword ptr [esi]; sar dh, 1; inc dword ptr [ecx + 0x3f424c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017b8af: lodsd eax, dword ptr [esi]; sbb eax, 0xc483fff1; adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x000d01ea: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000c4130: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00058fa2: lodsd eax, dword ptr [esi]; std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x00058fc7: lodsd eax, dword ptr [esi]; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x000d01e9: lodsd eax, dword ptr fs:[esi]; stc; call dword ptr [eax - 0x18]; 
0x0010222b: loope 0x10222c; add esi, esi; ret; 
0x0010ad0b: loope 0x10acae; int1; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x001103e8: loope 0x110373; ret; 
0x0011cc96: loope 0x11cc80; inc esp; ret 1; 
0x0012644a: loope 0x12645b; xchg ebp, eax; ret; 
0x001266fa: loope 0x1266fa; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012c40b: loope 0x12c397; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0012c8e5: loope 0x12c870; ret 0x448b; 
0x0012cac7: loope 0x12ca52; ret 0x448b; 
0x0012d4f9: loope 0x12d484; ret 0x448b; 
0x0012d5b5: loope 0x12d540; ret 0x448b; 
0x0012d7c5: loope 0x12d750; ret 0x448b; 
0x0013991a: loope 0x13991b; jmp dword ptr [esi - 0x70]; 
0x001399d7: loope 0x1399d8; jmp dword ptr [esi - 0x70]; 
0x00139ff5: loope 0x13a05e; stc; call dword ptr [eax - 0x18]; 
0x0013d0f5: loope 0x13d0f7; add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x0013d3d4: loope 0x13d3d6; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x2ec3; 
0x0013f4f4: loope 0x13f47f; ret 0x25; 
0x00146051: loope 0x146057; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0014db4c: loope 0x14dad7; jecxz 0x14dad9; ret 0x25; 
0x001524a8: loope 0x1524a0; inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x0015a51e: loope 0x15a57b; pop esi; pop edi; ret; 
0x00168757: loope 0x16874c; call dword ptr [eax - 0x73]; 
0x001688e6: loope 0x1688e8; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016ada3: loope 0x16ada1; jmp dword ptr [esi - 0x70]; 
0x0016c72a: loope 0x16c71f; call dword ptr [eax - 0x73]; 
0x0016f8b3: loope 0x16f83e; ret 0x25; 
0x00179044: loope 0x178fc9; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00179eec: loope 0x179e77; ret; 
0x0017a996: loope 0x17a921; ret 0xbd89; 
0x00185b01: loope 0x185a8c; ret 0x25; 
0x00185c5a: loope 0x185bdf; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00187801: loope 0x18778c; ret 0x25; 
0x0018795a: loope 0x1878df; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00189701: loope 0x18968c; ret 0x25; 
0x0018985a: loope 0x1897df; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00196c84: loope 0x196c7d; ret 1; 
0x001a2c7b: loope 0x1a2c7d; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001ac9c7: loope 0x1ac9c9; add byte ptr [eax], dl; add dh, dh; ret 0xf07; 
0x00024b32: loope 0x24b49; add byte ptr [0x2122df], al; mov edx, dword ptr [eax + 0x118]; test edx, edx; je 0x24b45; ret; 
0x000308d4: loope 0x3085f; ret 0x25; 
0x00030b2c: loope 0x30ab7; ret 0x25; 
0x00035a3b: loope 0x359c6; ret; 
0x0003b4bf: loope 0x3b4b7; les eax, ptr [edx]; je 0x3b4c7; fchs; ret; 
0x0003b83f: loope 0x3b837; les eax, ptr [edx]; je 0x3b847; fchs; ret; 
0x0006ac4a: loope 0x6ac4b; dec dword ptr [ebx - 0x5ab4b]; dec dword ptr [ebx - 0x5cf7b]; jmp dword ptr [ebp - 0x77]; 
0x0007d23e: loope 0x7d2a7; cli; jmp dword ptr [esi - 0x70]; 
0x000848da: loope 0x848d4; stc; jmp dword ptr [esi - 0x70]; 
0x0009659b: loope 0x965a4; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096cdf: loope 0x96ce8; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096eff: loope 0x96f08; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097521: loope 0x9752a; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009c5f5: loope 0x9c580; ret 0x25; 
0x0009cac5: loope 0x9ca50; ret 0x25; 
0x000a944e: loope 0xa94ab; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000ad2e7: loope 0xad2f0; add eax, dword ptr [eax + ecx*4 - 0x71194]; jmp eax; 
0x000b6c2f: loope 0xb6bb4; ret; 
0x000b7767: loope 0xb76ec; ret; 
0x000b7783: loope 0xb7708; ret; 
0x000b787b: loope 0xb780a; je 0xb78a5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000b8148: loope 0xb80f5; or al, 0; add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b826f: loope 0xb81f4; ret; 
0x000b8e67: loope 0xb8dec; ret; 
0x000b8e83: loope 0xb8e08; ret; 
0x000b8f7b: loope 0xb8f0a; je 0xb8fa5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000be20f: loope 0xbe194; ret; 
0x000be81b: loope 0xbe7aa; je 0xbe845; add byte ptr [ebx + 0x5e], bl; ret; 
0x000bf4b6: loope 0xbf43b; ret 0x6640; 
0x000c09d7: loope 0xc0a07; lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000d1c77: loope 0xd1c77; jmp dword ptr [esi - 0x70]; 
0x000d5b91: loope 0xd5b88; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x000d5bb6: loope 0xd5bad; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x000d5bdb: loope 0xd5bd2; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x000d5c00: loope 0xd5bf7; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x677e37a]; call dword ptr [eax - 0x73]; 
0x000d5c25: loope 0xd5c1c; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x000d5c4a: loope 0xd5c41; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x000d5c6f: loope 0xd5c66; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x000d6e9c: loope 0xd6ead; je 0xd6ec0; ret; 
0x000e7e82: loope 0xe7e0d; inc ebp; mov esp, 0x83c0458b; ror byte ptr [edi], 0x89; ret 0x25; 
0x000ee1a8: loope 0xee133; ret; 
0x000ee8c1: loope 0xee84c; ret 0x25; 
0x000eea1a: loope 0xee99f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f0c58: loope 0xf0be3; ret; 
0x000f1a28: loope 0xf19b3; ret; 
0x000f2141: loope 0xf20cc; ret 0x25; 
0x000f229a: loope 0xf221f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f44c8: loope 0xf4453; ret; 
0x000f52a8: loope 0xf5233; ret; 
0x000f59b1: loope 0xf593c; ret 0x25; 
0x000f5b0a: loope 0xf5a8f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f7753: loope 0xf76de; ret 0x25; 
0x000f79fb: loope 0xf7a54; stc; call dword ptr [ebx + 0x50]; 
0x0016d620: lsl eax, word ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x00162e8d: lsl ebp, esp; jmp dword ptr [ebp - 0x77]; 
0x0018e683: maxps xmm0, xmmword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194810: maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x000b73fd: maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0018f0fa: maxps xmm5, xmm0; sbb byte ptr [edi + edi*8], bh; inc dword ptr [ecx + 0x4548fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001910fa: maxps xmm5, xmm0; sbb byte ptr [edi + edi*8], bl; inc dword ptr [ecx + 0x4370fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f8386: mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009bf2c: mov ah, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000f834e: mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0009e499: mov ah, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a4b89: mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x6567f80], cl; call dword ptr [eax + 0x68]; 
0x00145c9d: mov ah, 0x24; mov al, byte ptr [0x89000001]; ret; 
0x00112434: mov ah, 0x24; mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0003dd78: mov ah, 0x24; push eax; or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x001a4a7a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x000bf5aa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000bf5ca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bf12a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bf13a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x000d6ec6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x001a3d26: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a3d36: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a3d46: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a3d56: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a3d66: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a3cc6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a3cd6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a3ce6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a3cf6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a3d06: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a5244: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a3d16: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a4386: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a4396: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a43a6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a43b6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a4326: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a4336: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a4346: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a4356: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a4366: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a4376: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000a44b3: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x001685a3: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x001a5217: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x0008d083: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x0008b163: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a2955: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a5285: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a4315: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x0008b125: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000d6ee5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000910b5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b0f45: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x001687a5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; ret; 
0x000bebe5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0016a14a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016a15a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0017e41a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x000b0f8a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0009e63a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x390], eax; ret; 
0x0009876a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x10; add esp, 0xc; ret; 
0x0008ecaa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x00090afa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x000dc04a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x000930a2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0003cef2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0009a272: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x001685aa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x000929e2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 3; ret; 
0x00120efa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x3c]; pop ebx; ret; 
0x000c09da: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00084ffa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00084eca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x0017631a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0018294a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x001828da: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0008b18a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x001a527a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001a384a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00024d6a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b1bea: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x00084f02: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 1; mov eax, edx; ret; 
0x000d6f98: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; add eax, 2; ret; 
0x0008e999: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00085118: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00082749: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0xffffffff; ret; 
0x0016add8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x000d6ef8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000d6f08: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d6f18: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d6f28: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x0013b4c9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d6f38: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d6f48: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x0013d3e8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; movzx eax, dl; ret; 
0x0008b138: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x0008b118: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0008e98a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x000bb27a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x0003d822: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00171ada: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x00182a0a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000a3e7a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000bf26a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0008b16a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00024ed1: mov ah, 0x38; stc; call dword ptr [eax - 1]; 
0x000911af: mov ah, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x000a1233: mov ah, 0x52; stc; call dword ptr [eax - 0x18]; 
0x0008c134: mov ah, 0x82; push 0x1fff8e9; salc; jmp esi; 
0x0002fc15: mov ah, 0x82; stc; call dword ptr [eax - 0x73]; 
0x000ece33: mov ah, 0x83; in al, dx; add al, 0x6a; add eax, 0xaf70838d; stc; call dword ptr [eax - 0x73]; 
0x000e880f: mov ah, 0x83; in al, dx; or al, 0x8d; sub ecx, 0x56; stc; call dword ptr [eax - 0x18]; 
0x000ed03a: mov ah, 0x83; in al, dx; or byte ptr [ebx - 0x7f72378b], cl; pop ecx; stc; call dword ptr [eax - 0x75]; 
0x0017e625: mov ah, 0x83; mov dword ptr [ecx], 0xb0e895eb; test al, 0xfb; call dword ptr [ebp + 0x57]; 
0x0015cb1b: mov ah, 0x85; sal byte ptr [ebp - 0x50], 0x83; in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax + 0x55]; 
0x00036dc1: mov ah, 0x87; fadd dword ptr [ecx - 0x1fe0008]; jmp esi; 
0x000373d8: mov ah, 0x87; sub byte ptr [ebx - 0x1fe0008], al; jmp esi; 
0x00036d22: mov ah, 0x87; test byte ptr [ecx - 0x1fe0008], al; jmp esi; 
0x00036791: mov ah, 0x87; xor byte ptr [ecx - 0x1fe0008], al; jmp esi; 
0x0009c29e: mov ah, 0x89; ret 0x458b; 
0x001a9626: mov ah, 0x89; ret 0x5d89; 
0x001a9fdf: mov ah, 0x89; ret 0x950f; 
0x000351f4: mov ah, 0x8d; inc ecx; sbb al, 0x89; ret 0x25; 
0x000b8e75: mov ah, 0x9e; or al, 0; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7775: mov ah, 0xb5; or al, 0; add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00090e97: mov ah, 0xb9; or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00146afe: mov ah, 0xbe; stc; call dword ptr [eax - 0x73]; 
0x000b786e: mov ah, 0xc; add byte ptr [ecx + 0x10e4cfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0017d045: mov ah, 0xca; stc; call dword ptr [edi + 0x56]; 
0x000bfd2b: mov ah, 0xe8; call 0x810c0961; ret; 
0x0016f42a: mov ah, 0xe8; mov al, 0x9a; cld; call dword ptr [ebp + 0x57]; 
0x00129a9c: mov ah, 0xef; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x00128e11: mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x0012142f: mov ah, 0xf9; call dword ptr [eax - 0x73]; 
0x001278ce: mov ah, 0xf9; call dword ptr [edi - 0x7f]; 
0x00169428: mov ah, 0xfa; cld; jmp dword ptr [esi - 0x70]; 
0x0018c69b: mov ah, 0xfa; jmp dword ptr [esi - 0x70]; 
0x000a506b: mov ah, 0xfb; dec dword ptr [ecx - 0x4517dbe4]; add esi, edi; jmp dword ptr [esi - 0x70]; 
0x0017dad8: mov ah, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0015da7e: mov ah, 0xfd; jmp dword ptr [esi - 0x70]; 
0x00057d0c: mov ah, 0xff; dec dword ptr [ebx - 0x364f4b]; dec dword ptr [ebx - 0x36377b]; call dword ptr [ebx + 0x56]; 
0x0006b416: mov ah, 0xff; dec dword ptr [ebx - 0x5cf7b]; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x77]; 
0x0011105e: mov ah, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00109f16: mov ah, 1; add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000999ea: mov ah, 2; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000277bd: mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x000f7908: mov ah, 8; add byte ptr [ecx + 0x13f509c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x0015739f: mov ah, al; stc; call dword ptr [eax - 0x18]; 
0x0009e964: mov ah, bl; or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00109c88: mov al, 0; add byte ptr [eax], al; add byte ptr [edi + edi*2 - 0x7d], dh; jmp dword ptr [esi]; 
0x0003c41d: mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00111793: mov al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00111738: mov al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; call dword ptr gs:[0x10]; 
0x000bf06c: mov al, 0; add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0016d808: mov al, 0; add byte ptr [eax], al; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0016d82a: mov al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0016df3c: mov al, 0; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000bee0c: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000bae82: mov al, 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00034fc2: mov al, 0x39; ret 0x820f; 
0x001ab7f2: mov al, 0x39; ret; 
0x000a99bc: mov al, 0x3f; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00120a71: mov al, 0x44; add byte ptr [eax], al; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x001227bf: mov al, 0x45; add byte ptr [eax], al; push eax; call 0x1228c0; add esp, 0x1c; ret; 
0x0017482c: mov al, 0x46; cld; call dword ptr [eax - 0x73]; 
0x0010d40a: mov al, 0x68; psubw mm7, mm7; jmp eax; 
0x0007cdc8: mov al, 0x6b; cli; jmp dword ptr [esi - 0x70]; 
0x0015daee: mov al, 0x70; stc; call dword ptr [ebp - 0x73]; 
0x0002aa18: mov al, 0x81; stc; call dword ptr [eax - 0x18]; 
0x000e4b75: mov al, 0x83; clc; fidiv dword ptr [ebp + 0x35]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0003597b: mov al, 0x83; in al, dx; or al, 0x8d; sbb byte ptr [ebx + 0x3e], 0xf9; call dword ptr [eax - 0x18]; 
0x0015cb1f: mov al, 0x83; in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax + 0x55]; 
0x00032dfc: mov al, 0x83; js 0x32e14; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x000acce4: mov al, 0x83; ret 0x8301; 
0x0012490f: mov al, 0x83; ret 0xeb03; 
0x00049905: mov al, 0x87; stc; call dword ptr [eax - 0x18]; 
0x0005cea0: mov al, 0x89; inc ebp; mov eax, 0xfff89ee9; call dword ptr [eax + 0x52]; 
0x000a923e: mov al, 0x89; ret 0xc031; 
0x000d0466: mov al, 0x8b; inc ebp; aam 1; ret 0x5389; 
0x001a9ff6: mov al, 0x8b; push ebp; les ecx, ptr [ecx]; ret 0xfa09; 
0x000337eb: mov al, 0x8b; test byte ptr [ebx - 0x814], dh; test eax, eax; je 0x337f9; call eax; 
0x00035b4a: mov al, 0x8d; cmp byte ptr [eax + 0x39], 0xf9; call dword ptr [eax - 0x73]; 
0x00135637: mov al, 0x8d; mov bl, 0x1c; stc; call dword ptr [eax + 0x50]; 
0x0016f2e5: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0016f2e5: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00093913: mov al, 0x96; stc; call dword ptr [eax + 0x68]; 
0x00093952: mov al, 0x96; stc; call dword ptr [eax + 0x6a]; 
0x00093a02: mov al, 0x96; stc; call dword ptr [eax - 0x73]; 
0x0009d51e: mov al, 0x99; stc; call dword ptr [eax - 0x18]; 
0x0016f42c: mov al, 0x9a; cld; call dword ptr [ebp + 0x57]; 
0x0016ec2c: mov al, 0xa2; cld; call dword ptr [ebp + 0x57]; 
0x0017e62c: mov al, 0xa8; sti; call dword ptr [ebp + 0x57]; 
0x000f7492: mov al, 0xb0; stc; call dword ptr [eax - 0x73]; 
0x0010b2e1: mov al, 0xb1; stc; call dword ptr [eax - 0x18]; 
0x0014605f: mov al, 0xbd; stc; call dword ptr [eax - 0x73]; 
0x0014e64f: mov al, 0xc1; stc; call dword ptr [eax - 0x73]; 
0x00157405: mov al, 0xc4; stc; call dword ptr [eax - 0x18]; 
0x001656d6: mov al, 0xc5; stc; call dword ptr [eax - 0x18]; 
0x00032783: mov al, 0xdc; cmp al, 0xf9; jmp dword ptr [ebp - 0x75]; 
0x001393a2: mov al, 0xf4; jmp dword ptr [esi - 0x70]; 
0x000ee73b: mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x000ed65f: mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x001aee2c: mov al, 0xf; test byte ptr [esi + edi*8 - 1], ah; jmp dword ptr [esi - 0x7b]; 
0x0017ddf8: mov al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0015de0f: mov al, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0012be0e: mov al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aa351: mov al, 9; ret 0x950f; 
0x0013491e: mov al, byte ptr [0x2bac5d8b]; inc edi; sbb byte ptr [ebp + 0x63840fc9], al; or byte ptr [eax], al; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x000d2e6d: mov al, byte ptr [0x31ffffc9]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x0003b0fd: mov al, byte ptr [0x50000000]; ret; 
0x0008426d: mov al, byte ptr [0x5b000000]; pop esi; pop edi; ret; 
0x000b0b52: mov al, byte ptr [0x5b5f0000]; ret; 
0x000b0f3c: mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x0013d5c5: mov al, byte ptr [0x6afff968]; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0017788b: mov al, byte ptr [0x70878d50]; test al, 0; add byte ptr [eax - 0x73], dl; xchg eax, edi; jb 0x177892; call dword ptr [eax + 0x6a]; 
0x000c88b3: mov al, byte ptr [0x81000000]; ret 0; 
0x00171475: mov al, byte ptr [0x81000118]; ret; 
0x00168275: mov al, byte ptr [0x810001aa]; ret; 
0x00155175: mov al, byte ptr [0x810002db]; ret; 
0x0014eb75: mov al, byte ptr [0x81000341]; ret; 
0x0014e675: mov al, byte ptr [0x81000346]; ret; 
0x00146775: mov al, byte ptr [0x810003c5]; ret; 
0x00137275: mov al, byte ptr [0x810004ba]; ret; 
0x00131875: mov al, byte ptr [0x81000514]; ret; 
0x00115a75: mov al, byte ptr [0x810006d2]; ret; 
0x000f9275: mov al, byte ptr [0x8100089a]; ret; 
0x000ebf75: mov al, byte ptr [0x8100096d]; ret; 
0x000c3475: mov al, byte ptr [0x81000bf8]; ret; 
0x000a9e75: mov al, byte ptr [0x81000d8e]; ret; 
0x000a4f75: mov al, byte ptr [0x81000ddd]; ret; 
0x000a4d75: mov al, byte ptr [0x81000ddf]; ret; 
0x000a2f75: mov al, byte ptr [0x81000dfd]; ret; 
0x00087975: mov al, byte ptr [0x81000fb3]; ret; 
0x00081275: mov al, byte ptr [0x8100101a]; ret; 
0x00060575: mov al, byte ptr [0x81001227]; ret; 
0x00026c75: mov al, byte ptr [0x810015c0]; ret; 
0x00195f75: mov al, byte ptr [0x81fffecd]; ret; 
0x00194f75: mov al, byte ptr [0x81fffedd]; ret; 
0x00190e75: mov al, byte ptr [0x81ffff1e]; ret; 
0x0018ee75: mov al, byte ptr [0x81ffff3e]; ret; 
0x00172baa: mov al, byte ptr [0x83000001]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00122634: mov al, byte ptr [0x83000045]; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x001226b6: mov al, byte ptr [0x83000045]; les ecx, ptr [eax]; pop ebx; ret; 
0x0017ec52: mov al, byte ptr [0x830000aa]; in al, dx; or al, 0x8d; add esp, -0x36; stc; call dword ptr [eax - 0x18]; 
0x00064f3c: mov al, byte ptr [0x83000d3f]; ret 0xe901; 
0x0006c6cc: mov al, byte ptr [0x83ffff8f]; ret 0xf01; 
0x000e951c: mov al, byte ptr [0x83fffff9]; in al, dx; or al, 0x89; ret; 
0x0017fab7: mov al, byte ptr [0x85000003]; sal byte ptr [ecx + edx - 0x77], 0x54; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0012965a: mov al, byte ptr [0x89000000]; inc esp; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00145c9f: mov al, byte ptr [0x89000001]; ret; 
0x00096637: mov al, byte ptr [0x8900558b]; ret; 
0x0014d8fc: mov al, byte ptr [0x89ffed58]; sub al, 0x24; call esi; 
0x000d272c: mov al, byte ptr [0x89fff80e]; ret 0x448b; 
0x00058667: mov al, byte ptr [0x89ffffc9]; ret; 
0x0007af9d: mov al, byte ptr [0x89fffffe]; ret; 
0x0005083c: mov al, byte ptr [0x8b000e86]; jl 0x50867; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x001656dc: mov al, byte ptr [0x8bffece6]; jl 0x165707; sub byte ptr [ebp - 0x63a2379], cl; call dword ptr [eax - 0x73]; 
0x0012081d: mov al, byte ptr [0x8d08ec83]; xchg esi, eax; xchg edx, eax; pop edx; stc; call dword ptr [edx - 0x77]; 
0x0015347f: mov al, byte ptr [0x8d500000]; adc dword ptr [eax + 0x500000a0], -0x73; sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x00153486: mov al, byte ptr [0x8d500000]; sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x00152616: mov al, byte ptr [0x8d500000]; sbb esp, 0x75; int1; call dword ptr [eax - 0x73]; 
0x0015260f: mov al, byte ptr [0x8d500000]; sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; sbb esp, 0x75; int1; call dword ptr [eax - 0x73]; 
0x0015256d: mov al, byte ptr [0x8d500000]; sub dword ptr [ecx + edi*4], -0xf; call dword ptr [eax - 0x18]; 
0x0013e8bb: mov al, byte ptr [0x8dfff9bb]; cdq; xor al, 0x84; stc; call dword ptr [eax + 0x53]; 
0x0002ebb6: mov al, byte ptr [0x9000000]; ret; 
0x0008b4ae: mov al, byte ptr [0x930c838d]; stc; call dword ptr [eax - 0x73]; 
0x001a42ac: mov al, byte ptr [0xa8000000]; inc eax; jne 0x1a4360; lea eax, [edx + 7]; ret; 
0x000984ac: mov al, byte ptr [0xb8000000]; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x000934c0: mov al, byte ptr [0xb8000001]; lock add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x001ab7e1: mov al, byte ptr [0xd66d889]; add byte ptr [eax - 0x2f517], al; dec dword ptr [ebp + 0x7d8b0076]; mov al, 0x39; ret; 
0x0010a2ed: mov al, byte ptr [0xe9fffffb]; ret; 
0x00122647: mov al, byte ptr [0xeb000045]; fmul qword ptr [ebp - 0x17acff8a]; ret; 
0x000c0ca2: mov al, byte ptr [0xf00003c]; inc esp; ret 0x288b; 
0x001aadcf: mov al, byte ptr [0xf7d45d89]; out 0x89, al; ret; 
0x00170df2: mov al, byte ptr [eax + eax]; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x000b3376: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b34b6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000bd719: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefb6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000af0d6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b34d4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000af0f4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b7c4a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b7daa: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000bd7bb: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b660a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b676a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b3514: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000af134: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x001a2be2: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000b3350: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b3490: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000bd6f3: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aef90: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000af0b0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a6f8e: mov al, ch; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000b33a4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000b34e4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000aefd4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000af104: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000b7c6a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b7dca: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000bd7db: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b662a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b678a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b3534: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000af154: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b3360: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b34a0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b34b0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000af0d0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000bd703: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefa0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000af0c0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x001a3f15: mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0011a83b: mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00169f38: mov bh, 0; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0004894b: mov bh, 0; add byte ptr [ebx - 0x76efdbb4], cl; ret 0x1b8; 
0x001096a5: mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0009eb48: mov bh, 0x39; ret 0xb374; 
0x00049737: mov bh, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x0013a731: mov bh, 0x44; and al, 4; rol ax, 8; ret; 
0x001811bf: mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x001483fa: mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0014eac5: mov bh, 0x52; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000d96e1: mov bh, 0x56; or al, 0x29; ret 0x428d; 
0x0014e5c5: mov bh, 0x57; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000ef87b: mov bh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x00140897: mov bh, 0x59; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00149a08: mov bh, 0x59; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x0010fba2: mov bh, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0010fba2: mov bh, 0x59; stc; call dword ptr [eax - 0x18]; aam 0x41; bnd jmp dword ptr [esi - 0x70]; 
0x00176812: mov bh, 0x75; stc; call dword ptr [eax - 0x73]; 
0x00166128: mov bh, 0x80; push -0x35; stc; jmp dword ptr [esi - 0x77]; 
0x0003e09e: mov bh, 0x83; push esi; stc; jmp dword ptr [esi - 0x77]; 
0x000344ad: mov bh, 0x84; push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x00027e97: mov bh, 0x85; cmp al, 0x80; stc; jmp dword ptr [esi - 0x77]; 
0x000a9ed3: mov bh, 0x88; add al, 0; add al, ch; ret; 
0x000ad0e8: mov bh, 0x89; xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005ae51: mov bh, 0x8d; xchg dword ptr [eax - 0x76], esi; stc; call dword ptr [eax - 0x73]; 
0x001499d9: mov bh, 0xc0; add esp, 0x2c; ret; 
0x0013d0f2: mov bh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0004245c: mov bh, 0xc0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000425ec: mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042958: mov bh, 0xc2; tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x000420c8: mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x0004217c: mov bh, 0xc9; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x000b8e7b: mov bh, 0xd0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00161f24: mov bh, 0xf2; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x000e858d: mov bh, 0xf4; call dword ptr [ebp + 0x31]; 
0x000c85c3: mov bh, 0xf6; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x00134249: mov bh, 0xf9; call dword ptr [eax - 0x18]; 
0x001305c8: mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0017d747: mov bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0006af76: mov bh, 0xff; dec dword ptr [ebx - 0x5cf7b]; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x77]; 
0x00092346: mov bh, 0xff; inc dword ptr [ebx - 0x1614ef3c]; nop; mov eax, 3; add esp, 0xc; ret; 
0x000341d8: mov bh, 4; push eax; and eax, 0x1000; ret; 
0x000341a8: mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034178: mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000340c8: mov bh, 4; push eax; and eax, 0x200; ret; 
0x00034128: mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00034048: mov bh, 4; push eax; and eax, 0x400; ret; 
0x000340f8: mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034098: mov bh, 4; push eax; and eax, 0x800; ret; 
0x00034268: mov bh, 4; push eax; and eax, 1; ret; 
0x00034078: mov bh, 4; push eax; and eax, 2; ret; 
0x00034158: mov bh, 4; push eax; and eax, 4; ret; 
0x00034028: mov bh, 4; push eax; and eax, 8; ret; 
0x0018f919: mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0005aa31: mov bh, ah; dec dword ptr [ebx - 0x3763796c]; clc; inc dword ptr [ecx]; bnd jmp edx; 
0x000f9797: mov bh, byte ptr [ecx]; ret; 
0x0016047e: mov bh, ch; jmp dword ptr [esi - 0x70]; 
0x0005ae65: mov bh, cl; call dword ptr [eax - 0x18]; 
0x0005ac56: mov bh, cl; call dword ptr [eax - 0x73]; 
0x0003c4b1: mov bl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a53f9: mov bl, 0; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0003c47f: mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00135639: mov bl, 0x1c; stc; call dword ptr [eax + 0x50]; 
0x000306dd: mov bl, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00122c49: mov bl, 0x5d; stc; call dword ptr [eax + 0x55]; 
0x0008b1e2: mov bl, 0x7c; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000be2c3: mov bl, 0x7d; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0017c7e3: mov bl, 0x8a; jbe 0x17c7e0; call dword ptr [esi + 0x57]; 
0x00026fa4: mov bl, 0x8b; inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg ah, ch; jg 0x26faa; call dword ptr [eax - 0x73]; 
0x00199c53: mov bl, 0x9c; sar ecx, 1; jmp dword ptr [esi + 0xf]; 
0x0017c786: mov bl, 0xa8; jbe 0x17c783; call dword ptr [esi + 0x57]; 
0x0017bf41: mov bl, 0xd4; or eax, 0xec830000; or byte ptr [ebp - 0x6895745], cl; call dword ptr [edi + 0x56]; 
0x0008ef38: mov bl, 0xf6; ret 0x7510; 
0x0011baee: mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x0011bd88: mov bl, 0xf9; call dword ptr [eax - 0x18]; pop ds; ret; 
0x00120533: mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0011ff89: mov bl, 0xfc; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x000764cd: mov bl, 0xff; call dword ptr [ecx + 0x51]; 
0x00076bc2: mov bl, 0xff; inc dword ptr [ebx - 0x51b73]; inc dword ptr [ecx + ecx*4]; ret; 
0x00129c7a: mov bl, 1; add byte ptr [eax], al; int 0x80; 
0x000ea408: mov bl, 3; add byte ptr [eax], al; mov eax, dword ptr [ebx + ebp*4 - 0x6fe68]; add eax, ebx; jmp eax; 
0x000351e4: mov bl, 8; add byte ptr [ebx + 0x758b10c4], al; mov esp, 0x408dc189; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x0007739e: mov byte ptr [0x28e9ffff], al; in al, 0xff; dec dword ptr [ebx - 0x5037b]; call dword ptr [ecx + 0x51]; 
0x000b6d5a: mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x00172b73: mov byte ptr [0x81000101], al; ret; 
0x00172973: mov byte ptr [0x81000103], al; ret; 
0x00165b73: mov byte ptr [0x810001d1], al; ret; 
0x00107273: mov byte ptr [0x810007ba], al; ret; 
0x00039b73: mov byte ptr [0x81001491], al; ret; 
0x0010adb5: mov byte ptr [0x83000000], al; les ebp, ptr [eax + 0x5b]; ret; 
0x00175118: mov byte ptr [0x83000000], al; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a5f1a: mov byte ptr [0x8300019f], al; les ebx, ptr [eax]; pop ebx; ret; 
0x0009f39a: mov byte ptr [0x83fff83d], al; les ecx, ptr [ecx*4 - 0x1987c37a]; call dword ptr [eax + 0x57]; 
0x001200ba: mov byte ptr [0x83fffffe], al; les ebx, ptr [eax]; pop ebx; ret; 
0x0015cf7c: mov byte ptr [0x850f0000], al; ret; 
0x00096eca: mov byte ptr [0x89000000], al; ret 0xf283; 
0x000a416a: mov byte ptr [0x8b000000], al; wait; dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0011cc03: mov byte ptr [0x8b530011], al; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00035b71: mov byte ptr [0x8bffffff], dh; inc ebp; mov esp, 0xe9ac4589; ret 0xfffd; 
0x0015e44d: mov byte ptr [0x8d500000], al; cmp esp, 0x78; int1; call dword ptr [eax - 0x73]; 
0x000a8ee3: mov byte ptr [0xc483fff7], al; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001a20ea: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x00031daa: mov byte ptr [0xf6000000], al; ret 0x7503; 
0x0018b63a: mov byte ptr [0xfad8a0e8], al; call dword ptr [ebx - 0x7d]; 
0x0014cb4b: mov byte ptr [0xffef5fe8], al; jmp dword ptr [esi - 0x70]; 
0x000dd6cf: mov byte ptr [0xffffff6], al; mov esi, 0x246c8903; add al, 0x83; ret; 
0x000c09a3: mov byte ptr [eax + 0x100003c], dl; xor eax, eax; pop ebx; ret; 
0x000be50e: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb088: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0003290a: mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x000be594: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb10e: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be618: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb192: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be783: mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001a294b: mov byte ptr [eax + 0x75], 0x45; add eax, 0xf; ret; 
0x001a2b98: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a4733: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x000be35c: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf26: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be388: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf42: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00059d38: mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x000be40a: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf94: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005ad35: mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x0007a9ca: mov byte ptr [eax + eax + 0x488b0000], dl; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x00071cb7: mov byte ptr [eax + eax - 0x749b0000], ah; add dword ptr [ecx - 0x5577b], ecx; jmp dword ptr [ebp - 0x39]; 
0x000a9ed4: mov byte ptr [eax + eax], al; add al, ch; ret; 
0x001682c1: mov byte ptr [eax + eax], al; add byte ptr [ebp - 0x68d6a7d], cl; call dword ptr [eax - 0x18]; 
0x0003ff1e: mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00172625: mov byte ptr [eax + esi], 0; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0015347e: mov byte ptr [eax - 0x72b00000], ah; adc dword ptr [eax + 0x500000a0], -0x73; sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x0016c56d: mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x16c560; pop ebx; ret; 
0x0009374f: mov byte ptr [eax - 7], dl; call dword ptr [eax - 0x18]; 
0x00146c23: mov byte ptr [eax*4 + 0x5be775c0], 0x5e; pop edi; ret; 
0x000fbe16: mov byte ptr [eax], 0; add byte ptr [ebx - 0x49f0dbe4], cl; rol byte ptr [ebx], 0x9c; add dword ptr [edi + eax - 7], -1; jmp ebx; 
0x001a49cf: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001634e3: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x00120526: mov byte ptr [eax], 0; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000a927c: mov byte ptr [eax], 0; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011f901: mov byte ptr [eax], 0; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0008eb20: mov byte ptr [eax], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0009df33: mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010aebb: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012abb7: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001a3c64: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x001a30e4: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x0010afef: mov byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00087244: mov byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0007f80a: mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0007a9d4: mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000be320: mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdb53: mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000bd955: mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x0005ac4d: mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x000be335: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf00: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012e52e: mov byte ptr [eax], dl; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0009c9b7: mov byte ptr [ebp - 0x6666379], cl; call dword ptr [eax + 0x68]; 
0x0009ca13: mov byte ptr [ebp - 0x6666379], cl; call dword ptr [eax - 0x73]; 
0x00086ca3: mov byte ptr [ebp - 0x7c768b40], 0xec; or byte ptr [ebx - 0x72f3dba4], cl; add dword ptr [ecx], 0x4f; stc; call dword ptr [eax - 0x75]; 
0x00151dbf: mov byte ptr [ebx + 0x4e88], 0; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x00173739: mov byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00151d37: mov byte ptr [ebx + 0x5ec8], 0; mov dword ptr [ebx + 0x5eb8], 0; call esi; 
0x00151b9f: mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x000bf569: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0013ce0d: mov byte ptr [ebx + 2], 0; pop ebx; pop esi; pop edi; ret; 
0x000c51f8: mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x0008618e: mov byte ptr [ebx + ebx], cl; add byte ptr [ebx - 0x77], dl; ret; 
0x0014a684: mov byte ptr [ebx - 0x7af0fe08], 0x5b; or eax, dword ptr [eax]; add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x0017be9a: mov byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0012461b: mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00140d00: mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x0009e617: mov byte ptr [ebx], al; add byte ptr [eax], al; ret; 
0x001a7437: mov byte ptr [ebx], al; lea esi, [edi + edi*8 - 1]; call dword ptr [ebx]; 
0x001a718a: mov byte ptr [ebx], al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [ebx]; 
0x000d86a8: mov byte ptr [ebx], dh; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x0009e6a1: mov byte ptr [ecx + 0x3c38], al; ret; 
0x000b0f83: mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b0fa2: mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000b0fe4: mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000c08f8: mov byte ptr [ecx + eax], 0; dec ecx; jne 0xc08f8; pop esi; ret; 
0x000c00b0: mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0013c762: mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x001366fd: mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x0013668d: mov byte ptr [ecx - 0x837b], cl; call dword ptr [ebx + 0x6a]; 
0x00120053: mov byte ptr [ecx - 7], ch; jmp dword ptr [ebp - 0x77]; 
0x0002c1e1: mov byte ptr [ecx], 0x83; ret 0x3901; 
0x000a57a3: mov byte ptr [ecx], 0x83; ret 0x8401; 
0x000eee61: mov byte ptr [ecx], 0x83; ret 0x8801; 
0x00047075: mov byte ptr [ecx], 0x83; ret 0xe901; 
0x00031716: mov byte ptr [ecx], 0x83; ret; 
0x000d78ab: mov byte ptr [ecx], 0x83; xlatb; add byte ptr [ecx], bh; ret; 
0x001345c5: mov byte ptr [ecx], 0x89; ret 0xb70f; 
0x00065c20: mov byte ptr [ecx], 0x89; ret; 
0x00156267: mov byte ptr [ecx], 0xeb; ret; 
0x00041017: mov byte ptr [ecx], 0xf8; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0006701a: mov byte ptr [ecx], 1; ret 0x9589; 
0x00177cfe: mov byte ptr [ecx], al; ret 0x858b; 
0x0009e5e8: mov byte ptr [ecx], bl; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x9e600; ret; 
0x0007ecbc: mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x00083694: mov byte ptr [ecx], cl; cli; jmp dword ptr [esi - 0x70]; 
0x001a933c: mov byte ptr [ecx], cl; ret 0x458b; 
0x000b0f60: mov byte ptr [ecx], dl; pop ebx; ret; 
0x000b8a9b: mov byte ptr [edi + 0x10], cl; lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000b73bb: mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b8b21: mov byte ptr [edi + 0x14], dl; lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000b7441: mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000b8ba5: mov byte ptr [edi + 0x18], cl; lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000b74c5: mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b75c5: mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000b8909: mov byte ptr [edi + 2], dl; lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x000b7269: mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x0018de0a: mov byte ptr [edi + 4], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b8937: mov byte ptr [edi + 4], dl; lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000b7287: mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000b89ab: mov byte ptr [edi + 8], dl; lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x000b72cb: mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x001a2bde: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000c04bd: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000c0863: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0018c88e: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00194ac9: mov byte ptr [edi], al; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019088a: mov byte ptr [edi], bh; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00182a82: mov byte ptr [edi], bl; ljmp 0xc031:0x8c483ff; pop ebx; ret; 
0x00193d8a: mov byte ptr [edi], cl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d0309: mov byte ptr [edi], cl; mov dh, 0x14; or dh, dh; ret 0xf04; 
0x000b88e2: mov byte ptr [edi], dl; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000b7242: mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000bdab1: mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0008eb1e: mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x0013c5e1: mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000ba840: mov byte ptr [edx + 1], bh; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a9765: mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000b3379: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b34b9: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000bd71c: mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefb9: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000af0d9: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000ba850: mov byte ptr [edx + 2], bh; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b3397: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; pop edi; ret; 
0x000b34d7: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000bd74a: mov byte ptr [edx + 4], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefc7: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x000af0f7: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000ba880: mov byte ptr [edx + 4], bh; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a9868: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000a97a8: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b33db: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b351b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000bd7be: mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aeffb: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000af13b: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000bda54: mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000ba8f0: mov byte ptr [edx + 8], bh; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001a20e5: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x000b82a1: mov byte ptr [edx - 0x3e7efff4], ch; sti; fist dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0018c095: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191324: mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0018e28d: mov byte ptr [edx - 1], cl; inc dword ptr [ecx + 0x462ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f20c: mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911fc: mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000a9730: mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x00084171: mov byte ptr [edx], 0; pop ebx; ret; 
0x0013262a: mov byte ptr [edx], 0x20; pop ebx; pop esi; pop edi; ret; 
0x001a292d: mov byte ptr [edx], 0x75; dec edi; test dh, 4; jne 0x1a2984; add eax, 0xb; ret; 
0x00132616: mov byte ptr [edx], 0xa; pop ebx; pop esi; pop edi; ret; 
0x000b3352: mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b3492: mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x00191983: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018f9b3: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000bd6f5: mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aef92: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000af0b2: mov byte ptr [edx], al; mov eax, edx; ret; 
0x0011e896: mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0019300a: mov byte ptr [edx], bl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019183b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018f88b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00085c6d: mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0009f25c: mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x00151dc1: mov byte ptr [esi], cl; add byte ptr [eax], al; mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x00091738: mov byte ptr [esp + 0x46], 0; mov esi, 8; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x00091742: mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x00063deb: mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x000be334: mov byte ptr ss:[eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00056377: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3b8; 
0x000f8526: mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a4307: mov ch, 0; add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x000f84ee: mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000d35f2: mov ch, 0; in eax, 0xff; dec dword ptr [ecx - 0x36734b]; dec dword ptr [ebx - 0x364f4b]; call dword ptr [ebx - 0x73]; 
0x00165727: mov ch, 0x37; std; jmp dword ptr [esi - 0x70]; 
0x000a19d7: mov ch, 0x38; add al, 0; add bl, ch; ret 0x9066; 
0x00183b27: mov ch, 0x53; sti; jmp dword ptr [esi - 0x70]; 
0x000a02cf: mov ch, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x00083514: mov ch, 0xa; cli; jmp dword ptr [esi - 0x70]; 
0x000b7789: mov ch, 0xc; add byte ptr [ecx + 0x10e644c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b7776: mov ch, 0xc; add byte ptr [ecx + 0x10e657c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b775a: mov ch, 0xc; add byte ptr [ecx + 0x10e673c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0014b8bb: mov ch, 0xe; add byte ptr [ebx - 0x77], dl; ret; 
0x00164fc7: mov ch, 0xed; in al, dx; call dword ptr [edx + 0x52]; 
0x00128dd9: mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x00128dc9: mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x001159d8: mov ch, 0xff; jmp dword ptr [ebp - 0x77]; 
0x00058912: mov ch, 4; add byte ptr [eax], al; add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x000d5718: mov ch, 4; add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x0019f4cd: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x000b8447: mov ch, 9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00181f0c: mov ch, al; into; outsd dx, dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x0012c40c: mov ch, bh; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x001840f5: mov ch, bh; jmp dword ptr [ecx]; 
0x00160606: mov ch, bh; jmp dword ptr [esi - 0x70]; 
0x00157bc4: mov ch, byte ptr [edi - 7]; call dword ptr [eax + 0x55]; 
0x000d6eb0: mov ch, dh; and ch, 0xf; je 0xd6ed0; add eax, 2; ret; 
0x0013a762: mov ch, dh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0003d03f: mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003cfe6: mov cl, 0; add byte ptr [eax], al; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000bae03: mov cl, 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008cfec: mov cl, 0x11; setne al; movzx eax, al; pop ebx; ret; 
0x0009990a: mov cl, 0x13; jne 0x99918; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00079f3f: mov cl, 0x2c; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00098933: mov cl, 0x33; jne 0x98940; xor eax, eax; pop ebx; pop esi; ret; 
0x00092d4a: mov cl, 0x54; and al, 4; ret; 
0x0008fae7: mov cl, 0x55; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x00079f55: mov cl, 0x68; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00024830: mov cl, 0x69; stc; call dword ptr [eax - 0x18]; 
0x0015980e: mov cl, 0x6f; stc; call dword ptr [eax - 1]; 
0x0015cf79: mov cl, 0x93; pop eax; mov byte ptr [0x850f0000], al; ret; 
0x00079f60: mov cl, 0x98; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0009994d: mov cl, 0xa; jne 0x99942; xor eax, eax; pop ebx; ret; 
0x0009998b: mov cl, 0xa; jne 0x99998; xor eax, eax; pop ebx; ret; 
0x0009863d: mov cl, 0xa; mov eax, 0x10; cmove eax, ecx; ret; 
0x0014281e: mov cl, 0xb8; add al, byte ptr [eax + eax]; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x0017bc44: mov cl, 0xb; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x00079f4a: mov cl, 0xe8; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00096c46: mov cl, 0xee; add esi, dword ptr [ecx + eax*8 - 0x77]; ret 0xca83; 
0x0015e4ab: mov cl, 0xf1; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x00161e24: mov cl, 0xf2; call dword ptr [eax - 0x18]; 
0x0010d42c: mov cl, 0xf9; call dword ptr [eax + 0x68]; 
0x0010b2e2: mov cl, 0xf9; call dword ptr [eax - 0x18]; 
0x0010a855: mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0006c06d: mov cl, 0xff; dec dword ptr [ebx - 0x58f7b]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0006c13f: mov cl, 0xff; dec dword ptr [ebx - 0x58f7b]; dec dword ptr [ecx - 0x59363]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0006ac36: mov cl, 0xff; dec dword ptr [ebx - 0x5ab4b]; dec dword ptr [ebx - 0x5cf7b]; jmp dword ptr [ebp - 0x77]; 
0x0006b88d: mov cl, 0xff; dec dword ptr [ebx - 0x5d343]; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x00092508: mov cl, 0xff; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0012be6e: mov cl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00046d29: mov cl, bh; call dword ptr [eax + 0x68]; 
0x0005a749: mov cl, bh; call dword ptr [eax - 0x18]; 
0x0004956b: mov cl, bh; call dword ptr [eax - 0x73]; 
0x00087243: mov cl, byte ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x000a6d4d: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xa9ba37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013884d: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xa9bb37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a6d9d: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xa9ec37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013889d: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xa9ed37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a651d: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaa1e37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001387fd: mov cl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaa1f37e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000ea95e: mov cl, byte ptr [ebx - 0x76c7db84]; ret 0xf3e9; 
0x00090d98: mov cl, byte ptr [edi - 7]; call dword ptr [edx + 0x50]; 
0x000d6e99: mov cl, dl; and cl, 0xf; je 0xd6ec0; ret; 
0x0002ebac: mov cs, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x78f0fb05], al; mov al, byte ptr [0x9000000]; ret; 
0x0017a90e: mov cs, word ptr [eax - 0x3b7c0016]; adc al, 0x5b; pop esi; ret; 
0x000f9f12: mov cs, word ptr [eax]; add byte ptr [ecx + 0x13ceffc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x00036a7e: mov cs, word ptr [ebp + 0x1fffffd]; lds ebp, ptr [ecx]; ret; 
0x000d34a1: mov cs, word ptr [ebx - 0x364763]; inc dword ptr [ebx - 0x7274f314]; ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x00100beb: mov cs, word ptr [ecx - 0x3e7c71fc]; add dword ptr [ecx], ecx; ret 0xf983; 
0x000baf20: mov cx, word ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00139a13: mov dh, 0; add byte ptr [eax], al; add al, ch; ret; 
0x000eea43: mov dh, 0; add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0010a60b: mov dh, 0; add byte ptr [eax], al; add bh, al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x0008eed3: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x001a2b0b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x000a4863: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0013c5eb: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00193e9b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00060c63: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6bf986d], cl; call dword ptr [esi + 0x52]; 
0x00105e13: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0x44c7; 
0x000e6bbb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x458b0cec], al; aam 0x56; call eax; 
0x001aa0d3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x558bb045], cl; les ecx, ptr [ecx]; ret 0xfa09; 
0x0018540b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001a492b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x00146edb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x75ff0cec], al; add byte ptr [ebx - 0x4d17fb3b], al; ret 0xffed; 
0x00172c9b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x788dff38], al; or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x0009ebdb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00116dfb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x17a9f314], al; xchg edi, eax; ret; 
0x0005694b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0010865b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10854b; call eax; 
0x001086b3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10859a; call eax; 
0x001828ab: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x001278c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7972fb14], al; pushfd; mov ah, 0xf9; call dword ptr [edi - 0x7f]; 
0x0009ae5b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x7576efbf], cl; test al, 0x3b; add byte ptr [eax], al; ret; 
0x0009f023: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x0007a023: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0005d99b: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x51; or al, 0xf6; ret 0xf01; 
0x0008c3cb: mov dh, 0; add byte ptr [eax], al; add byte ptr [edx - 0x77], dl; ret; 
0x0007df63: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x001a46cb: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x001a3c06: mov dh, 0; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0002875d: mov dh, 0; add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [esp + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x00089a18: mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0018f9b1: mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019f2c3: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000875db: mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0018498c: mov dh, 0; ret; 
0x00084f25: mov dh, 0; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00084f45: mov dh, 0; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00085c35: mov dh, 0; shr al, 4; and eax, 1; ret; 
0x00085c45: mov dh, 0; shr al, 5; and eax, 1; ret; 
0x0010fc81: mov dh, 0x10; test dl, dl; je 0x10fc54; pop ebx; ret; 
0x000eda41: mov dh, 0x10; test dl, dl; je 0xeda14; pop ebx; ret; 
0x000f04f1: mov dh, 0x10; test dl, dl; je 0xf04c4; pop ebx; ret; 
0x000f12c1: mov dh, 0x10; test dl, dl; je 0xf1294; pop ebx; ret; 
0x000f3d61: mov dh, 0x10; test dl, dl; je 0xf3d34; pop ebx; ret; 
0x000f4b41: mov dh, 0x10; test dl, dl; je 0xf4b14; pop ebx; ret; 
0x000398dd: mov dh, 0x11; test dl, dl; jne 0x398c0; ret; 
0x0019f2c6: mov dh, 0x12; sub eax, edx; ret; 
0x0016c56a: mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x16c560; pop ebx; ret; 
0x000d030b: mov dh, 0x14; or dh, dh; ret 0xf04; 
0x0014581a: mov dh, 0x18; test ebx, ebx; jne 0x1457e8; mov eax, 1; pop ebx; ret; 
0x000acf1c: mov dh, 0x3c; cmp byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0008a233: mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0018f32d: mov dh, 0x40; jmp dword ptr [esi - 0x77]; 
0x000f758a: mov dh, 0x42; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xf755d; xor eax, eax; ret; 
0x00123cc8: mov dh, 0x42; jnp 0x123c59; xchg ebx, eax; ret; 
0x001998a2: mov dh, 0x42; pop es; sub eax, ecx; pop ebp; ret; 
0x001980f5: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x0019997e: mov dh, 0x42; push es; sub eax, ecx; pop ebp; ret; 
0x00198165: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x001054c9: mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x001371c0: mov dh, 0x44; push eax; add eax, eax; call 0x1f3f4d0; pop ebx; ret; 
0x0006102e: mov dh, 0x44; push es; aad 0x83; ret 0x101; 
0x0006e473: mov dh, 0x44; sar ecx, 1; inc dword ptr [ebx - 0x71f0fa05]; ret 0xfff2; 
0x0003a209: mov dh, 0x44; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x000619aa: mov dh, 0x45; or eax, 0x8901e683; ret; 
0x001076e6: mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0010587d: mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x001a2112: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0019995a: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x00198151: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0018f209: mov dh, 0x48; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x001911f9: mov dh, 0x48; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0019989e: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x001980f1: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019997a: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00198161: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000be273: mov dh, 0x4a; or al, 0; add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00156cd9: mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x0005d9a1: mov dh, 0x51; or al, 0xf6; ret 0xf01; 
0x0005ee4d: mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x0010158c: mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x00106fd0: mov dh, 0x53; add al, 0x8b; mov word ptr [eax - 0x6f5e8], ss; add ecx, eax; jmp ecx; 
0x00147aef: mov dh, 0x53; add dword ptr [ecx - 0x72ebdbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x000a47b2: mov dh, 0x53; sub dh, dh; ret 0x7502; 
0x00064f04: mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x0006478c: mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x00064006: mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x00070535: mov dh, 0x54; xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0006f3c5: mov dh, 0x54; xor ah, al; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72734]; add ecx, eax; jmp ecx; 
0x00070dbb: mov dh, 0x54; xor eax, esp; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72834]; add ecx, eax; jmp ecx; 
0x0006fc41: mov dh, 0x54; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x726b4]; add ecx, eax; jmp ecx; 
0x0013c032: mov dh, 0x55; adc dword ptr [ecx], edi; ret 0x460f; 
0x001a2185: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001a2116: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0005e013: mov dh, 0x56; or al, 0xf6; ret 0xf40; 
0x001a2145: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00078aa5: mov dh, 0x57; add ecx, ebp; ret; 
0x0005b347: mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x0013c849: mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x00158451: mov dh, 0x5a; or dh, dh; ret; 
0x0015134f: mov dh, 0x5a; push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x00156b4f: mov dh, 0x5d; add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x001500b6: mov dh, 0x5f; pop ebp; ret; 
0x0013c921: mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x0017207d: mov dh, 0x70; aaa; stc; call dword ptr [edi + 0x52]; 
0x00066ed5: mov dh, 0x72; dec byte ptr [ecx + 0x72d938f3]; ret 0xf089; 
0x0017d66c: mov dh, 0x76; stc; call dword ptr [ebp + 0x50]; 
0x0017bf66: mov dh, 0x76; stc; call dword ptr [ebp + 0x56]; 
0x00124909: mov dh, 0x80; jp 0x124910; xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x00168750: mov dh, 0x83; in al, dx; or byte ptr [ebp - 0xc1eb379], cl; call dword ptr [eax - 0x73]; 
0x00042d42: mov dh, 0x83; ret 0x8d01; 
0x00064c7e: mov dh, 0x89; ret; 
0x0017d164: mov dh, 0x8a; jbe 0x17d161; call dword ptr [esi + 0x53]; 
0x000c0ad4: mov dh, 0x8c; add al, 0; add al, ch; ret 0xf626; 
0x000624a1: mov dh, 0x94; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x00026846: mov dh, 0x98; adc eax, 0x241c8900; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00058fc6: mov dh, 0xad; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x001727a7: mov dh, 0xbc; and al, 0xf3; call dword ptr [ebp - 0x73]; 
0x0009a251: mov dh, 0xc0; add eax, 2; add esp, 0xc; ret; 
0x000fbe1e: mov dh, 0xc0; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x000391b9: mov dh, 0xc0; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x00182b8d: mov dh, 0xc0; add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x00176585: mov dh, 0xc0; add esp, 0x1c; ret; 
0x0011b1c1: mov dh, 0xc0; add esp, 0x4c; ret; 
0x0016baf5: mov dh, 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x001222db: mov dh, 0xc0; add esp, 8; pop ebx; ret; 
0x000423bb: mov dh, 0xc0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0009a26a: mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x0003be49: mov dh, 0xc0; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000375cd: mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x77ae0]; add edx, edi; jmp edx; 
0x000374e8: mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x77bdc]; add edx, edi; jmp edx; 
0x00037475: mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x77c30]; add edx, edi; jmp edx; 
0x00037429: mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77c84]; add esi, edi; jmp esi; 
0x000373d5: mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77cd8]; add esi, edi; jmp esi; 
0x000373a1: mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77d2c]; add esi, edi; jmp esi; 
0x00036e22: mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77d80]; add esi, edi; jmp esi; 
0x00036de7: mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77dd4]; add esi, edi; jmp esi; 
0x00036dbe: mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x00036d1f: mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77e7c]; add esi, edi; jmp esi; 
0x0003678e: mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77ed0]; add esi, edi; jmp esi; 
0x0011f3e8: mov dh, 0xc0; neg eax; add esp, 0xc; ret; 
0x0012a56c: mov dh, 0xc0; neg eax; ret; 
0x00087280: mov dh, 0xc0; pop ebx; neg eax; ret; 
0x0013218a: mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x000876fe: mov dh, 0xc0; pop ebx; pop esi; pop edi; ret; 
0x0016ba61: mov dh, 0xc0; pop ebx; pop esi; ret; 
0x0008cff2: mov dh, 0xc0; pop ebx; ret; 
0x0005a804: mov dh, 0xc0; pop edi; ret; 
0x0003cc6f: mov dh, 0xc0; ret; 
0x001175c6: mov dh, 0xc0; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0009a142: mov dh, 0xc0; sub eax, 2; add esp, 0xc; ret; 
0x0004254b: mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00028227: mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0013d3f1: mov dh, 0xc2; ret; 
0x000428b8: mov dh, 0xc2; tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x00124379: mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00041ff7: mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x000420db: mov dh, 0xc9; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00078828: mov dh, 0xc9; mov edi, dword ptr [ebp + ecx*4 - 0x71b54]; add edi, ebp; jmp edi; 
0x00034b06: mov dh, 0xc; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00106343: mov dh, 0xc; or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x567e; 
0x0019edca: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x000fbe40: mov dh, 0xd2; add eax, dword ptr [eax + edx*4 - 0x6f760]; jmp eax; 
0x000fbd62: mov dh, 0xd2; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x00065821: mov dh, 0xd2; mov ecx, dword ptr [edi + edx*4 - 0x72d38]; add ecx, edi; jmp ecx; 
0x0010ee3b: mov dh, 0xd2; mov ecx, dword ptr [esi + edx*4 - 0x6ec98]; add ecx, esi; jmp ecx; 
0x00078779: mov dh, 0xd2; mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x001489be: mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x001488b9: mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x001487f0: mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x00064efd: mov dh, 0xd3; mov ecx, dword ptr [esp + 0x20]; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00066380: mov dh, 0xdb; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00065d10: mov dh, 0xdb; add eax, dword ptr [eax + ebx*4 - 0x72c7c]; jmp eax; 
0x000d7008: mov dh, 0xdb; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x0006629d: mov dh, 0xdb; mov edx, dword ptr [ebp - 0x58c]; add eax, dword ptr [eax + ebx*4 - 0x72bf8]; jmp eax; 
0x0012c570: mov dh, 0xf9; call dword ptr [eax + 0x55]; 
0x001305d8: mov dh, 0xf9; call dword ptr [eax - 0x18]; 
0x000c3456: mov dh, 0xfc; cmc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0015d883: mov dh, 0xfd; call dword ptr [eax + 0x50]; 
0x0014d82c: mov dh, 0xfe; dec dword ptr [ebp - 0x63ed37d]; call dword ptr [eax - 0x73]; 
0x0012c0fe: mov dh, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b0e26: mov dh, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0019bf64: mov dh, 2; mov ecx, dword ptr [ebx + ecx*4 - 0x85474]; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x0008b7db: mov dh, 2; pop ebx; pop esi; ret; 
0x001849c2: mov dh, 2; pop esi; pop edi; ret; 
0x00085ca3: mov dh, 2; ret; 
0x001998bd: mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x00198104: mov dh, 2; sub eax, ecx; ret; 
0x00089ab7: mov dh, 2; sub esp, 8; lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x000ace6a: mov dh, 4; adc byte ptr [eax + 0x458b1104], cl; aam 0x83; ret 0x3901; 
0x00150539: mov dh, 7; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x000bfab3: mov dh, 8; cmp cl, byte ptr [edx]; jne 0xbfabd; xor eax, eax; pop ebx; ret; 
0x0018f889: mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001998ba: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00198101: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0010fc4e: mov dh, 8; test cl, cl; jne 0x10fc33; xor eax, eax; pop ebx; ret; 
0x000eda0e: mov dh, 8; test cl, cl; jne 0xed9f3; xor eax, eax; pop ebx; ret; 
0x000f04be: mov dh, 8; test cl, cl; jne 0xf04a3; xor eax, eax; pop ebx; ret; 
0x000f128e: mov dh, 8; test cl, cl; jne 0xf1273; xor eax, eax; pop ebx; ret; 
0x000f3d2e: mov dh, 8; test cl, cl; jne 0xf3d13; xor eax, eax; pop ebx; ret; 
0x000f4b0e: mov dh, 8; test cl, cl; jne 0xf4af3; xor eax, eax; pop ebx; ret; 
0x001437a1: mov dh, byte ptr [eax - 0x7cffffff]; in al, dx; add al, 0x6a; add eax, 0x8d8134ff; xor byte ptr [esp + eax*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000be359: mov dh, byte ptr [esi + 2]; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0017bfa4: mov dh, byte ptr [esi - 7]; call dword ptr [edi + 0x56]; 
0x0017d165: mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x53]; 
0x0017c7e4: mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x000be333: mov dh, byte ptr [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00084ce8: mov dh, ch; stc; jmp dword ptr [esi - 0x70]; 
0x0015f724: mov dh, dl; call dword ptr [eax - 0x18]; 
0x0003d256: mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e722b: mov dl, 0; add byte ptr [eax], al; mov eax, dword ptr [esi + ecx*4 - 0x700b0]; add eax, esi; jmp eax; 
0x0012bbe8: mov dl, 0x10; add byte ptr [ebx - 0x48], dl; ret; 
0x00195c2a: mov dl, 0x1e; cli; jmp dword ptr [esi - 0x70]; 
0x00099f8a: mov dl, 0x1f; cli; jmp dword ptr [esi - 0x70]; 
0x0008c3da: mov dl, 0x6c; stc; jmp dword ptr [esi - 0x70]; 
0x0008b4ca: mov dl, 0x88; cli; jmp dword ptr [esi - 0x70]; 
0x001524df: mov dl, 0x90; ret; 
0x0016f62a: mov dl, 0x98; cld; jmp dword ptr [esi - 0x70]; 
0x0018cc2a: mov dl, 0xae; cli; jmp dword ptr [esi - 0x70]; 
0x000baec4: mov dl, 0xb0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a506a: mov dl, 0xb4; sti; dec dword ptr [ecx - 0x4517dbe4]; add esi, edi; jmp dword ptr [esi - 0x70]; 
0x00129c6a: mov dl, 0xef; call dword ptr [ebx + 0x56]; 
0x00127f97: mov dl, 0xef; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0011096f: mov dl, 0xf9; call dword ptr [eax + 0x68]; 
0x001110d0: mov dl, 0xf9; call dword ptr [eax - 0x18]; 
0x0010b477: mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x0009ad47: mov dl, 0xff; inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x0012c0cb: mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b704a: mov dl, 6; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b6f4a: mov dl, 7; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008b4cb: mov dl, bh; jmp dword ptr [esi - 0x70]; 
0x0011eb12: mov dl, byte ptr [eax + eax]; add esp, 0x1c; ret; 
0x000b7240: mov dl, byte ptr [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x0017a90f: mov dl, ch; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0002fec2: mov ds, edi; call dword ptr [eax - 1]; 
0x0005bb5f: mov ds, word ptr [eax + eax - 0x41730000]; lea edi, [edi]; stc; jmp dword ptr [ebp - 0x75]; 
0x0013a7bd: mov ds, word ptr [edi]; push 0x868dfff9; sub ch, byte ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x000b8659: mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x0009a0f9: mov dword ptr [0x66ffffff], eax; nop; nop; mov eax, dword ptr gs:[8]; ret; 
0x0008cb2c: mov dword ptr [0x78], eax; ret; 
0x0008d4ee: mov dword ptr [0x78], edx; pop ebx; ret; 
0x0008caf5: mov dword ptr [0x7c], eax; ret; 
0x0008cbc4: mov dword ptr [0x7c], edx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8cbd8; ret; 
0x0008cba6: mov dword ptr [0x7c], edx; pop ebx; ret; 
0x00170072: mov dword ptr [0x8100012c], eax; ret; 
0x00150972: mov dword ptr [0x81000323], eax; ret; 
0x00137b72: mov dword ptr [0x810004b1], eax; ret; 
0x00120872: mov dword ptr [0x81000624], eax; ret; 
0x00120472: mov dword ptr [0x81000628], eax; ret; 
0x0011b672: mov dword ptr [0x81000676], eax; ret; 
0x000fc872: mov dword ptr [0x81000864], eax; ret; 
0x000ed872: mov dword ptr [0x81000954], eax; ret; 
0x000a9972: mov dword ptr [0x81000d93], eax; ret; 
0x0005ae72: mov dword ptr [0x8100127e], eax; ret; 
0x00042272: mov dword ptr [0x8100140a], eax; ret; 
0x001777f9: mov dword ptr [0x83ffeab9], eax; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x001325c9: mov dword ptr [0x83fffffa], eax; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0010719c: mov dword ptr [0x83fffffa], eax; ret 0x8301; 
0x000b13e9: mov dword ptr [0x85fffff8], eax; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0012aa7b: mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0014e383: mov dword ptr [0x8b9c72c2], eax; dec ebp; mov word ptr [ebp - 0x63ea37f], cs; call dword ptr [eax - 0x73]; 
0x0004c9d9: mov dword ptr [0x8bfffe73], eax; jl 0x4ca04; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0015f7c6: mov dword ptr [0x8d500000], eax; cmp dword ptr [edx + edi*2], -0xf; call dword ptr [eax - 0x73]; 
0x0015f71d: mov dword ptr [0x8d500000], eax; sbb esp, -0x76; bnd call dword ptr [eax - 0x18]; 
0x00182939: mov dword ptr [0x8dfffb65], eax; jbe 0x182940; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0009583a: mov dword ptr [0x8dfffffd], eax; xchg dword ptr [eax], eax; xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x0016eb36: mov dword ptr [0x9066fffc], eax; nop; nop; nop; ret; 
0x000dc0d8: mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00131001: mov dword ptr [0xc2920fd8], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00168e0a: mov dword ptr [0xc483ffeb], eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001669f0: mov dword ptr [0xc483fffe], eax; adc bl, ch; shr al, 0xe3; and al, 0xfd; dec dword ptr [ebp + 0x1ce80076]; ret; 
0x00095958: mov dword ptr [0xe9ac73c2], eax; cmp dh, 0xff; dec dword ptr [ebp - 0x668ff79]; call dword ptr [eax - 0x73]; 
0x000ffb72: mov dword ptr [0xf889ffff], eax; pop ebx; pop esi; pop edi; ret; 
0x00162ea2: mov dword ptr [0xfd6038e8], eax; jmp dword ptr [esi - 0x70]; 
0x00023007: mov dword ptr [8], eax; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x001097ea: mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00078020: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0008e888: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005a036: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0016b85a: mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x0007e91b: mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000be591: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb10b: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be530: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb0ad: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0016af12: mov dword ptr [eax + 0x10], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x00084f95: mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0008eb8c: mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00109812: mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00110e98: mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x00078027: mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x000419b2: mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0017618a: mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0008ebbc: mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00085c68: mov dword ptr [eax + 0x14], esi; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0011ecaa: mov dword ptr [eax + 0x16], edx; ret; 
0x000be678: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1d5: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e6040: mov dword ptr [eax + 0x18], 0; pop ebx; pop esi; pop edi; ret; 
0x0016b857: mov dword ptr [eax + 0x18], ecx; mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x000be64a: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1b7: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005aead: mov dword ptr [eax + 0x18], edx; push eax; call 0x5ad20; add esp, 0x18; pop ebx; ret; 
0x0007802e: mov dword ptr [eax + 0x18], edx; ret; 
0x00024b9e: mov dword ptr [eax + 0x1a50], edx; pop ebx; pop esi; ret; 
0x00024ace: mov dword ptr [eax + 0x1a50], edx; ret; 
0x0008b2ee: mov dword ptr [eax + 0x1a7c], 0; ret; 
0x0011dda2: mov dword ptr [eax + 0x1c], ebx; xor edx, 0x20; mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0008cae7: mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000ad34a: mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0007f343: mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x0007f314: mov dword ptr [eax + 0x20], ecx; ret; 
0x0008caf1: mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0007f9bc: mov dword ptr [eax + 0x24], 0; pop ebx; pop esi; pop edi; ret; 
0x0008933c: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x00089370: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0011ddab: mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0008cc60: mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc80: mov dword ptr [eax + 0x294], edx; ret; 
0x0008cca0: mov dword ptr [eax + 0x298], edx; ret; 
0x0008ccc0: mov dword ptr [eax + 0x29c], edx; ret; 
0x00093af0: mov dword ptr [eax + 0x2a4], edx; ret; 
0x00093ad0: mov dword ptr [eax + 0x2ac], edx; ret; 
0x00089336: mov dword ptr [eax + 0x2c], edx; mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0016aef6: mov dword ptr [eax + 0x2c], esi; mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x0011dda8: mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0016aef9: mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x0009e58a: mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e53a: mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4da: mov dword ptr [eax + 0x354], edx; ret; 
0x0009e5d0: mov dword ptr [eax + 0x358], edx; ret; 
0x0009e5b0: mov dword ptr [eax + 0x35c], edx; ret; 
0x0009e50a: mov dword ptr [eax + 0x370], edx; ret; 
0x0009e580: mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e530: mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4d0: mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e500: mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e660: mov dword ptr [eax + 0x394], edx; ret; 
0x0009d28a: mov dword ptr [eax + 0x3bd0], 0; ret; 
0x0009e3f4: mov dword ptr [eax + 0x3bd4], 0; ret; 
0x0009e560: mov dword ptr [eax + 0x3c34], edx; ret; 
0x0011de4d: mov dword ptr [eax + 0x40], edx; pop ebx; pop esi; ret; 
0x001828c8: mov dword ptr [eax + 0x4c], edx; ret; 
0x00024b20: mov dword ptr [eax + 0x64], edx; lea edx, [eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b20; ret; 
0x000e713a: mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00150a4d: mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x0007a9c9: mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00182f29: mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0008e881: mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000419b9: mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0009b4c1: mov dword ptr [eax + 0xc], ecx; ret; 
0x000843b8: mov dword ptr [eax + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008933f: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0008cb28: mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0017603a: mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0017600a: mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0009b596: mov dword ptr [eax + 0xc], edx; pop ebx; pop esi; pop edi; ret; 
0x00176750: mov dword ptr [eax + 0xc], edx; ret; 
0x0013ce60: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0008eca1: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0008e9b8: mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00151208: mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x000be54e: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb0cb: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0015120e: mov dword ptr [eax + 0xfc], edx; ret; 
0x000be3ca: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf77: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008ec9a: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0014ba4f: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00089f80: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0016a16e: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0003cb13: mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00107f21: mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00097bba: mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0013cb7f: mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016a0b2: mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016a0fc: mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0007f309: mov dword ptr [eax + 4], ecx; mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x001700e3: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00170a73: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00085c9f: mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0016a0c6: mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0007f33d: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x0005ad3d: mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x000baf59: mov dword ptr [eax + 4], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00084f8f: mov dword ptr [eax + 4], edx; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x00176749: mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x0008cb1e: mov dword ptr [eax + 4], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00084135: mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x00089373: mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00089342: mov dword ptr [eax + 4], edx; ret; 
0x0005a03f: mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000da088: mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x000be44e: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafdb: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014ba56: mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x001457b5: mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x00107f1a: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00089f87: mov dword ptr [eax + 8], 0; ret; 
0x0008e88f: mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00059e49: mov dword ptr [eax + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0007f340: mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x0005ad3a: mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x00084130: mov dword ptr [eax + 8], ecx; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0016a0b9: mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00059ef5: mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0007f311: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x000be430: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafbd: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000d1d28: mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x0011eca1: mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x00078019: mov dword ptr [eax + 8], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00107f0b: mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016d542: mov dword ptr [eax + 8], edx; ret; 
0x0011e71b: mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x00093bb1: mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x000337e9: mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x337f9; call eax; 
0x00033aa8: mov dword ptr [eax - 0x40], edi; test edx, edx; je 0x33ab9; mov dword ptr [esp + 4], eax; call edx; 
0x000934bf: mov dword ptr [eax - 0x47ffffff], esp; lock add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x0017678c: mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00089f7a: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00097bb4: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00107f14: mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0018ba34: mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0009b4af: mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0016a0e7: mov dword ptr [eax], 0; pop ebx; ret; 
0x0003cb1a: mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0016a168: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016a0ac: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016a0c0: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00099607: mov dword ptr [eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x001228ff: mov dword ptr [eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x001383e7: mov dword ptr [eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c1e7: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003cbc7: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c187: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; ret; 
0x00114077: mov dword ptr [eax], 0x16; mov eax, 1; ret; 
0x0007ad32: mov dword ptr [eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a36b7: mov dword ptr [eax], 0x16; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00182dff: mov dword ptr [eax], 0x16; xor eax, eax; ret; 
0x0003b49a: mov dword ptr [eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0003bb28: mov dword ptr [eax], 0x22; add esp, 8; pop ebx; ret; 
0x0003cca1: mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x0014440e: mov dword ptr [eax], 0x61; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0016a150: mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0009995f: mov dword ptr [eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x0016a140: mov dword ptr [eax], 0xb; pop ebx; ret; 
0x0013cb79: mov dword ptr [eax], 0xc; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011f677: mov dword ptr [eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x0016a138: mov dword ptr [eax], 0xc; pop ebx; ret; 
0x0018426d: mov dword ptr [eax], 0xec830000; add al, 0x55; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x000ed981: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x00098654: mov dword ptr [eax], 1; xor eax, eax; ret; 
0x000e617f: mov dword ptr [eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00120eef: mov dword ptr [eax], 2; xor eax, eax; pop ebx; ret; 
0x0016a0f6: mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016a0d3: mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0016a160: mov dword ptr [eax], 8; pop ebx; ret; 
0x0016a126: mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000257b7: mov dword ptr [eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00082f37: mov dword ptr [eax], 9; mov eax, 0xffffffff; ret; 
0x000d6c13: mov dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00176182: mov dword ptr [eax], ebx; lea ecx, [ecx - 0x954]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0008c153: mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000baf24: mov dword ptr [eax], ecx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be3c8: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf75: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008d6e3: mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0007fa9b: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0007dca5: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000be38b: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf45: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005a168: mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x00107316: mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x001700de: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00170a6e: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0003b54e: mov dword ptr [eax], ecx; ret; 
0x00092f50: mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x000715fa: mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x00077e6d: mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x000dcb0e: mov dword ptr [eax], edx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000419b0: mov dword ptr [eax], edx; mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x00084133: mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0005a03d: mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000da086: mov dword ptr [eax], edx; mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x0007f30f: mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0016afd1: mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0012f0d6: mov dword ptr [eax], edx; mov eax, 1; ret; 
0x000be347: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf14: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00033c78: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0007f346: mov dword ptr [eax], edx; pop ebx; ret; 
0x0005ad40: mov dword ptr [eax], edx; ret; 
0x0003feb0: mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0007ff72: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0008e6bb: mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00182afa: mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x000ad0e9: mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x00023273: mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x00136ea4: mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x00136d0a: mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x001283b5: mov dword ptr [ebp - 0x30], edx; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x00080dcd: mov dword ptr [ebp - 0x44], eax; sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0012f4e4: mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012f698: mov dword ptr [ebp - 0x510], ecx; call dword ptr gs:[0x10]; 
0x0015d4f3: mov dword ptr [ebp - 0x737af040], 0x83000000; in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax - 1]; 
0x00136ea1: mov dword ptr [ebp - 0x74], eax; mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x00136bec: mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x0013668b: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], eax; push ebx; push 0; push 0x1000005; call edx; 
0x00136b32: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000004; call eax; 
0x001366fb: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000007; call eax; 
0x00136a4e: mov dword ptr [ebp - 0x78], ecx; push ebx; push 0; push 0x1000001; call eax; 
0x0013645b: mov dword ptr [ebp - 0x78], ecx; push esi; push 0; push 0x1000003; call eax; 
0x0013661e: mov dword ptr [ebp - 0x78], ecx; push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x00136951: mov dword ptr [ebp - 0x7c], edi; mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x00136be9: mov dword ptr [ebp - 0x7c], esi; mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x0013668e: mov dword ptr [ebp - 0x84], eax; push ebx; push 0; push 0x1000005; call edx; 
0x00136954: mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x00136d04: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x00136a48: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push ebx; push 0; push 0x1000001; call eax; 
0x00136455: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push esi; push 0; push 0x1000003; call eax; 
0x00136618: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x00136b35: mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000004; call eax; 
0x001366fe: mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000007; call eax; 
0x0013b9ed: mov dword ptr [ebp], edx; mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0008c6f8: mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x0016af89: mov dword ptr [ebx + 0x10], eax; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0005a7e2: mov dword ptr [ebx + 0x10], eax; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000893ec: mov dword ptr [ebx + 0x10], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0009ef79: mov dword ptr [ebx + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000a48d8: mov dword ptr [ebx + 0x10], edx; mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x00084fad: mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x00041f68: mov dword ptr [ebx + 0x1894], 0; add esp, 0x18; pop ebx; ret; 
0x0003be20: mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000a45b6: mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0005a8c1: mov dword ptr [ebx + 0x18], edx; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000889d7: mov dword ptr [ebx + 0x1a78], eax; add esp, 8; pop ebx; ret; 
0x0008b1e1: mov dword ptr [ebx + 0x1a7c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a45b9: mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000999e8: mov dword ptr [ebx + 0x2b4], eax; add esp, 0x18; pop ebx; ret; 
0x0007fecf: mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00122632: mov dword ptr [ebx + 0x45a0], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001226b4: mov dword ptr [ebx + 0x45a0], eax; add esp, 8; pop ebx; ret; 
0x00151dc6: mov dword ptr [ebx + 0x4e78], 0; call esi; 
0x000878fd: mov dword ptr [ebx + 0x50], 0xffffffff; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011e1e6: mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x00151d3e: mov dword ptr [ebx + 0x5eb8], 0; call esi; 
0x001843af: mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00151cb6: mov dword ptr [ebx + 0x6ef8], 0; call esi; 
0x00151c2e: mov dword ptr [ebx + 0x7f38], 0; call esi; 
0x00151ba6: mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00151b95: mov dword ptr [ebx + 0x8f84], 0x6374652f; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x0015c9d9: mov dword ptr [ebx + 0xa220], eax; add esp, 0x18; pop ebx; ret; 
0x00077a7a: mov dword ptr [ebx + 0xa4], eax; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00168e45: mov dword ptr [ebx + 0xa62c], eax; add esp, 8; pop ebx; ret; 
0x00077b77: mov dword ptr [ebx + 0xac], edx; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00168995: mov dword ptr [ebx + 0xc], 0; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0017e420: mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x00143847: mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0008c615: mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x0017f6dc: mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0008c212: mov dword ptr [ebx + 0xc], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008e85f: mov dword ptr [ebx + 0xc], eax; add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x0010acd7: mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x00145132: mov dword ptr [ebx + 0xc], ecx; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x001322aa: mov dword ptr [ebx + 0xc], edx; add esp, 8; pop ebx; ret; 
0x0016d648: mov dword ptr [ebx + 0xc], edx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0017e414: mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x000a48db: mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x0010927d: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x001093d8: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00109203: mov dword ptr [ebx + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00054293: mov dword ptr [ebx + 4], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00084386: mov dword ptr [ebx + 4], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0013220a: mov dword ptr [ebx + 4], edx; add esp, 8; pop ebx; ret; 
0x0005ac4a: mov dword ptr [ebx + 4], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x0008528f: mov dword ptr [ebx + 4], edx; pop ebx; pop esi; ret; 
0x000958d1: mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x00085706: mov dword ptr [ebx + 4], edx; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x00096247: mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00174036: mov dword ptr [ebx + 8], 0; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0017f72f: mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0014383f: mov dword ptr [ebx + 8], eax; mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00084fa7: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0010acd1: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x001719fb: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00093814: mov dword ptr [ebx + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0013225a: mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x000843b5: mov dword ptr [ebx + 8], edx; mov dword ptr [eax + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00096283: mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00173ab1: mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x000963cd: mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0007aceb: mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017fcb8: mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x000a9e4c: mov dword ptr [ebx], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00085704: mov dword ptr [ebx], eax; mov dword ptr [ebx + 4], edx; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x0005b089: mov dword ptr [ebx], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00082c4b: mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x001694ab: mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000a45bc: mov dword ptr [ebx], eax; push eax; call ecx; 
0x0008528b: mov dword ptr [ebx], eax; xor eax, eax; mov dword ptr [ebx + 4], edx; pop ebx; pop esi; ret; 
0x0007f963: mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00176033: mov dword ptr [ebx], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00182ea8: mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x00065377: mov dword ptr [ebx], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x000715f8: mov dword ptr [ebx], edx; mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x00084384: mov dword ptr [ebx], edx; mov dword ptr [ebx + 4], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008a1db: mov dword ptr [ebx], edx; pop ebx; pop esi; pop edi; ret; 
0x0014daa1: mov dword ptr [ebx], esi; jne 0x14da50; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009be2e: mov dword ptr [ebx], esi; jne 0x9bdd0; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009ae29: mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0009ae51: mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0009ef76: mov dword ptr [ecx + 0x14], ebx; mov dword ptr [ebx + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00175fa1: mov dword ptr [ecx + 0x14], edx; ret; 
0x0008dd5a: mov dword ptr [ecx + 0x214], 1; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0007a9d2: mov dword ptr [ecx + 0x88], edx; ret; 
0x0008d721: mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x0014824e: mov dword ptr [ecx + 0xa], edx; pop ebx; pop esi; pop edi; ret; 
0x00175f99: mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x001701d7: mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x0009426b: mov dword ptr [ecx + 1], edi; add byte ptr [eax], al; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b0fc2: mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0002fc0b: mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0008d6e0: mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00078547: mov dword ptr [ecx + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00123f76: mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x000b0fb3: mov dword ptr [ecx + 4], edx; pop ebx; ret; 
0x0003e861: mov dword ptr [ecx + 4], edx; ret 4; 
0x0008ea7e: mov dword ptr [ecx + 4], edx; ret; 
0x000b1004: mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x001701d4: mov dword ptr [ecx + 8], eax; mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x0008e9e3: mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x000b0ff5: mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0005b00c: mov dword ptr [ecx + edx*4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x001554d3: mov dword ptr [ecx - 0x3b7c000d], eax; adc byte ptr [ebp - 0x77], ah; pop ebx; pop esi; pop edi; ret; 
0x000848d6: mov dword ptr [ecx - 0x71e163d], ecx; stc; jmp dword ptr [esi - 0x70]; 
0x0007b476: mov dword ptr [ecx - 0x7cfc163d], ecx; cli; jmp dword ptr [esi - 0x70]; 
0x00078523: mov dword ptr [ecx], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017e627: mov dword ptr [ecx], 0xb0e895eb; test al, 0xfb; call dword ptr [ebp + 0x57]; 
0x001727c9: mov dword ptr [ecx], 0xe; add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x000c0861: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x00082b28: mov dword ptr [ecx], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00083926: mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0011f662: mov dword ptr [ecx], eax; cmp eax, ebx; jb 0x11f670; xor eax, eax; pop ebx; ret; 
0x0007236d: mov dword ptr [ecx], eax; cmp ebx, 0x53; ja 0x72463; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x722c8]; jmp eax; 
0x0008e780: mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003e85d: mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0013d12d: mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0008503c: mov dword ptr [ecx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00096228: mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x00034569: mov dword ptr [ecx], eax; pop ebx; ret; 
0x0008ae2e: mov dword ptr [ecx], eax; ret; 
0x00090adb: mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00129a90: mov dword ptr [ecx], ebx; int 0x80; 
0x000d0940: mov dword ptr [ecx], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000b0f81: mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b0fa0: mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000b0fc0: mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b0fb0: mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0013c872: mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x000b0f71: mov dword ptr [ecx], edx; pop ebx; ret; 
0x00041130: mov dword ptr [ecx], edx; shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x0007eaf2: mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00033c76: mov dword ptr [ecx], esi; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0008ee31: mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000b8abd: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000b8afb: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x000b743e: mov dword ptr [edi + 0x10], ecx; mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000b73dd: mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b7505: mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b8bc7: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000b8c15: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000b74e7: mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x0008dc5f: mov dword ptr [edi + 0x214], 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x00129c29: mov dword ptr [edi + 0x46cc], ecx; pop ebx; pop esi; pop edi; ret; 
0x0016ed1c: mov dword ptr [edi + 0x54], edx; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x000b8adb: mov dword ptr [edi + 0xf], ecx; lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000b73fb: mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b8977: mov dword ptr [edi + 3], edx; lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000b72a7: mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x00139eda: mov dword ptr [edi + 4], edx; mov dword ptr [edi + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x000b7299: mov dword ptr [edi + 4], edx; pop edi; pop esi; pop ebx; ret; 
0x00095187: mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x000b730b: mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x001095e2: mov dword ptr [edi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00139edd: mov dword ptr [edi + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x000b89cd: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000b8a0b: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x000b72ed: mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0008f319: mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000b7600: mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x0008ee3e: mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00053158: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x00096124: mov dword ptr [edi], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00053161: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x000b7267: mov dword ptr [edi], ecx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000b7285: mov dword ptr [edi], ecx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000b72a5: mov dword ptr [edi], ecx; mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000b7296: mov dword ptr [edi], ecx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000b88f4: mov dword ptr [edi], edx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000b8922: mov dword ptr [edi], edx; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x000b7620: mov dword ptr [edi], edx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000b7630: mov dword ptr [edi], edx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x0003ce00: mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b7254: mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0003e823: mov dword ptr [edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0008eb71: mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0007eaef: mov dword ptr [edx + 0x10], ebx; mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0003ffb1: mov dword ptr [edx + 0x10], ecx; mov dword ptr [edx + 0x14], ebx; pop ebx; pop esi; pop edi; ret; 
0x0003ffb4: mov dword ptr [edx + 0x14], ebx; pop ebx; pop esi; pop edi; ret; 
0x00175fc7: mov dword ptr [edx + 0x14], ecx; add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0003becc: mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0007ecb9: mov dword ptr [edx + 0x14], esi; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x0003bed2: mov dword ptr [edx + 0x18], eax; ret; 
0x0007bfaa: mov dword ptr [edx + 0x1a40], 0; ret; 
0x0007bfbf: mov dword ptr [edx + 0x1a44], eax; ret; 
0x0007bfa0: mov dword ptr [edx + 0x1a48], 0; mov dword ptr [edx + 0x1a40], 0; ret; 
0x00085bca: mov dword ptr [edx + 0x1a54], 0; ret; 
0x00085bdf: mov dword ptr [edx + 0x1a58], eax; ret; 
0x0008b26a: mov dword ptr [edx + 0x1a74], 0; ret; 
0x0008b27f: mov dword ptr [edx + 0x1a78], eax; ret; 
0x0008ccfa: mov dword ptr [edx + 0x1ac8], eax; ret; 
0x000975a2: mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0003cf03: mov dword ptr [edx + 0x1f0], eax; mov eax, ecx; ret; 
0x0003ceea: mov dword ptr [edx + 0x1f4], ecx; ret; 
0x000f9f68: mov dword ptr [edx + 0x20], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00111d70: mov dword ptr [edx + 0x20], esi; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0008cba2: mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x00111d73: mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x00111d76: mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0011e2f1: mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0009e615: mov dword ptr [edx + 0x388], eax; ret; 
0x0009e640: mov dword ptr [edx + 0x390], eax; ret; 
0x00098063: mov dword ptr [edx + 0x3af4], eax; xor eax, eax; ret; 
0x0009ae2c: mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0009b4bb: mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0011e2ee: mov dword ptr [edx + 0x3c], edi; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x00114069: mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x00115a49: mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00087242: mov dword ptr [edx + 0x88], ecx; pop ebx; pop esi; pop edi; ret; 
0x0008d6e5: mov dword ptr [edx + 0x924], 0; ret; 
0x000591c5: mov dword ptr [edx + 0xc], eax; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret 4; 
0x00170af7: mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x00175fcc: mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0003becf: mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x000be2a0: mov dword ptr [edx + 0xc], ecx; add byte ptr [ecx + 0x107dd0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b33c7: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b34f7: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000bd78a: mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefe7: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000af117: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x00111d86: mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x00111d26: mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x000b33a9: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000b34e9: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b7b48: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; pop edi; ret; 
0x000b7d97: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; ret; 
0x000b7c47: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b7da7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b6607: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b6767: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b7dc7: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b6787: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b7ca7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b7e07: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b6667: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b67c7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd76c: mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefd9: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000a974a: mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000af109: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00059f57: mov dword ptr [edx + 4], eax; ret; 
0x00123f8d: mov dword ptr [edx + 4], eax; test eax, eax; je 0x123f96; mov dword ptr [eax], edx; ret; 
0x00097bfd: mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000a9855: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a9795: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x001093d5: mov dword ptr [edx + 4], ecx; mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00194b19: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0005a72f: mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x000b341b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b355b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000bd7fe: mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000af03b: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000af17b: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00059f39: mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x000b6184: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b330b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b357b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b512b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b33fd: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; pop edi; ret; 
0x000b353d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; ret; 
0x0008d4ea: mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x000bd7e0: mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d3b: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef4b: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b1cb4: mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000af15d: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00059e6e: mov dword ptr [edx + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00093a48: mov dword ptr [edx + 8], ecx; cmp eax, 0x21; jne 0x93a54; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000f8c12: mov dword ptr [edx + eax*4], edi; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0018cf2a: mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0018c0af: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c0b6: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f29d: mov dword ptr [edx - 2], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019128d: mov dword ptr [edx - 2], ecx; mov eax, edx; pop ebx; ret; 
0x0018c0d6: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f331: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191321: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0018c072: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911b9: mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0018f165: mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191165: mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00176002: mov dword ptr [edx - 4], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0018c092: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f1b6: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911b6: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0018c0b2: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001207e5: mov dword ptr [edx - 7], ebx; call dword ptr [edx - 0x77]; 
0x00163c8f: mov dword ptr [edx - 7], esi; call dword ptr [eax + 0x6a]; 
0x00163cc3: mov dword ptr [edx - 7], esi; jmp dword ptr [ebp - 0x75]; 
0x0018c06f: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c08f: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00082c3b: mov dword ptr [edx], 0; pop ebx; pop esi; pop edi; ret; 
0x00059f40: mov dword ptr [edx], 0; ret; 
0x000b5265: mov dword ptr [edx], 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00111d20: mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x0008e7be: mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x001893f9: mov dword ptr [edx], eax; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0008c1f2: mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003bc88: mov dword ptr [edx], eax; add esp, 4; ret; 
0x000b3364: mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x000b34a4: mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000b6262: mov dword ptr [edx], eax; lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a9834: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000b3292: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000b34c2: mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000a9848: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000b50bf: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000a9858: mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a986c: mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000b3374: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b34b4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000aefb4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000af0d4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b34d2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000af0f2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b34e2: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000af102: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0008d71f: mov dword ptr [edx], eax; mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x00060451: mov dword ptr [edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0009d5a9: mov dword ptr [edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c449: mov dword ptr [edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00024f04: mov dword ptr [edx], eax; mov eax, 0xffffffff; ret; 
0x0005f72f: mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000b33c2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b34f2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000aefe2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000af112: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b6752: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000bd707: mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0ccf: mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aeed2: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a9774: mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b1d82: mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000af0c4: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x001728b7: mov dword ptr [edx], eax; ret; 
0x00040400: mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008e69e: mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00153396: mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0018cf24: mov dword ptr [edx], ebx; mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000e496c: mov dword ptr [edx], ebx; pop ebx; ret; 
0x000d103f: mov dword ptr [edx], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000ed746: mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007f628: mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00123f79: mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x001917a4: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018f804: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007e920: mov dword ptr [edx], ecx; pop ebx; ret; 
0x00040118: mov dword ptr [edx], ecx; ret; 
0x0007db21: mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x000e7092: mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a9811: mov dword ptr [edx], esi; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a9761: mov dword ptr [edx], esi; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a9759: mov dword ptr [edx], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0005a92a: mov dword ptr [esi + 0x10], eax; mov dword ptr [esi + 0x18], edx; pop ebx; pop esi; pop edi; ret; 
0x001763f2: mov dword ptr [esi + 0x10], eax; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0009ae54: mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0009aed3: mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x00107b17: mov dword ptr [esi + 0x14], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011285a: mov dword ptr [esi + 0x14], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00165b9f: mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005a92d: mov dword ptr [esi + 0x18], edx; pop ebx; pop esi; pop edi; ret; 
0x001319a8: mov dword ptr [esi + 0x20], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000ffb43: mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x00089453: mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008af5b: mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0007f394: mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000838e0: mov dword ptr [esi + 0xa4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00082ad0: mov dword ptr [esi + 0xa4], edx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00156420: mov dword ptr [esi + 0xc], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00168198: mov dword ptr [esi + 0xc], eax; push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00040043: mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00077bff: mov dword ptr [esi + 4], eax; mov dword ptr [esi + 8], eax; pop ebx; pop esi; pop edi; ret; 
0x0008aeb1: mov dword ptr [esi + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0011f5e6: mov dword ptr [esi + 4], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001743b3: mov dword ptr [esi + 8], 1; push 0; push edi; call dword ptr [eax + 0x14]; 
0x000871cb: mov dword ptr [esi + 8], eax; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x00077c02: mov dword ptr [esi + 8], eax; pop ebx; pop esi; pop edi; ret; 
0x0003e79f: mov dword ptr [esi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00176185: mov dword ptr [esi + esi*8 + 0x5089ffff], ebp; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x000898e0: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0007fecd: mov dword ptr [esi], eax; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00152597: mov dword ptr [esi], edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00152647: mov dword ptr [esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0018499f: mov dword ptr [esi], edx; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000542c7: mov dword ptr [esi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00121aaf: mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00063491: mov dword ptr [esp + 0x10], 0; jmp edx; 
0x00063449: mov dword ptr [esp + 0x10], 1; jmp edx; 
0x0015465b: mov dword ptr [esp + 0x10], eax; call 0x180100; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0012d060: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cfae: mov dword ptr [esp + 0x10], ebx; mov ebx, 0xa; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d66e: mov dword ptr [esp + 0x10], ebx; mov ebx, 9; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008bcc1: mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x001687ec: mov dword ptr [esp + 0x10], edx; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008bbd9: mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0016a5cb: mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x000813fb: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0017567f: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x001756b8: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0007fbb9: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007fa69: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x000e5e52: mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x000d8219: mov dword ptr [esp + 0x13c], edi; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000d8729: mov dword ptr [esp + 0x13c], edx; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0006f738: mov dword ptr [esp + 0x14], 0; jmp edx; 
0x0006faf8: mov dword ptr [esp + 0x14], 1; jmp edx; 
0x0012d068: mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012dd06: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d88f: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012c99e: mov dword ptr [esp + 0x14], ebx; mov ebx, 0x12; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008bbd5: mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000e4d34: mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0016b1ae: mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00052662: mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00093e85: mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000e4d2b: mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0012c9a7: mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012e602: mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012df69: mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012da81: mov dword ptr [esp + 0x18], edi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011ee84: mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00112248: mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000704c4: mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00063df2: mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x000dbd4c: mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4ec: mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0006f175: mov dword ptr [esp + 0x20], 1; jmp edx; 
0x0003d251: mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x001802bb: mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0012da1f: mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x00174fec: mov dword ptr [esp + 0x20], edx; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x000632b8: mov dword ptr [esp + 0x24], 0; jmp eax; 
0x000704d4: mov dword ptr [esp + 0x24], 1; jmp eax; 
0x000646e0: mov dword ptr [esp + 0x24], 1; mov edi, ecx; jmp edx; 
0x0017319d: mov dword ptr [esp + 0x24], 5; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012da16: mov dword ptr [esp + 0x24], eax; mov eax, 0x66; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x0011e88d: mov dword ptr [esp + 0x24], eax; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d8bf9: mov dword ptr [esp + 0x24], ebx; push ebp; push dword ptr [esp + 0x34]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x00040f60: mov dword ptr [esp + 0x24], edx; call eax; 
0x0012d936: mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000704f4: mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00064768: mov dword ptr [esp + 0x28], 1; mov edi, ecx; jmp edx; 
0x0012d93a: mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001119cf: mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0009b989: mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00172ffe: mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000635b7: mov dword ptr [esp + 0x2c], 1; mov edi, ecx; jmp edx; 
0x0015cb3f: mov dword ptr [esp + 0x2c], eax; call 0x180100; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0009b9bf: mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000985a4: mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0009dcef: mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0006ee5b: mov dword ptr [esp + 0x30], 0; jmp ebx; 
0x00070504: mov dword ptr [esp + 0x30], 1; jmp eax; 
0x000985af: mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012cc8b: mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cdb1: mov dword ptr [esp + 0x30], eax; mov eax, 0x66; mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x00070574: mov dword ptr [esp + 0x34], 1; jmp eax; 
0x0009dcf3: mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0012cd2b: mov dword ptr [esp + 0x34], eax; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d88d6: mov dword ptr [esp + 0x34], eax; push eax; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000c431d: mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x00172f8e: mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000c1c3f: mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0012cdba: mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x000647c0: mov dword ptr [esp + 0x38], 1; mov edi, ecx; jmp edx; 
0x0012cd33: mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cdbe: mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x0012cc87: mov dword ptr [esp + 0x38], edi; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006f320: mov dword ptr [esp + 0x3c], 0; jmp edx; 
0x00070514: mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x000646f0: mov dword ptr [esp + 0x3c], 1; mov edi, ecx; jmp edx; 
0x00064758: mov dword ptr [esp + 0x40], 1; mov edi, ecx; jmp edx; 
0x00064059: mov dword ptr [esp + 0x44], 0; jmp edx; 
0x00064720: mov dword ptr [esp + 0x44], 1; mov edi, ecx; jmp edx; 
0x0009d3b5: mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x0006f79e: mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0011ef9c: mov dword ptr [esp + 0x4c], edx; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0011e813: mov dword ptr [esp + 0x4c], esi; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001125e2: mov dword ptr [esp + 0x5c], esi; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00129654: mov dword ptr [esp + 0x68], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012965e: mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001099c4: mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00109c66: mov dword ptr [esp + 0xac], edi; call dword ptr gs:[0x10]; 
0x001099d0: mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000a46c6: mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x000e5003: mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00125235: mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125ad5: mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0012d23c: mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000e4fcd: mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0012d1fe: mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012ca4e: mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011b556: mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003d080: mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d038: mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0009d96f: mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9af: mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009d6ef: mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009d72f: mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00024e22: mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0007ab15: mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0008bc38: mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00091747: mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x00175ac7: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0017517f: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0003b542: mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0010898c: mov dword ptr [esp + 0xc], edx; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00033aaf: mov dword ptr [esp + 4], eax; call edx; 
0x00054461: mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000544db: mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0016d572: mov dword ptr [esp + 4], eax; jmp edx; 
0x0012c8fc: mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00111aad: mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012cea6: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cad5: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d7d3: mov dword ptr [esp + 4], ebx; mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d5c3: mov dword ptr [esp + 4], ebx; mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006f6f1: mov dword ptr [esp + 4], ecx; jmp eax; 
0x000705fa: mov dword ptr [esp + 4], ecx; jmp edx; 
0x000e4e3b: mov dword ptr [esp + 4], ecx; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000704c0: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x000704d0: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x000704f0: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00070500: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00070570: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x34], 1; jmp eax; 
0x00070510: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x0006f79a: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0006f937: mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00175ca7: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00175c7f: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0017fabf: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0016adcf: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0008cb59: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0007ac0e: mov dword ptr [esp + 4], edx; jmp eax; 
0x0003bbdb: mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0016897c: mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x000e4e43: mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0010b1c7: mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0011b900: mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011c6a0: mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011c6e6: mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0012cadd: mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012deba: mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012dfba: mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00111c15: mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012ca46: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001254fd: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125d9d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f837d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f851d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012c8f3: mov dword ptr [esp + 8], ebx; mov ebx, 5; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017fec0: mov dword ptr [esp + 8], ecx; call eax; 
0x0016d56e: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00175ca3: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00175c7b: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016adcb: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016adf3: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0003b8d3: mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00092ff5: mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007ab1f: mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00181bf9: mov dword ptr [esp], eax; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001718dd: mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0009e3c9: mov dword ptr [esp], eax; call esi; 
0x00054498: mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0012d500: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009bc43: mov dword ptr [esp], ebp; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x0015d81c: mov dword ptr [esp], ebp; call ebx; 
0x0015d47e: mov dword ptr [esp], ebp; call edi; 
0x00025ea0: mov dword ptr [esp], ebp; call esi; 
0x00026f78: mov dword ptr [esp], ebx; call edi; 
0x00026029: mov dword ptr [esp], ebx; call esi; 
0x0014d8f6: mov dword ptr [esp], ebx; mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x000261a0: mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0002684a: mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00060a10: mov dword ptr [esp], ebx; sub esp, 8; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x001699a1: mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x000544d8: mov dword ptr [esp], edx; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00168a00: mov dword ptr [esp], edx; sub esp, 8; lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x00168a1c: mov dword ptr [esp], edx; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x000fa1d6: mov dword ptr [esp], esi; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016865f: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0002f33a: mov dword ptr [esp], esi; call ebx; 
0x0009bc4b: mov dword ptr [esp], esi; call edi; 
0x0015cb48: mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00137342: mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000c431c: mov dword ptr fs:[esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c1c3e: mov dword ptr fs:[esp + 0x34], edx; push eax; push ebp; call esi; 
0x0008cb2b: mov dword ptr gs:[0x78], eax; ret; 
0x0008d4ed: mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0008caf4: mov dword ptr gs:[0x7c], eax; ret; 
0x0008cbc3: mov dword ptr gs:[0x7c], edx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8cbd8; ret; 
0x0008cba5: mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x00099606: mov dword ptr gs:[eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x001228fe: mov dword ptr gs:[eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x001383e6: mov dword ptr gs:[eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c1e6: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003cbc6: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c186: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x00114076: mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x0007ad31: mov dword ptr gs:[eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a36b6: mov dword ptr gs:[eax], 0x16; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00182dfe: mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x0003b499: mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0003bb27: mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x0003cca0: mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0014440d: mov dword ptr gs:[eax], 0x61; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0009995e: mov dword ptr gs:[eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x0011f676: mov dword ptr gs:[eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x000e617e: mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00120eee: mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x000257b6: mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00082f36: mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x0013b9ec: mov dword ptr gs:[ebp], edx; mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0007236c: mov dword ptr gs:[ecx], eax; cmp ebx, 0x53; ja 0x72463; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x722c8]; jmp eax; 
0x00034568: mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0003e822: mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x001893f8: mov dword ptr gs:[edx], eax; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0015214c: mov dword ptr gs:[edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00060450: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0009d5a8: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c448: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00024f03: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x001728b6: mov dword ptr gs:[edx], eax; ret; 
0x00152596: mov dword ptr gs:[esi], edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00152646: mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000be343: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf10: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7250: mov dx, word ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00109c5e: mov eax, 0; add byte ptr [eax], al; add byte ptr [ecx + 0xac24bc], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00097c46: mov eax, 0; cmova eax, edx; ret; 
0x0019f5f2: mov eax, 0; jne 0x19fd70; pop ebx; ret; 
0x0019f42b: mov eax, 0; jne 0x19fd86; pop ebx; ret; 
0x001a0d6a: mov eax, 0; jne 0x1a0fb0; pop ebx; ret; 
0x001a2424: mov eax, 0; jne 0x1a2650; pop ebx; ret; 
0x001a24e1: mov eax, 0; jne 0x1a2670; pop ebx; ret; 
0x0011bf0f: mov eax, 0; pop edi; cmova eax, edx; ret; 
0x000d8028: mov eax, 0x1000000; ret 0x848b; 
0x0012a4b7: mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012a474: mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126747: mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001397e5: mov eax, 0x1024448b; pop ebx; pop esi; pop edi; ret; 
0x0009db97: mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0009e0fe: mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009df44: mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0009de98: mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009ddba: mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0009ddeb: mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000e4e47: mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e4d2f: mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000e4b7f: mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00098770: mov eax, 0x10; add esp, 0xc; ret; 
0x0009863f: mov eax, 0x10; cmove eax, ecx; ret; 
0x00168803: mov eax, 0x10; pop ebx; pop esi; ret; 
0x000975b8: mov eax, 0x10; pop ebx; ret; 
0x0004239f: mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x001a4a6a: mov eax, 0x10; pop edi; ret; 
0x000e4941: mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000e4a24: mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000e5007: mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e4f61: mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008df07: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0009d497: mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009dae8: mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0009d977: mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d921: mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d6f7: mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009d6a1: mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009d2d4: mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010b1cb: mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00129c00: mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0010b185: mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012a87b: mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012a87b: mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12a890; ret; 
0x0012befd: mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0012bf4a: mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0011b904: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011de8b: mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011b8b9: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9af: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011bb3d: mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bc33: mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011b78d: mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011b832: mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00111907: mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011243e: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0012a81d: mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0011d51d: mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011b287: mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0011d02d: mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0011c912: mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0011179e: mov eax, 0x132; call dword ptr gs:[0x10]; 
0x001115d7: mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0011c6a4: mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011c64e: mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0003d727: mov eax, 0x135; xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x0012c286: mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00090ea0: mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0012b467: mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012b424: mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012ba07: mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012b9c4: mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00110e34: mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011d72f: mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012c2ca: mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012b7a6: mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012b828: mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012b53c: mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0012a52a: mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0012bd76: mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000ed8e0: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ed8e0: mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0011133d: mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0011bdfa: mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0011bdac: mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0012bf26: mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00125239: mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001254cc: mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001251f4: mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00125ad9: mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00125d6c: mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125a94: mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000985b3: mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012d188: mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012c2fa: mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012ada9: mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0011ee7d: mov eax, 0x154; xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012c337: mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012ab4b: mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0012ab13: mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00129662: mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001271c6: mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012d737: mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0012d6f4: mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012bfb7: mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c36a: mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00060487: mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0003fcdb: mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0009f257: mov eax, 0x163; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x0003fca3: mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fb76: mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0012c39a: mov eax, 0x164; call dword ptr gs:[0x10]; 
0x000e811a: mov eax, 0x166; lea ecx, [ebp - 0x6c324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0008eba4: mov eax, 0x16; cmp edx, 0x3fff; ja 0x8ebb8; ret; 
0x0008ea68: mov eax, 0x16; cmp edx, 2; jbe 0x8ea78; ret; 
0x0008e5ef: mov eax, 0x16; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a44a3: mov eax, 0x16; pop ebx; pop esi; ret; 
0x0008ecb0: mov eax, 0x16; pop ebx; ret; 
0x00096140: mov eax, 0x16; pop esi; pop edi; ret; 
0x0008e9a0: mov eax, 0x16; ret; 
0x0008e246: mov eax, 0x16; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0012a9cd: mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012ac33: mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0012c3ca: mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012c3f6: mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x00091054: mov eax, 0x182; xor edx, edx; call dword ptr gs:[0x10]; 
0x000e4b64: mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e4cc2: mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e4927: mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000e4fd1: mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e4f02: mov eax, 0x197; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0009defb: mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009e06e: mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0012b706: mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0011d675: mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011c6ea: mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0011c5df: mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x0012d202: mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012d102: mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0009d9b7: mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009d8a8: mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d737: mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0009d622: mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012e994: mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0003d086: mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003cf6e: mov eax, 0x1a5; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008d3f9: mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012c162: mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x001259e4: mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012c09d: mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012c037: mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012be3a: mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012bdd7: mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012be0d: mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be6d: mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0012c0ca: mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00129c79: mov eax, 0x1b3; int 0x80; 
0x0011105d: mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00109f15: mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012c0fd: mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0012c197: mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x000e71b6: mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0012bff7: mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012c1ca: mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x00111743: mov eax, 0x1c4; call dword ptr gs:[0x10]; 
0x000d06a0: mov eax, 0x1d4458b; ret 0x1689; 
0x000f8269: mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000f7de6: mov eax, 0x20; cmp dword ptr gs:[edx], 0x26; je 0xf7ddb; mov eax, 0xffffffff; ret; 
0x000f7e46: mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x0004230d: mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00110ebc: mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001271a0: mov eax, 0x24; call dword ptr gs:[0x10]; 
0x001271a0: mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003c3ea: mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000603cc: mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b73c: mov eax, 0x27; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011c93c: mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001112c6: mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0010ac91: mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f64c: mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b1be4: mov eax, 0x2efffff0; lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x0019175a: mov eax, 0x3000430; sbb al, 0x8b; jmp ebx; 
0x0018ff5a: mov eax, 0x3000448; sbb al, 0x8b; jmp ebx; 
0x0018e9da: mov eax, 0x300045b; sbb al, 0x8b; jmp ebx; 
0x0011f506: mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0012b95c: mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011e89b: mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011e8c3: mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x0011eb3f: mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00108d5a: mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0006c408: mov eax, 0x39fffffb; ret 0x2074; 
0x00069019: mov eax, 0x39fffffb; ret 0x840f; 
0x000672ea: mov eax, 0x39fffffb; ret; 
0x0011d4b6: mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0011d4b6: mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011f6c6: mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00128fbc: mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x001112ec: mov eax, 0x3f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ed8f0: mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ed8f0: mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000421d9: mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000f7ec8: mov eax, 0x40; ret; 
0x000ed8d0: mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000ed8d0: mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x00108ef0: mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000a9bdd: mov eax, 0x450ffff6; ret 0x66c3; 
0x00126f7a: mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0009b527: mov eax, 0x4c8b0019; and al, 4; mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9b547; ret; 
0x0011edec: mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005336e: mov eax, 0x4f8d0103; add al, 0xf; xchg edx, eax; ret 0x789; 
0x000d92ac: mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0011cfdc: mov eax, 0x53; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001a9fda: mov eax, 0x550bfa09; mov ah, 0x89; ret 0x950f; 
0x0012c2a6: mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0012717a: mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0012519a: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00127d7c: mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120b3c: mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001116da: mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0008eaa0: mov eax, 0x5f; cmovne eax, edx; ret; 
0x0011f3fc: mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f44d: mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012925d: mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012c900: mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012da1a: mov eax, 0x66; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x0012cdb5: mov eax, 0x66; mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x0012bf7d: mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000dbee4: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000dc050: mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x000aae89: mov eax, 0x68fff9aa; ret; 
0x0012bb98: mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012a918: mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012a6af: mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00129286: mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00129126: mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012bc66: mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0010aff3: mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0010aeb1: mov eax, 0x72; mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0010af9f: mov eax, 0x72; mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x00127156: mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00024b88: mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b130370], ecx; jmp dword ptr [ebp + 0x33]; 
0x0012c266: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0012debe: mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012dfbe: mov eax, 0x75; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012de74: mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012e100: mov eax, 0x75; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0018b8b6: mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012e150: mov eax, 0x75; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012ecdb: mov eax, 0x75; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00120a9e: mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0003c209: mov eax, 0x77; int 0x80; 
0x000e7113: mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00129a8b: mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00126cfa: mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010acf6: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012bc3d: mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0012505d: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0003fb1a: mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003bc24: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0012bd1d: mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00139fc3: mov eax, 0x7fffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000420dd: mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x000420fb: mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x0012bec7: mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00182b61: mov eax, 0x81000001; ret 0x42af; 
0x0016fc61: mov eax, 0x81000130; ret 0x71af; 
0x0016c061: mov eax, 0x8100016c; ret 0xadaf; 
0x00153d61: mov eax, 0x810002ef; ret 0x30af; 
0x00143761: mov eax, 0x810003f5; ret 0x36af; 
0x0012a961: mov eax, 0x81000583; ret 0xc4af; 
0x00124561: mov eax, 0x810005e7; ret 0x28af; 
0x000cfe61: mov eax, 0x81000b2e; ret 0x6faf; 
0x000a6f61: mov eax, 0x81000dbd; ret 0xfeaf; 
0x000a6e61: mov eax, 0x81000dbe; ret 0xffaf; 
0x0009cf61: mov eax, 0x81000e5d; ret 0x9eaf; 
0x00052761: mov eax, 0x81001305; ret 0x46af; 
0x00033b61: mov eax, 0x810014f1; ret 0x32af; 
0x0012bd4d: mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00192f5d: mov eax, 0x81fffefd; ret; 
0x0019285d: mov eax, 0x81ffff04; ret; 
0x0019245d: mov eax, 0x81ffff08; ret; 
0x00190e5d: mov eax, 0x81ffff1e; ret; 
0x0018ee5d: mov eax, 0x81ffff3e; ret; 
0x00185461: mov eax, 0x81ffffd8; ret 0x19af; 
0x0012be96: mov eax, 0x82; call dword ptr gs:[0x10]; 
0x00169a73: mov eax, 0x83000002; ret; 
0x0012c242: mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00067355: mov eax, 0x83fffffb; in al, dx; or al, 0x29; ret; 
0x0006bc0f: mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x000ed8b6: mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001116b6: mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012bc8a: mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012abb6: mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012abb6: mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0003d24d: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00093cd2: mov eax, 0x89000000; ret 0xe281; 
0x0015cb44: mov eax, 0x89000235; xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0005c640: mov eax, 0x8910c483; ret 0x458b; 
0x00166115: mov eax, 0x8910c483; ret; 
0x000d4c30: mov eax, 0x89ffffc9; popfd; mov esp, 0xe9ffffc9; cmp esp, 0xa40fffff; ret 0xc102; 
0x00067360: mov eax, 0x89fffffb; lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00068846: mov eax, 0x89fffffb; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0008861e: mov eax, 0x8b000000; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000cbdc4: mov eax, 0x8bfff67f; jl 0xcbdef; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0006886f: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x00068d18: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00068b79: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x000673e8: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x0006700f: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x0006737d: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0011b55a: mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00027f17: mov eax, 0x8d0cec83; test dword ptr [eax + 0x39], edi; stc; call dword ptr [edi - 1]; 
0x00058de6: mov eax, 0x8dffffc9; xchg byte ptr [eax + ecx*4], bl; stc; call dword ptr [eax - 0x73]; 
0x00058e30: mov eax, 0x8dffffc9; xchg byte ptr [eax - 0x78], dh; stc; call dword ptr [eax - 0x73]; 
0x00058d01: mov eax, 0x8dffffc9; xchg dword ptr [eax - 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x00111eda: mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x001250db: mov eax, 0x90; call dword ptr gs:[0x10]; 
0x001250a3: mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012667b: mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00126643: mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00085120: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00143842: mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0012f41b: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0012f3aa: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0012f55d: mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x00129163: mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00081242: mov eax, 0x931c828d; stc; call dword ptr [eax - 0x73]; 
0x000ed966: mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0012056e: mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0012463a: mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0012514a: mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00124666: mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00125170: mov eax, 0x99; call dword ptr gs:[0x10]; 
0x00108baa: mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00091b71: mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00103229: mov eax, 0x9c249c89; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x00090ccf: mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00108916: mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00091f29: mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009a210: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009a210: mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00108936: mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x00108956: mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x001089d4: mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0012aa7a: mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001292aa: mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012c207: mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011be7b: mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011be43: mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000a2a83: mov eax, 0xa950878d; stc; call dword ptr [eax - 0x73]; 
0x0012c06d: mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x0011d4dc: mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012ad07: mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012b25a: mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0003c200: mov eax, 0xad; int 0x80; 
0x0003c298: mov eax, 0xae; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c33f: mov eax, 0xae; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00090f8c: mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009b984: mov eax, 0xaf; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001099cb: mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00092ff0: mov eax, 0xaf; mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00090ef1: mov eax, 0xaf; mov ebx, 2; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0009bc2b: mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000920ef: mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003c41c: mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003d03e: mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0003cfe5: mov eax, 0xb1; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003d255: mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003c4b0: mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003c47e: mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000f8385: mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f834d: mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f8525: mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f84ed: mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011a83a: mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011173f: mov eax, 0xb8000000; les eax, ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a49e2: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0011179a: mov eax, 0xb8000000; xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bcba: mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001377ae: mov eax, 0xb990828d; stc; call dword ptr [eax - 0x73]; 
0x0012bcea: mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x000e7b7d: mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0003ca0a: mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0010ad11: mov eax, 0xbe; int 0x80; 
0x0010ad11: mov eax, 0xbe; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011ed9c: mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dc0ba: mov eax, 0xc189051e; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xdc0d0; mov eax, edx; ret; 
0x0012bb6a: mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012bbec: mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00037976: mov eax, 0xc483fffe; sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00027841: mov eax, 0xc483ffff; or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x210ff37d]; call dword ptr [eax - 0x73]; 
0x0012a8ea: mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012a96c: mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a67a: mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0012a70c: mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011b1fd: mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ed980: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000ed980: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000ec920: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ec920: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000ec910: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ec910: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x00110f06: mov eax, 0xc; call dword ptr gs:[0x10]; 
0x001a4a36: mov eax, 0xc; pop edi; ret; 
0x0008e1e4: mov eax, 0xc; pop esi; pop edi; ret; 
0x000ec900: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ec900: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0012706c: mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00126fcc: mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000ec93a: mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00108cdc: mov eax, 0xce; call dword ptr gs:[0x10]; 
0x001118cd: mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x00108e71: mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00126e22: mov eax, 0xd0; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000ed93d: mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x00108dc1: mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00126d52: mov eax, 0xd2; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000ed90d: mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f7d: mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00108f39: mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00108c49: mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0012b1c6: mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012b1c6: mov eax, 0xd7; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012b1a6: mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012b1a6: mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012c12a: mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x001243ed: mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0012431d: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000f8300: mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e5de3: mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000e5c3a: mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000fe961: mov eax, 0xdd048d; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x001119d3: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011dc30: mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00111bd8: mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00111a2e: mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x000930a8: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0012c410: mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x001270f7: mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241c7: mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x001206a7: mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001226d2: mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00124002: mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00120612: mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012402d: mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0004f5c1: mov eax, 0xe9000000; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x0012405d: mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0012063d: mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0012677a: mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0008b56e: mov eax, 0xec83001a; or byte ptr [ebx - 0xe7dbbc], cl; je 0x8b59f; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0012408a: mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0012066a: mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000c1396: mov eax, 0xf00003c; inc esp; ret 0xff50; 
0x0008e001: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000903ce: mov eax, 0xf0; mov ebx, dword ptr [esp]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093686: mov eax, 0xf0; mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00094437: mov eax, 0xf0; mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009631f: mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008d5a4: mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009be37: mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000910e2: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x000963bc: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008dd8e: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00093e79: mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00095dd0: mov eax, 0xf0; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x001854b6: mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000958c5: mov eax, 0xf0; mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009558c: mov eax, 0xf0; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009658d: mov eax, 0xf0; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097785: mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00094988: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009696f: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fb6c: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fe43: mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095b42: mov eax, 0xf0; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f5b3: mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fa68: mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008f8d9: mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096945: mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d618: mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0009330a: mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008fb0a: mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008ed19: mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000934c4: mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008d454: mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00091150: mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008db55: mov eax, 0xf0; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008ed88: mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f57f: mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000987f0: mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00090c7f: mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000923f7: mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00110f2c: mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012a0cc: mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012bda2: mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000f7dce: mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf7e40; ret; 
0x0005cea3: mov eax, 0xfff89ee9; call dword ptr [eax + 0x52]; 
0x00164cb7: mov eax, 0xfffdb5e9; dec dword ptr [ebx + 0x39202444]; ret 0x1074; 
0x000d490c: mov eax, 0xfffffc9; xchg ebp, eax; ret 0xb60f; 
0x0010acda: mov eax, 0xfffffff2; pop ebx; ret; 
0x000e80a6: mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000257bd: mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00129b31: mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x0013cfc4: mov eax, 0xffffffff; cmp byte ptr [edx + 2], 0; jne 0x13cfd5; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0008a170: mov eax, 0xffffffff; mov edx, eax; ret; 
0x0002f20f: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00060453: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003c1ed: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c44b: mov eax, 0xffffffff; pop ebx; ret; 
0x0005a7e6: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00024f06: mov eax, 0xffffffff; ret; 
0x0005a95f: mov eax, 1; add esp, 0xc; ret; 
0x0012089f: mov eax, 1; add esp, 8; pop ebx; ret; 
0x0009d114: mov eax, 1; call 0x9d080; mov dword ptr [esp], esi; call ebx; 
0x00129aa8: mov eax, 1; call dword ptr gs:[0x10]; 
0x000f7f46: mov eax, 1; cmp dword ptr gs:[edx], 0x26; je 0xf7f62; mov eax, 0xffffffff; ret; 
0x001981b0: mov eax, 1; ja 0x1981b9; neg eax; ret; 
0x001999f0: mov eax, 1; ja 0x1999f9; neg eax; pop ebp; ret; 
0x0019edf0: mov eax, 1; ja 0x19edf9; neg eax; ret; 
0x0019f0e0: mov eax, 1; ja 0x19f0e9; neg eax; pop ebp; ret; 
0x0019f2a0: mov eax, 1; ja 0x19f2a9; neg eax; ret; 
0x0019fd87: mov eax, 1; ja 0x19fd90; neg eax; ret; 
0x001a0ff8: mov eax, 1; ja 0x1a1001; neg eax; ret; 
0x001a2671: mov eax, 1; ja 0x1a267a; neg eax; ret; 
0x001a0c86: mov eax, 1; jg 0x1a0c90; neg eax; ret; 
0x001a0fb1: mov eax, 1; jg 0x1a0fc0; neg eax; ret; 
0x001a50b1: mov eax, 1; jg 0x1a50c0; neg eax; ret; 
0x000d6cd0: mov eax, 1; jg 0xd6cd9; neg eax; ret; 
0x00175f9c: mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x000c04e7: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0007b4d0: mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0005aa63: mov eax, 1; pop ebx; pop esi; ret; 
0x00124e46: mov eax, 1; pop ebx; ret; 
0x00052f98: mov eax, 1; pop esi; pop edi; ret; 
0x0005f731: mov eax, 1; ret; 
0x0016e322: mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x000f821f: mov eax, 1; test ecx, ecx; js 0xf8230; ret; 
0x00149a63: mov eax, 1; xor eax, 1; pop ebx; ret; 
0x000420a0: mov eax, 1; xor edx, edx; pop ebx; ret; 
0x00182a00: mov eax, 2; add esp, 0xc; ret; 
0x00042011: mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00041ff1: mov eax, 2; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x000420c2: mov eax, 2; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0016a5b2: mov eax, 2; pop ebx; pop esi; ret; 
0x000d6f00: mov eax, 2; ret; 
0x00092350: mov eax, 3; add esp, 0xc; ret; 
0x0011c84b: mov eax, 3; call dword ptr gs:[0x10]; 
0x000e4959: mov eax, 3; cmovne eax, edx; ret; 
0x0011c813: mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000929e8: mov eax, 3; ret; 
0x001829f4: mov eax, 4; add esp, 0xc; ret; 
0x0011d8eb: mov eax, 4; call dword ptr gs:[0x10]; 
0x0011d8b3: mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001a498d: mov eax, 4; pop edi; ret; 
0x000d6f20: mov eax, 4; ret; 
0x00137363: mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x0010b570: mov eax, 5; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d6f30: mov eax, 5; ret; 
0x00110fbe: mov eax, 6; call dword ptr gs:[0x10]; 
0x0013b407: mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0013b9f0: mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0009cf6c: mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d6f40: mov eax, 6; ret; 
0x000d6f50: mov eax, 7; ret; 
0x001829e0: mov eax, 8; add esp, 0xc; ret; 
0x00111212: mov eax, 8; call dword ptr gs:[0x10]; 
0x0009e699: mov eax, 8; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x000422df: mov eax, 8; pop ebx; sub eax, edx; ret; 
0x001a49e6: mov eax, 8; pop edi; ret; 
0x0011b22c: mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00109381: mov eax, 9; pop esi; pop edi; ret; 
0x00173e67: mov eax, cs; stc; call dword ptr [edx + 0x6a]; 
0x0008ccd8: mov eax, dword ptr [0x448b001a]; and al, 4; cmp dword ptr [eax], 1; je 0x8cce8; ret; 
0x0008cc57: mov eax, dword ptr [0x548b001a]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc77: mov eax, dword ptr [0x548b001a]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc97: mov eax, dword ptr [0x548b001a]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008ccb7: mov eax, dword ptr [0x548b001a]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0010ad0c: mov eax, dword ptr [0x59c3fff1]; mov eax, 0xbe; int 0x80; 
0x000b133c: mov eax, dword ptr [0x5bfffffd]; ret; 
0x0009759d: mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000a9033: mov eax, dword ptr [0x6afff954]; add eax, 0x34838d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0016bc74: mov eax, dword ptr [0x81000170]; ret; 
0x000b8e88: mov eax, dword ptr [0x81000c9e]; shl dword ptr [eax + edx*8 + 0xc030010], 0x99; jmp ecx; 
0x000b7788: mov eax, dword ptr [0x81000cb5]; rol dword ptr [esi + 0x10], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00195d74: mov eax, dword ptr [0x81fffecf]; ret; 
0x00194d74: mov eax, dword ptr [0x81fffedf]; ret; 
0x00191a74: mov eax, dword ptr [0x81ffff12]; ret; 
0x00190c74: mov eax, dword ptr [0x81ffff20]; ret; 
0x0018ec74: mov eax, dword ptr [0x81ffff40]; ret; 
0x000a6896: mov eax, dword ptr [0x83000001]; ret 0xe901; 
0x0013b69b: mov eax, dword ptr [0x83000003]; ret; 
0x0009461b: mov eax, dword ptr [0x83ffff87]; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000ee87b: mov eax, dword ptr [0x89fffd1e]; ret; 
0x0005a95b: mov eax, dword ptr [0xb8fffffd]; add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0010894b: mov eax, dword ptr [0xc3fff1c5]; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x001534e4: mov eax, dword ptr [0xc483fff3]; adc byte ptr [ebp - 0x77], ah; pop ebx; pop esi; pop edi; ret; 
0x001634d9: mov eax, dword ptr [0xc483fff4]; adc byte ptr [ebp - 0x397bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x000f8260: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf8288; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000a64f5: mov eax, dword ptr [0xe580fff6]; add cl, byte ptr [ebp - 0x1773736e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00159ab5: mov eax, dword ptr [0xe8500000]; ret 0xf33a; 
0x000c1adb: mov eax, dword ptr [0xe8fff722]; cld; jae 0xc1aea; add byte ptr [ebp - 0x654477b], cl; call dword ptr [eax - 0x73]; 
0x000e7106: mov eax, dword ptr [8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00097c11: mov eax, dword ptr [8]; ret; 
0x00092d41: mov eax, dword ptr [8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0012fc7a: mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x00120f1f: mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x000813ff: mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0014d1b4: mov eax, dword ptr [eax + 0x10]; ret; 
0x00025fba: mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025fda: mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0002f38a: mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0008bbdd: mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00176324: mov eax, dword ptr [eax + 0x14]; ret; 
0x0005a1e8: mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x653a0; add esp, 0x1c; ret; 
0x0007eda8: mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x71620; add esp, 0x1c; ret; 
0x00033d4e: mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003292a: mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0008bc3d: mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x0013714c: mov eax, dword ptr [eax + 0x18]; ret; 
0x00145d4a: mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr gs:[eax]; ret; 
0x000c09f6: mov eax, dword ptr [eax + 0x1c8]; ret; 
0x0008c290: mov eax, dword ptr [eax + 0x1c]; add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x0008cb00: mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x00137327: mov eax, dword ptr [eax + 0x1c]; push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x00168672: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x168682; sub esp, 0xc; push esi; call eax; 
0x00168b25: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x168b35; sub esp, 0xc; push esi; call eax; 
0x00169a04: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x169a14; sub esp, 0xc; push edi; call eax; 
0x00169c0f: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x169ade; sub esp, 0xc; push esi; call eax; 
0x0016a668: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16a678; sub esp, 0xc; push esi; call eax; 
0x0016df56: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16df66; sub esp, 0xc; push esi; call eax; 
0x0016f3e3: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16f3f3; sub esp, 0xc; push esi; call eax; 
0x0016f59a: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16f5aa; sub esp, 0xc; push edi; call eax; 
0x001708b4: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x1708c4; sub esp, 0xc; push ebp; call eax; 
0x000c0a06: mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000344ea: mov eax, dword ptr [eax + 0x1d0]; add eax, dword ptr gs:[0]; ret; 
0x000c0a16: mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c0a26: mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c0a36: mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c0a46: mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c0a56: mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c0a66: mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c0a76: mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c0a86: mov eax, dword ptr [eax + 0x1ec]; ret; 
0x0003ceaa: mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003ce8a: mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0012fc80: mov eax, dword ptr [eax + 0x20]; ret; 
0x00120f25: mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0016a8e3: mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x000342d9: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034248: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0008cbca: mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8cbd8; ret; 
0x0016e120: mov eax, dword ptr [eax + 0x2c]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000342a9: mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034218: mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00173f60: mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008ae0a: mov eax, dword ptr [eax + 0x30]; test eax, eax; jne 0x8ae28; ret; 
0x000401d2: mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x00034458: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034438: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034418: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034398: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000343d8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034338: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000343b8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034378: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034278: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034358: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000343f8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034318: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0008b184: mov eax, dword ptr [eax + 0x34]; ret; 
0x00024b26: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b20; ret; 
0x00089ed7: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x89ed0; ret; 
0x00120e80: mov eax, dword ptr [eax + 0x35c]; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00120f08: mov eax, dword ptr [eax + 0x35c]; pop ebx; ret; 
0x00034478: mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00082f25: mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x82f30; ret; 
0x0017fab5: mov eax, dword ptr [eax + 0x3a0]; test eax, eax; je 0x17fad0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x000929aa: mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0009b52e: mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9b547; ret; 
0x00034488: mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00120f00: mov eax, dword ptr [eax + 0x3c]; pop ebx; ret; 
0x00041a1e: mov eax, dword ptr [eax + 0x40]; ret; 
0x00130009: mov eax, dword ptr [eax + 0x4c]; call 0x12fed0; add esp, 4; ret; 
0x001828b4: mov eax, dword ptr [eax + 0x4c]; ret; 
0x0014d46e: mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x14d487; ret; 
0x001828d4: mov eax, dword ptr [eax + 0x50]; ret; 
0x00032935: mov eax, dword ptr [eax + 0x54]; ret; 
0x00182944: mov eax, dword ptr [eax + 0x58]; ret; 
0x001828e4: mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009beb4: mov eax, dword ptr [eax + 0x64]; ret; 
0x0007f808: mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000a4614: mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x0008ccee: mov eax, dword ptr [eax + 0x90]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0003450a: mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x000344ca: mov eax, dword ptr [eax + 0x9c]; add eax, dword ptr gs:[0]; ret; 
0x000254ca: mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x0010730e: mov eax, dword ptr [eax + 0xb8]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00077977: mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x0007ed47: mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x0013a70a: mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x00175684: mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x001372f9: mov eax, dword ptr [eax + 0xc]; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00121421: mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x121429; ret; 
0x0009b517: mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x9b510; pop ebx; ret; 
0x0008b15a: mov eax, dword ptr [eax + 0xe6c]; ret; 
0x000a4904: mov eax, dword ptr [eax + 4]; add ecx, edx; test eax, eax; jne 0xa4900; mov eax, ecx; ret; 
0x00174ff0: mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x0008bcc5: mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0008d6dd: mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00120ede: mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00108600: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10854b; call eax; 
0x001086b8: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10859a; call eax; 
0x0014d480: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x14d48c; cmp dword ptr [eax + 8], edx; jne 0x14d480; ret; 
0x000a4858: mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa4850; xor eax, eax; ret; 
0x0011e664: mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0008e698: mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0013733f: mov eax, dword ptr [eax + 8]; mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001756bd: mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0008e708: mov eax, dword ptr [eax + 8]; sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008ae48: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00108660: mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10854b; call eax; 
0x001086a0: mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10859a; call eax; 
0x000342ac: mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00033d57: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00182888: mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00182898: mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0003421b: mov eax, dword ptr [eax + edx*4]; ret; 
0x00084f64: mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00084f14: mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000960a8: mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00090a98: mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009e5ef: mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9e600; ret; 
0x0009e67f: mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9e690; ret; 
0x0009e62f: mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9e640; ret; 
0x0008ae2c: mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0007f626: mov eax, dword ptr [eax]; mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000342d7: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034246: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000342a7: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034216: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000401d0: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x00032933: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00033d55: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000342d5: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034244: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000342a5: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034214: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00032931: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00171a00: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0016d9a0: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0016d848: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00093bfc: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00098a84: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000341d5: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000341a5: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034175: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000340c5: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034125: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034045: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340f5: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034095: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034265: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034075: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034155: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034025: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000e5b04: mov eax, dword ptr [eax]; ret; 
0x00096048: mov eax, dword ptr [eax]; sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00090a78: mov eax, dword ptr [eax]; sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00096068: mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00030f88: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001718cc: mov eax, dword ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0012027f: mov eax, dword ptr [eax]; test eax, eax; je 0x1202c8; call eax; 
0x001203a3: mov eax, dword ptr [eax]; test eax, eax; je 0x120448; call eax; 
0x00090c74: mov eax, dword ptr [ebp + 0x18]; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00170df9: mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x0016df3a: mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x001306c7: mov eax, dword ptr [ebp + 4]; call 0x12fae0; pop edx; pop ecx; pop eax; ret; 
0x000e6bc3: mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x00181fd4: mov eax, dword ptr [ebp - 0x38]; add eax, dword ptr [eax + edx*4 - 0x6c854]; jmp eax; 
0x000963a6: mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x001283ba: mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000e68fc: mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x00084972: mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00072378: mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x722c8]; jmp eax; 
0x00071de4: mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x7249c]; jmp eax; 
0x0007234e: mov eax, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x514]; add eax, dword ptr [eax + ebx*4 - 0x72418]; jmp eax; 
0x00066379: mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00065d09: mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72c7c]; jmp eax; 
0x00066296: mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; mov edx, dword ptr [ebp - 0x58c]; add eax, dword ptr [eax + ebx*4 - 0x72bf8]; jmp eax; 
0x000ee5d9: mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ee1f3: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000ee53c: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5dc]; call dword ptr [eax + 0x18]; 
0x0017f565: mov eax, dword ptr [ebp - 0x5c]; push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x000f56d9: mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x000f52f3: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f563c: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5ec]; call dword ptr [eax + 0x18]; 
0x00172a90: mov eax, dword ptr [ebx + 0x104]; add esp, 4; pop ebx; pop esi; ret; 
0x001689ac: mov eax, dword ptr [ebx + 0x10]; add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00084faa: mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0016899c: mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x001688a3: mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x001688ed: mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00168b0f: mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00169eeb: mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00172a10: mov eax, dword ptr [ebx + 0x174]; add esp, 4; pop ebx; pop esi; ret; 
0x00172b18: mov eax, dword ptr [ebx + 0x190]; add esp, 4; pop ebx; pop esi; ret; 
0x00172ba8: mov eax, dword ptr [ebx + 0x1a0]; add esp, 4; pop ebx; pop esi; ret; 
0x000a481d: mov eax, dword ptr [ebx + 0x20]; je 0xa4830; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0016a899: mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00170364: mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00170380: mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x001383e0: mov eax, dword ptr [ebx + 0xa4]; mov dword ptr gs:[eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003b493: mov eax, dword ptr [ebx + 0xa4]; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0003bb21: mov eax, dword ptr [ebx + 0xa4]; mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x00120ee8: mov eax, dword ptr [ebx + 0xa4]; mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x0016d806: mov eax, dword ptr [ebx + 0xb0]; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0016d828: mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0010acd4: mov eax, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x0008d929: mov eax, dword ptr [ebx + 0xc]; pop ebx; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0017405c: mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016af6d: mov eax, dword ptr [ebx + 0xc]; sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0016957b: mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016919d: mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0008c130: mov eax, dword ptr [ebx + 4]; mov esi, dword ptr [edx + eax*4 - 0x71698]; add esi, edx; jmp esi; 
0x0016958e: mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0016ed5e: mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016ae49: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016ae93: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0016907e: mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016eda3: mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00169558: mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0008c150: mov eax, dword ptr [ebx + 8]; mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00132257: mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00173343: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00173542: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0008c657: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x001735a3: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00173493: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00096238: mov eax, dword ptr [ebx + 8]; test eax, eax; je 0x96251; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00127f82: mov eax, dword ptr [ebx + 8]; test eax, eax; jne 0x127fa8; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0019e762: mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0019bf55: mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x0010a911: mov eax, dword ptr [ebx + ebp*4 - 0x6f150]; add eax, ebx; jmp eax; 
0x000ea40c: mov eax, dword ptr [ebx + ebp*4 - 0x6fe68]; add eax, ebx; jmp eax; 
0x0016a5c4: mov eax, dword ptr [ebx + ecx*4 - 0x138]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0010a8ed: mov eax, dword ptr [ebx + edx*4 - 0x6f248]; add eax, ebx; jmp eax; 
0x0010a728: mov eax, dword ptr [ebx + edx*4 - 0x6f390]; add eax, ebx; jmp eax; 
0x0010dc89: mov eax, dword ptr [ebx + esi*4 - 0x6eea0]; add eax, ebx; jmp eax; 
0x000337ec: mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x337f9; call eax; 
0x001457b0: mov eax, dword ptr [ebx]; add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x001721f5: mov eax, dword ptr [ebx]; add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00185401: mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x001719fe: mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00109ee4: mov eax, dword ptr [ebx]; mov ecx, dword ptr [edx + eax*4 - 0x6f3b4]; add ecx, edx; jmp ecx; 
0x001718d8: mov eax, dword ptr [ebx]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0008c590: mov eax, dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0016999e: mov eax, dword ptr [ecx + 0x20]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x00090f19: mov eax, dword ptr [ecx + 0x228]; push edx; call eax; 
0x0012fcbf: mov eax, dword ptr [ecx + 0x4794]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x00182df8: mov eax, dword ptr [ecx + 0xa4]; mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x000e6178: mov eax, dword ptr [ecx + 0xa4]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00084ef4: mov eax, dword ptr [ecx + 0xc]; xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x000b33c4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b34f4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000bd787: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefe4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000af114: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x00149a2f: mov eax, dword ptr [ecx + 4]; cmp dword ptr [edx + 0x14], eax; sete al; pop ebx; movzx eax, al; ret; 
0x000b7da4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b7e04: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b6754: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b33a5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000b34e5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000aefd5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000af105: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000b7c8a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b7dea: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b664a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b67aa: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3554: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af174: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b7caa: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b7e0a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000bd81b: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b666a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b67ca: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b7c6b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b7dcb: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000bd7dc: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b662b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b678b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b3574: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000af194: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b3535: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000af155: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0007ff1e: mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0008ae67: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0006d614: mov eax, dword ptr [ecx + eax*4 - 0x72934]; lea eax, [ecx + eax - 0x1c9bbb]; jmp eax; 
0x000a6ed6: mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000a6eb6: mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x00090aed: mov eax, dword ptr [ecx]; and eax, 0xfffffffe; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000b3290: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000b34c0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000b50bd: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000b34d0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000af0f0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b34e0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000af100: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000b34f0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000af110: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b6750: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000bd733: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0ccd: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aeed0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000b1d80: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000af0e0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0016da6b: mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000b3361: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b34a1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b34b1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000af0d1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000bd704: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefa1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000af0c1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000bfadf: mov eax, dword ptr [ecx]; retf 0xce01; jmp ebx; 
0x0007fbbe: mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007fa6e: mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x001708a1: mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x001119cc: mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0016a332: mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0016a23c: mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0016a2ee: mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x001727dd: mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0016aa9b: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016aa58: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x000c7e51: mov eax, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008e0a6: mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x001688b9: mov eax, dword ptr [edi]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x000c09f0: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c0a00: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c0a10: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c0a20: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c0a30: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c0a40: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c0a50: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c0a60: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c0a70: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c0a80: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c0a90: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c09e0: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0012141b: mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x121429; ret; 
0x00084fee: mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00085000: mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00084ebe: mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x001721ee: mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00084ed0: mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x00098667: mov eax, dword ptr [edx + 0x80]; and eax, 0x39; cmp eax, 8; je 0x98676; ret; 
0x00129658: mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000e61c0: mov eax, dword ptr [edx + 0xa4]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00138ac0: mov eax, dword ptr [edx + 0xbc]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x00139b00: mov eax, dword ptr [edx + 0xbc]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x00175f74: mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00149a76: mov eax, dword ptr [edx + 4]; cmp dword ptr [ecx + 4], eax; sete al; pop ebx; movzx eax, al; ret; 
0x0008ae04: mov eax, dword ptr [edx + 4]; lea ecx, [eax + 0x30]; mov eax, dword ptr [eax + 0x30]; test eax, eax; jne 0x8ae28; ret; 
0x00175ca0: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00175c78: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016adc8: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016adf0: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00175d55: mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00175315: mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x0011e67c: mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0008b804: mov eax, dword ptr [edx + 8]; mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000a3e69: mov eax, dword ptr [edx + eax + 4]; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x0008dce0: mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0007fa9d: mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0007fc0d: mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0007dca7: mov eax, dword ptr [edx]; ret; 
0x0008767a: mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x001176a4: mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000fa008: mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x001715a5: mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00184985: mov eax, dword ptr [esi + 4]; pop ebx; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x0017572d: mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x000e725e: mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x000e722f: mov eax, dword ptr [esi + ecx*4 - 0x700b0]; add eax, esi; jmp eax; 
0x001713e4: mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00170dc5: mov eax, dword ptr [esi]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x00139651: mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x0003b410: mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x000408e4: mov eax, dword ptr [esp + 0x10]; call eax; 
0x0003b551: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003b546: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0018ba30: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00130005: mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x12fed0; add esp, 4; ret; 
0x00092445: mov eax, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000c04bf: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x00140d2d: mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x001271fc: mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00024d3d: mov eax, dword ptr [esp + 0x14]; call eax; 
0x0006d08b: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x0006179b: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x00063811: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x72e94]; jmp eax; 
0x00064f08: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00064790: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x0006400a: mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x0016f3cf: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001842ee: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00110c89: mov eax, dword ptr [esp + 0x18]; call eax; 
0x0016865b: mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000e24e7: mov eax, dword ptr [esp + 0x1c]; add eax, dword ptr [eax + ecx*4 - 0x70488]; jmp eax; 
0x0009e3c5: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x000379ba: mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xbf640; add esp, 0x1c; ret; 
0x00174ef7: mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x174f08; add esp, 0x2c; ret; 
0x001688d9: mov eax, dword ptr [esp + 0x20]; call eax; 
0x0008c3b3: mov eax, dword ptr [esp + 0x24]; call eax; 
0x0012ceaa: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00103b87: mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x0016a639: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00040f30: mov eax, dword ptr [esp + 0x28]; call eax; 
0x00040f5c: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0012cad9: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015cb4b: mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0002efa0: mov eax, dword ptr [esp + 0x34]; call eax; 
0x000825ef: mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0012ca4a: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d503: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c19a8: mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0012dd0a: mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017300d: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x17301e; add esp, 0x4c; ret; 
0x0017307d: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x17308e; add esp, 0x4c; ret; 
0x001730ed: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1730fe; add esp, 0x4c; ret; 
0x00173150: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x173161; add esp, 0x4c; ret; 
0x001731b0: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1731c1; add esp, 0x4c; ret; 
0x0017321d: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x17322e; add esp, 0x4c; ret; 
0x0017329d: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1732ae; add esp, 0x4c; ret; 
0x0012d064: mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00159bed: mov eax, dword ptr [esp + 0x44]; call eax; 
0x0012d893: mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c1690: mov eax, dword ptr [esp + 0x44]; push dword ptr [eax]; call edi; 
0x0016f742: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0016f5ec: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0002846c: mov eax, dword ptr [esp + 0x48]; call eax; 
0x00063b15: mov eax, dword ptr [esp + 0x4c]; add edi, dword ptr [eax + edx*4]; mov edx, edi; mov edi, ecx; jmp edx; 
0x00029bea: mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c71c: mov eax, dword ptr [esp + 0x54]; call eax; 
0x00169cc8: mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0012da7d: mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x18], edi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d932: mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012cc83: mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x38], edi; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011e891: mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d8228: mov eax, dword ptr [esp + 0x78]; call eax; 
0x001699ec: mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0009bf29: mov eax, dword ptr [esp + 0xb4]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003d24a: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000985a8: mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x001329a0: mov eax, dword ptr [esp + 0xc]; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x0003c4d3: mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006032e: mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0003b8d7: mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008e782: mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000a4610: mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x0012f0d0: mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00106fcb: mov eax, dword ptr [esp + 0xc]; movzx edx, byte ptr [ebx + 4]; mov ecx, dword ptr [eax + edx*4 - 0x6f5e8]; add ecx, eax; jmp ecx; 
0x0003b4d0: mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000be322: mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001a47a2: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0015186d: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x15187e; add esp, 0x1c; ret; 
0x0017377e: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x001737c6: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x173804; add esp, 0x1c; ret; 
0x0003e8a1: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b4: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x001762f0: mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013cb50: mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0008eab0: mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00085c20: mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000342f0: mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013a720: mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0008ccdb: mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8cce8; ret; 
0x00098610: mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x98620; xor eax, eax; ret; 
0x001097e6: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0010980e: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008ebb8: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00097bb0: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0008eeb0: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00098650: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014d1b0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00176320: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00173f5c: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008b180: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x001828b0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001828d0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00182950: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00182940: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001828e0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009beb0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x0011e660: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00182894: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00084f60: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00084f10: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0009e5eb: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9e600; ret; 
0x0009e67b: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9e690; ret; 
0x0009e62b: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9e640; ret; 
0x000e5b00: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00176300: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00110e90: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001828c0: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008e9b0: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001097d0: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008ae40: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00182880: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f80: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001097c0: mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00085c30: mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00085c40: mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0008b190: mov eax, dword ptr [esp + 4]; ret; 
0x00088db0: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x88dc0; ret; 
0x0010e30d: mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ede0]; jmp eax; 
0x0010d5e3: mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x0010d404: mov eax, dword ptr [esp + 8]; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x000bfe61: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x00092370: mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003bbdf: mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008e6b7: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0013b401: mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001917a6: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0007abc7: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00034470: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034480: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003bfc9: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x001096a7: mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0018c075: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000bfe37: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000baf02: mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00154667: mov eax, dword ptr [esp]; call eax; 
0x000337e6: mov eax, dword ptr [esp]; mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x337f9; call eax; 
0x000fbe3c: mov eax, dword ptr [esp]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f760]; jmp eax; 
0x000fbd5e: mov eax, dword ptr [esp]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x00182d21: mov eax, dword ptr [esp]; ret; 
0x0002cf08: mov eax, dword ptr fs:[esp + 0x54]; call eax; 
0x0009759c: mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000f825f: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf8288; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000e7105: mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00097c10: mov eax, dword ptr gs:[8]; ret; 
0x00092d40: mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00033d54: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000342d4: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034243: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000342a4: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034213: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00032930: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x000341d4: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000341a4: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034174: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000340c4: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034124: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034044: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340f4: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034094: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034264: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034074: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034154: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034024: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00145d50: mov eax, dword ptr gs:[eax]; ret; 
0x001457af: mov eax, dword ptr gs:[ebx]; add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x0008ca9b: mov eax, ebp; call dword ptr gs:[0x10]; 
0x000a9c1e: mov eax, ebp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00041013: mov eax, ebp; imul eax, esi; add eax, edi; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0018555b: mov eax, ebp; mov edx, ecx; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008f676: mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x00052a15: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x0003b295: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000295f5: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003d8ec: mov eax, ebp; pop edi; pop ebp; ret; 
0x00034c46: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000c41f3: mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x001547e9: mov eax, ebx; call eax; 
0x000bf60c: mov eax, ebx; cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a5ec5: mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x0013c760: mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x00085c6b: mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00124351: mov eax, ebx; pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0016a7f6: mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x000380ad: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00139de6: mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x00033cd6: mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0008ca09: mov eax, ebx; pop ebx; pop esi; ret; 
0x0003abb6: mov eax, ebx; pop ebx; pop esi; shr eax, 0x1f; pop edi; ret; 
0x00054a5c: mov eax, ebx; pop ebx; ret 4; 
0x00060fca: mov eax, ebx; pop ebx; ret; 
0x0013cffb: mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0003e85f: mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0007e91e: mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0007db1f: mov eax, ecx; mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x00029029: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d902f: mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000d6d31: mov eax, ecx; pop ebx; pop esi; ret; 
0x0009dafd: mov eax, ecx; pop ebx; ret; 
0x0008b781: mov eax, ecx; pop edi; pop ebp; ret; 
0x0007db37: mov eax, ecx; pop edi; ret; 
0x0003053b: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00110a15: mov eax, ecx; pop esi; pop edi; ret; 
0x0013d12f: mov eax, ecx; ret 4; 
0x00033bbf: mov eax, ecx; ret; 
0x0008f701: mov eax, edi; call dword ptr gs:[0x10]; 
0x00040f28: mov eax, edi; imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000ffb41: mov eax, edi; mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x000bd689: mov eax, edi; pop ebx; pop edi; ret; 
0x0002f6d7: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00060f38: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0003336c: mov eax, edi; pop edi; pop ebp; ret; 
0x000b0cd1: mov eax, edi; pop edi; pop ebx; ret; 
0x000b7880: mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x000aeed4: mov eax, edi; pop edi; ret; 
0x0003339f: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0009a000: mov eax, edi; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0008ec19: mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001035d1: mov eax, edx; add esi, edi; jmp esi; 
0x0003a8cb: mov eax, edx; add esp, 0x1c; ret 4; 
0x00034a82: mov eax, edx; add esp, 0xc; ret; 
0x0005a958: mov eax, edx; call 0x5a700; mov eax, 1; add esp, 0xc; ret; 
0x00077c28: mov eax, edx; call 0x77990; mov eax, 1; add esp, 0xc; ret; 
0x00024d70: mov eax, edx; call dword ptr gs:[0x10]; 
0x000a9763: mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x0018d24e: mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00181f3a: mov eax, edx; mov edx, dword ptr [ecx + 0x108]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0003d5c4: mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0015013b: mov eax, edx; pop ebx; pop edi; ret; 
0x000261e3: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00108aa7: mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000591cb: mov eax, edx; pop ebx; pop esi; ret 4; 
0x000531aa: mov eax, edx; pop ebx; pop esi; ret; 
0x0003316e: mov eax, edx; pop ebx; ret; 
0x000a95d4: mov eax, edx; pop edi; pop ebp; ret; 
0x0018d6b1: mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0003e3ac: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00052ac1: mov eax, edx; pop esi; pop edi; ret; 
0x00033160: mov eax, edx; ret; 
0x0003a915: mov eax, edx; shr eax, 0x1f; ret; 
0x0008f3fd: mov eax, edx; shr eax, 1; je 0x8f419; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008f94d: mov eax, edx; shr eax, 1; je 0x8f96c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008f6fa: mov eax, edx; shr eax, 3; je 0x8f730; mov eax, edi; call dword ptr gs:[0x10]; 
0x000b1388: mov eax, edx; sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xb10e1; pop ebx; ret; 
0x000b12a0: mov eax, edx; sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xb10e1; pop ebx; ret; 
0x000b12be: mov eax, edx; sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xb10e1; pop ebx; ret; 
0x000b12de: mov eax, edx; sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xb10e1; pop ebx; ret; 
0x000b1302: mov eax, edx; sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xb10e1; pop ebx; ret; 
0x000b1332: mov eax, edx; sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xb10e1; pop ebx; ret; 
0x000b1362: mov eax, edx; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb10e1; pop ebx; ret; 
0x000b1174: mov eax, edx; sub ebx, 1; lea ecx, [edx + 1]; jne 0xb10e1; pop ebx; ret; 
0x000b1196: mov eax, edx; sub ebx, 2; lea ecx, [edx + 2]; jne 0xb10e1; pop ebx; ret; 
0x000b11bc: mov eax, edx; sub ebx, 3; lea ecx, [edx + 3]; jne 0xb10e1; pop ebx; ret; 
0x000b11d4: mov eax, edx; sub ebx, 4; lea ecx, [edx + 4]; jne 0xb10e1; pop ebx; ret; 
0x000b11fa: mov eax, edx; sub ebx, 5; lea ecx, [edx + 5]; jne 0xb10e1; pop ebx; ret; 
0x000b121c: mov eax, edx; sub ebx, 6; lea ecx, [edx + 6]; jne 0xb10e1; pop ebx; ret; 
0x000b123a: mov eax, edx; sub ebx, 7; lea ecx, [edx + 7]; jne 0xb10e1; pop ebx; ret; 
0x000b1258: mov eax, edx; sub ebx, 8; lea ecx, [edx + 8]; jne 0xb10e1; pop ebx; ret; 
0x000b127e: mov eax, edx; sub ebx, 9; lea ecx, [edx + 9]; jne 0xb10e1; pop ebx; ret; 
0x00042159: mov eax, edx; xor edx, edx; ret; 
0x000871ce: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0003d61d: mov eax, esi; call dword ptr gs:[0x10]; 
0x00040041: mov eax, esi; mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000876fb: mov eax, esi; movzx eax, al; pop ebx; pop esi; pop edi; ret; 
0x0005a7ff: mov eax, esi; pop ebx; pop esi; movzx eax, al; pop edi; ret; 
0x0003a719: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002dbe7: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00046446: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a5016: mov eax, esi; pop ebx; pop esi; ret 4; 
0x000601e5: mov eax, esi; pop ebx; pop esi; ret; 
0x00038282: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0004121b: mov eax, esi; pop esi; pop edi; ret; 
0x00109f99: mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000a64fe: mov eax, gs; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000bf181: mov ebp, 0x10ea83c0; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x30]; ret; 
0x0004219a: mov ebp, 0x1c083c0; ret; 
0x000423d9: mov ebp, 0x1ff083c0; add eax, 1; ret; 
0x0004249e: mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000427f4: mov ebp, 0x1ff083c0; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000423be: mov ebp, 0x1ff083c0; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x00042754: mov ebp, 0x1ff083c0; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x0004245f: mov ebp, 0x1ff083c0; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000bf33b: mov ebp, 0x1ff083c0; sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x00042424: mov ebp, 0x1ff083c2; add eax, 1; pop ebx; ret; 
0x0004276f: mov ebp, 0x1ff083c2; ret; 
0x000427bd: mov ebp, 0x1ff183c9; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x000420e3: mov ebp, 0x1ff183c9; shr eax, cl; ret; 
0x000424eb: mov ebp, 0x1ff183ca; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000421d4: mov ebp, 0x1ff283d1; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00042879: mov ebp, 0x1ff383db; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x000bf171: mov ebp, 0x20ea83c0; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x20]; ret; 
0x000bf161: mov ebp, 0x30ea83c0; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x10]; ret; 
0x000bf252: mov ebp, 0x30f801ff; in eax, dx; add eax, ecx; pop edi; ret; 
0x000bf151: mov ebp, 0x40ea83c0; add edx, eax; jl 0xbf190; add eax, ecx; ret; 
0x001a0eef: mov ebp, 0x5b000000; ret; 
0x000bea06: mov ebp, 0x5ff801c0; ret; 
0x000bf215: mov ebp, 0x5ff801ff; ret; 
0x0016eb58: mov ebp, 0x81000141; ret; 
0x0013c958: mov ebp, 0x81000463; ret; 
0x000f7658: mov ebp, 0x810008b6; ret; 
0x00083958: mov ebp, 0x81000ff3; ret; 
0x00082b58: mov ebp, 0x81001001; ret; 
0x000d4cdf: mov ebp, 0x89d189f0; ret; 
0x00136f29: mov ebp, 0x89fff955; ret 0x68b; 
0x0007a98d: mov ebp, 0x89fffffe; ret; 
0x00136935: mov ebp, 0x8bfffffe; inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x0011e8b9: mov ebp, 0xa4; mov ecx, 0x5401; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x00169316: mov ebp, 0xc4830000; adc byte ptr [ebp - 0x7c348b40], al; ret; 
0x001054c4: mov ebp, 0xf000001; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00042889: mov ebp, 0xf0835bc2; pop ds; ret; 
0x0008ca8f: mov ebp, 0xf0; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0013f408: mov ebp, 0xffff32e9; jmp dword ptr [esi - 0x70]; 
0x00057b66: mov ebp, 0xffffc9b0; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc639; 
0x000d2b56: mov ebp, 0xffffc9d0; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x00055abb: mov ebp, 0xffffc9d8; adc byte ptr [ecx - 0x361f43], cl; dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x000674ac: mov ebp, 0xfffffa6c; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x000668e3: mov ebp, 0xfffffa6c; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0006581b: mov ebp, 0xfffffa70; movzx edx, dl; mov ecx, dword ptr [edi + edx*4 - 0x72d38]; add ecx, edi; jmp ecx; 
0x0005c067: mov ebp, 0xffffff64; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00112242: mov ebp, dword ptr [0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0003bfc6: mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x001372a2: mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0011d955: mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0011e8c9: mov ebp, dword ptr [edi]; call dword ptr gs:[0x10]; 
0x0011224f: mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0006f933: mov ebp, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00182d29: mov ebp, dword ptr [esp]; ret; 
0x00112241: mov ebp, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0011e8c8: mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x00169562: mov ebp, eax; pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00085112: mov ebp, ecx; mov esi, eax; lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00129aa2: mov ebp, esi; call ebx; 
0x00129aa2: mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0003c098: mov ebp, esp; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x0003fb15: mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012d7d7: mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d5c7: mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000e710b: mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012c9a2: mov ebx, 0x12; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012ebba: mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012ece5: mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0018b926: mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000b8267: mov ebx, 0x30010db; or al, 0x91; jmp ecx; 
0x00183f29: mov ebx, 0x39000000; ret; 
0x0003f74e: mov ebx, 0x3cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x000a7b1d: mov ebx, 0x450ffff6; ret 0x66c3; 
0x0012b25f: mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x00139e0e: mov ebx, 0x6afff967; and dword ptr [eax - 0x73], edx; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x00139e5b: mov ebx, 0x6afff967; xor dword ptr [eax - 0x73], edx; adc al, 0xb9; stc; call dword ptr [eax - 0x18]; 
0x001473ac: mov ebx, 0x8000768d; jl 0x1473d7; add byte ptr es:[edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x0016ea5a: mov ebx, 0x81000142; ret; 
0x0015cc5a: mov ebx, 0x81000260; ret; 
0x00195a5a: mov ebx, 0x81fffed2; ret; 
0x0018c15a: mov ebx, 0x81ffff6b; ret; 
0x0008c611: mov ebx, 0x89000f3a; inc ebx; or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0005abdc: mov ebx, 0x89d8838d; stc; call dword ptr [eax - 0x73]; 
0x00068d12: mov ebx, 0x8b000019; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0013e8bc: mov ebx, 0x998dfff9; xor al, 0x84; stc; call dword ptr [eax + 0x53]; 
0x0012cfb2: mov ebx, 0xa; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011b228: mov ebx, 0xb8530011; or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012de79: mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0018198c: mov ebx, 0xc483fff0; adc bl, ch; ret; 
0x0012e048: mov ebx, 0xd; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012e159: mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012e105: mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x001266f7: mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00031d95: mov ebx, 0xfff7966c; add ecx, ebx; jmp ecx; 
0x00032154: mov ebx, 0xfffc96e9; push esi; ret 0xf03; 
0x0011de90: mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011b8f5: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011b9e5: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011b8be: mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9b4: mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00126d57: mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00023269: mov ebx, 1; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0009e39b: mov ebx, 1; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x00143851: mov ebx, 2; call dword ptr gs:[0x10]; 
0x000419da: mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012e536: mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00091a72: mov ebx, 2; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093039: mov ebx, 2; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00090ef6: mov ebx, 2; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00109bbc: mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00109f76: mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0018b8bb: mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012e5fd: mov ebx, 3; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00129c05: mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0012c8f7: mov ebx, 5; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d672: mov ebx, 9; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121aa9: mov ebx, dword ptr [0x14]; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00041a15: mov ebx, dword ptr [eax + 0x34]; mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x000923f1: mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00097c2d: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0009244d: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000ee5c7: mov ebx, dword ptr [eax + 0xa4]; mov edi, dword ptr gs:[ebx]; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000f56c7: mov ebx, dword ptr [eax + 0xa4]; mov edi, dword ptr gs:[ebx]; sub esp, 0xc; push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x0018cf26: mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00033d2f: mov ebx, dword ptr [eax + ecx]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013b405: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013b405: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009e064: mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 8]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0006f12f: mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0012f420: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0012f551: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x0012f3af: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0012f4d3: mov ebx, dword ptr [ebp - 0x500]; mov edx, 2; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0009ddf0: mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0012002d: mov ebx, dword ptr [ebx + 0x69]; stc; call dword ptr [ecx + 0x50]; 
0x00109f10: mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0009de96: mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009def9: mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013729a: mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0008e0a8: mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x00122d1e: mov ebx, dword ptr [edi - 7]; call dword ptr [eax + 0x55]; 
0x0011d953: mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0019fd53: mov ebx, dword ptr [edx + 0xc]; cmp ecx, ebx; mov eax, 0; jne 0x19fd70; pop ebx; ret; 
0x0008dce2: mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00090c77: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00090cc0: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0005266a: mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0016d619: mov ebx, dword ptr [esi + 8]; cmp edx, 0xf; ja 0x16d630; add eax, dword ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x0013b4c5: mov ebx, dword ptr [esi]; lea esi, cs:[esi]; nop; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011b837: mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00108890: mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0009627f: mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00126743: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011dff8: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00111903: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b283: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c333: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfb3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c033: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdd3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c193: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bff3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bec3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c203: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012ad03: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270f3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241c3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x001206a3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000ad2e0: mov ebx, dword ptr [esp + 0x10]; mov ecx, edx; and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x71194]; jmp eax; 
0x0012b2ac: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0006042b: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011df78: mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012aa7f: mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000a9718: mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0xa9733; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97d8: mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0xa980b; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x00181880: mov ebx, dword ptr [esp + 0x14]; jne 0x181890; pop ebx; ret; 
0x0012a822: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e7bbc: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00135f99: mov ebx, dword ptr [esp + 0x18]; je 0x135fa8; add esp, 8; pop ebx; ret; 
0x001271f8: mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00129a83: mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0011dc28: mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011eb3b: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120a9a: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0012056a: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c47a: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011a836: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011dbf8: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00110fba: mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0003c4a5: mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0012ab0b: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fc9b: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012509b: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012663b: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012915b: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011be3b: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c80b: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d8ab: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011120a: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00111235: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00108994: mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00120ac5: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120595: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00110fe5: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0009ddb2: mov ebx, dword ptr [esp + 0x20]; test ebx, ebx; js 0x9dde8; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000dbd54: mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00127068: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00126fc8: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00108cd8: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00108e6d: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00108dbd: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00108f35: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00108c45: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00111bd4: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bb35: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bc2b: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x001254c4: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125d64: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f8345: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84e5: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012b4f4: mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e4996: mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011b60c: mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000e4cb1: mov ebx, dword ptr [esp + 0x40]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe4d50; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0011e9ea: mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0012b5f5: mov ebx, dword ptr [esp + 0x50]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00111a2a: mov ebx, dword ptr [esp + 0x50]; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012e98c: mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0011efa4: mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000dbedc: mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012ada5: mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0012b79a: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012b820: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012b6fe: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000dbf50: mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0011d727: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011d66d: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0013b9f5: mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0011e81b: mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001125ea: mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0010aff8: mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x0012a6a8: mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009d2cd: mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012a784: mov ebx, dword ptr [esp + 0x94]; mov esi, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x000984a9: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0012954f: mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008d673: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008d673: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000e5dda: mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0011c90e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012a9c9: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012c15e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c23e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0012a9f8: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001226ce: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ffe: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0012060e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd9e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0006fc45: mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x726b4]; add ecx, eax; jmp ecx; 
0x0006f3c9: mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72734]; add ecx, eax; jmp ecx; 
0x00070dbf: mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72834]; add ecx, eax; jmp ecx; 
0x0009075d: mov ebx, dword ptr [esp + 0xc]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00150534: mov ebx, dword ptr [esp + 0xc]; movzx eax, byte ptr [edi]; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x0008d6a2: mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012bf46: mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012c282: mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012c2c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012a526: mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0012bd72: mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0011bdf6: mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012bf22: mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012c2f6: mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x001271c2: mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012c366: mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012c396: mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012c3c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012c3f2: mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x0012be36: mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012c0c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000e71b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0012c1c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c3e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x001112c2: mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0011f502: mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00108d56: mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0011d4b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0011d4b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011f6c2: mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00126f76: mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012c2a2: mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00127176: mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00125196: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001116d6: mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00129282: mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00129122: mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012bc62: mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00127152: mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012c262: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00126cf6: mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010acf2: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012be92: mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ed8b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001116b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012bc86: mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012abb2: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012abb2: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00111ed6: mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000ed962: mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00124636: mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125146: mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00124662: mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00108ba6: mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x001088e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00108912: mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00108932: mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x00108952: mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x001292a6: mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012bcb6: mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012bce6: mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003ca06: mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00110f02: mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ec936: mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012b1c2: mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012b1a2: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012b1a2: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012c126: mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00126776: mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x00124086: mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00120666: mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0009005b: mov ebx, dword ptr [esp + 4]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000603d5: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f8305: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0012c429: mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef9: mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b789: mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d519: mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d029: mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111339: mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c099: mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be09: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be69: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111059: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f9: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f449: mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129259: mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf79: mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc39: mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125059: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd19: mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd49: mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd9: mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c069: mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b79: mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f9: mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c9: mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed939: mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed909: mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f79: mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e9: mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124319: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124029: mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124059: mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120639: mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0003c421: mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011bdb1: mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0008f5b0: mov ebx, dword ptr [esp]; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f57c: mov ebx, dword ptr [esp]; mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000903d3: mov ebx, dword ptr [esp]; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000fbe1a: mov ebx, dword ptr [esp]; movzx eax, al; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x00182d19: mov ebx, dword ptr [esp]; ret; 
0x00120a99: mov ebx, dword ptr es:[esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120569: mov ebx, dword ptr es:[esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c479: mov ebx, dword ptr es:[esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00110fb9: mov ebx, dword ptr es:[esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00111209: mov ebx, dword ptr es:[esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011efa3: mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012ada4: mov ebx, dword ptr fs:[esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00121aa8: mov ebx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008df05: mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00129aa6: mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0008fa74: mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008fb06: mov ebx, ebp; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00092ff9: mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008f8e5: mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009368b: mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00129c73: mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0014d8f9: mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x000910f1: mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008ee2f: mov ebx, edi; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00085f28: mov ebx, edi; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00095180: mov ebx, edi; mov ecx, 7; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009697b: mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009443c: mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003c3f6: mov ebx, edx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0011d4c2: mov ebx, edx; ret; 
0x0002fc6b: mov ebx, esi; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009db9c: mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0008be0c: mov ebx, esp; cmp al, 0xf9; inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x0008bd9b: mov ebx, esp; cmp al, 0xf9; inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x0011dc35: mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000e63a8: mov ecx, 0x310cec83; call dword ptr [esi - 0x18]; 
0x00108b5d: mov ecx, 0x530012e2; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011e8be: mov ecx, 0x5401; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x0011eb44: mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011eb71: mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00110fe2: mov ecx, 0x5c8bfff7; and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00087ec5: mov ecx, 0x6a000001; add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00129c0a: mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00096324: mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008d5a9: mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008ca94: mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0014f85c: mov ecx, 0x81000334; ret; 
0x0008dd64: mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008db5c: mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0017ff76: mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000910e7: mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008d666: mov ecx, 0x81; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000963c1: mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008dd93: mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00191d5c: mov ecx, 0x81ffff0f; ret; 
0x000a472b: mov ecx, 0x83000000; in al, dx; or byte ptr [esi - 1], dl; jae 0xa475a; call eax; 
0x0017b9a3: mov ecx, 0x83fff11c; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00093e7e: mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0004dcc3: mov ecx, 0x8bfffe60; jl 0x4dcee; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0010b2ce: mov ecx, 0xb1d0838d; stc; call dword ptr [eax - 0x73]; 
0x00098cdf: mov ecx, 0xc4830008; adc byte ptr [ebp - 0x16588a40], al; ret 0xfffe; 
0x000e7132: mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00090e98: mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00171a8e: mov ecx, 0xcec8390; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0003bb64: mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0013ab53: mov ecx, 0xffe387e8; jmp dword ptr [esi - 0x70]; 
0x0003b854: mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003b605: mov ecx, 0xfffe; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x00109f1a: mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000c04ec: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0007db30: mov ecx, 0xffffffff; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x00176035: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00176005: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x001519d0: mov ecx, 1; mov eax, ecx; ret; 
0x00095dd5: mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x000d6d42: mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x001854bb: mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00095182: mov ecx, 7; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009368f: mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x000958ca: mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003c425: mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003c4a9: mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00095591: mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000e5e4c: mov ecx, dword ptr [0x14]; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x00168a22: mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0016da6d: mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00041a1b: mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x0007a9cf: mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00090c7a: mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00168c5f: mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0007f30c: mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00132e35: mov ecx, dword ptr [eax + 8]; test ecx, ecx; je 0x132e40; xor eax, eax; pop ebx; ret; 
0x00106fd3: mov ecx, dword ptr [eax + edx*4 - 0x6f5e8]; add ecx, eax; jmp ecx; 
0x0018f162: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191162: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00098f4a: mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x98f58; ret; 
0x0018f802: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00093308: mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008d6db: mov ecx, dword ptr [eax]; mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x001818a8: mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x1818b0; ret; 
0x0018fb47: mov ecx, dword ptr [ebp + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00109f82: mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x000261a3: mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0012f426: mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0012f557: mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x0012f3b5: mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0012f4de: mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00072354: mov ecx, dword ptr [ebp - 0x514]; add eax, dword ptr [eax + ebx*4 - 0x72418]; jmp eax; 
0x0009114d: mov ecx, dword ptr [ebp - 0x58]; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008ed16: mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008ec16: mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000987ed: mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0015053b: mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x000a429d: mov ecx, dword ptr [ebx + eax*4 - 0x71254]; add ecx, ebx; jmp ecx; 
0x0019bf50: mov ecx, dword ptr [ebx + ebp*4 - 0x7b740009]; or dword ptr [ebx + ebp*4 - 0x37d60009], 0x5b; ret; 
0x0019bf4e: mov ecx, dword ptr [ebx + ecx*4 - 0x85474]; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x00031d93: mov ecx, dword ptr [ebx + edi*4 - 0x86994]; add ecx, ebx; jmp ecx; 
0x0006fc49: mov ecx, dword ptr [ebx + edx*4 - 0x726b4]; add ecx, eax; jmp ecx; 
0x0006f3cd: mov ecx, dword ptr [ebx + edx*4 - 0x72734]; add ecx, eax; jmp ecx; 
0x00070dc3: mov ecx, dword ptr [ebx + edx*4 - 0x72834]; add ecx, eax; jmp ecx; 
0x001701a7: mov ecx, dword ptr [ecx + 8]; cmp edx, 0xf; ja 0x1701c0; add eax, dword ptr [eax + edx*4 - 0x6c910]; jmp eax; 
0x00170ad7: mov ecx, dword ptr [ecx + 8]; cmp edx, 0xf; ja 0x170bf0; add eax, dword ptr [eax + edx*4 - 0x6c8d0]; jmp eax; 
0x0013245f: mov ecx, dword ptr [ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0008fe40: mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093075: mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008edc6: mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008ee38: mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0008e0ab: mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x000f8052: mov ecx, dword ptr [edi + eax*4 - 0x6fa20]; add ecx, edi; jmp ecx; 
0x00065823: mov ecx, dword ptr [edi + edx*4 - 0x72d38]; add ecx, edi; jmp ecx; 
0x0008051a: mov ecx, dword ptr [edx + 0x10]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0008b807: mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0016a0e0: mov ecx, dword ptr [edx + 0x18]; test ecx, ecx; jne 0x16a108; mov dword ptr [eax], 0; pop ebx; ret; 
0x0008273d: mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x001700e0: mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00170a70: mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0009b4b5: mov ecx, dword ptr [edx + 0x3bac]; mov dword ptr [edx + 0x3bac], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0012f0c6: mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x12f0d0; ret; 
0x0008dce5: mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000d6f8a: mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd6f70; add eax, 1; ret; 
0x00109ee6: mov ecx, dword ptr [edx + eax*4 - 0x6f3b4]; add ecx, edx; jmp ecx; 
0x000c09cd: mov ecx, dword ptr [edx + eax*4 - 0x70c9c]; add ecx, edx; jmp ecx; 
0x001371eb: mov ecx, dword ptr [edx]; test ecx, ecx; je 0x137200; ret; 
0x000d6f66: mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd6f8a; ret; 
0x0011e676: mov ecx, dword ptr [edx]; test ecx, ecx; js 0x11e684; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000d6bf0: mov ecx, dword ptr [esi + 0x1c]; cmp dword ptr [edi + 0x1c], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x00090cc3: mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000d6c70: mov ecx, dword ptr [esi + 0x34]; cmp dword ptr [edi + 0x34], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000d6c90: mov ecx, dword ptr [esi + 0x3c]; cmp dword ptr [edi + 0x3c], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x0008defe: mov ecx, dword ptr [esi + 8]; mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010ee3d: mov ecx, dword ptr [esi + edx*4 - 0x6ec98]; add ecx, esi; jmp ecx; 
0x00071a72: mov ecx, dword ptr [esi + edx*4 - 0x72558]; add ecx, esi; jmp ecx; 
0x00127276: mov ecx, dword ptr [esi + edx]; stc; jmp dword ptr [ebp - 0x75]; 
0x000d6b4b: mov ecx, dword ptr [esi]; cmp dword ptr [edi], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000baf40: mov ecx, dword ptr [esi]; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000baf21: mov ecx, dword ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010836d: mov ecx, dword ptr [esi]; test ecx, ecx; je 0x10838c; cmp byte ptr [esp + 0x17], 0; jne 0x108420; call ecx; 
0x0018d250: mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0011df04: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00129c75: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x00128fb8: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0010fbc4: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c90a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012c15a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c23a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001226ca: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ffa: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0012060a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd9a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008d69e: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011ef47: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009d582: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011eef7: mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011de84: mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012673f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011dff4: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001118ff: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b27f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c32f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfaf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c02f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdcf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c18f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bfef: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bebf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c1ff: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012acff: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270ef: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241bf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012069f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012b2a8: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011df74: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012e04d: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011b82a: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00060423: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0018b82b: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e53b: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000e5e59: mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x0012aa72: mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009b98f: mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0016ae33: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ae6e: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x001271f4: mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00148a30: mov ecx, dword ptr [esp + 0x1c]; mov edx, dword ptr [ecx - 0x6e5c4]; add edx, ecx; jmp edx; 
0x001489b9: mov ecx, dword ptr [esp + 0x1c]; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x001488b4: mov ecx, dword ptr [esp + 0x1c]; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x001487eb: mov ecx, dword ptr [esp + 0x1c]; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x000917b6: mov ecx, dword ptr [esp + 0x1c]; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00064eff: mov ecx, dword ptr [esp + 0x20]; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00063808: mov ecx, dword ptr [esp + 0x20]; movzx edx, byte ptr [esi + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x72e94]; jmp eax; 
0x0012ab0f: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fc9f: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012509f: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012663f: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012915f: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011be3f: mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c80f: mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d8af: mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011120e: mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0012ab41: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003fcd1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001250d1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00126671: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00129191: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011be71: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011c841: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0011d8e1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00111239: mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011b8b5: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9ab: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012eb4b: mov ecx, dword ptr [esp + 0x30]; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011b8fa: mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011b9ea: mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001254f9: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125d99: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f8379: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f8519: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012a470: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010b181: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011bb39: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bc2f: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012b420: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012b9c0: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001254c8: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001251f0: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00125d68: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125a90: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012d6f0: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f8349: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84e9: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011bb79: mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011bc69: mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011b608: mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0009b9b9: mov ecx, dword ptr [esp + 0x38]; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0015a38d: mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0016999a: mov ecx, dword ptr [esp + 0x48]; mov eax, dword ptr [ecx + 0x20]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x0006f6ed: mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000705f6: mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0011c69c: mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011c64a: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0011c5db: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x0011c6de: mov ecx, dword ptr [esp + 0x54]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000e4f66: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e4ffd: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e4fc7: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e4f07: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0009e0f6: mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012b79e: mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012b824: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012b702: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012ada1: mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0009e168: mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 8]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009e066: mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 8]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x001114d0: mov ecx, dword ptr [esp + 0x94]; mov edx, dword ptr [esp + 0x98]; call dword ptr gs:[0x10]; 
0x0011b55f: mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008d3f5: mov ecx, dword ptr [esp + 0xc]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x000f82fc: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0008d450: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x000603d1: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012c425: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b785: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d515: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d025: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111335: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c095: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be05: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be65: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111055: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f445: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129255: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf75: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc35: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125055: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd15: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd45: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c065: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b75: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed935: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed905: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f75: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124315: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124025: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124055: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120635: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00097c25: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000254a2: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x254b3; add esp, 0x1c; ret; 
0x000920e9: mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091a77: mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008ea64: mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x8ea78; ret; 
0x00097781: mov ecx, dword ptr [esp + 4]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000f821b: mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xf8230; ret; 
0x0009b52a: mov ecx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9b547; ret; 
0x00025622: mov ecx, dword ptr [esp + 4]; mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x000391b4: mov ecx, dword ptr [esp + 4]; movzx eax, al; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x0008f312: mov ecx, dword ptr [esp + 4]; xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0012e990: mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012bf42: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012c2c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012a522: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011bdf2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012c2f2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012c362: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012c392: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012c3c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012be32: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012c0c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012c1c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c3e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00108d52: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00126f72: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00127172: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00125192: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001116d2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00126cf2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012bc82: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00111ed2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00124632: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125142: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00108ba2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x001088e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x001292a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012bcb2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012bce2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003ca02: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ec932: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012c122: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00126772: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x00124082: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00120662: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000c2584: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc259a; ret; 
0x000d92b1: mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009303e: mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0012d235: mov ecx, dword ptr [esp]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012d1f7: mov ecx, dword ptr [esp]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012d181: mov ecx, dword ptr [esp]; mov edx, dword ptr [esp + 4]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00109bc3: mov ecx, dword ptr [esp]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00182d2d: mov ecx, dword ptr [esp]; ret; 
0x0012aa71: mov ecx, dword ptr cs:[esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009114c: mov ecx, dword ptr es:[ebp - 0x58]; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000d6f89: mov ecx, dword ptr es:[edx + eax*4 + 4]; test ecx, ecx; jne 0xd6f70; add eax, 1; ret; 
0x000e5e4b: mov ecx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x0013245e: mov ecx, dword ptr gs:[ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00128fc8: mov ecx, eax; cmp eax, 0xfffff000; ja 0x128fd8; mov eax, ecx; pop ebx; ret; 
0x0009daf4: mov ecx, eax; cmp eax, 0xfffff000; ja 0x9db08; mov eax, ecx; pop ebx; ret; 
0x0010a198: mov ecx, eax; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010a2d0: mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000dc0bd: mov ecx, eax; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xdc0d0; mov eax, edx; ret; 
0x000e4a29: mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0003d07e: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d036: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0009d96d: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9ad: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009d6ed: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009d72d: mov ecx, ebp; mov dword ptr [esp + 0xc], eax; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0010aeb6: mov ecx, ebp; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0003cf78: mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009d8ad: mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d627: mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0010afa4: mov ecx, ebp; mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0005a765: mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0005a739: mov ecx, edi; call dword ptr [eax - 0x73]; 
0x0009bc30: mov ecx, edi; call dword ptr gs:[0x10]; 
0x0009b45f: mov ecx, edi; dec dword ptr [ebp - 0x6672f7b]; call dword ptr [eax + 0x68]; 
0x0003d61b: mov ecx, edi; mov eax, esi; call dword ptr gs:[0x10]; 
0x000930bf: mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010a1e1: mov ecx, edi; std; call dword ptr [ecx + 0x6a]; 
0x000ad2e4: mov ecx, edx; and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x71194]; jmp eax; 
0x0009df00: mov ecx, edx; call dword ptr gs:[0x10]; 
0x0007a9c7: mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0008fbd0: mov ecx, edx; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012d107: mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000bfef9: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d2d9: mov ecx, esi; call dword ptr gs:[0x10]; 
0x0003fb74: mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000984a7: mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00111bdd: mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00111c11: mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00111a33: mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00111aa9: mov ecx, esi; mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00137247: mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001ada07: mov ecx, gs; ret; 
0x00199c5c: mov ecx, ss; stc; jmp dword ptr [esi + 0xf]; 
0x000e8125: mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00094df2: mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x0018e7d3: mov edi, 0x300045d; sbb al, 0x8b; jmp ebx; 
0x00142286: mov edi, 0x39fe735c; ret; 
0x000a9e0d: mov edi, 0x450ffff6; ret 0x66c3; 
0x001489b6: mov edi, 0x4c8bffed; and al, 0x1c; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x00120ac2: mov edi, 0x5c8bfff6; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000d6bdd: mov edi, 0x5f000000; pop esi; ret; 
0x000b883d: mov edi, 0x5f000005; pop esi; pop ebx; ret; 
0x0010abfa: mov edi, 0x850f001f; cmp eax, 0xf7fffffd; ret 0x67; 
0x000765c8: mov edi, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x001013e5: mov edi, 0x89000000; ret 0xe2c1; 
0x0011ed9d: mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009e656: mov edi, 0x8b001987; push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x394], edx; ret; 
0x0009e556: mov edi, 0x8b001988; push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0008cc56: mov edi, 0x8b001aa1; push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008b156: mov edi, 0x8b001abc; sub byte ptr [esi + ecx], 0; ret; 
0x0017bac3: mov edi, 0xfbd417e8; jmp dword ptr [esi - 0x70]; 
0x0017ba33: mov edi, 0xfbd4a7e8; jmp dword ptr [esi - 0x70]; 
0x000646b4: mov edi, 0xfc985d0; inc ebp; ret 0xc689; 
0x00095df8: mov edi, 0xfffcf7e9; jmp dword ptr [esi - 0x70]; 
0x0011c5e4: mov edi, 8; call dword ptr gs:[0x10]; 
0x0003bfc3: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0011e8b8: mov edi, dword ptr [ebp + 0xa4]; mov ecx, 0x5401; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x00079308: mov edi, dword ptr [ebp + eax*4 - 0x719b8]; add edi, ebp; jmp edi; 
0x00079397: mov edi, dword ptr [ebp + ebx*4 - 0x71910]; add edi, ebp; jmp edi; 
0x0007882a: mov edi, dword ptr [ebp + ecx*4 - 0x71b54]; add edi, ebp; jmp edi; 
0x000793f9: mov edi, dword ptr [ebp + edx*4 - 0x71854]; add edi, ebp; jmp edi; 
0x0007877b: mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x0006581a: mov edi, dword ptr [ebp - 0x590]; movzx edx, dl; mov ecx, dword ptr [edi + edx*4 - 0x72d38]; add ecx, edi; jmp ecx; 
0x0009bc40: mov edi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x000ee5ce: mov edi, dword ptr [ebx]; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000f56ce: mov edi, dword ptr [ebx]; sub esp, 0xc; push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x0013729f: mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00025626: mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x001489c0: mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x001488bb: mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x001487f2: mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x0009a005: mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0011d958: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0011d958: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000ec675: mov edi, dword ptr [edx + eax*4 - 0x6fcf8]; add edi, edx; jmp edi; 
0x0012ebbf: mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0018b833: mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011bef6: mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000e7bc4: mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00129a87: mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0012de82: mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012deb6: mov edi, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011b610: mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0009e3a3: mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x0011cf56: mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00169cc3: mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x001251fd: mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00125231: mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125ad1: mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00182d15: mov edi, dword ptr [esp]; ret; 
0x000ee5cd: mov edi, dword ptr gs:[ebx]; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000f56cd: mov edi, dword ptr gs:[ebx]; sub esp, 0xc; push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x00063e92: mov edi, eax; jmp edx; 
0x0011eb7b: mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000917bc: mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000e5c38: mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00185559: mov edi, eax; mov eax, ebp; mov edx, ecx; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0012ab45: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003fcd5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001250d5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00126675: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00129195: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011be75: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011c845: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0011d8e5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0012a4ad: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012b45d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012b9fd: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012d72d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000bfddd: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0012d10b: mov edi, ebp; call dword ptr gs:[0x10]; 
0x001602e6: mov edi, ebp; jmp dword ptr [esi - 0x70]; 
0x0012d1f5: mov edi, ebp; mov ecx, dword ptr [esp]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0005d0fa: mov edi, ecx; call dword ptr [eax - 0x18]; 
0x0005d0e7: mov edi, ecx; call dword ptr [eax - 0x73]; 
0x00064797: mov edi, ecx; jmp eax; 
0x000635bf: mov edi, ecx; jmp edx; 
0x0006348f: mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp edx; 
0x00063447: mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp edx; 
0x00063df0: mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00064057: mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp edx; 
0x0012d100: mov edi, ecx; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00193e97: mov edi, edi; jecxz 0x193e28; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00194d70: mov edi, edi; jecxz 0x194d5c; mov eax, dword ptr [0x81fffedf]; ret; 
0x00194e77: mov edi, edi; jecxz 0x194e08; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00195d70: mov edi, edi; jecxz 0x195d5c; mov eax, dword ptr [0x81fffecf]; ret; 
0x00195e77: mov edi, edi; jecxz 0x195e08; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0006f6e2: mov edi, edx; cmp ecx, 0x5a; jbe 0x705e3; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0003d617: mov edi, edx; xor edx, edx; mov ecx, edi; mov eax, esi; call dword ptr gs:[0x10]; 
0x001553d3: mov edi, fs; int1; call dword ptr [eax - 0x18]; 
0x0012c27c: mov edi, gs; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012c29c: mov edi, gs; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00183f55: mov edi, gs; jmp dword ptr [ecx]; 
0x0008e24d: mov edx, 0; cmove eax, edx; ret; 
0x0009b54e: mov edx, 0; cmovne eax, edx; ret; 
0x0012e10c: mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0011eca4: mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x00042961: mov edx, 0x10; cmove eax, edx; ret; 
0x0008ea9b: mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x000428de: mov edx, 0x20; cmove eax, edx; ret; 
0x000f7e33: mov edx, 0x20; cmovne eax, edx; ret; 
0x000a9043: mov edx, 0x2c89fff8; and al, 0x89; ret; 
0x000be13c: mov edx, 0x300107e; or al, 0x91; jmp ecx; 
0x0012f3bb: mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000f7e4b: mov edx, 0x40; cmove eax, edx; ret; 
0x000ad5c5: mov edx, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x00120f1a: mov edx, 0x64; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0002c37f: mov edx, 0x68fff93a; add byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0016909d: mov edx, 0x6afff973; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0008f321: mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000963c8: mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00096592: mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ed8f: mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f521: mov edx, 0x7fffffff; xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009498d: mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096974: mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fb71: mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0015ea5b: mov edx, 0x81000242; ret; 
0x0015e35b: mov edx, 0x81000249; ret; 
0x0015345b: mov edx, 0x810002f8; ret; 
0x00115c5b: mov edx, 0x810006d0; ret; 
0x00194c5b: mov edx, 0x81fffee0; ret; 
0x00059879: mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x000f9d86: mov edx, 0x89000000; ret; 
0x00081d0a: mov edx, 0x89000002; ret 0x468b; 
0x00127af1: mov edx, 0x89fffffd; ret; 
0x000c85c2: mov edx, 0x8bfff6b7; jl 0xc85ed; adc al, 0x8d; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0004ca32: mov edx, 0x8bffffe6; jl 0x4ca5d; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x0008dc21: mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00126d5c: mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0019ec25: mov edx, 0xffffffff; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000a63b5: mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x00028229: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0014d4e8: mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x000a6403: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000a63eb: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x0008dd9a: mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00122255: mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0008db61: mov edx, 1; call dword ptr gs:[0x10]; 
0x0017ff7b: mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009be32: mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00084f08: mov edx, 1; mov eax, edx; ret; 
0x000910ec: mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0011eb76: mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014d4f8: mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008d66b: mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008f586: mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00024d61: mov edx, 1; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00095b47: mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f5b8: mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f843: mov edx, 1; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008fa6d: mov edx, 1; xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008f8de: mov edx, 1; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009005f: mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012f4d9: mov edx, 2; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00121b3e: mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0008d5ae: mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008d61d: mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0012f562: mov edx, 8; call dword ptr gs:[0x10]; 
0x000428c0: mov edx, 8; cmove eax, edx; ret; 
0x00093bab: mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008caeb: mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008cb22: mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0008e794: mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00024b3a: mov edx, dword ptr [eax + 0x118]; test edx, edx; je 0x24b45; ret; 
0x0017140b: mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x001718d1: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0016d9a2: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00170dca: mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x001688be: mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00089339: mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x00172ffb: mov edx, dword ptr [eax + 0x28]; mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00041a18: mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x001728aa: mov edx, dword ptr [eax + 0x8c]; lea eax, [eax + 0xa78c]; mov dword ptr gs:[edx], eax; ret; 
0x00084f92: mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0008cb56: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x001718da: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00168df8: mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016fd15: mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00172f92: mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00096417: mov edx, dword ptr [eax]; and edx, 2; je 0x96428; xor eax, eax; add esp, 0xc; ret; 
0x000c2588: mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc259a; ret; 
0x00107314: mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00090c7d: mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x001097e4: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0008e6e4: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000804e2: mov edx, dword ptr [eax]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00181be3: mov edx, dword ptr [eax]; test edx, edx; jne 0x181bf0; add esp, 8; pop ebx; ret; 
0x0003cd9a: mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x00094a70: mov edx, dword ptr [ebp + eax*4 - 0x714fc]; lea ebx, [edi + 0xc]; add edx, ebp; jmp edx; 
0x00109ede: mov edx, dword ptr [ebp - 0x148]; mov eax, dword ptr [ebx]; mov ecx, dword ptr [edx + eax*4 - 0x6f3b4]; add ecx, edx; jmp ecx; 
0x0002684d: mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0006629f: mov edx, dword ptr [ebp - 0x58c]; add eax, dword ptr [eax + ebx*4 - 0x72bf8]; jmp eax; 
0x0008ead9: mov edx, dword ptr [ebx + 0x18]; and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x0003fead: mov edx, dword ptr [ebx + 2]; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008c1ef: mov edx, dword ptr [ebx + 8]; mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003315b: mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x0005f932: mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x0008f6f8: mov edx, dword ptr [ebx]; mov eax, edx; shr eax, 3; je 0x8f730; mov eax, edi; call dword ptr gs:[0x10]; 
0x0016325d: mov edx, dword ptr [ebx]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0008c940: mov edx, dword ptr [ebx]; push esi; push eax; push ecx; call edx; 
0x00181f3c: mov edx, dword ptr [ecx + 0x108]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0008c143: mov edx, dword ptr [ecx + 0x18]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00090f13: mov edx, dword ptr [ecx + 0x22c]; mov eax, dword ptr [ecx + 0x228]; push edx; call eax; 
0x00148a34: mov edx, dword ptr [ecx - 0x6e5c4]; add edx, ecx; jmp edx; 
0x0017e40f: mov edx, dword ptr [ecx]; add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0012a9eb: mov edx, dword ptr [ecx]; cmp edx, 0x26; je 0x12aa3c; pop ebx; pop esi; ret; 
0x0008dff8: mov edx, dword ptr [edi + 0x10]; test edx, edx; je 0x8e038; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008dcda: mov edx, dword ptr [edi + 0x1acc]; mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000a46c0: mov edx, dword ptr [edi + 0x90]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0008e0ae: mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0016a2c1: mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x000375cf: mov edx, dword ptr [edi + eax*4 - 0x77ae0]; add edx, edi; jmp edx; 
0x000374ea: mov edx, dword ptr [edi + eax*4 - 0x77bdc]; add edx, edi; jmp edx; 
0x00037477: mov edx, dword ptr [edi + eax*4 - 0x77c30]; add edx, edi; jmp edx; 
0x0016a0d0: mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0016a0f3: mov edx, dword ptr [edx + 0x14]; mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00137207: mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x0016a123: mov edx, dword ptr [edx + 0x20]; mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x001700e6: mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00170a76: mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00084feb: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00084ebb: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0016d53c: mov edx, dword ptr [edx + 0x8c]; mov dword ptr [eax + 8], edx; ret; 
0x0007ac08: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007ab19: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00024efd: mov edx, dword ptr [edx + 0xa4]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0008dce8: mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0013ce5d: mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x00156c6f: mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x0007f2e3: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x7f2e0; ret; 
0x00089103: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x89100; ret; 
0x00093b0e: mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008cc5e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc7e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc9e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008ccbe: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00093aee: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00093ace: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x0009e5ce: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x358], edx; ret; 
0x0009e5ae: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x35c], edx; ret; 
0x0009e57e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e52e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4ce: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e4fe: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e65e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x394], edx; ret; 
0x0009e55e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0012f0d4: mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0008e244: mov edx, dword ptr [edx]; mov eax, 0x16; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x00098f48: mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x98f58; ret; 
0x000c1b0d: mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000baf72: mov edx, dword ptr [esi + 3]; mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0017565a: mov edx, dword ptr [esi + 4]; push eax; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00175693: mov edx, dword ptr [esi + 4]; push eax; push ecx; push esi; call dword ptr [edx + 8]; 
0x0005aa34: mov edx, dword ptr [esi + eax*4 - 0x73764]; add edx, esi; jmp edx; 
0x000be373: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf30: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00129240: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000b7270: mov edx, dword ptr [esi]; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000be344: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf11: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7251: mov edx, dword ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00097c29: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00112707: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012c421: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b781: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d511: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d021: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111331: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c091: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be01: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be61: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111051: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f441: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129251: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf71: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc31: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125051: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd11: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd41: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c061: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b71: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed931: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed901: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f71: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124311: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124021: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124051: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120631: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0005a945: mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x5a958; add esp, 0xc; ret; 
0x00077c15: mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x77c28; add esp, 0xc; ret; 
0x00034a9b: mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00096428: mov edx, dword ptr [esp + 0x14]; call 0x962c0; xor eax, eax; add esp, 0xc; ret; 
0x0011ef4b: mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00092449: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001893ba: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009d586: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c906: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012c156: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c236: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001226c6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ff6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00120606: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd96: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x001695b1: mov edx, dword ptr [esp + 0x14]; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x0012e051: mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012ac2a: mov edx, dword ptr [esp + 0x18]; cmp esi, -1; je 0x12ac50; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00107f07: mov edx, dword ptr [esp + 0x18]; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0011b82e: mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010888c: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00060427: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012673b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001118fb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b27b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c32b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfab: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c02b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdcb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c18b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bfeb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bebb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c1fb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012acfb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270eb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241bb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012069b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0018b82f: mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e53f: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00176508: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x176518; add esp, 0xc; ret; 
0x00176648: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x176658; add esp, 0xc; ret; 
0x0012a819: mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012aa76: mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009bc27: mov edx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e7bb8: mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001387ca: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x0013996a: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x0018b9e0: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0004022f: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x000527df: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x00090982: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x000966b2: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b12: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x0009703e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x0009748e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x0009a419: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a685: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9a6b7; add esp, 0x2c; ret; 
0x001271f0: mov edx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e809d: mov edx, dword ptr [esp + 0x24]; call 0xe7d70; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00108990: mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003fca8: mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012ab47: mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003fcd7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001250d7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00126677: mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00129197: mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011be77: mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011c847: mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0011d8e7: mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00128b0a: mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x128b1b; add esp, 0x3c; ret; 
0x0018b8ae: mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000dbd50: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4f0: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011b604: mov edx, dword ptr [esp + 0x34]; mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f8352: mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125501: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125da1: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f8381: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f8521: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012eb4f: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011cf52: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001251f9: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012522d: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125acd: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010b18a: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010b1bf: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012a4af: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012b45f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012b9ff: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012d72f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c22ee: mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x00172f9d: mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x172fae; add esp, 0x4c; ret; 
0x00153392: mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0009d91d: mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d69d: mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009d8a4: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d61e: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012df61: mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011efa0: mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012de2d: mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x12de3e; add esp, 0x7c; ret; 
0x0010aeb8: mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x0010afec: mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x001114d7: mov edx, dword ptr [esp + 0x98]; call dword ptr gs:[0x10]; 
0x001115d0: mov edx, dword ptr [esp + 0x98]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00111797: mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0011173c: mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; call dword ptr gs:[0x10]; 
0x00176304: mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0007abcb: mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x001266fc: mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003bc81: mov edx, dword ptr [esp + 0xc]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0018289b: mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000e4968: mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0011c6e2: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000dbf54: mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00093078: mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0011c698: mov edx, dword ptr [esp + 0xc]; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000930bb: mov edx, dword ptr [esp + 0xc]; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0011eadb: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11eaf3; add esp, 0x1c; ret; 
0x0012105b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12106c; add esp, 0x1c; ret; 
0x0012275e: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x00128f81: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0012dc2c: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12dc3d; add esp, 0x1c; ret; 
0x00143a6f: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x143a80; add esp, 0x1c; ret; 
0x00143abe: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x143acf; add esp, 0x1c; ret; 
0x00145fb8: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x00171c17: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x171c37; add esp, 0x1c; ret; 
0x00172117: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x172137; add esp, 0x1c; ret; 
0x0018568e: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x0003d84f: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3d860; add esp, 0x1c; ret; 
0x0003fe74: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x00040081: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x00040331: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b4: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x00059ffd: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5a017; add esp, 0x1c; ret; 
0x000d7bf3: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000e2327: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47a7: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x000ec8d4: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xec8ef; add esp, 0x1c; ret; 
0x00097bf9: mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008eec9: mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012d238: mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012d1fa: mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0013b9e8: mov edx, dword ptr [esp + 4]; mov dword ptr gs:[ebp], edx; mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0012d184: mov edx, dword ptr [esp + 4]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00033d4a: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00034474: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034484: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0014d46a: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x14d487; ret; 
0x00175f70: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003d5c0: mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008df01: mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00093b0a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008cc5a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc7a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc9a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008ccba: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00093aea: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00093aca: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x0009e5ca: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x358], edx; ret; 
0x0009e5aa: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x35c], edx; ret; 
0x0009e57a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e52a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4ca: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e4fa: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e65a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x394], edx; ret; 
0x0009e55a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0007801c: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00110e94: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001828c4: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017674c: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x0008e9b4: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001097d4: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00120e51: mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0008eba0: mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x8ebb8; ret; 
0x0008ae44: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00182884: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f84: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001818a4: mov edx, dword ptr [esp + 8]; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x1818b0; ret; 
0x00114064: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00115a44: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0008eb84: mov edx, dword ptr [esp + 8]; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00093bfe: mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00098a86: mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00182d1d: mov edx, dword ptr [esp]; ret; 
0x0011f6a7: mov edx, dword ptr es:[edx + 0xa4]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x00093baa: mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008caea: mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008cb21: mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0016325c: mov edx, dword ptr gs:[ebx]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012a9ea: mov edx, dword ptr gs:[ecx]; cmp edx, 0x26; je 0x12aa3c; pop ebx; pop esi; ret; 
0x0004239d: mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x000f828d: mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0004230b: mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004236f: mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00120ac9: mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120599: mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c4ae: mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0008fb08: mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00110fe9: mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011123d: mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000422dd: mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x0008f674: mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x0007caa6: mov edx, eax; pop esi; pop edi; pop ebp; ret; 
0x0008a175: mov edx, eax; ret; 
0x0003c349: mov edx, ebp; call dword ptr gs:[0x10]; 
0x0009b9bd: mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0011b8fe: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00111c13: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0008b987: mov edx, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012e157: mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012c280: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012bd70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0012bf20: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x001271c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012c3f0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000e71b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x001112c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0011f500: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0011d4b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0011d4b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011f6c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012c2a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00129280: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00129120: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012bc60: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00127150: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012c260: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0010acf0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012be90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ed8b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001116b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012abb0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012abb0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ed960: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00124660: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00108910: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00108930: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x00108950: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x00110f00: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0012b1c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012b1a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012b1a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012bf40: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012c2c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012a520: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011bdf0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012c2f0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012c360: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012c390: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012c3c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012be30: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012c0c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012c1c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c3e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00108d50: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00126f70: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00127170: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00125190: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001116d0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00126cf0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012bc80: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00111ed0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00124630: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125140: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00108ba0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x001088e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x001292a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012bcb0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012bce0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003ca00: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ec930: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012c120: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00126770: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x00124080: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00120660: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0009b98d: mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000705f4: mov edx, ecx; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0011bef4: mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0018555d: mov edx, ecx; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0003cf7a: mov edx, edi; call dword ptr gs:[0x10]; 
0x00063de9: mov edx, edi; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x000e5001: mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e4fcb: mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00111aab: mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011b9ee: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0003d084: mov edx, edi; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d03c: mov edx, edi; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0006483c: mov edx, edi; mov edi, eax; jmp edx; 
0x0012d109: mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00063b1c: mov edx, edi; mov edi, ecx; jmp edx; 
0x000e4f0b: mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00088199: mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000881cf: mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x000dc055: mov edx, esi; call dword ptr gs:[0x10]; 
0x001a3c8e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001a310e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x000e4cbe: mov es, word ptr [eax]; add byte ptr [eax], al; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0006e4ac: mov es, word ptr [ebx + edi*8 - 1]; inc dword ptr [ebx + 0x6a5004ec]; and byte ptr [edi - 0x18], dl; ret; 
0x00081a88: mov es, word ptr [ebx - 0x74fffffc]; push edx; add al, 0x8b; jl 0x81ab7; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0010814e: mov es, word ptr [ebx - 0x7c72f314]; inc esi; pop eax; stc; call dword ptr [eax - 0x18]; 
0x0005cd61: mov es, word ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x000300a2: mov es, word ptr [edi]; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00030094: mov es, word ptr [edi]; add byte ptr [ecx - 0x76e3dbbc], cl; lds ecx, ptr [ecx + 0xbe8243c]; mov es, word ptr [edi]; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x0004739d: mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00046f29: mov esi, 0x243c83db; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x000dd6d4: mov esi, 0x246c8903; add al, 0x83; ret; 
0x0007e6be: mov esi, 0x39000000; ret; 
0x000a445d: mov esi, 0x3c24; add byte ptr [ebx + ebp - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ab997a], cl; call dword ptr [ebx + 0x50]; 
0x00126ec2: mov esi, 0x4f050005; call dword ptr [eax]; 
0x0013fc57: mov esi, 0x81000430; ret; 
0x00105c57: mov esi, 0x810007d0; ret; 
0x00100557: mov esi, 0x81000827; ret; 
0x000e6a57: mov esi, 0x810009c2; ret; 
0x00054b57: mov esi, 0x810012e1; ret; 
0x001a0c57: mov esi, 0x81fffe20; ret; 
0x00191c57: mov esi, 0x81ffff10; ret; 
0x0010b099: mov esi, 0x83000000; les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x000a98fe: mov esi, 0x83000165; les ebx, ptr [eax]; pop ebx; ret; 
0x0003470e: mov esi, 0x8300062e; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0012167d: mov esi, 0x83fffffe; in al, dx; or byte ptr [ebp - 0x6c1a67a], cl; call dword ptr [eax - 1]; 
0x000c3cee: mov esi, 0x890006d9; ret; 
0x00030bdb: mov esi, 0x895f3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x0006217d: mov esi, 0x89c68900; ret 0x44c7; 
0x0006dbe9: mov esi, 0x89c68900; ret; 
0x00091b2e: mov esi, 0x8b000003; je 0x91b59; add al, 0x89; ret; 
0x00059346: mov esi, 0x8b1b244c; je 0x59371; sbb al, 0x89; ret 0xc801; 
0x0004cabe: mov esi, 0x8bfffe72; jl 0x4cae9; sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x000345d2: mov esi, 0xc4830008; adc byte ptr [ebp - 0x76238a40], al; ret; 
0x000a9484: mov esi, 0xda390114; je 0xa9480; pop ebx; ret; 
0x0013df88: mov esi, 0xe8000006; dec edi; stc; cli; jmp dword ptr [esi - 0x3f]; 
0x001a515e: mov esi, 0xf6000000; ret 0xf0f; 
0x000a94e1: mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x00171864: mov esi, 0xfc7676e8; jmp dword ptr [esi - 0x70]; 
0x0018c241: mov esi, 0xff6ad2e8; inc dword ptr [ecx + 0x47ec9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00031ed1: mov esi, 0xffff34e9; push esi; ret 0xf03; 
0x00129c0f: mov esi, 5; call dword ptr gs:[0x10]; 
0x00090efb: mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x00091a7d: mov esi, 8; call dword ptr gs:[0x10]; 
0x0003c29d: mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0009173d: mov esi, 8; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x0002326e: mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x00109f7d: mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0003cf73: mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003c344: mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0005265c: mov esi, dword ptr [0x14]; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0003bfc0: mov esi, dword ptr [eax + 4]; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00109f90: mov esi, dword ptr [ebp - 0x144]; push dword ptr [esi + 0x20]; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000e68f9: mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x00071a6c: mov esi, dword ptr [ebp - 0x500]; mov ecx, dword ptr [esi + edx*4 - 0x72558]; add ecx, esi; jmp ecx; 
0x0016792f: mov esi, dword ptr [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x001679ff: mov esi, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x00167963: mov esi, dword ptr [ebx - 7]; jmp dword ptr [ebp - 0x75]; 
0x0014d8f4: mov esi, dword ptr [ebx]; mov dword ptr [esp], ebx; mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x0013729c: mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0003742b: mov esi, dword ptr [edi + eax*4 - 0x77c84]; add esi, edi; jmp esi; 
0x000373d7: mov esi, dword ptr [edi + eax*4 - 0x77cd8]; add esi, edi; jmp esi; 
0x000373a3: mov esi, dword ptr [edi + eax*4 - 0x77d2c]; add esi, edi; jmp esi; 
0x00036e24: mov esi, dword ptr [edi + eax*4 - 0x77d80]; add esi, edi; jmp esi; 
0x00036de9: mov esi, dword ptr [edi + eax*4 - 0x77dd4]; add esi, edi; jmp esi; 
0x00036dc0: mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x00036d21: mov esi, dword ptr [edi + eax*4 - 0x77e7c]; add esi, edi; jmp esi; 
0x00036790: mov esi, dword ptr [edi + eax*4 - 0x77ed0]; add esi, edi; jmp esi; 
0x0008c133: mov esi, dword ptr [edx + eax*4 - 0x71698]; add esi, edx; jmp esi; 
0x000a9714: mov esi, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0xa9733; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97d4: mov esi, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0xa980b; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x0011eefb: mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012b2b0: mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00129c6f: mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0011bef0: mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00112433: mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0006042f: mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012a826: mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e7bc0: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0006047f: mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x604a8; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x00052666: mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x001259d8: mov esi, dword ptr [esp + 0x2c]; lea eax, [ebx - 1]; cmp eax, 2; jbe 0x125a10; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00108a61: mov esi, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e4992: mov esi, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010b18e: mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010b1c3: mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012a4b3: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012b463: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012ba03: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012d733: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0011cf5a: mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012de7e: mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012b256: mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0011e9e6: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0009d8af: mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d973: mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9b3: mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0012df65: mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012b5f1: mov esi, dword ptr [esp + 0x54]; mov ebx, dword ptr [esp + 0x50]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011d72b: mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011d671: mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001125e6: mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0011e817: mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012a78b: mov esi, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0010ee36: mov esi, dword ptr [esp + 0xc]; movzx edx, dl; mov ecx, dword ptr [esi + edx*4 - 0x6ec98]; add ecx, esi; jmp ecx; 
0x0005ae0c: mov esi, dword ptr [esp + 0xc]; push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0009d629: mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009d6f3: mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009d733: mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0009e16c: mov esi, dword ptr [esp + 8]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009e06a: mov esi, dword ptr [esp + 8]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0013e851: mov esi, dword ptr [esp + eax*4]; stc; call dword ptr [eax - 0x77]; 
0x00182d25: mov esi, dword ptr [esp]; ret; 
0x0009e16b: mov esi, dword ptr fs:[esp + 8]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009e069: mov esi, dword ptr fs:[esp + 8]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0005265b: mov esi, dword ptr gs:[0x14]; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0017be99: mov esi, eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00085114: mov esi, eax; lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001696c3: mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x000e4f0d: mov esi, ebp; call dword ptr gs:[0x10]; 
0x000e4fc5: mov esi, ebp; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0018555f: mov esi, ecx; call dword ptr gs:[0x10]; 
0x0012b70b: mov esi, edi; call dword ptr gs:[0x10]; 
0x0012e10a: mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0010afa6: mov esi, edi; mov edx, dword ptr [esp + 0x88]; call dword ptr gs:[0x10]; 
0x00046456: mov esi, edx; and esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x00046463: mov esi, edx; and esi, ecx; mov eax, esi; pop esi; pop edi; ret; 
0x00093e83: mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000bfddf: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000bfe5f: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000bfe35: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bfe9f: mov esi, edx; ret; 
0x0004254f: mov esp, 0x1508dc0; mov eax, edx; ret; 
0x00042568: mov esp, 0x1c283d0; test eax, eax; cmovne eax, edx; ret; 
0x00068875: mov esp, 0x1fffffb; ret 0x9589; 
0x00068d1e: mov esp, 0x1fffffb; ret 0xd801; 
0x00068b7f: mov esp, 0x1fffffb; ret 0xf001; 
0x000673ee: mov esp, 0x1fffffb; ret 0xf801; 
0x0005f76b: mov esp, 0x24424; add byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax + 0x68]; 
0x00080734: mov esp, 0x3900768d; ret; 
0x0005c8fa: mov esp, 0x39c829d2; ret 0x8d0f; 
0x00035356: mov esp, 0x3e3f808d; stc; call dword ptr [eax - 0x18]; 
0x000351ec: mov esp, 0x408dc189; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x000be133: mov esp, 0x4bf3e8d2; or al, 0; add ecx, 0x107eba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be115: mov esp, 0x4c11e8d2; or al, 0; add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00024f61: mov esp, 0x50015dd; scasd eax, dword ptr es:[edi]; push ds; and dword ptr [eax], eax; lea eax, [eax - 0x680b4]; ret; 
0x00080dcf: mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x0016906a: mov esp, 0x52fff324; push 1; push ebx; call dword ptr [eax]; 
0x00169193: mov esp, 0x52fff324; push 2; push ebx; call dword ptr [eax]; 
0x00027ddd: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0017dacd: mov esp, 0x5b000001; pop esi; pop edi; pop ebp; ret; 
0x00149e68: mov esp, 0x5b000002; pop esi; pop edi; pop ebp; ret; 
0x0015bd2e: mov esp, 0x5b000008; pop esi; pop edi; pop ebp; ret; 
0x000b7140: mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000b6e40: mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x000ad93a: mov esp, 0x5fd001d2; pop esi; ret; 
0x000bee61: mov esp, 0x5ff801c0; ret; 
0x00133117: mov esp, 0x6585808d; stc; call dword ptr [eax - 1]; 
0x001330d7: mov esp, 0x65a4808d; stc; call dword ptr [eax - 1]; 
0x000be255: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x182d2d; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82b5: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x182d2d; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c75: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x182d2d; add ecx, 0x10f0c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00181a49: mov esp, 0x748dfff0; add byte ptr es:[ebx - 0x18], dl; ret; 
0x0004292c: mov esp, 0x74c985c1; push es; pop ebx; ret; 
0x000bee91: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000beea4: mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000beec4: mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000beeb4: mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000bae33: mov esp, 0x7ef3e8d2; or al, 0; add ecx, 0x10b13a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae15: mov esp, 0x7f11e8d2; or al, 0; add ecx, 0x10b158; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008b157: mov esp, 0x808b001a; insb byte ptr es:[edi], dx; push cs; add byte ptr [eax], al; ret; 
0x000a64f4: mov esp, 0x80fff6a1; in eax, 2; lea edx, [edx - 0x177374]; cmove eax, edx; ret; 
0x000d1c24: mov esp, 0x80fff6dc; in eax, 2; lea edx, [edx - 0x15fe54]; cmove eax, edx; ret; 
0x000ffa59: mov esp, 0x81000832; ret; 
0x000f8b59: mov esp, 0x810008a1; ret; 
0x000b8f6d: mov esp, 0x81000c9d; shr dword ptr [edi], 0xcf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b816d: mov esp, 0x81000cab; shr dword ptr [edi + 0x30010dc], 0xc; xchg ecx, eax; jmp ecx; 
0x000b786d: mov esp, 0x81000cb4; ror edi, 0xe4; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0018c859: mov esp, 0x81ffff64; ret; 
0x0017c7b8: mov esp, 0x83000003; in al, dx; or byte ptr [ebp - 0x6896675], cl; call dword ptr [ecx - 0x77]; 
0x001aa58c: mov esp, 0x830fca39; ret; 
0x000e7e85: mov esp, 0x83c0458b; ror byte ptr [edi], 0x89; ret 0x25; 
0x000b6b53: mov esp, 0x83ce01d2; ret 0x2910; 
0x000ad944: mov esp, 0x83d001d2; rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x000ad95e: mov esp, 0x83d001d2; sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000ad951: mov esp, 0x83d001d2; shl byte ptr [eax], 0x5f; pop esi; ret; 
0x00067015: mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x001abbfd: mov esp, 0x85c07d8b; fisttp dword ptr [edi]; test byte ptr [edi - 0x900000d], ah; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [eax]; 
0x0008fee0: mov esp, 0x890008f6; ret; 
0x001a8b68: mov esp, 0x89c07d89; inc ebp; les ecx, ptr [ecx - 0x834b]; jmp dword ptr [esi - 0x7f]; 
0x0004fc34: mov esp, 0x8b000000; lodsb al, byte ptr [esi]; and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0012392d: mov esp, 0x8bfff680; inc eax; je 0x1238be; push esi; add al, 0x89; ret 0xeac1; 
0x001234c7: mov esp, 0x8bfff68f; inc eax; je 0x123458; push esi; add al, 0x89; ret 0xeac1; 
0x00123782: mov esp, 0x8bfff694; inc eax; je 0x123713; push esi; add al, 0x89; ret 0xeac1; 
0x00143495: mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00067383: mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x00112436: mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00105416: mov esp, 0x9024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x001a2c20: mov esp, 0xa8000000; inc eax; jne 0x1a2cf0; lea eax, [edi + 7]; pop edi; ret; 
0x000b816a: mov esp, 0xabbce8d2; or al, 0; add ecx, 0x10dcaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8145: mov esp, 0xabe1e8d2; or al, 0; add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000d8026: mov esp, 0xb824; add byte ptr [ecx], al; ret 0x848b; 
0x000428bc: mov esp, 0xbad284c0; or byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000428da: mov esp, 0xbad285c2; and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000d040b: mov esp, 0xc0830a8b; add al, 0x83; ret 0x8904; 
0x000b6b15: mov esp, 0xc211e8d2; or al, 0; add ecx, 0x10f1a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0004295c: mov esp, 0xd28566c0; mov edx, 0x10; cmove eax, edx; ret; 
0x000c210d: mov esp, 0xe8fffffe; retf 0x76d; add byte ptr [ebx - 0x72e3dbac], cl; add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x00035b78: mov esp, 0xe9ac4589; ret 0xfffd; 
0x000d4c36: mov esp, 0xe9ffffc9; cmp esp, 0xa40fffff; ret 0xc102; 
0x000a8e68: mov esp, 0xf6ffe76b; inc ecx; jne 0xa8e72; lea edx, [edx - 0x1769d4]; cmove eax, edx; ret; 
0x000c2568: mov esp, 0xf6fff6e2; inc ecx; jnp 0xc2574; cmove eax, edx; ret; 
0x00025627: mov esp, 0xf791ec81; inc dword ptr [ecx]; iretd; jmp edi; 
0x001aaef0: mov esp, 0xf7b84589; ret; 
0x001016b6: mov esp, 0xf824; add byte ptr [edi], cl; dec esp; ret; 
0x0007877c: mov esp, 0xf8e40495; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0007882b: mov esp, 0xf8e4ac8d; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x00079309: mov esp, 0xf8e64885; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x00079398: mov esp, 0xf8e6f09d; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x000793fa: mov esp, 0xf8e7ac95; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x000ec676: mov esp, 0xf9030882; inc dword ptr [ecx]; xlatb; jmp edi; 
0x001487f3: mov esp, 0xf91a0491; inc dword ptr [ecx]; iretd; jmp edi; 
0x001488bc: mov esp, 0xf91a1491; inc dword ptr [ecx]; iretd; jmp edi; 
0x001489c1: mov esp, 0xf91a2891; inc dword ptr [ecx]; iretd; jmp edi; 
0x00175f53: mov esp, 0xfc2f87e8; jmp dword ptr [esi - 0x70]; 
0x001694b8: mov esp, 0xfcfa22e8; jmp dword ptr [esi - 0x70]; 
0x000a7cbd: mov esp, 0xfffe896; inc esp; ret 0x66c3; 
0x00109f92: mov esp, 0xfffffffe; jbe 0x109fb9; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0003bfcd: mov esp, ecx; jmp edx; 
0x00137298: mov esp, edi; mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x000b13e8: mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001a7ffe: mov fs, word ptr [edi - 0x76fffff9]; ret; 
0x00090cc4: mov fs, word ptr [edx + eax]; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000be271: mov gs, eax; mov dh, 0x4a; or al, 0; add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c91: mov gs, eax; xchg esi, eax; ror byte ptr [eax + eax], 0x81; shr dword ptr [ecx + 0x30010f0], 0xc; cdq; jmp ecx; 
0x0018a309: mov gs, ebp; call dword ptr [eax + 0x6a]; 
0x0013e91a: mov gs, word ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x000b7170: mov word ptr [0x5e5f0000], es; pop ebx; ret; 
0x000be52f: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb0ac: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011eca9: mov word ptr [eax + 0x16], dx; ret; 
0x000be649: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1b6: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008cc91: mov word ptr [eax + 0xf], fs; add byte ptr [0x1aa17f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x000baf58: mov word ptr [eax + 4], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be42f: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafbc: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c0ad5: mov word ptr [eax + eax], es; add al, ch; ret 0xf626; 
0x000a64fd: mov word ptr [eax + ebp*8 - 0x3dbbf001], cs; ret; 
0x0011d1a2: mov word ptr [eax + ecx*4], fs; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x00106fd4: mov word ptr [eax - 0x6f5e8], ss; add ecx, eax; jmp ecx; 
0x00179b49: mov word ptr [eax - 0x72b00000], gs; xchg dword ptr [esi], edi; jae 0x179b4c; call dword ptr [eax + 0x6a]; 
0x00179fba: mov word ptr [eax - 0x72b00000], gs; xchg dword ptr [esi], edi; jae 0x179fbd; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00030e50: mov word ptr [eax - 0x7872fff0], es; in al, 0x82; stc; call dword ptr [eax - 0x73]; 
0x000a6e4c: mov word ptr [eax - 0xb], ds; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000baf23: mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000419af: mov word ptr [eax], dx; mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x000be346: mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf13: mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001096ab: mov word ptr [eax], dx; xor eax, eax; ret; 
0x001728ac: mov word ptr [eax], es; add byte ptr [eax], al; lea eax, [eax + 0xa78c]; mov dword ptr gs:[edx], eax; ret; 
0x0016d53e: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0011b55b: mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003d3d1: mov word ptr [eax], es; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d3e5; add esp, 0x9c; ret; 
0x0014e389: mov word ptr [ebp - 0x63ea37f], cs; call dword ptr [eax - 0x73]; 
0x00136cfd: mov word ptr [ebp - 0x9773], cs; dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x0015b9cf: mov word ptr [ebp - 0xe], cs; call dword ptr [eax - 0x18]; 
0x0019e765: mov word ptr [ebx - 0x37d60009], gs; pop ebp; pop ebx; ret; 
0x0019bf58: mov word ptr [ebx - 0x37d60009], gs; pop ebx; ret; 
0x0015053c: mov word ptr [ebx - 0x6e594], es; add ecx, ebx; jmp ecx; 
0x000a429e: mov word ptr [ebx - 0x71254], es; add ecx, ebx; jmp ecx; 
0x0006fc4a: mov word ptr [ebx - 0x726b4], ss; add ecx, eax; jmp ecx; 
0x0006f3ce: mov word ptr [ebx - 0x72734], ss; add ecx, eax; jmp ecx; 
0x00070dc4: mov word ptr [ebx - 0x72834], ss; add ecx, eax; jmp ecx; 
0x0019bf51: mov word ptr [ebx - 0x7b740009], gs; or dword ptr [ebx + ebp*4 - 0x37d60009], 0x5b; ret; 
0x0019bf4f: mov word ptr [ebx - 0x85474], cs; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x0014824d: mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x000b0fb2: mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000b0ff4: mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x00136ea3: mov word ptr [ecx - 0x11f73], cs; call dword ptr [ecx - 1]; 
0x00129a9a: mov word ptr [ecx - 0x4c], ss; out dx, eax; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x000391bc: mov word ptr [ecx - 0x779fc], es; jmp ecx; 
0x00122e56: mov word ptr [ecx - 7], fs; call dword ptr [eax + 0x55]; 
0x000b0f80: mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b0f70: mov word ptr [ecx], dx; pop ebx; ret; 
0x0011224b: mov word ptr [ecx], es; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x001796e0: mov word ptr [ecx], es; ret 0x458b; 
0x000b8abc: mov word ptr [edi + 0x10], cx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000b73dc: mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b8bc6: mov word ptr [edi + 0x18], cx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000b74e6: mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x00123452: mov word ptr [edi + 0x408bfff6], cs; je 0x1233e3; push esi; add al, 0x89; ret 0xeac1; 
0x000b7298: mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000b89cc: mov word ptr [edi + 8], dx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000b72ec: mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000f8053: mov word ptr [edi - 0x6fa20], es; add ecx, edi; jmp ecx; 
0x00065824: mov word ptr [edi - 0x72d38], ss; add ecx, edi; jmp ecx; 
0x000b7266: mov word ptr [edi], cx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000b88f3: mov word ptr [edi], dx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000b7253: mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000b6f70: mov word ptr [edi], es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d7d60: mov word ptr [edi], fs; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00114068: mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00115a48: mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x000b33a8: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000b34e8: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000bd76b: mov word ptr [edx + 4], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefd8: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000af108: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000a9854: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a9794: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b33fc: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b353c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000bd7df: mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000af01c: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000af15c: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a9bcf: mov word ptr [edx - 0x19], gs; push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6b86c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00109ee7: mov word ptr [edx - 0x6f3b4], es; add ecx, edx; jmp ecx; 
0x000c09ce: mov word ptr [edx - 0x70c9c], es; add ecx, edx; jmp ecx; 
0x0018c0b5: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f29c: mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019128c: mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0018c0d5: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f330: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191320: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x000b3363: mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b34a3: mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b3373: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b34b3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000aefb3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000af0d3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000bd706: mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aefa3: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000af0c3: mov word ptr [edx], ax; mov eax, edx; ret; 
0x001918db: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018f91b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000a9810: mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a9760: mov word ptr [edx], si; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a9758: mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x0010ee3e: mov word ptr [esi - 0x6ec98], ss; add ecx, esi; jmp ecx; 
0x00071a73: mov word ptr [esi - 0x72558], ss; add ecx, esi; jmp ecx; 
0x001527a0: mov word ptr [esi - 7], gs; call dword ptr [eax - 0x18]; 
0x00087c22: mov word ptr [esi], cs; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x0004f53c: mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x0005d363: mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x000cd6fc: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000485aa: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c6d7c: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x000e5e53: mov word ptr [esp + edi], fs; add dword ptr [eax], eax; add byte ptr [ebx + 0x164248c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001114d1: mov word ptr [esp + edx*4], fs; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d8a02: mov word ptr [esp + esi], fs; add dword ptr [eax], eax; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00192183: movaps xmmword ptr [eax + eax], xmm0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00034506: movaps xmmword ptr [eax], xmm4; add byte ptr [ebx + 0x9480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0018f199: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191199: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0018f839: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f3ca: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001913ba: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x000b8e6d: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x182d2d; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e51: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x182d2d; add ecx, 0x10d0d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b776d: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x182d2d; add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7751: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x182d2d; add ecx, 0x10e673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0018c32e: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001913bf: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0018c35e: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c38e: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c3ee: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c41e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c44e: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c4be: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c4ee: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c52e: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f3c5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001913b5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0018c329: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c324: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b3340: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b35f0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aef80: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000af210: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bb070: movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be730: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb26d: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6d0: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb20d: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6f0: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb22d: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be710: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb24d: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be50a: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb084: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb107: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be56a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb0e7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be54a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb0c7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4e7: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb074: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be52b: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb0a8: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be72c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb269: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6cc: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb209: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6ec: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb229: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be70c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb249: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb189: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1cc: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1ec: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5ec: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb169: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1ad: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5ac: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb129: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5cc: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb149: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b8c8d: movdqu xmmword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000b75c0: movdqu xmmword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000b759d: movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b8edc: movdqu xmmword ptr [edi + 0x30], xmm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b77dc: movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000b8c2d: movdqu xmmword ptr [edi + 0xd], xmm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000b753d: movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b755d: movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b8c6d: movdqu xmmword ptr [edi + 0xf], xmm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000b757d: movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b76c0: movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b8a84: movdqu xmmword ptr [edi], xmm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b73b7: movdqu xmmword ptr [edi], xmm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b7417: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b73f7: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b73d8: movdqu xmmword ptr [edi], xmm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b7599: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b7539: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b7559: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b7579: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b7499: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b7459: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b7479: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b73a4: movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3344: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b35f4: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aef84: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000af214: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000be613: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb18d: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be673: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1d0: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6a3: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1f0: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5f0: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb16d: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be644: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1b1: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5b0: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb12d: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5d0: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb14d: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be490: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb01d: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4b0: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb03d: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4d0: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb05d: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be44a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafd7: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be46a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baff7: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be3e7: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf84: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be42b: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafb8: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be48c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb019: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4ac: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb039: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4cc: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb059: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b1024: movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b1034: movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b1044: movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b1054: movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b0fe0: movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b1000: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b1010: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b0ff0: movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b1020: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b1030: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b1040: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b1050: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b0fd0: movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000b8b7d: movlpd qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b74c0: movlpd qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b7500: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b7520: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b74e1: movlpd qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b749d: movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b745d: movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b8b5d: movlpd qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b747d: movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b76a4: movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b8a2d: movlpd qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000b734d: movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b76b4: movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b736d: movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b738d: movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b7640: movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b8994: movlpd qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000b72c7: movlpd qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b7307: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b7327: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000b72e8: movlpd qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b76a0: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b7349: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b76b0: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b7369: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b7389: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b72b4: movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b7ccd: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e2d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bd840: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b668d: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b67ed: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b343d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b359d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af05d: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1bd: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b7ced: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e4d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000bd860: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b66ad: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b680d: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b345d: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35bd: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af07d: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000af1dd: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b7d0d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e6d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000bd880: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b66cd: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b682d: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b347d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35dd: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af09d: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b1c60: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000af1fd: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b7b9c: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e8d: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b657c: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b684d: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b5168: movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bdaac: movlpd qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000bd6dc: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d78: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ba82c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b6209: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b32c4: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b3504: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b50ef: movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000ba907: movlpd qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ba927: movlpd qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b33d7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b3517: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000aeff7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000af137: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000bda50: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3417: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b3557: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af037: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000af177: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3307: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b3577: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b5127: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b0d37: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef47: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b1cb0: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000af197: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000ba947: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ba967: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001a5ba4: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd685: movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0cff: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef04: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1d29: movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000af124: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b33f8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b3538: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000af018: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000af158: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b3439: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3599: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af059: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1b9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b3459: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35b9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af079: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000af1d9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b3479: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35d9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af099: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b1c5c: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000af1f9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b5164: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bd6d8: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d74: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ba828: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b7cc4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e24: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b6684: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b67e4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7ce4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e44: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b66a4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b6804: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7d04: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e64: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b66c4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b6824: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7b93: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e84: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6573: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b6844: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b7cc8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e28: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bd83b: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b6688: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b67e8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7ce8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e48: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b66a8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b6808: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7d08: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e68: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b66c8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b6828: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7b97: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e88: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6577: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b6848: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b3510: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000af130: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b3550: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af170: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3570: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000af190: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b32c0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b3500: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b50eb: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001a5ba0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd681: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0cfb: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef00: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1d25: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000af120: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b7e20: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b67e0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7e40: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b6800: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7e60: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b6820: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7e80: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6840: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b3590: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af1b0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b35b0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af1d0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b35d0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af1f0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000baf90: movlpd xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be3e3: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf80: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b72b0: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3434: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3594: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af054: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1b4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b35b4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af1d4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b35d4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af1f4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bb014: movlpd xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be614: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb18e: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be674: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1d1: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6a4: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1f1: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5f1: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb16e: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be645: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1b2: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5b1: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb12e: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5d1: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb14e: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be491: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb01e: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4b1: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb03e: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4d1: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb05e: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be44b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafd8: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be46b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baff8: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be3e8: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf85: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be42c: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafb9: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be48d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb01a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4ad: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb03a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4cd: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb05a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b1025: movlps qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b1035: movlps qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b1045: movlps qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b1055: movlps qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b0fe1: movlps qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b1001: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b1011: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b0ff1: movlps qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b1021: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b1031: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b1041: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b1051: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b0fd1: movlps qword ptr [ecx], xmm0; pop ebx; ret; 
0x000b8b7e: movlps qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b74c1: movlps qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b7501: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b7521: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b74e2: movlps qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b749e: movlps qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b745e: movlps qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b8b5e: movlps qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b747e: movlps qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b76a5: movlps qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b8a2e: movlps qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000b734e: movlps qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b76b5: movlps qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b736e: movlps qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b738e: movlps qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b7641: movlps qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b8995: movlps qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000b72c8: movlps qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b7308: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b7328: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000b72e9: movlps qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b76a1: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b734a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b76b1: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b736a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b738a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b72b5: movlps qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b7cce: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e2e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bd841: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b668e: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b67ee: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b343e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b359e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af05e: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1be: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b7cee: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e4e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000bd861: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b66ae: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b680e: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b345e: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35be: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af07e: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000af1de: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b7d0e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e6e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000bd881: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b66ce: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b682e: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b347e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35de: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af09e: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b1c61: movlps qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000af1fe: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b7b9d: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e8e: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b657d: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b684e: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b5169: movlps qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bdaad: movlps qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000bd6dd: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d79: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ba82d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b620a: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b32c5: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b3505: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b50f0: movlps qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000ba908: movlps qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ba928: movlps qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b33d8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b3518: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000aeff8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000af138: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000bda51: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3418: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b3558: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af038: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000af178: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3308: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b3578: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b5128: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b0d38: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef48: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b1cb1: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000af198: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000ba948: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ba968: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001a5ba5: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd686: movlps qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d00: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef05: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1d2a: movlps qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000af125: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b33f9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b3539: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000af019: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000af159: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b343a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b359a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af05a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1ba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b345a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35ba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af07a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000af1da: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b347a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35da: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af09a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b1c5d: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000af1fa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b5165: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000bd6d9: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0d75: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ba829: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b7cc5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e25: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b6685: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b67e5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7ce5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e45: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b66a5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b6805: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7d05: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e65: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b66c5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b6825: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7b94: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e85: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6574: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b6845: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b7cc9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b7e29: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000bd83c: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b6689: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b67e9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7ce9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e49: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b66a9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b6809: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7d09: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e69: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b66c9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b6829: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7b98: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e89: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6578: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b6849: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b3511: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000af131: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b3551: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af171: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3571: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000af191: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b32c1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b3501: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b50ec: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001a5ba1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd682: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b0cfc: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aef01: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1d26: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000af121: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b7e21: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b67e1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b7e41: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b6801: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b7e61: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b6821: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b7e81: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b6841: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b3591: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af1b1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b35b1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af1d1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b35d1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af1f1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000baf91: movlps xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be3e4: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf81: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b72b1: movlps xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3435: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3595: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000af055: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000af1b5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b35b5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af1d5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b35d5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af1f5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bb015: movlps xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0018f3cb: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001913bb: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x000b3341: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b35f1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aef81: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000af211: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bb071: movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be731: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb26e: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6d1: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb20e: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6f1: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb22e: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be711: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb24e: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be50b: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb085: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb108: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be56b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb0e8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be54b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb0c8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4e8: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb075: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be52c: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb0a9: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be72d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb26a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6cd: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb20a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be6ed: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb22a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be70d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb24a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb18a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1cd: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1ed: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5ed: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb16a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb1ae: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5ad: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb12a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be5cd: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb14a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b8c8e: movq qword ptr [edi + 0x10], mm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000b75c1: movq qword ptr [edi + 0x10], mm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000b759e: movq qword ptr [edi + 0x10], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b8edd: movq qword ptr [edi + 0x30], mm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b77dd: movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x000b8c2e: movq qword ptr [edi + 0xd], mm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000b753e: movq qword ptr [edi + 0xd], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b755e: movq qword ptr [edi + 0xe], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b8c6e: movq qword ptr [edi + 0xf], mm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000b757e: movq qword ptr [edi + 0xf], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b76c1: movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000b8e6e: movq qword ptr [edi], mm0; add edi, 0x10; call 0x182d2d; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e52: movq qword ptr [edi], mm0; add edi, 0x10; call 0x182d2d; add ecx, 0x10d0d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b776e: movq qword ptr [edi], mm0; add edi, 0x10; call 0x182d2d; add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7752: movq qword ptr [edi], mm0; add edi, 0x10; call 0x182d2d; add ecx, 0x10e673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8a85: movq qword ptr [edi], mm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b73b8: movq qword ptr [edi], mm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b7418: movq qword ptr [edi], mm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b73f8: movq qword ptr [edi], mm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b73d9: movq qword ptr [edi], mm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b759a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b753a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b755a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b757a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b749a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b745a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b747a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b73a5: movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x0018f7fd: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c32f: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001913c0: movq qword ptr [edx - 0x10], mm0; mov eax, edx; pop ebx; ret; 
0x0018c35f: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c38f: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c3ef: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c41f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c44f: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c4bf: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c4ef: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c52f: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f3c6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001913b6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0018c32a: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c325: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018c533: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f2dd: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001912cd: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0018c4c3: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019119d: movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0018c4f3: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f24d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019123d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000b3345: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b35f5: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000aef85: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000af215: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0018f83c: movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f198: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191198: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0018f838: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0011c938: movsb byte ptr es:[edi], byte ptr [esi]; adc dword ptr [eax], eax; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00173475: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add bh, bh; je 0x1734a0; sbb al, 0x53; call eax; 
0x0012a892: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add bh, dh; fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; ret; 
0x000cd55e: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x000254cc: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00071cb8: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; add dword ptr [ecx - 0x5577b], ecx; jmp dword ptr [ebp - 0x39]; 
0x00024eff: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; add bh, byte ptr [eax - 1]; ret; 
0x0007277f: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x00067121: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x0012726e: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x7472fb14], al; or al, 0x16; stc; jmp dword ptr [ebp - 0x75]; 
0x0011e8ba: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5401], bh; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x00082ad2: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x001434ad: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x001273c7: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x49f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007400f: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x50343], cl; jmp dword ptr [ebp - 0x75]; 
0x0010a4d5: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x9b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000d6bf8: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000e6fb8: movsb byte ptr es:[edi], byte ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x00091dec: movsb byte ptr es:[edi], byte ptr [esi]; dec edi; stc; call dword ptr [eax - 0x73]; 
0x000b6b1e: movsb byte ptr es:[edi], byte ptr [esi]; int1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011bd87: movsb byte ptr es:[edi], byte ptr [esi]; mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x0011bd87: movsb byte ptr es:[edi], byte ptr [esi]; mov bl, 0xf9; call dword ptr [eax - 0x18]; pop ds; ret; 
0x0015a387: movsb byte ptr es:[edi], byte ptr [esi]; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x000bfddb: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0012143e: movsb byte ptr es:[edi], byte ptr [esi]; pop edx; stc; call dword ptr [eax - 0x18]; 
0x0017f567: movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x00135033: movsb byte ptr es:[edi], byte ptr [esi]; push ebx; call dword ptr [esi + 0x14]; 
0x000c0d78: movsb byte ptr es:[edi], byte ptr [esi]; push ss; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000b8e8e: movsb byte ptr es:[edi], byte ptr [esi]; rcl byte ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0011f611: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x811f; 
0x000d8360: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x0017a30f: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8903; 
0x00047e69: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0017a2ee: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x001122fb: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0008f491: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x000d8197: movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x000a20c8: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x001330da: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 1]; 
0x0015ea3f: movsb byte ptr es:[edi], byte ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x001699e7: movsb byte ptr es:[edi], byte ptr [esi]; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0003d5e1: movsb byte ptr es:[edi], byte ptr [esi]; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0008cac8: movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x00096f27: movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; jmp edx; 
0x0009be64: movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; ret 0xfe93; 
0x00098f2d: movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; stc; ret 0xfffe; 
0x00069d47: movsd dword ptr es:[edi], dword ptr [esi]; adc byte ptr [eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x001686d8: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; pop ebx; ret; 
0x0003cf6f: movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000be25a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x182d2d; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82ba: movsd dword ptr es:[edi], dword ptr [esi]; call 0x182d2d; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c7a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x182d2d; add ecx, 0x10f0c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016e9d1: movsd dword ptr es:[edi], dword ptr [esi]; cld; dec dword ptr [ebp - 0x68b7e7d]; call dword ptr [edi + 0x6a]; 
0x000ece77: movsd dword ptr es:[edi], dword ptr [esi]; cmp ch, bh; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x0004c94d: movsd dword ptr es:[edi], dword ptr [esi]; idiv bh; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x00169f37: movsd dword ptr es:[edi], dword ptr [esi]; mov bh, 0; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0008eb1d: movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00150a4c: movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000f7e45: movsd dword ptr es:[edi], dword ptr [esi]; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000bfe5e: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000bfe34: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0008e745: movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000bfe32: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bfe9b: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x0004207a: movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0005314e: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x00168657: movsd dword ptr es:[edi], dword ptr [esi]; sbb byte ptr [eax], al; add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x000a2654: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0017e9af: movsd dword ptr es:[edi], dword ptr [esi]; sti; dec dword ptr [ebp - 0x634df7a]; call dword ptr [eax - 0x73]; 
0x000bfe9d: movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x0017e9ae: movsd dword ptr es:[edi], dword ptr cs:[esi]; sti; dec dword ptr [ebp - 0x634df7a]; call dword ptr [eax - 0x73]; 
0x000bfe31: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bfe9a: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000a9483: movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xa9480; pop ebx; ret; 
0x0009a250: movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x000fbe1d: movzx eax, al; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x000391b8: movzx eax, al; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x00182b8c: movzx eax, al; add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x00176584: movzx eax, al; add esp, 0x1c; ret; 
0x0011b1c0: movzx eax, al; add esp, 0x4c; ret; 
0x0016baf4: movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x001222da: movzx eax, al; add esp, 8; pop ebx; ret; 
0x000423ba: movzx eax, al; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0009a269: movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x0003be48: movzx eax, al; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000375cc: movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77ae0]; add edx, edi; jmp edx; 
0x000374e7: movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77bdc]; add edx, edi; jmp edx; 
0x00037474: movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77c30]; add edx, edi; jmp edx; 
0x00037428: movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77c84]; add esi, edi; jmp esi; 
0x000373d4: movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77cd8]; add esi, edi; jmp esi; 
0x000373a0: movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77d2c]; add esi, edi; jmp esi; 
0x00036e21: movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77d80]; add esi, edi; jmp esi; 
0x00036de6: movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77dd4]; add esi, edi; jmp esi; 
0x00036dbd: movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x00036d1e: movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e7c]; add esi, edi; jmp esi; 
0x0003678d: movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77ed0]; add esi, edi; jmp esi; 
0x0011f3e7: movzx eax, al; neg eax; add esp, 0xc; ret; 
0x0012a56b: movzx eax, al; neg eax; ret; 
0x0008727f: movzx eax, al; pop ebx; neg eax; ret; 
0x00132189: movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x000876fd: movzx eax, al; pop ebx; pop esi; pop edi; ret; 
0x0016ba60: movzx eax, al; pop ebx; pop esi; ret; 
0x0008cff1: movzx eax, al; pop ebx; ret; 
0x0005a803: movzx eax, al; pop edi; ret; 
0x0003cc6e: movzx eax, al; ret; 
0x001175c5: movzx eax, al; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0009a141: movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0004254a: movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x001499d8: movzx eax, ax; add esp, 0x2c; ret; 
0x0013d0f1: movzx eax, ax; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0004245b: movzx eax, ax; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000425eb: movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x001371bf: movzx eax, byte ptr [eax + edx*2 + 1]; shr al, 6; and eax, 1; pop ebx; ret; 
0x0008a232: movzx eax, byte ptr [eax - 1]; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0019f56d: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x19fd86; pop ebx; ret; 
0x001a2637: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a2670; pop ebx; ret; 
0x0018f32c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019131c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00089a17: movzx eax, byte ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0018f9b0: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019f2c2: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000875da: movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0018498b: movzx eax, byte ptr [eax]; ret; 
0x00084f24: movzx eax, byte ptr [eax]; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00084f44: movzx eax, byte ptr [eax]; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00085c34: movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00085c44: movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0019edc5: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00150538: movzx eax, byte ptr [edi]; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x000f7589: movzx eax, byte ptr [edx + 1]; add edx, 1; test al, al; jne 0xf755d; xor eax, eax; ret; 
0x0013cfcf: movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x001998dd: movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x00198114: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x001998fd: movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x00198124: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019991d: movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x00198134: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0019993d: movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x00198144: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0019995d: movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x00198154: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0019997d: movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00198164: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x001998a1: movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x001980f4: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019bf63: movzx eax, byte ptr [edx]; mov ecx, dword ptr [ebx + ecx*4 - 0x85474]; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x0008b7da: movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x001849c1: movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x00085ca2: movzx eax, byte ptr [edx]; ret; 
0x001998bc: movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00198103: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00089ab6: movzx eax, byte ptr [edx]; sub esp, 8; lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x00028226: movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0013d3f0: movzx eax, dl; ret; 
0x000428b7: movzx eax, dl; tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x00042957: movzx eax, dx; tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x000344ac: movzx eax, word ptr [eax + edx*2 + 0x100]; and eax, dword ptr [esp + 8]; ret; 
0x000341d7: movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000341a7: movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034177: movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000340c7: movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034127: movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034047: movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340f7: movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034097: movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034267: movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034077: movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034157: movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034027: movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0013a730: movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x0006637f: movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00065d0f: movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72c7c]; jmp eax; 
0x000d7007: movzx ebx, bl; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x0006629c: movzx ebx, bl; mov edx, dword ptr [ebp - 0x58c]; add eax, dword ptr [eax + ebx*4 - 0x72bf8]; jmp eax; 
0x00145819: movzx ebx, byte ptr [eax]; test ebx, ebx; jne 0x1457e8; mov eax, 1; pop ebx; ret; 
0x00149a07: movzx ebx, word ptr [ecx + 2]; xor eax, eax; cmp word ptr [edx + 2], bx; je 0x149a18; pop ebx; ret; 
0x00124378: movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00199b90: movzx ecx, byte ptr [eax + 0xf]; cmp byte ptr [edx + 0xf], cl; jne 0x1999f0; pop ebp; xor eax, eax; ret; 
0x001998d9: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x00198110: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x001998f9: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x00198120: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x00199919: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x00198130: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x00199939: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x00198140: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x00199959: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x00198150: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x00199979: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00198160: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0019989d: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x001980f0: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019f424: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x19fd86; pop ebx; ret; 
0x001a24da: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a2670; pop ebx; ret; 
0x0018f208: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911f8: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000bfab2: movzx ecx, byte ptr [eax]; cmp cl, byte ptr [edx]; jne 0xbfabd; xor eax, eax; pop ebx; ret; 
0x0018f888: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001998b9: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00198100: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0010fc4d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0x10fc33; xor eax, eax; pop ebx; ret; 
0x000eda0d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xed9f3; xor eax, eax; pop ebx; ret; 
0x000f04bd: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf04a3; xor eax, eax; pop ebx; ret; 
0x000f128d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf1273; xor eax, eax; pop ebx; ret; 
0x000f3d2d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf3d13; xor eax, eax; pop ebx; ret; 
0x000f4b0d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf4af3; xor eax, eax; pop ebx; ret; 
0x0019edc9: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00041ff6: movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x000420da: movzx ecx, cl; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00078827: movzx ecx, cl; mov edi, dword ptr [ebp + ecx*4 - 0x71b54]; add edi, ebp; jmp edi; 
0x000420c7: movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0004217b: movzx ecx, cx; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x0018f298: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191288: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0018f918: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00064efc: movzx edx, bl; mov ecx, dword ptr [esp + 0x20]; movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00156cd8: movzx edx, byte ptr [eax + 9]; pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x0010fc80: movzx edx, byte ptr [eax]; test dl, dl; je 0x10fc54; pop ebx; ret; 
0x000eda40: movzx edx, byte ptr [eax]; test dl, dl; je 0xeda14; pop ebx; ret; 
0x000f04f0: movzx edx, byte ptr [eax]; test dl, dl; je 0xf04c4; pop ebx; ret; 
0x000f12c0: movzx edx, byte ptr [eax]; test dl, dl; je 0xf1294; pop ebx; ret; 
0x000f3d60: movzx edx, byte ptr [eax]; test dl, dl; je 0xf3d34; pop ebx; ret; 
0x000f4b40: movzx edx, byte ptr [eax]; test dl, dl; je 0xf4b14; pop ebx; ret; 
0x00106fcf: movzx edx, byte ptr [ebx + 4]; mov ecx, dword ptr [eax + edx*4 - 0x6f5e8]; add ecx, eax; jmp ecx; 
0x0006fc40: movzx edx, byte ptr [ebx + esi - 0x20]; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x726b4]; add ecx, eax; jmp ecx; 
0x0016c569: movzx edx, byte ptr [ecx + edx]; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x16c560; pop ebx; ret; 
0x00070dba: movzx edx, byte ptr [ecx + esi - 0x20]; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72834]; add ecx, eax; jmp ecx; 
0x000398dc: movzx edx, byte ptr [ecx]; test dl, dl; jne 0x398c0; ret; 
0x00064f03: movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x0006478b: movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x00064005: movzx edx, byte ptr [edx + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x00070534: movzx edx, byte ptr [edx + esi - 0x20]; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0006f3c4: movzx edx, byte ptr [edx + esi - 0x20]; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72734]; add ecx, eax; jmp ecx; 
0x0019f2c5: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0006380c: movzx edx, byte ptr [esi + eax - 0x20]; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x72e94]; jmp eax; 
0x001a2124: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a2184: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a2154: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a2144: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a2115: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000fbe3f: movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f760]; jmp eax; 
0x000fbd61: movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x00065820: movzx edx, dl; mov ecx, dword ptr [edi + edx*4 - 0x72d38]; add ecx, edi; jmp ecx; 
0x0010ee3a: movzx edx, dl; mov ecx, dword ptr [esi + edx*4 - 0x6ec98]; add ecx, esi; jmp ecx; 
0x00078778: movzx edx, dl; mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x001489bd: movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x001488b8: movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x001487ef: movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x001096a4: movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0007ad30: mul byte ptr [ebp - 0x39]; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00166966: mul byte ptr [esi + edi*8 + 0x1cc483ff]; ret; 
0x0018c537: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0015ade5: mul eax; std; jmp dword ptr [esi - 0x70]; 
0x0014e485: neg dword ptr [eax - 0x12]; jmp dword ptr [esi - 0x70]; 
0x00122d50: neg dword ptr [edi - 7]; call dword ptr [edx + 0x52]; 
0x0011f3ea: neg eax; add esp, 0xc; ret; 
0x0019e937: neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0019c0a7: neg eax; add esp, 4; pop ebx; ret; 
0x0003d5c6: neg eax; cmovs eax, edx; ret; 
0x000c3e2e: neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0009d5a6: neg eax; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c446: neg eax; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0012a896: neg eax; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x00024efb: neg eax; mov edx, dword ptr [edx + 0xa4]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0003bc07: neg eax; or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x001999f7: neg eax; pop ebp; ret; 
0x00025346: neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x00092466: neg eax; pop ebx; pop esi; ret; 
0x000f8310: neg eax; pop ebx; ret; 
0x001a0667: neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0004d02a: neg eax; pop edi; pop ebp; xor eax, 0x7fffffff; ret; 
0x001a0107: neg eax; pop edi; pop ebx; ret; 
0x001a4fc7: neg eax; pop edi; pop esi; pop ebx; ret; 
0x000d6ca7: neg eax; pop edi; pop esi; ret; 
0x000529d3: neg eax; pop esi; pop edi; ret; 
0x00087283: neg eax; ret; 
0x00085d3a: neg eax; sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008bcdf: neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bc30: neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x000257a3: neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x000603a9: neg eax; sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003fff2: neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000e4954: neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x00097c3f: neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0011bf08: neg edx; cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0002534c: neg edx; ret; 
0x00192c83: nop dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00110e99: nop; adc byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010d421: nop; adc dword ptr [eax], eax; add byte ptr [ebx - 0x72f7db84], cl; xchg esp, ebp; mov cl, 0xf9; call dword ptr [eax + 0x68]; 
0x0002a621: nop; add al, byte ptr [eax]; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jp 0x2a627; call dword ptr [eax - 0x73]; 
0x0009d2d0: nop; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012b52b: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x000984e4: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00172b0b: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001114cc: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x94248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; call dword ptr gs:[0x10]; 
0x00105418: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x0002c205: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdb8c], cl; jl 0x2c234; and al, 0x89; ret 0xf229; 
0x00061613: nop; add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x0008ccf0: nop; add byte ptr [eax], al; add cl, al; call 0x1e95005; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0003d92c: nop; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00107198: nop; add byte ptr [edi], cl; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x000342ae: nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0016f2e6: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0016f2e6: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00172b1a: nop; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00120fe4: nop; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0017be1b: nop; add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0003290b: nop; add dword ptr [edx], edx; add byte ptr [eax], al; lea eax, [eax + 0x11cc]; ret; 
0x000d6f9f: nop; add eax, 2; ret; 
0x000c7b24: nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; adc dword ptr [esi + eax*4 - 7], 0x4be850ff; ret 0xfff6; 
0x00058e42: nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x000498b8: nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0005292f: nop; add eax, dword ptr [esp]; ret; 
0x001687ff: nop; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x000a449f: nop; add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0013969f: nop; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000a60cf: nop; add esp, 4; pop ebx; pop esi; ret; 
0x0016af9f: nop; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00060fcf: nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001a337f: nop; and eax, 0x1fff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a335f: nop; and eax, 0x3ff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a338f: nop; and eax, 0x3fff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a336f: nop; and eax, 0x7ff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x001a339f: nop; and eax, 0x7fff; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0010ac83: nop; bnd jmp dword ptr [esi - 0x70]; 
0x000a63af: nop; bsf eax, dword ptr [esp + 4]; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x000bee6f: nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000bf5bf: nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bf59f: nop; bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000bf10f: nop; bsr eax, eax; add eax, ecx; ret; 
0x000bf11f: nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x00168e3f: nop; call 0x121030; mov dword ptr [ebx + 0xa62c], eax; add esp, 8; pop ebx; ret; 
0x0012a86f: nop; call 0x182d1d; add edx, 0x10c59f; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012fc6f: nop; call 0x182d21; add eax, 0x10719f; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0009299f: nop; call 0x182d21; add eax, 0x1a446f; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0003ce7f: nop; call 0x182d21; add eax, 0x1f9f8f; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0002f37f: nop; call 0x182d21; add eax, 0x207a8f; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00025faf: nop; call 0x182d21; add eax, 0x210e5f; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000254bf: nop; call 0x182d21; add eax, 0x21194f; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x00145d3f: nop; call 0x182d21; add eax, 0xf10cf; mov eax, dword ptr [eax + 0x1c8]; mov eax, dword ptr gs:[eax]; ret; 
0x0013a6ff: nop; call 0x182d21; add eax, 0xfc70f; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x00120abf: nop; call 0x8c9d0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0012058f: nop; call 0x8c9d0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00110fdf: nop; call 0x8c9d0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a7ae3: nop; call 0xc24e8ae8; ret; 
0x0007a585: nop; cli; jmp dword ptr [esi - 0x70]; 
0x000c09a4: nop; cmp al, 0; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x0009f3ac: nop; cmp eax, 0xc483fff8; or al, 0x8d; xchg byte ptr [eax + edi*2 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x0003b77f: nop; fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00026058: nop; in al, dx; jg 0x26055; call dword ptr [edx - 0x73]; 
0x0003e47d: nop; in al, dx; test ecx, edi; call dword ptr [edx - 0x73]; 
0x00033d59: nop; inc eax; ret; 
0x000a8dc0: nop; insb byte ptr es:[edi], dx; stosb byte ptr es:[edi], al; stc; call dword ptr [edx - 0x73]; 
0x0018012c: nop; jl 0x180132; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0018bffc: nop; jl 0x18c002; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009e50b: nop; jo 0x9e511; add byte ptr [eax], al; ret; 
0x001a3cbf: nop; lea eax, [ecx + 1]; ret; 
0x0003ceff: nop; lea eax, [ecx - 1]; mov dword ptr [edx + 0x1f0], eax; mov eax, ecx; ret; 
0x001a54af: nop; lea eax, [edi - 0xc]; pop edi; ret; 
0x000e4a1f: nop; lea ebp, [esp + 4]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000d1bdf: nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000d1bcf: nop; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000c331e: nop; lodsb al, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x00153485: nop; mov al, byte ptr [0x8d500000]; sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x000b7baf: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b348f: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000af0af: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000b349f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000af0bf: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0005af86: nop; mov bh, cl; call dword ptr [eax - 0x73]; 
0x00140cff: nop; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x0016a0bf: nop; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000b0faf: nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000b75ff: nop; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x000b760f: nop; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000704df: nop; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000704bf: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x000704cf: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x000704ef: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000704ff: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x0007050f: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x0017febf: nop; mov dword ptr [esp + 8], ecx; call eax; 
0x00129bff: nop; mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000ed8df: nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ed8df: nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0018543f: nop; mov eax, 0x16; pop ebx; ret; 
0x0008e99f: nop; mov eax, 0x16; ret; 
0x0012719f: nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x0012719f: nop; mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x000ed8ef: nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ed8ef: nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x00108eef: nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0008511f: nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012516f: nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0009a20f: nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009a20f: nop; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0003c1ff: nop; mov eax, 0xad; int 0x80; 
0x000ec91f: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ec91f: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000ec90f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ec90f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000ec8ff: nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ec8ff: nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00095dcf: nop; mov eax, 0xf0; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x001484af: nop; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000808af: nop; mov eax, 0xffffffff; ret; 
0x001999ef: nop; mov eax, 1; ja 0x1999f9; neg eax; pop ebp; ret; 
0x0019f0df: nop; mov eax, 1; ja 0x19f0e9; neg eax; pop ebp; ret; 
0x0016addf: nop; mov eax, 1; ret; 
0x000d6eff: nop; mov eax, 2; ret; 
0x0009234f: nop; mov eax, 3; add esp, 0xc; ret; 
0x000d6f0f: nop; mov eax, 3; ret; 
0x000d6f1f: nop; mov eax, 4; ret; 
0x000d6f2f: nop; mov eax, 5; ret; 
0x0013b4cf: nop; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d6f3f: nop; mov eax, 6; ret; 
0x000d6f4f: nop; mov eax, 7; ret; 
0x00120e7f: nop; mov eax, dword ptr [eax + 0x35c]; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0018288a: nop; mov eax, dword ptr [eax]; ret; 
0x00169557: nop; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x000af0df: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00175c9f: nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0016adef: nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0003b40f: nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0018ba2f: nop; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0012f0cf: nop; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0003b4cf: nop; mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x001762ef: nop; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00085c1f: nop; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0013a71f: nop; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0009860f: nop; mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x98620; xor eax, eax; ret; 
0x0008eeaf: nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0009864f: nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014d1af: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0009beaf: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x0011e65f: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00084f5f: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x000e5aff: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x001762ff: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00110e8f: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x0008e9af: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001097cf: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00030f7f: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00085c2f: nop; mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00085c3f: nop; mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0009236f: nop; mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003447f: nop; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00097c0f: nop; mov eax, dword ptr gs:[8]; ret; 
0x00092d3f: nop; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0013c75f: nop; mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x00099fff: nop; mov eax, edi; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x001a430f: nop; mov eax, edx; ret; 
0x00109f0f: nop; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012b81f: nop; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0008f5af: nop; mov ebx, dword ptr [esp]; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x001519cf: nop; mov ecx, 1; mov eax, ecx; ret; 
0x00148a2f: nop; mov ecx, dword ptr [esp + 0x1c]; mov edx, dword ptr [ecx - 0x6e5c4]; add edx, ecx; jmp edx; 
0x000baf2f: nop; mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0018289a: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0003d5bf: nop; mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008eb9f: nop; mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x8ebb8; ret; 
0x0012bd6f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0012bf1f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x001271bf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012c3ef: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000e71af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x001112bf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0011f4ff: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0011d4af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0011f6bf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012927f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012911f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012bc5f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0012714f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012c25f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0010acef: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012be8f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ed8af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001116af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012abaf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ed95f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0012465f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010890f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00110eff: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0012b1bf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012b19f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012a51f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011bdef: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012c2ef: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012c35f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012c38f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012c3bf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012be2f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012c0bf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012c1bf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x00108d4f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00126f6f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012518f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00126cef: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00111ecf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0012462f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0012513f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00108b9f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x001088df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012bcaf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012bcdf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9ff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ec92f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012c11f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012676f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0012407f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0012065f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00063de8: nop; mov edx, edi; mov byte ptr [esp + 0x5e], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp edx; 
0x00063b1b: nop; mov edx, edi; mov edi, ecx; jmp edx; 
0x001728ab: nop; mov word ptr [eax], es; add byte ptr [eax], al; lea eax, [eax + 0xa78c]; mov dword ptr gs:[edx], eax; ret; 
0x000b75ef: nop; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000a980f: nop; mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000b35ef: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b0fdf: nop; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b0fcf: nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000b34ff: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x001a5b8f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0013d3ef: nop; movzx eax, dl; ret; 
0x0013a72f: nop; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x0005292e: nop; nop; add eax, dword ptr [esp]; ret; 
0x0012a86e: nop; nop; call 0x182d1d; add edx, 0x10c59f; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0009299e: nop; nop; call 0x182d21; add eax, 0x1a446f; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0003ce7e: nop; nop; call 0x182d21; add eax, 0x1f9f8f; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000c331d: nop; nop; lodsb al, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x000ed8de: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ed8de: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0012719d: nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000ed8ee: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ed8ee: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x00108eee: nop; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0012516d: nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0009a20d: nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009a20d: nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0003c1fe: nop; nop; mov eax, 0xad; int 0x80; 
0x000ec91e: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ec91e: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000ec90e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ec90e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000ec8fd: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ec8fd: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0016a79d: nop; nop; mov eax, 2; ret; 
0x0003b40d: nop; nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00085c1d: nop; nop; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0013a71d: nop; nop; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00090aad: nop; nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0009864d: nop; nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014d1ae: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0009bead: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00084f5e: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x000e5afe: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0009a0fe: nop; nop; mov eax, dword ptr gs:[8]; ret; 
0x00092d3d: nop; nop; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0012bd6d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0012bf1d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x001271bd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012c3ed: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000e71ad: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x001112be: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0011f4fd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0011d4ae: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0011f6be: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012927d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012911d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012bc5d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x0012714e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012c25d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0010acee: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012be8d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ed8ae: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001116ae: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012abad: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ed95d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0012465d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010890d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00110efd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0012b1be: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012b19d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0013a72e: nop; nop; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x0005292c: nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x0012719b: nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00108eec: nop; nop; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0012516b: nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0009a20b: nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009a20b: nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0003c1fc: nop; nop; nop; mov eax, 0xad; int 0x80; 
0x000ec8fb: nop; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ec8fb: nop; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0016a79b: nop; nop; nop; mov eax, 2; ret; 
0x00085c1b: nop; nop; nop; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0013a71b: nop; nop; nop; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0014d1ac: nop; nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0009beab: nop; nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x000e5afc: nop; nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0013a72c: nop; nop; nop; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x0005292a: nop; nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x00127199: nop; nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00108eea: nop; nop; nop; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00125169: nop; nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0009a209: nop; nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0003c1fa: nop; nop; nop; nop; mov eax, 0xad; int 0x80; 
0x000ec8f9: nop; nop; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x0016a799: nop; nop; nop; nop; mov eax, 2; ret; 
0x00093158: nop; nop; nop; nop; nop; ret; 
0x0009315a: nop; nop; nop; nop; ret; 
0x0008ee89: nop; nop; nop; nop; xor eax, eax; ret; 
0x0008d07c: nop; nop; nop; ret; 
0x0008ee8b: nop; nop; nop; xor eax, eax; ret; 
0x0010ac8d: nop; nop; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0008d07e: nop; nop; ret; 
0x0008ee8d: nop; nop; xor eax, eax; ret; 
0x00109813: nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x001097eb: nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0003c207: nop; pop eax; mov eax, 0x77; int 0x80; 
0x0007fa88: nop; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001a266f: nop; pop ebx; mov eax, 1; ja 0x1a267a; neg eax; ret; 
0x001756cf: nop; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0010937f: nop; pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x0008d64f: nop; pop ebx; pop esi; pop edi; ret; 
0x001a2ecf: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x001a0c6f: nop; pop ebx; xor eax, eax; ret; 
0x000c4a7e: nop; pop edi; pop ebp; ret; 
0x0019f0cf: nop; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x00024b9f: nop; push eax; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010ac8f: nop; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c3a34: nop; ret 0x4b8b; 
0x000a4eb0: nop; ret 0xdb31; 
0x0003421d: nop; ret; 
0x000a0467: nop; sahf; stc; call dword ptr [eax - 0x18]; 
0x00024b3b: nop; sbb byte ptr [ecx], al; add byte ptr [eax], al; test edx, edx; je 0x24b45; ret; 
0x000ecf79: nop; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0005ad0d: nop; std; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0015fe66: nop; std; jmp dword ptr [esi - 0x70]; 
0x001a488f: nop; sub edi, 3; jb 0x1a4930; lea eax, [eax + 2]; pop edi; ret; 
0x001a489f: nop; sub edi, 5; jb 0x1a4930; lea eax, [eax + 4]; pop edi; ret; 
0x001a48af: nop; sub edi, 6; jb 0x1a4930; lea eax, [eax + 5]; pop edi; ret; 
0x001a386f: nop; sub edx, 3; jb 0x1a3910; lea eax, [edi + 2]; pop edi; ret; 
0x001a387f: nop; sub edx, 5; jb 0x1a3910; lea eax, [edi + 4]; pop edi; ret; 
0x001a388f: nop; sub edx, 6; jb 0x1a3910; lea eax, [edi + 5]; pop edi; ret; 
0x0016384f: nop; sub esp, 0x18; push 0; call 0x150e60; add esp, 0x1c; ret; 
0x0003ccaf: nop; sub esp, 0x18; push 0; call 0x3c5a0; add esp, 0x1c; ret; 
0x0016793f: nop; sub esp, 0x18; push 0xa; call 0x150e60; add esp, 0x1c; ret; 
0x00163c9f: nop; sub esp, 0x18; push 1; call 0x150e60; add esp, 0x1c; ret; 
0x00163f9f: nop; sub esp, 0x18; push 2; call 0x150e60; add esp, 0x1c; ret; 
0x0016502f: nop; sub esp, 0x18; push 3; call 0x150e60; add esp, 0x1c; ret; 
0x001662ff: nop; sub esp, 0x18; push 4; call 0x150e60; add esp, 0x1c; ret; 
0x0016695f: nop; sub esp, 0x18; push 5; call 0x150e60; add esp, 0x1c; ret; 
0x00166caf: nop; sub esp, 0x18; push 6; call 0x150e60; add esp, 0x1c; ret; 
0x00167e9f: nop; sub esp, 0x18; push 7; call 0x150e60; add esp, 0x1c; ret; 
0x001672ff: nop; sub esp, 0x18; push 8; call 0x150e60; add esp, 0x1c; ret; 
0x001676af: nop; sub esp, 0x18; push 9; call 0x150e60; add esp, 0x1c; ret; 
0x000ee1ef: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f52ef: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00171a8f: nop; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0007bebf: nop; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00024e7f: nop; sub esp, 4; push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x0017333f: nop; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x001a553f: nop; test al, 0xf0; jne 0x1a54b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00059f4f: nop; test eax, eax; je 0x59f60; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x000935be: nop; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00094ff4: nop; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; sub ch, 0xf9; jmp dword ptr [esi - 0x70]; 
0x00087071: nop; xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x000935ab: nop; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0009e561: nop; xor al, 0x3c; add byte ptr [eax], al; ret; 
0x0008c3c5: nop; xor al, 0x4f; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x0008fc3f: nop; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00095dff: nop; xor cl, 0x87; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0016858f: nop; xor eax, eax; add esp, 0xc; ret; 
0x000f873f: nop; xor eax, eax; pop ebx; pop esi; ret; 
0x0004242f: nop; xor eax, eax; pop ebx; ret; 
0x0007830f: nop; xor eax, eax; ret; 
0x000a956f: nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0005a786: not byte ptr [ebp - 0x79720003]; jl 0x5a717; stc; call dword ptr [eax - 0x73]; 
0x0011ef43: not byte ptr [ebx + 0x31]; fisttp dword ptr [ebx - 0x74efdbb4]; push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x000e7103: not byte ptr [ebx + 0x65]; mov eax, dword ptr [8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012e046: not byte ptr [ebx - 0x45]; or eax, 0x8b000000; dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008d69c: not byte ptr [ebx - 0x75]; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009627d: not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x000a1e92: not byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00193cdb: not dword ptr [eax]; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014e985: not dword ptr [ebx - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0003b5ac: not eax; and eax, ecx; ret; 
0x0003ab5a: not eax; and eax, edx; ret; 
0x0004249b: not eax; bsr eax, eax; xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000929d3: not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0004260a: not eax; movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000426bc: not eax; movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0003b919: not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00176708: not eax; shr eax, 0x1f; ret; 
0x0004262b: not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000e492c: not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0009330f: not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000428d6: not edx; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0016f35d: notrack jmp 0x16f35f; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001a383f: or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00032911: or ah, 0x11; add byte ptr [eax], al; ret; 
0x000a6fc3: or ah, 0x2d; idiv bh; and ch, 2; lea edx, [edx - 0x1777d4]; cmove eax, edx; ret; 
0x0009ee3f: or ah, 0x9a; stc; call dword ptr [eax + 0x6a]; 
0x000a9d97: or ah, 0xd5; idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c0a07: or ah, 1; add byte ptr [eax], al; ret; 
0x0018cf28: or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000bfe64: or ah, bh; pop edi; ret; 
0x0017424b: or ah, ch; inc dword ptr [ebx - 0x72aff33c]; xchg byte ptr [ecx + ebp*2], dl; stc; call dword ptr [eax + 0x6a]; 
0x00156422: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00168997: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0011fae5: or al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00111b70: or al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00110f07: or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7133: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00090e99: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0013cb7b: or al, 0; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011f679: or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0016a13a: or al, 0; add byte ptr [eax], al; pop ebx; ret; 
0x001a4a37: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x0008e1e5: or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000f8261: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf8288; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00122e9d: or al, 0; add byte ptr [ebp - 0x69d557d], cl; call dword ptr [ecx + 0x51]; 
0x001416de: or al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0019dcde: or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000bfd2f: or al, 0; add ebx, 0x1063c7; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000bfad5: or al, 0; add ebx, 0x106621; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000be80f: or al, 0; add ecx, 0x107863; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be304: or al, 0; add ecx, 0x107d6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2df: or al, 0; add ecx, 0x107d93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2bf: or al, 0; add ecx, 0x107db3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2a2: or al, 0; add ecx, 0x107dd0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be203: or al, 0; add ecx, 0x107def; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be275: or al, 0; add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be1e5: or al, 0; add ecx, 0x107e0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be25e: or al, 0; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be243: or al, 0; add ecx, 0x107e2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be1c0: or al, 0; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be221: or al, 0; add ecx, 0x107e51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be196: or al, 0; add ecx, 0x107e5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be17d: or al, 0; add ecx, 0x107e75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be15c: or al, 0; add ecx, 0x107e96; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be138: or al, 0; add ecx, 0x107eba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be11a: or al, 0; add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be097: or al, 0; add ecx, 0x107f5b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baee5: or al, 0; add ecx, 0x10b08d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baec0: or al, 0; add ecx, 0x10b0b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae96: or al, 0; add ecx, 0x10b0dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae7d: or al, 0; add ecx, 0x10b0f5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae5c: or al, 0; add ecx, 0x10b116; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae38: or al, 0; add ecx, 0x10b13a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae1a: or al, 0; add ecx, 0x10b158; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000badfe: or al, 0; add ecx, 0x10b174; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8f6f: or al, 0; add ecx, 0x10cf2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e8a: or al, 0; add ecx, 0x10d0a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e77: or al, 0; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e5b: or al, 0; add ecx, 0x10d0d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8364: or al, 0; add ecx, 0x10db3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b833f: or al, 0; add ecx, 0x10db5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b831f: or al, 0; add ecx, 0x10db7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8302: or al, 0; add ecx, 0x10db9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8263: or al, 0; add ecx, 0x10dbbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b82d5: or al, 0; add ecx, 0x10dbc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82be: or al, 0; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82a3: or al, 0; add ecx, 0x10dbfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8281: or al, 0; add ecx, 0x10dc1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b818f: or al, 0; add ecx, 0x10dc8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b816f: or al, 0; add ecx, 0x10dcaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b814a: or al, 0; add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b786f: or al, 0; add ecx, 0x10e4cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b778a: or al, 0; add ecx, 0x10e644; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7777: or al, 0; add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b775b: or al, 0; add ecx, 0x10e673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6d24: or al, 0; add ecx, 0x10f01a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cff: or al, 0; add ecx, 0x10f03f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cdf: or al, 0; add ecx, 0x10f05f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cc2: or al, 0; add ecx, 0x10f07c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c23: or al, 0; add ecx, 0x10f09b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6c95: or al, 0; add ecx, 0x10f0a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c7e: or al, 0; add ecx, 0x10f0c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c63: or al, 0; add ecx, 0x10f0db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c41: or al, 0; add ecx, 0x10f0fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6b5f: or al, 0; add ecx, 0x10f15f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b3f: or al, 0; add ecx, 0x10f17f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b1a: or al, 0; add ecx, 0x10f1a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00059fa7: or al, 0; add esp, 0x1c; ret; 
0x0014cb79: or al, 0; je 0x14cb87; add dword ptr [eax + 8], 1; je 0x14cba6; add esp, 0xc; ret; 
0x0014cf60: or al, 0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001728a8: or al, 0; mov edx, dword ptr [eax + 0x8c]; lea eax, [eax + 0xa78c]; mov dword ptr gs:[edx], eax; ret; 
0x00121ab2: or al, 0x10; add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00127277: or al, 0x16; stc; jmp dword ptr [ebp - 0x75]; 
0x00085919: or al, 0x19; ret 0x157d; 
0x0008ccfb: or al, 0x1a; add byte ptr [eax], al; ret; 
0x0008618f: or al, 0x1b; add byte ptr [ebx - 0x77], dl; ret; 
0x0012abea: or al, 0x1b; pop ebx; shr eax, cl; and eax, 3; ret; 
0x001699a2: or al, 0x24; call dword ptr [eax + 0x10]; 
0x0012d236: or al, 0x24; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012d1f8: or al, 0x24; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012d182: or al, 0x24; mov edx, dword ptr [esp + 4]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00109bc4: or al, 0x24; mov esi, 8; call dword ptr gs:[0x10]; 
0x00182d2e: or al, 0x24; ret; 
0x00095002: or al, 0x25; add byte ptr [eax], 0; add byte ptr [ecx - 0x16f3dbbc], cl; ret; 
0x000d96e3: or al, 0x29; ret 0x428d; 
0x00081a97: or al, 0x29; ret 0xfac1; 
0x00053dc2: or al, 0x29; ret; 
0x000e19dc: or al, 0x29; retf 0x490f; ret 0x1c8d; 
0x00113071: or al, 0x29; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x000a5824: or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0012437e: or al, 0x30; ror byte ptr [ecx], 0xc8; ret; 
0x000e9570: or al, 0x31; call dword ptr [eax - 0x18]; 
0x0013e16a: or al, 0x31; call dword ptr [ebp + 1]; 
0x0007a3e6: or al, 0x31; call dword ptr [ebp - 0x18]; 
0x00086858: or al, 0x31; call dword ptr [ebx - 0x18]; 
0x000e63ab: or al, 0x31; call dword ptr [esi - 0x18]; 
0x00137244: or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00026ff2: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000964ee: or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00084ef6: or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x0007f960: or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x000920ec: or al, 0x31; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00091a7a: or al, 0x31; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0011aa50: or al, 0x33; adc byte ptr [ebx], dh; dec eax; add al, 9; retf 0x940f; ret 0x540a; 
0x0019fd55: or al, 0x39; fnstcw word ptr [eax]; jne 0x19fd70; pop ebx; ret; 
0x00149a9a: or al, 0x39; inc ebx; or al, 0x75; ret; 
0x0004271a: or al, 0x39; rcr dword ptr [ecx], 0xd3; pop ebx; setb al; ret; 
0x0002c0a3: or al, 0x39; ret 0x1a73; 
0x000a7a02: or al, 0x39; ret 0x2b73; 
0x000e5ddd: or al, 0x39; ret 0x470f; 
0x00135193: or al, 0x39; ret 0x820f; 
0x00131a33: or al, 0x39; ret 0x830f; 
0x0002db57: or al, 0x39; ret 0x840f; 
0x00050bd9: or al, 0x39; ret; 
0x0003edfe: or al, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x0015d477: or al, 0x50; call 0x180100; mov dword ptr [esp], ebp; call edi; 
0x0015d666: or al, 0x50; call 0x180100; mov dword ptr [esp], ebp; call esi; 
0x00028127: or al, 0x50; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00168982: or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00171ae2: or al, 0x50; call dword ptr [edx + 0x10]; 
0x000a48b4: or al, 0x50; call edx; 
0x00154659: or al, 0x50; mov dword ptr [esp + 0x10], eax; call 0x180100; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0015cb3d: or al, 0x50; mov dword ptr [esp + 0x2c], eax; call 0x180100; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00132d0d: or al, 0x50; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00134b22: or al, 0x50; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013502f: or al, 0x50; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x00132e06: or al, 0x50; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0013289e: or al, 0x50; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00133823: or al, 0x50; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x001335f7: or al, 0x50; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00026199: or al, 0x51; call 0x180100; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00026843: or al, 0x52; call 0x180100; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00175af9: or al, 0x52; push ebx; call dword ptr [eax + 0x20]; 
0x00175ace: or al, 0x52; push ebx; call dword ptr [eax + 0x24]; 
0x00175186: or al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x00175131: or al, 0x52; push ebx; call dword ptr [eax]; 
0x000e4b50: or al, 0x52; push ebx; call eax; 
0x001754c9: or al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x001547df: or al, 0x53; call 0x180100; add esp, 0x10; mov eax, ebx; call eax; 
0x0015d815: or al, 0x53; call 0x180100; mov dword ptr [esp], ebp; call ebx; 
0x0002f333: or al, 0x53; call 0x180100; mov dword ptr [esp], esi; call ebx; 
0x0016955d: or al, 0x53; call dword ptr [eax + 0x10]; 
0x0008688c: or al, 0x53; call dword ptr [edi + 0x44]; 
0x0007f611: or al, 0x53; call dword ptr [esi + 0x10]; 
0x00085d35: or al, 0x53; call dword ptr [esi + 0x30]; 
0x0005e8d1: or al, 0x53; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00169993: or al, 0x55; call 0x110fa0; mov ecx, dword ptr [esp + 0x48]; mov eax, dword ptr [ecx + 0x20]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x001708a6: or al, 0x55; call dword ptr [eax + 0x10]; 
0x0016aa70: or al, 0x55; call dword ptr [esi]; 
0x001708bd: or al, 0x55; call eax; 
0x0015d5b7: or al, 0x55; call edi; 
0x0016f740: or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x000e49f6: or al, 0x55; push ebx; call eax; 
0x00025e96: or al, 0x56; call 0x180100; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00026022: or al, 0x56; call 0x180100; mov dword ptr [esp], ebx; call esi; 
0x00032715: or al, 0x56; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00168b14: or al, 0x56; call dword ptr [eax + 0x10]; 
0x00084977: or al, 0x56; call dword ptr [eax + 0x30]; 
0x00089cfd: or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0007d0ae: or al, 0x56; call dword ptr [ebx + 0x2c]; 
0x0007a477: or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0007d19f: or al, 0x56; call dword ptr [ebx + 0x34]; 
0x00184778: or al, 0x56; call dword ptr [ebx + 0x44]; 
0x00089953: or al, 0x56; call dword ptr [edi + 0x34]; 
0x001848c1: or al, 0x56; call dword ptr [edi + 0x44]; 
0x000a47ea: or al, 0x56; call eax; 
0x00129c94: or al, 0x56; call edx; 
0x00129c94: or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0016f3cd: or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0016819a: or al, 0x56; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0005ae0f: or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x001372fb: or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00026f71: or al, 0x57; call 0x180100; mov dword ptr [esp], ebx; call edi; 
0x0016aaa1: or al, 0x57; call dword ptr [eax + 0x10]; 
0x0016aa5e: or al, 0x57; call dword ptr [eax + 8]; 
0x00169a0d: or al, 0x57; call eax; 
0x001699ea: or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0016d64a: or al, 0x5b; mov eax, 1; pop esi; pop edi; ret; 
0x0008bc3b: or al, 0x5b; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x000aa978: or al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00152269: or al, 0x5b; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x001454cb: or al, 0x5b; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0007f69a: or al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x000a4f3e: or al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x00027016: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0008db73: or al, 0x5b; pop esi; pop edi; ret; 
0x000be325: or al, 0x5b; pop esi; ret; 
0x0008d92b: or al, 0x5b; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0017e416: or al, 0x5b; ret; 
0x0003b914: or al, 0x5b; sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00138804: or al, 0x5e; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00175686: or al, 0x5e; pop edi; jmp eax; 
0x00194660: or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192dda: or al, 0x5f; call 0x182d19; add ebx, 0x41caf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190d0a: or al, 0x5f; call 0x182d19; add ebx, 0x43aff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed0a: or al, 0x5f; call 0x182d19; add ebx, 0x4587f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b5130: or al, 0x5f; pop ebx; ret; 
0x000b8a10: or al, 0x5f; pop esi; pop ebx; ret; 
0x000b3444: or al, 0x5f; ret; 
0x0012a718: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12a730; pop ebx; ret; 
0x0012a978: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12a990; pop ebx; ret; 
0x0012bbf8: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12bc10; pop ebx; ret; 
0x0008d676: or al, 0x65; call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x0008cb2a: or al, 0x65; mov dword ptr [0x78], eax; ret; 
0x00093ba9: or al, 0x65; mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00151870: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x15187e; add esp, 0x1c; ret; 
0x00173781: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x001737c9: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x173804; add esp, 0x1c; ret; 
0x0003a8c1: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3a8d3; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bdb0: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3bdbf; add esp, 0x18; pop ebx; ret; 
0x0003e8a4: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b7: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x000254a5: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x254b3; add esp, 0x1c; ret; 
0x0011eade: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x11eaf3; add esp, 0x1c; ret; 
0x0012105e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12106c; add esp, 0x1c; ret; 
0x00122761: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x00128f84: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0012cb8d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12cbb2; add esp, 0x18; pop ebx; ret; 
0x0012cc0d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12cc32; add esp, 0x18; pop ebx; ret; 
0x0012cec8: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12cef2; add esp, 0x18; pop ebx; ret; 
0x0012db28: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12db52; add esp, 0x18; pop ebx; ret; 
0x0012dc2f: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12dc3d; add esp, 0x1c; ret; 
0x0012dc9d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12dcc2; add esp, 0x18; pop ebx; ret; 
0x00143a2a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x143a44; add esp, 0x18; pop ebx; ret; 
0x00143a72: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x143a80; add esp, 0x1c; ret; 
0x00143ac1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x143acf; add esp, 0x1c; ret; 
0x00145fbb: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x0016ebb1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16ec2b; add esp, 0x18; pop ebx; ret; 
0x00171c1a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x171c37; add esp, 0x1c; ret; 
0x0017211a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x172137; add esp, 0x1c; ret; 
0x0017219d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1721b7; add esp, 0x18; pop ebx; ret; 
0x00174f8c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x174ff9; add esp, 0x18; pop ebx; ret; 
0x0017506c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1750d9; add esp, 0x18; pop ebx; ret; 
0x00175323: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x175364; add esp, 0x18; pop ebx; ret; 
0x001753b3: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1753f4; add esp, 0x18; pop ebx; ret; 
0x0017545d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x175483; add esp, 0x18; pop ebx; ret; 
0x001754e5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17551f; add esp, 0x18; pop ebx; ret; 
0x00175579: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1755c4; add esp, 0x18; pop ebx; ret; 
0x00175d63: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x175da4; add esp, 0x18; pop ebx; ret; 
0x00175df3: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x175e34; add esp, 0x18; pop ebx; ret; 
0x00175e83: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x175ec4; add esp, 0x18; pop ebx; ret; 
0x00175f13: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x175f54; add esp, 0x18; pop ebx; ret; 
0x0017657a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17658b; movzx eax, al; add esp, 0x1c; ret; 
0x001765ca: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1765db; movzx eax, al; add esp, 0x1c; ret; 
0x00176624: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x176633; add esp, 0x18; pop ebx; ret; 
0x001766c4: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1766d3; add esp, 0x18; pop ebx; ret; 
0x0017b78f: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17b7c4; add esp, 0x18; pop ebx; ret; 
0x0017d2c2: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17d2e1; add esp, 0x18; pop ebx; ret; 
0x0017d33c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17d359; add esp, 0x18; pop ebx; ret; 
0x00182929: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x182938; add esp, 0x18; pop ebx; ret; 
0x00185691: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x0018b69c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x18b6c7; add esp, 0x18; pop ebx; ret; 
0x0003d852: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3d860; add esp, 0x1c; ret; 
0x0003fe77: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x00040084: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x00040334: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b7: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x00041355: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x41394; add esp, 0x18; pop ebx; ret; 
0x0005a000: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x5a017; add esp, 0x1c; ret; 
0x0009a8c8: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x9a8f7; add esp, 0x18; pop ebx; ret; 
0x000c35e5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xc3614; add esp, 0x18; pop ebx; ret; 
0x000d7bf6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000e232a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47aa: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x000ec8d7: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xec8ef; add esp, 0x1c; ret; 
0x00132e0b: or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x000a452e: or al, 0x6a; add eax, 0x547c838d; stc; call dword ptr [eax - 0x73]; 
0x00087142: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00184636: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00184524: or al, 0x6a; add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000d9673: or al, 0x6b; ret; 
0x00149a9d: or al, 0x75; ret; 
0x0002871b: or al, 0x7c; stc; call dword ptr [eax + 0x68]; 
0x0002865d: or al, 0x7c; stc; call dword ptr [eax - 0x73]; 
0x0014571a: or al, 0x7f; ret; 
0x0008d6a5: or al, 0x80; int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010ccb0: or al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e00af: or al, 0x81; les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0002a9d2: or al, 0x81; stc; call dword ptr [eax - 0x18]; 
0x0005f929: or al, 0x83; call 0x19fe7c34; ja 0x5f940; mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x00059f53: or al, 0x83; call 0x448285b; ret; 
0x000815c9: or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x000887a4: or al, 0x83; in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x000851fd: or al, 0x83; in al, dx; or al, 0x83; ret; 
0x0016c8cb: or al, 0x83; in al, dx; or byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax - 1]; 
0x00175729: or al, 0x83; in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x00157feb: or al, 0x83; inc esp; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0010541e: or al, 0x83; into; call dword ptr [edi - 0x18]; 
0x0018347d: or al, 0x83; jnp 0x1834b9; jmp dword ptr [ebp - 0x75]; 
0x000843ba: or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016b0bd: or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00150f33: or al, 0x83; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0017f6de: or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x000599c7: or al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00060331: or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0003aaf5: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00051c08: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0009aba9: or al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002fbab: or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003ad28: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x000fd971: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0007f697: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0014bd71: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002ce8a: or al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x001aef5c: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00059a37: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016857f: or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0003fd01: or al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0014251c: or al, 0x83; les edx, ptr [eax]; pop esi; pop edi; pop ebp; ret; 
0x0003c4d6: or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000591c7: or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00040045: or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x00156265: or al, 0x83; mov byte ptr [ecx], 0xeb; ret; 
0x000be973: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x000c3dca: or al, 0x83; rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x000bef23: or al, 0x83; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x00081f18: or al, 0x83; ret 0x2b2c; 
0x000dba69: or al, 0x83; ret 0x3909; 
0x00035edd: or al, 0x83; ret 0x5201; 
0x0016e312: or al, 0x83; ret 0x5208; 
0x0009ebe5: or al, 0x83; ret 0x8901; 
0x000ed604: or al, 0x83; ret 0x8902; 
0x000ff396: or al, 0x83; ret 0xc704; 
0x00036c21: or al, 0x83; ret; 
0x001029aa: or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x0013cc8f: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0013cd30: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [edx + esi + 0x39], cl; ret 0x1f72; 
0x0015f5b4: or al, 0x85; bnd call dword ptr [eax - 1]; 
0x000430e6: or al, 0x85; sal byte ptr [eax + esi*2 - 0x75], 0x3c; and al, 0x8d; inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x001207fa: or al, 0x85; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6a5706a], cl; call dword ptr [edx - 0x77]; 
0x00120819: or al, 0x85; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6a56d6a], cl; call dword ptr [edx - 0x77]; 
0x0009b519: or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x00121423: or al, 0x85; sal byte ptr [ecx + eax - 0x3d], 0x83; in al, dx; or al, 0x8d; sbb byte ptr [esp + esi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0012b251: or al, 0x85; sal byte ptr [edx + ebx - 0x75], 0x74; and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012896b: or al, 0x85; sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x128978; ret; 
0x0013de65: or al, 0x89; adc edi, dword ptr [ecx]; ret 0x6474; 
0x0003e85c: or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0014c3fa: or al, 0x89; call 0x44248d86; ret 0x148b; 
0x0007aaa2: or al, 0x89; call 0x5d670904; ret; 
0x000a42d8: or al, 0x89; call 0x5d69a13a; ret; 
0x000c34b2: or al, 0x89; call 0x5d6b9314; ret; 
0x0014c0a7: or al, 0x89; call 0x5d741f09; ret; 
0x001830d2: or al, 0x89; call 0x5d778f34; ret; 
0x0008ec18: or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0003d083: or al, 0x89; cli; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d03b: or al, 0x89; cli; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0002cbd1: or al, 0x89; cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x0008936f: or al, 0x89; dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x00136cfa: or al, 0x89; dec ebp; mov word ptr [ebp - 0x9773], cs; dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x0003fc61: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00085ef3: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0009ac22: or al, 0x89; fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x0013b2ab: or al, 0x89; fimul word ptr [edi]; xchg ebx, eax; ret; 
0x0002dd29: or al, 0x89; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x00027846: or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x210ff37d]; call dword ptr [eax - 0x73]; 
0x00131b31: or al, 0x89; inc edi; adc al, 0x29; ret 0x478b; 
0x0005a929: or al, 0x89; inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x0008aeb0: or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001119ce: or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011c6e5: or al, 0x89; inc esp; and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x001029a6: or al, 0x89; je 0x10296c; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x000edc45: or al, 0x89; lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00066fe3: or al, 0x89; lea ebp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x00068102: or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x00068dd6: or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x00068c8a: or al, 0x89; lea esp, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x0009b595: or al, 0x89; push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x00035353: or al, 0x89; push ebp; mov esp, 0x3e3f808d; stc; call dword ptr [eax - 0x18]; 
0x001322a9: or al, 0x89; push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008922b: or al, 0x89; push esi; and al, 1; ret 0x5689; 
0x0007e0ac: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00130eeb: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0017a41b: or al, 0x89; ret 0x25; 
0x0017b3de: or al, 0x89; ret 0x408d; 
0x00109042: or al, 0x89; ret 0x438d; 
0x0012c987: or al, 0x89; ret 0x448b; 
0x000ad59d: or al, 0x89; ret 0x468d; 
0x00081f38: or al, 0x89; ret 0x48d; 
0x00087830: or al, 0x89; ret 0x532b; 
0x0017e90a: or al, 0x89; ret 0x808b; 
0x00067220: or al, 0x89; ret 0xc031; 
0x0009258e: or al, 0x89; ret 0xc889; 
0x0009f1db: or al, 0x89; ret 0xca83; 
0x0017ea18: or al, 0x89; ret 0xd889; 
0x000937d4: or al, 0x89; ret 0xe281; 
0x0009416a: or al, 0x89; ret 0xe283; 
0x0008bac2: or al, 0x89; ret 0xe989; 
0x0010474d: or al, 0x89; ret 0xf889; 
0x0003b527: or al, 0x89; ret 0xff25; 
0x00033fd9: or al, 0x89; ret; 
0x000930be: or al, 0x89; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00103d62: or al, 0x8b; adc bh, dh; ret 0x30f; 
0x00098f47: or al, 0x8b; adc cl, byte ptr [ebx + 0x144a3908]; je 0x98f58; ret; 
0x0012f0d3: or al, 0x8b; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a468d: or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x0014bd35: or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x00168c5e: or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0011c69b: or al, 0x8b; dec esp; and al, 0x54; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x001372f8: or al, 0x8b; inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000e6bc2: or al, 0x8b; inc ebp; aam 0x56; call eax; 
0x0017a959: or al, 0x8b; inc ebp; adc byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0002963f: or al, 0x8b; inc ebp; add dh, dh; ret; 
0x00170df8: or al, 0x8b; inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0016907d: or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016ee45: or al, 0x8b; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0017405b: or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x000c3a29: or al, 0x8b; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x001727dc: or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0016aa57: or al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x16aa6b; push edi; call dword ptr [eax + 8]; 
0x0003b545: or al, 0x8b; inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00181352: or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0013299f: or al, 0x8b; inc esp; and al, 0xc; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x0010980d: or al, 0x8b; inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008e6b6: or al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003bfc8: or al, 0x8b; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x00102cde: or al, 0x8b; je 0x102d06; sub al, 0x83; ret; 
0x0009d6f2: or al, 0x8b; je 0x9d71a; add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009d972: or al, 0x8b; je 0x9d99a; dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x0009d9b2: or al, 0x8b; je 0x9d9da; dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009a004: or al, 0x8b; jg 0x9a014; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000e5561: or al, 0x8b; jl 0xe5589; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000e68f8: or al, 0x8b; jne 0xe68d0; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000e6db8: or al, 0x8b; jne 0xe6d90; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x00136866: or al, 0x8b; lea esi, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x9b43]; dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x0006fc48: or al, 0x8b; mov word ptr [ebx - 0x726b4], ss; add ecx, eax; jmp ecx; 
0x0006f3cc: or al, 0x8b; mov word ptr [ebx - 0x72734], ss; add ecx, eax; jmp ecx; 
0x00070dc2: or al, 0x8b; mov word ptr [ebx - 0x72834], ss; add ecx, eax; jmp ecx; 
0x000603d4: or al, 0x8b; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012c428: or al, 0x8b; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b788: or al, 0x8b; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d518: or al, 0x8b; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d028: or al, 0x8b; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111338: or al, 0x8b; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c098: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be08: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be68: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111058: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f448: or al, 0x8b; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129258: or al, 0x8b; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf78: or al, 0x8b; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc38: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125058: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd18: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd48: or al, 0x8b; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c068: or al, 0x8b; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b78: or al, 0x8b; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed938: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed908: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f78: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124318: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124028: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124058: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120638: or al, 0x8b; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00168df7: or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00158309: or al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x00097c28: or al, 0x8b; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010898f: or al, 0x8b; push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00114063: or al, 0x8b; push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00115a43: or al, 0x8b; push esp; and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0005d11e: or al, 0x8b; stc; call dword ptr [eax - 0x18]; 
0x0016a5c3: or al, 0x8b; test byte ptr [ebx - 0x138], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0007ab18: or al, 0x8b; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0014c9cc: or al, 0x8d; adc byte ptr [eax - 0x40], 0xf9; call dword ptr [eax + 0x68]; 
0x0014c893: or al, 0x8d; adc byte ptr [eax - 0x40], 0xf9; call dword ptr [eax - 0x73]; 
0x00041222: or al, 0x8d; adc dword ptr [eax + ebx], 0; add byte ptr [eax - 0x18], dl; push ecx; ret; 
0x0007a29d: or al, 0x8d; adc dword ptr [eax - 6], -1; call dword ptr [eax - 0x73]; 
0x00145dbe: or al, 0x8d; adc dword ptr [ebx], 0x6b; stc; call dword ptr [eax - 0x18]; 
0x000399a7: or al, 0x8d; adc ecx, 0x3e; stc; call dword ptr [eax - 0x18]; 
0x0003e7b2: or al, 0x8d; add dword ptr [eax], -0x7a; stc; call dword ptr [eax - 0x18]; 
0x00086cae: or al, 0x8d; add dword ptr [ecx], 0x4f; stc; call dword ptr [eax - 0x75]; 
0x00108151: or al, 0x8d; add dword ptr [esi + 0x58], -7; call dword ptr [eax - 0x18]; 
0x000da856: or al, 0x8d; add dword ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x0017ec58: or al, 0x8d; add esp, -0x36; stc; call dword ptr [eax - 0x18]; 
0x0009275a: or al, 0x8d; and dword ptr [edi + 0x39], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x001184fa: or al, 0x8d; and dword ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x0014c919: or al, 0x8d; cmp byte ptr [eax + eax*8], 0xf9; call dword ptr [eax - 0x73]; 
0x00165804: or al, 0x8d; cmp dword ptr [ecx], 0x73; stc; call dword ptr [eax - 0x18]; 
0x0011ba9a: or al, 0x8d; cmp eax, -0x4e; stc; call dword ptr [eax - 0x18]; 
0x000923bd: or al, 0x8d; cmp eax, -0x6c; stc; call dword ptr [eax - 0x18]; 
0x000671a3: or al, 0x8d; cmp esp, 0x42; stc; call dword ptr [eax - 0x18]; 
0x000b0b12: or al, 0x8d; dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000e841a: or al, 0x8d; inc ebp; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000e8303: or al, 0x8d; inc ebp; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015137d: or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x0009f5bc: or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x0009ff35: or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00024887: or al, 0x8d; or bl, 0x69; stc; call dword ptr [eax - 0x18]; 
0x00151a81: or al, 0x8d; or byte ptr [eax], 0xc3; stc; call dword ptr [eax - 0x73]; 
0x001824a7: or al, 0x8d; or byte ptr [edi + 0x77], 0xf9; call dword ptr [eax - 0x18]; 
0x0016121a: or al, 0x8d; or dword ptr [eax - 0x5c], 0; add byte ptr [eax - 0x18], dl; pop ecx; ret; 
0x00082a6b: or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0005b6dd: or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00146667: or al, 0x8d; popfd; je 0x1466d7; stc; call dword ptr [ebx - 0x18]; 
0x00170158: or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x0011d1aa: or al, 0x8d; push ecx; call dword ptr [edx + 0x53]; 
0x00175aca: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00175182: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x0003597e: or al, 0x8d; sbb byte ptr [ebx + 0x3e], 0xf9; call dword ptr [eax - 0x18]; 
0x00077f3a: or al, 0x8d; sbb byte ptr [edi + ecx*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0012142b: or al, 0x8d; sbb byte ptr [esp + esi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00085b8b: or al, 0x8d; sbb dword ptr [eax - 0x6d], -7; call dword ptr [eax - 0x18]; 
0x00151461: or al, 0x8d; sbb dword ptr [edi], 0x6e; stc; call dword ptr [eax - 0x73]; 
0x0010b802: or al, 0x8d; sbb esp, 0x3c; stc; call dword ptr [eax - 0x18]; 
0x00077df9: or al, 0x8d; sub ah, 0x8e; stc; call dword ptr [eax - 0x73]; 
0x0005acf3: or al, 0x8d; sub byte ptr [eax], 0x8a; stc; call dword ptr [eax - 0x73]; 
0x000e7e12: or al, 0x8d; sub dword ptr [ecx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x000e8812: or al, 0x8d; sub ecx, 0x56; stc; call dword ptr [eax - 0x18]; 
0x00027f1a: or al, 0x8d; test dword ptr [eax + 0x39], edi; stc; call dword ptr [edi - 1]; 
0x00068843: or al, 0x8d; test dword ptr [eax - 0x76000005], edi; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x00127942: or al, 0x8d; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x000250db: or al, 0x8d; test dword ptr [edi + edi*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x00163934: or al, 0x8d; test dword ptr [edx + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0009f346: or al, 0x8d; xchg ah, bl; jbe 0x9f332; call dword ptr [eax + 0x57]; 
0x0008f0f3: or al, 0x8d; xchg ah, bl; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0009f37c: or al, 0x8d; xchg ah, cl; ja 0x9f368; call dword ptr [eax + 0x57]; 
0x00150751: or al, 0x8d; xchg al, dh; ret 0xfff9; 
0x0009f3b2: or al, 0x8d; xchg byte ptr [eax + edi*2 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x0011bd24: or al, 0x8d; xchg byte ptr [eax - 0x4d], ch; stc; call dword ptr [eax - 0x18]; 
0x001110cc: or al, 0x8d; xchg byte ptr [eax - 0x4e], ch; stc; call dword ptr [eax - 0x18]; 
0x001423fc: or al, 0x8d; xchg byte ptr [ebp + edi*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0011bd84: or al, 0x8d; xchg byte ptr [ebx + esi*4 - 0x17af0007], ah; pop ds; ret; 
0x00024fe7: or al, 0x8d; xchg byte ptr [edi + edi*2 - 7], bl; call dword ptr [eax - 0x18]; 
0x0009f334: or al, 0x8d; xchg byte ptr [edi + esi*2 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x0011f792: or al, 0x8d; xchg byte ptr [esi], ah; push esi; stc; call dword ptr [eax - 0x18]; 
0x000a263d: or al, 0x8d; xchg dword ptr [eax - 0x58], edi; stc; call dword ptr [eax - 0x73]; 
0x0009c02a: or al, 0x8d; xchg dword ptr [eax - 0x67], edx; stc; call dword ptr [eax - 0x73]; 
0x0009107a: or al, 0x8d; xchg dword ptr [eax], edi; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x00096f24: or al, 0x8d; xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; jmp edx; 
0x00098f2a: or al, 0x8d; xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; stc; ret 0xfffe; 
0x0010fa69: or al, 0x8d; xchg eax, edi; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0015d029: or al, 0x8d; xchg ebx, eax; sub al, 0xa2; add byte ptr [eax], al; push edx; call eax; 
0x000851bc: or al, 0x8d; xchg ebx, esi; dec esi; stc; call dword ptr [eax + 0x56]; 
0x000e82d2: or al, 0x8d; xchg ecx, ebp; push esi; stc; call dword ptr [eax - 0x18]; 
0x0010fb55: or al, 0x8d; xchg esp, ebx; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x001523a2: or al, 0x8d; xor byte ptr [eax - 0x3d], 0xf9; call dword ptr [eax - 0x18]; 
0x00078111: or al, 0x8d; xor byte ptr [edi + ecx*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00033eea: or al, 0x8d; xor dword ptr [eax], 0x3e; stc; call dword ptr [eax - 1]; 
0x0011baea: or al, 0x8d; xor dword ptr [eax], 0xffffffb3; stc; call dword ptr [eax - 0x18]; 
0x000b6b23: or al, 0x91; jmp ecx; 
0x00080229: or al, 0x93; stc; call dword ptr [eax - 0x73]; 
0x000b6c4a: or al, 0x99; jmp ecx; 
0x0016e9d0: or al, 0xa5; cld; dec dword ptr [ebp - 0x68b7e7d]; call dword ptr [edi + 0x6a]; 
0x001a5263: or al, 0xa8; add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x000a1ea9: or al, 0xa9; stc; call dword ptr [eax + 0x68]; 
0x000a1e7f: or al, 0xa9; stc; call dword ptr [eax - 0x73]; 
0x000b831d: or al, 0xaa; or al, 0; add ecx, 0x10db7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c171f: or al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x000337ea: or al, 0xb0; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x337f9; call eax; 
0x0011ec99: or al, 0xb4; jg 0x11ec9c; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x001a0f9f: or al, 0xb8; add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a0fb0; pop ebx; ret; 
0x00175f9b: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x001701d9: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0010b56f: or al, 0xb8; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x000f82ff: or al, 0xb8; fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001226d1: or al, 0xb8; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bda1: or al, 0xb8; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a9cc: or al, 0xb8; js 0x12a9d1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a679: or al, 0xb8; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a8e9: or al, 0xb8; les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00096944: or al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011b559: or al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e4940: or al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e5006: or al, 0xb8; or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124001: or al, 0xb8; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120611: or al, 0xb8; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bb69: or al, 0xb8; ret; 
0x0012c161: or al, 0xb8; test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011c911: or al, 0xb8; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00090760: or al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00060740: or al, 0xc2; push eax; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x0014e8cf: or al, 0xc2; stc; call dword ptr [eax - 0x73]; 
0x000a6e0c: or al, 0xcb; idiv bh; cmovne eax, edx; ret; 
0x00120206: or al, 0xd1; stc; call dword ptr [eax - 0x18]; 
0x0003bc84: or al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003bcbf: or al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003b8da: or al, 0xdd; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000a17cb: or al, 0xe8; call edi; 
0x00070e67: or al, 0xe8; ret; 
0x000dd6cd: or al, 0xe9; mov byte ptr [0xffffff6], al; mov esi, 0x246c8903; add al, 0x83; ret; 
0x0013936f: or al, 0xe9; pop ebx; jg 0x139367; jmp dword ptr [esi - 0x70]; 
0x0010e1d1: or al, 0xe9; ret 0xffea; 
0x0009500b: or al, 0xe9; ret; 
0x0013930f: or al, 0xe9; retf; lodsb al, byte ptr [esi]; hlt; jmp dword ptr [esi - 0x70]; 
0x0019f0bf: or al, 0xe; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0019edcb: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x0005ae4f: or al, 0xeb; mov bh, 0x8d; xchg dword ptr [eax - 0x76], esi; stc; call dword ptr [eax - 0x73]; 
0x00173ebc: or al, 0xec; call dword ptr [eax - 0x73]; 
0x0013887a: or al, 0xee; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00155364: or al, 0xf1; int1; call dword ptr [eax - 1]; 
0x0005b349: or al, 0xf6; ret 0x7401; 
0x0005d9a3: or al, 0xf6; ret 0xf01; 
0x000a3111: or al, 0xf6; ret 0xf02; 
0x00135ce3: or al, 0xf6; ret 0xf04; 
0x0005e015: or al, 0xf6; ret 0xf40; 
0x00054e2f: or al, 0xf7; ret 0; 
0x001a4844: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x000985cb: or al, 0xf; inc edi; ret 0x948b; 
0x0010afe8: or al, 0xf; inc esp; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x00106fce: or al, 0xf; mov dh, 0x53; add al, 0x8b; mov word ptr [eax - 0x6f5e8], ss; add ecx, eax; jmp ecx; 
0x0009a268: or al, 0xf; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00052792: or al, 0xf; mov dh, 0xc0; ret; 
0x0010ee39: or al, 0xf; mov dh, 0xd2; mov ecx, dword ptr [esi + edx*4 - 0x6ec98]; add ecx, esi; jmp ecx; 
0x00150537: or al, 0xf; mov dh, 7; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x00087a52: or al, 0xf; test bh, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x000d6b95: or al, 0xf; test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000b6ec3: or al, 0xf; test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b8526: or al, 0xf; test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b0b15: or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x00182b85: or al, 0xf; xchg dword ptr [edi + 0xfffea1e], eax; mov dh, 0xc0; add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x00132d3d: or al, 0xf; xchg ebp, eax; ret 0x44c7; 
0x0009a24c: or al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x001a3814: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0008eae5: or al, 0xfe; add esp, 8; pop ebx; ret; 
0x001920e5: or al, 0xff; inc dword ptr [ecx + 0x429a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019201e: or al, 0xff; inc dword ptr [ecx + 0x42a6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008f146: or al, 0xff; jae 0x8f14e; call dword ptr [ebx]; 
0x00096241: or al, 0xff; jae 0x96249; call dword ptr [ebx]; 
0x001469d4: or al, 0xff; je 0x1469fc; xor al, ch; ret 0xedc7; 
0x0015058c: or al, 0xff; je 0x1505b4; and byte ptr [ebx - 0x17e3dba4], cl; push es; cdq; bnd jmp dword ptr [ebp - 0x39]; 
0x0015d104: or al, 0xff; je 0x15d12c; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00024e25: or al, 0xff; je 0x24e4d; inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x0008c73a: or al, 0xff; je 0x8c762; sub al, 0x52; push ecx; push edi; call eax; 
0x000243fa: or al, 0xff; jne 0x243ca; call dword ptr [ebp - 0x38]; 
0x0009a007: or al, 0xff; jo 0x9a00f; call dword ptr [eax]; 
0x000a9ed1: or al, 0xff; mov bh, 0x88; add al, 0; add al, ch; ret; 
0x00094de8: or al, 1; add byte ptr [eax], al; add byte ptr [ebp + 0xf0a0054], cl; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x000a70d4: or al, 1; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc072; 
0x000a7191: or al, 1; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc372; 
0x0009abf5: or al, 1; add byte ptr [eax], al; add cl, ch; ret; 
0x001096f6: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00145d4b: or al, 1; add byte ptr [eax], al; mov eax, dword ptr gs:[eax]; ret; 
0x000c09f7: or al, 1; add byte ptr [eax], al; ret; 
0x00145ab7: or al, 1; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x145aed; add esp, 0x11c; ret; 
0x00109814: or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x000987be: or al, 1; pop ebx; pop esi; pop edi; ret; 
0x00176307: or al, 1; push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a2433: or al, 1; ret 0x448b; 
0x00081d19: or al, 1; ret 0xc101; 
0x0004716f: or al, 1; ret 0xd389; 
0x0013b294: or al, 1; ret 0xf983; 
0x00112ff8: or al, 1; ret 0xfa81; 
0x0002f1bc: or al, 1; ret; 
0x001329a3: or al, 5; add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebp + 0x14]; 
0x0019f676: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x000c00ac: or al, al; je 0xc00b4; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000fbd58: or al, byte ptr [eax + 0x427735fa]; mov eax, dword ptr [esp]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x000a11de: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc dword ptr [eax], -0x5f; stc; call dword ptr [eax - 0x18]; 
0x00159b59: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edx, esp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00040114: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0012cfb3: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011d4dd: or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0016a152: or al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x00122d31: or al, byte ptr [eax]; add byte ptr [ebp - 0x6a03e7d], cl; call dword ptr [ecx + 0x51]; 
0x0015841b: or al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0019df2e: or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0006e122: or al, byte ptr [eax]; add byte ptr [ecx - 0x7ccfdbac], cl; ret 0x8904; 
0x000b839d: or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00062179: or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0006dbe5: or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret; 
0x00090a59: or al, byte ptr [eax]; nop; nop; nop; xor eax, eax; ret; 
0x000985fa: or al, byte ptr [eax]; nop; nop; xor eax, eax; ret; 
0x00189424: or al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011e677: or al, byte ptr [ebp - 0x74f78737]; inc edx; or byte ptr [0x100f], ah; ret; 
0x0007f629: or al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000613c5: or al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000ed747: or al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x0015d295: or al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00146045: or al, byte ptr [ebx - 0x2f76f73c]; pop ebx; ret; 
0x0009990d: or al, byte ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x000995e5: or al, byte ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x000a5012: or al, byte ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret 4; 
0x00145677: or al, byte ptr [ecx + 0x110c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001453b4: or al, byte ptr [ecx + 0x810c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009d0c2: or al, byte ptr [ecx + 0x90c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00129506: or al, byte ptr [ecx + 0xe0c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e4942: or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e4a25: or al, byte ptr [ecx]; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001a3bc2: or al, byte ptr [ecx]; add byte ptr [eax], al; test al, 2; jne 0x1a3cc0; mov eax, ecx; ret; 
0x00116e3a: or al, ch; pushal; ret; 
0x000e9328: or al, ch; ret 0xf4a9; 
0x0018d24c: or bh, ah; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018cf2c: or bh, ah; mov eax, edx; pop ebx; ret; 
0x00173951: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc33437d], cl; call dword ptr [eax - 0x73]; 
0x0016e201: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc8a637d], cl; call dword ptr [eax - 0x73]; 
0x001727c8: or bh, al; add dword ptr [esi], ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x00032719: or bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00192505: or bh, bh; inc dword ptr [ecx + 0x42588c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019243e: or bh, bh; inc dword ptr [ecx + 0x4264fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001922de: or bh, bh; inc dword ptr [ecx + 0x427afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192245: or bh, bh; inc dword ptr [ecx + 0x42848c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012d3c2: or bh, bh; je 0x12d37b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x001688d3: or bh, bh; je 0x1688fb; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016d85f: or bh, bh; je 0x16d887; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x001703b4: or bh, bh; je 0x1703dc; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x00170ddf: or bh, bh; je 0x170e07; adc byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call eax; 
0x00173345: or bh, bh; je 0x17336d; adc al, 0x53; call dword ptr [eax]; 
0x00173544: or bh, bh; je 0x17356c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0018169d: or bh, bh; je 0x1816c5; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0008c659: or bh, bh; je 0x8c681; xor byte ptr [edx + 0x51], dl; call eax; 
0x000c91e3: or bh, bh; je 0xc920b; adc byte ptr [eax - 0x18], dl; ret 0x684; 
0x000e4cb7: or bh, bh; leave; lcall 0, 0x8e870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0009646d: or bh, bh; leave; lcall 0, 0xb8870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00097083: or bh, bh; leave; lcall 0, 0xca870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x00096e00: or bh, bh; leave; lcall 1, 0x3d870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00040ac6: or bh, bh; push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0017abc6: or bh, bh; xor ebp, eax; ret 0xfaa5; 
0x0009863e: or bh, byte ptr [eax + 0x10]; cmove eax, ecx; ret; 
0x000d6d41: or bh, byte ptr [ecx + 1]; pop ebx; pop esi; mov eax, ecx; ret; 
0x0009b54b: or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00107a73: or bh, cl; call dword ptr [eax - 0x73]; 
0x00184ab3: or bh, dh; ret 0x202; 
0x0011e6a2: or bh, dh; ret 0xeff0; 
0x0003bce7: or bh, dh; ret 0xffff; 
0x000929d2: or bh, dh; ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00083515: or bh, dl; jmp dword ptr [esi - 0x70]; 
0x00024889: or bl, 0x69; stc; call dword ptr [eax - 0x18]; 
0x00151a84: or bl, al; stc; call dword ptr [eax - 0x73]; 
0x0008eab6: or bl, bh; xor eax, eax; ret; 
0x000e7bd5: or bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00132618: or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00085c6e: or bl, byte ptr [ebx + 0x5e]; ret; 
0x000b89d2: or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00194540: or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000fb789: or bl, ch; jge 0x830fde05; ret; 
0x00181f0a: or bl, ch; mov ch, al; into; outsd dx, dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x0018f837: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0005f726: or byte ptr [0x100], ah; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0011e666: or byte ptr [0x100f], ah; ret; 
0x0008eb1f: or byte ptr [eax + 0x1000000], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x0009e16f: or byte ptr [eax + 0x104], bh; call dword ptr gs:[0x10]; 
0x000e4e46: or byte ptr [eax + 0x108], bh; call dword ptr gs:[0x10]; 
0x0012c42c: or byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0010b1ca: or byte ptr [eax + 0x11c], bh; call dword ptr gs:[0x10]; 
0x0012befc: or byte ptr [eax + 0x124], bh; call dword ptr gs:[0x10]; 
0x0011b903: or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0011b78c: or byte ptr [eax + 0x128], bh; call dword ptr gs:[0x10]; 
0x0011d51c: or byte ptr [eax + 0x12d], bh; call dword ptr gs:[0x10]; 
0x0011d02c: or byte ptr [eax + 0x130], bh; call dword ptr gs:[0x10]; 
0x0011c6a3: or byte ptr [eax + 0x135], bh; call dword ptr gs:[0x10]; 
0x00110e33: or byte ptr [eax + 0x13e], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011133c: or byte ptr [eax + 0x14a], bh; call dword ptr gs:[0x10]; 
0x0008eba3: or byte ptr [eax + 0x16], bh; cmp edx, 0x3fff; ja 0x8ebb8; ret; 
0x0009531a: or byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0009e06d: or byte ptr [eax + 0x199], bh; call dword ptr gs:[0x10]; 
0x0011c6e9: or byte ptr [eax + 0x19e], bh; call dword ptr gs:[0x10]; 
0x0012e993: or byte ptr [eax + 0x1a4], bh; call dword ptr gs:[0x10]; 
0x00125a13: or byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x0012c09c: or byte ptr [eax + 0x1ac], bh; call dword ptr gs:[0x10]; 
0x0012be0c: or byte ptr [eax + 0x1b0], bh; call dword ptr gs:[0x10]; 
0x0012be6c: or byte ptr [eax + 0x1b1], bh; call dword ptr gs:[0x10]; 
0x0011105c: or byte ptr [eax + 0x1b4], bh; call dword ptr gs:[0x10]; 
0x0012c0fc: or byte ptr [eax + 0x1b6], bh; call dword ptr gs:[0x10]; 
0x0009dadf: or byte ptr [eax + 0x43752f3b], al; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000baf25: or byte ptr [eax + 0x448b0270], cl; and al, 8; pop esi; ret; 
0x00079d95: or byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x00086625: or byte ptr [eax + 0x56], dl; call dword ptr [edi + 0x48]; 
0x0011f44c: or byte ptr [eax + 0x61], bh; call dword ptr gs:[0x10]; 
0x0012925c: or byte ptr [eax + 0x65], bh; call dword ptr gs:[0x10]; 
0x0012cae0: or byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0012bf7c: or byte ptr [eax + 0x67], bh; call dword ptr gs:[0x10]; 
0x0012debd: or byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x0012dfbd: or byte ptr [eax + 0x75], bh; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0018b8b5: or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012bc3c: or byte ptr [eax + 0x7b], bh; call dword ptr gs:[0x10]; 
0x0012505c: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x0012bd1c: or byte ptr [eax + 0x7f], bh; call dword ptr gs:[0x10]; 
0x0012bd4c: or byte ptr [eax + 0x81], bh; call dword ptr gs:[0x10]; 
0x00143841: or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00108bdc: or byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0012c06c: or byte ptr [eax + 0xa9], bh; call dword ptr gs:[0x10]; 
0x000e7b7c: or byte ptr [eax + 0xb], bh; call dword ptr gs:[0x10]; 
0x0011b1fc: or byte ptr [eax + 0xc6], bh; call dword ptr gs:[0x10]; 
0x001118cc: or byte ptr [eax + 0xcf], bh; call dword ptr gs:[0x10]; 
0x000ed93c: or byte ptr [eax + 0xd1], bh; call dword ptr gs:[0x10]; 
0x000ed90c: or byte ptr [eax + 0xd3], bh; call dword ptr gs:[0x10]; 
0x00110f7c: or byte ptr [eax + 0xd4], bh; call dword ptr gs:[0x10]; 
0x001243ec: or byte ptr [eax + 0xda], bh; call dword ptr gs:[0x10]; 
0x0012431c: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x00111c18: or byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0012402c: or byte ptr [eax + 0xe8], bh; call dword ptr gs:[0x10]; 
0x0012405c: or byte ptr [eax + 0xe9], bh; call dword ptr gs:[0x10]; 
0x0012063c: or byte ptr [eax + 0xea], bh; call dword ptr gs:[0x10]; 
0x0013cdb7: or byte ptr [eax + 0xf000000], al; inc edx; ret 0x57c3; 
0x00097a38: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097a0e: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093309: or byte ptr [eax + 0xf0], bh; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000be409: or byte ptr [eax + 0xf660870], cl; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00124e45: or byte ptr [eax + 1], bh; pop ebx; ret; 
0x000fa0cd: or byte ptr [eax + ecx - 0x58], dh; add dword ptr [edi], ecx; test dword ptr [eax - 0xa000000], ecx; ret 0x7420; 
0x00172ca5: or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x000b676c: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x00059d11: or byte ptr [eax - 0x3d7effee], dl; call eax; 
0x0015256c: or byte ptr [eax - 0x72b00000], ah; sub dword ptr [ecx + edi*4], -0xf; call dword ptr [eax - 0x18]; 
0x00120202: or byte ptr [eax - 0x73], dl; or dword ptr [ecx + edx*8], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00099368: or byte ptr [eax - 0x73], dl; sub dword ptr [ecx], -0x1a; call dword ptr [eax - 1]; 
0x00111816: or byte ptr [eax - 0x73], dl; xchg esp, ebx; cmp al, 0xf9; call dword ptr [eax + 0x55]; 
0x000bdab0: or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x000bd7bd: or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b660c: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000fa0cf: or byte ptr [eax - 0x777af0ff], ch; add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x0018ed0d: or byte ptr [eax - 1], al; inc dword ptr [ecx + 0x4587fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005aeea: or byte ptr [eax - 1], bh; pop ebx; ret; 
0x000a488a: or byte ptr [eax - 1], dl; jae 0xa48b3; call edx; 
0x00151a83: or byte ptr [eax], 0xc3; stc; call dword ptr [eax - 0x73]; 
0x000c09f1: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c0a01: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c0a11: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c0a21: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c0a31: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c0a41: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c0a51: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c0a61: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c0a71: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c0a81: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c0a91: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c09e1: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0012fc7b: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x00120f20: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0012141c: or byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x121429; ret; 
0x000ec677: or byte ptr [eax], 3; stc; inc dword ptr [ecx]; xlatb; jmp edi; 
0x00192a8a: or byte ptr [eax], ah; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193160: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x41928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193000: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x41a88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192ea0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x41be8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192d40: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x41d48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192be0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x41ea8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001927c0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x422c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192660: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x42428; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192500: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x42588; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001923a0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x426e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192240: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x42848; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001920e0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x429a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191e20: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x42c68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191060: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x437a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190f10: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x438f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190dc0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x43a48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190c70: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x43b98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190730: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x440d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001905e0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x44228; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190490: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x44378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190340: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x444c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901f0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x44618; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001900a0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x44768; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ff50: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x448b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fe00: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x44a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f060: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x45528; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ef10: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x45678; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018edc0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x457c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ec70: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x45918; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb20: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x45a68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e9d0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x45bb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e880: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x45d08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e730: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x45e58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e5e0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x45fa8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e490: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x460f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e340: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x46248; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e1f0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x46398; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e0a0: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x464e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018df50: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x46638; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018de00: or byte ptr [eax], ah; pop edi; call 0x182d19; add ebx, 0x46788; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bf135: or byte ptr [eax], ah; ret; 
0x00023008: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x001137eb: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x777bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0017eea5: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x0008f31c: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00174038: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00090efc: or byte ptr [eax], al; add byte ptr [eax], al; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x000c1e34: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001829e1: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0003c426: or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009e69a: or byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x000428c1: or byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000961d2: or byte ptr [eax], al; add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x0003c29e: or byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0009173e: or byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 0xc], edx; call dword ptr gs:[0x10]; 
0x0002326f: or byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x000e7107: or byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00109f7e: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0003cf74: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003c4aa: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003c345: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0016a162: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x000422e0: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x001a49e7: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00097c12: or byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000961a9: or byte ptr [eax], al; add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x00092d42: or byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00095592: or byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0013492a: or byte ptr [eax], al; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x00061608: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001453b8: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00084087: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003dd7b: or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x00159b43: or byte ptr [eax], al; add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [ebp + eax*8 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0002bac1: or byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x00122c5c: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; call ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00122c77: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ebx; call dword ptr [eax + 0x55]; 
0x001ad97e: or byte ptr [eax], al; add byte ptr [ecx + 0x74891134], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000b6e05: or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014e37f: or byte ptr [eax], al; add byte ptr [edi], cl; mov dword ptr [0x8b9c72c2], eax; dec ebp; mov word ptr [ebp - 0x63ea37f], cs; call dword ptr [eax - 0x73]; 
0x00158bfa: or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0005c0e3: or byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0009e966: or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0009ff7d: or byte ptr [eax], al; add esp, 0x10; cmp eax, -1; je 0x9ff90; add esp, 0xc; ret; 
0x0009e8be: or byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000379c3: or byte ptr [eax], al; add esp, 0x1c; ret; 
0x00059d3a: or byte ptr [eax], al; mov eax, edx; ret; 
0x0003ff20: or byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008eb8a: or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0008eb6f: or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000bf145: or byte ptr [eax], dh; ret; 
0x000bf125: or byte ptr [eax], dl; ret; 
0x0009de8f: or byte ptr [ebp + 0x10479db], al; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001493c2: or byte ptr [ebp + 0x26850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x0007e145: or byte ptr [ebp + 0x2840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00183d34: or byte ptr [ebp + 0x33840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0007c82b: or byte ptr [ebp + 0x393074c9], al; ret; 
0x00085dd0: or byte ptr [ebp + 0x396374c9], al; ret; 
0x0007db80: or byte ptr [ebp + 0x397374c9], al; ret; 
0x000658ff: or byte ptr [ebp + 0x3b840fc0], al; add al, 0; add byte ptr [ecx], bh; ret; 
0x001492f2: or byte ptr [ebp + 0x40850fed], al; add al, 0; add dh, dh; ret; 
0x000ed38d: or byte ptr [ebp + 0x40], 0xf9; call dword ptr [eax - 0x77]; 
0x00084d24: or byte ptr [ebp + 0x43840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000534b3: or byte ptr [ebp + 0x478d0450], cl; add al, 0xf; xchg edx, eax; ret; 
0x0013f5f4: or byte ptr [ebp + 0x48ac83], cl; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x00083146: or byte ptr [ebp + 0x49840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00079d91: or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00086621: or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00086317: or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0008190e: or byte ptr [ebp + 0x50402444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00110c86: or byte ptr [ebp + 0x51], dl; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000f4cfa: or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000e4b4c: or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000edbfa: or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x00171ec7: or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x00087abb: or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x00184d16: or byte ptr [ebp + 0x52382454], cl; push esi; call dword ptr [eax + 0x48]; 
0x000e49f2: or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x00168a05: or byte ptr [ebp + 0x5540246c], cl; push eax; call dword ptr [ecx + 8]; 
0x00089abb: or byte ptr [ebp + 0x5650015a], cl; call dword ptr [ebp + 0xc]; 
0x000b512d: or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x000b516c: or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x0008a624: or byte ptr [ebp + 0x5b840fc0], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x001a8c78: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret 4; 
0x000e7d5f: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000b89ad: or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000b89cf: or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000b8a0d: or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x0007d616: or byte ptr [ebp + 0x61840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0007b2c4: or byte ptr [ebp + 0x6b840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00071aaf: or byte ptr [ebp + 0x72840fc0], al; add al, 0; add byte ptr [ecx], bh; ret; 
0x0008a304: or byte ptr [ebp + 0x7b840fc0], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00183b64: or byte ptr [ebp + 0xb840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001aab1b: or byte ptr [ebp + 0xc534], 0; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x0018e88a: or byte ptr [ebp + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00098616: or byte ptr [ebp + 7], dh; xor eax, eax; ret; 
0x0008cc03: or byte ptr [ebp + eax - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x00079113: or byte ptr [ebp + ebx - 0x7d], dh; call dword ptr [eax]; 
0x00092e21: or byte ptr [ebp + ecx*4 - 0x15], dh; ret 0x8d2e; 
0x001184d0: or byte ptr [ebp - 0x11f8836d], cl; call dword ptr [edx - 0x73]; 
0x000f7abe: or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000f7929: or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x000f7962: or byte ptr [ebp - 0x15337b], cl; call dword ptr [eax + 0x52]; 
0x0014c367: or byte ptr [ebp - 0x18], dl; and cl, byte ptr [ebx + 0x4b8bfff5]; sbb byte ptr [ebx + 0x478910c4], al; adc al, 0x89; ret 0xc985; 
0x0009d312: or byte ptr [ebp - 0x199ce379], cl; call dword ptr [eax - 0x73]; 
0x000318b4: or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x00085a22: or byte ptr [ebp - 0x1b16c37d], cl; call dword ptr [eax - 0x73]; 
0x0008559c: or byte ptr [ebp - 0x1b1b437d], cl; dec dword ptr [ecx - 0x72afebaa]; cmp dword ptr [esp], -0x1c; call dword ptr [eax - 0x73]; 
0x00027090: or byte ptr [ebp - 0x210fd36d], cl; call dword ptr [edx + 0x50]; 
0x0007d9b4: or byte ptr [ebp - 0x2c7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0007ae1f: or byte ptr [ebp - 0x2f7bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0002fcea: or byte ptr [ebp - 0x327bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; jle 0x2fd35; stc; call dword ptr [edx + 0x50]; 
0x000d3e02: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x35e34b]; dec dword ptr [ebx - 0x36576b]; call dword ptr [eax - 0x73]; 
0x000d3545: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x73]; 
0x00057ec7: or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000ad347: or byte ptr [ebp - 0x3a], dh; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0007e6b9: or byte ptr [ebp - 0x417bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00148c10: or byte ptr [ebp - 0x41c6b], cl; call dword ptr [edi + 0x52]; 
0x001054bf: or byte ptr [ebp - 0x427bf040], al; add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00183f24: or byte ptr [ebp - 0x447bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00127448: or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x00149a60: or byte ptr [ebp - 0x48], dh; add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x000ad0e6: or byte ptr [ebp - 0x49], dh; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x00083bc4: or byte ptr [ebp - 0x547bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000835a7: or byte ptr [ebp - 0x577bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000ee702: or byte ptr [ebp - 0x59f7b], cl; call dword ptr [eax - 0x75]; 
0x000f5802: or byte ptr [ebp - 0x5ab7b], cl; call dword ptr [eax - 0x75]; 
0x0017d042: or byte ptr [ebp - 0x6354b45], cl; call dword ptr [edi + 0x56]; 
0x0015d861: or byte ptr [ebp - 0x63a977f], cl; call dword ptr [eax - 0x73]; 
0x0014a164: or byte ptr [ebp - 0x640bb7a], cl; call dword ptr [eax - 0x73]; 
0x0012c56c: or byte ptr [ebp - 0x649bf79], cl; call dword ptr [eax + 0x55]; 
0x0012c587: or byte ptr [ebp - 0x649d779], cl; call dword ptr [eax + 0x55]; 
0x0012c5a5: or byte ptr [ebp - 0x649ef79], cl; call dword ptr [eax + 0x55]; 
0x00117fe1: or byte ptr [ebp - 0x64d6b7f], cl; call dword ptr [eax - 0x73]; 
0x0010e762: or byte ptr [ebp - 0x64e0779], cl; call dword ptr [eax - 0x73]; 
0x0010d428: or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax + 0x68]; 
0x0010d02b: or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax - 0x73]; 
0x0010e579: or byte ptr [ebp - 0x64e2f79], cl; call dword ptr [eax - 0x73]; 
0x000e8570: or byte ptr [ebp - 0x650b77f], cl; call dword ptr [eax - 0x73]; 
0x000a2489: or byte ptr [ebp - 0x657677a], cl; call dword ptr [eax - 0x73]; 
0x0008452e: or byte ptr [ebp - 0x66cc379], cl; call dword ptr [eax - 0x73]; 
0x0007be4d: or byte ptr [ebp - 0x66d0771], cl; jmp dword ptr [ebp - 0x75]; 
0x00038232: or byte ptr [ebp - 0x67b0f6d], cl; call dword ptr [edx - 0x77]; 
0x000305d8: or byte ptr [ebp - 0x67bd379], cl; call dword ptr [eax + 0x56]; 
0x0003328b: or byte ptr [ebp - 0x67bd37b], cl; call dword ptr [eax + 0x56]; 
0x00028191: or byte ptr [ebp - 0x67f977f], cl; call dword ptr [eax - 0x73]; 
0x0017bf63: or byte ptr [ebp - 0x6894955], cl; call dword ptr [ebp + 0x56]; 
0x0017d669: or byte ptr [ebp - 0x689497d], cl; call dword ptr [ebp + 0x50]; 
0x0017bf48: or byte ptr [ebp - 0x6895745], cl; call dword ptr [edi + 0x56]; 
0x0017c784: or byte ptr [ebp - 0x689574d], cl; call dword ptr [esi + 0x57]; 
0x0017d143: or byte ptr [ebp - 0x689666a], cl; call dword ptr [edx - 0x77]; 
0x0017bf7e: or byte ptr [ebp - 0x689666d], cl; call dword ptr [edx - 0x77]; 
0x0017c7be: or byte ptr [ebp - 0x6896675], cl; call dword ptr [ecx - 0x77]; 
0x0017bfa1: or byte ptr [ebp - 0x6897545], cl; call dword ptr [edi + 0x56]; 
0x0017d162: or byte ptr [ebp - 0x689754a], cl; call dword ptr [esi + 0x53]; 
0x0017c7e1: or byte ptr [ebp - 0x689754d], cl; call dword ptr [esi + 0x57]; 
0x0016c8ce: or byte ptr [ebp - 0x68c6a7d], cl; call dword ptr [eax - 1]; 
0x00166f53: or byte ptr [ebp - 0x68d907d], cl; call dword ptr [eax + 0x55]; 
0x00165e74: or byte ptr [ebp - 0x68d9080], cl; call dword ptr [eax + 0x57]; 
0x0015d0b5: or byte ptr [ebp - 0x68f706f], cl; call dword ptr [edx + 0x50]; 
0x0015cbd2: or byte ptr [ebp - 0x68fac6d], cl; call dword ptr [edx + 0x50]; 
0x000f79f2: or byte ptr [ebp - 0x6903f68], cl; dec dword ptr [ebp - 0x6a81e80]; call dword ptr [ebx + 0x50]; 
0x00120722: or byte ptr [ebp - 0x6903f7d], cl; call dword ptr [eax - 0x73]; 
0x00151441: or byte ptr [ebp - 0x6923b7d], cl; call dword ptr [eax - 1]; 
0x00143209: or byte ptr [ebp - 0x695ae80], cl; call dword ptr [eax + 0x53]; 
0x00128b73: or byte ptr [ebp - 0x69c0a7d], cl; call dword ptr [eax + 0x56]; 
0x00122b38: or byte ptr [ebp - 0x69eaa7d], cl; call dword ptr [eax + 0x55]; 
0x00122ccd: or byte ptr [ebp - 0x6a1337d], cl; call dword ptr [eax + 0x55]; 
0x00122cb2: or byte ptr [ebp - 0x6a1657d], cl; call dword ptr [eax + 0x55]; 
0x00122c97: or byte ptr [ebp - 0x6a1997d], cl; call dword ptr [eax + 0x55]; 
0x00122c7c: or byte ptr [ebp - 0x6a1ce7d], cl; call dword ptr [eax + 0x55]; 
0x00122c61: or byte ptr [ebp - 0x6a2007d], cl; call dword ptr [eax + 0x55]; 
0x00122c46: or byte ptr [ebp - 0x6a24c7d], cl; call dword ptr [eax + 0x55]; 
0x00122c2b: or byte ptr [ebp - 0x6a2907d], cl; call dword ptr [eax + 0x55]; 
0x00122c10: or byte ptr [ebp - 0x6a2c27d], cl; call dword ptr [eax + 0x55]; 
0x00122bf5: or byte ptr [ebp - 0x6a2f87d], cl; call dword ptr [eax + 0x55]; 
0x00122bda: or byte ptr [ebp - 0x6a3397d], cl; call dword ptr [eax + 0x55]; 
0x00122bbf: or byte ptr [ebp - 0x6a36e7d], cl; call dword ptr [eax + 0x55]; 
0x00122ba4: or byte ptr [ebp - 0x6a3b57d], cl; call dword ptr [eax + 0x55]; 
0x00122b89: or byte ptr [ebp - 0x6a3ee7d], cl; call dword ptr [eax + 0x55]; 
0x00122b6e: or byte ptr [ebp - 0x6a4427d], cl; call dword ptr [eax + 0x55]; 
0x00122b53: or byte ptr [ebp - 0x6a4ac7d], cl; call dword ptr [eax + 0x55]; 
0x00120820: or byte ptr [ebp - 0x6a56d6a], cl; call dword ptr [edx - 0x77]; 
0x00120801: or byte ptr [ebp - 0x6a5706a], cl; call dword ptr [edx - 0x77]; 
0x001207e2: or byte ptr [ebp - 0x6a5766a], cl; call dword ptr [edx - 0x77]; 
0x000fa965: or byte ptr [ebp - 0x6a7c77d], cl; call dword ptr [eax + 0x55]; 
0x000faca2: or byte ptr [ebp - 0x6a7ce7d], cl; call dword ptr [eax + 0x55]; 
0x000fab96: or byte ptr [ebp - 0x6a7d47d], cl; call dword ptr [eax + 0x55]; 
0x000faa71: or byte ptr [ebp - 0x6a7da7d], cl; call dword ptr [eax + 0x55]; 
0x000fa71a: or byte ptr [ebp - 0x6a7e07d], cl; call dword ptr [eax + 0x55]; 
0x000fa7e1: or byte ptr [ebp - 0x6a7ec7d], cl; call dword ptr [eax + 0x55]; 
0x000fab3a: or byte ptr [ebp - 0x6a7f27d], cl; call dword ptr [eax + 0x55]; 
0x000fa909: or byte ptr [ebp - 0x6a7f87d], cl; call dword ptr [eax + 0x55]; 
0x000f7aa7: or byte ptr [ebp - 0x6a7fd80], cl; call dword ptr [eax + 0x53]; 
0x000f7b04: or byte ptr [ebp - 0x6a7fd80], cl; call dword ptr [eax - 1]; 
0x000da772: or byte ptr [ebp - 0x6a9db7d], cl; call dword ptr [eax + 0x56]; 
0x000da282: or byte ptr [ebp - 0x6aa107d], cl; call dword ptr [eax + 0x56]; 
0x000a4467: or byte ptr [ebp - 0x6ab997a], cl; call dword ptr [ebx + 0x50]; 
0x0015249d: or byte ptr [ebp - 0x6abcf7f], cl; call dword ptr [eax + 0x52]; 
0x001577d0: or byte ptr [ebp - 0x6aec979], cl; call dword ptr [eax + 0x53]; 
0x000fa81f: or byte ptr [ebp - 0x6b0bf7d], cl; call dword ptr [eax + 0x55]; 
0x00060d3c: or byte ptr [ebp - 0x6bd527a], cl; call dword ptr [eax + 0x53]; 
0x00060c6e: or byte ptr [ebp - 0x6bf986d], cl; call dword ptr [esi + 0x52]; 
0x00039793: or byte ptr [ebp - 0x6c1407b], cl; call dword ptr [eax + 0x53]; 
0x00121683: or byte ptr [ebp - 0x6c1a67a], cl; call dword ptr [eax - 1]; 
0x001201b3: or byte ptr [ebp - 0x6c1a67d], cl; call dword ptr [eax + 0x6a]; 
0x0014743f: or byte ptr [ebp - 0x6c1a87b], cl; call dword ptr [eax + 0x52]; 
0x00147481: or byte ptr [ebp - 0x6c1a87b], cl; call dword ptr [eax + 0x53]; 
0x0013f11a: or byte ptr [ebp - 0x6c32380], cl; call dword ptr [eax + 0x56]; 
0x0002fd13: or byte ptr [ebp - 0x6c47b7d], cl; call dword ptr [eax - 1]; 
0x0002fcf5: or byte ptr [ebp - 0x6c4816d], cl; call dword ptr [edx + 0x50]; 
0x0013d51a: or byte ptr [ebp - 0x6c6987b], cl; call dword ptr [eax + 0x53]; 
0x00146faa: or byte ptr [ebp - 0x6c6987b], cl; call dword ptr [eax - 0x73]; 
0x000da7f5: or byte ptr [ebp - 0x6c6987d], cl; call dword ptr [eax + 0x56]; 
0x001221fa: or byte ptr [ebp - 0x6c6987d], cl; call dword ptr [eax - 0x73]; 
0x001221fa: or byte ptr [ebp - 0x6c6987d], cl; call dword ptr [eax - 0x73]; or ebx, 0x5a; stc; call dword ptr [eax - 0x18]; ret 0xf588; 
0x0007b555: or byte ptr [ebp - 0x6d7bf040], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00128fb3: or byte ptr [ebp - 0x74c78a40], al; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00030d4c: or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x0008cc36: or byte ptr [ebp - 0x74f28b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0008cb51: or byte ptr [ebp - 0x74f58b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00112240: or byte ptr [ebp - 0x75], ah; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0009af5c: or byte ptr [ebp - 0x76ebdbb4], cl; ret; 
0x0008d4ec: or byte ptr [ebp - 0x77], ah; adc eax, 0x78; pop ebx; ret; 
0x001a5bd9: or byte ptr [ebp - 0x77], bl; ret 0xead1; 
0x0005c0dd: or byte ptr [ebp - 0x7870f001], al; or byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x000b6e3a: or byte ptr [ebp - 0x7af0f781], cl; mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x000828f0: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000658fb: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; cmp eax, dword ptr [eax + eax]; add byte ptr [ecx], bh; ret; 
0x0007b2c0: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x00084d20: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; inc ebx; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00183f20: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebx, 0x39000000; ret; 
0x0007e6b5: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov esi, 0x39000000; ret; 
0x0007d612: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; popal; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00083420: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; ret; 
0x00083bc0: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0007b551: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; xchg edx, eax; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00128947: or byte ptr [ebp - 0x7afb8b40], al; sal byte ptr [ebp + 8], cl; ret; 
0x0017d15b: or byte ptr [ebp - 0x7ccf8b40], al; in al, dx; or byte ptr [ebp - 0x689754a], cl; call dword ptr [esi + 0x53]; 
0x0009623a: or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x96249; call dword ptr [ebx]; 
0x001807cb: or byte ptr [ebp - 0x7cfbdbbc], cl; ret; 
0x000d2d45: or byte ptr [ebp - 0x7d348], cl; call dword ptr [edi + 0x53]; 
0x000499e7: or byte ptr [ebp - 0x7d379], cl; call dword ptr [eax + 0x6a]; 
0x000d5fbc: or byte ptr [ebp - 0x7d37b], cl; call dword ptr [eax + 0x6a]; 
0x0013d058: or byte ptr [ebp - 0x7d37d], cl; call dword ptr [eax + 0x6a]; 
0x0016fa2d: or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0016fa8a: or byte ptr [ebp - 0x8b7b], cl; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x0016fbf2: or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x0017a57f: or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x0017ad35: or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x00168753: or byte ptr [ebp - 0xc1eb379], cl; call dword ptr [eax - 0x73]; 
0x0017299a: or byte ptr [ebp - 0xc45737d], cl; call dword ptr [eax - 0x73]; 
0x001708c6: or byte ptr [ebp - 0xc68037d], cl; call dword ptr [eax - 0x73]; 
0x000828f4: or byte ptr [ebp - 0xc7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0016df68: or byte ptr [ebp - 0xc92137d], cl; call dword ptr [eax - 0x73]; 
0x0014d489: or byte ptr [ebp - 0xc], dh; ret; 
0x001368d1: or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x00110ec8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x110ee0; pop ebx; ret; 
0x00110f38: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x110f50; pop ebx; ret; 
0x001112f8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x111310; pop ebx; ret; 
0x0011b238: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11b250; pop ebx; ret; 
0x0011b748: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11b760; pop ebx; ret; 
0x0011c944: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11c958; pop ebx; ret; 
0x0011cfe8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11d000; pop ebx; ret; 
0x0011d4e4: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11d4f8; pop ebx; ret; 
0x0011d984: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11d998; pop ebx; ret; 
0x0011eda8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11edc0; pop ebx; ret; 
0x0011edf8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11ee10; pop ebx; ret; 
0x00120b48: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120b60; pop ebx; ret; 
0x00127d88: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x127da0; pop ebx; ret; 
0x0012a0d4: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12a0e8; pop ebx; ret; 
0x0012b968: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12b980; pop ebx; ret; 
0x000603d8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x603f0; pop ebx; ret; 
0x0009cf74: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9cf88; pop ebx; ret; 
0x000f8308: or byte ptr [ebp - 1], ah; adc eax, 0x10; neg eax; pop ebx; ret; 
0x0016aa5a: or byte ptr [ebp - 1], dl; jbe 0x16aa6b; push edi; call dword ptr [eax + 8]; 
0x0016aa9d: or byte ptr [ebp - 1], dl; jbe 0x16aaae; push edi; call dword ptr [eax + 0x10]; 
0x0008c142: or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x001701a9: or byte ptr [ebx + 0x11770ffa], al; add eax, dword ptr [eax + edx*4 - 0x6c910]; jmp eax; 
0x00085c99: or byte ptr [ebx + 0x14], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00096047: or byte ptr [ebx + 0x1cf8c100], cl; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00090a97: or byte ptr [ebx + 0x1e08300], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00096067: or byte ptr [ebx + 0x1fe8c100], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016d847: or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0016a23b: or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x000a4297: or byte ptr [ebx + 0x237709f8], al; mov ecx, dword ptr [ebx + eax*4 - 0x71254]; add ecx, ebx; jmp ecx; 
0x0008e69a: or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x00081a93: or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0011aa4c: or byte ptr [ebx + 0x330c244c], cl; adc byte ptr [ebx], dh; dec eax; add al, 9; retf 0x940f; ret 0x540a; 
0x001282f4: or byte ptr [ebx + 0x33fffee3], al; push esi; call edi; 
0x001694a7: or byte ptr [ebx + 0x38908ec], al; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x00110cb4: or byte ptr [ebx + 0x39142444], cl; ret; 
0x000c3a2c: or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00084fa9: or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0016ee42: or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0003bfc5: or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x00093a4a: or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00168a21: or byte ptr [ebx + 0x50552048], cl; call dword ptr [ecx + 8]; 
0x001688bd: or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00170dc9: or byte ptr [ebx + 0x50572050], cl; call dword ptr [edx + 4]; 
0x0016eda2: or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x0017572c: or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0007fdb3: or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x00137326: or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x000be38c: or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000baf46: or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000a9685: or byte ptr [ebx + 0x5e5b02c0], al; pop edi; pop ebp; ret; 
0x00059e4b: or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005a9d7: or byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0008dcb7: or byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0008b5d1: or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00039963: or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0003985a: or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0008ab56: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000922fc: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0016dfba: or byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000cff05: or byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; pop ebp; ret; 
0x00156c71: or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0005949a: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00139edf: or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0005ac4e: or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0007fa9c: or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x0011eada: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x11eaf3; add esp, 0x1c; ret; 
0x0012dc2b: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x12dc3d; add esp, 0x1c; ret; 
0x0003d84e: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3d860; add esp, 0x1c; ret; 
0x00059ffc: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x5a017; add esp, 0x1c; ret; 
0x0013b404: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013b404: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0010299f: or byte ptr [ebx + 0x748b8134], cl; or al, 0x89; je 0x10296c; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x0016ae48: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0016ae92: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00173342: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00173541: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x001688a2: or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0017037f: or byte ptr [ebx + 0x74ff5043], cl; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0016ed5d: or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x0016a2ed: or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00182887: or byte ptr [ebx + 0x8b9004], cl; ret; 
0x000960a7: or byte ptr [ebx + 0xdff2500], cl; add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00085cd7: or byte ptr [ebx + 0xe], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000875d7: or byte ptr [ebx + 0xe], dh; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00094912: or byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00097bf3: or byte ptr [ebx + 0xf7701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008eec3: or byte ptr [ebx + 0xf7701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00097bd3: or byte ptr [ebx + 0xf7702f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016d61b: or byte ptr [ebx + 0xf770ffa], al; add eax, dword ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x0018fd52: or byte ptr [ebx + 4], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012c8f6: or byte ptr [ebx + 5], bh; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013cc8e: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0013cd2f: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [edx + esi + 0x39], cl; ret 0x1f72; 
0x000c171e: or byte ptr [ebx + ebp*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00132552: or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x0005d11d: or byte ptr [ebx + ecx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x001727d6: or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000fb785: or byte ptr [ebx - 0x14f7dbac], cl; jge 0x830fde05; ret; 
0x0016a331: or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0016a2c0: or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0003b8d6: or byte ptr [ebx - 0x22f3dbbc], cl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00121c05: or byte ptr [ebx - 0x2776ab3c], al; pop ebx; pop esi; ret; 
0x0011f556: or byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0008ae72: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x00132e34: or byte ptr [ebx - 0x367af7b8], cl; je 0x132e40; xor eax, eax; pop ebx; ret; 
0x0008b806: or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00100993: or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x0016f3e2: or byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16f3f3; sub esp, 0xc; push esi; call eax; 
0x0016aa62: or byte ptr [ebx - 0x3f7aef3c], al; je 0x16ab6b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x000f8380: or byte ptr [ebx - 0x47c7dbac], cl; mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f8520: or byte ptr [ebx - 0x47c7dbac], cl; mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00108d55: or byte ptr [ebx - 0x47fbdba4], cl; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c125: or byte ptr [ebx - 0x47fbdba4], cl; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ec935: or byte ptr [ebx - 0x47fbdba4], cl; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c3c5: or byte ptr [ebx - 0x47fbdba4], cl; jge 0x12c3ce; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126cf5: or byte ptr [ebx - 0x47fbdba4], cl; jns 0x126cfd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c0c5: or byte ptr [ebx - 0x47fbdba4], cl; mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00111ed5: or byte ptr [ebx - 0x47fbdba4], cl; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bc85: or byte ptr [ebx - 0x47fbdba4], cl; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008ea63: or byte ptr [ebx - 0x47fbdbb4], cl; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x67602fa], al; ret; 
0x00072263: or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x00076160: or byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ecx - 0x51f73]; dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x00040a77: or byte ptr [ebx - 0x50f0fb14], al; ret 0x5750; 
0x00072306: or byte ptr [ebx - 0x5577b], cl; dec dword ptr [ecx - 0x4f743]; dec dword ptr [ecx - 0x50363]; dec dword ptr [ebx - 0x51343]; dec dword ptr [ebx - 0x53763]; jmp dword ptr [ebp - 0x77]; 
0x0006b23a: or byte ptr [ebx - 0x58f63], cl; call dword ptr [edx + 0x50]; 
0x00069744: or byte ptr [ebx - 0x58f63], cl; call dword ptr [esi + 0x50]; 
0x000663b8: or byte ptr [ebx - 0x5ab4b], cl; call dword ptr [eax - 1]; 
0x000c6437: or byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x000ce9be: or byte ptr [ebx - 0x72d7dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x00154679: or byte ptr [ebx - 0x72dfdbbc], cl; or dh, 0x6e; stc; call dword ptr [eax + 0x55]; 
0x000cf282: or byte ptr [ebx - 0x72dfdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0015cb22: or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax + 0x55]; 
0x000cb0f2: or byte ptr [ebx - 0x72e3dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x00159738: or byte ptr [ebx - 0x72e7dbbc], cl; add dl, 0x6f; stc; call dword ptr [eax - 1]; 
0x0018b4d7: or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x5a; stc; call dword ptr [eax + 0x53]; 
0x0013e1ae: or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x69; stc; call dword ptr [eax + 0x6a]; 
0x001577b5: or byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [ebx + 0x6f], edi; stc; call dword ptr [eax + 0x55]; 
0x001501a2: or byte ptr [ebx - 0x72ebdbbc], cl; cwde; fsubr dword ptr [ebp - 7]; call dword ptr [ebx - 0x73]; 
0x0005913b: or byte ptr [ebx - 0x72ebdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax + 0x6a]; 
0x00157cda: or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [ebp + 0x6f], 0xf9; call dword ptr [eax + 0x55]; 
0x0015d45a: or byte ptr [ebx - 0x72efdbac], cl; xchg edx, eax; push ebx; jo 0x15d45d; call dword ptr [edx + 0x50]; 
0x0015d4fe: or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax - 1]; 
0x001665d5: or byte ptr [ebx - 0x72efdbbc], cl; sub byte ptr [edi + 0x72], 0xf9; call dword ptr [eax + 0x57]; 
0x00086caa: or byte ptr [ebx - 0x72f3dba4], cl; add dword ptr [ecx], 0x4f; stc; call dword ptr [eax - 0x75]; 
0x00092756: or byte ptr [ebx - 0x72f3dba4], cl; and dword ptr [edi + 0x39], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00143205: or byte ptr [ebx - 0x72f7dbbc], cl; adc byte ptr [ecx + 0x6a], 0xf9; call dword ptr [eax + 0x53]; 
0x0017358a: or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000f7c08: or byte ptr [ebx - 0x73], dl; sub dh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x0008e707: or byte ptr [ebx - 0x73ef7c0], cl; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0012eb4a: or byte ptr [ebx - 0x74cfdbb4], cl; push esp; and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00097c24: or byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00034483: or byte ptr [ebx - 0x74fbdbac], cl; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x00182893: or byte ptr [ebx - 0x74fbdbbc], cl; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00173f5b: or byte ptr [ebx - 0x74fbdbbc], cl; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x00122a80: or byte ptr [ebx - 0x76afdb84], cl; inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x0012ca49: or byte ptr [ebx - 0x76c7dbbc], cl; inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00159d75: or byte ptr [ebx - 0x76dbdbb4], cl; fisubr dword ptr [ecx]; ret 0xca39; 
0x000908b3: or byte ptr [ebx - 0x76efdb8c], cl; ret; 
0x000424d4: or byte ptr [ebx - 0x76f3dbac], cl; ret; 
0x0008df00: or byte ptr [ebx - 0x76fbdbac], cl; ret; 
0x00070732: or byte ptr [ebx - 0x77ccf18], al; or dword ptr [edi], ecx; xchg dword ptr [0x8bfffff2], ebp; inc edx; add al, 0x83; ret 0x8304; 
0x00170ad9: or byte ptr [ebx - 0x78f0f006], al; or eax, 0x3000001; test byte ptr [eax - 0x6c8d0], dl; jmp eax; 
0x0006f790: or byte ptr [ebx - 0x79f0a506], al; xchg byte ptr [0x4c890000], cl; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000ca285: or byte ptr [ebx - 0x7af0fe06], al; pop edx; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00122a87: or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x00178e72: or byte ptr [ebx - 0x7ccbdbac], cl; ret 0x5204; 
0x00040923: or byte ptr [ebx - 0x7ce3dbac], cl; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x000a71a1: or byte ptr [ebx - 0x7cebdb84], cl; ret 0x8301; 
0x000ed03d: or byte ptr [ebx - 0x7f72378b], cl; pop ecx; stc; call dword ptr [eax - 0x75]; 
0x00177d2d: or byte ptr [ebx - 0x8f7b], cl; inc dword ptr [ecx]; ret; 
0x0011d957: or byte ptr [ebx - 0x9afb81], cl; adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x0008b573: or byte ptr [ebx - 0xe7dbbc], cl; je 0x8b59f; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x00135fb6: or byte ptr [ebx - 1], dl; jae 0x135feb; call eax; 
0x0002db51: or byte ptr [ebx], al; cmp byte ptr [ebx + 0x390c2444], cl; ret 0x840f; 
0x000ec678: or byte ptr [ebx], al; stc; inc dword ptr [ecx]; xlatb; jmp edi; 
0x0010e310: or byte ptr [ebx], al; test byte ptr [eax - 0x6ede0], dh; jmp eax; 
0x0010d5e6: or byte ptr [ebx], al; test byte ptr [eax - 0x6ef60], dh; jmp eax; 
0x0010d407: or byte ptr [ebx], al; test byte ptr [eax - 0x6f098], dh; jmp eax; 
0x00191f8a: or byte ptr [ebx], ch; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000aab88: or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x0005ad3c: or byte ptr [ecx + 0x10890450], cl; ret; 
0x0007f342: or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x00141ae0: or byte ptr [ecx + 0x12c244c], cl; ret; 
0x000d8728: or byte ptr [ecx + 0x13c2494], cl; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000d8218: or byte ptr [ecx + 0x13c24bc], cl; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x00120e54: or byte ptr [ecx + 0x1b802], cl; add byte ptr [eax], al; ret; 
0x0003a8ca: or byte ptr [ecx + 0x1cc483d0], cl; ret 4; 
0x0015463c: or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x6913a80], cl; call dword ptr [eax + 0x55]; 
0x0003d720: or byte ptr [ecx + 0x244c8bc3], cl; add al, 0xb8; xor eax, 0x31000001; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x000fd840: or byte ptr [ecx + 0x293c244c], cl; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x001283b4: or byte ptr [ecx + 0x30ffd055], cl; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000a48d7: or byte ptr [ecx + 0x43891053], cl; add al, 0x5b; pop esi; pop edi; ret; 
0x000be3c9: or byte ptr [ecx + 0x448b0350], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000baf76: or byte ptr [ecx + 0x448b0350], cl; and al, 8; pop esi; ret; 
0x00084132: or byte ptr [ecx + 0x4508910], cl; pop ebx; pop esi; ret; 
0x00084383: or byte ptr [ecx + 0x4538913], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008c1f1: or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x0008c152: or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x000871cd: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x00172f94: or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0007f33c: or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0006f6e1: or byte ptr [ecx + 0x5af983d7], cl; jbe 0x705e3; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000a936c: or byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x00033d31: or byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000cfef7: or byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x00151a96: or byte ptr [ecx + 0x6e], 0xf9; call dword ptr [eax - 0x18]; 
0x0007f30e: or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x001694aa: or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x00092ff8: or byte ptr [ecx + 0x8beeb], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b127d: or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xb10e1; pop ebx; ret; 
0x000b129f: or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xb10e1; pop ebx; ret; 
0x00118227: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00040040: or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0005a169: or byte ptr [ecx + 0xcc483d0], cl; ret; 
0x000b12dd: or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xb10e1; pop ebx; ret; 
0x0013d3d2: or byte ptr [ecx + 0xe1], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x2ec3; 
0x000913b0: or byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005ddb5: or byte ptr [ecx + 0xf], al; xchg esp, eax; ret 0x6a52; 
0x000e244f: or byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c424: or byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x000ddfa9: or byte ptr [ecx + ecx*4], al; inc esi; adc cl, ch; ret 0xffed; 
0x000eda0f: or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x00038986: or byte ptr [ecx + edx - 0x7d], dh; ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00155363: or byte ptr [ecx + esi*8], 0xf1; call dword ptr [eax - 1]; 
0x0003b853: or byte ptr [ecx - 0x100001], bh; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x001523c1: or byte ptr [ecx - 0x16fbdbbc], cl; adc eax, 0x2efffff6; lea esi, [esi]; xor eax, eax; ret; 
0x000f3d8b: or byte ptr [ecx - 0x16fbdbbc], cl; cmp edi, dword ptr [edi]; sti; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000f12eb: or byte ptr [ecx - 0x16fbdbbc], cl; fld xword ptr [ecx - 5]; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000f4b6b: or byte ptr [ecx - 0x16fbdbbc], cl; pop ebx; xor ebx, edi; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000f051b: or byte ptr [ecx - 0x16fbdbbc], cl; stosd dword ptr es:[edi], eax; ja 0xf051f; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00037ea5: or byte ptr [ecx - 0x1cf6b], cl; call dword ptr [eax - 1]; 
0x000b67cc: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x00080dcc: or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00137341: or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0008eb70: or byte ptr [ecx - 0x3776efbe], cl; ret; 
0x000843b7: or byte ptr [ecx - 0x3b7cf3b0], cl; add al, 0x5b; pop esi; ret; 
0x000a4709: or byte ptr [ecx - 0x3e05fe08], cl; clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x0008eb8b: or byte ptr [ecx - 0x3fceefb0], cl; ret; 
0x0008e9b7: or byte ptr [ecx - 0x3fcef3b0], cl; ret; 
0x001097d7: or byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x0010936d: or byte ptr [ecx - 0x3fcefbbd], cl; pop ebx; pop esi; pop edi; ret; 
0x00106773: or byte ptr [ecx - 0x3ff001e], al; dec dword ptr [ecx]; retf 0x5489; ret; 
0x0016d647: or byte ptr [ecx - 0x47a4f3ad], cl; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0007163f: or byte ptr [ecx - 0x4f37b], cl; dec dword ptr [ecx - 0x4eb4b]; dec dword ptr [ecx - 0x4ff63]; dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x00039e9d: or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x00068acc: or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0006ae6a: or byte ptr [ecx - 0x58b73], cl; call dword ptr [eax - 1]; 
0x000697be: or byte ptr [ecx - 0x5eb63], cl; call dword ptr [eax - 1]; 
0x0003fe07: or byte ptr [ecx - 0x7235c622], cl; pop edx; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x0003f472: or byte ptr [ecx - 0x72e3dbbc], cl; test esp, ebx; cmp al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00137297: or byte ptr [ecx - 0x74e67404], cl; jno 0x1372a3; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00133fb4: or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x0016e148: or byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x000bd81d: or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b666c: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0018b2b0: or byte ptr [ecx - 0x7816a428], cl; int 0xf8; jmp dword ptr [esi - 0x70]; 
0x00166f4c: or byte ptr [ecx - 0x7cfbdbbc], cl; in al, dx; or byte ptr [ebp - 0x68d907d], cl; call dword ptr [eax + 0x55]; 
0x0013cdb3: or byte ptr [ecx - 0x7ff7db84], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x00032e05: or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x0017ad81: or byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x00175606: or byte ptr [ecx - 0xfbdbac], cl; and byte ptr [ebp - 0x17a8ff8a], cl; call esi; 
0x0016adf6: or byte ptr [ecx - 0xfbdbac], cl; and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x00175ca6: or byte ptr [ecx - 0xfbdbac], cl; pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000a4824: or byte ptr [ecx - 1], dl; jae 0xa484d; call eax; 
0x0003eb22: or byte ptr [ecx - 1], dl; je 0x3eb4b; dec esp; call eax; 
0x001743b5: or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x000e4e48: or byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e4d30: or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000c09f2: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c0a02: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c0a12: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c0a22: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c0a32: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c0a42: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c0a52: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c0a62: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c0a72: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c0a82: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c0a92: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c09e2: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0012fc7c: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x00120f21: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0012141d: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x121429; ret; 
0x001096d6: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00181f3e: or byte ptr [ecx], al; add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x001097ec: or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0014cb7f: or byte ptr [ecx], al; je 0x14cba6; add esp, 0xc; ret; 
0x001763c7: or byte ptr [ecx], al; jle 0x1763df; pop ebx; pop esi; pop edi; ret; 
0x0009eb85: or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0007f4e0: or byte ptr [ecx], al; ret 0x3e89; 
0x00039fda: or byte ptr [ecx], al; ret 0x8952; 
0x0008b900: or byte ptr [ecx], al; ret 0xc801; 
0x0004a66f: or byte ptr [ecx], al; ret 0xd389; 
0x000a75ca: or byte ptr [ecx], al; ret 0xfe83; 
0x00117a22: or byte ptr [ecx], al; ret; 
0x00037e23: or byte ptr [ecx], al; ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x000a19b2: or byte ptr [ecx], al; ror byte ptr [edi], 0x84; ret 4; 
0x00073de8: or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x0008e992: or byte ptr [ecx], al; xor eax, eax; ret; 
0x00098f4b: or byte ptr [ecx], bh; dec edx; adc al, 0x74; pop es; ret; 
0x00092373: or byte ptr [ecx], bh; inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x0003352d: or byte ptr [ecx], bh; ret 0x1474; 
0x000fd3af: or byte ptr [ecx], bh; ret 0x1c7e; 
0x00195c3c: or byte ptr [ecx], bh; ret 0x1d72; 
0x000fd3a5: or byte ptr [ecx], bh; ret 0x267e; 
0x00191a0c: or byte ptr [ecx], bh; ret 0x2d72; 
0x0017a02b: or byte ptr [ecx], bh; ret 0x4075; 
0x0014bb72: or byte ptr [ecx], bh; ret 0x460f; 
0x00101474: or byte ptr [ecx], bh; ret 0x474; 
0x000ef1be: or byte ptr [ecx], bh; ret 0x830f; 
0x0006e0d6: or byte ptr [ecx], bh; ret 0x840f; 
0x0002d678: or byte ptr [ecx], bh; ret 0x850f; 
0x00086221: or byte ptr [ecx], bh; ret 0x8c74; 
0x0015470b: or byte ptr [ecx], bh; ret 0xc074; 
0x00184e5a: or byte ptr [ecx], bh; ret 0xd889; 
0x000aa894: or byte ptr [ecx], bh; ret 0xe775; 
0x0009fa88: or byte ptr [ecx], bh; ret 0xf375; 
0x000fc6f2: or byte ptr [ecx], bh; ret 0xf475; 
0x0005504a: or byte ptr [ecx], bh; ret; 
0x00059874: or byte ptr [ecx], bh; retf 0x820f; mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x0016d399: or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00085913: or byte ptr [ecx], bh; ror dword ptr [ebx + 0x190c2454], cl; ret 0x157d; 
0x000a5c99: or byte ptr [ecx], ch; ret 0x348d; 
0x00088627: or byte ptr [ecx], ch; ret 0xfa39; 
0x000a02d2: or byte ptr [ecx], ch; ret 0xfa83; 
0x00028b97: or byte ptr [ecx], ch; ret; 
0x00072eaf: or byte ptr [ecx], ch; ror dword ptr [ecx - 0x50363], cl; dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x0003f2c0: or byte ptr [ecx], cl; ret 0xd389; 
0x0011bdb4: or byte ptr [ecx], dh; leave; call dword ptr gs:[0x10]; 
0x000e4924: or byte ptr [ecx], dh; leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008eb6a: or byte ptr [ecx], dh; leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0003e7a1: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0016beee: or byte ptr [ecx], dh; ret 0xc889; 
0x00093041: or byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x000a971e: or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97de: or byte ptr [edi + 0x2a], dh; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x000b50f5: or byte ptr [edi + 0x5b], bl; ret; 
0x000b72cd: or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d6c97: or byte ptr [edi + 0x5e], bl; ret; 
0x0002561f: or byte ptr [edi + 0x75], dh; mov ecx, dword ptr [esp + 4]; mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x001824a9: or byte ptr [edi + 0x77], 0xf9; call dword ptr [eax - 0x18]; 
0x00194420: or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00024f6b: or byte ptr [edi + edi*2 - 7], 0xff; ret; 
0x000c3577: or byte ptr [edi + edi*8 - 0x17], 0xff; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x0019285a: or byte ptr [edi - 0x18], bl; mov eax, 0x81ffff04; ret; 
0x00058e74: or byte ptr [edi - 0x42740003], ch; mov eax, 0x8dffffc9; xchg dword ptr [eax - 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x001728b1: or byte ptr [edi - 0x769b0000], 2; ret; 
0x0013d3e1: or byte ptr [edi], 0x44; ret 0x2ec3; 
0x0013d0ff: or byte ptr [edi], 0x45; ret 0x8dc3; 
0x00109e78: or byte ptr [edi], 0x85; cmpsd dword ptr [esi], dword ptr es:[edi]; add eax, dword ptr [eax]; add dh, dh; ret 0xf02; 
0x00080c3f: or byte ptr [edi], 0x85; ret 0; 
0x00085020: or byte ptr [edi], 0x95; ret 0xc283; 
0x000e9bb3: or byte ptr [edi], 0xa3; ret 0x830f; 
0x00111bc4: or byte ptr [edi], 0xa3; ret 0xd873; 
0x000420e1: or byte ptr [edi], 0xbd; leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x00027e95: or byte ptr [edi], cl; mov bh, 0x85; cmp al, 0x80; stc; jmp dword ptr [esi - 0x77]; 
0x0008727e: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; neg eax; ret; 
0x0016a908: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; ret; 
0x00124377: or byte ptr [edi], cl; mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x001998bb: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x00198102: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x00130fff: or byte ptr [edi], cl; mov dword ptr [0xc2920fd8], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000c9c3d: or byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c3a32: or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000fd94c: or byte ptr [edi], cl; sahf; ret 0x5420; 
0x001a37da: or byte ptr [edi], cl; sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0019f038: or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0007060c: or byte ptr [edi], cl; test dl, ah; or dword ptr [eax], eax; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x000b6e3d: or byte ptr [edi], cl; test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000d6b7a: or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00080584: or byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000a255b: or byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0012a5a5: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012a564: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00156394: or byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0011eca3: or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0017f865: or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x0017f8ec: or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x000f4cfe: or byte ptr [edx + 0x50], dl; call dword ptr [ecx + 0x20]; 
0x0013468c: or byte ptr [edx + 0x66], 0xf9; call dword ptr [eax - 0x75]; 
0x0016e275: or byte ptr [edx + 0x6a], dl; add eax, 0x34838d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x000be358: or byte ptr [edx + 0x70880276], cl; add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x0008f520: or byte ptr [edx + 0x7fffffff], bh; xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008f842: or byte ptr [edx + 1], bh; xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00147e17: or byte ptr [edx + 1], ch; push eax; call 0x147d20; add esp, 0x18; pop ebx; ret; 
0x0018fe0a: or byte ptr [edx + 4], cl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a9bce: or byte ptr [edx + ebp*2 - 0x7e090019], 0x9c; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x947936e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00115ad7: or byte ptr [edx - 0x18], dl; ret 0xf0d6; 
0x00080fe4: or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008750c: or byte ptr [edx - 1], ch; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x001176a9: or byte ptr [edx - 1], dl; jbe 0x1176ba; call dword ptr [esi + 0x24]; 
0x001186fc: or byte ptr [edx - 1], dl; jbe 0x11870d; call dword ptr [esi + 0x24]; 
0x0011979c: or byte ptr [edx - 1], dl; jbe 0x1197ad; call dword ptr [esi + 0x24]; 
0x0016e141: or byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0010a724: or byte ptr [edx], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + edx*4 - 0x6f390]; add eax, ebx; jmp eax; 
0x000a3b74: or byte ptr [edx], al; stc; dec dword ptr [ebp - 0x657977d]; call dword ptr [eax - 0x73]; 
0x000bfab4: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0016a8eb: or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003e647: or byte ptr [edx], ch; push edx; call eax; 
0x00079f0a: or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x000985f9: or byte ptr [edx], cl; add byte ptr [esi - 0x70], ah; nop; xor eax, eax; ret; 
0x00131f94: or byte ptr [edx], dl; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0008a1c6: or byte ptr [esi + 0x53], dl; call dword ptr [edi + 0x18]; 
0x000e4b16: or byte ptr [esi + 0x53], dl; call eax; 
0x000408e1: or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x001756bf: or byte ptr [esi + 0x5f], bl; jmp eax; 
0x000ba8f2: or byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000baff6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be40c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf96: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bafb7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7b9b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b7e8c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b657b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b684c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b33d6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b3516: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000aeff6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000af136: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b3306: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b3576: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000aef46: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b1caf: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000af196: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b33f7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b3537: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000af017: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000af157: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000ba827: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000bd9ea: or byte ptr [esi + 0xf], ah; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x00138803: or byte ptr [esi + ebx*2], 0xf5; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00140e9e: or byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0016a637: or byte ptr [esi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x00115a47: or byte ptr [esi - 0x77], ah; inc edx; inc edx; xor eax, eax; ret; 
0x00114067: or byte ptr [esi - 0x77], ah; inc edx; xor eax, eax; ret; 
0x0018f91a: or byte ptr [esi - 0x77], ah; or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0014824c: or byte ptr [esi - 0x77], ah; push ecx; or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x001a587d: or byte ptr [esi - 0x7d], bl; ret 0x830c; 
0x000a4731: or byte ptr [esi - 1], dl; jae 0xa475a; call eax; 
0x00178f74: or byte ptr [esi - 7], dh; call dword ptr [eax - 0x18]; 
0x00109ee8: or byte ptr [esp + ecx - 7], 0xff; add ecx, edx; jmp ecx; 
0x000b6ec6: or byte ptr ss:[eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00092f8d: or ch, ah; sbb al, byte ptr [eax]; add byte ptr [ebp + 0xc], dh; xor eax, eax; pop ebx; ret; 
0x0003ba8e: or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x0014d010: or ch, byte ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x0003d964: or ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; call 0x50a00; add esp, 0x1c; ret; 
0x000d4b84: or cl, 0xff; dec dword ptr [ebx - 0x365773]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x0008e70a: or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x000b6c21: or cl, al; or al, 0; add ecx, 0x10f09b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0003bbe2: or cl, bl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0008cb55: or cl, byte ptr [ebx + 0x54890450]; and al, 4; jmp dword ptr [eax]; 
0x0018f805: or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000be21f: or cl, byte ptr [ebx + 0xc]; add byte ptr [ecx + 0x107e51c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00135cd6: or cl, byte ptr [ebx + 0xfed852e]; test byte ptr [edi - 0x74ffffff], al; push esi; or al, 0xf6; ret 0xf04; 
0x00084ef3: or cl, byte ptr [ebx - 0x2dcef3bf]; test eax, eax; setne dl; mov eax, edx; ret; 
0x001917a5: or cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00033cd5: or cl, byte ptr [ecx + 0x5f5e5bd8]; ret; 
0x0007c4a5: or cl, byte ptr [ecx + 0x5f5e5bf8]; ret; 
0x000639a0: or cl, byte ptr [ecx + 0xf542454]; xchg esp, eax; ret 0x748b; 
0x00100991: or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x000425ea: or cl, byte ptr [edi]; mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0003a207: or cl, byte ptr [edi]; mov dh, 0x44; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x00042549: or cl, byte ptr [edi]; mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00094df0: or cl, byte ptr [edi]; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00073b44: or cl, byte ptr [edi]; test byte ptr [0x83000001], al; ret 0x8904; 
0x000b6e85: or cl, byte ptr [edi]; test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b84c8: or cl, byte ptr [edi]; test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b0e87: or cl, byte ptr [edi]; test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0013df85: or cl, byte ptr [edi]; test dword ptr [esi - 0x17fffffa], edi; dec edi; stc; cli; jmp dword ptr [esi - 0x3f]; 
0x00158318: or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x00063c3a: or cl, byte ptr [edi]; xchg esp, eax; ret 0xc629; 
0x000a1e46: or cl, ch; imul edi, ecx, 0x878dffff; call dword ptr [edx - 7]; 
0x000e2931: or cl, ch; ret 0xfffa; 
0x00083803: or cl, ch; ret; 
0x000832a8: or cl, ch; sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x000c065b: or cl, cl; jne 0xc0661; xor eax, eax; ret; 
0x00098a89: or cl, dl; call 0xc03a8d19; ret; 
0x0008e6ca: or cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015467f: or dh, 0x6e; stc; call dword ptr [eax + 0x55]; 
0x0011df7c: or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011de88: or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012ece2: or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0011223e: or dh, 8; mov ebp, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000c3362: or dh, bh; dec dword ptr [ebp - 0x6536f70]; call dword ptr [edx - 0x73]; 
0x000c3338: or dh, bh; dec dword ptr [ecx - 0x769fdbac]; ret 0x52e9; 
0x0008e983: or dh, bh; xor eax, eax; ret; 
0x001a0ff5: or dh, byte ptr [eax + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a1001; neg eax; ret; 
0x0007fe75: or dh, byte ptr [eax + edx + 0x39]; sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008ce2a: or dh, byte ptr [ebp + 0x43]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000bfab6: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0009998c: or dh, byte ptr [ebp + 9]; xor eax, eax; pop ebx; ret; 
0x0009994e: or dh, byte ptr [ebp - 0xf]; xor eax, eax; pop ebx; ret; 
0x000f9fc7: or dh, byte ptr [ecx + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017d7fd: or dh, byte ptr [ecx]; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00042927: or dh, byte ptr [ecx]; sal bl, 0xf; mov esp, 0x74c985c1; push es; pop ebx; ret; 
0x001a48e2: or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x001a38c2: or dh, byte ptr [edx + 0x4b]; lea eax, [edi + 9]; pop edi; ret; 
0x00097e87: or dh, byte ptr [edx + eax*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x001a0c83: or dh, byte ptr [edx + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a0c90; neg eax; ret; 
0x000674a8: or dh, byte ptr [edx + ebx*8 - 0x7d]; mov ebp, 0xfffffa6c; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0014baf3: or dh, byte ptr [edx + edx + 0x31]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0008ca03: or dh, byte ptr [edx + edx - 0x7d]; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00073acf: or dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x00097f7b: or dh, byte ptr [esi + ecx*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x000595b1: or dh, byte ptr [esp + ebp*2 - 0x7d]; call dword ptr [eax]; 
0x001583d5: or dh, byte ptr [esp + edx*8 - 0x7d]; ret 0x8014; 
0x000d030d: or dh, dh; ret 0xf04; 
0x0009f08b: or dh, dh; ret 0xf0f; 
0x000a13a3: or dh, dh; ret; 
0x00178f34: or dl, 0xf9; call dword ptr [eax - 0x73]; 
0x0008383d: or dl, bh; call dword ptr [edi + 0x56]; 
0x0009b458: or dl, byte ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x00174e21: or dl, cl; stc; call dword ptr [eax - 0x73]; 
0x000e856a: or dword ptr [0x244c8b00], eax; or byte ptr [ebp - 0x650b77f], cl; call dword ptr [eax - 0x73]; 
0x00100a2e: or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x000c09a2: or dword ptr [eax + 0x3c90], 1; xor eax, eax; pop ebx; ret; 
0x00089ed0: or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x89ed0; ret; 
0x0015347d: or dword ptr [eax + 0x500000a0], 0xffffff8d; adc dword ptr [eax + 0x500000a0], -0x73; sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x0009fe73: or dword ptr [eax + 0x52], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x000ec5af: or dword ptr [eax + 0x57], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0013e84b: or dword ptr [eax + 0x69], 0xfffffff9; dec dword ptr [ebp - 0x67bcb75]; call dword ptr [eax - 0x77]; 
0x0012f41a: or dword ptr [eax + 0x92], edi; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0008e990: or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0008eb88: or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0011eb45: or dword ptr [eax + eax], edx; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011eb72: or dword ptr [eax + eax], edx; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011dbf5: or dword ptr [eax + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0002784b: or dword ptr [eax + esi*8], 0xffffffde; call dword ptr [eax - 0x73]; 
0x0016121c: or dword ptr [eax - 0x5c], 0; add byte ptr [eax - 0x18], dl; pop ecx; ret; 
0x00060ad3: or dword ptr [eax - 0x7af0ffc1], eax; ret; 
0x0018e494: or dword ptr [eax - 1], 0xf8c381ff; pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00082a6d: or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x000921de: or dword ptr [eax - 7], edx; call dword ptr [eax - 0x18]; 
0x000961d1: or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000961a8: or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x000e8aab: or dword ptr [eax], 0xffffffaf; stc; call dword ptr [eax - 0x18]; 
0x00128df3: or dword ptr [eax], 0xffffffb5; stc; call dword ptr [eax - 0x18]; 
0x0015a388: or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x0005b83a: or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x0009f2f2: or dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x1988f37a], cl; call dword ptr [eax + 0x57]; 
0x0016a128: or dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0012d673: or dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000257b9: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00082f39: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0011b22d: or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00109382: or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000c86e4: or dword ptr [eax], eax; add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x6eb; 
0x0009f2fc: or dword ptr [eax], eax; add byte ptr [ebp - 0x1988f37a], cl; call dword ptr [eax + 0x57]; 
0x000a1ecd: or dword ptr [eax], eax; add byte ptr [ebx + 0x3910246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x0006cef8: or dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00122c92: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; pop si; stc; call dword ptr [eax + 0x55]; 
0x0008d883: or dword ptr [eax], eax; add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x6072; 
0x0013665f: or dword ptr [eax], eax; add byte ptr [ecx - 0x11b43], cl; dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x00070610: or dword ptr [eax], eax; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x000a3162: or dword ptr [eax], eax; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0006db93: or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0008d889: or dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x6072; 
0x0009fa90: or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000b6d5b: or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001a7e39: or dword ptr [eax], eax; add byte ptr [esi - 0x7f], ah; stc; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x9584; 
0x00088305: or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00025fa3: or dword ptr [eax], eax; lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x001372ff: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00024fdb: or dword ptr [ebp + 0x33], esp; add eax, 0x18; jmp eax; 
0x0013a8ee: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013a9bf: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e81a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00025068: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x00151abf: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; ret; 
0x00151741: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x0013732e: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push esi; call eax; 
0x0003ebe1: or dword ptr [ebp + 0x33], esp; add eax, 0x18; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3ecb0; call eax; 
0x0005d16c: or dword ptr [ebp + 0x41], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0005f914: or dword ptr [ebp + 0x42], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x001577c3: or dword ptr [ebp - 0x3b7c000a], ecx; adc byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or byte ptr [ebp - 0x6aec979], cl; call dword ptr [eax + 0x53]; 
0x000b6e5d: or dword ptr [ebp - 0x7af0f681], ecx; cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b0e62: or dword ptr [ebp - 0x7af0f6b6], ecx; je 0xb0e6c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0011fa6c: or dword ptr [ebx + 0x5a], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0004015e: or dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00172f16: or dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00156cdb: or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x00096296: or dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x001097bf: or dword ptr [ebx + 0x66042444], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0019bf57: or dword ptr [ebx + ebp*4 - 0x37d60009], 0x5b; ret; 
0x0019e764: or dword ptr [ebx + ebp*4 - 0x37d60009], 0x5d; pop ebx; ret; 
0x00080228: or dword ptr [ebx + edx*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000a4034: or dword ptr [ebx - 0x2776c73c], eax; pop ebx; ret 4; 
0x00054a58: or dword ptr [ebx - 0x2776d73c], eax; pop ebx; ret 4; 
0x00060fc6: or dword ptr [ebx - 0x2776f73c], eax; pop ebx; ret; 
0x000d704d: or dword ptr [ebx - 0x3f7afb3e], eax; jne 0xd7048; xor edx, edx; mov eax, edx; ret; 
0x0014282f: or dword ptr [ebx - 0x72dfdba4], ecx; cmp dword ptr [edi], 0x6a; stc; call dword ptr [eax + 0x51]; 
0x001029a2: or dword ptr [ebx - 0x76f30d8c], 0x830cc274; rol byte ptr [ecx], 0x39; ret; 
0x0005c560: or dword ptr [ebx - 0x7bf09908], eax; ret; 
0x0012262e: or dword ptr [ebx - 0x7c76fb40], eax; mov al, byte ptr [0x83000045]; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0016df5c: or dword ptr [ebx - 0xa9f314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc92137d], cl; call dword ptr [eax - 0x73]; 
0x001708ba: or dword ptr [ebx - 0xaaf314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc68037d], cl; call dword ptr [eax - 0x73]; 
0x00152163: or dword ptr [ebx], 0x20; mov dword ptr gs:[edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00122e05: or dword ptr [ebx], 0x61; stc; call dword ptr [edx + 0x52]; 
0x001343a8: or dword ptr [ebx], 0x66; stc; call dword ptr [eax + 0x56]; 
0x00120137: or dword ptr [ebx], 0x66; stc; call dword ptr [eax + 0x6a]; 
0x00093a73: or dword ptr [ebx], eax; cli; dec dword ptr [ebp - 0x682937f]; call dword ptr [eax - 0x73]; 
0x0003c60a: or dword ptr [ecx + 0x114c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0003c0f9: or dword ptr [ecx + 0x124c4], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x00024b9d: or dword ptr [ecx + 0x1a5090], ecx; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c04dd: or dword ptr [ecx + 0x42], eax; test al, al; jne 0xc04d8; xor eax, eax; ret; 
0x0013cffa: or dword ptr [ecx + 0x4e0c1d8], ecx; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0003c79e: or dword ptr [ecx + 0x94c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0008ea78: or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x00120205: or dword ptr [ecx + edx*8], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001472ac: or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [eax + 0xf10244c], 0x94; ret 0xa3c; 
0x0014747c: or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6c1a87b], cl; call dword ptr [eax + 0x53]; 
0x00182549: or dword ptr [ecx - 0x76dbdbbc], ecx; ret; 
0x0015139d: or dword ptr [ecx - 0x7cfb6cbc], ecx; ret 0x8301; 
0x000e4b80: or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e24e3: or dword ptr [ecx], eax; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x1c]; add eax, dword ptr [eax + ecx*4 - 0x70488]; jmp eax; 
0x00137146: or dword ptr [ecx], edi; dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000a49f4: or dword ptr [ecx], edi; ret 0x3774; 
0x0017ee64: or dword ptr [ecx], edi; ret 0x430f; 
0x0017abef: or dword ptr [ecx], edi; ret; 
0x00168706: or dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000a429a: or dword ptr [edi + 0x23], esi; mov ecx, dword ptr [ebx + eax*4 - 0x71254]; add ecx, ebx; jmp ecx; 
0x000b89b0: or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0015f7d2: or dword ptr [edi + 0x71], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0015f948: or dword ptr [edi + 0x71], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00181f37: or dword ptr [edi + 0xf], esi; mov eax, edx; mov edx, dword ptr [ecx + 0x108]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x001944b0: or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0003edfd: or dword ptr [edi + edi], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00127754: or dword ptr [edi - 7], ecx; call dword ptr [eax + 0x6a]; 
0x0013a1b8: or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x0014d190: or dword ptr [edi], ecx; lahf; ret; 
0x00106341: or dword ptr [edi], ecx; mov dh, 0xc; or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x567e; 
0x000423d7: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; add eax, 1; ret; 
0x000427f2: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042752: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x000b6e60: or dword ptr [edi], ecx; test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000b0e65: or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x00070738: or dword ptr [edi], ecx; xchg dword ptr [0x8bfffff2], ebp; inc edx; add al, 0x83; ret 0x8304; 
0x000dd859: or dword ptr [edi], ecx; xchg dword ptr [eax - 0x7c00000a], edx; ret; 
0x000638ba: or dword ptr [edi], ecx; xchg dword ptr [edx - 0x76000008], esi; ret 0xc083; 
0x00038991: or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x001309cf: or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0008f780: or dword ptr [edx + 0x24], 2; xor eax, eax; pop ebx; pop edi; ret; 
0x0012ec0d: or dword ptr [edx + 0x31570010], eax; call dword ptr [esi + 0x53]; 
0x001a48d2: or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x001a38b2: or dword ptr [edx + 0x5b], esi; lea eax, [edi + 8]; pop edi; ret; 
0x00122ba6: or dword ptr [edx + 0x5c], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x0008eb6d: or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00182d8c: or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0014e8ce: or dword ptr [edx + eax*8], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0003cbb4: or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00146d71: or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x00142412: or dword ptr [edx - 7], ebp; call dword ptr [eax - 0x18]; 
0x00090d09: or dword ptr [edx], 0x247c8b00; add al, 0x8d; xchg eax, eax; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x00129c83: or dword ptr [esi + 0x5b], ebx; jl 0x24ef0; ret; 
0x000bf063: or dword ptr [esi + 0xf], esp; xlatb; ret 0xc085; 
0x001a3b43: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bf0d3: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x001a9ae4: or dword ptr [esi - 8], 0xffffffff; inc dword ptr [ebp - 0x7b7af02e]; add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0007ab68: or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x0008bda5: or dword ptr [esi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x0009ab44: or dword ptr [esi], 0xcdc78100; ret 0x19; 
0x0008b5cf: or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ddfa5: or dword ptr [esp + 0x58], 0x46890408; adc cl, ch; ret 0xffed; 
0x001716e3: or dword ptr [esp + ebp*8], esi; call dword ptr [eax - 0x73]; 
0x0002871a: or dword ptr [esp + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x0002865c: or dword ptr [esp + edi*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000254a8: or eax, 0x14; jne 0x254b3; add esp, 0x1c; ret; 
0x000d8f19: or eax, 0x14; jne 0xd8f25; add esp, 0x28; pop ebx; ret; 
0x000e5e4d: or eax, 0x14; mov dword ptr [esp + 0x13c], ecx; mov ecx, dword ptr [esp + 0x164]; call dword ptr gs:[0x10]; 
0x000b0ed9: or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000960ac: or eax, 0x2890f00; xor eax, eax; ret; 
0x00170adf: or eax, 0x3000001; test byte ptr [eax - 0x6c8d0], dl; jmp eax; 
0x0018c305: or eax, 0x300047e; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000be1e9: or eax, 0x300107e; or al, 0x91; jmp ecx; 
0x00098062: or eax, 0x3af48289; add byte ptr [eax], al; xor eax, eax; ret; 
0x000a3e68: or eax, 0x402448b; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x001a4902: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x00185472: or eax, 0x424548b; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001a38e2: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x0006f797: or eax, 0x4c890000; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0016ff12: or eax, 0x50fff966; push 0; call 0x785b0; add esp, 0x18; pop ebx; ret; 
0x000dcafa: or eax, 0x5b04c483; pop esi; ret; 
0x00138662: or eax, 0x5b08c483; ret; 
0x00077caa: or eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x0011f3a1: or eax, 0x5b54c483; pop esi; ret; 
0x0012e062: or eax, 0x5d5f5e5b; ret; 
0x00182fa2: or eax, 0x5e5bf889; pop edi; ret; 
0x00151d38: or eax, 0x5e; add byte ptr [eax], al; add bh, al; cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x0011b84a: or eax, 0x5ed0895b; pop edi; ret; 
0x000b8c31: or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x00111dda: or eax, 0x771bf883; cmp al, 0xba; add dword ptr [ecx], 0xa30f0800; ret 0x920f; 
0x000b7538: or eax, 0x77f0ff3; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000be6cb: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb208: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0016f308: or eax, 0x8100013a; ret; 
0x00089508: or eax, 0x81000f98; ret; 
0x0007ad08: or eax, 0x81001080; ret; 
0x000b6ee7: or eax, 0x812850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a0b08: or eax, 0x81fffe22; ret; 
0x0019c108: or eax, 0x81fffe6c; ret; 
0x0010d5e2: or eax, 0x824448b; add eax, dword ptr [eax + esi*4 - 0x6ef60]; jmp eax; 
0x0010d403: or eax, 0x824448b; add eax, dword ptr [eax + esi*4 - 0x6f098]; jmp eax; 
0x000bb211: or eax, 0x824448b; pop esi; ret; 
0x000de690: or eax, 0x8302b60f; ret; 
0x000673e3: or eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x000a3246: or eax, 0x878d0000; jnp 0xa329e; stc; call dword ptr [eax - 0x73]; 
0x000619ac: or eax, 0x8901e683; ret; 
0x0008cc3a: or eax, 0x8904508b; push esp; and al, 4; jmp dword ptr [eax]; 
0x000b855a: or eax, 0x89f850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001150cf: or eax, 0x89fffff1; ret; 
0x0012e049: or eax, 0x8b000000; dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00168df4: or eax, 0x8b0cec83; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x001946f0: or eax, 0x8b1c035f; jmp ebx; 
0x000a2a0d: or eax, 0x8d500000; xchg dword ptr [eax - 0x5b], esi; stc; call dword ptr [eax - 0x18]; 
0x000a2a93: or eax, 0x8d500000; xchg eax, ebx; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000a8dbb: or eax, 0x8dfffffe; nop; insb byte ptr es:[edi], dx; stosb byte ptr es:[edi], al; stc; call dword ptr [edx - 0x73]; 
0x0004200d: or eax, 0xb801e983; add al, byte ptr [eax]; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x0005e693: or eax, 0xb8838d00; mov edi, ecx; call dword ptr [eax - 0x73]; 
0x0017b2c2: or eax, 0xb8; add byte ptr [edi], cl; inc esp; ret; 
0x000f2386: or eax, 0xbf850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0005ab37: or eax, 0xc0868d00; mov ecx, edi; call dword ptr [eax - 0x73]; 
0x000be6d4: or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00191f85: or eax, 0xc381ffff; or byte ptr [ebx], ch; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008e56a: or eax, 0xc483c031; add al, 0x5b; pop esi; ret; 
0x000987ba: or eax, 0xc6b83f0; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x001371ea: or eax, 0xc9850a8b; je 0x137200; ret; 
0x000b1c4b: or eax, 0xcd840f00; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000f5bf6: or eax, 0xcf850f02; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0010a8f1: or eax, 0xd801fff9; jmp eax; 
0x000a7755: or eax, 0xe8555000; ret 0xf7b8; 
0x00174827: or eax, 0xe8ffffff; mov al, 0x46; cld; call dword ptr [eax - 0x73]; 
0x0017bf43: or eax, 0xec830000; or byte ptr [ebp - 0x6895745], cl; call dword ptr [edi + 0x56]; 
0x0017c77f: or eax, 0xec830000; or byte ptr [ebp - 0x689574d], cl; call dword ptr [esi + 0x57]; 
0x000b0ed6: or eax, 0xf0d4a8d; test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b8557: or eax, 0xf0d7f8d; test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000b6ee4: or eax, 0xf0d7f8d; test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00092462: or eax, 0xf704c483; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00096dfd: or eax, 0xff087b81; leave; lcall 1, 0x3d870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00097080: or eax, 0xff087e81; leave; lcall 0, 0xca870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x0003b4d4: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0002fe5b: or eax, 0xffffff82; stc; call dword ptr [eax - 0x73]; 
0x0015226b: or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0005f72c: or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000e7b7e: or eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00099961: or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0012de7a: or eax, dword ptr [eax]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0016a142: or eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x00122eb7: or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d017d], cl; call dword ptr [edx + 0x52]; 
0x00122d4b: or eax, dword ptr [eax]; add byte ptr [ebp - 0x6a0087d], cl; call dword ptr [edx + 0x52]; 
0x00076e98: or eax, dword ptr [eax]; add byte ptr [ebp - 0x6bcf87a], cl; call dword ptr [eax - 0x73]; 
0x00142a19: or eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007eb07: or eax, dword ptr [eax]; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0007647f: or eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x000703a0: or eax, dword ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x0014a68b: or eax, dword ptr [eax]; add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x00103b7c: or eax, dword ptr [eax]; add byte ptr [esi + edx], bh; je 0x1049ce; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x000419bc: or eax, dword ptr [eax]; add dword ptr [eax], eax; xor eax, eax; ret; 
0x0006074a: or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x001a4a2e: or eax, dword ptr [eax]; je 0x1a4ab2; mov eax, 0xc; pop edi; ret; 
0x00088dab: or eax, dword ptr [eax]; lea esi, [esi]; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x88dc0; ret; 
0x000c0b91: or eax, dword ptr [eax]; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00026fa0: or eax, dword ptr [ebp - 0x744c8a37]; inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg ah, ch; jg 0x26faa; call dword ptr [eax - 0x73]; 
0x0007f964: or eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00052fc4: or eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000eaa16: or eax, dword ptr [ebx - 0x397efff7]; cli; ret; 
0x0007ef90: or eax, dword ptr [ecx + 0x14cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0017daca: or eax, dword ptr [ecx + 0x1bcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c583: or eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005a28c: or eax, dword ptr [ecx + 0xbcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005a384: or eax, dword ptr [ecx + 0xccc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e5008: or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e4f62: or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003b612: or eax, ecx; ret; 
0x0003bc09: or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0013d129: or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0007ace9: or eax, edx; mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011e6c1: or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x00090ad9: or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0005445f: or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00054496: or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0012de2b: or eax, edx; mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x12de3e; add esp, 0x7c; ret; 
0x0018ba8b: or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x00109651: or eax, edx; pop ebx; ret; 
0x0012435f: or eax, edx; ret; 
0x00096224: or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x001243d8: or eax, esi; pop esi; pop edi; ret; 
0x00118d29: or ebp, 0xfffffffc; jmp dword ptr [ebp - 0x77]; 
0x0018db47: or ebp, dword ptr [ebx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010f84d: or ebp, ebx; jo 0x10f7d4; ret; 
0x00168559: or ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00122203: or ebx, 0x5a; stc; call dword ptr [eax - 0x18]; 
0x00122203: or ebx, 0x5a; stc; call dword ptr [eax - 0x18]; ret 0xf588; 
0x0010a2ca: or ebx, 0xffffffff; or edx, 0xffffffff; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0012e554: or ebx, dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00087224: or ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000b89f0: or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x001945d0: or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0010ac52: or ecx, 0x58; stc; call dword ptr [eax - 0x18]; 
0x00122b1f: or ecx, 0x5c; stc; call dword ptr [eax + 0x55]; 
0x00106345: or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x567e; 
0x000b12c2: or ecx, dword ptr [ebp - 0x7af0f4b6]; adc eax, 0x5bfffffe; ret; 
0x000a835b: or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x00027feb: or ecx, dword ptr [ebp - 0x7cffd98c]; ret; 
0x00056e20: or ecx, dword ptr [ebx - 0x36737b]; inc dword ptr [ecx]; ret 0xbe0f; 
0x00082f24: or ecx, dword ptr [ebx - 0x3f7ac7c0]; js 0x82f30; ret; 
0x0018464c: or ecx, dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0009736f: or ecx, dword ptr [ecx - 0x76f7dbac]; ret 0xca81; 
0x000c4b31: or ecx, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a4304: or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000b12c5: or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000b84f6: or ecx, dword ptr [edi]; test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b0eb5: or ecx, dword ptr [edi]; test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00106835: or ecx, edi; inc dword ptr [ecx]; retf; jmp ebx; 
0x0009619c: or edi, dword ptr [eax + 0x16]; ret; 
0x0009e698: or edi, dword ptr [eax + 8]; cmova eax, edx; mov byte ptr [ecx + 0x3c38], al; ret; 
0x00176034: or edi, dword ptr [ecx + 1]; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00120ac1: or edi, dword ptr [edi + 0x5c8bfff6]; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000f7eb9: or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x0012e988: or edi, ebp; je 0x12e9e0; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00107c41: or edi, ecx; call dword ptr [ecx + 0x6a]; 
0x001923a5: or edi, edi; inc dword ptr [ecx + 0x426e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019217e: or edi, edi; inc dword ptr [ecx + 0x4290fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148366: or edi, edi; jmp dword ptr [esi - 0x70]; 
0x000c3381: or edi, esi; dec dword ptr [ebp - 0x6536f70]; call dword ptr [edx - 0x73]; 
0x001a4fc6: or edi, esi; fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d6ca6: or edi, esi; fcomp dword ptr [edi + 0x5e]; ret; 
0x000c33a0: or edi, esi; jmp dword ptr [esi - 0x70]; 
0x0004262a: or edi, esi; sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0011ec9e: or edx, 0x30; mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x0010a2cd: or edx, 0xffffffff; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0008f678: or edx, 2; call dword ptr gs:[0x10]; 
0x0011ec08: or edx, dword ptr [eax + eax]; push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x1c; ret; 
0x000f7eb7: or edx, eax; or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x0011e719: or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x00083695: or edx, edi; jmp dword ptr [esi - 0x70]; 
0x000dc0d6: or edx, edi; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00024eb3: or esi, 0x38; stc; call dword ptr [eax - 1]; 
0x0002872d: or esi, 0x3a; stc; call dword ptr [eax - 0x18]; 
0x0015354b: or esi, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x0015e459: or esi, 0x70; stc; call dword ptr [eax - 0x18]; 
0x0015e5d9: or esi, 0x70; stc; call dword ptr [eax - 0x73]; 
0x001a48f2: or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a38d2: or esi, dword ptr [edx + 0x3b]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0009350d: or esi, dword ptr [esp - 0x77]; ret 0xd5e9; 
0x001243d4: or esi, eax; xor eax, eax; or eax, esi; pop esi; pop edi; ret; 
0x0004249a: or esi, edi; ror byte ptr [edi], 1; mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00144a3b: or esi, esi; ret 0xf02; 
0x000dce5a: or esi, esi; ret; 
0x00122ccf: or esp, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x00160d79: or esp, 0x71; stc; call dword ptr [eax - 0x18]; 
0x00160eed: or esp, 0x71; stc; call dword ptr [eax - 0x73]; 
0x0006d616: or esp, 0x8dfff8d6; test byte ptr [ecx], al; inc ebp; jecxz 0x6d621; jmp eax; 
0x0009433f: or esp, 0xffffff96; stc; call dword ptr [eax - 0x73]; 
0x00152164: or esp, dword ptr [eax]; mov dword ptr gs:[edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00122e06: or esp, dword ptr [ecx - 7]; call dword ptr [edx + 0x52]; 
0x001343a9: or esp, dword ptr [esi - 7]; call dword ptr [eax + 0x56]; 
0x00120138: or esp, dword ptr [esi - 7]; call dword ptr [eax + 0x6a]; 
0x00037b94: or esp, eax; call dword ptr [eax + 0x6a]; 
0x001784e9: or esp, edi; jmp dword ptr [esi - 0x70]; 
0x00124003: out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120613: out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019fc9b: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x000b7760: out 0x10, al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0014ff4c: out 0x21, eax; ret; 
0x0018c2ea: out 0x42, eax; jo 0x18c26f; ret 0x80; 
0x00110dd7: out 0x59, al; stc; call dword ptr [eax - 0x18]; 
0x00146c28: out 0x5b, eax; pop esi; pop edi; ret; 
0x00122dec: out 0x60, eax; stc; call dword ptr [ecx + 0x51]; 
0x0008db48: out 0x81, eax; ret; 
0x00036099: out 0x83, al; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008dbe3: out 0x83, eax; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00073b58: out 0x83, eax; ret; 
0x001609f5: out 0x84, eax; std; jmp dword ptr [esi - 0x70]; 
0x00025848: out 0x89, al; ret 0x25; 
0x00132f07: out 0x89, al; ret; 
0x0003c3df: out 0x89, eax; fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000258e0: out 0x89, eax; ret 0x25; 
0x00097eb8: out 0x89, eax; ret 0xe283; 
0x00052bf0: out 0x89, eax; ret; 
0x00047675: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000e344a: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd729; 
0x000d39eb: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x00097f03: out 0x8b, al; jl 0x97f2b; adc al, 0x89; ret; 
0x000f8734: out 0x8d, eax; jbe 0xf8738; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x0011e65e: out 0x90, al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x000ce4f5: out 0xa9, eax; push es; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0017e3a9: out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0016c9f6: out 0xc4, al; cld; jmp dword ptr [esi - 0x70]; 
0x000855b8: out 0xe4, al; call dword ptr [eax - 1]; 
0x00183045: out 0xe8, eax; clc; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [ecx + edi*4 - 0x77]; ret 0xe283; 
0x00174b7b: out 0xea, al; dec dword ptr [ecx - 0x763e7606]; ret; 
0x0018da9b: out 0xf, eax; je 0x18dab0; call 0x182d19; add ebx, 0x46c6c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018fa9b: out 0xf, eax; je 0x18fab0; call 0x182d19; add ebx, 0x44eec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00191a8d: out 0xf, eax; je 0x191ab0; call 0x182d19; add ebx, 0x4317a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00193cd0: out 0xf, eax; je 0x193cf0; call 0x182d19; add ebx, 0x410f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00194cb0: out 0xf, eax; je 0x194cd0; call 0x182d19; add ebx, 0x402d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001553d4: out 0xf1, eax; call dword ptr [eax - 0x18]; 
0x0016905f: out 0xf3, eax; call dword ptr [edx - 0x73]; 
0x000c33c9: out 0xf6, eax; push esi; inc ecx; jne 0xc33d2; cmove eax, edx; ret; 
0x0007930c: out 0xf8, al; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x000793fd: out 0xf8, eax; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x00055704: out 0xfd, al; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0015a6de: out 0xfd, eax; jmp dword ptr [esi - 0x70]; 
0x000df1a8: out 0xff, al; call dword ptr [edi + 0x57]; 
0x000778e2: out 0xff, al; dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x0004ca33: out 0xff, al; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x00181ddd: out 0xff, al; dec dword ptr [ebx - 0x76f7dbb4]; ret 0xd2e9; 
0x00139442: out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x000df127: out 0xff, eax; call dword ptr [ebp + 0x55]; 
0x000e46fb: out 0xff, eax; call dword ptr [ebx + 0x57]; 
0x000a9cdf: out 0xff, eax; cmove eax, edx; ret; 
0x000d5944: out 0xff, eax; inc dword ptr [ebx - 0x6274fb14]; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x00024a15: out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x000a6f4a: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1765a4]; cmove eax, edx; ret; 
0x000a6f0a: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x000a8e6a: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1769d4]; cmove eax, edx; ret; 
0x000a9d1a: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1894a4]; cmove eax, edx; ret; 
0x00196a71: out 3, al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00180e43: out 3, al; pop eax; adc al, 0x39; fimul word ptr [edi]; xchg edx, eax; ret; 
0x000dce48: out 4, al; add al, 0x66; cmp esi, 0x840f0400; ret; 
0x0004977d: out dx, al; aas; stc; call dword ptr [eax - 0x18]; 
0x000c02ee: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000c02f1: out dx, al; add al, 0xf7; ret 0; 
0x000bed6e: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0008496e: out dx, al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x001327c7: out dx, al; add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a98ce: out dx, al; add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x00096c48: out dx, al; add esi, dword ptr [ecx + eax*8 - 0x77]; ret 0xca83; 
0x00124875: out dx, al; call dword ptr [eax - 0x73]; 
0x001184d5: out dx, al; call dword ptr [edx - 0x73]; 
0x000e4f0e: out dx, al; call dword ptr gs:[0x10]; 
0x000a6d7b: out dx, al; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0015096b: out dx, al; dec dword ptr [ebp - 0x17acff8a]; mov dword ptr [0x81000323], eax; ret; 
0x0014cba4: out dx, al; dec dword ptr [ebp - 0x63f1b7f]; call dword ptr [eax - 0x73]; 
0x0014cff9: out dx, al; dec dword ptr [ebp - 0x63f3f7a]; call dword ptr [eax - 0x73]; 
0x0014bf78: out dx, al; dec dword ptr [ebp - 0x63f5b7d]; call dword ptr [eax + 0x68]; 
0x0014c48a: out dx, al; dec dword ptr [ebx - 0x72ebdba4]; sub dword ptr [eax - 0x40], -7; call dword ptr [eax - 0x73]; 
0x0015074c: out dx, al; dec dword ptr [ebx - 0x72f3db8c]; xchg al, dh; ret 0xfff9; 
0x0014c9ea: out dx, al; dec dword ptr [ebx - 0x72f3dbac]; adc byte ptr [eax - 0x40], 0xf9; call dword ptr [eax + 0x68]; 
0x00140611: out dx, al; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x0012e037: out dx, al; dec esp; add eax, 0xd9c58100; lea edx, [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x0013ac73: out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013a763: out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00182e89: out dx, al; inc dword ptr [ebx - 0x247aef3c]; jne 0x182ea0; add esp, 8; pop ebx; ret; 
0x00024957: out dx, al; jae 0x24953; call dword ptr [eax - 0x18]; 
0x00137da3: out dx, al; jmp dword ptr [esi - 0x70]; 
0x0012abe8: out dx, al; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0006b88c: out dx, al; mov cl, 0xff; dec dword ptr [ebx - 0x5d343]; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x0007ff2f: out dx, al; mov eax, 0xffffffff; pop ebx; ret; 
0x000e4fc6: out dx, al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0018c392: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f583: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191533: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x000f7c0c: out dx, al; push edi; stc; call dword ptr [eax - 0x18]; 
0x000754ce: out dx, al; ret; 
0x00145aee: out dx, al; xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x000be975: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x001a486c: out dx, eax; adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0018dea3: out dx, eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e9bf4: out dx, eax; add al, 0x89; ret; 
0x0007ae8d: out dx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x7aea0; push esi; call dword ptr [ebx + 0x1c]; 
0x000f7e30: out dx, eax; add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x000c6b7f: out dx, eax; add cl, byte ptr [ecx + 0x29d001f8]; ret; 
0x001a48a1: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x0004ffec: out dx, eax; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0007fe1d: out dx, eax; add esp, 4; pop ebx; pop esi; ret; 
0x001925a3: out dx, eax; and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001302a6: out dx, eax; call dword ptr [eax + 0x6a]; 
0x0012f1c8: out dx, eax; call dword ptr [eax - 0x18]; 
0x0013a55e: out dx, eax; call dword ptr [ebp + 0x57]; 
0x0013e929: out dx, eax; call dword ptr [ebx + 0x50]; 
0x00129c6b: out dx, eax; call dword ptr [ebx + 0x56]; 
0x0012d10c: out dx, eax; call dword ptr gs:[0x10]; 
0x00131f8e: out dx, eax; dec dword ptr [ecx + 0x8e82434]; adc ch, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0013051a: out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x00127f98: out dx, eax; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00131f96: out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00136f22: out dx, eax; inc dword ptr [ebx - 0x7072ef3c]; mov ebp, 0x89fff955; ret 0x68b; 
0x00136e1a: out dx, eax; inc dword ptr [ebx - 0x72afef3c]; xchg byte ptr [esi + 0x66], bl; stc; call dword ptr [ebx + 0x50]; 
0x0012c40d: out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0012c27d: out dx, eax; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012c29d: out dx, eax; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0012e989: out dx, eax; je 0x12e9e0; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000be207: out dx, eax; jge 0xbe21a; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00183f56: out dx, eax; jmp dword ptr [ecx]; 
0x001342dc: out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00078783: out dx, eax; jmp edi; 
0x00174233: out dx, eax; ljmp 0x868d:0xcc483ff; call 0x6b173c08; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0018c362: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008a1da: out dx, eax; mov dword ptr [ebx], edx; pop ebx; pop esi; pop edi; ret; 
0x0009ae50: out dx, eax; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x00139650: out dx, eax; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x000d6d30: out dx, eax; mov eax, ecx; pop ebx; pop esi; ret; 
0x0012d1f6: out dx, eax; mov ecx, dword ptr [esp]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0018f4b3: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191483: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x001a48e1: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x001a48d1: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x001a4901: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x001a48f1: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x0007fdc3: out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x001a48c1: out dx, eax; pop es; jb 0x1a4930; lea eax, [eax + 6]; pop edi; ret; 
0x001a4911: out dx, eax; push cs; jb 0x1a4930; lea eax, [eax + 0xd]; pop edi; ret; 
0x00129a9d: out dx, eax; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x000da285: out dx, eax; push ebp; stc; call dword ptr [eax + 0x56]; 
0x001a48b1: out dx, eax; push es; jb 0x1a4930; lea eax, [eax + 5]; pop edi; ret; 
0x001930a3: out dx, eax; sbb dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f334: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0019fcf5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0019f31f: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0019fcdb: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0019f30a: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0019f2f5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0019fcc1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x0019f3c1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009e627: out dx, eax; xchg dword ptr [ecx], ebx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x9e640; ret; 
0x0012e97b: outsb dx, byte ptr [esi]; add al, 0x89; ret; 
0x00151cb9: outsb dx, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x000331a8: outsb dx, byte ptr [esi]; cmp al, 0x20; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000d020e: outsb dx, byte ptr [esi]; cmp esi, esi; dec dword ptr [ebp - 0x652177d]; call dword ptr [eax - 0x73]; 
0x00079295: outsb dx, byte ptr [esi]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x000be308: outsb dx, byte ptr [esi]; jge 0xbe31b; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0018309a: outsb dx, byte ptr [esi]; lock dec dword ptr [ebp - 0x2bb7d]; dec dword ptr [ecx + 0x34894c46]; and al, 0xe8; ret 0x12; 
0x00184ab2: outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x00120542: outsb dx, byte ptr [esi]; pop edx; stc; call dword ptr [eax - 0x18]; 
0x001894ae: outsb dx, byte ptr [esi]; psubb mm7, mm7; add esp, 0x2c; ret; 
0x00086b01: outsb dx, byte ptr [esi]; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x000a309e: outsb dx, byte ptr [esi]; push ebx; stc; call dword ptr [eax - 0x18]; 
0x0009aaa8: outsb dx, byte ptr [esi]; ret; 
0x0009a262: outsb dx, byte ptr [esi]; sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x0018c0f2: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x00154625: outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x0003e3c5: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00150a8a: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; in eax, dx; xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x00151465: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00155a6e: outsb dx, byte ptr [esi]; xor al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x0019f2f1: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0019e3cd: outsd dx, dword ptr [esi]; add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000b3342: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b35f2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000aef82: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000af212: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x00089e6a: outsd dx, dword ptr [esi]; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0005fad3: outsd dx, dword ptr [esi]; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0007c945: outsd dx, dword ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x0019fb42: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x0019faa2: outsd dx, dword ptr [esi]; dec eax; ret; 
0x0018fea3: outsd dx, dword ptr [esi]; dec ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019c5c6: outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000929a6: outsd dx, dword ptr [esi]; inc esp; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x001639fb: outsd dx, dword ptr [esi]; jb 0x1639f7; jmp dword ptr [ebp - 0x75]; 
0x00165e77: outsd dx, dword ptr [esi]; jb 0x165e73; call dword ptr [eax + 0x57]; 
0x001665dc: outsd dx, dword ptr [esi]; jb 0x1665d8; call dword ptr [eax + 0x57]; 
0x00166f56: outsd dx, dword ptr [esi]; jb 0x166f52; call dword ptr [eax + 0x55]; 
0x00167b1c: outsd dx, dword ptr [esi]; jb 0x167b18; call dword ptr [eax + 0x57]; 
0x00199c52: outsd dx, dword ptr [esi]; mov bl, 0x9c; sar ecx, 1; jmp dword ptr [esi + 0xf]; 
0x000b858d: outsd dx, dword ptr [esi]; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00192b23: outsd dx, dword ptr [esi]; pop ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00122c2e: outsd dx, dword ptr [esi]; pop ebp; stc; call dword ptr [eax + 0x55]; 
0x0018e923: outsd dx, dword ptr [esi]; pop esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f6c8: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019fb47: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x0019faa7: outsd dx, dword ptr [esi]; push edx; ret; 
0x000bb072: outsd dx, dword ptr [esi]; push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001577bd: outsd dx, dword ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x00120456: outsd dx, dword ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x00155484: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00120726: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00136f86: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x00159740: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 1]; 
0x00154f0c: outsd dx, dword ptr [esi]; stc; call dword ptr [ecx + 0x50]; 
0x00154fd2: outsd dx, dword ptr [esi]; stc; call dword ptr [ecx - 0x17]; 
0x000f79f6: outsd dx, dword ptr [esi]; stc; dec dword ptr [ebp - 0x6a81e80]; call dword ptr [ebx + 0x50]; 
0x0008c16d: outsd dx, dword ptr [esi]; stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00181f0f: outsd dx, dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x00192023: outsd dx, dword ptr [esi]; sub al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001574eb: outsd dx, dword ptr [si]; stc; call dword ptr [eax - 0x18]; 
0x000f377b: paddsb mm7, mm7; dec dword ptr [ebx - 0x49f7b]; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x000bef21: pcmpeqb mm1, qword ptr [ebx + eax*4]; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x000bf0ff: pcmpeqb mm1, qword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xbf170; xor eax, eax; ret; 
0x001a3b41: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x1a3d80; xor eax, eax; ret; 
0x000bf0d1: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xbf150; xor eax, eax; ret; 
0x001a550a: pcmpeqb mm2, qword ptr [ebx]; and eax, 1; je 0x1a54f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0018fa9c: pcmpeqb mm2, qword ptr [ecx]; call 0x182d19; add ebx, 0x44eec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018da9c: pcmpeqb mm2, qword ptr [ecx]; call 0x182d19; add ebx, 0x46c6c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000d6eb4: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x00191a8e: pcmpeqb mm3, qword ptr [edi]; call 0x182d19; add ebx, 0x4317a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000d6e9d: pcmpeqb mm4, qword ptr [eax]; ret; 
0x000bf0fe: pcmpeqb xmm1, xmmword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xbf170; xor eax, eax; ret; 
0x001a3b40: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x1a3d80; xor eax, eax; ret; 
0x000bf0d0: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xbf150; xor eax, eax; ret; 
0x000a2dfa: pcmpeqw mm1, qword ptr [ecx + ecx*4]; ret; 
0x001a5236: pcmpeqw mm2, qword ptr [edi]; test dh, 0xf; jne 0x1a52a0; lea eax, [ecx + 0xc]; ret; 
0x001a5205: pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x1a52a0; lea eax, [ecx + 4]; ret; 
0x000b7297: pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x001a3ff3: pmovmskb eax, mm1; and eax, edx; test eax, eax; jne 0x1a3c20; xor eax, eax; ret; 
0x000bed99: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bf594: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000bf071: pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x001a36ad: pmovmskb eax, mm1; test eax, eax; jne 0x1a3780; xor eax, eax; pop edi; ret; 
0x001a3b45: pmovmskb eax, mm1; test eax, eax; jne 0x1a3d80; xor eax, eax; ret; 
0x001a3b84: pmovmskb eax, mm1; test eax, eax; jne 0x1a3e00; xor eax, eax; ret; 
0x000bee3f: pmovmskb eax, mm1; test eax, eax; jne 0xbeea0; xor eax, eax; pop edi; ret; 
0x000bee05: pmovmskb eax, mm1; test eax, eax; jne 0xbeec0; xor eax, eax; pop edi; ret; 
0x000bf0d5: pmovmskb eax, mm1; test eax, eax; jne 0xbf150; xor eax, eax; ret; 
0x000bf104: pmovmskb eax, mm1; test eax, eax; jne 0xbf170; xor eax, eax; ret; 
0x001a3ff2: pmovmskb eax, xmm1; and eax, edx; test eax, eax; jne 0x1a3c20; xor eax, eax; ret; 
0x000bed98: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bf593: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000bf070: pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x001a36ac: pmovmskb eax, xmm1; test eax, eax; jne 0x1a3780; xor eax, eax; pop edi; ret; 
0x001a3b44: pmovmskb eax, xmm1; test eax, eax; jne 0x1a3d80; xor eax, eax; ret; 
0x001a3b83: pmovmskb eax, xmm1; test eax, eax; jne 0x1a3e00; xor eax, eax; ret; 
0x000bee3e: pmovmskb eax, xmm1; test eax, eax; jne 0xbeea0; xor eax, eax; pop edi; ret; 
0x000bee04: pmovmskb eax, xmm1; test eax, eax; jne 0xbeec0; xor eax, eax; pop edi; ret; 
0x000bf0d4: pmovmskb eax, xmm1; test eax, eax; jne 0xbf150; xor eax, eax; ret; 
0x000bf103: pmovmskb eax, xmm1; test eax, eax; jne 0xbf170; xor eax, eax; ret; 
0x000bf3fa: pmovmskb ecx, mm0; test ecx, ecx; je 0xbf410; bsf ecx, ecx; add eax, ecx; ret; 
0x000bf3f9: pmovmskb ecx, xmm0; test ecx, ecx; je 0xbf410; bsf ecx, ecx; add eax, ecx; ret; 
0x00192b24: pop ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00057152: pop ds; add al, 0x83; ret; 
0x0009856d: pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x00050280: pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x001a3382: pop ds; add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0003d5da: pop ds; add byte ptr [ebx - 0x7f72e714], al; movsb byte ptr es:[edi], byte ptr [esi]; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0010abfb: pop ds; add byte ptr [edi], cl; test dword ptr [0xf7fffffd], edi; ret 0x67; 
0x000d6b7d: pop ds; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00042428: pop ds; add eax, 1; pop ebx; ret; 
0x000423dd: pop ds; add eax, 1; ret; 
0x0019e61d: pop ds; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000ca5ec: pop ds; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000424ef: pop ds; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x001805c8: pop ds; add esp, 4; pop ebx; pop esi; ret; 
0x0010964d: pop ds; add esp, 8; or eax, edx; pop ebx; ret; 
0x000fc890: pop ds; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008e980: pop ds; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00191a90: pop ds; call 0x182d19; add ebx, 0x4317a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0011befc: pop ds; call dword ptr gs:[0x10]; 
0x00099f8b: pop ds; cli; jmp dword ptr [esi - 0x70]; 
0x0018fff3: pop ds; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ea405: pop ds; ja 0xea7bf; mov eax, dword ptr [ebx + ebp*4 - 0x6fe68]; add eax, ebx; jmp eax; 
0x00161901: pop ds; jb 0x1618fd; call dword ptr [ebp - 0x73]; 
0x00178f47: pop ds; jbe 0x178f43; call dword ptr [eax - 0x18]; 
0x001a3322: pop ds; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x000b71f7: pop ds; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b889a: pop ds; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x0015bb3c: pop ds; jo 0x15bb38; call dword ptr [eax - 0x18]; 
0x0004287d: pop ds; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x000427c1: pop ds; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x000d1bc7: pop ds; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000424a2: pop ds; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000427f8: pop ds; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000423c2: pop ds; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x00042758: pop ds; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042463: pop ds; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00182a83: pop ds; ljmp 0xc031:0x8c483ff; pop ebx; ret; 
0x0007739d: pop ds; mov byte ptr [0x28e9ffff], al; in al, 0xff; dec dword ptr [ebx - 0x5037b]; call dword ptr [ecx + 0x51]; 
0x0009606c: pop ds; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011b555: pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000f8268: pop ds; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000421d8: pop ds; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x0010a910: pop ds; mov eax, dword ptr [ebx + ebp*4 - 0x6f150]; add eax, ebx; jmp eax; 
0x0011d954: pop ds; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0003bc0d: pop ds; not eax; and eax, edx; ret; 
0x0003b918: pop ds; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x000961d0: pop ds; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0005445e: pop ds; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00054495: pop ds; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x00151464: pop ds; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000fa71d: pop ds; pop eax; stc; call dword ptr [eax + 0x55]; 
0x0018ea73: pop ds; pop ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00053162: pop ds; pop ebx; pop esi; pop edi; ret; 
0x000b8c74: pop ds; pop edi; pop esi; pop ebx; ret; 
0x0003abbc: pop ds; pop edi; ret; 
0x0013a7be: pop ds; push 0x868dfff9; sub ch, byte ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x00184ff2: pop ds; push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x0003a919: pop ds; ret; 
0x000bf33f: pop ds; sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x0014d64d: pop ds; scasb al, byte ptr es:[edi]; hlt; dec dword ptr [ebp - 0xe9c537d]; call dword ptr [esi + 0x50]; 
0x000420e7: pop ds; shr eax, cl; ret; 
0x0003b60e: pop ds; shr ecx, 0x10; or eax, ecx; ret; 
0x001a09dd: pop ds; sti; int1; jmp dword ptr [esi - 0x70]; 
0x0003b5a9: pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x00127f88: pop ds; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000b886d: pop dword ptr [0x5e5f0000]; pop ebx; ret; 
0x00103936: pop dword ptr [eax + 0x4f]; stc; call dword ptr [eax - 0x17]; 
0x00111edb: pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a520d: pop dword ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x00151ba2: pop dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00151b98: pop dword ptr [eax]; add byte ptr [edi], ch; je 0x151c02; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00190683: pop dword ptr [ecx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f804e: pop dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x6fa20]; add ecx, edi; jmp ecx; 
0x0005c0e1: pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x000dc0c6: pop dword ptr [edx]; jbe 0xdc0d0; mov eax, edx; ret; 
0x000c87a8: pop dword ptr [esi]; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000302a5: pop eax; aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00180e45: pop eax; adc al, 0x39; fimul word ptr [edi]; xchg edx, eax; ret; 
0x00157de3: pop eax; adc al, 0x89; ret; 
0x0016b85b: pop eax; adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x0007e91c: pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0007db1d: pop eax; adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x00031954: pop eax; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x840f; 
0x0018ed14: pop eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ffe62: pop eax; add al, 0xf7; ret; 
0x00092bb3: pop eax; add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000636d3: pop eax; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x0007b5a4: pop eax; add dword ptr [eax], eax; add byte ptr [ebx - 0xa8fb14], al; jne 0x7b5b7; push esi; call dword ptr [ebx + 0x1c]; 
0x000654a3: pop eax; add dword ptr [eax], eax; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x001929bd: pop eax; add edi, edi; inc dword ptr [ecx + 0x420cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f9f22: pop eax; and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x000ad343: pop eax; and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00190bbd: pop eax; and edi, edi; inc dword ptr [ecx + 0x43c4fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00170af4: pop eax; bswap eax; mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x0009c4f0: pop eax; cdq; stc; call dword ptr [eax - 0x73]; 
0x000a6e4d: pop eax; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9644: pop eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x000e7138: pop eax; insb byte ptr es:[edi], dx; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00090e9e: pop eax; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0005d124: pop eax; insb byte ptr es:[edi], dx; std; dec dword ptr [ebx - 0x8b6b]; dec dword ptr [ebp - 0x6747f7e]; call dword ptr [eax - 0x73]; 
0x0015f88c: pop eax; jno 0x15f888; call dword ptr [eax - 0x18]; 
0x000be5d3: pop eax; jnp 0x5b180a1e; pop esi; ret; 
0x000bb150: pop eax; jnp 0x5e13d59b; ret; 
0x00033ee4: pop eax; lds ecx, ptr [eax]; add byte ptr [ebx - 0x7c72f33c], al; xor byte ptr [esi], bh; stc; call dword ptr [eax - 1]; 
0x000bf417: pop eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000d5c24: pop eax; loope 0xd5c1c; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x00134248: pop eax; mov bh, 0xf9; call dword ptr [eax - 0x18]; 
0x0015cf7b: pop eax; mov byte ptr [0x850f0000], al; ret; 
0x000bae1e: pop eax; mov cl, 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000505c9: pop eax; mov cl, bh; call dword ptr [eax - 0x73]; 
0x0007a9d1: pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x00087241: pop eax; mov dword ptr [edx + 0x88], ecx; pop ebx; pop esi; pop edi; ret; 
0x0003c208: pop eax; mov eax, 0x77; int 0x80; 
0x0016958d: pop eax; mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00084fed: pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00084ebd: pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0002daff: pop eax; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000bfddc: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000f7e99: pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x001493c1: pop eax; or byte ptr [ebp + 0x26850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x001492f1: pop eax; or byte ptr [ebp + 0x40850fed], al; add al, 0; add dh, dh; ret; 
0x00059e4a: pop eax; or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007f341: pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x000ddfa8: pop eax; or byte ptr [ecx + ecx*4], al; inc esi; adc cl, ch; ret 0xffed; 
0x0014965f: pop eax; or dh, dh; ret; 
0x00122d4a: pop eax; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6a0087d], cl; call dword ptr [edx + 0x52]; 
0x0014e486: pop eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0005315a: pop eax; pop ebx; pop esi; pop edi; ret; 
0x000d6c47: pop eax; pop edi; pop esi; ret; 
0x0016f5e7: pop eax; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x00169564: pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00169bf8: pop eax; pop edx; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0016a632: pop eax; pop edx; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00169cfc: pop eax; pop edx; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0018e73a: pop eax; pop esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007cf74: pop eax; push -6; jmp dword ptr [esi - 0x70]; 
0x000be5b3: pop eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb130: pop eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0003819a: pop eax; push dword ptr [ebx + 0x12cc]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x0002dafb: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0015d108: pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00028467: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025c65: pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x0015d10c: pop eax; push esi; call edi; 
0x001306d1: pop eax; ret; 
0x000f7aab: pop eax; stc; call dword ptr [eax + 0x53]; 
0x000fa707: pop eax; stc; call dword ptr [eax + 0x55]; 
0x00084542: pop eax; stc; call dword ptr [eax - 0x18]; 
0x0010ac7d: pop eax; stc; call dword ptr [eax - 0x18]; cli; nop; bnd jmp dword ptr [esi - 0x70]; 
0x00103641: pop eax; stc; call dword ptr [eax - 0x77]; 
0x000f7b08: pop eax; stc; call dword ptr [eax - 1]; 
0x00106263: pop eax; stc; call dword ptr [edx - 1]; 
0x0010363b: pop eax; stc; dec dword ptr [ebp - 0x6a7e671]; call dword ptr [eax - 0x77]; 
0x0007e207: pop eax; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x00176b30: pop eax; test al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x73], ch; stc; call dword ptr [eax + 0x6a]; 
0x00085b8e: pop eax; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0016aefa: pop eax; xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00041a16: pop eax; xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x000d18ed: pop ebp; aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x001a71ac: pop ebp; aam 0x89; ret; 
0x001aadd1: pop ebp; aam 0xf7; out 0x89, al; ret; 
0x0016fa15: pop ebp; adc al, 0x8d; xchg ebp, eax; je 0x16fa15; call dword ptr [eax + 0x53]; 
0x0018e7d4: pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005ace7: pop ebp; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0011fbaf: pop ebp; add bh, dl; dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x00120b3d: pop ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00156b50: pop ebp; add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x000526f6: pop ebp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013a9ec: pop ebp; add esp, 0x14; pop ebx; pop esi; ret; 
0x001077e0: pop ebp; clc; dec dword ptr [edi]; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0007de35: pop ebp; cli; jmp dword ptr [esi - 0x70]; 
0x0012720a: pop ebp; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0007af24: pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00025071: pop ebp; jmp eax; 
0x00177cfd: pop ebp; mov byte ptr [ecx], al; ret 0x858b; 
0x0006105f: pop ebp; mov eax, ecx; ret; 
0x000f8abd: pop ebp; neg eax; ret; 
0x0003ab59: pop ebp; not eax; and eax, edx; ret; 
0x000780ee: pop ebp; or byte ptr [ecx], bh; ret; 
0x000c024d: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0019e76b: pop ebp; pop ebx; ret; 
0x0019e945: pop ebp; pop ebx; xor eax, eax; ret; 
0x0011d962: pop ebp; pop edi; pop ebx; ret; 
0x00052a18: pop ebp; pop esi; pop edi; ret; 
0x00094739: pop ebp; push eax; stc; call dword ptr [eax - 0x73]; 
0x0003a71e: pop ebp; ret 4; 
0x00023466: pop ebp; ret; 
0x000aad49: pop ebp; rol byte ptr [ecx], 1; ret; 
0x00122bf9: pop ebp; stc; call dword ptr [eax + 0x55]; 
0x001ae385: pop ebp; test byte ptr [ebx - 0xa343], cl; call ebx; 
0x0009e6b9: pop ebp; xchg dword ptr [ecx], ebx; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0004d02d: pop ebp; xor eax, 0x7fffffff; ret; 
0x00199a03: pop ebp; xor eax, eax; ret; 
0x00025348: pop ebx; adc edx, 0; neg edx; ret; 
0x0006fda1: pop ebx; add al, 0; add byte ptr [ecx], al; ret; 
0x0018e9db: pop ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00109f11: pop ebx; add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0008a629: pop ebx; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0014d42d: pop ebx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], 0x6d; stc; call dword ptr [eax - 0x18]; 
0x0017e155: pop ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x1442474], cl; ret; 
0x000bea01: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0004293e: pop ebx; add eax, 0x20; ret; 
0x00170c41: pop ebx; and eax, 0xc483ffeb; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00124353: pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0015ca02: pop ebx; bnd call dword ptr [eax - 0x73]; 
0x00094821: pop ebx; cmc; stc; jmp dword ptr [esi - 0x70]; 
0x000a6408: pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000a63f0: pop ebx; cmove eax, edx; add eax, 1; ret; 
0x0010acb2: pop ebx; cmove eax, edx; ret; 
0x00041217: pop ebx; cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x000e7b89: pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003fb26: pop ebx; cmp eax, 0xfffff001; jae 0x24ef0; xor eax, eax; ret; 
0x0002743f: pop ebx; cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x00139371: pop ebx; jg 0x139367; jmp dword ptr [esi - 0x70]; 
0x000be09b: pop ebx; jg 0xbe0ae; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00129c85: pop ebx; jl 0x24ef0; ret; 
0x0007ab23: pop ebx; jmp eax; 
0x001a48d4: pop ebx; lea eax, [eax + 8]; pop edi; ret; 
0x00098fb1: pop ebx; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x000429f4: pop ebx; lea eax, [ecx + 0x20]; ret; 
0x001a3f74: pop ebx; lea eax, [ecx + 9]; ret; 
0x0007e45f: pop ebx; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x001a38b4: pop ebx; lea eax, [edi + 8]; pop edi; ret; 
0x0017d661: pop ebx; ljmp 0xec83:0x10c483ff; or byte ptr [ebp - 0x689497d], cl; call dword ptr [ebp + 0x50]; 
0x0009613f: pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0008e1e3: pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0005a7e5: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0019f29f: pop ebx; mov eax, 1; ja 0x19f2a9; neg eax; ret; 
0x0019fd86: pop ebx; mov eax, 1; ja 0x19fd90; neg eax; ret; 
0x001a2670: pop ebx; mov eax, 1; ja 0x1a267a; neg eax; ret; 
0x001a0fb0: pop ebx; mov eax, 1; jg 0x1a0fc0; neg eax; ret; 
0x001a50b0: pop ebx; mov eax, 1; jg 0x1a50c0; neg eax; ret; 
0x00052f97: pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00109380: pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x0008bc3c: pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00175683: pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x001756bc: pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0007fbbd: pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007fa6d: pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0007fc0c: pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x00087679: pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00034c45: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0003053a: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00110a14: pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x000424f3: pop ebx; mov eax, ecx; ret; 
0x0003339e: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0003e3ab: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00052ac0: pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0003315f: pop ebx; mov eax, edx; ret; 
0x0003b94a: pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x00038281: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00041252: pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0007caa5: pop ebx; mov edx, eax; pop esi; pop edi; pop ebp; ret; 
0x000881ce: pop ebx; mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x0018ba8d: pop ebx; movzx eax, al; neg eax; ret; 
0x00149a38: pop ebx; movzx eax, al; ret; 
0x001849c0: pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0009240a: pop ebx; neg eax; pop esi; pop edi; ret; 
0x00087282: pop ebx; neg eax; ret; 
0x000e4953: pop ebx; neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x00097c3e: pop ebx; neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x000b6da1: pop ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015226a: pop ebx; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0014a68a: pop ebx; or eax, dword ptr [eax]; add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x00052a17: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x00199a02: pop ebx; pop ebp; xor eax, eax; ret; 
0x0003c611: pop ebx; pop edi; ret; 
0x0011f62a: pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x00156cdc: pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x00033bb9: pop ebx; pop esi; cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x000c3e50: pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x0011c91e: pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x001500af: pop ebx; pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x00081405: pop ebx; pop esi; jmp eax; 
0x000c4a7a: pop ebx; pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x0009ae27: pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0003d8ea: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0008b77f: pop ebx; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0007db35: pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000d6d47: pop ebx; pop esi; mov eax, ecx; ret; 
0x0003336a: pop ebx; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x000ffb55: pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x000a95d2: pop ebx; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00092ce9: pop ebx; pop esi; mov eax, edx; ret; 
0x0005a801: pop ebx; pop esi; movzx eax, al; pop edi; ret; 
0x0013218c: pop ebx; pop esi; neg eax; ret; 
0x00127c7e: pop ebx; pop esi; pop ebp; ret; 
0x00111913: pop ebx; pop esi; pop edi; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003b714: pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0017f9ba: pop ebx; pop esi; pop edi; jmp eax; 
0x00184988: pop ebx; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x00028642: pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0006105c: pop ebx; pop esi; pop edi; pop ebp; mov eax, ecx; ret; 
0x0003a71b: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00023463: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00139de8: pop ebx; pop esi; pop edi; ret 4; 
0x00025552: pop ebx; pop esi; pop edi; ret; 
0x000beb70: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x00040049: pop ebx; pop esi; ret 4; 
0x00024ba4: pop ebx; pop esi; ret; 
0x00024fd7: pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000f8a4b: pop ebx; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x00052a51: pop ebx; pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00124edd: pop ebx; pop esi; setne al; pop edi; movzx eax, al; ret; 
0x000954d8: pop ebx; pop esi; shl eax, 4; pop edi; pop ebp; ret; 
0x0003abb8: pop ebx; pop esi; shr eax, 0x1f; pop edi; ret; 
0x000beb19: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0008878c: pop ebx; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0008d92c: pop ebx; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x001a2ed0: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x00050f8e: pop ebx; pop esi; xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x00054a5e: pop ebx; ret 4; 
0x000244fa: pop ebx; ret; 
0x0003b915: pop ebx; sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0007e49a: pop ebx; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x0004271f: pop ebx; setb al; ret; 
0x00129bf8: pop ebx; setg al; pop esi; pop edi; ret; 
0x0012284e: pop ebx; setne al; pop esi; pop edi; movzx eax, al; ret; 
0x0012abec: pop ebx; shr eax, cl; and eax, 3; ret; 
0x00122b57: pop ebx; stc; call dword ptr [eax + 0x55]; 
0x00035981: pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0005a5b1: pop ebx; stosb byte ptr es:[edi], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000421de: pop ebx; sub eax, edx; ret; 
0x0011f41c: pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x00171fb1: pop ebx; test eax, 0xec83fff7; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x00129a96: pop ebx; test eax, eax; jl 0x24ef0; je 0x129aa2; ret; 
0x000427d3: pop ebx; xor eax, 0x1f; ret; 
0x000f7f06: pop ebx; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x0003fb99: pop ebx; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00052f6f: pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0019c0ae: pop ebx; xor eax, eax; ret; 
0x000f4b71: pop ebx; xor ebx, edi; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0009ef77: pop ecx; adc al, 0x89; dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00140898: pop ecx; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x0018ebc4: pop ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a1c6f: pop ecx; add al, 0xf6; ret; 
0x00105cdc: pop ecx; add al, 0xf7; ret; 
0x00149a09: pop ecx; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000accdd: pop ecx; add dword ptr [ecx + 0x75ff851e], ecx; mov al, 0x83; ret 0x8301; 
0x000ac42d: pop ecx; add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x00058f6f: pop ecx; add eax, 0x8d500000; xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x000498db: pop ecx; add eax, 0x8d500000; xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00040111: pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0015d006: pop ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00145683: pop ecx; cmp bh, bh; jmp dword ptr [esi - 0x70]; 
0x0005aa2a: pop ecx; cmp eax, 0xb; ja 0x2352a; mov edx, dword ptr [esi + eax*4 - 0x73764]; add edx, esi; jmp edx; 
0x0005b6df: pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00136b6e: pop ecx; fdivr qword ptr [ecx]; ret; 
0x0014d89a: pop ecx; in eax, dx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0004cb23: pop ecx; jb 0x4cb24; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x001722c4: pop ecx; jne 0x1722c0; call dword ptr [eax + 0x6a]; 
0x0010ad10: pop ecx; mov eax, 0xbe; int 0x80; 
0x000a341a: pop ecx; or dh, dh; ret; 
0x001306d0: pop ecx; pop eax; ret; 
0x00151376: pop ecx; pop ebx; pop esi; pop edi; ret; 
0x0003be9b: pop ecx; pop edx; ret; 
0x0016890b: pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c0b94: pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x000dd822: pop ecx; push esi; stc; call dword ptr [eax + 0x53]; 
0x00106e43: pop ecx; ret; 
0x00135a18: pop ecx; stc; call dword ptr [eax + 0x57]; 
0x0010dcdd: pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x0010b9f7: pop ecx; stc; call dword ptr [eax - 0x18]; 
0x0010fba3: pop ecx; stc; call dword ptr [eax - 0x18]; aam 0x41; bnd jmp dword ptr [esi - 0x70]; 
0x0010ed5e: pop ecx; stc; call dword ptr [eax - 0x18]; jns 0x10ed73; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0010d438: pop ecx; stc; call dword ptr [eax - 0x73]; 
0x000ed043: pop ecx; stc; call dword ptr [eax - 0x75]; 
0x00121686: pop ecx; stc; call dword ptr [eax - 1]; 
0x0016fe86: pop ecx; stc; call dword ptr [edi + 0x56]; 
0x00124996: pop ecx; stc; jmp dword ptr [ebp - 0x75]; 
0x0016af43: pop ecx; sub bl, 0xff; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f0443: pop ecx; sub eax, 0xc483fff3; adc cl, ch; ret; 
0x00045f45: pop edi; aam 0xfd; jmp dword ptr [esi - 0x70]; 
0x0018e5eb: pop edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008eaa1: pop edi; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000b889d: pop edi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000d5984: pop edi; add eax, 0x8d500000; xchg al, bh; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x00049576: pop edi; add eax, 0x8d500000; xchg eax, edi; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x0019f353: pop edi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194031: pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195f73: pop edi; call 0x182d19; add ebx, 0x3f117; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195e69: pop edi; call 0x182d19; add ebx, 0x3f221; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d62: pop edi; call 0x182d19; add ebx, 0x3f328; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f73: pop edi; call 0x182d19; add ebx, 0x3ff57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e69: pop edi; call 0x182d19; add ebx, 0x40061; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d62: pop edi; call 0x182d19; add ebx, 0x40168; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193f93: pop edi; call 0x182d19; add ebx, 0x40d77; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193e89: pop edi; call 0x182d19; add ebx, 0x40e81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d82: pop edi; call 0x182d19; add ebx, 0x40f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193b66: pop edi; call 0x182d19; add ebx, 0x410e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193219: pop edi; call 0x182d19; add ebx, 0x41871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001931fb: pop edi; call 0x182d19; add ebx, 0x4188f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193162: pop edi; call 0x182d19; add ebx, 0x41928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019309b: pop edi; call 0x182d19; add ebx, 0x419ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193002: pop edi; call 0x182d19; add ebx, 0x41a88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192f3b: pop edi; call 0x182d19; add ebx, 0x41b4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192ea2: pop edi; call 0x182d19; add ebx, 0x41be8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192ddb: pop edi; call 0x182d19; add ebx, 0x41caf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192d42: pop edi; call 0x182d19; add ebx, 0x41d48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192c7b: pop edi; call 0x182d19; add ebx, 0x41e0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192be2: pop edi; call 0x182d19; add ebx, 0x41ea8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192b1b: pop edi; call 0x182d19; add ebx, 0x41f6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192a82: pop edi; call 0x182d19; add ebx, 0x42008; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001929bb: pop edi; call 0x182d19; add ebx, 0x420cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192922: pop edi; call 0x182d19; add ebx, 0x42168; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019285b: pop edi; call 0x182d19; add ebx, 0x4222f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001927c2: pop edi; call 0x182d19; add ebx, 0x422c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926fb: pop edi; call 0x182d19; add ebx, 0x4238f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192662: pop edi; call 0x182d19; add ebx, 0x42428; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019259b: pop edi; call 0x182d19; add ebx, 0x424ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192502: pop edi; call 0x182d19; add ebx, 0x42588; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019243b: pop edi; call 0x182d19; add ebx, 0x4264f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001923a2: pop edi; call 0x182d19; add ebx, 0x426e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001922db: pop edi; call 0x182d19; add ebx, 0x427af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192242: pop edi; call 0x182d19; add ebx, 0x42848; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019217b: pop edi; call 0x182d19; add ebx, 0x4290f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001920e2: pop edi; call 0x182d19; add ebx, 0x429a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019201b: pop edi; call 0x182d19; add ebx, 0x42a6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191f82: pop edi; call 0x182d19; add ebx, 0x42b08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191ebb: pop edi; call 0x182d19; add ebx, 0x42bcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191e22: pop edi; call 0x182d19; add ebx, 0x42c68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191b4f: pop edi; call 0x182d19; add ebx, 0x42ffb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191119: pop edi; call 0x182d19; add ebx, 0x436f1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001910fb: pop edi; call 0x182d19; add ebx, 0x4370f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191062: pop edi; call 0x182d19; add ebx, 0x437a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190fab: pop edi; call 0x182d19; add ebx, 0x4385f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190f12: pop edi; call 0x182d19; add ebx, 0x438f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190e5b: pop edi; call 0x182d19; add ebx, 0x439af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190dc2: pop edi; call 0x182d19; add ebx, 0x43a48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190d0b: pop edi; call 0x182d19; add ebx, 0x43aff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190c72: pop edi; call 0x182d19; add ebx, 0x43b98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190bbb: pop edi; call 0x182d19; add ebx, 0x43c4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190b22: pop edi; call 0x182d19; add ebx, 0x43ce8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190a6b: pop edi; call 0x182d19; add ebx, 0x43d9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001909d2: pop edi; call 0x182d19; add ebx, 0x43e38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019091b: pop edi; call 0x182d19; add ebx, 0x43eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190882: pop edi; call 0x182d19; add ebx, 0x43f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190732: pop edi; call 0x182d19; add ebx, 0x440d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019067b: pop edi; call 0x182d19; add ebx, 0x4418f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001905e2: pop edi; call 0x182d19; add ebx, 0x44228; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019052b: pop edi; call 0x182d19; add ebx, 0x442df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190492: pop edi; call 0x182d19; add ebx, 0x44378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903db: pop edi; call 0x182d19; add ebx, 0x4442f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190342: pop edi; call 0x182d19; add ebx, 0x444c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019028b: pop edi; call 0x182d19; add ebx, 0x4457f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901f2: pop edi; call 0x182d19; add ebx, 0x44618; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019013b: pop edi; call 0x182d19; add ebx, 0x446cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001900a2: pop edi; call 0x182d19; add ebx, 0x44768; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ffeb: pop edi; call 0x182d19; add ebx, 0x4481f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ff52: pop edi; call 0x182d19; add ebx, 0x448b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fe9b: pop edi; call 0x182d19; add ebx, 0x4496f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fe02: pop edi; call 0x182d19; add ebx, 0x44a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fb3f: pop edi; call 0x182d19; add ebx, 0x44d8b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f119: pop edi; call 0x182d19; add ebx, 0x45471; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f0fb: pop edi; call 0x182d19; add ebx, 0x4548f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f062: pop edi; call 0x182d19; add ebx, 0x45528; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018efab: pop edi; call 0x182d19; add ebx, 0x455df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ef12: pop edi; call 0x182d19; add ebx, 0x45678; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ee5b: pop edi; call 0x182d19; add ebx, 0x4572f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018edc2: pop edi; call 0x182d19; add ebx, 0x457c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed0b: pop edi; call 0x182d19; add ebx, 0x4587f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ec72: pop edi; call 0x182d19; add ebx, 0x45918; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ebbb: pop edi; call 0x182d19; add ebx, 0x459cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb22: pop edi; call 0x182d19; add ebx, 0x45a68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea6b: pop edi; call 0x182d19; add ebx, 0x45b1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e9d2: pop edi; call 0x182d19; add ebx, 0x45bb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e91b: pop edi; call 0x182d19; add ebx, 0x45c6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e882: pop edi; call 0x182d19; add ebx, 0x45d08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e7cb: pop edi; call 0x182d19; add ebx, 0x45dbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e732: pop edi; call 0x182d19; add ebx, 0x45e58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e67b: pop edi; call 0x182d19; add ebx, 0x45f0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e5e2: pop edi; call 0x182d19; add ebx, 0x45fa8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e52b: pop edi; call 0x182d19; add ebx, 0x4605f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e492: pop edi; call 0x182d19; add ebx, 0x460f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3db: pop edi; call 0x182d19; add ebx, 0x461af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e342: pop edi; call 0x182d19; add ebx, 0x46248; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e28b: pop edi; call 0x182d19; add ebx, 0x462ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e1f2: pop edi; call 0x182d19; add ebx, 0x46398; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e13b: pop edi; call 0x182d19; add ebx, 0x4644f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e0a2: pop edi; call 0x182d19; add ebx, 0x464e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dfeb: pop edi; call 0x182d19; add ebx, 0x4659f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018df52: pop edi; call 0x182d19; add ebx, 0x46638; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018de9b: pop edi; call 0x182d19; add ebx, 0x466ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018de02: pop edi; call 0x182d19; add ebx, 0x46788; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018db3f: pop edi; call 0x182d19; add ebx, 0x46b0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011bf14: pop edi; cmova eax, edx; ret; 
0x000c3e32: pop edi; cmovg eax, edx; ret; 
0x00190fb3: pop edi; cmp byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00111915: pop edi; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x000b8343: pop edi; fist dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0003b716: pop edi; fsubp st(1); ret; 
0x00163752: pop edi; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd4e9; 
0x000b6b63: pop edi; int1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8b60: pop edi; jge 0x5e6aa2ae; pop ebx; ret; 
0x0007fa72: pop edi; jmp eax; 
0x000b6ce3: pop edi; lock adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7480: pop edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0015da7d: pop edi; mov ah, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0016047d: pop edi; mov bh, ch; jmp dword ptr [esi - 0x70]; 
0x0008ccb6: pop edi; mov eax, dword ptr [0x548b001a]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00195a9c: pop edi; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018c890: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00033bbe: pop edi; mov eax, ecx; ret; 
0x00122853: pop edi; movzx eax, al; ret; 
0x0018498a: pop edi; movzx eax, byte ptr [eax]; ret; 
0x0019dcdd: pop edi; or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00132551: pop edi; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x00077dd6: pop edi; or byte ptr [ecx], bh; ret; 
0x00127209: pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x00025070: pop edi; pop ebp; jmp eax; 
0x0006105e: pop edi; pop ebp; mov eax, ecx; ret; 
0x000f8abc: pop edi; pop ebp; neg eax; ret; 
0x0003ab58: pop edi; pop ebp; not eax; and eax, edx; ret; 
0x001a0642: pop edi; pop ebp; pop ebx; ret; 
0x0019e944: pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003a71d: pop edi; pop ebp; ret 4; 
0x00023465: pop edi; pop ebp; ret; 
0x0004d02c: pop edi; pop ebp; xor eax, 0x7fffffff; ret; 
0x00199a01: pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x000b0a82: pop edi; pop ebx; ret; 
0x000b6d40: pop edi; pop esi; pop ebx; ret; 
0x000ad93e: pop edi; pop esi; ret; 
0x00025fb6: pop edi; push cs; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000b7460: pop edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0018e533: pop edi; pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000768c5: pop edi; ret 0xffff; 
0x00139dea: pop edi; ret 4; 
0x00025554: pop edi; ret; 
0x00122d05: pop edi; stc; call dword ptr [eax + 0x55]; 
0x00122d37: pop edi; stc; call dword ptr [ecx + 0x51]; 
0x00122d51: pop edi; stc; call dword ptr [edx + 0x52]; 
0x00089950: pop edi; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0019f0d1: pop edi; xor eax, eax; pop ebp; ret; 
0x000beb72: pop edi; xor eax, eax; ret; 
0x0003ffb5: pop edx; adc al, 0x5b; pop esi; pop edi; ret; 
0x0007eaf0: pop edx; adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x0018eb2b: pop edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a678a: pop edx; add al, 0x83; ret 0xd304; 
0x000a9856: pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x0007e919: pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00149a0f: pop edx; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x00089abd: pop edx; add dword ptr [eax + 0x56], edx; call dword ptr [ebp + 0xc]; 
0x001248ee: pop edx; add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x0013c84a: pop edx; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0003fe0d: pop edx; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x0016ebc4: pop edx; and al, 0x83; ret 0x8b18; 
0x000f9f69: pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00199bf3: pop edx; bnd call dword ptr [ebx - 0x18]; 
0x00199bf3: pop edx; bnd call dword ptr [ebx - 0x18]; sbb eax, 0x81fffe91; ret; 
0x000cd661: pop edx; clc; call dword ptr [esi + 0x53]; 
0x0007e285: pop edx; cli; jmp dword ptr [esi - 0x70]; 
0x0016a2e5: pop edx; cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00172ab2: pop edx; cmp edx, esi; jmp dword ptr [ebp - 0x75]; 
0x000a5e9c: pop edx; inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x00063e8b: pop edx; jbe 0x64824; mov edi, eax; jmp edx; 
0x0006f793: pop edx; jbe 0x70520; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0006f6e6: pop edx; jbe 0x705e3; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0015d882: pop edx; mov dh, 0xfd; call dword ptr [eax + 0x50]; 
0x0019fd54: pop edx; or al, 0x39; fnstcw word ptr [eax]; jne 0x19fd70; pop ebx; ret; 
0x0009f1da: pop edx; or al, 0x89; ret 0xca83; 
0x00059e6f: pop edx; or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000832a7: pop edx; or cl, ch; sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x000a13a2: pop edx; or dh, dh; ret; 
0x000ca28b: pop edx; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000a376e: pop edx; pop ebx; pop esi; ret; 
0x001306cf: pop edx; pop ecx; pop eax; ret; 
0x0016890a: pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c0b93: pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00127a82: pop edx; pop esi; cld; call dword ptr [eax - 0x73]; 
0x0016f5e8: pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0009d282: pop edx; push cs; add byte ptr [0x199b8f], al; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x00151351: pop edx; push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x00151400: pop edx; push cs; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00169565: pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00169bf9: pop edx; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0016a633: pop edx; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00169591: pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00169cfd: pop edx; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00115d42: pop edx; ret 0xffff; 
0x0003be9c: pop edx; ret; 
0x00120840: pop edx; stc; call dword ptr [eax + 0x50]; 
0x0018b4df: pop edx; stc; call dword ptr [eax + 0x53]; 
0x0011fa6e: pop edx; stc; call dword ptr [eax + 0x6a]; 
0x00117ff8: pop edx; stc; call dword ptr [eax - 0x18]; 
0x0012143f: pop edx; stc; call dword ptr [eax - 0x18]; cmp byte ptr [ecx], ch; int1; jmp dword ptr [esi - 0x70]; 
0x00122205: pop edx; stc; call dword ptr [eax - 0x18]; ret 0xf588; 
0x00120543: pop edx; stc; call dword ptr [eax - 0x18]; xor al, 0x38; int1; jmp dword ptr [esi - 0x70]; 
0x00122354: pop edx; stc; call dword ptr [eax - 0x39]; 
0x0012147e: pop edx; stc; call dword ptr [eax - 0x73]; 
0x0011fb05: pop edx; stc; call dword ptr [eax - 1]; 
0x001207e6: pop edx; stc; call dword ptr [edx - 0x77]; 
0x001219c9: pop edx; stc; jmp dword ptr [ebp - 0x75]; 
0x000bee45: pop edx; xor eax, eax; pop edi; ret; 
0x000a0d1c: pop es; adc byte ptr [ebx - 0x76efdb84], cl; ret 0xfa29; 
0x001266f3: pop es; adc dword ptr [eax], eax; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001941df: pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001922d9: pop es; add al, 0x5f; call 0x182d19; add ebx, 0x427af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190289: pop es; add al, 0x5f; call 0x182d19; add ebx, 0x4457f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e289: pop es; add al, 0x5f; call 0x182d19; add ebx, 0x462ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c2416: pop es; add al, ch; ret; 
0x001940bf: pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0008ee3f: pop es; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00095183: pop es; add byte ptr [eax], al; add byte ptr [ecx - 0x9cefba9], cl; xor edx, edx; call dword ptr gs:[0x10]; 
0x000311ae: pop es; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xf289; 
0x00124858: pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00049a64: pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001a3372: pop es; add byte ptr [eax], al; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x0019f5fa: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x000b6f1b: pop es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c1ae2: pop es; add byte ptr [ebp - 0x654477b], cl; call dword ptr [eax - 0x73]; 
0x000c186a: pop es; add byte ptr [ebp - 0x654537e], cl; call dword ptr [eax - 0x73]; 
0x00040941: pop es; add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000c417a: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c44b6: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], edx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c1db2: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c2114: pop es; add byte ptr [ebx - 0x72e3dbac], cl; add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x000300a3: pop es; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00030095: pop es; add byte ptr [ecx - 0x76e3dbbc], cl; lds ecx, ptr [ecx + 0xbe8243c]; mov es, word ptr [edi]; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x0008ac9b: pop es; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0017089d: pop es; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0002986b: pop es; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000ece7f: pop es; add dword ptr [ecx], eax; ret; 
0x0019402f: pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0007b4a5: pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0019426f: pop es; add eax, 0x8b1c035f; jmp ebx; 
0x000ad2e8: pop es; add eax, dword ptr [eax + ecx*4 - 0x71194]; jmp eax; 
0x0019414f: pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000b8e70: pop es; add edi, 0x10; call 0x182d2d; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e54: pop es; add edi, 0x10; call 0x182d2d; add ecx, 0x10d0d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7770: pop es; add edi, 0x10; call 0x182d2d; add ecx, 0x10e657; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b7754: pop es; add edi, 0x10; call 0x182d2d; add ecx, 0x10e673; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0011bf7c: pop es; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00090a4e: pop es; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000dc2b9: pop es; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x00120dfd: pop es; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0003d3dd: pop es; add esp, 0x9c; ret; 
0x000418e8: pop es; add esp, 8; pop ebx; ret; 
0x00176ad5: pop es; and al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x00167e95: pop es; call 0x150d90; add esp, 0x1c; ret; 
0x00167ea4: pop es; call 0x150e60; add esp, 0x1c; ret; 
0x000b620f: pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008be17: pop es; dec edi; stc; call dword ptr [ecx + 0x52]; 
0x00146075: pop es; fucomp st(6); jmp dword ptr [esi - 0x70]; 
0x000b1ca5: pop es; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00076e9d: pop es; inc ebx; stc; call dword ptr [eax - 0x73]; 
0x0005fa40: pop es; inc edx; stc; call dword ptr [ebp + 0x50]; 
0x00061794: pop es; ja 0x61a48; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x0006d084: pop es; ja 0x6d460; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [eax + edx*4 - 0x72954]; jmp eax; 
0x001a38a2: pop es; jb 0x1a3910; lea eax, [edi + 6]; pop edi; ret; 
0x001a48c2: pop es; jb 0x1a4930; lea eax, [eax + 6]; pop edi; ret; 
0x001a3f62: pop es; jl 0x1a3fd0; lea eax, [ecx + 7]; ret; 
0x001a3312: pop es; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x000b0e41: pop es; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1241: pop es; jne 0xb10e1; pop ebx; ret; 
0x000b56c2: pop es; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b6e1f: pop es; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8462: pop es; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x001613d5: pop es; jnp 0x1613d5; jmp dword ptr [esi - 0x70]; 
0x000b8a87: pop es; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b89ed: pop es; lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x000b8a71: pop es; lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x000b8997: pop es; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x001a54a8: pop es; lea eax, [edi - 0x10]; pop edi; ret; 
0x000b341d: pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b355d: pop es; lea eax, [edx + 0xa]; ret; 
0x000b6134: pop es; lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3481: pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35e1: pop es; lea eax, [edx + 0xe]; ret; 
0x000b0e3e: pop es; lea ecx, [edx + 7]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b123e: pop es; lea ecx, [edx + 7]; jne 0xb10e1; pop ebx; ret; 
0x0019480f: pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x000c08f7: pop es; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xc08f8; pop esi; ret; 
0x000b73ba: pop es; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b72ca: pop es; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b741a: pop es; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b73fa: pop es; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b730a: pop es; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b732a: pop es; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x00098ae6: pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000b7c8c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b7dec: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000bd7fd: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b664c: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b67ac: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0005f72e: pop es; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000a6ed5: pop es; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000a6eb5: pop es; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000be450: pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafdd: pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00128fd0: pop es; mov eax, ecx; pop ebx; ret; 
0x000bd800: pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000af03d: pop es; mov eax, edi; pop edi; ret; 
0x000b1c64: pop es; mov eax, edx; pop ebx; ret; 
0x000af17d: pop es; mov eax, edx; ret; 
0x0008e0a7: pop es; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0015053a: pop es; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x0019bf4d: pop es; mov ecx, dword ptr [ebx + ecx*4 - 0x85474]; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x000b73db: pop es; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b72eb: pop es; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b759c: pop es; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b753c: pop es; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b755c: pop es; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b757c: pop es; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000bafd6: pop es; movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb058: pop es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b749c: pop es; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b745c: pop es; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b747c: pop es; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b76a3: pop es; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b734c: pop es; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b76b3: pop es; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b736c: pop es; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b738c: pop es; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b7d0c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b7e6c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000bd87f: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b66cc: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b682c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3416: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b3556: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000af036: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000af176: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3478: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b35d8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000af098: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b1c5b: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000af1f8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00176583: pop es; movzx eax, al; add esp, 0x1c; ret; 
0x0011b1bf: pop es; movzx eax, al; add esp, 0x4c; ret; 
0x001499d7: pop es; movzx eax, ax; add esp, 0x2c; ret; 
0x001998a0: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x001980f3: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019465f: pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192dd9: pop es; or al, 0x5f; call 0x182d19; add ebx, 0x41caf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190d09: pop es; or al, 0x5f; call 0x182d19; add ebx, 0x43aff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed09: pop es; or al, 0x5f; call 0x182d19; add ebx, 0x4587f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019453f: pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019441f: pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00192859: pop es; or byte ptr [edi - 0x18], bl; mov eax, 0x81ffff04; ret; 
0x000c09a1: pop es; or dword ptr [eax + 0x3c90], 1; xor eax, eax; pop ebx; ret; 
0x001944af: pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x001946ef: pop es; or eax, 0x8b1c035f; jmp ebx; 
0x001945cf: pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000778e1: pop es; out 0xff, al; dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x001184d4: pop es; out dx, al; call dword ptr [edx - 0x73]; 
0x00053159: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x000fa90c: pop es; pop eax; stc; call dword ptr [eax + 0x55]; 
0x00122bf8: pop es; pop ebp; stc; call dword ptr [eax + 0x55]; 
0x00060440: pop es; pop ebx; pop esi; pop edi; ret; 
0x000a97ff: pop es; pop ebx; pop esi; ret; 
0x000b1006: pop es; pop ebx; ret; 
0x00194390: pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926fa: pop es; pop edi; call 0x182d19; add ebx, 0x4238f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019067a: pop es; pop edi; call 0x182d19; add ebx, 0x4418f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e67a: pop es; pop edi; call 0x182d19; add ebx, 0x45f0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c88f: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b72b7: pop es; pop edi; pop esi; pop ebx; ret; 
0x000b32ca: pop es; pop edi; ret; 
0x0019438f: pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194aca: pop es; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019477f: pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001942ff: pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000914b5: pop es; ret 0xffff; 
0x00088db8: pop es; ret; 
0x000b6d22: pop es; ror byte ptr [eax + eax], 0x81; rcr dword ptr [edx], 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00137bc8: pop es; sar eax, 5; add esp, 0xc; ret; 
0x000a35f6: pop es; stc; dec dword ptr [ebp - 0x6575779]; call dword ptr [eax - 0x73]; 
0x0008f84c: pop es; sub byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x001998a4: pop es; sub eax, ecx; pop ebp; ret; 
0x001980f7: pop es; sub eax, ecx; ret; 
0x000b56ea: pop es; sub ebx, 8; lea ecx, [edx + 8]; jne 0xb5531; pop ebx; ret; 
0x001688ba: pop es; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x000aaa7d: pop es; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0009659c: pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001563b6: pop es; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x00096125: pop es; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00098618: pop es; xor eax, eax; ret; 
0x0003cea2: pop esi; adc al, 0; add eax, 0x1f9f6f; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003ce82: pop esi; adc al, 0; add eax, 0x1f9f8f; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00049872: pop esi; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + eax*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x0005007d: pop esi; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x0018e73b: pop esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011f5e7: pop esi; add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00151d3a: pop esi; add byte ptr [eax], al; add bh, al; cmp dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x00151d41: pop esi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0002c2f1: pop esi; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dh, cl; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00029f2e: pop esi; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esi, ecx; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00028dcb: pop esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x6c54579], cl; call dword ptr [eax - 0x73]; 
0x000299fb: pop esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x6c5457a], cl; call dword ptr [eax - 0x73]; 
0x000823cd: pop esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0011f62b: pop esi; add eax, ecx; adc edx, 0; ret; 
0x000f8ab8: pop esi; and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x00156cdd: pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000beb52: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x00196c6c: pop esi; call 0x182d19; add ebx, 0x3e51e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00127a83: pop esi; cld; call dword ptr [eax - 0x73]; 
0x000a6525: pop esi; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00033bba: pop esi; cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x000c3e51: pop esi; cmovg eax, edx; pop edi; ret; 
0x0009f214: pop esi; cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00032903: pop esi; cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x0011c91f: pop esi; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x001500b0: pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x00121484: pop esi; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000734d9: pop esi; jecxz 0x734db; dec dword ptr [ebx - 0x5077b]; jmp dword ptr [ebp - 0x77]; 
0x00081406: pop esi; jmp eax; 
0x000c4a7b: pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x001a544e: pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0009ae28: pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3ba8], ecx; ret; 
0x0003d8eb: pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0008b780: pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0007db36: pop esi; mov eax, ecx; pop edi; ret; 
0x000d6d48: pop esi; mov eax, ecx; ret; 
0x0003336b: pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x000ffb56: pop esi; mov eax, edi; pop edi; ret; 
0x000a95d3: pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00092cea: pop esi; mov eax, edx; ret; 
0x0005a802: pop esi; movzx eax, al; pop edi; ret; 
0x000c3e2d: pop esi; neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0004d029: pop esi; neg eax; pop edi; pop ebp; xor eax, 0x7fffffff; ret; 
0x0013218d: pop esi; neg eax; ret; 
0x0016d61a: pop esi; or byte ptr [ebx + 0xf770ffa], al; add eax, dword ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x0019ec2d: pop esi; pop ebp; pop ebx; ret; 
0x0019ec0e: pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x00127c7f: pop esi; pop ebp; ret; 
0x00129c84: pop esi; pop ebx; jl 0x24ef0; ret; 
0x001080dc: pop esi; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x000b6d41: pop esi; pop ebx; ret; 
0x00129a95: pop esi; pop ebx; test eax, eax; jl 0x24ef0; je 0x129aa2; ret; 
0x00195f72: pop esi; pop edi; call 0x182d19; add ebx, 0x3f117; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195e68: pop esi; pop edi; call 0x182d19; add ebx, 0x3f221; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d61: pop esi; pop edi; call 0x182d19; add ebx, 0x3f328; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f72: pop esi; pop edi; call 0x182d19; add ebx, 0x3ff57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e68: pop esi; pop edi; call 0x182d19; add ebx, 0x40061; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d61: pop esi; pop edi; call 0x182d19; add ebx, 0x40168; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193f92: pop esi; pop edi; call 0x182d19; add ebx, 0x40d77; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193e88: pop esi; pop edi; call 0x182d19; add ebx, 0x40e81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d81: pop esi; pop edi; call 0x182d19; add ebx, 0x40f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00111914: pop esi; pop edi; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0003b715: pop esi; pop edi; fsubp st(1); ret; 
0x0007fa71: pop esi; pop edi; jmp eax; 
0x00194acb: pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00122852: pop esi; pop edi; movzx eax, al; ret; 
0x00184989: pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x00127208: pop esi; pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x00028643: pop esi; pop edi; pop ebp; jmp eax; 
0x0006105d: pop esi; pop edi; pop ebp; mov eax, ecx; ret; 
0x001a0641: pop esi; pop edi; pop ebp; pop ebx; ret; 
0x0019e943: pop esi; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003a71c: pop esi; pop edi; pop ebp; ret 4; 
0x00023464: pop esi; pop edi; pop ebp; ret; 
0x00199a00: pop esi; pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x001a00dd: pop esi; pop edi; pop ebx; ret; 
0x00139de9: pop esi; pop edi; ret 4; 
0x00025553: pop esi; pop edi; ret; 
0x0019f0d0: pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000beb71: pop esi; pop edi; xor eax, eax; ret; 
0x00090cc1: pop esi; push 0x2248e8b; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00090c78: pop esi; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000b0a7e: pop esi; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0004004a: pop esi; ret 4; 
0x00024ba5: pop esi; ret; 
0x00024fd8: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00025065: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00151abc: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x000f8a4c: pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x000fb968: pop esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00052a52: pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00124ede: pop esi; setne al; pop edi; movzx eax, al; ret; 
0x000954d9: pop esi; shl eax, 4; pop edi; pop ebp; ret; 
0x0003abb9: pop esi; shr eax, 0x1f; pop edi; ret; 
0x00122c80: pop esi; stc; call dword ptr [eax + 0x55]; 
0x00136e22: pop esi; stc; call dword ptr [ebx + 0x50]; 
0x000beb1a: pop esi; sub eax, 0x10; pop edi; ret; 
0x0008878d: pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0008d92d: pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x001a5469: pop esi; test al, 0xf0; jne 0x1a54b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0016087e: pop esi; xchg ch, bh; jmp dword ptr [esi - 0x70]; 
0x000bfb52: pop esi; xor eax, eax; pop ebx; ret; 
0x001a0650: pop esi; xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x001a2ed1: pop esi; xor eax, eax; pop edi; ret; 
0x00050f8f: pop esi; xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x0004700b: pop esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0018e924: pop esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00127d7d: pop esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000e5d7b: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000f7902: pop esp; add eax, 0xae80000; mov ah, 8; add byte ptr [ecx + 0x13f509c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x0010b8ef: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00120e82: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx - 0x76f7dbac], cl; add bh, byte ptr [eax + 1]; ret; 
0x00145963: pop esp; add esp, 0x118; pop ebx; ret; 
0x0011b06e: pop esp; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0011b838: pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x00108891: pop esp; and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00096280: pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00126744: pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011dff9: pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00111904: pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b284: pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c334: pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfb4: pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c034: pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdd4: pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c194: pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bff4: pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bec4: pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c204: pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012ad04: pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270f4: pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241c4: pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x001206a4: pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012cfaf: pop esp; and al, 0x10; mov ebx, 0xa; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d66f: pop esp; and al, 0x10; mov ebx, 9; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ad2e1: pop esp; and al, 0x10; mov ecx, edx; and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x71194]; jmp eax; 
0x0012b2ad: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0006042c: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011df79: pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012aa80: pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x000a9719: pop esp; and al, 0x14; cmp ecx, 8; ja 0xa9733; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97d9: pop esp; and al, 0x14; cmp ecx, 8; ja 0xa980b; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x00181881: pop esp; and al, 0x14; jne 0x181890; pop ebx; ret; 
0x0012c99f: pop esp; and al, 0x14; mov ebx, 0x12; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012a823: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e7bbd: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00135f9a: pop esp; and al, 0x18; je 0x135fa8; add esp, 8; pop ebx; ret; 
0x001271f9: pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00129a84: pop esp; and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0011dc29: pop esp; and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011eb3c: pop esp; and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120a9b: pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0012056b: pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c47b: pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011a837: pop esp; and al, 0x20; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011dbf9: pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00110fbb: pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0003c4a6: pop esp; and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0012ab0c: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fc9c: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012509c: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012663c: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012915c: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011be3c: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c80c: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d8ac: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011120b: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00111236: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00108995: pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00120ac6: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120596: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00110fe6: pop esp; and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0009ddb3: pop esp; and al, 0x20; test ebx, ebx; js 0x9dde8; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000d8bfa: pop esp; and al, 0x24; push ebp; push dword ptr [esp + 0x34]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000dbd55: pop esp; and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00127069: pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00126fc9: pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00108cd9: pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00108e6e: pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00108dbe: pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00108f36: pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00108c46: pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00111bd5: pop esp; and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bb36: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011bc2c: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x001254c5: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125d65: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f8346: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84e6: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012b4f5: pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e4997: pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011b60d: pop esp; and al, 0x30; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000e4cb2: pop esp; and al, 0x40; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe4d50; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0011e9eb: pop esp; and al, 0x40; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0012b5f6: pop esp; and al, 0x50; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00111a2b: pop esp; and al, 0x50; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012e98d: pop esp; and al, 0x50; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0011efa5: pop esp; and al, 0x60; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000dbedd: pop esp; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012ada6: pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0012b79b: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012b821: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012b6ff: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000dbf51: pop esp; and al, 0x60; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0011d728: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011d66e: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0013b9f6: pop esp; and al, 0x6c; call dword ptr gs:[0x10]; 
0x0011e81c: pop esp; and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001125eb: pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0008d674: pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0008d674: pop esp; and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000e5ddb: pop esp; and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0011c90f: pop esp; and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012a9ca: pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012c15f: pop esp; and al, 0xc; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c23f: pop esp; and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0012a9f9: pop esp; and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001226cf: pop esp; and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123fff: pop esp; and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0012060f: pop esp; and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd9f: pop esp; and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0006fc46: pop esp; and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x726b4]; add ecx, eax; jmp ecx; 
0x0006f3ca: pop esp; and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x72734]; add ecx, eax; jmp ecx; 
0x00070dc0: pop esp; and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x72834]; add ecx, eax; jmp ecx; 
0x0009075e: pop esp; and al, 0xc; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00150535: pop esp; and al, 0xc; movzx eax, byte ptr [edi]; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x0008d6a3: pop esp; and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012bf47: pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012c283: pop esp; and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012c2c7: pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012a527: pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0012bd73: pop esp; and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0011bdf7: pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012bf23: pop esp; and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012c2f7: pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x001271c3: pop esp; and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012c367: pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012c397: pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012c3c7: pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012c3f3: pop esp; and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x0012be37: pop esp; and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012c0c7: pop esp; and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000e71b3: pop esp; and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0012c1c7: pop esp; and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c3e7: pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x001112c3: pop esp; and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0011f503: pop esp; and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00108d57: pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0011d4b3: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0011d4b3: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011f6c3: pop esp; and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00126f77: pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012c2a3: pop esp; and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00127177: pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00125197: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001116d7: pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00129283: pop esp; and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00129123: pop esp; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012bc63: pop esp; and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00127153: pop esp; and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012c263: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00126cf7: pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010acf3: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012be93: pop esp; and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ed8b3: pop esp; and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001116b3: pop esp; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012bc87: pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012abb3: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012abb3: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00111ed7: pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000ed963: pop esp; and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00124637: pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125147: pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00124663: pop esp; and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00108ba7: pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x001088e7: pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00108913: pop esp; and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00108933: pop esp; and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x00108953: pop esp; and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x001292a7: pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012bcb7: pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012bce7: pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003ca07: pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00110f03: pop esp; and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ec937: pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012b1c3: pop esp; and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012b1a3: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012b1a3: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012c127: pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00126777: pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x00124087: pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00120667: pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0012d7d4: pop esp; and al, 4; mov ebx, 0x10; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d5c4: pop esp; and al, 4; mov ebx, 0x11; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009005c: pop esp; and al, 4; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000603d6: pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000f8306: pop esp; and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0012c42a: pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012befa: pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b78a: pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d51a: pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d02a: pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00110e31: pop esp; and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011133a: pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c09a: pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be0a: pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be6a: pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0011105a: pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0fa: pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f44a: pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012925a: pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf7a: pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc3a: pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0012505a: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd1a: pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd4a: pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bda: pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c06a: pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b7a: pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1fa: pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118ca: pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed93a: pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed90a: pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f7a: pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243ea: pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0012431a: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0012402a: pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0012405a: pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0012063a: pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0012c8f4: pop esp; and al, 8; mov ebx, 5; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003c422: pop esp; and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011bdb2: pop esp; and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000bf213: pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00169ccb: pop esp; call eax; 
0x0007e045: pop esp; cli; jmp dword ptr [esi - 0x70]; 
0x000a6d54: pop esp; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013a94b: pop esp; cmp eax, esi; call dword ptr [eax - 0x73]; 
0x000d7d90: pop esp; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000254c1: pop esp; fcom dword ptr [0x194f0500]; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0xa4]; add eax, dword ptr gs:[0]; ret; 
0x000ca3d4: pop esp; idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000a9d22: pop esp; imul esp, edi, -1; cmove eax, edx; ret; 
0x001727a2: pop esp; in eax, 0xf3; dec dword ptr [ebp - 0xcdb434a]; call dword ptr [ebp - 0x73]; 
0x0015e39f: pop esp; ja 0x15e394; call dword ptr [eax - 0x18]; 
0x0009f337: pop esp; ja 0x9f320; call dword ptr [eax + 0x57]; 
0x00024fea: pop esp; jg 0x24fe6; call dword ptr [eax - 0x18]; 
0x0002507d: pop esp; jg 0x25079; call dword ptr [eax - 0x18]; 
0x000250de: pop esp; jg 0x250da; call dword ptr [eax - 0x18]; 
0x0002512a: pop esp; jg 0x25126; call dword ptr [eax - 0x18]; 
0x00160d73: pop esp; jge 0x160d67; call dword ptr [eax - 0x73]; 
0x00160e25: pop esp; jge 0x160e19; call dword ptr [eax - 0x73]; 
0x00160ee7: pop esp; jge 0x160edb; call dword ptr [eax - 0x73]; 
0x000be19a: pop esp; jle 0xbe1ad; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009f3b5: pop esp; js 0x9f39e; call dword ptr [eax + 0x57]; 
0x0016ab90: pop esp; lahf; in al, dx; call dword ptr [esi - 0x17]; 
0x0014b8ba: pop esp; mov ch, 0xe; add byte ptr [ebx - 0x77], dl; ret; 
0x00110dc7: pop esp; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x00172f8d: pop esp; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x001a4a69: pop esp; mov eax, 0x10; pop edi; ret; 
0x00029be9: pop esp; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c71b: pop esp; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0005d0f9: pop esp; mov edi, ecx; call dword ptr [eax - 0x18]; 
0x00126ec1: pop esp; mov esi, 0x4f050005; call dword ptr [eax]; 
0x001125e5: pop esp; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0018cf27: pop esp; or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x001416dd: pop esp; or al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0018cf2b: pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x000ec0c4: pop esp; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000dc0c5: pop esp; pop dword ptr [edx]; jbe 0xdc0d0; mov eax, edx; ret; 
0x00028641: pop esp; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003aaf8: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00029cbd: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008f84b: pop esp; pop es; sub byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0013492e: pop esp; push ds; adc byte ptr [ecx], bh; ret 0x820f; 
0x00135191: pop esp; push ds; or al, 0x39; ret 0x820f; 
0x00028463: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002c717: pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00028fb8: pop esp; push dword ptr [esp + 0x64]; call edi; 
0x00150b03: pop esp; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0014c7ab: pop esp; ret 0x8904; 
0x00181f48: pop esp; ret; 
0x000d700b: pop esp; sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x00122b21: pop esp; stc; call dword ptr [eax + 0x55]; 
0x0010adab: pop esp; sub edx, dword ptr gs:[0x14]; jne 0x10ae5b; add esp, 0x68; pop ebx; ret; 
0x00046b61: pop esp; xchg dword ptr [ebx + eax*4], eax; ret; 
0x0006f130: pop esp; xchg ebp, eax; add byte ptr [ecx], al; ret; 
0x001438ba: pop esp; xor eax, 0x8953000f; ret; 
0x00093cca: pop gs; add byte ptr [eax], al; add byte ptr [eax + 0xf], al; test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x00122c9a: pop si; stc; call dword ptr [eax + 0x55]; 
0x0017bac5: pop ss; aam 0xfb; jmp dword ptr [esi - 0x70]; 
0x0005d18b: pop ss; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor dword ptr [esi], 0x41; stc; call dword ptr [eax - 0x18]; 
0x00059fc3: pop ss; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0004c72b: pop ss; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x00030ed1: pop ss; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x0003ff1b: pop ss; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0009d922: pop ss; add dword ptr [eax], eax; add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x000425b8: pop ss; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000d94f8: pop ss; add esp, 0x38; pop ebx; ret; 
0x0011ca9e: pop ss; add esp, 0x74; pop ebx; pop esi; ret; 
0x0005e816: pop ss; add esp, 0x78; pop ebx; ret; 
0x000bebb8: pop ss; bsf ecx, ecx; sub edx, ecx; jbe 0xbebf0; add eax, ecx; ret; 
0x0003ebea: pop ss; cmp edx, 1; jg 0x3ecb0; call eax; 
0x0015e7c5: pop ss; cmpsd dword ptr [esi], dword ptr es:[edi]; std; jmp dword ptr [esi - 0x70]; 
0x00195f7b: pop ss; int1; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b7077: pop ss; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8bf7: pop ss; lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000b88e3: pop ss; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000b88f5: pop ss; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000b8923: pop ss; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x001a5498: pop ss; lea eax, [edi - 0x10]; pop edi; ret; 
0x000b7621: pop ss; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000d6e98: pop ss; mov cl, dl; and cl, 0xf; je 0xd6ec0; ret; 
0x001713e3: pop ss; mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000be67a: pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb1d7: pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7631: pop ss; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000a2a92: pop ss; or eax, 0x8d500000; xchg eax, ebx; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0003ce01: pop ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b7243: pop ss; pop edi; pop esi; pop ebx; ret; 
0x001513ff: pop ss; pop edx; push cs; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0003e824: pop ss; push dword ptr [ebx + 4]; call eax; 
0x0014e665: pop ss; push edi; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0008da85: pop ss; push edi; stc; jmp dword ptr [ebp - 0x39]; 
0x0014eb65: pop ss; push edx; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0019f339: pop ss; ret 0x2c73; 
0x0019fcfa: pop ss; ret 0x3273; 
0x0019f324: pop ss; ret 0x3e73; 
0x0019fce0: pop ss; ret 0x4c73; 
0x0019f30f: pop ss; ret 0x5073; 
0x0019f2fa: pop ss; ret 0x6273; 
0x0019fcc6: pop ss; ret 0x6673; 
0x0019ec95: pop ss; ret 0x830f; 
0x0008ae10: pop ss; ret; 
0x0012f774: pop ss; stc; call dword ptr [eax + 0x6a]; 
0x0007ab50: pop ss; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000ee40f: pop ss; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f550f: pop ss; sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x001a5238: pop ss; test dh, 0xf; jne 0x1a52a0; lea eax, [ecx + 0xc]; ret; 
0x0017b7c5: pop ss; xlatb; sti; jmp dword ptr [esi - 0x70]; 
0x0018e3e4: popal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b52cb: popal; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00194e71: popal; add byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00144410: popal; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0007d61b: popal; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00194c71: popal; add eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ce63d: popal; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0007d972: popal; cli; jmp dword ptr [esi - 0x70]; 
0x000a6da5: popal; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0016e9e7: popal; in al, dx; call dword ptr [eax - 0x73]; 
0x0014cfcb: popal; in eax, dx; jmp dword ptr [ebp - 0x77]; 
0x0017a92d: popal; jbe 0x17a929; call dword ptr [eax - 0x18]; 
0x0017ae0e: popal; jbe 0x17ae0a; call dword ptr [eax - 0x18]; 
0x000b18f3: popal; jmp dword ptr [esi + 0xf]; 
0x0015f950: popal; jno 0x15f94c; call dword ptr [eax - 0x18]; 
0x0013e928: popal; out dx, eax; call dword ptr [ebx + 0x50]; 
0x0009c9c6: popal; push ecx; stc; call dword ptr [eax - 0x73]; 
0x0006930b: popal; ret; 
0x00122b3c: popal; stc; call dword ptr [eax + 0x55]; 
0x00122e07: popal; stc; call dword ptr [edx + 0x52]; 
0x0018f7b4: popal; xor eax, 0xc381ffff; fmul dword ptr [ebp + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00169112: popfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x0011b68f: popfd; imul edi, edi, 0x18c483ff; pop ebx; ret; 
0x00146669: popfd; je 0x1466d7; stc; call dword ptr [ebx - 0x18]; 
0x0015d877: popfd; jo 0x15d873; call dword ptr [eax - 0x18]; 
0x00058666: popfd; mov al, byte ptr [0x89ffffc9]; ret; 
0x000d4c35: popfd; mov esp, 0xe9ffffc9; cmp esp, 0xa40fffff; ret 0xc102; 
0x000b8f6e: popfd; or al, 0; add ecx, 0x10cf2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000d40e0: popfd; ror cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000d594b: popfd; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x000d3ff4: popfd; ror cl, 0xff; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x000721ff: popfd; sar dl, 0xff; dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x00138a4f: popfd; stc; sti; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x0015f12f: popfd; std; jmp dword ptr [esi - 0x70]; 
0x0002b6df: popfd; xchg byte ptr [eax], al; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0016fc3f: popfd; xchg edx, eax; cld; jmp dword ptr [esi - 0x70]; 
0x0017220f: por mm7, mm7; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000bb0c6: psllq mm1, qword ptr [edi]; jg 0xbb0cb; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb148: psllq mm1, qword ptr [edi]; jg 0xbb14d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb248: psllq mm1, qword ptr [edi]; jg 0xbb24d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0018947f: psubb mm7, mm7; add esp, 0x2c; ret; 
0x0010d40c: psubw mm7, mm7; jmp eax; 
0x001a5c04: punpckhwd mm0, mm0; add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0019f243: punpcklbw mm0, dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00174232: push -0x11; ljmp 0x868d:0xcc483ff; call 0x6b173c08; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0016e0c5: push -0x14; call dword ptr [eax - 0x73]; 
0x000a9bd0: push -0x19; push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6b86c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000e5832: push -0x27; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0016612a: push -0x35; stc; jmp dword ptr [esi - 0x77]; 
0x0011b1e0: push -0x64; call 0x111700; add esp, 0x1c; ret; 
0x0011b68c: push -0x64; call 0x112030; add esp, 0x18; pop ebx; ret; 
0x0011b6b0: push -0x64; call 0x112200; add esp, 0x1c; ret; 
0x0012ba98: push -0x64; call 0x11b810; add esp, 0x20; add esp, 0xc; ret; 
0x0011b803: push -0x64; call 0x11b810; add esp, 0x2c; ret; 
0x0013d055: push -0x7d; in al, dx; or byte ptr [ebp - 0x7d37d], cl; call dword ptr [eax + 0x6a]; 
0x0010df83: push -0x7d; sti; add cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x000b9214: push -0xa; ret 0x7520; 
0x000b9219: push -0xa; ret 0x7540; 
0x001893df: push -0xd; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0014d9c9: push -0xf; call dword ptr [ebx + 0x50]; 
0x0010ad5f: push -1; call 0x10ae60; add esp, 0x1c; ret; 
0x0010ad39: push -1; call 0x10b230; add esp, 0x1c; ret; 
0x0018c300: push -1; inc dword ptr [ecx + 0x47e0dc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018c244: push -1; inc dword ptr [ecx + 0x47ec9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00080fe5: push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008750d: push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00060561: push -1; push dword ptr [esp + 0x2c]; call 0x7d3a0; add esp, 0x2c; ret; 
0x00174ea0: push -1; push ebp; push esi; call edi; 
0x001624bf: push -3; jmp dword ptr [esi - 0x70]; 
0x0007cf75: push -6; jmp dword ptr [esi - 0x70]; 
0x00142837: push -7; call dword ptr [eax + 0x51]; 
0x0014320d: push -7; call dword ptr [eax + 0x53]; 
0x00142ae4: push -7; call dword ptr [eax + 0x68]; 
0x00142413: push -7; call dword ptr [eax - 0x18]; 
0x0012bb99: push 0; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00108d85: push 0; call 0x108d50; add esp, 0x1c; ret; 
0x001292d7: push 0; call 0x129520; add esp, 0x1c; ret; 
0x00163844: push 0; call 0x150d90; add esp, 0x1c; ret; 
0x00163853: push 0; call 0x150e60; add esp, 0x1c; ret; 
0x00034b39: push 0; call 0x34af0; add esp, 0x1c; ret; 
0x00036111: push 0; call 0x360b0; add esp, 0x2c; ret; 
0x0003ccb3: push 0; call 0x3c5a0; add esp, 0x1c; ret; 
0x0016ff17: push 0; call 0x785b0; add esp, 0x18; pop ebx; ret; 
0x0008e17b: push 0; call 0x8d730; add esp, 0x1c; ret; 
0x000c13a6: push 0; call 0xc18c0; add esp, 0x1c; ret; 
0x000e48a7: push 0; call 0xe4970; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00136628: push 0; call eax; 
0x000c22e7: push 0; lea eax, [esp + 0x44]; push eax; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x00108d83: push 0; push 0; call 0x108d50; add esp, 0x1c; ret; 
0x00025cc6: push 0; push 0; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x00124525: push 0; push 0; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x00025cc8: push 0; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x0007a3be: push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00087147: push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00184529: push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00086b04: push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00087f76: push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x0008ac3c: push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x00082026: push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00081ddd: push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00136a52: push 0; push 0x1000001; call eax; 
0x00136bf0: push 0; push 0x1000002; call edx; 
0x0013645f: push 0; push 0x1000003; call eax; 
0x00136b3c: push 0; push 0x1000004; call eax; 
0x00136695: push 0; push 0x1000005; call edx; 
0x0013695b: push 0; push 0x1000006; call ecx; 
0x00136705: push 0; push 0x1000007; call eax; 
0x00132d0f: push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00132ae9: push 0; push 0x2000004; call eax; 
0x000994c7: push 0; push 1; push eax; call 0x8d370; add esp, 0x2c; ret; 
0x00082807: push 0; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0014f7e3: push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x0010ad33: push 0; push dword ptr [esp + 0x18]; push -1; call 0x10b230; add esp, 0x1c; ret; 
0x001724b1: push 0; push dword ptr [esp + 0x1c]; call 0x172320; add esp, 0x10; add esp, 0xc; ret; 
0x0003e243: push 0; push dword ptr [esp + 0x1c]; call 0x3d9e0; add esp, 0x1c; ret; 
0x0003e278: push 0; push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x00182e23: push 0; push dword ptr [esp + 0x1c]; call 0x3e4b0; add esp, 0x1c; ret; 
0x0003d903: push 0; push dword ptr [esp + 0x1c]; call 0x463f0; add esp, 0x1c; ret; 
0x0003d965: push 0; push dword ptr [esp + 0x1c]; call 0x50a00; add esp, 0x1c; ret; 
0x00124449: push 0; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x00083cd7: push 0; push dword ptr [esp + 0x1c]; call 0x7cf80; add esp, 0x1c; ret; 
0x000953b3: push 0; push dword ptr [esp + 0x1c]; call 0x94a30; add esp, 0x18; pop ebx; ret; 
0x0009cfa7: push 0; push dword ptr [esp + 0x1c]; call 0x9d570; add esp, 0x1c; ret; 
0x000a6393: push 0; push dword ptr [esp + 0x1c]; call 0xbfec0; add esp, 0x18; pop ebx; ret; 
0x0003d1c3: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d150; add esp, 0x1c; ret; 
0x00046406: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x46d60; add esp, 0x1c; ret; 
0x00050877: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4dce0; add esp, 0x1c; ret; 
0x0007d7d3: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a9f0; add esp, 0x1c; ret; 
0x000c7d07: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc5440; add esp, 0x1c; ret; 
0x000cb516: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcbde0; add esp, 0x1c; ret; 
0x000986a9: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x92d50; add esp, 0x2c; ret; 
0x000c40c5: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c1cf5: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00184e82: push 0; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c2065: push 0; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0011a6dc: push 0; push eax; call 0x11d620; add esp, 0x10; add esp, 0xc; ret; 
0x00025cca: push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x0007a3c0: push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007cc5f: push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0016a8ec: push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00087149: push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0018452b: push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00086b06: push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00127e53: push 0; push ebx; call esi; 
0x00028fae: push 0; push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0008bbea: push 0; push ecx; push edx; call 0x17dfa0; add esp, 0x1c; ret; 
0x0017403d: push 0; push edi; call dword ptr [eax + 0x14]; 
0x0016f5e9: push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000c1f4b: push 0; push edi; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0014f40b: push 0; push edi; push ebx; call edx; 
0x0008813c: push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0003e648: push 0; push edx; call eax; 
0x0016923b: push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x00081a51: push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00087c38: push 0; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x0016890c: push 0; push esi; call dword ptr [eax + 0x14]; 
0x00087f78: push 0; push esi; call dword ptr [eax + 0x40]; 
0x0008ac3e: push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x00082028: push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00079f0b: push 0; push esi; call dword ptr [ebx + 8]; 
0x00081ddf: push 0; push esi; call dword ptr [edi + 0x40]; 
0x00136a54: push 0x1000001; call eax; 
0x00136bf2: push 0x1000002; call edx; 
0x00136461: push 0x1000003; call eax; 
0x00136b3e: push 0x1000004; call eax; 
0x00136697: push 0x1000005; call edx; 
0x0013695d: push 0x1000006; call ecx; 
0x00136707: push 0x1000007; call eax; 
0x0012481f: push 0x1018; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x0010c082: push 0x10768e8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [eax - 0x77]; ret 0xc085; 
0x0007bec3: push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0008c136: push 0x1fff8e9; salc; jmp esi; 
0x0010ee40: push 0x1fff913; int1; jmp ecx; 
0x000f0022: push 0x1fffffb; rol byte ptr [ecx], 1; ret; 
0x001328a1: push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00132d11: push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00133826: push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00132aeb: push 0x2000004; call eax; 
0x00134b27: push 0x2000005; call dword ptr [ebx + 0x14]; 
0x001335fa: push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0016a23f: push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00090cc2: push 0x2248e8b; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00174863: push 0x2260; push 0x2260; push dword ptr [esp + 0x1c]; call 0x1745a0; add esp, 0x1c; ret; 
0x00174868: push 0x2260; push dword ptr [esp + 0x1c]; call 0x1745a0; add esp, 0x1c; ret; 
0x001112a7: push 0x241; push dword ptr [esp + 0x1c]; call 0x11b970; add esp, 0x1c; ret; 
0x00182548: push 0x24448909; and al, 0x89; ret; 
0x00092e35: push 0x24448b52; adc byte ptr [ebp - 0x1a40d380], cl; call dword ptr [eax - 0x73]; 
0x0009b972: push 0x244c8951; sbb al, 0xe8; ret; 
0x000dd8ae: push 0x2474ff50; sub byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [edx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x000dd816: push 0x2474ff50; sub byte ptr [ebx - 0x72dbdbbc], cl; sbb byte ptr [ecx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x00138baa: push 0x27838d50; push eax; stc; call dword ptr [eax - 0x18]; 
0x0017f56b: push 0x28; push edi; call eax; 
0x00194d6a: push 0x3000401; sbb al, 0x8b; jmp ebx; 
0x0019292a: push 0x3000421; sbb al, 0x8b; jmp ebx; 
0x00191e2a: push 0x300042c; sbb al, 0x8b; jmp ebx; 
0x001900aa: push 0x3000447; sbb al, 0x8b; jmp ebx; 
0x0018eb2a: push 0x300045a; sbb al, 0x8b; jmp ebx; 
0x000823fc: push 0x3190c1eb; rol byte ptr [ebp - 0x3f6af02e], 0x3b; sahf; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x0012cc86: push 0x38247c89; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00097093: push 0x39000000; ret 0x6574; 
0x000977de: push 0x39000000; ret 0x6a74; 
0x00096706: push 0x39000000; ret 0x7274; 
0x0009647d: push 0x39000000; ret 0x840f; 
0x00095bd6: push 0x39000000; ret 0x850f; 
0x0006b148: push 0x39fffffa; ret 0x840f; 
0x0015c9cf: push 0x400; call 0x231a8; mov dword ptr [ebx + 0xa220], eax; add esp, 0x18; pop ebx; ret; 
0x0015d5af: push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x00090d1e: push 0x4f; stc; call dword ptr [eax - 0x73]; 
0x0011ec07: push 0x540b; push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x1c; ret; 
0x0011eb08: push 0x5410; push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x1c; ret; 
0x0014b90b: push 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x0009e15c: push 0x5b4cc483; pop esi; pop edi; pop ebp; ret; 
0x000f7dd6: push 0x65759123; ret; 
0x0016e282: push 0x68; in al, dx; call dword ptr [eax - 0x73]; 
0x0008e673: push 0x80; push dword ptr [esp + 0x1c]; call 0x8e5a0; add esp, 0x18; pop ebx; ret; 
0x0008e957: push 0x80; push dword ptr [esp + 0x1c]; call 0x8e8a0; add esp, 0x1c; ret; 
0x00097c63: push 0x80; push dword ptr [esp + 0x1c]; call 0x97c20; add esp, 0x18; pop ebx; ret; 
0x000b56c5: push 0x80fffffe; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x001393b1: push 0x81000499; ret 0xda5f; 
0x00137bb1: push 0x810004b1; ret 0xf25f; 
0x001245b1: push 0x810005e7; ret 0x285f; 
0x001204b1: push 0x81000628; ret 0x695f; 
0x00110eb1: push 0x8100071e; ret 0x5f5f; 
0x00108cb1: push 0x810007a0; ret 0xe15f; 
0x000c09b1: push 0x81000c23; ret 0x645f; 
0x000a9cb1: push 0x81000d90; ret 0xd15f; 
0x000a9bb1: push 0x81000d91; ret 0xd25f; 
0x000a7ab1: push 0x81000db2; ret 0xf35f; 
0x00090d93: push 0x818d3675; mov cl, byte ptr [edi - 7]; call dword ptr [edx + 0x50]; 
0x00190fad: push 0x81ffff1d; ret; 
0x0018efad: push 0x81ffff3d; ret; 
0x0003eb1c: push 0x83000001; in al, dx; or byte ptr [ecx - 1], dl; je 0x3eb4b; dec esp; call eax; 
0x00079f04: push 0x83000002; in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x00042264: push 0x83001639; les ebx, ptr [eax]; pop ebx; ret; 
0x0013a7bf: push 0x868dfff9; sub ch, byte ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x0008c20e: push 0x89000001; inc ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000dac8b: push 0x8900003e; ret 0xc085; 
0x000999e4: push 0x890006ef; xor dword ptr [edx + eax - 0x3b7d0000], 0x18; pop ebx; ret; 
0x0010996d: push 0x89fff90c; ret 0x848d; 
0x0006b140: push 0x89fffffa; ret 0x858b; 
0x00136e9d: push 0x89ffffff; inc ebp; mov word ptr [ecx - 0x11f73], cs; call dword ptr [ecx - 1]; 
0x0007a57d: push 0x89ffffff; ret; 
0x0014c7a6: push 0x8b000001; pop esp; ret 0x8904; 
0x00090c79: push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0017785d: push 0x8bffffff; inc ebp; sbb byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000a2107: push 0x8dfffff8; xchg dword ptr [ecx + ebp*4], ecx; stc; call dword ptr [eax + 0x68]; 
0x0002fe56: push 0x8dffffff; or eax, 0xffffff82; stc; call dword ptr [eax - 0x73]; 
0x0013fbd2: push 0x97401f4; add esp, 4; pop ebx; pop esi; ret; 
0x00129657: push 0xa0828b; add byte ptr [eax], al; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00167934: push 0xa; call 0x150d90; add esp, 0x1c; ret; 
0x00167943: push 0xa; call 0x150e60; add esp, 0x1c; ret; 
0x0003d963: push 0xa; push 0; push dword ptr [esp + 0x1c]; call 0x50a00; add esp, 0x1c; ret; 
0x00093077: push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0009e8bd: push 0xc4830008; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009ff7c: push 0xc4830008; adc byte ptr [ebx + 0x974fff8], al; add esp, 0xc; ret; 
0x0003bed0: push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x00171a3d: push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x001abf7f: push 0xe9ffffff; ret 0xfff1; 
0x00082409: push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x001843cb: push 0xf000001; xchg esp, eax; ret 0xd008; 
0x00079f56: push 0xf000001; xchg esp, eax; ret 0xd009; 
0x0015844c: push 0xf00000f; mov dh, 0x5a; or dh, dh; ret; 
0x001843b1: push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00024f29: push 1; call 0x11d890; add esp, 0x1c; ret; 
0x00163c94: push 1; call 0x150d90; add esp, 0x1c; ret; 
0x00163ca3: push 1; call 0x150e60; add esp, 0x1c; ret; 
0x00087145: push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00184639: push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00087f74: push 1; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00082024: push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00083cd5: push 1; push 0; push dword ptr [esp + 0x1c]; call 0x7cf80; add esp, 0x1c; ret; 
0x00189543: push 1; push dword ptr [esp + 0x1c]; call 0x111930; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00145763: push 1; push dword ptr [esp + 0x1c]; call 0x145690; add esp, 0x1c; ret; 
0x00095fa3: push 1; push dword ptr [esp + 0x1c]; call 0x95e60; add esp, 0x1c; ret; 
0x0007aad3: push 1; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a9f0; add esp, 0x1c; ret; 
0x00117c5c: push 1; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0003be90: push 1; push dword ptr [esp + 8]; call 0x3be10; pop ecx; pop edx; ret; 
0x00147e18: push 1; push eax; call 0x147d20; add esp, 0x18; pop ebx; ret; 
0x00098789: push 1; push eax; call 0x8d370; add esp, 0x28; pop ebx; ret; 
0x000994c9: push 1; push eax; call 0x8d370; add esp, 0x2c; ret; 
0x0016906f: push 1; push ebx; call dword ptr [eax]; 
0x00078dc9: push 1; push ebx; call eax; 
0x00127e67: push 1; push ebx; call esi; 
0x00081773: push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00184bdd: push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x00079780: push 1; push esi; call edx; 
0x00163f94: push 2; call 0x150d90; add esp, 0x1c; ret; 
0x00163fa3: push 2; call 0x150e60; add esp, 0x1c; ret; 
0x0017d26d: push 2; lea eax, [eax - 0x6893c]; push eax; call 0x11b880; add esp, 0x1c; ret; 
0x0007a3bc: push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00184527: push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00086b02: push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00081ddb: push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0013e9c3: push 2; push dword ptr [esp + 0x1c]; call 0x13dd70; add esp, 0x1c; ret; 
0x00117f9f: push 2; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0016538b: push 2; push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x00169198: push 2; push ebx; call dword ptr [eax]; 
0x00127e7a: push 2; push ebx; call esi; 
0x00165024: push 3; call 0x150d90; add esp, 0x1c; ret; 
0x00165033: push 3; call 0x150e60; add esp, 0x1c; ret; 
0x00087143: push 3; push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00184637: push 3; push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00184525: push 3; push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00127eab: push 3; push ebx; call edx; 
0x001727b3: push 3; push edi; call dword ptr [eax]; 
0x001662f4: push 4; call 0x150d90; add esp, 0x1c; ret; 
0x00166303: push 4; call 0x150e60; add esp, 0x1c; ret; 
0x0017196b: push 4; push eax; call dword ptr [edx + 0x14]; 
0x0016923e: push 4; push ebx; call dword ptr [eax]; 
0x0012e512: push 5; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00166954: push 5; call 0x150d90; add esp, 0x1c; ret; 
0x00166963: push 5; call 0x150e60; add esp, 0x1c; ret; 
0x00034b33: push 5; push dword ptr [esp + 0x18]; push 0; call 0x34af0; add esp, 0x1c; ret; 
0x00034b13: push 5; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x34af0; add esp, 0x1c; ret; 
0x00117e80: push 5; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x001696be: push 5; push ebx; call dword ptr [eax]; 
0x0013732a: push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x00166ca4: push 6; call 0x150d90; add esp, 0x1c; ret; 
0x00166cb3: push 6; call 0x150e60; add esp, 0x1c; ret; 
0x0017197e: push 6; push eax; call dword ptr [edx + 0x14]; 
0x000c2415: push 7; add al, ch; ret; 
0x00167e94: push 7; call 0x150d90; add esp, 0x1c; ret; 
0x00167ea3: push 7; call 0x150e60; add esp, 0x1c; ret; 
0x001672f4: push 8; call 0x150d90; add esp, 0x1c; ret; 
0x00167303: push 8; call 0x150e60; add esp, 0x1c; ret; 
0x00169f53: push 8; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x175610; add esp, 0x1c; ret; 
0x0016ed1f: push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016a2f1: push 8; push edi; call dword ptr [eax + 0x18]; 
0x001676a4: push 9; call 0x150d90; add esp, 0x1c; ret; 
0x001676b3: push 9; call 0x150e60; add esp, 0x1c; ret; 
0x00193e92: push cs; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fb912: push cs; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x0009e653: push cs; add byte ptr [0x1987bf], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x394], edx; ret; 
0x0009e5c3: push cs; add byte ptr [0x19884f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x358], edx; ret; 
0x0009e5a3: push cs; add byte ptr [0x19886f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x35c], edx; ret; 
0x0009e553: push cs; add byte ptr [0x1988bf], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0009d283: push cs; add byte ptr [0x199b8f], al; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x00093ae3: push cs; add byte ptr [0x1a332f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00093ac3: push cs; add byte ptr [0x1a334f], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x001727cb: push cs; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x0012e106: push cs; add byte ptr [eax], al; add byte ptr [ecx + 0x100bafe], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00103b84: push cs; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x0006f6ea: push cs; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0008b15d: push cs; add byte ptr [eax], al; ret; 
0x00039e62: push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0005083e: push cs; add byte ptr [ebx - 0x72d7db84], cl; xchg dword ptr [eax - 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x00049818: push cs; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x0004ca05: push cs; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x0014b8bc: push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x00151401: push cs; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0009f674: push cs; add byte ptr [ecx + 0x19779ec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0009e6b5: push cs; add byte ptr [ecx + 0x19875dc2], al; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0009e673: push cs; add byte ptr [ecx + 0x19879fc1], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x0009e623: push cs; add byte ptr [ecx + 0x1987efc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x9e640; ret; 
0x0009e5e3: push cs; add byte ptr [ecx + 0x19882fc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x9e600; ret; 
0x000a2679: push cs; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ec8e0: push cs; add esp, 0x1c; ret; 
0x001720bb: push cs; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001387d6: push cs; add esp, 0x2c; ret; 
0x00182e91: push cs; add esp, 8; pop ebx; ret; 
0x0007ab69: push cs; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00025fb7: push cs; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025fd7: push cs; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000bfe44: push cs; call ecx; 
0x0009f32e: push cs; clc; inc dword ptr [ebx - 0x7972f33c]; pop esp; ja 0x9f320; call dword ptr [eax + 0x57]; 
0x000830f5: push cs; cli; jmp dword ptr [esi - 0x70]; 
0x000b6137: push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000d6b4c: push cs; cmp dword ptr [edi], ecx; jne 0xd6ca0; pop edi; pop esi; ret; 
0x000a61b5: push cs; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x00120ed9: push cs; cmp ecx, edx; jne 0x120ed0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0010ed64: push cs; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0008bda6: push cs; dec edi; stc; call dword ptr [ecx + 0x52]; 
0x000e5489: push cs; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x001a38f2: push cs; jb 0x1a3910; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a4912: push cs; jb 0x1a4930; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a3fb2: push cs; jl 0x1a3fd0; lea eax, [ecx + 0xe]; ret; 
0x0003b451: push cs; jne 0x3b460; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x000b0f09: push cs; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1339: push cs; jne 0xb10e1; pop ebx; ret; 
0x000b580a: push cs; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b858a: push cs; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000b8b41: push cs; lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000b8c51: push cs; lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000b0f06: push cs; lea ecx, [edx + 0xe]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1336: push cs; lea ecx, [edx + 0xe]; jne 0xb10e1; pop ebx; ret; 
0x00085cd9: push cs; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007dca1: push cs; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000d5c6e: push cs; loope 0xd5c66; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x000baf41: push cs; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0016a5b1: push cs; mov eax, 2; pop ebx; pop esi; ret; 
0x000be5b4: push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001a47a1: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000bb131: push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00034a81: push cs; mov eax, edx; add esp, 0xc; ret; 
0x0005f931: push cs; mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x000baf22: push cs; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb228: push cs; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb128: push cs; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00036e20: push cs; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77d80]; add esi, edi; jmp esi; 
0x00036de5: push cs; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77dd4]; add esi, edi; jmp esi; 
0x00036d1d: push cs; movzx eax, al; mov esi, dword ptr [edi + eax*4 - 0x77e7c]; add esi, edi; jmp esi; 
0x0019f2c1: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000875d9: push cs; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0008b5d0: push cs; or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00124e79: push cs; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0008fbc1: push cs; pop ebx; pop esi; pop edi; ret; 
0x00194780: push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019309a: push cs; pop edi; call 0x182d19; add ebx, 0x419ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190faa: push cs; pop edi; call 0x182d19; add ebx, 0x4385f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018efaa: push cs; pop edi; call 0x182d19; add ebx, 0x455df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b7461: push cs; pop edi; pop esi; pop ebx; ret; 
0x000b3484: push cs; pop edi; ret; 
0x00024e20: push cs; push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x000b35e4: push cs; ret; 
0x0019f0c0: push cs; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0019edcc: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x000b5834: push cs; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb5531; pop ebx; ret; 
0x000a4821: push cs; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0010836e: push cs; test ecx, ecx; je 0x10838c; cmp byte ptr [esp + 0x17], 0; jne 0x108420; call ecx; 
0x00081a36: push cs; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x00087c23: push cs; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x000ed591: push di; stc; call dword ptr [eax - 0x73]; 
0x0013492f: push ds; adc byte ptr [ecx], bh; ret 0x820f; 
0x00192beb: push ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000dc0bb: push ds; add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x000dbdab: push ds; add esp, 0x24; pop ebx; pop esi; ret; 
0x00024f47: push ds; and dword ptr [eax], eax; lea eax, [eax - 0x680ac]; ret; 
0x00024f67: push ds; and dword ptr [eax], eax; lea eax, [eax - 0x680b4]; ret; 
0x0009608c: push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003b91d: push ds; and eax, edx; ret; 
0x00195c2b: push ds; cli; jmp dword ptr [esi - 0x70]; 
0x00196c74: push ds; in eax, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b71c7: push ds; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b886a: push ds; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x0013b4c6: push ds; lea esi, cs:[esi]; nop; mov eax, 6; call dword ptr gs:[0x10]; 
0x00182b89: push ds; ljmp 0x9403:0xc0b60fff; sub byte ptr [eax + edi - 7], 0xff; jmp edx; 
0x00129b30: push ds; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x00098cde: push ds; mov ecx, 0xc4830008; adc byte ptr [ebp - 0x16588a40], al; ret 0xfffe; 
0x0009b45e: push ds; mov ecx, edi; dec dword ptr [ebp - 0x6672f7b]; call dword ptr [eax + 0x68]; 
0x00135192: push ds; or al, 0x39; ret 0x820f; 
0x0011df91: push ds; pop ebx; pop esi; pop edi; ret; 
0x0003ab57: push ds; pop edi; pop ebp; not eax; and eax, edx; ret; 
0x000b8c54: push ds; pop edi; pop esi; pop ebx; ret; 
0x001624be: push ds; push -3; jmp dword ptr [esi - 0x70]; 
0x000830f4: push ds; push cs; cli; jmp dword ptr [esi - 0x70]; 
0x000a4190: push ds; push esp; stc; call dword ptr [eax - 0x18]; 
0x0012452e: push ds; ret 0xfff3; 
0x001357ae: push ds; ret 0xffff; 
0x000d6f6b: push ds; ret; 
0x001282f1: push ds; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x0002fe98: push dword ptr [eax + 0x10e4]; call 0x128960; add esp, 0x1c; ret; 
0x00168578: push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016f2e4: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016f2e4: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000882ff: push dword ptr [eax + 0x38]; call 0x11b5e0; add esp, 0x18; pop ebx; ret; 
0x001700b7: push dword ptr [eax + 0x98]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x001766fd: push dword ptr [eax + 0xc]; call 0x833f0; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0009a008: push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000d7d0d: push dword ptr [eax + 4]; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x001176a7: push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00147988: push dword ptr [eax + esi - 0x75]; test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00182e1d: push dword ptr [eax - 0x18b4]; push 0; push dword ptr [esp + 0x1c]; call 0x3e4b0; add esp, 0x1c; ret; 
0x00110c4d: push dword ptr [eax - 0x77]; ret 0xbc8d; 
0x0010c08d: push dword ptr [eax - 0x77]; ret 0xc085; 
0x0008e213: push dword ptr [eax]; call 0x231a0; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0005a5ae: push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x0005a1ee: push dword ptr [eax]; call 0x653a0; add esp, 0x1c; ret; 
0x0007ed4d: push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x0007edae: push dword ptr [eax]; call 0x71620; add esp, 0x1c; ret; 
0x000379be: push dword ptr [eax]; call 0xbf640; add esp, 0x1c; ret; 
0x000d7d10: push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x000c1694: push dword ptr [eax]; call edi; 
0x001283b8: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000379b8: push dword ptr [eax]; mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xbf640; add esp, 0x1c; ret; 
0x00137178: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x135900; add esp, 0x1c; ret; 
0x000a7ce4: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa7d00; add esp, 0x1c; ret; 
0x000c25e4: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2600; add esp, 0x1c; ret; 
0x000e7b53: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xe7b70; add esp, 0x1c; ret; 
0x000e7c13: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xe8090; add esp, 0x1c; ret; 
0x00042a42: push dword ptr [eax]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x42a80; add esp, 0x2c; ret; 
0x0007d0a9: push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0012f3a7: push dword ptr [ebp + 0x38]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00170d9c: push dword ptr [ebp + 0x50]; push edi; call dword ptr [eax + 0x14]; 
0x001382bb: push dword ptr [ebp + 0xa]; pop ebx; pop esi; pop edi; ret; 
0x0007d0ac: push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0007c7b2: push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0007e20c: push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007ae95: push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0018497d: push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x0012ac30: push dword ptr [ebp + ebx - 0x48]; jl 0x12ac37; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00136eb1: push dword ptr [ebp - 0x11c]; call edx; 
0x00136622: push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x0007ce74: push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x00082809: push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0003640e: push dword ptr [ebp - 0x31]; pop ebx; pop esi; pop edi; ret; 
0x000243fb: push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x001283bd: push dword ptr [ebp - 0x38]; call eax; 
0x00134b24: push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x000ee1f9: push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000ee5d3: push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000f52f9: push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f56d3: push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x00135031: push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x000ee542: push dword ptr [ebp - 0x5dc]; call dword ptr [eax + 0x18]; 
0x000ee414: push dword ptr [ebp - 0x5dc]; call esi; 
0x000f5642: push dword ptr [ebp - 0x5ec]; call dword ptr [eax + 0x18]; 
0x000f5514: push dword ptr [ebp - 0x5ec]; call esi; 
0x0017f568: push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x0007fa86: push dword ptr [ebp - 0x70]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00136eab: push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x00136d11: push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x0018134c: push dword ptr [ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0003819b: push dword ptr [ebx + 0x12cc]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00041f5d: push dword ptr [ebx + 0x1894]; call 0x128980; mov dword ptr [ebx + 0x1894], 0; add esp, 0x18; pop ebx; ret; 
0x001689b2: push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x000a4733: push dword ptr [ebx + 0x24]; call eax; 
0x000a488c: push dword ptr [ebx + 0x24]; call edx; 
0x00135fb8: push dword ptr [ebx + 0x30]; call eax; 
0x00170367: push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0016d80c: push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0008f147: push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0017f726: push dword ptr [ebx + 4]; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0017fcaf: push dword ptr [ebx + 4]; call dword ptr [edx + 0x380]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0003e825: push dword ptr [ebx + 4]; call eax; 
0x00025c6b: push dword ptr [ebx + 4]; call edi; 
0x00023000: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x001569c8: push dword ptr [ebx + 4]; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x001694ad: push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0007fe18: push dword ptr [ebx + eax - 0x7d]; and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x0007fdbe: push dword ptr [ebx + eax - 0x7d]; out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x0018464a: push dword ptr [ebx + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00026f6c: push dword ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x57; call 0x180100; mov dword ptr [esp], ebx; call edi; 
0x00164839: push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0008c6f1: push dword ptr [ebx]; call 0x180010; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x0016b692: push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0016af74: push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00080fe7: push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x00127f8c: push dword ptr [ebx]; call esi; 
0x0018134a: push dword ptr [ebx]; push dword ptr [ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00180332: push dword ptr [ebx]; push dword ptr [esi]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001569cb: push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x001282f8: push dword ptr [ebx]; push esi; call edi; 
0x00129a9e: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x00129a9e: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00032e00: push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00042628: push dword ptr [ecx + ecx - 9]; sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0011f704: push dword ptr [ecx + edi*2 - 0x77]; ret; 
0x0018304e: push dword ptr [ecx + edi*4 - 0x77]; ret 0xe283; 
0x0007abc4: push dword ptr [ecx + edx - 0x75]; inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00179fc4: push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x0008750f: push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0010138c: push dword ptr [ecx]; fucomi st(3); ret 0xc901; 
0x00057927: push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x00156bb3: push dword ptr [ecx]; jmp dword ptr [esi - 0x77]; 
0x001802b9: push dword ptr [ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00184bf9: push dword ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x000d2e70: push dword ptr [ecx]; rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x0009d111: push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x9d080; mov dword ptr [esp], esi; call ebx; 
0x000426e6: push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x000426d7: push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x0011df1d: push dword ptr [edi + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0011e00c: push dword ptr [edi + 0x11]; pop ebx; pop esi; pop edi; ret; 
0x0009d4a9: push dword ptr [edi + 0x1c]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0011dea0: push dword ptr [edi + 0x1d]; pop ebx; pop esi; pop edi; ret; 
0x0011df8f: push dword ptr [edi + 0x1e]; pop ebx; pop esi; pop edi; ret; 
0x0012ac43: push dword ptr [edi + 0x22]; pop ebx; pop esi; pop edi; ret; 
0x0012aa8e: push dword ptr [edi + 0x3f]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000f8279: push dword ptr [edi + 0x44]; add esp, 0x18; pop ebx; ret; 
0x0003c493: push dword ptr [edi + 0x4a]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00111222: push dword ptr [edi + 0x4b]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00110fce: push dword ptr [edi + 0x4f]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011eb59: push dword ptr [edi + 0x54]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003fcb7: push dword ptr [edi + 0x56]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e7bd3: push dword ptr [edi + 0xa]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e5df3: push dword ptr [edi + 0xa]; pop ebx; pop esi; ret; 
0x0009dafa: push dword ptr [edi + 0xb]; mov eax, ecx; pop ebx; ret; 
0x0012e552: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011ef0a: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; ret; 
0x000d92c2: push dword ptr [edi + 0xb]; pop ebx; ret; 
0x001854d2: push dword ptr [edi + 0xb]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00117c62: push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0008db71: push dword ptr [edi + 0xc]; pop ebx; pop esi; pop edi; ret; 
0x0011b848: push dword ptr [edi + 0xd]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012e060: push dword ptr [edi + 0xd]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012b2bf: push dword ptr [edi + 0xe]; pop ebx; pop esi; pop edi; ret; 
0x0012ebce: push dword ptr [edi + 0xf]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012a88b: push dword ptr [edi + 2]; ret; 
0x0011271a: push dword ptr [edi + 3]; pop ebx; pop esi; ret; 
0x0009d599: push dword ptr [edi + 4]; pop ebx; pop esi; ret; 
0x0009cf80: push dword ptr [edi + 5]; pop ebx; ret; 
0x0012a837: push dword ptr [edi + 6]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0010fbd7: push dword ptr [edi + 6]; pop ebx; pop esi; ret; 
0x00128fce: push dword ptr [edi + 7]; mov eax, ecx; pop ebx; ret; 
0x0006043e: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; ret; 
0x0003c435: push dword ptr [edi + 8]; pop ebx; ret; 
0x00096294: push dword ptr [edi + 9]; pop ebx; pop esi; pop edi; ret; 
0x000603e4: push dword ptr [edi + 9]; pop ebx; ret; 
0x0013e31e: push dword ptr [edi + ebx*8 - 0x77]; ret; 
0x000c0c33: push dword ptr [edi]; call ebx; 
0x000c0b96: push dword ptr [edi]; call esi; 
0x00040ac9: push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000c19a6: push dword ptr [edi]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0014f17d: push dword ptr [edi]; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007abb7: push dword ptr [edx + 0x98]; call eax; 
0x00182ed7: push dword ptr [edx + 0x98]; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x000c22f2: push dword ptr [edx + 8]; call ebx; 
0x00183bb3: push dword ptr [edx + esi*2 - 0x75]; inc esi; sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x00169566: push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00109f9b: push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x00109f96: push dword ptr [esi + 0x20]; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000c0ad3: push dword ptr [esi + 0x48c]; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007ab59: push dword ptr [esi + 0x98]; call eax; 
0x001176ab: push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0016aa9f: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016aa5c: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00092460: push dword ptr [esi + 0xd]; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x000303ec: push dword ptr [esi + 4]; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00092407: push dword ptr [esi + 6]; pop ebx; neg eax; pop esi; pop edi; ret; 
0x00109f9e: push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000d1aac: push dword ptr [esi + 8]; call ebx; 
0x0004276b: push dword ptr [esi + eax + 0xf]; mov ebp, 0x1ff083c2; ret; 
0x000d1b58: push dword ptr [esi + eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00071e3f: push dword ptr [esi + ebp - 0x7d]; in al, dx; or al, 0x83; ret; 
0x0017a69f: push dword ptr [esi + ebx - 0x7b]; sar byte ptr [esi + 0x4a], 1; ret; 
0x0016b1b2: push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x001802b7: push dword ptr [esi]; push dword ptr [ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00040ac7: push dword ptr [esi]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00180334: push dword ptr [esi]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001546e7: push dword ptr [esp + 0x10]; call edi; 
0x001802bf: push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00081ba1: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x00170de0: push dword ptr [esp + 0x10]; push edi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x001689b8: push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00081ba5: push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x000a4833: push dword ptr [esp + 0x14]; call eax; 
0x00024d39: push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00168d12: push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0014f7e5: push dword ptr [esp + 0x14]; push ebp; call edi; 
0x00173346: push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x001688a6: push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0017d23d: push dword ptr [esp + 0x18]; lea eax, [eax - 0x6893c]; push eax; call 0x11b880; add esp, 0x1c; ret; 
0x0005a1e4: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x653a0; add esp, 0x1c; ret; 
0x0007eda4: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x71620; add esp, 0x1c; ret; 
0x00077973: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x0007ed43: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0xbc]; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x0011b1dc: push dword ptr [esp + 0x18]; push -0x64; call 0x111700; add esp, 0x1c; ret; 
0x0011b688: push dword ptr [esp + 0x18]; push -0x64; call 0x112030; add esp, 0x18; pop ebx; ret; 
0x0011b6ac: push dword ptr [esp + 0x18]; push -0x64; call 0x112200; add esp, 0x1c; ret; 
0x0010ad5b: push dword ptr [esp + 0x18]; push -1; call 0x10ae60; add esp, 0x1c; ret; 
0x0010ad35: push dword ptr [esp + 0x18]; push -1; call 0x10b230; add esp, 0x1c; ret; 
0x001292d3: push dword ptr [esp + 0x18]; push 0; call 0x129520; add esp, 0x1c; ret; 
0x00034b35: push dword ptr [esp + 0x18]; push 0; call 0x34af0; add esp, 0x1c; ret; 
0x000c13a2: push dword ptr [esp + 0x18]; push 0; call 0xc18c0; add esp, 0x1c; ret; 
0x0003e274: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x00124445: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x0009cfa3: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x9d570; add esp, 0x1c; ret; 
0x001112a3: push dword ptr [esp + 0x18]; push 0x241; push dword ptr [esp + 0x1c]; call 0x11b970; add esp, 0x1c; ret; 
0x0008e953: push dword ptr [esp + 0x18]; push 0x80; push dword ptr [esp + 0x1c]; call 0x8e8a0; add esp, 0x1c; ret; 
0x000a5ee3: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x20]; call 0xbfe10; add esp, 0x18; pop ebx; ret; 
0x0003e967: push dword ptr [esp + 0x18]; push eax; push eax; call 0x3e9d0; add esp, 0x1c; ret; 
0x0009a79b: push dword ptr [esp + 0x1c]; call 0x107f80; add esp, 0x1c; ret; 
0x0010b23d: push dword ptr [esp + 0x1c]; call 0x10b050; add esp, 0x1c; ret; 
0x00189545: push dword ptr [esp + 0x1c]; call 0x111930; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00111b6b: push dword ptr [esp + 0x1c]; call 0x111b80; add esp, 0x1c; ret; 
0x0011b7bf: push dword ptr [esp + 0x1c]; call 0x11b7f0; add esp, 0x1c; ret; 
0x00060743: push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x001112ac: push dword ptr [esp + 0x1c]; call 0x11b970; add esp, 0x1c; ret; 
0x001200b5: push dword ptr [esp + 0x1c]; call 0x11ff60; add esp, 0x18; pop ebx; ret; 
0x000244ee: push dword ptr [esp + 0x1c]; call 0x11ffe0; add esp, 0x18; pop ebx; ret; 
0x00122794: push dword ptr [esp + 0x1c]; call 0x1227e0; add esp, 0x1c; ret; 
0x0011ec62: push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x10; add esp, 0xc; ret; 
0x0011eb0d: push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x1c; ret; 
0x00124852: push dword ptr [esp + 0x1c]; call 0x124f60; add esp, 0x10; add esp, 0xc; ret; 
0x00127b0e: push dword ptr [esp + 0x1c]; call 0x127390; add esp, 0x1c; ret; 
0x0012b935: push dword ptr [esp + 0x1c]; call 0x12b950; add esp, 0x1c; ret; 
0x0012e50d: push dword ptr [esp + 0x1c]; call 0x12ea80; add esp, 0x1c; ret; 
0x0013717a: push dword ptr [esp + 0x1c]; call 0x135900; add esp, 0x1c; ret; 
0x00135aaa: push dword ptr [esp + 0x1c]; call 0x1359a0; add esp, 0x18; pop ebx; ret; 
0x0013a014: push dword ptr [esp + 0x1c]; call 0x13a030; add esp, 0x1c; ret; 
0x0013a334: push dword ptr [esp + 0x1c]; call 0x13a350; add esp, 0x1c; ret; 
0x0013e9c5: push dword ptr [esp + 0x1c]; call 0x13dd70; add esp, 0x1c; ret; 
0x00145765: push dword ptr [esp + 0x1c]; call 0x145690; add esp, 0x1c; ret; 
0x0018ba4f: push dword ptr [esp + 0x1c]; call 0x152740; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018baaf: push dword ptr [esp + 0x1c]; call 0x1535b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bd4f: push dword ptr [esp + 0x1c]; call 0x15ec60; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bdaf: push dword ptr [esp + 0x1c]; call 0x15f8f0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018becf: push dword ptr [esp + 0x1c]; call 0x160e90; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018beef: push dword ptr [esp + 0x1c]; call 0x161180; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0018bf8f: push dword ptr [esp + 0x1c]; call 0x161ff0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001724ce: push dword ptr [esp + 0x1c]; call 0x172220; add esp, 0x10; add esp, 0xc; ret; 
0x001724b3: push dword ptr [esp + 0x1c]; call 0x172320; add esp, 0x10; add esp, 0xc; ret; 
0x0017486d: push dword ptr [esp + 0x1c]; call 0x1745a0; add esp, 0x1c; ret; 
0x00169f59: push dword ptr [esp + 0x1c]; call 0x175610; add esp, 0x1c; ret; 
0x00175871: push dword ptr [esp + 0x1c]; call 0x1756e0; add esp, 0x1c; ret; 
0x00183a5f: push dword ptr [esp + 0x1c]; call 0x183190; add esp, 0x18; pop ebx; ret; 
0x0004223f: push dword ptr [esp + 0x1c]; call 0x1a5bd0; add esp, 0x18; pop ebx; ret; 
0x00042283: push dword ptr [esp + 0x1c]; call 0x1a5c10; add esp, 0x18; pop ebx; ret; 
0x000a492d: push dword ptr [esp + 0x1c]; call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002fafc: push dword ptr [esp + 0x1c]; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010885f: push dword ptr [esp + 0x1c]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00024506: push dword ptr [esp + 0x1c]; call 0x244d9; add esp, 0x1c; ret; 
0x00033106: push dword ptr [esp + 0x1c]; call 0x33120; add esp, 0x1c; ret; 
0x00034b19: push dword ptr [esp + 0x1c]; call 0x34af0; add esp, 0x1c; ret; 
0x0003d1c9: push dword ptr [esp + 0x1c]; call 0x3d150; add esp, 0x1c; ret; 
0x0003e245: push dword ptr [esp + 0x1c]; call 0x3d9e0; add esp, 0x1c; ret; 
0x0003e27a: push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x00182e25: push dword ptr [esp + 0x1c]; call 0x3e4b0; add esp, 0x1c; ret; 
0x0003ff54: push dword ptr [esp + 0x1c]; call 0x3ff70; add esp, 0x1c; ret; 
0x00041f94: push dword ptr [esp + 0x1c]; call 0x41fb0; add esp, 0x1c; ret; 
0x0003d905: push dword ptr [esp + 0x1c]; call 0x463f0; add esp, 0x1c; ret; 
0x000463de: push dword ptr [esp + 0x1c]; call 0x46d60; add esp, 0x1c; ret; 
0x0004cb6d: push dword ptr [esp + 0x1c]; call 0x4a260; add esp, 0x1c; ret; 
0x0003d927: push dword ptr [esp + 0x1c]; call 0x4ccc0; add esp, 0x1c; ret; 
0x0004d38e: push dword ptr [esp + 0x1c]; call 0x4dce0; add esp, 0x1c; ret; 
0x0003d967: push dword ptr [esp + 0x1c]; call 0x50a00; add esp, 0x1c; ret; 
0x0012449d: push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x10; add esp, 0xc; ret; 
0x0012444b: push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x00059e9e: push dword ptr [esp + 0x1c]; call 0x65010; add esp, 0x1c; ret; 
0x00059ebf: push dword ptr [esp + 0x1c]; call 0x65310; add esp, 0x1c; ret; 
0x0005a1be: push dword ptr [esp + 0x1c]; call 0x653a0; add esp, 0x1c; ret; 
0x0006c8fd: push dword ptr [esp + 0x1c]; call 0x712d0; add esp, 0x1c; ret; 
0x0007edcf: push dword ptr [esp + 0x1c]; call 0x71590; add esp, 0x1c; ret; 
0x0007159d: push dword ptr [esp + 0x1c]; call 0x71620; add esp, 0x1c; ret; 
0x000785be: push dword ptr [esp + 0x1c]; call 0x78490; add esp, 0x1c; ret; 
0x000839cf: push dword ptr [esp + 0x1c]; call 0x79ea0; add esp, 0x18; pop ebx; ret; 
0x0007aad9: push dword ptr [esp + 0x1c]; call 0x7a9f0; add esp, 0x1c; ret; 
0x00059fbd: push dword ptr [esp + 0x1c]; call 0x7b740; add esp, 0x1c; ret; 
0x00083cbc: push dword ptr [esp + 0x1c]; call 0x7cdd0; add esp, 0x1c; ret; 
0x00083cd9: push dword ptr [esp + 0x1c]; call 0x7cf80; add esp, 0x1c; ret; 
0x00083f29: push dword ptr [esp + 0x1c]; call 0x83dd0; add esp, 0x18; pop ebx; ret; 
0x00059cfe: push dword ptr [esp + 0x1c]; call 0x83dd0; add esp, 0x1c; ret; 
0x000840b9: push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x18; pop ebx; ret; 
0x00059dfe: push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x1c; ret; 
0x00084569: push dword ptr [esp + 0x1c]; call 0x843e0; add esp, 0x18; pop ebx; ret; 
0x0013894a: push dword ptr [esp + 0x1c]; call 0x843e0; add esp, 0x1c; ret; 
0x0008b586: push dword ptr [esp + 0x1c]; call 0x8b4d0; add esp, 0x18; pop ebx; ret; 
0x0008e678: push dword ptr [esp + 0x1c]; call 0x8e5a0; add esp, 0x18; pop ebx; ret; 
0x0008e95c: push dword ptr [esp + 0x1c]; call 0x8e8a0; add esp, 0x1c; ret; 
0x00095300: push dword ptr [esp + 0x1c]; call 0x94a30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000953b5: push dword ptr [esp + 0x1c]; call 0x94a30; add esp, 0x18; pop ebx; ret; 
0x00095fa5: push dword ptr [esp + 0x1c]; call 0x95e60; add esp, 0x1c; ret; 
0x00097c68: push dword ptr [esp + 0x1c]; call 0x97c20; add esp, 0x18; pop ebx; ret; 
0x0009be75: push dword ptr [esp + 0x1c]; call 0x9b650; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009d50b: push dword ptr [esp + 0x1c]; call 0x9d470; add esp, 0x18; pop ebx; ret; 
0x0009cfa9: push dword ptr [esp + 0x1c]; call 0x9d570; add esp, 0x1c; ret; 
0x000a7cea: push dword ptr [esp + 0x1c]; call 0xa7d00; add esp, 0x1c; ret; 
0x000a8f06: push dword ptr [esp + 0x1c]; call 0xa8f20; add esp, 0x1c; ret; 
0x000aa8f8: push dword ptr [esp + 0x1c]; call 0xaa910; add esp, 0x1c; ret; 
0x000aab2e: push dword ptr [esp + 0x1c]; call 0xaabe0; add esp, 0x1c; ret; 
0x000a9987: push dword ptr [esp + 0x1c]; call 0xad970; add esp, 0x18; pop ebx; ret; 
0x0013904d: push dword ptr [esp + 0x1c]; call 0xbfd90; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a9897: push dword ptr [esp + 0x1c]; call 0xbfd90; add esp, 0x18; pop ebx; ret; 
0x000d1c9b: push dword ptr [esp + 0x1c]; call 0xbfe80; add esp, 0x18; pop ebx; ret; 
0x000a5f15: push dword ptr [esp + 0x1c]; call 0xbfec0; add esp, 0x18; pop ebx; ret; 
0x001395b1: push dword ptr [esp + 0x1c]; call 0xc21c0; add esp, 0x18; pop ebx; ret; 
0x000c242d: push dword ptr [esp + 0x1c]; call 0xc2230; add esp, 0x1c; ret; 
0x000c25ea: push dword ptr [esp + 0x1c]; call 0xc2600; add esp, 0x1c; ret; 
0x00139871: push dword ptr [esp + 0x1c]; call 0xc3e60; add esp, 0x18; pop ebx; ret; 
0x000c4afe: push dword ptr [esp + 0x1c]; call 0xc5440; add esp, 0x1c; ret; 
0x000c7e1e: push dword ptr [esp + 0x1c]; call 0xc85e0; add esp, 0x1c; ret; 
0x000cb4ee: push dword ptr [esp + 0x1c]; call 0xcbde0; add esp, 0x1c; ret; 
0x000cff3e: push dword ptr [esp + 0x1c]; call 0xcff60; add esp, 0x1c; ret; 
0x000d70b2: push dword ptr [esp + 0x1c]; call 0xd1c40; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d8d85: push dword ptr [esp + 0x1c]; call 0xd7e40; add esp, 0x18; pop ebx; ret; 
0x000e7b59: push dword ptr [esp + 0x1c]; call 0xe7b70; add esp, 0x1c; ret; 
0x000e7c19: push dword ptr [esp + 0x1c]; call 0xe8090; add esp, 0x1c; ret; 
0x00132ae5: push dword ptr [esp + 0x1c]; push 0; push 0x2000004; call eax; 
0x00138ac6: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x00139526: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x0007ab55: push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0009a797: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x107f80; add esp, 0x1c; ret; 
0x0010b239: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10b050; add esp, 0x1c; ret; 
0x000244ea: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11ffe0; add esp, 0x18; pop ebx; ret; 
0x00127b0a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x127390; add esp, 0x1c; ret; 
0x00135aa6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1359a0; add esp, 0x18; pop ebx; ret; 
0x00169f55: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x175610; add esp, 0x1c; ret; 
0x0004227f: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1a5c10; add esp, 0x18; pop ebx; ret; 
0x00034b15: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x34af0; add esp, 0x1c; ret; 
0x0003d1c5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d150; add esp, 0x1c; ret; 
0x0003e4c8: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x00046408: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x46d60; add esp, 0x1c; ret; 
0x0004cb69: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4a260; add esp, 0x1c; ret; 
0x0004d38a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4dce0; add esp, 0x1c; ret; 
0x00059e9a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x65010; add esp, 0x1c; ret; 
0x00059ebb: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x65310; add esp, 0x1c; ret; 
0x0005a1ba: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x653a0; add esp, 0x1c; ret; 
0x0006c8f9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x712d0; add esp, 0x1c; ret; 
0x0007edcb: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71590; add esp, 0x1c; ret; 
0x000c0f6a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71620; add esp, 0x1c; ret; 
0x000785ba: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x78490; add esp, 0x1c; ret; 
0x0007aad5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a9f0; add esp, 0x1c; ret; 
0x00083cb8: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7cdd0; add esp, 0x1c; ret; 
0x00083f25: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x83dd0; add esp, 0x18; pop ebx; ret; 
0x00059cfa: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x83dd0; add esp, 0x1c; ret; 
0x000840b5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x18; pop ebx; ret; 
0x00059dfa: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x1c; ret; 
0x00084565: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x843e0; add esp, 0x18; pop ebx; ret; 
0x0008b582: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x8b4d0; add esp, 0x18; pop ebx; ret; 
0x000a7ce6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa7d00; add esp, 0x1c; ret; 
0x000aa8f4: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xaa910; add esp, 0x1c; ret; 
0x000aab2a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xaabe0; add esp, 0x1c; ret; 
0x000a9983: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xad970; add esp, 0x18; pop ebx; ret; 
0x000d1c57: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbfd90; add esp, 0x18; pop ebx; ret; 
0x000d1c97: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbfe80; add esp, 0x18; pop ebx; ret; 
0x001395ad: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc21c0; add esp, 0x18; pop ebx; ret; 
0x000c2429: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2230; add esp, 0x1c; ret; 
0x000c25e6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2600; add esp, 0x1c; ret; 
0x0013986d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc3e60; add esp, 0x18; pop ebx; ret; 
0x000c7d09: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc5440; add esp, 0x1c; ret; 
0x000c7e1a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc85e0; add esp, 0x1c; ret; 
0x000cb4ea: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcbde0; add esp, 0x1c; ret; 
0x000e7b55: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xe7b70; add esp, 0x1c; ret; 
0x000e7c15: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xe8090; add esp, 0x1c; ret; 
0x001393d2: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x65010; add esp, 0x1c; ret; 
0x00139522: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x712d0; add esp, 0x1c; ret; 
0x0009a793: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x107f80; add esp, 0x1c; ret; 
0x0010b235: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10b050; add esp, 0x1c; ret; 
0x00127b25: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x127390; add esp, 0x1c; ret; 
0x0003e4c4: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x0004d386: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4dce0; add esp, 0x1c; ret; 
0x0006c8f5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x712d0; add esp, 0x1c; ret; 
0x000c1035: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71620; add esp, 0x1c; ret; 
0x000aab26: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xaabe0; add esp, 0x1c; ret; 
0x000c2425: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2230; add esp, 0x1c; ret; 
0x000c7e16: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc85e0; add esp, 0x1c; ret; 
0x000cb4e6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcbde0; add esp, 0x1c; ret; 
0x00173545: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0016ae4c: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016ae96: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00173479: push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x001688d4: push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00182a67: push dword ptr [esp + 0x20]; call 0x1828e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00182aa3: push dword ptr [esp + 0x20]; call 0x182940; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00182a47: push dword ptr [esp + 0x20]; call 0x182950; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001247ff: push dword ptr [esp + 0x20]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x000a5ee7: push dword ptr [esp + 0x20]; call 0xbfe10; add esp, 0x18; pop ebx; ret; 
0x000d8224: push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x00127b56: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x127390; add esp, 0x1c; ret; 
0x001380e6: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x65010; add esp, 0x1c; ret; 
0x00138326: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x712d0; add esp, 0x1c; ret; 
0x00137b56: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x1c; ret; 
0x00138946: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x843e0; add esp, 0x1c; ret; 
0x00182ed2: push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x001323f5: push dword ptr [esp + 0x20]; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0014f180: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008c8c3: push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00060a1a: push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0011b7ff: push dword ptr [esp + 0x28]; push -0x64; call 0x11b810; add esp, 0x2c; ret; 
0x0006055d: push dword ptr [esp + 0x28]; push -1; push dword ptr [esp + 0x2c]; call 0x7d3a0; add esp, 0x2c; ret; 
0x0003610d: push dword ptr [esp + 0x28]; push 0; call 0x360b0; add esp, 0x2c; ret; 
0x000d8220: push dword ptr [esp + 0x28]; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0016d812: push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x001091a9: push dword ptr [esp + 0x2c]; call 0x10a420; add esp, 0x2c; ret; 
0x0011b7e3: push dword ptr [esp + 0x2c]; call 0x11b810; add esp, 0x2c; ret; 
0x00120311: push dword ptr [esp + 0x2c]; call 0x120230; add esp, 0x28; pop ebx; ret; 
0x00120499: push dword ptr [esp + 0x2c]; call 0x120320; add esp, 0x28; pop ebx; ret; 
0x00134505: push dword ptr [esp + 0x2c]; call 0x1342e0; add esp, 0x28; pop ebx; ret; 
0x0013e9ab: push dword ptr [esp + 0x2c]; call 0x13df10; add esp, 0x2c; ret; 
0x0013eac1: push dword ptr [esp + 0x2c]; call 0x13e9e0; add esp, 0x2c; ret; 
0x0013f229: push dword ptr [esp + 0x2c]; call 0x13ec90; add esp, 0x2c; ret; 
0x0018bc27: push dword ptr [esp + 0x2c]; call 0x15bba0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0015ca30: push dword ptr [esp + 0x2c]; call 0x15d2a0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0018bce7: push dword ptr [esp + 0x2c]; call 0x15e570; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00172893: push dword ptr [esp + 0x2c]; call 0x1726e0; add esp, 0x2c; ret; 
0x00181a6b: push dword ptr [esp + 0x2c]; call 0x181910; add esp, 0x28; pop ebx; ret; 
0x00034b01: push dword ptr [esp + 0x2c]; call 0x357c0; add esp, 0x2c; ret; 
0x000360f1: push dword ptr [esp + 0x2c]; call 0x360b0; add esp, 0x2c; ret; 
0x000410a1: push dword ptr [esp + 0x2c]; call 0x40c90; add esp, 0x2c; ret; 
0x00042a48: push dword ptr [esp + 0x2c]; call 0x42a80; add esp, 0x2c; ret; 
0x0004cc74: push dword ptr [esp + 0x2c]; call 0x4cd00; add esp, 0x2c; ret; 
0x000509b4: push dword ptr [esp + 0x2c]; call 0x50a40; add esp, 0x2c; ret; 
0x00051324: push dword ptr [esp + 0x2c]; call 0x513a0; add esp, 0x2c; ret; 
0x00051994: push dword ptr [esp + 0x2c]; call 0x51a20; add esp, 0x2c; ret; 
0x0007bc45: push dword ptr [esp + 0x2c]; call 0x7ba70; add esp, 0x2c; ret; 
0x00060563: push dword ptr [esp + 0x2c]; call 0x7d3a0; add esp, 0x2c; ret; 
0x0007e501: push dword ptr [esp + 0x2c]; call 0x7e330; add esp, 0x28; pop ebx; ret; 
0x0007eedd: push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x28; pop ebx; ret; 
0x0007ed15: push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x00060535: push dword ptr [esp + 0x2c]; call 0x841c0; add esp, 0x2c; ret; 
0x0008a069: push dword ptr [esp + 0x2c]; call 0x89f90; add esp, 0x28; pop ebx; ret; 
0x0008f1af: push dword ptr [esp + 0x2c]; call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x00092d2d: push dword ptr [esp + 0x2c]; call 0x92d50; add esp, 0x2c; ret; 
0x0009d541: push dword ptr [esp + 0x2c]; call 0x9d7e0; add esp, 0x2c; ret; 
0x0009d561: push dword ptr [esp + 0x2c]; call 0x9da60; add esp, 0x2c; ret; 
0x000c1e2f: push dword ptr [esp + 0x2c]; call 0xc1e40; add esp, 0x2c; ret; 
0x000cade4: push dword ptr [esp + 0x2c]; call 0xcae60; add esp, 0x2c; ret; 
0x000ce6d4: push dword ptr [esp + 0x2c]; call 0xce750; add esp, 0x2c; ret; 
0x000cef94: push dword ptr [esp + 0x2c]; call 0xcf010; add esp, 0x2c; ret; 
0x000cf644: push dword ptr [esp + 0x2c]; call 0xcf6c0; add esp, 0x2c; ret; 
0x000dcb40: push dword ptr [esp + 0x2c]; call 0xdcc50; add esp, 0x2c; ret; 
0x000dff22: push dword ptr [esp + 0x2c]; call 0xe22f0; add esp, 0x2c; ret; 
0x000dff52: push dword ptr [esp + 0x2c]; call 0xe4770; add esp, 0x2c; ret; 
0x000ed817: push dword ptr [esp + 0x2c]; call 0xed070; add esp, 0x28; pop ebx; ret; 
0x000ed76f: push dword ptr [esp + 0x2c]; call 0xed6d0; add esp, 0x28; pop ebx; ret; 
0x00117c5e: push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x001091a5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10a420; add esp, 0x2c; ret; 
0x0012030d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x120230; add esp, 0x28; pop ebx; ret; 
0x00120495: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x120320; add esp, 0x28; pop ebx; ret; 
0x00134501: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1342e0; add esp, 0x28; pop ebx; ret; 
0x0013eabd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13e9e0; add esp, 0x2c; ret; 
0x0013f225: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13ec90; add esp, 0x2c; ret; 
0x0017288f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1726e0; add esp, 0x2c; ret; 
0x000360c1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x357c0; add esp, 0x2c; ret; 
0x000360ed: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x360b0; add esp, 0x2c; ret; 
0x0004109d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x40c90; add esp, 0x2c; ret; 
0x00042a44: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x42a80; add esp, 0x2c; ret; 
0x0004cc70: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4cd00; add esp, 0x2c; ret; 
0x000509b0: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x50a40; add esp, 0x2c; ret; 
0x0005135e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x513a0; add esp, 0x2c; ret; 
0x00051990: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x51a20; add esp, 0x2c; ret; 
0x0007bc41: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7ba70; add esp, 0x2c; ret; 
0x0007e4fd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7e330; add esp, 0x28; pop ebx; ret; 
0x0007eed9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x28; pop ebx; ret; 
0x0007ed11: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x0008a065: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x89f90; add esp, 0x28; pop ebx; ret; 
0x0008f1ab: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x000986ab: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x92d50; add esp, 0x2c; ret; 
0x0009d53d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9d7e0; add esp, 0x2c; ret; 
0x000cae1e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcae60; add esp, 0x2c; ret; 
0x000ce70e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xce750; add esp, 0x2c; ret; 
0x000cefce: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcf010; add esp, 0x2c; ret; 
0x000cf67e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcf6c0; add esp, 0x2c; ret; 
0x000dcb3c: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdcc50; add esp, 0x2c; ret; 
0x000dff4e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe4770; add esp, 0x2c; ret; 
0x000ed813: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xed070; add esp, 0x28; pop ebx; ret; 
0x000ed76b: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xed6d0; add esp, 0x28; pop ebx; ret; 
0x001091a1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10a420; add esp, 0x2c; ret; 
0x0013eab9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13e9e0; add esp, 0x2c; ret; 
0x0013f221: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x13ec90; add esp, 0x2c; ret; 
0x0017288b: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1726e0; add esp, 0x2c; ret; 
0x000360bd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x357c0; add esp, 0x2c; ret; 
0x000360e9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x360b0; add esp, 0x2c; ret; 
0x00041099: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x40c90; add esp, 0x2c; ret; 
0x00045d01: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x42a80; add esp, 0x2c; ret; 
0x0004cc6c: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4cd00; add esp, 0x2c; ret; 
0x000509ac: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x50a40; add esp, 0x2c; ret; 
0x0005135a: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x513a0; add esp, 0x2c; ret; 
0x0005198c: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x51a20; add esp, 0x2c; ret; 
0x0007bc3d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7ba70; add esp, 0x2c; ret; 
0x0007ed0d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x0009d539: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9d7e0; add esp, 0x2c; ret; 
0x000cae1a: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcae60; add esp, 0x2c; ret; 
0x000ce70a: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xce750; add esp, 0x2c; ret; 
0x000cefca: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcf010; add esp, 0x2c; ret; 
0x000cf67a: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcf6c0; add esp, 0x2c; ret; 
0x000dcb38: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdcc50; add esp, 0x2c; ret; 
0x000dff4a: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe4770; add esp, 0x2c; ret; 
0x000c40c7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c1cf7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0008c420: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00088259: push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00098757: push dword ptr [esp + 0x2c]; push edx; call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x0008c73b: push dword ptr [esp + 0x2c]; push edx; push ecx; push edi; call eax; 
0x00129ae1: push dword ptr [esp + 0x30]; call 0x129a40; add esp, 0x2c; ret; 
0x001549ea: push dword ptr [esp + 0x30]; lea eax, [esp + 0x48]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0007abae: push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00025c67: push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x000c19a2: push dword ptr [esp + 0x30]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x001569cd: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00184e84: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c1f4e: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x001569d1: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0008c592: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x00138ec4: push dword ptr [esp + 0x30]; push edx; push dword ptr [esp + 0x2c]; call 0x7d3a0; add esp, 0x2c; ret; 
0x0008c65a: push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x0016d82e: push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00184e88: push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000d8a6f: push dword ptr [esp + 0x34]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000c2067: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x001549f3: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x000c442b: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00139272: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x00138e82: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x841c0; add esp, 0x2c; ret; 
0x00089dfc: push dword ptr [esp + 0x38]; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00165387: push dword ptr [esp + 0x38]; push 2; push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x000c40cb: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00085f8e: push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x000c1cff: push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0007e2fb: push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x0016d860: push dword ptr [esp + 0x38]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00142da1: push dword ptr [esp + 0x3c]; call 0x142680; add esp, 0x3c; ret; 
0x0016538d: push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x00171751: push dword ptr [esp + 0x3c]; call 0x171470; add esp, 0x3c; ret; 
0x0008c429: push dword ptr [esp + 0x3c]; call eax; 
0x0002f0d8: push dword ptr [esp + 0x3c]; call edi; 
0x001569d5: push dword ptr [esp + 0x3c]; call esi; 
0x0002ef9c: push dword ptr [esp + 0x3c]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00060a16: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c1cfb: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00142d9d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x142680; add esp, 0x3c; ret; 
0x001653bb: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x0017174d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x171470; add esp, 0x3c; ret; 
0x0002f0d4: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x00142d99: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x142680; add esp, 0x3c; ret; 
0x001653b7: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x1651d0; add esp, 0x3c; ret; 
0x00171749: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x171470; add esp, 0x3c; ret; 
0x0008890c: push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x00171b4c: push dword ptr [esp + 0x3c]; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0008c596: push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0008c424: push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00024e88: push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e2a: push dword ptr [esp + 0x40]; call ecx; 
0x00024dd3: push dword ptr [esp + 0x40]; call esi; 
0x00024e84: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e26: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x00024dcf: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x000c442f: push dword ptr [esp + 0x40]; push ebp; call esi; 
0x001546e3: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x001546df: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00169bfa: push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0003eb24: push dword ptr [esp + 0x4c]; call eax; 
0x00159be9: push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002a155: push dword ptr [esp + 0x54]; call esi; 
0x0002a151: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x00029be2: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002dafc: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002daf8: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0015d105: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00028464: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025c62: push dword ptr [esp + 0x58]; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x0015d109: push dword ptr [esp + 0x58]; push esi; call edi; 
0x00029be6: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c718: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00028460: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002c714: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00028fb5: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00028468: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ac50: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00028fb1: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002ac4c: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00028fb9: push dword ptr [esp + 0x64]; call edi; 
0x0002cf05: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00159be5: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002cf01: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002b8cd: push dword ptr [esp + 0x6c]; call edi; 
0x0002b8c9: push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x00168d16: push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00087dca: push dword ptr [esp + 0xbc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x000a6058: push dword ptr [esp + 0xc]; call 0xa5f40; add esp, 0xc; test eax, eax; jne 0xa6073; ret; 
0x0018134f: push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00132e08: push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0015d5b4: push dword ptr [esp + 0xc]; push ebp; call edi; 
0x00184d5d: push dword ptr [esp + 0xcc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00101588: push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0003be92: push dword ptr [esp + 8]; call 0x3be10; pop ecx; pop edx; ret; 
0x00040ac3: push dword ptr [esp + 8]; push dword ptr [esi]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00087dd1: push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x00087dd5: push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x0016a634: push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000408de: push dword ptr [esp + 8]; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000bf211: push dword ptr [esp + ebx*2 + 0xf]; mov ebp, 0x5ff801ff; ret; 
0x000c3a27: push dword ptr [esp + ecx - 0x75]; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x0017b6d9: push dword ptr [esp + ecx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00080b69: push dword ptr [esp + edx - 0x75]; inc esi; adc al, 0xe9; ret; 
0x00083f99: push dword ptr [esp - 0x7b]; sar byte ptr [eax + 0x30], 1; ret; 
0x0015d5ac: push dword ptr [esp]; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001546dc: push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00159be8: push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002cf04: push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000a7ce3: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa7d00; add esp, 0x1c; ret; 
0x000c25e3: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2600; add esp, 0x1c; ret; 
0x00042a41: push dword ptr gs:[eax]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x42a80; add esp, 0x2c; ret; 
0x001802b8: push dword ptr ss:[ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00040ac8: push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00180335: push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017618b: push eax; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x00176309: push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000be616: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb190: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x001721f3: push eax; adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000bf411: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000be5f3: push eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bb170: push eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000773b5: push eax; adc byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx - 0x77]; 
0x000be676: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb1d3: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000be6a6: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bb1f3: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x000843b3: push eax; adc byte ptr [ecx + 0x50890853], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00169560: push eax; adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x169579; push ebx; call dword ptr [esi + 0x14]; 
0x000be647: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bb1b4: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x001811c0: push eax; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00031932: push eax; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x001483fb: push eax; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x00168df9: push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0016fd16: push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x00084136: push eax; add al, 0x5b; pop esi; ret; 
0x00089374: push eax; add al, 0x5b; ret; 
0x0008cb1f: push eax; add al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0007de5c: push eax; add al, 0x73; adc byte ptr [ebp + 0x889044a], cl; mov eax, dword ptr [edx]; ret; 
0x000fc6ee: push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x000715f6: push eax; add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x001718db: push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0007f33e: push eax; add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0008cb57: push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000a0eeb: push eax; add al, 0x89; ret 0xf089; 
0x000baf5a: push eax; add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0017674a: push eax; add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000534b5: push eax; add al, 0x8d; inc edi; add al, 0xf; xchg edx, eax; ret; 
0x00023eba: push eax; add al, 0xeb; ret 0x1de8; 
0x00023fc4: push eax; add al, 0xeb; ret; 
0x00128651: push eax; add al, 0xf6; ret 0x7401; 
0x0009a0ca: push eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19ced37d], cl; call dword ptr [ecx + 0x50]; 
0x000344af: push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000ef216: push eax; add cl, byte ptr [ecx - 0x47f7b]; call dword ptr [edx - 0x77]; 
0x0003c294: push eax; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c33b: push eax; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0005d944: push eax; add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x00037120: push eax; add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x00065375: push eax; add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x000a5ec3: push eax; add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x0016abc5: push eax; add dword ptr [ecx], 0x4bc38100; ret 0xc; 
0x0015abc5: push eax; add dword ptr [edx], 0x4bc38100; ret 0xd; 
0x00165df3: push eax; add eax, 0x18; push eax; call 0x165bb0; add esp, 0x2c; ret; 
0x001371c2: push eax; add eax, eax; call 0x1f3f4d0; pop ebx; ret; 
0x0007b49f: push eax; add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x000be3cb: push eax; add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000baf78: push eax; add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x001217ab: push eax; add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x0017140c: push eax; and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0008caf2: push eax; and byte ptr [ebp - 0x5d], ah; jl 0x8caf8; add byte ptr [eax], al; ret; 
0x00144b4a: push eax; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x0007f307: push eax; and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00170dcb: push eax; and byte ptr [edi + 0x50], dl; call dword ptr [edx + 4]; 
0x0006db8e: push eax; and byte ptr [edi], cl; test byte ptr [ebx], dl; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0006e0b4: push eax; and byte ptr [edi], cl; test ch, ch; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x001688bf: push eax; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x000341da: push eax; and eax, 0x1000; ret; 
0x000341aa: push eax; and eax, 0x100; ret; 
0x0003417a: push eax; and eax, 0x2000; ret; 
0x000340ca: push eax; and eax, 0x200; ret; 
0x0003412a: push eax; and eax, 0x4000; ret; 
0x0003404a: push eax; and eax, 0x400; ret; 
0x000340fa: push eax; and eax, 0x8000; ret; 
0x0003409a: push eax; and eax, 0x800; ret; 
0x0003426a: push eax; and eax, 1; ret; 
0x0003407a: push eax; and eax, 2; ret; 
0x0003415a: push eax; and eax, 4; ret; 
0x0003402a: push eax; and eax, 8; ret; 
0x0018598c: push eax; bnd jmp dword ptr [esi - 0x70]; 
0x00111f27: push eax; call 0x112030; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00111f76: push eax; call 0x112200; add esp, 0x10; add esp, 0xc; ret; 
0x00059fa3: push eax; call 0x11b880; add esp, 0x1c; ret; 
0x0011a6de: push eax; call 0x11d620; add esp, 0x10; add esp, 0xc; ret; 
0x001227c3: push eax; call 0x1228c0; add esp, 0x1c; ret; 
0x0002fb3c: push eax; call 0x125190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00027098: push eax; call 0x128980; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0009e962: push eax; call 0x12c5f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00147e1a: push eax; call 0x147d20; add esp, 0x18; pop ebx; ret; 
0x00165df7: push eax; call 0x165bb0; add esp, 0x2c; ret; 
0x0015d478: push eax; call 0x180100; mov dword ptr [esp], ebp; call edi; 
0x0015d667: push eax; call 0x180100; mov dword ptr [esp], ebp; call esi; 
0x00042224: push eax; call 0x1a5bd0; add esp, 0x18; pop ebx; ret; 
0x00028128: push eax; call 0x231a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001087dc: push eax; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x0014378d: push eax; call 0x34af0; add esp, 0x10; add esp, 0xc; ret; 
0x0016fcaa: push eax; call 0x34af0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000ec896: push eax; call 0x34af0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003e96c: push eax; call 0x3e9d0; add esp, 0x1c; ret; 
0x00040363: push eax; call 0x3fe90; add esp, 0x10; add esp, 0xc; ret; 
0x000400b3: push eax; call 0x403d0; add esp, 0x10; add esp, 0xc; ret; 
0x0005aeb0: push eax; call 0x5ad20; add esp, 0x18; pop ebx; ret; 
0x0005fcff: push eax; call 0x7b510; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x00085ceb: push eax; call 0x896d0; add esp, 0x1c; ret; 
0x0009878b: push eax; call 0x8d370; add esp, 0x28; pop ebx; ret; 
0x000994cb: push eax; call 0x8d370; add esp, 0x2c; ret; 
0x000da4e1: push eax; call 0x8d660; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008b2b9: push eax; call 0x8d660; add esp, 0x1c; ret; 
0x00108471: push eax; call 0x8d660; call dword ptr [esi]; 
0x00097e33: push eax; call 0x8e510; add esp, 0x1c; ret; 
0x001686cc: push eax; call 0x96410; add esp, 0x18; lea eax, [ebx + 0xa5ec]; pop ebx; ret; 
0x000280ea: push eax; call 0x96410; add esp, 0x1c; ret; 
0x001563d4: push eax; call 0xbfaa0; add esp, 0x1c; ret; 
0x0009e848: push eax; call 0xbfec0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000dc117: push eax; call 0xd7e40; add esp, 0x1c; ret; 
0x000d7d31: push eax; call 0xda4f0; add esp, 0x1c; ret; 
0x001329a9: push eax; call dword ptr [ebp + 0x14]; 
0x0005ae12: push eax; call dword ptr [ebp + 0x1c]; 
0x0017f867: push eax; call dword ptr [ebx + 0x24]; 
0x0017f8ee: push eax; call dword ptr [ebx + 0x28]; 
0x00168c62: push eax; call dword ptr [ecx + 0x10]; 
0x000edc00: push eax; call dword ptr [ecx + 0x20]; 
0x00168983: push eax; call dword ptr [ecx + 0xc]; 
0x00168a0b: push eax; call dword ptr [ecx + 8]; 
0x00168d1a: push eax; call dword ptr [ecx]; 
0x00168dfb: push eax; call dword ptr [edx + 0x10]; 
0x0017196d: push eax; call dword ptr [edx + 0x14]; 
0x0016d9a5: push eax; call dword ptr [edx + 0xc]; 
0x001688c2: push eax; call dword ptr [edx + 4]; 
0x0016fd19: push eax; call dword ptr [edx + 8]; 
0x00171b53: push eax; call dword ptr [edx]; 
0x000825f3: push eax; call ebx; 
0x0008d9ed: push eax; call ecx; 
0x00151381: push eax; call edi; 
0x000a48b5: push eax; call edx; 
0x0009c02d: push eax; cdq; stc; call dword ptr [eax - 0x73]; 
0x00173ea6: push eax; cld; call dword ptr [eax - 0x73]; 
0x00124e3d: push eax; cmc; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00041a19: push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x00099988: push eax; cmpxchg dword ptr [edx], ecx; jne 0x99998; xor eax, eax; pop ebx; ret; 
0x001828c9: push eax; dec esp; ret; 
0x000fb90b: push eax; inc dword ptr [ebx - 0x78f00306]; push cs; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x0011de4e: push eax; inc eax; pop ebx; pop esi; ret; 
0x00052263: push eax; insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003fb11: push eax; insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00042465: push eax; int1; mov eax, edx; ret; 
0x0009e683: push eax; jbe 0x9e690; ret; 
0x000be713: push eax; jnp 0x5b180b5e; pop esi; ret; 
0x000bb250: push eax; jnp 0x5e13d69b; ret; 
0x0007977b: push eax; lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x000d1aa6: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x000c2388: push eax; lea eax, [esp + 0x44]; push eax; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x0002f0ce: push eax; lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x0012b5f8: push eax; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00024b21: push eax; lea edx, fs:[eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24b20; ret; 
0x0015465a: push eax; mov dword ptr [esp + 0x10], eax; call 0x180100; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0012df68: push eax; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0015cb3e: push eax; mov dword ptr [esp + 0x2c], eax; call 0x180100; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00024e21: push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0012dfb9: push eax; mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00111a2d: push eax; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00159ab4: push eax; mov eax, dword ptr [0xe8500000]; ret 0xf33a; 
0x001176a3: push eax; mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00040f2f: push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00159bec: push eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000d88da: push eax; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0012e98f: push eax; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00111aa8: push eax; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 4], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000c22ed: push eax; mov edx, dword ptr [esp + 0x38]; push dword ptr [edx + 8]; call ebx; 
0x000374e6: push eax; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x77bdc]; add edx, edi; jmp edx; 
0x0007f95f: push eax; or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0009b597: push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x0008cb29: push eax; or al, 0x65; mov dword ptr [0x78], eax; ret; 
0x000843b9: push eax; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009ff34: push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x0003dd7a: push eax; or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x00122c5b: push eax; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; call ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x001184cf: push eax; or byte ptr [ebp - 0x11f8836d], cl; call dword ptr [edx - 0x73]; 
0x00030d4b: push eax; or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x0014d488: push eax; or byte ptr [ebp - 0xc], dh; ret; 
0x00085c98: push eax; or byte ptr [ebx + 0x14], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000be431: push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bafbe: push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x00085cd6: push eax; or byte ptr [ebx + 0xe], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x001727d5: push eax; or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0008ae71: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x0016aa61: push eax; or byte ptr [ebx - 0x3f7aef3c], al; je 0x16ab6b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00172f93: push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0011eca2: push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00156cda: push eax; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000bb210: push eax; or eax, 0x824448b; pop esi; ret; 
0x000be6d3: push eax; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00096222: push eax; or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0011e1e8: push eax; pop ebx; pop esi; pop edi; ret; 
0x0011fb04: push eax; pop edx; stc; call dword ptr [eax - 1]; 
0x000be44f: push eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bafdc: push eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00163843: push eax; push 0; call 0x150d90; add esp, 0x1c; ret; 
0x0016ff16: push eax; push 0; call 0x785b0; add esp, 0x18; pop ebx; ret; 
0x00132d0e: push eax; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x0014f7e2: push eax; push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x0012446c: push eax; push 0; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x0011eb07: push eax; push 0x5410; push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x1c; ret; 
0x00090d92: push eax; push 0x818d3675; mov cl, byte ptr [edi - 7]; call dword ptr [edx + 0x50]; 
0x00167933: push eax; push 0xa; call 0x150d90; add esp, 0x1c; ret; 
0x00024f28: push eax; push 1; call 0x11d890; add esp, 0x1c; ret; 
0x00163c93: push eax; push 1; call 0x150d90; add esp, 0x1c; ret; 
0x00117c5b: push eax; push 1; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0007977f: push eax; push 1; push esi; call edx; 
0x00163f93: push eax; push 2; call 0x150d90; add esp, 0x1c; ret; 
0x00117f9e: push eax; push 2; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00165023: push eax; push 3; call 0x150d90; add esp, 0x1c; ret; 
0x001662f3: push eax; push 4; call 0x150d90; add esp, 0x1c; ret; 
0x00166953: push eax; push 5; call 0x150d90; add esp, 0x1c; ret; 
0x00117e7f: push eax; push 5; push dword ptr [esp + 0x2c]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00166ca3: push eax; push 6; call 0x150d90; add esp, 0x1c; ret; 
0x00167e93: push eax; push 7; call 0x150d90; add esp, 0x1c; ret; 
0x001672f3: push eax; push 8; call 0x150d90; add esp, 0x1c; ret; 
0x001676a3: push eax; push 9; call 0x150d90; add esp, 0x1c; ret; 
0x000be6f3: push eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb230: push eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00134b23: push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00135030: push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x000ee413: push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f5513: push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x000a488b: push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00170366: push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00025ccc: push eax; push dword ptr [ebx + 4]; call edi; 
0x0016af73: push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000426e5: push eax; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x000c0c32: push eax; push dword ptr [edi]; call ebx; 
0x000d1aab: push eax; push dword ptr [esi + 8]; call ebx; 
0x0011b7be: push eax; push dword ptr [esp + 0x1c]; call 0x11b7f0; add esp, 0x1c; ret; 
0x00060742: push eax; push dword ptr [esp + 0x1c]; call 0x11b880; add esp, 0x1c; ret; 
0x001200e8: push eax; push dword ptr [esp + 0x1c]; call 0x11ff60; add esp, 0x18; pop ebx; ret; 
0x00122793: push eax; push dword ptr [esp + 0x1c]; call 0x1227e0; add esp, 0x1c; ret; 
0x00124851: push eax; push dword ptr [esp + 0x1c]; call 0x124f60; add esp, 0x10; add esp, 0xc; ret; 
0x0013a013: push eax; push dword ptr [esp + 0x1c]; call 0x13a030; add esp, 0x1c; ret; 
0x0013a333: push eax; push dword ptr [esp + 0x1c]; call 0x13a350; add esp, 0x1c; ret; 
0x001724cd: push eax; push dword ptr [esp + 0x1c]; call 0x172220; add esp, 0x10; add esp, 0xc; ret; 
0x00175870: push eax; push dword ptr [esp + 0x1c]; call 0x1756e0; add esp, 0x1c; ret; 
0x00024505: push eax; push dword ptr [esp + 0x1c]; call 0x244d9; add esp, 0x1c; ret; 
0x0003ff53: push eax; push dword ptr [esp + 0x1c]; call 0x3ff70; add esp, 0x1c; ret; 
0x00041f93: push eax; push dword ptr [esp + 0x1c]; call 0x41fb0; add esp, 0x1c; ret; 
0x0012449c: push eax; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x10; add esp, 0xc; ret; 
0x0009d50a: push eax; push dword ptr [esp + 0x1c]; call 0x9d470; add esp, 0x18; pop ebx; ret; 
0x000a98f8: push eax; push dword ptr [esp + 0x1c]; call 0xbfec0; add esp, 0x18; pop ebx; ret; 
0x000d8d84: push eax; push dword ptr [esp + 0x1c]; call 0xd7e40; add esp, 0x18; pop ebx; ret; 
0x00127b09: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x127390; add esp, 0x1c; ret; 
0x00059e99: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x65010; add esp, 0x1c; ret; 
0x00059eba: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x65310; add esp, 0x1c; ret; 
0x0005a1b9: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x653a0; add esp, 0x1c; ret; 
0x0007ece9: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x712d0; add esp, 0x1c; ret; 
0x0007edca: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71590; add esp, 0x1c; ret; 
0x000c0f69: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x71620; add esp, 0x1c; ret; 
0x000785b9: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x78490; add esp, 0x1c; ret; 
0x00059cf9: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x83dd0; add esp, 0x1c; ret; 
0x00059df9: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x1c; ret; 
0x000aa8f3: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xaa910; add esp, 0x1c; ret; 
0x0014f17f: push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0013e9aa: push eax; push dword ptr [esp + 0x2c]; call 0x13df10; add esp, 0x2c; ret; 
0x00181a6a: push eax; push dword ptr [esp + 0x2c]; call 0x181910; add esp, 0x28; pop ebx; ret; 
0x00170382: push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x001549f2: push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0002f0d3: push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call edi; 
0x00024dce: push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0002a150: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x00029be1: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002daf7: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002c713: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002ac4b: push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002cf00: push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002b8c8: push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x00132e07: push eax; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0003e96b: push eax; push eax; call 0x3e9d0; add esp, 0x1c; ret; 
0x00040362: push eax; push eax; call 0x3fe90; add esp, 0x10; add esp, 0xc; ret; 
0x000400b2: push eax; push eax; call 0x403d0; add esp, 0x10; add esp, 0xc; ret; 
0x000c1c43: push eax; push ebp; call esi; 
0x0008869f: push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00081776: push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0008624a: push eax; push ebx; call dword ptr [esi + 0x40]; 
0x001842ec: push eax; push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x0013289f: push eax; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0008c943: push eax; push ecx; call edx; 
0x0017565d: push eax; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00175696: push eax; push ecx; push esi; call dword ptr [edx + 8]; 
0x00170d9e: push eax; push edi; call dword ptr [eax + 0x14]; 
0x0016a1cf: push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0016a2c7: push eax; push edi; call dword ptr [edx + 0x18]; 
0x00133824: push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0005e975: push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016857b: push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016857b: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0016f2ea: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0008c510: push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00080dd2: push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00081ced: push eax; push edx; push esi; call ecx; 
0x00168654: push eax; push esi; call 0x169f00; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009639f: push eax; push esi; call 0x8cb10; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x00089abf: push eax; push esi; call dword ptr [ebp + 0xc]; 
0x00081a54: push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00079d96: push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00087c3b: push eax; push esi; call dword ptr [ecx + 0x40]; 
0x000873f3: push eax; push esi; call dword ptr [edi + 0x38]; 
0x00184be0: push eax; push esi; call dword ptr [edi + 0x40]; 
0x00086626: push eax; push esi; call dword ptr [edi + 0x48]; 
0x00087d27: push eax; push esi; call edx; 
0x000c0c2c: push eax; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0015a38b: push eax; push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x001335f8: push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0011ecab: push eax; push ss; ret; 
0x0003b101: push eax; ret; 
0x0013a1b1: push eax; rol byte ptr [ebx - 0x57ca818], 1; or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x0008cae8: push eax; sbb al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x001325e6: push eax; sbb al, 0x89; ret; 
0x0005ad32: push eax; sbb al, 0x8d; mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x00024ba0: push eax; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x00055de8: push eax; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000dbcd2: push eax; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00143e12: push eax; stc; call dword ptr [eax + 0x56]; 
0x00092a44: push eax; stc; call dword ptr [eax + 0x6a]; 
0x000921df: push eax; stc; call dword ptr [eax - 0x18]; 
0x00093920: push eax; stc; call dword ptr [eax - 0x73]; 
0x0016e308: push eax; sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00036b1a: push eax; sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x00172ffc: push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x001708a3: push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0011098c: push eax; test dword ptr [edx], eax; add byte ptr [ebx - 0x5ab6b], cl; dec dword ptr [ebp - 0x64def7e]; call dword ptr [eax + 0x68]; 
0x0013c033: push ebp; adc dword ptr [ecx], edi; ret 0x460f; 
0x0018efb4: push ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000497df: push ebp; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], esi; stc; call dword ptr [eax - 0x18]; 
0x0013b9ee: push ebp; add byte ptr [eax + 6], bh; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x000ad287: push ebp; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0008fae8: push ebp; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x00151a90: push ebp; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x6e], 0xf9; call dword ptr [eax - 0x18]; 
0x0007d107: push ebp; add eax, 0xc4830001; adc bl, ch; int 0x80; 
0x000b51d7: push ebp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00107375: push ebp; and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010738a: push ebp; and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00169994: push ebp; call 0x110fa0; mov ecx, dword ptr [esp + 0x48]; mov eax, dword ptr [ecx + 0x20]; mov dword ptr [esp], ecx; call dword ptr [eax + 0x10]; 
0x001708a7: push ebp; call dword ptr [eax + 0x10]; 
0x00085f92: push ebp; call dword ptr [eax + 0x1c]; 
0x00088910: push ebp; call dword ptr [esi + 0x20]; 
0x0007a3c2: push ebp; call dword ptr [esi + 0x40]; 
0x0016aa71: push ebp; call dword ptr [esi]; 
0x001708be: push ebp; call eax; 
0x0014f7e9: push ebp; call edi; 
0x000c1c44: push ebp; call esi; 
0x0007e7a5: push ebp; cli; jmp dword ptr [esi - 0x70]; 
0x00181fca: push ebp; cmp dl, 0x2f; ja 0x24a04; mov eax, dword ptr [ebp - 0x38]; add eax, dword ptr [eax + edx*4 - 0x6c854]; jmp eax; 
0x000a0427: push ebp; cmp ecx, edi; dec dword ptr [ebx - 0x72ebdbac]; sbb al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x000a7cb5: push ebp; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe896; inc esp; ret 0x66c3; 
0x0016694f: push ebp; jae 0x16694b; call dword ptr [eax + 0x6a]; 
0x00166983: push ebp; jae 0x16697f; jmp dword ptr [ebp - 0x75]; 
0x00166a1f: push ebp; jae 0x166a1b; call dword ptr [eax - 0x18]; 
0x001a9ff8: push ebp; les ecx, ptr [ecx]; ret 0xfa09; 
0x001a9fde: push ebp; mov ah, 0x89; ret 0x950f; 
0x0005ce9f: push ebp; mov al, 0x89; inc ebp; mov eax, 0xfff89ee9; call dword ptr [eax + 0x52]; 
0x000d0465: push ebp; mov al, 0x8b; inc ebp; aam 1; ret 0x5389; 
0x00135636: push ebp; mov al, 0x8d; mov bl, 0x1c; stc; call dword ptr [eax + 0x50]; 
0x001aee2b: push ebp; mov al, 0xf; test byte ptr [esi + edi*8 - 1], ah; jmp dword ptr [esi - 0x7b]; 
0x001a933b: push ebp; mov byte ptr [ecx], cl; ret 0x458b; 
0x000d069f: push ebp; mov eax, 0x1d4458b; ret 0x1689; 
0x00166114: push ebp; mov eax, 0x8910c483; ret; 
0x00081241: push ebp; mov eax, 0x931c828d; stc; call dword ptr [eax - 0x73]; 
0x001377ad: push ebp; mov eax, 0xb990828d; stc; call dword ptr [eax - 0x73]; 
0x0016f741: push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0011d952: push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00035355: push ebp; mov esp, 0x3e3f808d; stc; call dword ptr [eax - 0x18]; 
0x001abbfc: push ebp; mov esp, 0x85c07d8b; fisttp dword ptr [edi]; test byte ptr [edi - 0x900000d], ah; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [eax]; 
0x001aaeef: push ebp; mov esp, 0xf7b84589; ret; 
0x00054e2e: push ebp; or al, 0xf7; ret 0; 
0x0014e7a6: push ebp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00120455: push ebp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x00122b3b: push ebp; popal; stc; call dword ptr [eax + 0x55]; 
0x0014f40a: push ebp; push 0; push edi; push ebx; call edx; 
0x0016aa9e: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016aa5b: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00025c66: push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x000d8bfd: push ebp; push dword ptr [esp + 0x34]; mov eax, dword ptr [esp + 0x78]; call eax; 
0x00168a0a: push ebp; push eax; call dword ptr [ecx + 8]; 
0x0009391f: push ebp; push eax; stc; call dword ptr [eax - 0x73]; 
0x000e49f7: push ebp; push ebx; call eax; 
0x00150b05: push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00110c87: push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0016a338: push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000860fe: push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007cc61: push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x000861cf: push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0008825d: push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00184d64: push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00171b50: push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0007bec5: push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x000886a0: push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00174ea2: push ebp; push esi; call edi; 
0x001727b1: push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x000ec0d7: push ebp; ret; 
0x00030be0: push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x000d9b17: push ebp; stc; call dword ptr [eax + 0x53]; 
0x000da286: push ebp; stc; call dword ptr [eax + 0x56]; 
0x000c1deb: push ebp; stc; call dword ptr [eax - 0x18]; 
0x0016390b: push ebp; std; jmp dword ptr [esi - 0x70]; 
0x00148baf: push ebp; sub byte ptr [ecx - 0x4436b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000ed38a: push ebx; adc al, 0x8d; or byte ptr [ebp + 0x40], 0xf9; call dword ptr [eax - 0x77]; 
0x000a48d9: push ebx; adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x00087889: push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x00180a23: push ebx; add al, 0x29; ret 0xea39; 
0x00085290: push ebx; add al, 0x5b; pop esi; ret; 
0x000f8699: push ebx; add al, 0x74; xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00084387: push ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013220b: push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000c41d9: push ebx; add al, 0x83; ret; 
0x0005ac4b: push ebx; add al, 0x88; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0010a0c1: push ebx; add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x00106fd1: push ebx; add al, 0x8b; mov word ptr [eax - 0x6f5e8], ss; add ecx, eax; jmp ecx; 
0x0011cfdd: push ebx; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0011ec47: push ebx; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0011ebf2: push ebx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003feae: push ebx; add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x00147af0: push ebx; add dword ptr [ecx - 0x72ebdbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00035279: push ebx; add eax, 0x3489ffff; and al, 0x89; ret; 
0x000921b5: push ebx; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ecx*2 - 7], bh; call dword ptr [eax - 0x18]; 
0x0017f869: push ebx; and al, 0x89; ret; 
0x00026051: push ebx; and byte ptr [ebp - 0x72118b2e], al; nop; in al, dx; jg 0x26055; call dword ptr [edx - 0x73]; 
0x0013643e: push ebx; and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x001547e0: push ebx; call 0x180100; add esp, 0x10; mov eax, ebx; call eax; 
0x0015d816: push ebx; call 0x180100; mov dword ptr [esp], ebp; call ebx; 
0x0002f334: push ebx; call 0x180100; mov dword ptr [esp], esi; call ebx; 
0x0013d440: push ebx; call 0x60520; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00169081: push ebx; call dword ptr [eax + 0x10]; 
0x00169593: push ebx; call dword ptr [eax + 0x14]; 
0x0016ed21: push ebx; call dword ptr [eax + 0x18]; 
0x00175afb: push ebx; call dword ptr [eax + 0x20]; 
0x0016eda7: push ebx; call dword ptr [eax + 0x24]; 
0x0007f92f: push ebx; call dword ptr [eax + 0xc]; 
0x0016ae3b: push ebx; call dword ptr [eax + 4]; 
0x00169071: push ebx; call dword ptr [eax]; 
0x0016919a: push ebx; call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0007bf45: push ebx; call dword ptr [ebp + 0x1c]; 
0x0008714b: push ebx; call dword ptr [ebp + 0x24]; 
0x00088140: push ebx; call dword ptr [ebp + 0x40]; 
0x0008a392: push ebx; call dword ptr [ebp + 0xc]; 
0x0008a1c8: push ebx; call dword ptr [edi + 0x18]; 
0x0018452d: push ebx; call dword ptr [edi + 0x24]; 
0x00081777: push ebx; call dword ptr [edi + 0x40]; 
0x0008688d: push ebx; call dword ptr [edi + 0x44]; 
0x0008a755: push ebx; call dword ptr [edi + 0xc]; 
0x0005cbf6: push ebx; call dword ptr [edi - 0x77]; 
0x0007f612: push ebx; call dword ptr [esi + 0x10]; 
0x00135034: push ebx; call dword ptr [esi + 0x14]; 
0x0007fe49: push ebx; call dword ptr [esi + 0x18]; 
0x0007cc63: push ebx; call dword ptr [esi + 0x24]; 
0x00085d36: push ebx; call dword ptr [esi + 0x30]; 
0x000861d1: push ebx; call dword ptr [esi + 0x3c]; 
0x0008624b: push ebx; call dword ptr [esi + 0x40]; 
0x000893bd: push ebx; call dword ptr [esi + 0xc]; 
0x0012b263: push ebx; call dword ptr gs:[0x10]; 
0x00078dcb: push ebx; call eax; 
0x00127ead: push ebx; call edx; 
0x00127e55: push ebx; call esi; 
0x001082cb: push ebx; clc; jmp dword ptr [esi - 0x70]; 
0x0007eab5: push ebx; cli; jmp dword ptr [esi - 0x70]; 
0x0017015a: push ebx; dec esp; push edx; call eax; 
0x0016f7c2: push ebx; in al, dx; inc dword ptr [ebx - 0x72afef3c]; sbb eax, -0x39; stc; call dword ptr [eax - 0x73]; 
0x000f7e97: push ebx; inc esi; pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x00066372: push ebx; ja 0x676f8; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00072371: push ebx; ja 0x72463; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x722c8]; jmp eax; 
0x0015cb29: push ebx; jo 0x15cb25; call dword ptr [eax + 0x55]; 
0x0015cbd5: push ebx; jo 0x15cbd1; call dword ptr [edx + 0x50]; 
0x0015cf35: push ebx; jo 0x15cf31; call dword ptr [edx + 0x50]; 
0x0015d015: push ebx; jo 0x15d011; call dword ptr [edx + 0x50]; 
0x0015d461: push ebx; jo 0x15d45d; call dword ptr [edx + 0x50]; 
0x0015d505: push ebx; jo 0x15d501; call dword ptr [eax - 1]; 
0x0015d64a: push ebx; jo 0x15d646; call dword ptr [eax - 1]; 
0x0015d7f9: push ebx; jo 0x15d7f5; call dword ptr [eax - 1]; 
0x0015d88e: push ebx; jo 0x15d88a; call dword ptr [eax - 1]; 
0x0002a14b: push ebx; lea eax, [esp + 0x70]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call esi; 
0x00052261: push ebx; lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003fb0f: push ebx; lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0017358b: push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0011bdab: push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00110ebb: push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000603cb: push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b73b: push ebx; mov eax, 0x27; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011c93b: push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010ac90: push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f64b: push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012b95b: push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001112eb: push ebx; mov eax, 0x3f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011edeb: push ebx; mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d92ab: push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0011cfdb: push ebx; mov eax, 0x53; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00127d7b: push ebx; mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120b3b: push ebx; mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f3fb: push ebx; mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011d4db: push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003c41b: push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011ed9b: push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012bbeb: push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a96b: push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a70b: push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00110f2b: push ebx; mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012a0cb: push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009cf6b: push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b22b: push ebx; mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005e977: push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001842ed: push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x001323fa: push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0013b400: push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e7104: push ebx; mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012ebb9: push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0018b925: push ebx; mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e047: push ebx; mov ebx, 0xd; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001266f6: push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009e39a: push ebx; mov ebx, 1; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x0012e535: push ebx; mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009627e: push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0011d66c: push ebx; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0010fbc3: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008d69d: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009d581: push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b2a7: push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00060422: push ebx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00112706: push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012c420: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b780: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d510: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d020: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111330: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c090: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be00: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be60: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111050: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f440: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129250: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf70: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc30: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125050: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd10: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd40: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c060: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b70: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed930: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed900: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f70: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124310: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124020: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124050: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120630: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000b77db: push ebx; movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x0016d649: push ebx; or al, 0x5b; mov eax, 1; pop esi; pop edi; ret; 
0x0017e415: push ebx; or al, 0x5b; ret; 
0x001322ab: push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003ad27: push ebx; or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x000a468c: push ebx; or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x0008c1f0: push ebx; or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x000843b6: push ebx; or byte ptr [ecx - 0x3b7cf3b0], cl; add al, 0x5b; pop esi; ret; 
0x00039e9c: push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0009f08a: push ebx; or dh, dh; ret 0xf0f; 
0x0005b839: push ebx; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x0014e986: push ebx; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000f7e2f: push ebx; out dx, eax; add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x00122b56: push ebx; pop ebx; stc; call dword ptr [eax + 0x55]; 
0x00136a51: push ebx; push 0; push 0x1000001; call eax; 
0x00136bef: push ebx; push 0; push 0x1000002; call edx; 
0x00136694: push ebx; push 0; push 0x1000005; call edx; 
0x001328a0: push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0007ce73: push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x00135fb7: push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x000c0b95: push ebx; push dword ptr [edi]; call esi; 
0x0007ab54: push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00029543: push ebx; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028fb0: push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00171415: push ebx; push eax; call dword ptr [edx + 8]; 
0x0011e1e7: push ebx; push eax; pop ebx; pop esi; pop edi; ret; 
0x00150b04: push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00184ff3: push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00077fb4: push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0005e8d2: push ebx; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00175730: push ebx; push esi; call dword ptr [eax + 4]; 
0x0007fdb4: push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0008280d: push ebx; push esi; call eax; 
0x0013693d: push ebx; sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x000f7f87: push ebx; setne al; ret; 
0x000a24a0: push ebx; stc; call dword ptr [eax - 0x18]; 
0x0005f7c7: push ebx; std; call dword ptr [eax - 0x73]; 
0x00183b28: push ebx; sti; jmp dword ptr [esi - 0x70]; 
0x0017066d: push ebx; sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a47b3: push ebx; sub dh, dh; ret 0x7502; 
0x001893b6: push ebx; sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0007d1a2: push ebx; xor al, 0x89; ret 0xc483; 
0x00136b2d: push ebx; xor byte ptr [ecx + 0x4d89847d], cl; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x0011ef44: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011eef4: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000419d4: push ebx; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0008d670: push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00156391: push ecx; adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0016ae38: push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0016ae73: push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000b0fa3: push ecx; add al, 0x5b; ret; 
0x00078548: push ecx; add al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005c0eb: push ecx; add al, byte ptr [eax]; add dh, dh; ret 0xf10; 
0x00108de0: push ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0002619a: push ecx; call 0x180100; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0007de73: push ecx; call 0x7f9f0; add esp, 0x1c; ret; 
0x00175443: push ecx; call dword ptr [eax + 4]; 
0x0017547b: push ecx; call dword ptr [eax]; 
0x0011d1ac: push ecx; call dword ptr [edx + 0x53]; 
0x0008c59a: push ecx; call eax; 
0x0008c944: push ecx; call edx; 
0x0007ec85: push ecx; cli; jmp dword ptr [esi - 0x70]; 
0x000322ec: push ecx; cmp al, 0xf9; call dword ptr [eax - 0x18]; 
0x0010ad18: push ecx; cmp eax, 0xfffff001; jae 0x24ef0; ret; 
0x0018da41: push ecx; imul eax, dword ptr [eax + eax], 3; sbb al, 0x8b; jmp ebx; 
0x0005f963: push ecx; inc edx; stc; call dword ptr [eax + 0x6a]; 
0x0010a721: push ecx; ja 0x10a930; mov eax, dword ptr [ebx + edx*4 - 0x6f390]; add eax, ebx; jmp eax; 
0x000be225: push ecx; jle 0xbe238; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c4318: push ecx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c168a: push ecx; lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x44]; push dword ptr [eax]; call edi; 
0x000dbffe: push ecx; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00129a9b: push ecx; mov ah, 0xef; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x00110c88: push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0008c3b2: push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000c168f: push ecx; mov eax, dword ptr [esp + 0x44]; push dword ptr [eax]; call edi; 
0x00181a2b: push ecx; mov ebx, 0xc483fff0; adc bl, ch; ret; 
0x0016857e: push ecx; or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x001701d8: push ecx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0005d9a2: push ecx; or al, 0xf6; ret 0xf01; 
0x0014824f: push ecx; or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0014ec06: push ecx; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000b1005: push ecx; pop es; pop ebx; ret; 
0x0014320c: push ecx; push -7; call dword ptr [eax + 0x53]; 
0x00171a3c: push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x00127eaa: push ecx; push 3; push ebx; call edx; 
0x0017196a: push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x001696bd: push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0017197d: push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00136eaa: push ecx; push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x00136d10: push ecx; push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x000a4825: push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0007abb6: push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0008c428: push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0016dabe: push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0003eb23: push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x00172f95: push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0016fd18: push ecx; push eax; call dword ptr [edx + 8]; 
0x00087d26: push ecx; push eax; push esi; call edx; 
0x0007bf44: push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0016dabd: push ecx; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x001727d2: push ecx; push edi; call dword ptr [eax + 8]; 
0x0008c740: push ecx; push edi; call eax; 
0x0008c50e: push ecx; push edi; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008bbec: push ecx; push edx; call 0x17dfa0; add esp, 0x1c; ret; 
0x00175d82: push ecx; push edx; call dword ptr [eax + 0x20]; 
0x00175d58: push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00175318: push ecx; push edx; call dword ptr [eax + 4]; 
0x00174fba: push ecx; push edx; call dword ptr [eax]; 
0x0016b1ac: push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000dc115: push ecx; push edx; push eax; call 0xd7e40; add esp, 0x1c; ret; 
0x0017565e: push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00175697: push ecx; push esi; call dword ptr [edx + 8]; 
0x00184ff4: push ecx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x0004122b: push ecx; ret; 
0x0008c144: push ecx; sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0009f4dd: push ecx; stc; call dword ptr [eax + 0x53]; 
0x0009b459: push ecx; stc; call dword ptr [eax - 0x18]; 
0x0009c9c7: push ecx; stc; call dword ptr [eax - 0x73]; 
0x0005f90f: push ecx; std; call dword ptr [eax - 0x73]; 
0x00127e4e: push ecx; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x000b7442: push edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x000b8ba3: push edi; adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b74c3: push edi; adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000b75c3: push edi; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x0008dff9: push edi; adc byte ptr [ebp + 0x313974d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000b8b80: push edi; adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000b8c90: push edi; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000b8c13: push edi; adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000b7503: push edi; adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000b7523: push edi; adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x000b74a0: push edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b8bc4: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b74e4: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0018edcb: push edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b7288: push edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x00139edb: push edi; add al, 0x89; dec edi; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0006e0d2: push edi; add al, 0x8b; inc edi; or byte ptr [ecx], bh; ret 0x840f; 
0x0015830b: push edi; add al, 0xf7; ret 0xfffd; 
0x000b726a: push edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x001574e6: push edi; add byte ptr [eax - 0x73], dl; and dword ptr [edi + 0x6f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000b890a: push edi; add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0009b865: push edi; add dword ptr [ecx], edi; ret 0x830f; 
0x000b72a8: push edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000b8978: push edi; add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x00078aa6: push edi; add ecx, ebp; ret; 
0x000c3a5d: push edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00026f72: push edi; call 0x180100; mov dword ptr [esp], ebx; call edi; 
0x0009e3bf: push edi; call 0x231a0; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0009bc21: push edi; call 0x3cb00; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0016aaa2: push edi; call dword ptr [eax + 0x10]; 
0x00170d9f: push edi; call dword ptr [eax + 0x14]; 
0x0016a241: push edi; call dword ptr [eax + 0x18]; 
0x0007e2ff: push edi; call dword ptr [eax + 0x1c]; 
0x00170db6: push edi; call dword ptr [eax + 4]; 
0x0016aa5f: push edi; call dword ptr [eax + 8]; 
0x001727b5: push edi; call dword ptr [eax]; 
0x00080dd4: push edi; call dword ptr [ebx + 0x38]; 
0x0016a1d0: push edi; call dword ptr [ecx + 0x18]; 
0x0016a2c8: push edi; call dword ptr [edx + 0x18]; 
0x0008c741: push edi; call eax; 
0x000b7601: push edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x0002fc28: push edi; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x000a0e2b: push edi; fldcw word ptr [ecx]; ret 0xcd89; 
0x0008aef5: push edi; in al, 0xff; dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x00194f7b: push edi; inc dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014dad5: push edi; ja 0x14dacb; jmp dword ptr [esi - 0x70]; 
0x00161885: push edi; jbe 0x161885; jmp dword ptr [esi - 0x70]; 
0x000b8c70: push edi; jge 0x5e6aabbe; pop ebx; ret; 
0x000b7580: push edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000408e3: push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00170de4: push edi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0016f5eb: push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x00169cc7: push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x001699eb: push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0003aaf4: push edi; or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0005b348: push edi; or al, 0xf6; ret 0x7401; 
0x000b89ac: push edi; or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000b89ce: push edi; or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000b8a0c: push edi; or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x00080dcb: push edi; or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x000b72cc: push edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b8c30: push edi; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000673e2: push edi; or eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x000b777b: push edi; out 0x10, al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0014e5c6: push edi; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e525: push edi; pop eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000b730c: push edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x00127e52: push edi; push 0; push ebx; call esi; 
0x00133825: push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00127e66: push edi; push 1; push ebx; call esi; 
0x00127e79: push edi; push 2; push ebx; call esi; 
0x000b7560: push edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0007e20b: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007ae94: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0016b691: push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000c1f4d: push edi; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0002845f: push edi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00077fb5: push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0016da70: push edi; push eax; call dword ptr [ecx + 8]; 
0x00170dcd: push edi; push eax; call dword ptr [edx + 4]; 
0x0008c50f: push edi; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0011d951: push edi; push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00169592: push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0007cc62: push edi; push ebx; call dword ptr [esi + 0x24]; 
0x000861d0: push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0008825e: push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0014f40d: push edi; push ebx; call edx; 
0x0005e976: push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001323f9: push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0014ea25: push edi; push ebx; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00040f5a: push edi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0008c3b0: push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000a0513: push edi; push edx; stc; call dword ptr [eax - 0x18]; 
0x00184d65: push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0005e8d3: push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00169cfe: push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00171b51: push edi; push esi; push eax; call dword ptr [edx]; 
0x0008813e: push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0016ed1d: push edi; push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x000934a0: push edi; ret 0; 
0x0010ac02: push edi; ret 0x67; 
0x001244f5: push edi; ret 0xfff3; 
0x00116e45: push edi; ret; 
0x00147442: push edi; stc; call dword ptr [eax + 0x52]; 
0x00147484: push edi; stc; call dword ptr [eax + 0x53]; 
0x000f79c1: push edi; stc; call dword ptr [eax + 0x6a]; 
0x000e8587: push edi; stc; call dword ptr [eax - 0x18]; 
0x000ed592: push edi; stc; call dword ptr [eax - 0x73]; 
0x000f79fc: push edi; stc; call dword ptr [ebx + 0x50]; 
0x0008da86: push edi; stc; jmp dword ptr [ebp - 0x39]; 
0x00183709: push edi; sti; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x001718d6: push edx; adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001a3968: push edx; adc byte ptr [ecx], ch; ret 0xe183; 
0x0019f306: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00081a8e: push edx; add al, 0x8b; jl 0x81ab7; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0002869a: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and edx, 0x3a; stc; call dword ptr [eax - 0x18]; 
0x00029988: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dl, ah; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00028dae: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edx, esp; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x000b0e8a: push edx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0002a9cb: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0007c7aa: push edx; add dword ptr [eax], eax; add byte ptr [ebx - 0xa9fb14], al; jne 0x7c7bd; push edx; call dword ptr [ebx + 0x1c]; 
0x000646ab: push edx; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf44244c], cl; mov edi, 0xfc985d0; inc ebp; ret 0xc689; 
0x000d9239: push edx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012a69d: push edx; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0019f31b: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0008bbed: push edx; call 0x17dfa0; add esp, 0x1c; ret; 
0x00026844: push edx; call 0x180100; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0009875b: push edx; call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x001721f1: push edx; call dword ptr [eax + 0x10]; 
0x00175d83: push edx; call dword ptr [eax + 0x20]; 
0x00175d59: push edx; call dword ptr [eax + 0x24]; 
0x0010a3a0: push edx; call dword ptr [eax + 0xc]; 
0x00175319: push edx; call dword ptr [eax + 4]; 
0x00174fbb: push edx; call dword ptr [eax]; 
0x0007c7b5: push edx; call dword ptr [ebx + 0x1c]; 
0x0016857c: push edx; call dword ptr [ecx + 0xc]; 
0x0016857c: push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0016f2eb: push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0003e64a: push edx; call eax; 
0x0012012f: push edx; clc; inc dword ptr [ebx - 0x72aff33c]; or dword ptr [ebx], 0x66; stc; call dword ptr [eax + 0x6a]; 
0x0019f6ab: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019f46b: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019f73b: push edx; fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019f50b: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019f7db: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000a9c15: push edx; idiv bh; and ch, 2; lea edx, [edx - 0x177664]; cmove eax, edx; ret; 
0x000a9c55: push edx; idiv bh; and ch, 2; lea edx, [edx - 0x1776d4]; cmove eax, edx; ret; 
0x000c1c3a: push edx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x00078dc4: push edx; lea edx, [ebx + 0x28]; push edx; push 1; push ebx; call eax; 
0x000825ea: push edx; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000826c9: push edx; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00169067: push edx; lea edx, [esi - 0xcdb44]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x00169190: push edx; lea edx, [esi - 0xcdb44]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x001373ec: push edx; lea edx, [esi - 0xffb34]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0019f6c9: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0016b1ad: push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0008c511: push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00040f5b: push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x000825ee: push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000f7e78: push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0017140a: push edx; mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x0009e7a4: push edx; or al, 0x83; ret; 
0x0005ee4e: push edx; or al, 0xf6; ret 0xf01; 
0x00156c70: push edx; or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0009eb84: push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0017a02a: push edx; or byte ptr [ecx], bh; ret 0x4075; 
0x0014bb71: push edx; or byte ptr [ecx], bh; ret 0x460f; 
0x0014eac6: push edx; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00155b2e: push edx; outsd dx, dword ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x00084fec: push edx; pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00084ebc: push edx; pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0016906e: push edx; push 1; push ebx; call dword ptr [eax]; 
0x00078dc8: push edx; push 1; push ebx; call eax; 
0x00169197: push edx; push 2; push ebx; call dword ptr [eax]; 
0x0016923d: push edx; push 4; push ebx; call dword ptr [eax]; 
0x0002fe97: push edx; push dword ptr [eax + 0x10e4]; call 0x128960; add esp, 0x1c; ret; 
0x001176aa: push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x001244ef: push edx; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x10; add esp, 0xc; ret; 
0x00127b55: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x127390; add esp, 0x1c; ret; 
0x001380e5: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x65010; add esp, 0x1c; ret; 
0x00138325: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x712d0; add esp, 0x1c; ret; 
0x00137b55: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x83fe0; add esp, 0x1c; ret; 
0x00138945: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x843e0; add esp, 0x1c; ret; 
0x0008c8c2: push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00138ec8: push edx; push dword ptr [esp + 0x2c]; call 0x7d3a0; add esp, 0x2c; ret; 
0x00139276: push edx; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x00138e86: push edx; push dword ptr [esp + 0x2c]; call 0x841c0; add esp, 0x2c; ret; 
0x00129ae0: push edx; push dword ptr [esp + 0x30]; call 0x129a40; add esp, 0x2c; ret; 
0x000c19a1: push edx; push dword ptr [esp + 0x30]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0008890b: push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x00111f75: push edx; push eax; call 0x112200; add esp, 0x10; add esp, 0xc; ret; 
0x000280e9: push edx; push eax; call 0x96410; add esp, 0x1c; ret; 
0x000dc116: push edx; push eax; call 0xd7e40; add esp, 0x1c; ret; 
0x000d7d30: push edx; push eax; call 0xda4f0; add esp, 0x1c; ret; 
0x0005ae11: push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0017f866: push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0017f8ed: push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000edbff: push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00171ecc: push edx; push eax; call edi; 
0x00024504: push edx; push eax; push dword ptr [esp + 0x1c]; call 0x244d9; add esp, 0x1c; ret; 
0x00081775: push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00086249: push edx; push eax; push ebx; call dword ptr [esi + 0x40]; 
0x001842eb: push edx; push eax; push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00081a53: push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00087c3a: push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x000873f2: push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00184bdf: push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x001695b5: push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00175afa: push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016edbc: push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0016ae3a: push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ae75: push edx; push ebx; call dword ptr [eax]; 
0x0007e63a: push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000e4b51: push edx; push ebx; call eax; 
0x0008280c: push edx; push ebx; push esi; call eax; 
0x00175442: push edx; push ecx; call dword ptr [eax + 4]; 
0x0017547a: push edx; push ecx; call dword ptr [eax]; 
0x0008c65e: push edx; push ecx; call eax; 
0x0008c3b1: push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008c73f: push edx; push ecx; push edi; call eax; 
0x00170db5: push edx; push edi; call dword ptr [eax + 4]; 
0x00080dd3: push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0013a8fa: push edx; push edi; call eax; 
0x0016b690: push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00087ac0: push edx; push esi; call dword ptr [eax + 0x48]; 
0x0017577e: push edx; push esi; call dword ptr [eax]; 
0x0013a9cb: push edx; push esi; call eax; 
0x00081cee: push edx; push esi; call ecx; 
0x0009e92a: push edx; push esp; stc; jmp dword ptr [esi - 0x70]; 
0x0019fb48: push edx; ret 0xc2bb; 
0x0019faa8: push edx; ret; 
0x001373f3: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0010158d: push edx; sbb al, 0xf6; ret 0xf08; 
0x00058e2a: push edx; scasd eax, dword ptr es:[edi]; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x0019fb6b: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019fc1b: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019facb: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009fd99: push edx; stc; call dword ptr [eax + 0x53]; 
0x0009fe75: push edx; stc; call dword ptr [eax + 0x56]; 
0x0009fba6: push edx; stc; call dword ptr [eax - 0x18]; 
0x0005f826: push edx; std; call dword ptr [ebp + 0x50]; 
0x00137241: push edx; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0019f330: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x00061030: push es; aad 0x83; ret 0x101; 
0x001021f9: push es; adc byte ptr [ebx - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x0013b408: push es; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x00071de1: push es; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x7249c]; jmp eax; 
0x0019f702: push es; add byte ptr [eax], al; pop ebx; ret; 
0x000b0a7f: push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b701a: push es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0014559d: push es; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0002ff88: push es; add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00034710: push es; add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000c5609: push es; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000c87a9: push es; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000d5d78: push es; add byte ptr [ebx - 0x363f4b], cl; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x0005282a: push es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x000ce4f7: push es; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0012077c: push es; add byte ptr [ecx + 0x116696c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000a97aa: push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000a986a: push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x001a49cb: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0007f801: push es; add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000a227e: push es; add dword ptr [eax], eax; add dh, dh; ret; 
0x000d2cbf: push es; add eax, 0x8d2e0000; je 0xd2ced; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0017f26b: push es; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; ja 0x17f26e; call dword ptr [eax - 0x18]; 
0x0005e00e: push es; add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf40; 
0x0008cda5: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x0014ba29: push es; add esp, 0x18; pop ebx; ret; 
0x0003d1a9: push es; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120cd9: push es; add esp, 0x34; pop ebx; pop esi; ret; 
0x001764e0: push es; add esp, 0x54; pop ebx; pop esi; ret; 
0x0012ce70: push es; add esp, 0x74; pop ebx; pop esi; ret; 
0x000898e1: push es; add esp, 4; pop ebx; pop esi; ret; 
0x00140cf9: push es; add esp, 8; pop ebx; ret; 
0x001371c6: push es; and eax, 1; pop ebx; ret; 
0x00042198: push es; bsr eax, eax; add eax, 1; ret; 
0x0004276d: push es; bsr eax, edx; xor eax, 0x1f; ret; 
0x00166ca5: push es; call 0x150d90; add esp, 0x1c; ret; 
0x00166cb4: push es; call 0x150e60; add esp, 0x1c; ret; 
0x00150596: push es; cdq; bnd jmp dword ptr [ebp - 0x39]; 
0x0004f5c6: push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x001a3892: push es; jb 0x1a3910; lea eax, [edi + 5]; pop edi; ret; 
0x001a48b2: push es; jb 0x1a4930; lea eax, [eax + 5]; pop edi; ret; 
0x00172dd1: push es; jg 0x172dc0; add esp, 4; pop ebx; pop esi; ret; 
0x001a3f52: push es; jl 0x1a3fd0; lea eax, [ecx + 6]; ret; 
0x0014bf76: push es; jle 0x14bf67; dec dword ptr [ebp - 0x63f5b7d]; call dword ptr [eax + 0x68]; 
0x00180205: push es; jmp dword ptr [ecx]; 
0x000b0e23: push es; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1223: push es; jne 0xb10e1; pop ebx; ret; 
0x000b5694: push es; jne 0xb5531; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b6e01: push es; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000b8444: push es; jne 0xb8e00; pop edi; pop esi; pop ebx; ret; 
0x000bf189: push es; lea eax, [ecx + eax + 0x30]; ret; 
0x000b8a51: push es; lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000beec9: push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b3461: push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35c1: push es; lea eax, [edx + 0xd]; ret; 
0x000b0e20: push es; lea ecx, [edx + 6]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1220: push es; lea ecx, [edx + 6]; jne 0xb10e1; pop ebx; ret; 
0x001399d6: push es; loope 0x1399d8; jmp dword ptr [esi - 0x70]; 
0x000baf93: push es; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00127f96: push es; mov dl, 0xef; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0007fece: push es; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000be4b4: push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb041: push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000d1b5a: push es; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001519c1: push es; mov eax, ecx; ret; 
0x000bd864: push es; mov eax, edi; pop ebx; pop edi; ret; 
0x000af081: push es; mov eax, edi; pop edi; ret; 
0x000af1e1: push es; mov eax, edx; ret; 
0x0019c027: push es; mov ecx, dword ptr [ebx + ecx*4 - 0x85474]; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x000bb083: push es; movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be4e6: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bb073: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b73a3: push es; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000be3e6: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf83: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bb038: push es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b72b3: push es; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b7cec: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b7e4c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000bd85f: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b66ac: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b680c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3458: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b35b8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000af078: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000af1d8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0013cfce: push es; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0019997c: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00198163: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00122c91: push es; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; pop si; stc; call dword ptr [eax + 0x55]; 
0x0003e3c4: push es; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0012a839: push es; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00092409: push es; pop ebx; neg eax; pop esi; pop edi; ret; 
0x0011f5c9: push es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a9870: push es; pop ebx; pop esi; ret; 
0x00041973: push es; pop ebx; ret; 
0x00194300: push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019259a: push es; pop edi; call 0x182d19; add ebx, 0x424ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019052a: push es; pop edi; call 0x182d19; add ebx, 0x442df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e52a: push es; pop edi; call 0x182d19; add ebx, 0x4605f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b7371: push es; pop edi; pop esi; pop ebx; ret; 
0x000b33cc: push es; pop edi; ret; 
0x0016e9e6: push es; popal; in al, dx; call dword ptr [eax - 0x73]; 
0x0017197f: push es; push eax; call dword ptr [edx + 0x14]; 
0x000da859: push es; push esi; stc; call dword ptr [eax - 0x18]; 
0x0008ea71: push es; ret; 
0x00199980: push es; sub eax, ecx; pop ebp; ret; 
0x00198167: push es; sub eax, ecx; ret; 
0x001713e5: push es; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00170dc6: push es; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0008a128: push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012ddaf: push esi; adc al, 0x29; ret 0xca39; 
0x0002fd6e: push esi; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0009aed4: push esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00184bb9: push esi; adc byte ptr [ecx], bh; ret 0x4972; 
0x000b7264: push esi; add ah, byte ptr [esi - 0x77]; js 0x5e6a74c5; pop ebx; ret; 
0x0018ef1b: push esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007b0dc: push esi; add al, 0x39; ret; 
0x0017565b: push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00175694: push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x000826cb: push esi; add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000b7283: push esi; add al, 0x89; js 0x5e6a76e3; pop ebx; ret; 
0x000b7294: push esi; add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x00122f1c: push esi; add al, 0x89; ret 0xeac1; 
0x000be3c6: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf73: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b72a3: push esi; add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x0003fcb9: push esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011dc1b: push esi; add esp, 0x14; pop ebx; pop esi; ret; 
0x000fb9d6: push esi; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x0008922d: push esi; and al, 1; ret 0x5689; 
0x000873eb: push esi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00168655: push esi; call 0x169f00; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00025e97: push esi; call 0x180100; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00026023: push esi; call 0x180100; mov dword ptr [esp], ebx; call esi; 
0x00032716: push esi; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000963a0: push esi; call 0x8cb10; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x001688f0: push esi; call dword ptr [eax + 0x10]; 
0x0016890e: push esi; call dword ptr [eax + 0x14]; 
0x0007bec6: push esi; call dword ptr [eax + 0x1c]; 
0x000f11c0: push esi; call dword ptr [eax + 0x20]; 
0x0007ce77: push esi; call dword ptr [eax + 0x2c]; 
0x00084978: push esi; call dword ptr [eax + 0x30]; 
0x0007f80e: push esi; call dword ptr [eax + 0x34]; 
0x00087f7a: push esi; call dword ptr [eax + 0x40]; 
0x00087ac1: push esi; call dword ptr [eax + 0x48]; 
0x001689bc: push esi; call dword ptr [eax + 0xc]; 
0x001688aa: push esi; call dword ptr [eax + 4]; 
0x0017577f: push esi; call dword ptr [eax]; 
0x0008ac40: push esi; call dword ptr [ebp + 0x2c]; 
0x00089cfe: push esi; call dword ptr [ebp + 0x30]; 
0x000884ef: push esi; call dword ptr [ebp + 0xc]; 
0x0007ae98: push esi; call dword ptr [ebx + 0x1c]; 
0x0007d0af: push esi; call dword ptr [ebx + 0x2c]; 
0x0007a478: push esi; call dword ptr [ebx + 0x30]; 
0x0007d1a0: push esi; call dword ptr [ebx + 0x34]; 
0x000886a1: push esi; call dword ptr [ebx + 0x38]; 
0x00081a55: push esi; call dword ptr [ebx + 0x40]; 
0x00184779: push esi; call dword ptr [ebx + 0x44]; 
0x00079d97: push esi; call dword ptr [ebx + 0x48]; 
0x001694b0: push esi; call dword ptr [ebx + 0xc]; 
0x00079f0d: push esi; call dword ptr [ebx + 8]; 
0x00087c3c: push esi; call dword ptr [ecx + 0x40]; 
0x0007fdb5: push esi; call dword ptr [edi + 0x18]; 
0x00089954: push esi; call dword ptr [edi + 0x34]; 
0x000873f4: push esi; call dword ptr [edi + 0x38]; 
0x00081de1: push esi; call dword ptr [edi + 0x40]; 
0x001848c2: push esi; call dword ptr [edi + 0x44]; 
0x00086627: push esi; call dword ptr [edi + 0x48]; 
0x0017565f: push esi; call dword ptr [edx + 0xc]; 
0x00175698: push esi; call dword ptr [edx + 8]; 
0x0008280e: push esi; call eax; 
0x00081cef: push esi; call ecx; 
0x001282fa: push esi; call edi; 
0x00079782: push esi; call edx; 
0x00129c95: push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00147e36: push esi; fdivr st(7); jmp dword ptr [ebp - 0x75]; 
0x001a2186: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001a2117: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000a8e9b: push esi; inc ecx; jbe 0xa8eb0; cmove eax, edx; ret; 
0x000a9dcb: push esi; inc ecx; jbe 0xa9de0; cmove eax, edx; ret; 
0x000a9f9b: push esi; inc ecx; jbe 0xa9fb0; cmove eax, edx; ret; 
0x000a6f0b: push esi; inc ecx; jne 0xa6f12; lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x000a6f4b: push esi; inc ecx; jne 0xa6f52; lea edx, [edx - 0x1765a4]; cmove eax, edx; ret; 
0x000a7adb: push esi; inc ecx; jne 0xa7ae2; lea edx, [edx - 0x176f04]; cmove eax, edx; ret; 
0x000a8e6b: push esi; inc ecx; jne 0xa8e72; lea edx, [edx - 0x1769d4]; cmove eax, edx; ret; 
0x000a9c9b: push esi; inc ecx; jne 0xa9ca2; lea edx, [edx - 0x1785e4]; cmove eax, edx; ret; 
0x000a9d1b: push esi; inc ecx; jne 0xa9d22; lea edx, [edx - 0x1894a4]; cmove eax, edx; ret; 
0x000c33cb: push esi; inc ecx; jne 0xc33d2; cmove eax, edx; ret; 
0x000a9d9b: push esi; inc ecx; jnp 0xa9da4; cmove eax, edx; ret; 
0x000c256b: push esi; inc ecx; jnp 0xc2574; cmove eax, edx; ret; 
0x000c25bb: push esi; inc ecx; jnp 0xc25c4; cmove eax, edx; ret; 
0x000c357b: push esi; inc ecx; jnp 0xc3584; cmove eax, edx; ret; 
0x000c421b: push esi; inc ecx; jnp 0xc4224; cmove eax, edx; ret; 
0x001407fa: push esi; inc esp; and al, 0x74; and byte ptr [edi], cl; test dword ptr [0x89fffffe], ebp; ret 0xf883; 
0x0010dab4: push esi; int1; dec dword ptr [ecx - 0x76ebdbbc]; ret 0xc483; 
0x000fbe13: push esi; ja 0xfbee0; mov ebx, dword ptr [esp]; movzx eax, al; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x000c0c2d: push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x000680f9: push esi; ljmp 0x8300:0x768dffff; in al, dx; or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x0009ad46: push esi; mov dl, 0xff; inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x000e8119: push esi; mov eax, 0x166; lea ecx, [ebp - 0x6c324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0005e8d4: push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016f3ce: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00184ff5: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x001688d8: push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016a638: push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0016d864: push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00169bfe: push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00135f98: push esi; mov ebx, dword ptr [esp + 0x18]; je 0x135fa8; add esp, 8; pop ebx; ret; 
0x0015a38c: push esi; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x00169cc2: push esi; mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00129c6e: push esi; mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x000d96e2: push esi; or al, 0x29; ret 0x428d; 
0x00040044: push esi; or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x00135ce2: push esi; or al, 0xf6; ret 0xf04; 
0x0005e014: push esi; or al, 0xf6; ret 0xf40; 
0x00102f91: push esi; or al, 1; ret; 
0x000b6ea6: push esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000fa2a7: push esi; or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00038985: push esi; or byte ptr [ecx + edx - 0x7d], dh; ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0007f4df: push esi; or byte ptr [ecx], al; ret 0x3e89; 
0x000fd3ae: push esi; or byte ptr [ecx], bh; ret 0x1c7e; 
0x000fd3a4: push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x00101473: push esi; or byte ptr [ecx], bh; ret 0x474; 
0x00088626: push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000a02d1: push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x000b84a6: push esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bb207: push esi; or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014e706: push esi; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0013645e: push esi; push 0; push 0x1000003; call eax; 
0x00136b3b: push esi; push 0; push 0x1000004; call eax; 
0x0013695a: push esi; push 0; push 0x1000006; call ecx; 
0x00136704: push esi; push 0; push 0x1000007; call eax; 
0x001335f9: push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x001727b2: push esi; push 3; push edi; call dword ptr [eax]; 
0x0007c7b1: push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00136621: push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x000a4732: push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0016819b: push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00085f8d: push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0007e2fa: push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024e83: push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x001688c1: push esi; push eax; call dword ptr [edx + 4]; 
0x00171b52: push esi; push eax; call dword ptr [edx]; 
0x0016af72: push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0008c942: push esi; push eax; push ecx; call edx; 
0x000860fd: push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0011ec46: push esi; push ebx; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0016eda6: push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0008813f: push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008a1c7: push esi; push ebx; call dword ptr [edi + 0x18]; 
0x0012b262: push esi; push ebx; call dword ptr gs:[0x10]; 
0x000e4b17: push esi; push ebx; call eax; 
0x0012b2a6: push esi; push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011eef3: push esi; push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001696bc: push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0007bf43: push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000408e2: push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0008c3af: push esi; push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00041045: push esi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0008c8c1: push esi; push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0005ae10: push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0007e639: push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00136878: push esi; ret 0xf02; 
0x00031ed6: push esi; ret 0xf03; 
0x0005f28b: push esi; ret 0xf40; 
0x0005c0b5: push esi; ret 0xf50; 
0x0003020e: push esi; ret; 
0x00091b28: push esi; rol dword ptr [eax + 0xf], 0x84; mov esi, 0x8b000003; je 0x91b59; add al, 0x89; ret; 
0x001372fc: push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000fb7e8: push esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x0005a92e: push esi; sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a9bd2: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6b86c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a7b12: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bb8c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9e02: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bf6c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00138902: push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf5587c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a6e42: push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf5588c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000dd823: push esi; stc; call dword ptr [eax + 0x53]; 
0x000da776: push esi; stc; call dword ptr [eax + 0x56]; 
0x00030448: push esi; stc; call dword ptr [eax - 0x18]; 
0x00039a83: push esi; stc; dec dword ptr [edi]; inc ebp; call 0x2b276; jmp dword ptr [esi - 0x70]; 
0x000399a2: push esi; stc; inc dword ptr [ebx - 0x7c72f314]; sar dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x0003e0a1: push esi; stc; jmp dword ptr [esi - 0x77]; 
0x000b82d3: push esi; stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10dbc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016b194: push esi; sub al, 0x89; ret; 
0x0016b1c4: push esi; sub al, 1; ret 0x5689; 
0x000825ec: push esi; sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x001a2146: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001abc08: push esi; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [eax]; 
0x000ee305: push esi; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x0016b1c9: push esi; xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x0012ebb6: push esi; xor esi, esi; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009627b: push esi; xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00064f05: push esp; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x0006478d: push esp; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [edi + edx*4]; mov edi, ecx; jmp eax; 
0x00064007: push esp; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [esi + edx*4 - 0x72f14]; jmp eax; 
0x0018f104: push esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011eb13: push esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011e898: push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011e8c0: push esp; add byte ptr [eax], al; mov eax, 0x36; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x0011eb46: push esp; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011eb73: push esp; add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011eb0a: push esp; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x1c; ret; 
0x0013d2e6: push esp; add ch, byte ptr [ecx - 0xcb17]; jmp dword ptr [esi - 0x70]; 
0x000c143d: push esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0011eb5b: push esp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007d439: push esp; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001687ed: push esp; and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008bbda: push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00097c2a: push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00112708: push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012c422: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012bef2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011b782: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011d512: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011d022: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00111332: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012c092: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012be02: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012be62: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00111052: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012c0f2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011f442: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00129252: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012bf72: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012bc32: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00125052: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012bd12: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012bd42: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00108bd2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012c062: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e7b72: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011b1f2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x001118c2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000ed932: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000ed902: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00110f72: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x001243e2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00124312: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00124022: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00124052: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00120632: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0016a5cc: push esp; and al, 0x10; pop ebx; pop esi; jmp eax; 
0x00175b0d: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016edb9: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001751a7: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x00175144: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x0017543f: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00175477: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0013a8f7: push esp; and al, 0x10; push edx; push edi; call eax; 
0x0013a9c8: push esp; and al, 0x10; push edx; push esi; call eax; 
0x0005a946: push esp; and al, 0x10; test byte ptr [edx], 0x20; je 0x5a958; add esp, 0xc; ret; 
0x00077c16: push esp; and al, 0x10; test byte ptr [edx], 0x20; je 0x77c28; add esp, 0xc; ret; 
0x00034a9c: push esp; and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x00096429: push esp; and al, 0x14; call 0x962c0; xor eax, eax; add esp, 0xc; ret; 
0x0011ef4c: push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0009244a: push esp; and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001893bb: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009d587: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c907: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012c157: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c237: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001226c7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ff7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00120607: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd97: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0016b1af: push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000edbfc: push esp; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001695b2: push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x0012e052: push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0012ac2b: push esp; and al, 0x18; cmp esi, -1; je 0x12ac50; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00107f08: push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0009db94: push esp; and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011b82f: push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010888d: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00060428: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012673c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001118fc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b27c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c32c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfac: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c02c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdcc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c18c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bfec: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bebc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c1fc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012acfc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270ec: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241bc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012069c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0018b830: push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e540: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00176509: push esp; and al, 0x18; test edx, edx; jne 0x176518; add esp, 0xc; ret; 
0x00176649: push esp; and al, 0x18; test edx, edx; jne 0x176658; add esp, 0xc; ret; 
0x0011ee85: push esp; and al, 0x18; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a81a: push esp; and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012aa77: push esp; and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009bc28: push esp; and al, 0x1c; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e7bb9: push esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000dbd4d: push esp; and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4ed: push esp; and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001387cb: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x0013996b: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x0018b9e1: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x00040230: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x000527e0: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x00090983: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x000966b3: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b13: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x0009703f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x0009748f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x0009a41a: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a686: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9a6b7; add esp, 0x2c; ret; 
0x00174fed: push esp; and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x001271f1: push esp; and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00171ec9: push esp; and al, 0x20; push edx; push eax; call edi; 
0x0017577b: push esp; and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x000e809e: push esp; and al, 0x24; call 0xe7d70; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00040f61: push esp; and al, 0x24; call eax; 
0x00108991: push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003fca9: push esp; and al, 0x28; call dword ptr gs:[0x10]; 
0x0012ab48: push esp; and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003fcd8: push esp; and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x001250d8: push esp; and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00126678: push esp; and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00129198: push esp; and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011be78: push esp; and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0011c848: push esp; and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x0011d8e8: push esp; and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x00172fff: push esp; and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00087abd: push esp; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0009dcf0: push esp; and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0011243b: push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000dbee1: push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00128b0b: push esp; and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x128b1b; add esp, 0x3c; ret; 
0x0018b8af: push esp; and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000dbd51: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4f1: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011b605: push esp; and al, 0x34; mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00172f8f: push esp; and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000c1c40: push esp; and al, 0x34; push eax; push ebp; call esi; 
0x000f8353: push esp; and al, 0x38; call dword ptr gs:[0x10]; 
0x00125502: push esp; and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125da2: push esp; and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f8382: push esp; and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f8522: push esp; and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0012eb50: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011cf53: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001251fa: push esp; and al, 0x38; mov edi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012522e: push esp; and al, 0x38; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125ace: push esp; and al, 0x38; mov edi, dword ptr [esp + 4]; mov dword ptr [esp + 0xc], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010b18b: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010b1c0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012a4b0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0012b460: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012ba00: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012d730: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c22ef: push esp; and al, 0x38; push dword ptr [edx + 8]; call ebx; 
0x0017358d: push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x00184d18: push esp; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00172f9e: push esp; and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x172fae; add esp, 0x4c; ret; 
0x00153393: push esp; and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0009d91e: push esp; and al, 0x48; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d69e: push esp; and al, 0x48; mov eax, 0x118; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009d8a5: push esp; and al, 0x48; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009d61f: push esp; and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012df62: push esp; and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], edi; lea edi, [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011ef9d: push esp; and al, 0x4c; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0011efa1: push esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012de2e: push esp; and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x12de3e; add esp, 0x7c; ret; 
0x00176305: push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0007abcc: push esp; and al, 0xc; add esp, 0x1c; ret; 
0x00091748: push esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0003bc82: push esp; and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00175ac8: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00175180: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0018289c: push esp; and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000e4969: push esp; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0011c6e3: push esp; and al, 0xc; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000dbf55: push esp; and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0003b543: push esp; and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00093079: push esp; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0011c699: push esp; and al, 0xc; mov ecx, dword ptr [esp + 0x54]; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000930bc: push esp; and al, 0xc; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010898d: push esp; and al, 0xc; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00175af7: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00175acc: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00175184: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017512f: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000e4b4e: push esp; and al, 0xc; push edx; push ebx; call eax; 
0x001754c7: push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0011eadc: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11eaf3; add esp, 0x1c; ret; 
0x0012105c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12106c; add esp, 0x1c; ret; 
0x0012275f: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x00128f82: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0012dc2d: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12dc3d; add esp, 0x1c; ret; 
0x00143a70: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x143a80; add esp, 0x1c; ret; 
0x00143abf: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x143acf; add esp, 0x1c; ret; 
0x00145fb9: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x00171c18: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x171c37; add esp, 0x1c; ret; 
0x00172118: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x172137; add esp, 0x1c; ret; 
0x0018568f: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x0003d850: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3d860; add esp, 0x1c; ret; 
0x0003fe75: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x00040082: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x00040332: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b5: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x00059ffe: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5a017; add esp, 0x1c; ret; 
0x000d7bf4: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000e2328: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47a8: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x000ec8d5: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xec8ef; add esp, 0x1c; ret; 
0x00175ca8: push esp; and al, 4; jmp dword ptr [eax + 0x20]; 
0x00175c80: push esp; and al, 4; jmp dword ptr [eax + 0x24]; 
0x0017fac0: push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0016add0: push esp; and al, 4; jmp dword ptr [eax + 4]; 
0x0008cb5a: push esp; and al, 4; jmp dword ptr [eax]; 
0x0007ac0f: push esp; and al, 4; jmp eax; 
0x00097bfa: push esp; and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008eeca: push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012d239: push esp; and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012d1fb: push esp; and al, 4; mov dword ptr [esp + 0xc], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0013b9e9: push esp; and al, 4; mov dword ptr gs:[ebp], edx; mov eax, 6; mov ebx, dword ptr [esp + 0x6c]; call dword ptr gs:[0x10]; 
0x0012d185: push esp; and al, 4; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0011dc2d: push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00033d4b: push esp; and al, 4; mov eax, dword ptr [eax + 0x170]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00034475: push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034485: push esp; and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0014d46b: push esp; and al, 4; mov eax, dword ptr [eax + 0x4e48]; test eax, eax; jne 0x14d487; ret; 
0x00175f71: push esp; and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003bbdc: push esp; and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003d5c1: push esp; and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008df02: push esp; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00093b0b: push esp; and al, 4; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008cc5b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc7b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc9b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008ccbb: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00093aeb: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00093acb: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x0009e5cb: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x358], edx; ret; 
0x0009e5ab: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x35c], edx; ret; 
0x0009e57b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e52b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4cb: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e4fb: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e65b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x394], edx; ret; 
0x0009e55b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3c34], edx; ret; 
0x00092d4b: push esp; and al, 4; ret; 
0x0008c9c1: push esp; and al, 4; setae al; ret; 
0x0016897d: push esp; and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x001125ef: push esp; and al, 8; call dword ptr gs:[0x10]; 
0x0007801d: push esp; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00110e95: push esp; and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001828c5: push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017674d: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0008e9b5: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001097d5: push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00120e52: push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0008eba1: push esp; and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x8ebb8; ret; 
0x0008ae45: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00182885: push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f85: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0003b8d4: push esp; and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00092ff6: push esp; and al, 8; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x001818a5: push esp; and al, 8; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x1818b0; ret; 
0x00114065: push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x00115a45: push esp; and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0008eb85: push esp; and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0007ab20: push esp; and al, 8; pop ebx; jmp eax; 
0x000f4cfc: push esp; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00093bff: push esp; and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00098a87: push esp; and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003315c: push esp; and dword ptr [eax], 0x5b; mov eax, edx; ret; 
0x0002c71f: push esp; call eax; 
0x0002a158: push esp; call esi; 
0x0007e8fd: push esp; cli; call dword ptr [ebx - 0x75]; 
0x0018377d: push esp; inc eax; stc; call dword ptr [eax - 0x73]; 
0x000f7f85: push esp; inc esi; push ebx; setne al; ret; 
0x00148b46: push esp; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0008d5d8: push esp; jl 0x8d5da; dec dword ptr [ebp + 0x5b002674]; pop esi; pop edi; ret; 
0x00128e2c: push esp; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0011c69f: push esp; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011c64d: push esp; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x0011c5de: push esp; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x00121c08: push esp; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012b5f4: push esp; mov ebx, dword ptr [esp + 0x50]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012e98b: push esp; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0011c6e1: push esp; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000e4f69: push esp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e5000: push esp; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000e4fca: push esp; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000e4f0a: push esp; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0014e8e6: push esp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00112787: push esp; pop ebx; pop esi; ret; 
0x00122e3c: push esp; popal; stc; call dword ptr [eax + 0x55]; 
0x0016ed1e: push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0002a154: push esp; push dword ptr [esp + 0x54]; call esi; 
0x00029be5: push esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c168e: push esp; push ecx; mov eax, dword ptr [esp + 0x44]; push dword ptr [eax]; call edi; 
0x0014eaaf: push esp; ret 0xfff9; 
0x00032937: push esp; ret; 
0x00077285: push esp; sidt [ecx - 0x4fb73]; call dword ptr [eax + 0x50]; 
0x00076ca4: push esp; sidt [ecx - 0x51373]; call dword ptr [eax + 0x50]; 
0x001524a1: push esp; stc; call dword ptr [eax + 0x52]; 
0x000a541f: push esp; stc; call dword ptr [eax + 0x57]; 
0x0013ed15: push esp; stc; call dword ptr [eax + 0x6a]; 
0x000a4191: push esp; stc; call dword ptr [eax - 0x18]; 
0x000c187f: push esp; stc; call dword ptr [eax - 0x18]; clc; and al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x000a4534: push esp; stc; call dword ptr [eax - 0x73]; 
0x0015bfd7: push esp; stc; call dword ptr [eax - 1]; 
0x000a446b: push esp; stc; call dword ptr [ebx + 0x50]; 
0x0009e92b: push esp; stc; jmp dword ptr [esi - 0x70]; 
0x000498bf: push esp; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x000c7b2b: push esp; xchg cl, bh; call dword ptr [eax - 0x18]; dec ebx; ret 0xfff6; 
0x00046ce1: push esp; xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x000ec898: push esp; xor ah, 0xff; add esp, 0x14; pop ebx; pop esi; ret; 
0x00070536: push esp; xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0006f3c6: push esp; xor ah, al; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72734]; add ecx, eax; jmp ecx; 
0x00070dbc: push esp; xor eax, esp; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72834]; add ecx, eax; jmp ecx; 
0x0006fc42: push esp; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x726b4]; add ecx, eax; jmp ecx; 
0x000a446a: push sp; stc; call dword ptr [ebx + 0x50]; 
0x0009e84b: push ss; add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008ea9c: push ss; add byte ptr [eax], al; add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x00114079: push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003c1e9: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003cbc9: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c189: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0008e247: push ss; add byte ptr [eax], al; add byte ptr [ebp + 0xbad2], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x00122901: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008e5f0: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a44a4: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008ea69: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x67602fa], al; ret; 
0x0008eba5: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 7], dh; ret; 
0x0007ad34: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a36b9: push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00096141: push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0003de49: push ss; add byte ptr [eax], al; add cl, ch; ret; 
0x000c0d79: push ss; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00042398: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00042306: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004236a: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000422d8: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x001127f0: push ss; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00084335: push ss; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x000bf449: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x0005f7cd: push ss; inc edx; stc; call dword ptr [eax + 0x6a]; 
0x00103b80: push ss; je 0x1049ce; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x000b7047: push ss; jne 0xb7700; pop edi; pop esi; pop ebx; ret; 
0x000bf179: push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000beeb9: push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000a6e3c: push ss; lea eax, [edx - 0xaadf4]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa774]; cmovne eax, edx; ret; 
0x001388fc: push ss; lea eax, [edx - 0xaae04]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa784]; cmovne eax, edx; ret; 
0x000b7241: push ss; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000bae60: push ss; mov cl, 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be374: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf31: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00129241: push ss; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000b7271: push ss; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000f82fb: push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000be345: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baf12: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7252: push ss; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0008b7d9: push ss; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x001849a0: push ss; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000542c8: push ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b8b44: push ss; pop edi; pop esi; pop ebx; ret; 
0x0011ecac: push ss; ret; 
0x00127278: push ss; stc; jmp dword ptr [ebp - 0x75]; 
0x00088907: push ss; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0008f402: push ss; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0018e49b: pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016add4: pushal; add al, 0x2e; lea esi, [esi]; nop; mov eax, 1; ret; 
0x0008c1bb: pushal; add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0011f3fd: pushal; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010abd5: pushal; add cl, al; call 0xfe0e4df; dec edi; ret 0xdce9; 
0x0019f244: pushal; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00175c84: pushal; and al, 0x2e; lea esi, [esi]; nop; mov eax, 1; ret; 
0x0016a973: pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x00175cac: pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000fb88c: pushal; cld; dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x0007dad5: pushal; cli; jmp dword ptr [esi - 0x70]; 
0x000b5a2c: pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b153c: pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0002619c: pushal; lahf; adc eax, 0x241c8900; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0011efa7: pushal; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000dbedf: pushal; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012da80: pushal; mov dword ptr [esp + 0x18], edi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d935: pushal; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017328d: pushal; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012ada8: pushal; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0016da6a: pushal; mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0002846b: pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ac53: pushal; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0011261d: pushal; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0012b79d: pushal; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012b823: pushal; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012b701: pushal; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000dbf53: pushal; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0011d72a: pushal; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011d670: pushal; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000b839c: pushal; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008eab5: pushal; or bl, bh; xor eax, eax; ret; 
0x0008e982: pushal; or dh, bh; xor eax, eax; ret; 
0x001127f3: pushal; pop ebx; pop esi; pop edi; ret; 
0x00028fb4: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002ac4f: pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00116e3c: pushal; ret; 
0x00195cb5: pushal; sar dh, 1; inc dword ptr [ecx + 0x3f497c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000ec5a0: pushal; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0008ccb2: pushal; sldt word ptr [0x1aa15f]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008cc92: pushal; sldt word ptr [0x1aa17f]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008cc72: pushal; sldt word ptr [0x1aa19f]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc52: pushal; sldt word ptr [0x1aa1bf]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008ccd2: pushal; sldt word ptr [ecx + 0x1aa13fc2]; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8cce8; ret; 
0x00122d6d: pushal; stc; call dword ptr [eax + 0x55]; 
0x00122ded: pushal; stc; call dword ptr [ecx + 0x51]; 
0x00162ea5: pushal; std; jmp dword ptr [esi - 0x70]; 
0x000a3dde: pushal; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x00099db4: pushal; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00099db4: pushal; xchg edi, eax; stc; call dword ptr [eax - 0x18]; ret 0xf99f; 
0x00093a6d: pushal; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x001191e8: pushfd; adc al, 0xf9; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x00031910: pushfd; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x000344cc: pushfd; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0005bb60: pushfd; add byte ptr [eax], al; add byte ptr [ebp - 0x6c07242], cl; jmp dword ptr [ebp - 0x75]; 
0x0003c586: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013bc4d: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x76e3db84], cl; ret; 
0x000cd6fe: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000485ac: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c6d7e: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0010322d: pushfd; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x0011241c: pushfd; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a9e05: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x940936e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a7b15: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x944736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9bd5: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x947936e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a6e45: pushfd; add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaa774]; cmovne eax, edx; ret; 
0x00138905: pushfd; add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaa784]; cmovne eax, edx; ret; 
0x000a652a: pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x000fbe21: pushfd; add dword ptr [edi + eax - 7], -1; jmp ebx; 
0x0012a6a9: pushfd; and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009d2ce: pushfd; and al, 0x90; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012a785: pushfd; and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010322b: pushfd; and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x000984aa: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x000c70bb: pushfd; and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x0017140f: pushfd; and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0011b1e1: pushfd; call 0x111700; add esp, 0x1c; ret; 
0x0011b68d: pushfd; call 0x112030; add esp, 0x18; pop ebx; ret; 
0x0011b6b1: pushfd; call 0x112200; add esp, 0x1c; ret; 
0x0012ba99: pushfd; call 0x11b810; add esp, 0x20; add esp, 0xc; ret; 
0x0011b804: pushfd; call 0x11b810; add esp, 0x2c; ret; 
0x0009c9ba: pushfd; cdq; stc; call dword ptr [eax + 0x68]; 
0x0009ca16: pushfd; cdq; stc; call dword ptr [eax - 0x73]; 
0x000f6184: pushfd; cld; call dword ptr [edi - 1]; 
0x0002f381: pushfd; cmp dword ptr [0x7a8f0500], edx; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0009baf5: pushfd; cmp eax, dword ptr [eax]; add cl, ch; sar esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x000b8306: pushfd; fist dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000a9f99: pushfd; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x00060b4e: pushfd; inc edx; stc; call dword ptr [eax + 0x6a]; 
0x0016e20a: pushfd; jne 0x16e200; call dword ptr [eax - 0x73]; 
0x0015eb43: pushfd; jns 0x15eb37; call dword ptr [eax - 0x73]; 
0x0015ebf5: pushfd; jns 0x15ebe9; call dword ptr [eax - 0x73]; 
0x0015ecb7: pushfd; jns 0x15ecab; call dword ptr [eax - 0x73]; 
0x000f79ba: pushfd; ljmp 0x57bc:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x000f7aa1: pushfd; ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x58; stc; call dword ptr [eax + 0x53]; 
0x000f7afe: pushfd; ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x58; stc; call dword ptr [eax - 1]; 
0x000c3aba: pushfd; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x001278cd: pushfd; mov ah, 0xf9; call dword ptr [edi - 0x7f]; 
0x000a19d6: pushfd; mov ch, 0x38; add al, 0; add bl, ch; ret 0x9066; 
0x000a9c1d: pushfd; mov eax, ebp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0005ab4b: pushfd; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x000a20c7: pushfd; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0015841a: pushfd; or al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000eac06: pushfd; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009d281: pushfd; pop edx; push cs; add byte ptr [0x199b8f], al; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x0003ce81: pushfd; pop esi; adc al, 0; add eax, 0x1f9f8f; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0014d9c8: pushfd; push -0xf; call dword ptr [ebx + 0x50]; 
0x000a541e: pushfd; push esp; stc; call dword ptr [eax + 0x57]; 
0x000c3e2b: pushfd; rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0005e4e8: pushfd; ret 0xb60f; 
0x0004cc40: pushfd; ret 0xe; 
0x00086a75: pushfd; ret 0xf; 
0x000f6f08: pushfd; ret 0xfff2; 
0x00199c54: pushfd; sar ecx, 1; jmp dword ptr [esi + 0xf]; 
0x0009ee6e: pushfd; stc; call dword ptr [eax + 0x6a]; 
0x000b818d: pushfd; stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10dc8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a6f84: pushfd; sub eax, 0xe580fff6; add cl, byte ptr [ebp - 0x1777536e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00110b0d: pushfd; wait; in eax, dx; call dword ptr [eax + 0x56]; 
0x0006f370: pushfd; xchg ebp, eax; dec esp; fdivr st(0); inc dword ptr [ecx]; ret; 
0x00080dd1: rcl byte ptr [eax + 0x52]; push edi; call dword ptr [ebx + 0x38]; 
0x0013200c: rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x00027086: rcl byte ptr [eax], 0; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x210fd36d], cl; call dword ptr [edx + 0x50]; 
0x000a243b: rcl byte ptr [eax], 0x39; ret 0x820f; 
0x000ad949: rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x00196e5f: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x00199cb5: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x0019499d: rcl byte ptr [eax], 0x83; ret 0x8310; 
0x0012f244: rcl byte ptr [eax], 0x83; ret 0x890c; 
0x000d6059: rcl byte ptr [eax], 0x83; ret 0x8910; 
0x000c3dcc: rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x0017a993: rcl byte ptr [eax], 0x89; loope 0x17a921; ret 0xbd89; 
0x000be1bb: rcl byte ptr [eax], 0xe8; imul ecx, dword ptr [ebx + 0xc], 0; add ecx, 0x107e32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baebb: rcl byte ptr [eax], 0xe8; imul edi, dword ptr [esi + 0xc], 0; add ecx, 0x10b0b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8e60: rcl byte ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0016390a: rcl byte ptr [ebp - 3], cl; jmp dword ptr [esi - 0x70]; 
0x0014d855: rcl byte ptr [ebx + eax], 0x81; ret; 
0x00086a72: rcl byte ptr [edi - 0x18], 0x9c; ret 0xf; 
0x0015cbdc: rcl byte ptr [edi - 1]; inc dword ptr [ebx - 0x3f7aef3c]; je 0x15cbf0; sub esp, 0xc; push esi; call eax; 
0x0014282c: rcl byte ptr [edx + 0x6a]; or dword ptr [ebx - 0x72dfdba4], ecx; cmp dword ptr [edi], 0x6a; stc; call dword ptr [eax + 0x51]; 
0x00092551: rcl byte ptr [edx - 0x18], 0xd8; ret 0xffff; 
0x0008f3fe: rcl cl, 1; call 0xf63a0a79; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008f94e: rcl cl, 1; call 0xf63a12c9; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00191754: rcl dword ptr [0xc381ffff], 0xb8; xor byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014aaeb: rcl dword ptr [eax + 0x4dec], 0xf6; ret 0xf01; 
0x000823fe: rcl dword ptr [eax - 0x2d7a3fcf], 0xf; xchg ebp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x00136f36: rcl dword ptr [eax - 0x73], 0x87; stc; call dword ptr [eax - 1]; 
0x000bef25: rcl dword ptr [eax], 0x83; ret 0x2910; 
0x000be2e2: rcl dword ptr [ebx + 0x300107d], 0xc; cdq; jmp ecx; 
0x0016b1ab: rcl dword ptr [ecx + 0x52], 0x89; push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000be224: rcl dword ptr [ecx + 0x7e], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b777a: rcl dword ptr [edi - 0x1a], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000be15f: rcl dword ptr [esi + 0x300107e], 0xc; xchg ecx, eax; jmp ecx; 
0x000be261: rcl dword ptr [esi + edi*2], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bae5f: rcl dword ptr [esi], 0xb1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be2a5: rcl eax, 0x7d; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e5f: rcl eax, cl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e5e: rcl ebx, 0xd0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00182d86: rcl ebx, 0xe3; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x000b814d: rcl esp, 0xdc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00130161: rcr byte ptr [eax], 0x39; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x00165df5: rcr byte ptr [eax], 0x50; call 0x165bb0; add esp, 0x2c; ret; 
0x0013735b: rcr byte ptr [ebx + 0x5e], 0x5d; ret; 
0x000251bf: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0003e7a3: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000261e4: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00108aa8: rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x000591cc: rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x000531ab: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a95d1: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; pop edi; pop ebp; ret; 
0x00092ce8: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x0015013c: rcr byte ptr [ebx + 0x5f], 1; ret; 
0x0018ba8c: rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0003e3aa: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00087281: rcr byte ptr [ebx - 9], 0xd8; ret; 
0x0016f8b0: rcr byte ptr [ebx], 0x89; loope 0x16f83e; ret 0x25; 
0x0005b91c: rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000eedc5: rcr byte ptr [ebx], 0x89; ret; 
0x001842e9: rcr byte ptr [ecx - 0x74acafae], 1; inc esp; and al, 0x18; call dword ptr [eax + 0x40]; 
0x001175c7: rcr byte ptr [ecx], 0xd1; sbb eax, 0; pop ebx; pop esi; ret; 
0x001a0652: rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x000a95d5: rcr byte ptr [edi + 0x5d], 1; ret; 
0x0018d6b2: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000ad93d: rcr byte ptr [edi + 0x5e], 1; ret; 
0x0016f2e2: rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x000a376d: rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x001516af: rcr byte ptr [edx], 0x89; ret 0x25; 
0x0003fb9b: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00122851: rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x0003e3ad: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00052ac2: rcr byte ptr [esi + 0x5f], 1; ret; 
0x000b8e59: rcr byte ptr [esi - 0x3e7efff4], 1; rcl eax, cl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c3e2c: rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x000308d1: rcr byte ptr [esi], 0x89; loope 0x3085f; ret 0x25; 
0x00030b29: rcr byte ptr [esi], 0x89; loope 0x30ab7; ret 0x25; 
0x000b8284: rcr dword ptr [0x30010dc], 0xc; cdq; jmp ecx; 
0x000bae1d: rcr dword ptr [eax - 0x4f], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6c26: rcr dword ptr [ebx + 0x30010f0], 0xc; xchg ecx, eax; jmp ecx; 
0x00052a50: rcr dword ptr [ebx + 0x5e], 1; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x000be09a: rcr dword ptr [ebx + 0x7f], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b8305: rcr dword ptr [ebx + ebx*8 + 0xc030010], 0x99; jmp ecx; 
0x00124995: rcr dword ptr [ecx - 7], cl; jmp dword ptr [ebp - 0x75]; 
0x0013ccd7: rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x0004271c: rcr dword ptr [ecx], 0xd3; pop ebx; setb al; ret; 
0x000b6ce2: rcr dword ptr [edi - 0x10], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b8342: rcr dword ptr [edi - 0x25], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009e676: rcr dword ptr [edi - 0x74ffe679], 0x44; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9e690; ret; 
0x000b6b62: rcr dword ptr [edi - 0xf], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6d27: rcr dword ptr [edx], 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be199: rcr dword ptr [esi + edi*2 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be11d: rcr eax, 0x7e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6c66: rcr ebx, 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bae99: rcr esp, 0xb0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012abe6: rdpkru; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000bfdda: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0008eb1c: rep movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00150a4b: rep movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000bfe5d: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000bfe33: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0008e744: rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000bfe9c: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000bfefb: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bfef7: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000a2197: rep stosd dword ptr es:[edi], eax; pop ebx; pop esi; pop edi; ret; 
0x00109622: rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0002894a: ret 0; 
0x0008d994: ret 0x100; 
0x00061033: ret 0x101; 
0x0007f553: ret 0x1037; 
0x0007f353: ret 0x1039; 
0x00180064: ret 0x105; 
0x0008dd0d: ret 0x1074; 
0x000a4691: ret 0x1089; 
0x000a19b1: ret 0x108; 
0x0002cc91: ret 0x10; 
0x0004239e: ret 0x10b8; 
0x000def71: ret 0x10e9; 
0x0009fad3: ret 0x110; 
0x00175f94: ret 0x1172; 
0x0009621b: ret 0x118b; 
0x000c9951: ret 0x11; 
0x000609a5: ret 0x11f; 
0x00085ba6: ret 0x126f; 
0x0004c630: ret 0x127e; 
0x001830aa: ret 0x12; 
0x00095f74: ret 0x12e9; 
0x0011f34c: ret 0x1389; 
0x00046a96: ret 0x13; 
0x00115a36: ret 0x13df; 
0x000594c3: ret 0x13eb; 
0x0010d950: ret 0x140; 
0x00040253: ret 0x142a; 
0x00027304: ret 0x142b; 
0x0003352f: ret 0x1474; 
0x000ad180: ret 0x1489; 
0x0014c401: ret 0x148b; 
0x000d0768: ret 0x148d; 
0x000cc92d: ret 0x14; 
0x0008591b: ret 0x157d; 
0x0004e9f7: ret 0x15; 
0x001419ef: ret 0x1674; 
0x000beeb7: ret 0x1676; 
0x000bf177: ret 0x167c; 
0x000d06a5: ret 0x1689; 
0x00025786: ret 0x168f; 
0x00165746: ret 0x16cf; 
0x000dc0de: ret 0x16d; 
0x0009c2f2: ret 0x16eb; 
0x0011811d: ret 0x1772; 
0x001286ff: ret 0x1789; 
0x001826b5: ret 0x178b; 
0x000c0db8: ret 0x188b; 
0x00066789: ret 0x18; 
0x000707c9: ret 0x18b; 
0x000e5556: ret 0x18bf; 
0x000d97eb: ret 0x190; 
0x0005dba6: ret 0x1973; 
0x001427f7: ret 0x1988; 
0x0009ab4a: ret 0x19; 
0x00185466: ret 0x19af; 
0x000653a6: ret 0x1a6f; 
0x0002c0a5: ret 0x1a73; 
0x00098f88: ret 0x1a75; 
0x00101aca: ret 0x1a8; 
0x000a2ee4: ret 0x1a8b; 
0x000afa1a: ret 0x1a; 
0x000d474a: ret 0x1ae9; 
0x00098fa2: ret 0x1b74; 
0x0011f8df: ret 0x1b75; 
0x00048953: ret 0x1b8; 
0x000d3c4f: ret 0x1b; 
0x000fd7ab: ret 0x1be; 
0x000fd3b1: ret 0x1c7e; 
0x000e1086: ret 0x1c8d; 
0x000c3248: ret 0x1ce9; 
0x000f4f3a: ret 0x1d2; 
0x00195c3e: ret 0x1d72; 
0x000be93e: ret 0x1d75; 
0x0005ab6c: ret 0x1d; 
0x000f828e: ret 0x1db8; 
0x000dc79d: ret 0x1db9; 
0x00023ebd: ret 0x1de8; 
0x00180e11: ret 0x1deb; 
0x0005947f: ret 0x1e74; 
0x0005302c: ret 0x1e89; 
0x00024ef6: ret 0x1f1f; 
0x0013cd39: ret 0x1f72; 
0x0013c042: ret 0x1f74; 
0x001a51ce: ret 0x1f75; 
0x0003abc7: ret 0x1f; 
0x000d8077: ret 0x1fb8; 
0x000996bb: ret 0x1fe8; 
0x00139c68: ret 0x200; 
0x00184ab5: ret 0x202; 
0x0003bc6d: ret 0x2074; 
0x0014451d: ret 0x2075; 
0x000e4d96: ret 0x207f; 
0x0004230c: ret 0x20b8; 
0x00048676: ret 0x20e9; 
0x000499c1: ret 0x2174; 
0x000e4c96: ret 0x217f; 
0x00049e64: ret 0x22e9; 
0x00024b06: ret 0x230f; 
0x0009ffd6: ret 0x2373; 
0x00052f49: ret 0x2374; 
0x00054a76: ret 0x239f; 
0x000549f6: ret 0x241f; 
0x000c072a: ret 0x2474; 
0x000e4976: ret 0x249f; 
0x0002584a: ret 0x25; 
0x00124836: ret 0x25df; 
0x0010a895: ret 0x25e9; 
0x0015042c: ret 0x2675; 
0x000beea7: ret 0x2676; 
0x000bf167: ret 0x267c; 
0x000fd3a7: ret 0x267e; 
0x000be959: ret 0x275; 
0x0008788c: ret 0x2773; 
0x000add4a: ret 0x280f; 
0x001245b6: ret 0x285f; 
0x000c0ca8: ret 0x288b; 
0x00124566: ret 0x28af; 
0x000d0800: ret 0x28b; 
0x0005c5ca: ret 0x2901; 
0x000b6b58: ret 0x2910; 
0x000beff8: ret 0x2940; 
0x000e0464: ret 0x2964; 
0x00124486: ret 0x298f; 
0x00081f1a: ret 0x2b2c; 
0x000a7a04: ret 0x2b73; 
0x001384ee: ret 0x2c6; 
0x0019f33a: ret 0x2c73; 
0x00134d32: ret 0x2d3c; 
0x00191a0e: ret 0x2d72; 
0x000946bc: ret 0x2d75; 
0x000e9475: ret 0x2db9; 
0x00114056: ret 0x2dbf; 
0x000bf461: ret 0x2e10; 
0x000a811f: ret 0x2e74; 
0x00143e23: ret 0x2eb8; 
0x00028230: ret 0x2ec3; 
0x00034e7a: ret 0x2f72; 
0x000a6de6: ret 0x2f; 
0x00041126: ret 0x3039; 
0x00153d66: ret 0x30af; 
0x00103d66: ret 0x30f; 
0x00129d6c: ret 0x3113; 
0x0004818a: ret 0x311c; 
0x0019fcfb: ret 0x3273; 
0x000d1277: ret 0x328b; 
0x00033b66: ret 0x32af; 
0x00038519: ret 0x3325; 
0x00174a2a: ret 0x3374; 
0x001736cd: ret 0x33eb; 
0x0008f2c3: ret 0x348b; 
0x0016fc89: ret 0x348c; 
0x000a5c9b: ret 0x348d; 
0x000505f6: ret 0x34e9; 
0x00059101: ret 0x3574; 
0x00095039: ret 0x35e9; 
0x00153806: ret 0x360f; 
0x000bf157: ret 0x367c; 
0x00143766: ret 0x36af; 
0x000a49f6: ret 0x3774; 
0x000a934c: ret 0x3801; 
0x00100038: ret 0x3839; 
0x000be923: ret 0x3875; 
0x0006b2af: ret 0x389; 
0x000a4712: ret 0x38b; 
0x0002854b: ret 0x3901; 
0x00030c5c: ret 0x3902; 
0x00039eda: ret 0x3903; 
0x00029735: ret 0x3904; 
0x0005d1d7: ret 0x3906; 
0x001a6cd7: ret 0x3908; 
0x000dba6b: ret 0x3909; 
0x00171310: ret 0x390c; 
0x0009c863: ret 0x3910; 
0x0017ea2e: ret 0x3914; 
0x000a4719: ret 0x3964; 
0x000bee94: ret 0x3976; 
0x000aa6fe: ret 0x3990; 
0x000d792a: ret 0x39f5; 
0x0003019c: ret 0x3a3c; 
0x001a51b3: ret 0x3a75; 
0x00079750: ret 0x3a8b; 
0x00039b23: ret 0x3b01; 
0x00144ba5: ret 0x3b04; 
0x0017e96d: ret 0x3b58; 
0x0005637d: ret 0x3b8; 
0x000c310d: ret 0x3be9; 
0x0007c049: ret 0x3c01; 
0x0004491f: ret 0x3c83; 
0x000d7904: ret 0x3c8d; 
0x000a715a: ret 0x3d73; 
0x0017acdc: ret 0x3d74; 
0x00060494: ret 0x3d; 
0x0019f325: ret 0x3e73; 
0x0015d1b4: ret 0x3e83; 
0x0007f4e2: ret 0x3e89; 
0x00082f16: ret 0x3eff; 
0x00106487: ret 0x3f8b; 
0x000bf4c7: ret 0x3f; 
0x000e1b3b: ret 0x3fe9; 
0x000a709a: ret 0x4073; 
0x0017a02d: ret 0x4075; 
0x00156771: ret 0x4089; 
0x0009de55: ret 0x408b; 
0x000563d4: ret 0x408d; 
0x00042370: ret 0x40b8; 
0x00059d30: ret 0x40c7; 
0x00146d65: ret 0x4189; 
0x0005cf86: ret 0x418d; 
0x00140cea: ret 0x41; 
0x000fbb79: ret 0x41e9; 
0x000279fc: ret 0x420f; 
0x000d96e5: ret 0x428d; 
0x00182b66: ret 0x42af; 
0x0009f2bf: ret 0x430; 
0x00036ec6: ret 0x430f; 
0x0016c41f: ret 0x4388; 
0x00094e25: ret 0x438d; 
0x00097ce6: ret 0x43f6; 
0x00142cc8: ret 0x4439; 
0x00079a7c: ret 0x447c; 
0x0013240a: ret 0x4483; 
0x0002885c: ret 0x4489; 
0x0002d674: ret 0x448b; 
0x0005d1e3: ret 0x448d; 
0x0002d1c9: ret 0x44c7; 
0x0005580a: ret 0x44f6; 
0x0013cc98: ret 0x4572; 
0x00096318: ret 0x4575; 
0x00080fcf: ret 0x4589; 
0x00030acf: ret 0x458b; 
0x00047f33: ret 0x458d; 
0x000d996c: ret 0x45c7; 
0x0004f613: ret 0x45e9; 
0x0013c036: ret 0x460f; 
0x00132a54: ret 0x4639; 
0x000a27a6: ret 0x466f; 
0x00051f0f: ret 0x4674; 
0x00079786: ret 0x4689; 
0x0005b6fd: ret 0x468b; 
0x00078d36: ret 0x468d; 
0x00052766: ret 0x46af; 
0x00081ea2: ret 0x46e9; 
0x000d9b47: ret 0x470f; 
0x001226f6: ret 0x471f; 
0x00101476: ret 0x474; 
0x000a7444: ret 0x4774; 
0x00145213: ret 0x4789; 
0x00034eef: ret 0x478b; 
0x00117a07: ret 0x478d; 
0x0011824a: ret 0x47; 
0x0002717a: ret 0x4889; 
0x00133c8d: ret 0x488b; 
0x00150b7e: ret 0x488d; 
0x0013a353: ret 0x489; 
0x0005a06d: ret 0x48b; 
0x000416f1: ret 0x48d; 
0x001324c6: ret 0x494f; 
0x00184bbc: ret 0x4972; 
0x001a3573: ret 0x498d; 
0x00080e93: ret 0x4a75; 
0x000bf344: ret 0x4a8d; 
0x000c3a35: ret 0x4b8b; 
0x000288bc: ret 0x4b8d; 
0x0016e17a: ret 0x4b; 
0x00031834: ret 0x4c0f; 
0x00063d22: ret 0x4c22; 
0x0019fce1: ret 0x4c73; 
0x000de2aa: ret 0x4c80; 
0x00029721: ret 0x4c89; 
0x0002fdfd: ret 0x4c8b; 
0x0003183f: ret 0x4d0f; 
0x001751b8: ret 0x4de9; 
0x000f907d: ret 0x4e0f; 
0x00111fa6: ret 0x4e6f; 
0x001397b1: ret 0x4e8b; 
0x00111f56: ret 0x4ebf; 
0x000dba29: ret 0x4ee9; 
0x00094df9: ret 0x4f0f; 
0x001357bc: ret 0x4f89; 
0x000726fc: ret 0x4f8d; 
0x00147558: ret 0x5001; 
0x000d978f: ret 0x5005; 
0x000c1e06: ret 0x500f; 
0x000873f1: ret 0x5052; 
0x0019f310: ret 0x5073; 
0x000a3dc1: ret 0x508d; 
0x0004c730: ret 0x5152; 
0x00035edf: ret 0x5201; 
0x00178e78: ret 0x5204; 
0x0016e314: ret 0x5208; 
0x000d1c06: ret 0x520f; 
0x000adcce: ret 0x528d; 
0x0008f101: ret 0x52e9; 
0x00196e62: ret 0x5310; 
0x0012fa53: ret 0x532; 
0x00087832: ret 0x532b; 
0x000ad5ab: ret 0x5350; 
0x00176fd6: ret 0x5356; 
0x000be908: ret 0x5375; 
0x000fcafe: ret 0x5388; 
0x000d046b: ret 0x5389; 
0x0007d3d5: ret 0x5403; 
0x0011aa5a: ret 0x540a; 
0x00063d42: ret 0x540b; 
0x000fd94f: ret 0x5420; 
0x00143e97: ret 0x5439; 
0x000d19c6: ret 0x544f; 
0x0014bd39: ret 0x5473; 
0x0014406c: ret 0x5484; 
0x00044928: ret 0x5488; 
0x0002dd69: ret 0x5489; 
0x000e4f26: ret 0x548b; 
0x00156cf2: ret 0x548d; 
0x001aa493: ret 0x550b; 
0x00103d24: ret 0x5523; 
0x0005531b: ret 0x5552; 
0x001a5198: ret 0x5575; 
0x000c1896: ret 0x557f; 
0x0005b5ec: ret 0x5589; 
0x000ffb26: ret 0x5603; 
0x0019fff4: ret 0x5608; 
0x000810d8: ret 0x562b; 
0x0009ffb2: ret 0x5657; 
0x0010634d: ret 0x567e; 
0x00041796: ret 0x567f; 
0x00089230: ret 0x5689; 
0x000fb9dc: ret 0x568b; 
0x000a322b: ret 0x568d; 
0x000e1a09: ret 0x56e9; 
0x0019ed55: ret 0x5708; 
0x00199cb8: ret 0x5710; 
0x00106aa5: ret 0x5721; 
0x001356f5: ret 0x572b; 
0x0005c217: ret 0x574; 
0x00040a7d: ret 0x5750; 
0x0016b68f: ret 0x5752; 
0x0013ca7f: ret 0x5755; 
0x0009b62b: ret 0x578b; 
0x0013c391: ret 0x578d; 
0x0013cdbe: ret 0x57c3; 
0x000c15a6: ret 0x586f; 
0x000a13e9: ret 0x588d; 
0x00070b4a: ret 0x598d; 
0x00121416: ret 0x59ff; 
0x000c13c6: ret 0x5a4f; 
0x001452cb: ret 0x5a75; 
0x000c1386: ret 0x5a8f; 
0x001112e6: ret 0x5b2f; 
0x00078ff7: ret 0x5be9; 
0x000e038e: ret 0x5c29; 
0x000d7623: ret 0x5c89; 
0x000af4ca: ret 0x5c8d; 
0x0019ec2c: ret 0x5d5e; 
0x000f8c92: ret 0x5d89; 
0x0006f2f3: ret 0x5d8d; 
0x0011bf05: ret 0x5e5b; 
0x00087406: ret 0x5e8b; 
0x00150f76: ret 0x5e9f; 
0x00110f26: ret 0x5eef; 
0x00030965: ret 0x5f3c; 
0x0007caa7: ret 0x5f5e; 
0x00110eb6: ret 0x5f5f; 
0x0008d88d: ret 0x6072; 
0x00130cf6: ret 0x611f; 
0x00110be6: ret 0x622f; 
0x0019f2fb: ret 0x6273; 
0x00129e57: ret 0x6275; 
0x00120b36: ret 0x62df; 
0x00150a26: ret 0x63ef; 
0x000867d6: ret 0x63f; 
0x000ec55a: ret 0x644; 
0x000c09b6: ret 0x645f; 
0x0013de69: ret 0x6474; 
0x000d7438: ret 0x64f7; 
0x0007ac8a: ret 0x6509; 
0x00097098: ret 0x6574; 
0x00150886: ret 0x658f; 
0x0011d053: ret 0x65c; 
0x000aa7ed: ret 0x65e9; 
0x000efa8c: ret 0x6601; 
0x0013de6e: ret 0x6608; 
0x000b6433: ret 0x6640; 
0x0019fcc7: ret 0x6673; 
0x00050f4f: ret 0x6674; 
0x0003d5ca: ret 0x66c3; 
0x000beec7: ret 0x676; 
0x0010ac04: ret 0x67; 
0x000bf187: ret 0x67c; 
0x000c91ea: ret 0x684; 
0x0002f2ee: ret 0x689; 
0x001240f5: ret 0x68b; 
0x001512ce: ret 0x6904; 
0x001204e6: ret 0x692f; 
0x001204b6: ret 0x695f; 
0x000603c6: ret 0x6a4f; 
0x0005ddb9: ret 0x6a52; 
0x000977e3: ret 0x6a74; 
0x000542be: ret 0x6b89; 
0x00110fea: ret 0x6b8; 
0x0006f145: ret 0x6b8b; 
0x000a782f: ret 0x6be9; 
0x00131f01: ret 0x6c01; 
0x00131cc7: ret 0x6c6; 
0x000fe1d1: ret 0x6c74; 
0x000fb91d: ret 0x6c8b; 
0x00064918: ret 0x6d7c; 
0x000a0086: ret 0x6d8f; 
0x000bebe0: ret 0x6deb; 
0x0005fff6: ret 0x6e1f; 
0x000e1ce1: ret 0x6eb8; 
0x000c554d: ret 0x6eb; 
0x000dc0b2: ret 0x6eba; 
0x00176726: ret 0x6ef; 
0x000928e9: ret 0x6f72; 
0x0005fe96: ret 0x6f7f; 
0x001461f8: ret 0x6f8b; 
0x000cfe66: ret 0x6faf; 
0x00143f17: ret 0x6fe9; 
0x00144b65: ret 0x7075; 
0x0012a076: ret 0x7089; 
0x0005c482: ret 0x708d; 
0x0017fc86: ret 0x718f; 
0x0016fc66: ret 0x71af; 
0x0009670b: ret 0x7274; 
0x0002fb96: ret 0x727f; 
0x000930dc: ret 0x72e9; 
0x0005b34b: ret 0x7401; 
0x000fc57c: ret 0x7404; 
0x001a9346: ret 0x7407; 
0x0007f834: ret 0x7408; 
0x000bf1db: ret 0x7410; 
0x0007a8c1: ret 0x7420; 
0x000c766c: ret 0x7439; 
0x00062192: ret 0x7489; 
0x0003de65: ret 0x748b; 
0x000407ab: ret 0x748d; 
0x0004d952: ret 0x74ff; 
0x00029fd9: ret 0x7501; 
0x000814da: ret 0x7502; 
0x00031daf: ret 0x7503; 
0x000b91fc: ret 0x7504; 
0x0013cae4: ret 0x7507; 
0x001a20fe: ret 0x7508; 
0x0008ef3a: ret 0x7510; 
0x000b9216: ret 0x7520; 
0x000b921b: ret 0x7540; 
0x00111615: ret 0x7549; 
0x000d13cc: ret 0x7589; 
0x000ac133: ret 0x758b; 
0x000fee7c: ret 0x768d; 
0x00120aca: ret 0x76b8; 
0x0017f746: ret 0x76cf; 
0x0017f6f6: ret 0x771f; 
0x0011f696: ret 0x777f; 
0x0011f646: ret 0x77cf; 
0x000f8b30: ret 0x7839; 
0x00053376: ret 0x789; 
0x0008f46b: ret 0x78b; 
0x000a7658: ret 0x78e9; 
0x0011f3f6: ret 0x7a1f; 
0x000d72cd: ret 0x7b89; 
0x0014f216: ret 0x7bff; 
0x001a3f51: ret 0x7c06; 
0x001a3f61: ret 0x7c07; 
0x001a3f71: ret 0x7c09; 
0x001a3f81: ret 0x7c0a; 
0x001a3f91: ret 0x7c0b; 
0x001a3fa1: ret 0x7c0d; 
0x001a3fb1: ret 0x7c0e; 
0x001a3fc1: ret 0x7c0f; 
0x00105eb6: ret 0x7c80; 
0x00044eab: ret 0x7c83; 
0x0007f0a7: ret 0x7c89; 
0x00039ea3: ret 0x7c8b; 
0x0011f186: ret 0x7c8f; 
0x000ca029: ret 0x7ce9; 
0x001a9f96: ret 0x7d39; 
0x0004bb07: ret 0x7de9; 
0x0019ed95: ret 0x7e10; 
0x001aefda: ret 0x7e3b; 
0x000296f5: ret 0x7e74; 
0x000fdd4f: ret 0x7e8b; 
0x0014c6e5: ret 0x7e8d; 
0x000e1f01: ret 0x7e9; 
0x0015c849: ret 0x7eb; 
0x000ad6bf: ret 0x7f7f; 
0x001811c4: ret 0x7f8; 
0x000a6d96: ret 0x7f; 
0x0003918a: ret 0x8001; 
0x001583c8: ret 0x8014; 
0x0011ede6: ret 0x802f; 
0x000fd5fe: ret 0x804; 
0x0011ed96: ret 0x807f; 
0x0017e90c: ret 0x808b; 
0x0018c235: ret 0x80; 
0x000fb247: ret 0x8104; 
0x00092f24: ret 0x8108; 
0x0011f612: ret 0x811f; 
0x00139c65: ret 0x8166; 
0x0009e6a0: ret 0x8188; 
0x000c483c: ret 0x81eb; 
0x0002dd34: ret 0x820f; 
0x0014ab92: ret 0x828d; 
0x00131c7d: ret 0x82e9; 
0x0002c048: ret 0x8301; 
0x0013bf64: ret 0x8302; 
0x000ad3bb: ret 0x8303; 
0x00052f83: ret 0x8304; 
0x000ad38b: ret 0x8305; 
0x00148244: ret 0x8308; 
0x001029a9: ret 0x830c; 
0x00035012: ret 0x830f; 
0x000d6ff4: ret 0x8310; 
0x000949b1: ret 0x8316; 
0x00133361: ret 0x8318; 
0x000bfd25: ret 0x8320; 
0x000e5291: ret 0x8334; 
0x000b6484: ret 0x8340; 
0x0004288a: ret 0x835b; 
0x0011ec31: ret 0x8363; 
0x0014bbe5: ret 0x8366; 
0x000c1567: ret 0x8380; 
0x000a4307: ret 0x8388; 
0x0009b644: ret 0x8389; 
0x00092bd6: ret 0x838b; 
0x00131fa2: ret 0x838d; 
0x000ce8de: ret 0x8390; 
0x0004c003: ret 0x83ff; 
0x0002ffbe: ret 0x8401; 
0x000ee12c: ret 0x8402; 
0x000bffc5: ret 0x8404; 
0x00028d95: ret 0x840f; 
0x00159029: ret 0x8489; 
0x0003c0c7: ret 0x848b; 
0x00109972: ret 0x848d; 
0x0004256b: ret 0x8501; 
0x000c4584: ret 0x8504; 
0x0006f7d3: ret 0x8508; 
0x0002cbd9: ret 0x850f; 
0x0005615d: ret 0x8510; 
0x00135ae7: ret 0x8518; 
0x000bf51a: ret 0x8540; 
0x0005636e: ret 0x8589; 
0x000318e5: ret 0x858b; 
0x000332d1: ret 0x858d; 
0x0016b355: ret 0x85e8; 
0x000bec1f: ret 0x860f; 
0x00121f27: ret 0x868b; 
0x0005e776: ret 0x869f; 
0x0013f954: ret 0x86e8; 
0x000fd8d7: ret 0x86eb; 
0x000a71ad: ret 0x872; 
0x00050972: ret 0x874; 
0x0009e6b8: ret 0x875d; 
0x000fcef7: ret 0x87eb; 
0x0009e626: ret 0x87ef; 
0x0002bb71: ret 0x8801; 
0x00042fc8: ret 0x8802; 
0x000da9d5: ret 0x880f; 
0x0009e5e6: ret 0x882f; 
0x0014479d: ret 0x8830; 
0x000e83cc: ret 0x8875; 
0x0014fe1a: ret 0x889; 
0x00092cbf: ret 0x88; 
0x00028348: ret 0x8901; 
0x000d8361: ret 0x8902; 
0x0017a310: ret 0x8903; 
0x00052f66: ret 0x8904; 
0x0014c3a9: ret 0x8908; 
0x00024acc: ret 0x8909; 
0x0012f247: ret 0x890c; 
0x000e7841: ret 0x890f; 
0x000d605c: ret 0x8910; 
0x001a0b76: ret 0x8912; 
0x000ca374: ret 0x8918; 
0x00058c4f: ret 0x8951; 
0x00039fdc: ret 0x8952; 
0x001818f8: ret 0x895b; 
0x0010b2b7: ret 0x8965; 
0x00094e30: ret 0x8966; 
0x000d77a0: ret 0x89f5; 
0x001a73cb: ret 0x8ae9; 
0x0002c43b: ret 0x8b01; 
0x0003950d: ret 0x8b02; 
0x000685fa: ret 0x8b04; 
0x000ad370: ret 0x8b06; 
0x0002841c: ret 0x8b07; 
0x0010299e: ret 0x8b08; 
0x000bff61: ret 0x8b10; 
0x00133efa: ret 0x8b18; 
0x000ad0a1: ret 0x8b20; 
0x00158993: ret 0x8b2c; 
0x0004092d: ret 0x8b50; 
0x000ffd68: ret 0x8b52; 
0x00112b03: ret 0x8b65; 
0x000422de: ret 0x8b8; 
0x000d341e: ret 0x8b90; 
0x000e82b9: ret 0x8b; 
0x0006fd36: ret 0x8c0f; 
0x0014bcd6: ret 0x8c39; 
0x00086223: ret 0x8c74; 
0x00103fd1: ret 0x8c8b; 
0x000807e9: ret 0x8ce9; 
0x00181381: ret 0x8ceb; 
0x000310fa: ret 0x8d01; 
0x000534ef: ret 0x8d04; 
0x0002da3c: ret 0x8d08; 
0x00043c81: ret 0x8d0f; 
0x00047956: ret 0x8d2e; 
0x0011fa69: ret 0x8d50; 
0x0004967b: ret 0x8d52; 
0x000d434e: ret 0x8d89; 
0x000698bf: ret 0x8d8b; 
0x000a9189: ret 0x8d8d; 
0x0008eaa7: ret 0x8dc3; 
0x00106323: ret 0x8e0f; 
0x0007271c: ret 0x8f0f; 
0x0008dcf3: ret 0x8f8b; 
0x0009de86: ret 0x8f8f; 
0x000a6516: ret 0x8ff; 
0x0002bf8e: ret 0x901; 
0x00025b6c: ret 0x9066; 
0x00149d83: ret 0x908; 
0x00097c4d: ret 0x90c3; 
0x0012dcd6: ret 0x913f; 
0x00028cd8: ret 0x9173; 
0x001842cb: ret 0x9174; 
0x0012dc56: ret 0x91bf; 
0x000426ea: ret 0x920f; 
0x000e34c3: ret 0x930; 
0x0016cef7: ret 0x930f; 
0x0012dae6: ret 0x932f; 
0x0009dad6: ret 0x933f; 
0x000412a8: ret 0x9387; 
0x000a0df8: ret 0x9389; 
0x000a0d2f: ret 0x938b; 
0x000a64d6: ret 0x93f; 
0x00087e33: ret 0x940f; 
0x001a51e9: ret 0x9474; 
0x000c55c5: ret 0x9488; 
0x000984d1: ret 0x948b; 
0x0011d976: ret 0x949f; 
0x0012059a: ret 0x94b8; 
0x001ad501: ret 0x94e9; 
0x001a5eaf: ret 0x94eb; 
0x001a7eeb: ret 0x950b; 
0x00049b96: ret 0x950f; 
0x0002f705: ret 0x9539; 
0x001a7e43: ret 0x9584; 
0x00057b7b: ret 0x9588; 
0x00057629: ret 0x9589; 
0x000864d6: ret 0x9689; 
0x0011fc55: ret 0x96e9; 
0x000fb8a1: ret 0x972; 
0x0008d6c6: ret 0x974f; 
0x0008c928: ret 0x978b; 
0x00041740: ret 0x97eb; 
0x000a6496: ret 0x97f; 
0x000e0392: ret 0x988d; 
0x00117f83: ret 0x98e9; 
0x000a6c5d: ret 0x98eb; 
0x0011d4d6: ret 0x993f; 
0x0013d414: ret 0x998b; 
0x0006b4b4: ret 0x9ae9; 
0x00109257: ret 0x9b8; 
0x0002870f: ret 0x9be9; 
0x0006b1b6: ret 0x9beb; 
0x0004c692: ret 0x9c0f; 
0x0014e384: ret 0x9c72; 
0x0014c7a2: ret 0x9c89; 
0x0009d0e6: ret 0x9d2f; 
0x00049a24: ret 0x9d74; 
0x00068960: ret 0x9d8b; 
0x000efaac: ret 0x9d8d; 
0x0002d2a5: ret 0x9de9; 
0x000426db: ret 0x9e0f; 
0x0008240f: ret 0x9e3b; 
0x0011cfd6: ret 0x9e3f; 
0x000c7de4: ret 0x9e74; 
0x0009cf66: ret 0x9eaf; 
0x000586f3: ret 0x9f0f; 
0x0003cec6: ret 0x9f4f; 
0x0012ce86: ret 0x9f8f; 
0x00098c95: ret 0xa00; 
0x0011e933: ret 0xa075; 
0x0003cd86: ret 0xa08f; 
0x0008ccd6: ret 0xa13f; 
0x00080bad: ret 0xa165; 
0x0012cbc6: ret 0xa24f; 
0x0003cb46: ret 0xa2cf; 
0x0003cb06: ret 0xa30f; 
0x001472b7: ret 0xa3c; 
0x0012ca06: ret 0xa40f; 
0x0011c936: ret 0xa4df; 
0x0003a259: ret 0xa4eb; 
0x0009f460: ret 0xa72; 
0x001817ee: ret 0xa773; 
0x000ec5c6: ret 0xa84f; 
0x000f77a0: ret 0xa874; 
0x0014dc3f: ret 0xa875; 
0x000d0084: ret 0xa8b; 
0x0016c546: ret 0xa8cf; 
0x0003c416: ret 0xa9ff; 
0x000d61fa: ret 0xa; 
0x00144fff: ret 0xab7e; 
0x000389c3: ret 0xab8b; 
0x0008c246: ret 0xabcf; 
0x000d791e: ret 0xac0f; 
0x00095959: ret 0xac73; 
0x0008c116: ret 0xacff; 
0x000dc0f6: ret 0xad1f; 
0x000fe077: ret 0xad75; 
0x0016c066: ret 0xadaf; 
0x0007bf86: ret 0xae8f; 
0x0012e92c: ret 0xaee8; 
0x0011bda6: ret 0xb06f; 
0x000cd7f8: ret 0xb0e9; 
0x00126dbd: ret 0xb1eb; 
0x0012bbe6: ret 0xb22f; 
0x0003bba7: ret 0xb26e; 
0x00032cf3: ret 0xb273; 
0x0009eb4a: ret 0xb374; 
0x0003c4af: ret 0xb3b8; 
0x00054c61: ret 0xb489; 
0x00126578: ret 0xb48d; 
0x0012b956: ret 0xb4bf; 
0x0003b89d: ret 0xb578; 
0x000d3af9: ret 0xb589; 
0x000586b7: ret 0xb58b; 
0x0002bac9: ret 0xb60f; 
0x00138d69: ret 0xb673; 
0x00181309: ret 0xb68d; 
0x0011b736: ret 0xb6df; 
0x00063322: ret 0xb70f; 
0x000f92a6: ret 0xb75; 
0x000acc73: ret 0xb801; 
0x000dea30: ret 0xb850; 
0x00063cb5: ret 0xb8; 
0x0003b50f: ret 0xb906; 
0x0009b4a6: ret 0xb96f; 
0x00074baf: ret 0xb; 
0x0014384f: ret 0xbb01; 
0x00124931: ret 0xbb03; 
0x0008b246: ret 0xbbcf; 
0x0011b226: ret 0xbbef; 
0x00110c51: ret 0xbc8d; 
0x0017a998: ret 0xbd89; 
0x00066583: ret 0xbd8b; 
0x00056e28: ret 0xbe0f; 
0x00110a59: ret 0xbf01; 
0x0009395a: ret 0xbf0f; 
0x00152a0e: ret 0xbf8b; 
0x0010abf8: ret 0xbf98; 
0x0009ae06: ret 0xc00f; 
0x00026a03: ret 0xc031; 
0x00139c49: ret 0xc069; 
0x000a70da: ret 0xc072; 
0x0015470d: ret 0xc074; 
0x0003b812: ret 0xc075; 
0x00027fb8: ret 0xc083; 
0x000a4e4f: ret 0xc084; 
0x00026803: ret 0xc085; 
0x000adbff: ret 0xc0be; 
0x0003b641: ret 0xc0d9; 
0x00081d1b: ret 0xc101; 
0x00047e6a: ret 0xc102; 
0x000f8c8c: ret 0xc104; 
0x0017a2ef: ret 0xc105; 
0x0005bb92: ret 0xc108; 
0x001122fc: ret 0xc10c; 
0x0005b4a2: ret 0xc11f; 
0x0016b1a9: ret 0xc129; 
0x000d4a6c: ret 0xc139; 
0x0013dec1: ret 0xc166; 
0x000d78f8: ret 0xc169; 
0x00140c17: ret 0xc173; 
0x0014280a: ret 0xc183; 
0x000371ca: ret 0xc189; 
0x00184dca: ret 0xc1eb; 
0x000c55c3: ret 0xc208; 
0x0010193a: ret 0xc209; 
0x00024faa: ret 0xc21; 
0x00044dc3: ret 0xc220; 
0x000976e7: ret 0xc231; 
0x000d86af: ret 0xc238; 
0x00041452: ret 0xc269; 
0x000e082e: ret 0xc26b; 
0x0002dd67: ret 0xc275; 
0x000dc0dc: ret 0xc281; 
0x0003950b: ret 0xc283; 
0x0019fb49: ret 0xc2bb; 
0x000e61e6: ret 0xc2f; 
0x000af64e: ret 0xc301; 
0x000528bd: ret 0xc339; 
0x000a6550: ret 0xc35b; 
0x000c3e54: ret 0xc35f; 
0x000a7197: ret 0xc372; 
0x000e7d07: ret 0xc383; 
0x00031842: ret 0xc389; 
0x0005c87e: ret 0xc3e9; 
0x0011b661: ret 0xc3eb; 
0x0007a9a6: ret 0xc46f; 
0x00028fc4: ret 0xc483; 
0x0013a986: ret 0xc48f; 
0x0012a966: ret 0xc4af; 
0x000d79e5: ret 0xc501; 
0x000c48cc: ret 0xc529; 
0x00143e48: ret 0xc583; 
0x00096711: ret 0xc589; 
0x0012a876: ret 0xc59f; 
0x0003f4a1: ret 0xc5e9; 
0x0013c6e0: ret 0xc602; 
0x00063c3d: ret 0xc629; 
0x00048cb3: ret 0xc639; 
0x000c1480: ret 0xc680; 
0x0002fdf7: ret 0xc689; 
0x0010a5b4: ret 0xc701; 
0x0002d1a5: ret 0xc704; 
0x00102407: ret 0xc708; 
0x0012a706: ret 0xc70f; 
0x000a94e7: ret 0xc739; 
0x00094b90: ret 0xc74; 
0x0011a6c6: ret 0xc74f; 
0x000253d2: ret 0xc789; 
0x00085219: ret 0xc7e9; 
0x000e6196: ret 0xc7f; 
0x0005934f: ret 0xc801; 
0x00112fec: ret 0xc839; 
0x0007f388: ret 0xc883; 
0x00025a90: ret 0xc889; 
0x00032b05: ret 0xc89; 
0x00046f31: ret 0xc8b; 
0x0014abd4: ret 0xc8c1; 
0x000a5e97: ret 0xc8d; 
0x00101390: ret 0xc901; 
0x0018080c: ret 0xc919; 
0x000a2ee8: ret 0xc931; 
0x0008f6cf: ret 0xc983; 
0x000aa856: ret 0xc985; 
0x00176353: ret 0xc9; 
0x000b6b19: ret 0xc; 
0x00139f5a: ret 0xca00; 
0x0002ff7c: ret 0xca08; 
0x00158395: ret 0xca09; 
0x0016cceb: ret 0xca0f; 
0x0003f123: ret 0xca21; 
0x000600dc: ret 0xca29; 
0x000695ea: ret 0xca39; 
0x00097375: ret 0xca81; 
0x0008c920: ret 0xca83; 
0x0002682d: ret 0xcac1; 
0x000e1eac: ret 0xcae9; 
0x000a11aa: ret 0xcaeb; 
0x000495a2: ret 0xcb29; 
0x00093da7: ret 0xcb83; 
0x000690f1: ret 0xcb89; 
0x000a440e: ret 0xcb8; 
0x0008a216: ret 0xcbff; 
0x000c6e6c: ret 0xcce9; 
0x0012a0c6: ret 0xcd4f; 
0x00036e87: ret 0xcd89; 
0x000d9678: ret 0xcdb8; 
0x0005c733: ret 0xce39; 
0x00027ab8: ret 0xce80; 
0x00112e20: ret 0xce89; 
0x00059f86: ret 0xce8f; 
0x000a6d46: ret 0xcf; 
0x00139e36: ret 0xcfdf; 
0x000ee294: ret 0xd001; 
0x00079f67: ret 0xd008; 
0x00079f46: ret 0xd009; 
0x00109b82: ret 0xd021; 
0x0004c89c: ret 0xd029; 
0x000a9de6: ret 0xd02f; 
0x0017e3f0: ret 0xd039; 
0x000d7f84: ret 0xd069; 
0x0002f1ab: ret 0xd089; 
0x0008ca15: ret 0xd0eb; 
0x00059d16: ret 0xd0ff; 
0x000abfc8: ret 0xd101; 
0x001373d8: ret 0xd108; 
0x000a9cf6: ret 0xd11f; 
0x0015831b: ret 0xd120; 
0x000d96d5: ret 0xd129; 
0x000f871b: ret 0xd139; 
0x000a9cb6: ret 0xd15f; 
0x001461db: ret 0xd184; 
0x0006943d: ret 0xd189; 
0x000a9c76: ret 0xd19f; 
0x000a9c36: ret 0xd1df; 
0x001071cf: ret 0xd1e9; 
0x000fba97: ret 0xd201; 
0x000a9bf6: ret 0xd21f; 
0x0012ad61: ret 0xd231; 
0x000a9bb6: ret 0xd25f; 
0x000253c5: ret 0xd283; 
0x000428db: ret 0xd285; 
0x00181de5: ret 0xd2e9; 
0x00092013: ret 0xd2f7; 
0x000aad5b: ret 0xd301; 
0x001a678d: ret 0xd304; 
0x000e9772: ret 0xd309; 
0x000dcb8e: ret 0xd329; 
0x00139ae6: ret 0xd32f; 
0x000d881e: ret 0xd338; 
0x0008f16a: ret 0xd372; 
0x0014649b: ret 0xd384; 
0x0003f2c2: ret 0xd389; 
0x000532f2: ret 0xd439; 
0x000f8f89: ret 0xd473; 
0x000a50fa: ret 0xd49; 
0x00086779: ret 0xd4e9; 
0x000fde13: ret 0xd539; 
0x00097fa6: ret 0xd574; 
0x000a0d4b: ret 0xd589; 
0x00093511: ret 0xd5e9; 
0x000aaf44: ret 0xd601; 
0x000ebda7: ret 0xd675; 
0x0005457e: ret 0xd689; 
0x000a80bb: ret 0xd701; 
0x000e3454: ret 0xd729; 
0x00079056: ret 0xd739; 
0x000473a8: ret 0xd789; 
0x00173803: ret 0xd7e8; 
0x0006738e: ret 0xd801; 
0x000a95e6: ret 0xd82f; 
0x000fb474: ret 0xd839; 
0x00111bc7: ret 0xd873; 
0x00050bc4: ret 0xd889; 
0x000e9a95: ret 0xd8eb; 
0x0003b600: ret 0xd8f7; 
0x00139506: ret 0xd90f; 
0x00097eae: ret 0xd974; 
0x001810c4: ret 0xd9eb; 
0x000c4900: ret 0xd9f7; 
0x000a6aa2: ret 0xd; 
0x0010480f: ret 0xda01; 
0x000e977d: ret 0xda08; 
0x0006006e: ret 0xda29; 
0x001393b6: ret 0xda5f; 
0x001063a3: ret 0xda75; 
0x00036ec9: ret 0xda89; 
0x00089386: ret 0xda8f; 
0x0003d7d8: ret 0xdaf7; 
0x000563af: ret 0xdb31; 
0x000d92a6: ret 0xdb6f; 
0x001037d0: ret 0xdb85; 
0x000a75e9: ret 0xdbf7; 
0x0010abde: ret 0xdce9; 
0x0008a1f7: ret 0xdceb; 
0x000850df: ret 0xdd89; 
0x00080def: ret 0xde21; 
0x00128fa6: ret 0xde6f; 
0x000dcf8f: ret 0xde72; 
0x00108f16: ret 0xdeff; 
0x00128e96: ret 0xdf7f; 
0x000a8e46: ret 0xdfcf; 
0x0013c7a9: ret 0xe072; 
0x001213da: ret 0xe075; 
0x000415a5: ret 0xe083; 
0x0016bd50: ret 0xe0c1; 
0x0004207b: ret 0xe0d3; 
0x00038cf6: ret 0xe11f; 
0x00108cb6: ret 0xe15f; 
0x0002f292: ret 0xe183; 
0x00108c26: ret 0xe1ef; 
0x000db094: ret 0xe280; 
0x000398c9: ret 0xe281; 
0x0002a33d: ret 0xe283; 
0x0005b485: ret 0xe2c1; 
0x001a5dd7: ret 0xe2d3; 
0x000eef8c: ret 0xe329; 
0x00138aa6: ret 0xe36f; 
0x000ac8d5: ret 0xe372; 
0x00097f0b: ret 0xe383; 
0x00025227: ret 0xe3d3; 
0x00088936: ret 0xe4df; 
0x000c3106: ret 0xe4e9; 
0x001388e6: ret 0xe52f; 
0x00138896: ret 0xe57f; 
0x001513f2: ret 0xe589; 
0x00138846: ret 0xe5cf; 
0x000fb639: ret 0xe5eb; 
0x001387f6: ret 0xe61f; 
0x000aafa9: ret 0xe672; 
0x000539d7: ret 0xe675; 
0x001a896c: ret 0xe681; 
0x000307b7: ret 0xe683; 
0x000fce98: ret 0xe6eb; 
0x00157ec7: ret 0xe74; 
0x00077211: ret 0xe75; 
0x000aa896: ret 0xe775; 
0x00130169: ret 0xe801; 
0x000fcc44: ret 0xe804; 
0x000801c6: ret 0xe852; 
0x000dac7f: ret 0xe856; 
0x00121cb2: ret 0xe857; 
0x0008ef45: ret 0xe875; 
0x00059503: ret 0xe883; 
0x00059880: ret 0xe889; 
0x00052f3c: ret 0xe89; 
0x0010612b: ret 0xe8c0; 
0x00052967: ret 0xe8c1; 
0x00135f86: ret 0xe8f; 
0x00047078: ret 0xe901; 
0x000712c1: ret 0xe904; 
0x0013dec4: ret 0xe908; 
0x000a8254: ret 0xe972; 
0x0011fc94: ret 0xe975; 
0x0002ad35: ret 0xe983; 
0x0008bac4: ret 0xe989; 
0x0003f119: ret 0xe9d1; 
0x00145f76: ret 0xe9f; 
0x0004cc41: ret 0xe; 
0x001046ee: ret 0xea01; 
0x00168157: ret 0xea29; 
0x00180a26: ret 0xea39; 
0x0014c177: ret 0xea75; 
0x00046851: ret 0xea81; 
0x00049dfa: ret 0xea83; 
0x000a5997: ret 0xea89; 
0x001076ea: ret 0xeac0; 
0x0006088f: ret 0xeac1; 
0x00083d1b: ret 0xead1; 
0x0002bd6f: ret 0xead3; 
0x00173eda: ret 0xeaf2; 
0x0005c201: ret 0xeb01; 
0x00124911: ret 0xeb03; 
0x00156ba4: ret 0xeb18; 
0x000421f7: ret 0xeb20; 
0x0004fc44: ret 0xeb39; 
0x001248a6: ret 0xeb53; 
0x00039bca: ret 0xeb5; 
0x0010cf8d: ret 0xeb89; 
0x000f8216: ret 0xebff; 
0x000ace77: ret 0xec72; 
0x00028f2d: ret 0xec83; 
0x00136c6f: ret 0xece9; 
0x0009664d: ret 0xed75; 
0x00141725: ret 0xed85; 
0x00098056: ret 0xedbf; 
0x001469da: ret 0xedc7; 
0x000c6c5e: ret 0xee72; 
0x0005c5cf: ret 0xee7c; 
0x00077f76: ret 0xee9f; 
0x000a2be5: ret 0xeec1; 
0x0007abde: ret 0xeeeb; 
0x000d80ef: ret 0xef29; 
0x000f7ed6: ret 0xef3f; 
0x000acf64: ret 0xef72; 
0x000fb7ee: ret 0xef7f; 
0x000facd1: ret 0xef89; 
0x0003c38c: ret 0xefe9; 
0x0011e6a4: ret 0xeff0; 
0x00068b84: ret 0xf001; 
0x00128ccc: ret 0xf009; 
0x001a3daf: ret 0xf00; 
0x00046e61: ret 0xf01; 
0x000990bd: ret 0xf02; 
0x000d3fe2: ret 0xf039; 
0x00031ed8: ret 0xf03; 
0x000796c8: ret 0xf04; 
0x001a3f41: ret 0xf05; 
0x0002dc7d: ret 0xf06; 
0x000f7da6: ret 0xf06f; 
0x00030c5f: ret 0xf072; 
0x000abac4: ret 0xf075; 
0x001a8ea6: ret 0xf07; 
0x00042425: ret 0xf083; 
0x00066edd: ret 0xf089; 
0x0002a744: ret 0xf08; 
0x00127d76: ret 0xf09f; 
0x000db656: ret 0xf0; 
0x0008fb09: ret 0xf0b8; 
0x001a3efc: ret 0xf0c; 
0x00115ada: ret 0xf0d6; 
0x0009f08d: ret 0xf0f; 
0x000a799e: ret 0xf101; 
0x0005c0f0: ret 0xf10; 
0x000c9c6e: ret 0xf129; 
0x0011a942: ret 0xf131; 
0x000eee56: ret 0xf139; 
0x000a7c96: ret 0xf17f; 
0x0010737f: ret 0xf189; 
0x001064e2: ret 0xf1cc; 
0x00109e6e: ret 0xf20; 
0x0002c212: ret 0xf229; 
0x000fe6da: ret 0xf24a; 
0x00137bb6: ret 0xf25f; 
0x0008d3cd: ret 0xf280; 
0x0009656b: ret 0xf283; 
0x000311b4: ret 0xf289; 
0x000fa1da: ret 0xf28f; 
0x0017d61a: ret 0xf2ff; 
0x00041454: ret 0xf31d; 
0x000a7af6: ret 0xf31f; 
0x00159aba: ret 0xf33a; 
0x000a7ab6: ret 0xf35f; 
0x0009fa8a: ret 0xf375; 
0x001ad8d3: ret 0xf37f; 
0x00092416: ret 0xf389; 
0x0013e5ea: ret 0xf39f; 
0x0013dcda: ret 0xf3c1; 
0x000e8c44: ret 0xf3e9; 
0x00182eed: ret 0xf3eb; 
0x0005b41e: ret 0xf40; 
0x000a7279: ret 0xf475; 
0x0008e553: ret 0xf47; 
0x000e932a: ret 0xf4a9; 
0x0005b401: ret 0xf50; 
0x001568ea: ret 0xf525; 
0x0012220a: ret 0xf588; 
0x0017e0e1: ret 0xf604; 
0x00198174: ret 0xf608; 
0x000c0ada: ret 0xf626; 
0x000adb53: ret 0xf66; 
0x001a7ccd: ret 0xf67f; 
0x000ffceb: ret 0xf701; 
0x000d9684: ret 0xf718; 
0x001abe81: ret 0xf729; 
0x001806eb: ret 0xf74; 
0x000d5a24: ret 0xf751; 
0x00097c3d: ret 0xf75b; 
0x000fd1f6: ret 0xf775; 
0x000a775a: ret 0xf7b8; 
0x000d5e96: ret 0xf7f; 
0x000485b5: ret 0xf7ff; 
0x0006536e: ret 0xf801; 
0x00109e77: ret 0xf80; 
0x000a382e: ret 0xf821; 
0x000234bc: ret 0xf883; 
0x00048994: ret 0xf889; 
0x000d7840: ret 0xf894; 
0x001217af: ret 0xf8c1; 
0x001010b1: ret 0xf939; 
0x0009efba: ret 0xf951; 
0x0015973f: ret 0xf96f; 
0x0008be59: ret 0xf975; 
0x00055acc: ret 0xf980; 
0x000e9991: ret 0xf983; 
0x00171305: ret 0xf989; 
0x00099dba: ret 0xf99f; 
0x000535bc: ret 0xf9e9; 
0x00117416: ret 0xf9ff; 
0x00086a76: ret 0xf; 
0x0016b445: ret 0xfa01; 
0x0017efda: ret 0xfa05; 
0x001a9ffb: ret 0xfa09; 
0x0005d1d3: ret 0xfa29; 
0x0007404e: ret 0xfa39; 
0x0007ba62: ret 0xfa7d; 
0x0018fa1a: ret 0xfa80; 
0x00112ffa: ret 0xfa81; 
0x0002991d: ret 0xfa83; 
0x00063af8: ret 0xfa89; 
0x0018da1a: ret 0xfaa0; 
0x0017abca: ret 0xfaa5; 
0x0018c01a: ret 0xfaba; 
0x00033131: ret 0xfac1; 
0x0010aac0: ret 0xfae9; 
0x000d748d: ret 0xfb11; 
0x0006ceda: ret 0xfb62; 
0x0006596e: ret 0xfb80; 
0x00061eb6: ret 0xfb83; 
0x0009a067: ret 0xfb89; 
0x00097ffc: ret 0xfbd1; 
0x000f90fa: ret 0xfc87; 
0x0013ee2a: ret 0xfca2; 
0x001711da: ret 0xfcb3; 
0x00117f1f: ret 0xfce9; 
0x00127126: ret 0xfcef; 
0x000870e6: ret 0xfd2f; 
0x0018be1a: ret 0xfd41; 
0x00085753: ret 0xfd5; 
0x001223a1: ret 0xfdb8; 
0x00127046: ret 0xfdcf; 
0x0014aa4a: ret 0xfe25; 
0x000a6fa6: ret 0xfe6f; 
0x000a75cc: ret 0xfe83; 
0x001a530a: ret 0xfe89; 
0x0009be6a: ret 0xfe93; 
0x000a6f66: ret 0xfeaf; 
0x00172d94: ret 0xfeb8; 
0x0016cdfd: ret 0xfeb; 
0x0016624a: ret 0xfebc; 
0x0015e2aa: ret 0xfeec; 
0x000a6f26: ret 0xfeef; 
0x0008f926: ret 0xff0; 
0x0009c0aa: ret 0xff12; 
0x00106f8a: ret 0xff20; 
0x0003b4ed: ret 0xff25; 
0x000a6ee6: ret 0xff2f; 
0x0009eddf: ret 0xff31; 
0x000428b9: ret 0xff3; 
0x0018065e: ret 0xff3d; 
0x00060741: ret 0xff50; 
0x000c1e22: ret 0xff65; 
0x0016f992: ret 0xff81; 
0x000430f6: ret 0xff83; 
0x0011fd86: ret 0xff85; 
0x0014051a: ret 0xff89; 
0x0012425a: ret 0xff93; 
0x0009c8da: ret 0xff96; 
0x000fee2a: ret 0xff98; 
0x000fec1a: ret 0xff9e; 
0x000774fa: ret 0xffa3; 
0x00076efa: ret 0xffa9; 
0x000a6e66: ret 0xffaf; 
0x00025513: ret 0xffb8; 
0x00129c1c: ret 0xffb9; 
0x00028228: ret 0xffba; 
0x000574fa: ret 0xffbc; 
0x0004d4af: ret 0xffbf; 
0x001a6723: ret 0xffc1; 
0x000774af: ret 0xffd6; 
0x000e445a: ret 0xffe3; 
0x0003587a: ret 0xffe4; 
0x000efe5a: ret 0xffea; 
0x000ac883: ret 0xffeb; 
0x000e3eb7: ret 0xffec; 
0x000ddfaf: ret 0xffed; 
0x000a6e26: ret 0xffef; 
0x000375f7: ret 0xfff0; 
0x000f32ea: ret 0xfff1; 
0x0006e47d: ret 0xfff2; 
0x0005bf5a: ret 0xfff3; 
0x00067692: ret 0xfff4; 
0x000396ba: ret 0xfff5; 
0x000c7b08: ret 0xfff6; 
0x000e96fa: ret 0xfff7; 
0x00023924: ret 0xfff8; 
0x00086f28: ret 0xfff9; 
0x000d5e16: ret 0xfff; 
0x0002a870: ret 0xfffa; 
0x0005f24a: ret 0xfffb; 
0x00077459: ret 0xfffc; 
0x00035b7d: ret 0xfffd; 
0x0002b00a: ret 0xfffe; 
0x0003bce9: ret 0xffff; 
0x0005395a: ret 1; 
0x000358ea: ret 2; 
0x00063d0e: ret 3; 
0x0003a71f: ret 4; 
0x00050ad8: ret 5; 
0x00199171: ret 6; 
0x001978e1: ret 7; 
0x0006271b: ret 8; 
0x000e6a58: ret 9; 
0x00023467: ret; 
0x000ec901: retf 0; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0009708a: retf 0; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x0016afd0: retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0008b7d7: retf 0x1673; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000bebbd: retf 0x3076; add eax, ecx; ret; 
0x000dac7c: retf 0x348d; ret 0xe856; 
0x0013be97: retf 0x430f; ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00130058: retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x000c2597: retf 0x474; test edx, edx; jne 0xc2590; ret; 
0x000a33a3: retf 0x488d; jmp dword ptr [ecx]; 
0x000e19de: retf 0x490f; ret 0x1c8d; 
0x0006421b: retf 0x490f; ret 0x4489; 
0x000e067f: retf 0x490f; ret 0xc101; 
0x0009b98e: retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x000705f5: retf 0x4c8b; and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0010677b: retf 0x5489; ret; 
0x0003fe0b: retf 0x5a8d; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x001512f5: retf 0x5e5b; ret; 
0x0019ed90: retf 0x761a; sub al, 0x83; ret 0x7e10; 
0x000c2112: retf 0x76d; add byte ptr [ebx - 0x72e3dbac], cl; add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x001563b4: retf 0x772; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x0011bef5: retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00059876: retf 0x820f; mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x001aa58e: retf 0x830f; ret; 
0x0011ec9f: retf 0x8930; push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0011aa57: retf 0x940f; ret 0x540a; 
0x000b818b: retf 0x9ce8; stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10dc8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008c922: retf 0xa801; add ecx, dword ptr [edi]; inc esp; ret 0x978b; 
0x000be179: retf 0xaee8; dec ebx; or al, 0; add ecx, 0x107e75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae79: retf 0xaee8; jle 0xbae8a; add byte ptr [ecx + 0x10b0f5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000eda0c: retf 0xb60f; or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x001a85cf: retf 0xb60f; ret 0x4589; 
0x00081dea: retf 0xc483; adc byte ptr [ecx], ah; ret 0xfa83; 
0x0014da89: retf 0xc483; or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001a0d18: retf 0xc801; call 0x182d19; add ebx, 0x34634; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a0c53: retf 0xc801; call 0x182d19; add ebx, 0x346f9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f348: retf 0xc801; call 0x182d19; add ebx, 0x35f00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f239: retf 0xc801; call 0x182d19; add ebx, 0x3600f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c64: retf 0xc801; call 0x182d19; add ebx, 0x3f424; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c57: retf 0xc801; call 0x182d19; add ebx, 0x40271; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c77: retf 0xc801; call 0x182d19; add ebx, 0x41091; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191d58: retf 0xc801; call 0x182d19; add ebx, 0x42df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191c53: retf 0xc801; call 0x182d19; add ebx, 0x42e35; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191a44: retf 0xc801; call 0x182d19; add ebx, 0x43044; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fd48: retf 0xc801; call 0x182d19; add ebx, 0x44b80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fc43: retf 0xc801; call 0x182d19; add ebx, 0x44bc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018fa37: retf 0xc801; call 0x182d19; add ebx, 0x44dd1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dd48: retf 0xc801; call 0x182d19; add ebx, 0x46900; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018dc43: retf 0xc801; call 0x182d19; add ebx, 0x46945; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018da37: retf 0xc801; call 0x182d19; add ebx, 0x46b51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bf1be: retf 0xc801; ret; 
0x00196a63: retf 0xc801; sfence; call 0x182d19; add ebx, 0x3e622; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a53: retf 0xc801; sfence; call 0x182d19; add ebx, 0x3f472; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a83: retf 0xc801; sfence; call 0x182d19; add ebx, 0x40282; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938ad: retf 0xc801; sfence; call 0x182d19; add ebx, 0x411d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019174d: retf 0xc801; sfence; call 0x182d19; add ebx, 0x430b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f7ad: retf 0xc801; sfence; call 0x182d19; add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193b63: retf 0xc829; pop edi; call 0x182d19; add ebx, 0x410e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c69: retf 0xc829; pop esi; call 0x182d19; add ebx, 0x3e51e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000be96f: retf 0xc839; ja 0xbe980; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x001512f3: retf 0xca75; pop ebx; pop esi; ret; 
0x000b6b5b: retf 0xcce8; ror dword ptr [eax + eax], 0x81; rcr dword ptr [edi - 0xf], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bfae1: retf 0xce01; jmp ebx; 
0x0018555e: retf 0xce89; call dword ptr gs:[0x10]; 
0x000bf1b7: retf 0xd285; je 0xbf190; bsr ecx, edx; add eax, ecx; ret; 
0x000b6c5b: retf 0xda39; jb 0xb6c20; call 0x182d2d; add ecx, 0x10f0db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b829b: retf 0xda39; jb 0xb8260; call 0x182d2d; add ecx, 0x10dbfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be23b: retf 0xda39; jb 0xbe200; call 0x182d2d; add ecx, 0x107e2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0015f6da: retf 0xe8; cwde; std; call dword ptr [edi + 0x31]; 
0x00150bb1: retf 0xec75; add esp, 8; pop ebx; ret; 
0x000910e1: retf 0xf0b8; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008ca8e: retf 0xf0bd; add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000424ec: retf 0xf183; pop ds; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x001a02e2: retf 0xf1f4; call dword ptr [ebx - 0x18]; 
0x001a02e2: retf 0xf1f4; call dword ptr [ebx - 0x18]; sub eax, 0x81fffe2a; ret; 
0x00199bf2: retf 0xf25a; call dword ptr [ebx - 0x18]; 
0x00199bf2: retf 0xf25a; call dword ptr [ebx - 0x18]; sbb eax, 0x81fffe91; ret; 
0x001a539d: retf 0xf66; xlatb; ret; 
0x0004144d: retf 0xfac1; adc byte ptr [ecx], ch; ret 0xc269; 
0x000dcc15: retf 0xfac1; add ch, byte ptr [ecx]; ret 0x48d; 
0x00079110: retf 0xff83; or byte ptr [ebp + ebx - 0x7d], dh; call dword ptr [eax]; 
0x00134c22: retf 0xffdb; dec dword ptr [ebx - 0x3b7cf78b]; adc byte ptr [ecx], cl; ret; 
0x001372d0: retf 0xfff4; add esp, 0x1c; ret; 
0x0005f936: retf 0xfff8; add edx, ebx; jmp edx; 
0x001485a2: retf 0xfff8; dec dword ptr [ecx - 0x7693dbbc]; ret; 
0x0011adb3: retf 0xfffe; jmp dword ptr [ebp - 0x75]; 
0x0015be4a: retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x0019f68b: retf 0xffff; jmp dword ptr [esi + 0xf]; 
0x00073c8c: retf 2; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00093ab1: retf; add bh, dl; jmp dword ptr [esi - 0x70]; 
0x001a0994: retf; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000be2d9: retf; add esi, ecx; call 0x182d2d; add ecx, 0x107d93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2b9: retf; add esi, ecx; call 0x182d2d; add ecx, 0x107db3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8319: retf; add esi, ecx; call 0x182d2d; add ecx, 0x10db7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cf9: retf; add esi, ecx; call 0x182d2d; add ecx, 0x10f03f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cd9: retf; add esi, ecx; call 0x182d2d; add ecx, 0x10f05f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a6e0d: retf; idiv bh; cmovne eax, edx; ret; 
0x0010a2cb: retf; inc dword ptr [ebx - 0x3e760036]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00061075: retf; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00106839: retf; jmp ebx; 
0x00139311: retf; lodsb al, byte ptr [esi]; hlt; jmp dword ptr [esi - 0x70]; 
0x00129c74: retf; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x00121f41: retf; pop edx; stc; call dword ptr [eax - 0x18]; 
0x00122204: retf; pop edx; stc; call dword ptr [eax - 0x18]; ret 0xf588; 
0x00049a91: retf; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00044351: retf; ret; 
0x00086189: retf; sldt word ptr [ecx + 0x1b0c88c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0017e9b5: retf; stc; call dword ptr [eax - 0x73]; 
0x0016612b: retf; stc; jmp dword ptr [esi - 0x77]; 
0x001a5524: retf; test al, 0xf0; jne 0x1a54b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0014cfde: rol al, 0xf9; call dword ptr [eax - 0x73]; 
0x0013a735: rol ax, 8; ret; 
0x00174f3b: rol bl, 0x8d; jbe 0x174f40; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0017501b: rol bl, 0x8d; jbe 0x175020; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001755eb: rol bl, 0x8d; jbe 0x1755f0; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00154c3b: rol bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0003c3bd: rol byte ptr [0x10c48300], 0x85; sal byte ptr [ebp + 9], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x001657b9: rol byte ptr [eax + 0x440f0039], 0xc8; pop ebx; pop esi; mov eax, ecx; ret; 
0x00040159: rol byte ptr [eax + 0x975003a], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000964f0: rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x000fba90: rol byte ptr [eax + 0xf004d7e], cl; xchg ebp, eax; ret 0xd201; 
0x000b722a: rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00134d2c: rol byte ptr [eax - 0x6bf0a006], 1; ret 0x2d3c; 
0x0004de73: rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x00055a20: rol byte ptr [eax - 0x79f0f607], 1; xchg esi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000d7078: rol byte ptr [eax*4 - 0x760d8a2e], 0xc8; pop ebx; ret; 
0x00092bb4: rol byte ptr [eax], 0; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0017a3d3: rol byte ptr [eax], 0; add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x0010baba: rol byte ptr [eax], 0; add byte ptr [ecx], bh; ret 0x840f; 
0x0018c0f7: rol byte ptr [eax], 0xf7; ret 0xf; 
0x0010b9e8: rol byte ptr [eax], 1; add byte ptr [eax], al; add byte ptr [eax], 0; add byte ptr [ebx - 0x72c7dba4], cl; xor dword ptr [ecx + ebx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00108e72: rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126e23: rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000ec65d: rol byte ptr [eax], 1; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000243f4: rol byte ptr [eax], 1; je 0x24413; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00108dc2: rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126d53: rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00110c45: rol byte ptr [eax], cl; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [eax - 0x77]; ret 0xbc8d; 
0x0003fff0: rol byte ptr [eax], cl; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x0002534a: rol byte ptr [eax], cl; neg edx; ret; 
0x0011f62f: rol byte ptr [eax], cl; ret; 
0x000bf570: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x00084ef8: rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x001322f7: rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00082401: rol byte ptr [ebp - 0x3f6af02e], 0x3b; sahf; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x00033aaa: rol byte ptr [ebp - 0x76f58b2e], 0x44; and al, 4; call edx; 
0x0012c580: rol byte ptr [ebp - 0x7cbf8b2e], 0xec; or byte ptr [ebp - 0x649d779], cl; call dword ptr [eax + 0x55]; 
0x00132165: rol byte ptr [ebp - 0x7cf98a25], 0xc4; add al, 0x5b; pop esi; ret; 
0x00150d65: rol byte ptr [ebx + 0x108704c0], cl; cmp edx, 1; jg 0x150d78; ret; 
0x000f9fc4: rol byte ptr [ebx + 0x29740afb], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009e94d: rol byte ptr [ebx + 0x440f02f8], cl; ret 0xec83; 
0x000b1197: rol byte ptr [ebx + 0x4a8d02eb], 1; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x000b121d: rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xb10e1; pop ebx; ret; 
0x000b123b: rol byte ptr [ebx + 0x4a8d07eb], 1; pop es; jne 0xb10e1; pop ebx; ret; 
0x000b12bf: rol byte ptr [ebx + 0x4a8d0beb], 1; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000b1333: rol byte ptr [ebx + 0x4a8d0eeb], 1; push cs; jne 0xb10e1; pop ebx; ret; 
0x00042755: rol byte ptr [ebx + 0x508d1ff0], 0xe8; mov eax, edx; ret; 
0x000423bf: rol byte ptr [ebx + 0x508d1ff0], 0xe9; mov eax, edx; ret; 
0x000427f5: rol byte ptr [ebx + 0x508d1ff0], 0xf0; mov eax, edx; ret; 
0x00042460: rol byte ptr [ebx + 0x508d1ff0], 0xf1; mov eax, edx; ret; 
0x0004249f: rol byte ptr [ebx + 0x508d1ff0], 1; mov eax, edx; ret; 
0x00081ce9: rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x00041726: rol byte ptr [ebx + 0x5e5b04c4], 0x5f; pop ebp; ret; 
0x00027013: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0005ffb5: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; pop ebp; ret; 
0x0011fe7a: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x00127eaf: rol byte ptr [ebx + 0x5e5b10c4], cl; pop edi; ret; 
0x000ad6fa: rol byte ptr [ebx + 0x5e5b14c4], 1; pop edi; pop ebp; ret; 
0x000a71b7: rol byte ptr [ebx + 0x5e5b18c4], 1; pop edi; pop ebp; ret; 
0x00041e04: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0007f775: rol byte ptr [ebx + 0x5e5b1cc4], 1; pop edi; pop ebp; ret; 
0x00041b53: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0004cef2: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x00050c34: rol byte ptr [ebx + 0x5e5b5cc4], cl; pop edi; pop ebp; ret; 
0x000ad947: rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000ad954: rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000ad961: rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000a6ed0: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xd14], dl; ret; 
0x000a6eb0: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xe34], dl; ret; 
0x0005ddb2: rol byte ptr [ebx + 0xf41087e], cl; xchg esp, eax; ret 0x6a52; 
0x0010acae: rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x00100995: rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0014e855: rol byte ptr [ebx + eax], 0x81; ret; 
0x001708c0: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc68037d], cl; call dword ptr [eax - 0x73]; 
0x0016df62: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc92137d], cl; call dword ptr [eax - 0x73]; 
0x001765d6: rol byte ptr [ebx - 0x173ce33c], 0; sub esp, edi; call dword ptr [ebx - 0x7d]; 
0x00047677: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000e0f15: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd329; 
0x000e344c: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd729; 
0x000d39ed: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x00052a54: rol byte ptr [ebx - 0x177cfd20], 1; ret; 
0x0016ae81: rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x00135b8a: rol byte ptr [ebx - 0x2f76fb3c], cl; pop ebx; pop esi; ret; 
0x00090ad5: rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000d2e72: rol byte ptr [ebx - 0x362f43], cl; call dword ptr [eax]; 
0x0009a143: rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009a252: rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x000bf152: rol byte ptr [ebx - 0x3dfebf16], 0x7c; add eax, ecx; ret; 
0x000bf162: rol byte ptr [ebx - 0x3dfecf16], 0x7c; lea eax, es:[ecx + eax + 0x10]; ret; 
0x000bf172: rol byte ptr [ebx - 0x3dfedf16], 0x7c; push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000bf182: rol byte ptr [ebx - 0x3dfeef16], 0x7c; push es; lea eax, [ecx + eax + 0x30]; ret; 
0x00042569: rol byte ptr [ebx - 0x3f7afe3e], 1; cmovne eax, edx; ret; 
0x000423da: rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x000f9ffb: rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0012a5a8: rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00107f57: rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0012a567: rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0016c594: rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0009a265: rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x0005278f: rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0008727b: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x0016a905: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x00132185: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0016ba5c: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0013a1b2: rol byte ptr [ebx - 0x57ca818], 1; or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x000668e1: rol byte ptr [ebx - 0x59343], 0xff; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0003747a: rol byte ptr [ebx - 0x5fe0008], 1; jmp edx; 
0x000a482a: rol byte ptr [ebx - 0x6114ef3c], 1; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00182ea1: rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x0005a067: rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x48b; 
0x001750ff: rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x000bf33c: rol byte ptr [ebx - 0x73ee010], 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x00165e71: rol byte ptr [ebx - 0x7f72f714], 1; outsd dx, dword ptr [esi]; jb 0x165e73; call dword ptr [eax + 0x57]; 
0x001a46c6: rol byte ptr [ebx], 0x5f; ret; 
0x0016a1ba: rol byte ptr [ebx], 0x83; ret 0x8303; 
0x00182b8e: rol byte ptr [ebx], 0x94; sub byte ptr [eax + edi - 7], 0xff; jmp edx; 
0x000fbe1f: rol byte ptr [ebx], 0x9c; add dword ptr [edi + eax - 7], -1; jmp ebx; 
0x000fbe41: rol byte ptr [ebx], cl; test byte ptr [eax - 0x6f760], dl; jmp eax; 
0x000fbd63: rol byte ptr [ebx], cl; test byte ptr [eax - 0x6f994], dl; jmp eax; 
0x000f7f08: rol byte ptr [ecx + 0x1cd1fa], 0; setne al; ret; 
0x000f7f71: rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x00156ce9: rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0013d0f3: rol byte ptr [ecx + 0xe1], 0xc0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0013d0f9: rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x0016af87: rol byte ptr [ecx + ecx*4], 0x43; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00122630: rol byte ptr [ecx + ecx*4], 0x83; mov al, byte ptr [0x83000045]; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000cad7b: rol byte ptr [ecx + ecx*4], 3; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c2594: rol byte ptr [ecx + edi], 0xca; je 0xc259e; test edx, edx; jne 0xc2590; ret; 
0x000f7f2d: rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x00049df1: rol byte ptr [ecx - 0x7fffff19], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0005947c: rol byte ptr [ecx], 0x39; ret 0x1e74; 
0x0010634a: rol byte ptr [ecx], 0x39; ret 0x567e; 
0x000a71aa: rol byte ptr [ecx], 0x39; ret 0x872; 
0x001063a0: rol byte ptr [ecx], 0x39; ret 0xda75; 
0x001213d7: rol byte ptr [ecx], 0x39; ret 0xe075; 
0x00102d6f: rol byte ptr [ecx], 0x39; ret 0xe675; 
0x0011fc91: rol byte ptr [ecx], 0x39; ret 0xe975; 
0x000fb7eb: rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x001ad8d0: rol byte ptr [ecx], 0x39; ret 0xf37f; 
0x001a7cca: rol byte ptr [ecx], 0x39; ret 0xf67f; 
0x000520d1: rol byte ptr [ecx], 0x39; ret; 
0x0005e4e3: rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000c0c2a: rol byte ptr [ecx], 0x50; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0004242a: rol byte ptr [ecx], 0x5b; ret; 
0x001a4a81: rol byte ptr [ecx], 0x5f; ret; 
0x000a5820: rol byte ptr [ecx], 0x83; les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0013bc19: rol byte ptr [ecx], 0x83; ret 0x3904; 
0x0009c860: rol byte ptr [ecx], 0x83; ret 0x3910; 
0x0017ea2b: rol byte ptr [ecx], 0x83; ret 0x3914; 
0x00113e66: rol byte ptr [ecx], 0x83; ret 0x5201; 
0x00143c63: rol byte ptr [ecx], 0x83; ret 0x8301; 
0x00182710: rol byte ptr [ecx], 0x83; ret 0x8308; 
0x0002bb6e: rol byte ptr [ecx], 0x83; ret 0x8801; 
0x00028345: rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0002993a: rol byte ptr [ecx], 0x83; ret; 
0x000a6080: rol byte ptr [ecx], 0x84; sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x000a9e4a: rol byte ptr [ecx], 0x89; add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x000c3a2e: rol byte ptr [ecx], 0x89; inc ecx; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00185281: rol byte ptr [ecx], 0x89; ret 0x850f; 
0x00030c37: rol byte ptr [ecx], 0x89; ret; 
0x000ee9e5: rol byte ptr [ecx], 0x89; test dword ptr [ebx + edi*8 - 1], edi; inc dword ptr [ecx]; ret; 
0x001384cd: rol byte ptr [ecx], 0x8b; adc esi, esi; ret 0xf20; 
0x00135ae1: rol byte ptr [ecx], 0x8b; dec edx; add al, 0x83; ret 0x8518; 
0x000bf076: rol byte ptr [ecx], 0xc8; ret; 
0x000bf44c: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x000bf5b2: rol byte ptr [ecx], 0xd0; ret; 
0x000bea07: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x000beb55: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x000a9481: rol byte ptr [ecx], 0xf; mov esi, 0xda390114; je 0xa9480; pop ebx; ret; 
0x000344ec: rol byte ptr [ecx], 1; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x001a2b9c: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x000b0f0c: rol byte ptr [ecx], 1; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000c0a18: rol byte ptr [ecx], 1; add byte ptr [eax], al; ret; 
0x001a5c06: rol byte ptr [ecx], 1; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0006ace8: rol byte ptr [ecx], 1; ret; 
0x000ad93b: rol byte ptr [ecx], cl; rcr byte ptr [edi + 0x5e], 1; ret; 
0x000a89ed: rol byte ptr [ecx], cl; ret; 
0x000ad945: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000ad952: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000ad95f: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x00108421: rol byte ptr [edi + 0x3fac87], 0; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x00150d67: rol byte ptr [edi + eax*4], 0x10; cmp edx, 1; jg 0x150d78; ret; 
0x001a46ec: rol byte ptr [edi], 0x5f; ret; 
0x000428bd: rol byte ptr [edx + edx*8 + 0x8ba], 0; cmove eax, edx; ret; 
0x000d01c3: rol byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax - 0x56], -7; call dword ptr [eax - 0x18]; 
0x0002dd31: rol byte ptr [edx], 0x39; ret 0x820f; 
0x000a9687: rol byte ptr [edx], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001a4a86: rol byte ptr [edx], 0x5f; ret; 
0x0002b6bc: rol byte ptr [esi + 0x7c8b0000], 0x24; cmp al, 0x8d; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0005296d: rol byte ptr [esi], 0; add byte ptr [eax], al; call 0x52930; jmp eax; 
0x001a4a9a: rol byte ptr [esi], 0x5f; ret; 
0x00098ae3: rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0013d3d8: rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x2ec3; 
0x0008f6fb: rol cl, 1; call 0x89386b05; clc; call dword ptr gs:[0x10]; 
0x00145ae7: rol cl, 1; call 0xe8dc460d; out dx, al; xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x0003b91a: rol cl, 1; cli; push ds; and eax, edx; ret; 
0x000a9764: rol dh, 1; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000ee740: rol dword ptr [0x828d0000], cl; xchg byte ptr [edi - 7], dl; call dword ptr [eax - 0x73]; 
0x000d6e9a: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0009d490: rol dword ptr [eax + 0x75], 0x24; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x001980ec: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00091b2a: rol dword ptr [eax + 0xf], 0x84; mov esi, 0x8b000003; je 0x91b59; add al, 0x89; ret; 
0x0017df75: rol dword ptr [eax - 0x3effffff], 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003999b: rol dword ptr [eax], 0; add byte ptr [ebp - 0x6a9ff55], cl; inc dword ptr [ebx - 0x7c72f314]; sar dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000bf8ec: rol dword ptr [eax], 0; inc dword ptr [eax]; je 0xbf8f4; inc eax; pop edi; ret; 
0x000ed93e: rol dword ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed90e: rol dword ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c09c9: rol dword ptr [eax], cl; add byte ptr [eax], al; mov ecx, dword ptr [edx + eax*4 - 0x70c9c]; add ecx, edx; jmp ecx; 
0x001a3b47: rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bee41: rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000bf106: rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000bf0d7: rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x001a3b86: rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000d4ae0: rol dword ptr [ebp - 0x317bf001], 1; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x001a36af: rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00112f41: rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29130fd4; ret; 
0x00114921: rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x291329b4; ret; 
0x00116301: rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29134394; ret; 
0x000bee07: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00087d22: rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x00118608: rol dword ptr [ebx + 0x5e5b00d8], 1; pop edi; pop ebp; ret; 
0x001175c9: rol dword ptr [ebx + 0x5e5b00d8], 1; ret; 
0x0009650c: rol dword ptr [ebx + 0x5e5b1cc4], cl; pop edi; pop ebp; ret; 
0x000c14bb: rol dword ptr [ebx + 0xb813fe2], 1; add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x0014fa42: rol dword ptr [ebx + eax*4], 0xc4; sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00132402: rol dword ptr [ebx - 0x3f7aef3c], 0xf; xchg esp, eax; ret 0x4483; 
0x0009d122: rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x00050275: rol dword ptr [ebx - 0x7bf0e008], cl; sub eax, 0xba000002; pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x0004c720: rol dword ptr [ebx - 0x7bf0e808], cl; imul eax, dword ptr [ecx], 0x17ba0000; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000a315b: rol dword ptr [ebx], 0; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0008fb59: rol dword ptr [ebx], 0x83; clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x001727d0: rol dword ptr [ecx + edx*2], 0x57; call dword ptr [eax + 8]; 
0x000424f1: rol dword ptr [ecx], 0x5b; mov eax, ecx; ret; 
0x0003898d: rol dword ptr [ecx], 0x83; cli; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00092f21: rol dword ptr [ecx], 0x83; ret 0x8108; 
0x000c3746: rol dword ptr [ecx], 0x83; ret 0x8801; 
0x000ad62a: rol dword ptr [ecx], 0x89; ret; 
0x000ad099: rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x00100bf0: rol dword ptr [ecx], 9; ret 0xf983; 
0x000b862b: rol dword ptr [edi], 1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00060328: rol dword ptr [edx], cl; add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000b778d: rol dword ptr [esi + 0x10], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0003d5a3: rol dword ptr [esi], 0x83; ret 0x901; 
0x00148249: rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x000b6c81: rol eax, 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013a736: rol eax, 8; ret; 
0x0003cc12: rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0010892b: rol ebp, 0xf1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000dc0be: rol ecx, 0xc9; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x00096599: rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000964c6: rol ecx, 0xe9; add esi, dword ptr [ebx + eax*8 - 0x77]; ret 0xca83; 
0x00096e5e: rol ecx, 0xe9; add esi, dword ptr [esi + edi*4 - 0x77]; ret 0xca83; 
0x0003b60b: rol ecx, 1; call 0x10ed7731; or eax, ecx; ret; 
0x0003bec9: rol ecx, 9; mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0014824a: rol edx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x00024b9b: rol edx, 9; mov dword ptr [eax + 0x1a50], edx; pop ebx; pop esi; ret; 
0x00024acb: rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x000a3245: ror byte ptr [0x878d0000], 0x7b; push ecx; stc; call dword ptr [eax - 0x73]; 
0x001472b0: ror byte ptr [eax + 0xf10244c], 0x94; ret 0xa3c; 
0x000b6cde: ror byte ptr [eax + eax], 0x81; rcr dword ptr [edi - 0x10], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6d23: ror byte ptr [eax + eax], 0x81; rcr dword ptr [edx], 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c62: ror byte ptr [eax + eax], 0x81; rcr ebx, 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c7d: ror byte ptr [eax + eax], 0x81; rol eax, 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cc1: ror byte ptr [eax + eax], 0x81; sar dword ptr [eax + esi*8 + 0x10], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cfe: ror byte ptr [eax + eax], 0x81; sar dword ptr [edi], 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c40: ror byte ptr [eax + eax], 0x81; sar ebp, 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c94: ror byte ptr [eax + eax], 0x81; shr dword ptr [ecx + 0x30010f0], 0xc; cdq; jmp ecx; 
0x0007e055: ror byte ptr [eax + edx], 0x81; ret; 
0x0012437d: ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x0009fa87: ror byte ptr [eax], 0x39; ret 0xf375; 
0x000fc6f1: ror byte ptr [eax], 0x39; ret 0xf475; 
0x001563d2: ror byte ptr [eax], 0x50; call 0xbfaa0; add esp, 0x1c; ret; 
0x001a4aa4: ror byte ptr [eax], 0x5f; ret; 
0x000a4296: ror byte ptr [eax], 0x83; clc; or dword ptr [edi + 0x23], esi; mov ecx, dword ptr [ebx + eax*4 - 0x71254]; add ecx, ebx; jmp ecx; 
0x0019fff1: ror byte ptr [eax], 0x83; ret 0x5608; 
0x0019ed52: ror byte ptr [eax], 0x83; ret 0x5708; 
0x00199991: ror byte ptr [eax], 0x83; ret 0x8308; 
0x0014c3a6: ror byte ptr [eax], 0x83; ret 0x8908; 
0x00198171: ror byte ptr [eax], 0x83; ret 0xf608; 
0x0016e147: ror byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016e124: ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x000419d6: ror byte ptr [ebp + 0x2bb6c48], cl; add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x00060b4a: ror byte ptr [ebp + 0x429c0384], 0xf9; call dword ptr [eax + 0x6a]; 
0x00028f27: ror byte ptr [ebp + 0x490f0342], cl; ret 0xec83; 
0x001adc5d: ror byte ptr [ebp + 0x490f1f42], cl; ret 0xf8c1; 
0x00025978: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x000929d4: ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001aa0d1: ror byte ptr [ebp + 0xb6], cl; add byte ptr [ebx + 0x558bb045], cl; les ecx, ptr [ecx]; ret 0xfa09; 
0x0007b49d: ror byte ptr [ebp - 0x153efcb0], 1; add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x000a5ec1: ror byte ptr [ebp - 0x2776feb0], 0xf; inc ebp; ret 0xc483; 
0x00179fb3: ror byte ptr [ebp - 0x72af2bbb], 0x87; mov word ptr [eax - 0x72b00000], gs; xchg dword ptr [esi], edi; jae 0x179fbd; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x000b9117: ror byte ptr [ebp - 0x7af0efc0], cl; ret; 
0x0010ee3c: ror byte ptr [ebx + 0x1368968c], cl; stc; inc dword ptr [ecx]; int1; jmp ecx; 
0x001487f1: ror byte ptr [ebx + 0x1a0491bc], cl; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x001488ba: ror byte ptr [ebx + 0x1a1491bc], cl; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x001489bf: ror byte ptr [ebx + 0x1a2891bc], cl; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x0013be9a: ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x0013bd3e: ror byte ptr [ebx + 0x29302444], 1; fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000ca415: ror byte ptr [ebx + 0x29642454], 1; ret; 
0x000c72d3: ror byte ptr [ebx + 0x296c2454], 1; ret; 
0x0010631d: ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x0012f0c5: ror byte ptr [ebx + 0x3980044a], 0; je 0x12f0d0; ret; 
0x00031837: ror byte ptr [ebx + 0x41031841], 1; adc al, 0x39; ret 0x4d0f; 
0x00171c16: ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x171c37; add esp, 0x1c; ret; 
0x0012de2c: ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x12de3e; add esp, 0x7c; ret; 
0x000d6f65: ror byte ptr [ebx + 0x75c9850a], 0x1e; ret; 
0x0011e675: ror byte ptr [ebx + 0x78c9850a], 8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0003f2bc: ror byte ptr [ebx + 0x9082454], 1; ret 0xd389; 
0x0003b814: ror byte ptr [ebx + 0xa483], 0; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0003bb20: ror byte ptr [ebx + 0xa483], 0; mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x001417fd: ror byte ptr [ebx + 0xf102444], 0x95; ret 0xc085; 
0x0011fbb8: ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x0007877a: ror byte ptr [ebx - 0x1bfb6a44], cl; clc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x00065822: ror byte ptr [ebx - 0x2d376874], cl; clc; inc dword ptr [ecx]; stc; jmp ecx; 
0x00130ffc: ror byte ptr [ebx - 0x5cf0f7fc], cl; fmul dword ptr [edi]; xchg edx, eax; ret 0xd089; 
0x00130004: ror byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x12fed0; add esp, 4; ret; 
0x0013de61: ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6474; 
0x000375ce: ror byte ptr [ebx - 0x7adf786c], 0xf8; inc dword ptr [ecx]; cli; jmp edx; 
0x000374e9: ror byte ptr [ebx - 0x7bdb786c], 0xf8; inc dword ptr [ecx]; cli; jmp edx; 
0x00037476: ror byte ptr [ebx - 0x7c2f786c], 0xf8; inc dword ptr [ecx]; cli; jmp edx; 
0x001a4713: ror byte ptr [ebx], 0x5f; ret; 
0x00095950: ror byte ptr [ebx], 0xba; add dword ptr [0xa30f0000], 0xe9ac73c2; cmp dh, 0xff; dec dword ptr [ebp - 0x668ff79]; call dword ptr [eax - 0x73]; 
0x000f7eb8: ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x000f7eb6: ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x000a872d: ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x0007acea: ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x00129c97: ror byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011306b: ror byte ptr [ecx + 0x244c89cb], cl; or al, 0x29; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x0005d1dd: ror byte ptr [ecx + 0x29fa89d1], 1; ret 0x448d; 
0x001763f1: ror byte ptr [ecx + 0x315b1046], 0xc0; pop esi; pop edi; ret; 
0x0007f962: ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0003ffb0: ror byte ptr [ecx + 0x5a89104a], 0x14; pop ebx; pop esi; pop edi; ret; 
0x0011e1e5: ror byte ptr [ecx + 0x5e5b5053], 0x5f; ret; 
0x0003cdff: ror byte ptr [ecx + 0x5f5e5b17], 0x5d; ret; 
0x00083925: ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x000917bb: ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00132d39: ror byte ptr [ecx + 0xf0c244c], 0x95; ret 0x44c7; 
0x000ad5a4: ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x00085596: ror byte ptr [ecx - 0x137cefba], cl; or byte ptr [ebp - 0x1b1b437d], cl; dec dword ptr [ecx - 0x72afebaa]; cmp dword ptr [esp], -0x1c; call dword ptr [eax - 0x73]; 
0x00037f3b: ror byte ptr [ecx - 0x1cf7b], 1; dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x00037e25: ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x00054460: ror byte ptr [ecx - 0x22fbdbbc], 1; add al, 0x24; add esp, 0xc; ret; 
0x0003be4a: ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x000bf60b: ror byte ptr [ecx - 0x3dbaf028], 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011e6c2: ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x000eed75: ror byte ptr [ecx - 0x49f7b], 1; call dword ptr [eax + 0x6a]; 
0x00067817: ror byte ptr [ecx - 0x5bb43], cl; dec dword ptr [edi]; dec edi; ret 0x8589; 
0x00035009: ror byte ptr [ecx - 0x7439760e], 1; inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x000a02cb: ror byte ptr [ecx - 0x744a8b3d], 1; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x000d18f0: ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x00163b61: ror byte ptr [ecx - 0x7ce7dbac], 1; ret 0xf01; 
0x001a4aa9: ror byte ptr [ecx], 0x5f; ret; 
0x0015139c: ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x00124380: ror byte ptr [ecx], 0xc8; ret; 
0x001243d7: ror byte ptr [ecx], 0xf0; pop esi; pop edi; ret; 
0x0009d88d: ror byte ptr [ecx], 1; ret; 
0x000ad6ce: ror byte ptr [ecx], cl; ret 0xc031; 
0x00136f33: ror byte ptr [edi], 0x44; rcl dword ptr [eax - 0x73], 0x87; stc; call dword ptr [eax - 1]; 
0x001826b2: ror byte ptr [edi], 0x44; ret 0x178b; 
0x000c2273: ror byte ptr [edi], 0x44; ret 0x4489; 
0x00120f29: ror byte ptr [edi], 0x44; ret 0x66c3; 
0x0010a1ce: ror byte ptr [edi], 0x44; ret 0xb58b; 
0x00121b44: ror byte ptr [edi], 0x44; ret 0xc483; 
0x0016289d: ror byte ptr [edi], 0x44; ret 0xec83; 
0x00026c3c: ror byte ptr [edi], 0x44; ret; 
0x0004256e: ror byte ptr [edi], 0x45; ret 0x66c3; 
0x00132a51: ror byte ptr [edi], 0x48; ret 0x4639; 
0x0002fd87: ror byte ptr [edi], 0x48; ret 0xc083; 
0x00040195: ror byte ptr [edi], 0x48; ret 0xc483; 
0x0013278a: ror byte ptr [edi], 0x48; ret 0xc629; 
0x000d80ec: ror byte ptr [edi], 0x48; ret 0xef29; 
0x0008b57d: ror byte ptr [edi], 0x48; ret 0xff50; 
0x0011f420: ror byte ptr [edi], 0x49; ret 0x8dc3; 
0x00154c91: ror byte ptr [edi], 0x4e; ret 0x4489; 
0x0009b628: ror byte ptr [edi], 0x4e; ret 0x578b; 
0x0010e16a: ror byte ptr [edi], 0x4e; ret 0xe883; 
0x001a473c: ror byte ptr [edi], 0x5f; ret; 
0x00068866: ror byte ptr [edi], 0x84; adc al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x000dc3c4: ror byte ptr [edi], 0x84; adc eax, 0x89000002; ret; 
0x000828f6: ror byte ptr [edi], 0x84; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00122b9b: ror byte ptr [edi], 0x84; add eax, 0xec830000; or byte ptr [ebp - 0x6a3b57d], cl; call dword ptr [eax + 0x55]; 
0x001636f1: ror byte ptr [edi], 0x84; call 0x841636f7; ret; 
0x00122eb3: ror byte ptr [edi], 0x84; cld; or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d017d], cl; call dword ptr [edx + 0x52]; 
0x00065901: ror byte ptr [edi], 0x84; cmp eax, dword ptr [eax + eax]; add byte ptr [ecx], bh; ret; 
0x00068b70: ror byte ptr [edi], 0x84; cmp eax, dword ptr cs:[eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0016f737: ror byte ptr [edi], 0x84; cmp edx, dword ptr [edx - 0x15]; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0002a73c: ror byte ptr [edi], 0x84; dec ebx; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x0007b2c6: ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x00084d26: ror byte ptr [edi], 0x84; inc ebx; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00122bec: ror byte ptr [edi], 0x84; lodsd eax, dword ptr [esi]; add eax, 0xec830000; or byte ptr [ebp - 0x6a2f87d], cl; call dword ptr [eax + 0x55]; 
0x0010a2ea: ror byte ptr [edi], 0x84; mov al, byte ptr [0xe9fffffb]; ret; 
0x00170def: ror byte ptr [edi], 0x84; mov al, byte ptr [eax + eax]; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x001634e0: ror byte ptr [edi], 0x84; mov byte ptr [eax], 0; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x00095837: ror byte ptr [edi], 0x84; mov dword ptr [0x8dfffffd], eax; xchg dword ptr [eax], eax; xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x001054c1: ror byte ptr [edi], 0x84; mov ebp, 0xf000001; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00183f26: ror byte ptr [edi], 0x84; mov ebx, 0x39000000; ret; 
0x00068d0f: ror byte ptr [edi], 0x84; mov ebx, 0x8b000019; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0007e6bb: ror byte ptr [edi], 0x84; mov esi, 0x39000000; ret; 
0x0017c7b5: ror byte ptr [edi], 0x84; mov esp, 0x83000003; in al, dx; or byte ptr [ebp - 0x6896675], cl; call dword ptr [ecx - 0x77]; 
0x00122d47: ror byte ptr [edi], 0x84; pop eax; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6a0087d], cl; call dword ptr [edx + 0x52]; 
0x0008a626: ror byte ptr [edi], 0x84; pop ebx; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0017089a: ror byte ptr [edi], 0x84; pop es; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0005007a: ror byte ptr [edi], 0x84; pop esi; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x0007d618: ror byte ptr [edi], 0x84; popal; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00122c58: ror byte ptr [edi], 0x84; push eax; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; call ptr [ebp - 7]; call dword ptr [eax + 0x55]; 
0x00134b35: ror byte ptr [edi], 0x84; ret 0; 
0x000c994e: ror byte ptr [edi], 0x84; ret 0x11; 
0x000cc92a: ror byte ptr [edi], 0x84; ret 0x14; 
0x0007585e: ror byte ptr [edi], 0x84; ret 0x15; 
0x00141c3a: ror byte ptr [edi], 0x84; ret 0xfffe; 
0x0004912a: ror byte ptr [edi], 0x84; ret 2; 
0x000a19b4: ror byte ptr [edi], 0x84; ret 4; 
0x00050ad5: ror byte ptr [edi], 0x84; ret 5; 
0x000277a6: ror byte ptr [edi], 0x84; ret; 
0x00073c89: ror byte ptr [edi], 0x84; retf 2; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x000a3158: ror byte ptr [edi], 0x84; rol dword ptr [ebx], 0; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00072ac5: ror byte ptr [edi], 0x84; sti; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0007647b: ror byte ptr [edi], 0x84; sti; or eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x00122c73: ror byte ptr [edi], 0x84; stosb byte ptr es:[edi], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ebx; call dword ptr [eax + 0x55]; 
0x00083bc6: ror byte ptr [edi], 0x84; stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00122e99: ror byte ptr [edi], 0x84; stosd dword ptr es:[edi], eax; or al, 0; add byte ptr [ebp - 0x69d557d], cl; call dword ptr [ecx + 0x51]; 
0x00122d2d: ror byte ptr [edi], 0x84; stosd dword ptr es:[edi], eax; or al, byte ptr [eax]; add byte ptr [ebp - 0x6a03e7d], cl; call dword ptr [ecx + 0x51]; 
0x0017c7d8: ror byte ptr [edi], 0x84; sub dword ptr [eax + eax], eax; add byte ptr [ebx - 0x4c72f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x00122c3d: ror byte ptr [edi], 0x84; test byte ptr [edi], 0; add byte ptr [ebx - 0x7c72f714], al; mov bl, 0x5d; stc; call dword ptr [eax + 0x55]; 
0x0017159e: ror byte ptr [edi], 0x84; wait; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0007b557: ror byte ptr [edi], 0x84; xchg edx, eax; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0010c6e5: ror byte ptr [edi], 0x84; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x46b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x001a3a88: ror byte ptr [edi], 0x85; add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x000b1554: ror byte ptr [edi], 0x85; add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000b5a24: ror byte ptr [edi], 0x85; and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b1534: ror byte ptr [edi], 0x85; and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0016fb20: ror byte ptr [edi], 0x85; cdq; add byte ptr [eax], al; add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000df1a4: ror byte ptr [edi], 0x85; cdq; out 0xff, al; call dword ptr [edi + 0x57]; 
0x001479e9: ror byte ptr [edi], 0x85; clc; add byte ptr [eax], al; add byte ptr [eax - 0x162676ed], cl; ret 0xfffb; 
0x000bf044: ror byte ptr [edi], 0x85; cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b13ee: ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001a3b88: ror byte ptr [edi], 0x85; jno 0x1a3b8f; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bee09: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000bed6b: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000754cb: ror byte ptr [edi], 0x85; out dx, al; ret; 
0x000ffa87: ror byte ptr [edi], 0x85; ret 0; 
0x00158df7: ror byte ptr [edi], 0x85; ret 0xfffb; 
0x0017c9a6: ror byte ptr [edi], 0x85; ret 0xfffd; 
0x000d497d: ror byte ptr [edi], 0x85; ret 0xfffe; 
0x0016553a: ror byte ptr [edi], 0x85; ret 1; 
0x0014b10c: ror byte ptr [edi], 0x85; ret 2; 
0x00063d0b: ror byte ptr [edi], 0x85; ret 3; 
0x000329e3: ror byte ptr [edi], 0x85; ret; 
0x001ad97a: ror byte ptr [edi], 0x85; ror dword ptr [eax], 0; add byte ptr [ecx + 0x74891134], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x0017eb40: ror byte ptr [edi], 0x85; test eax, 0x5b000000; pop esi; pop edi; ret; 
0x001a3b49: ror byte ptr [edi], 0x85; xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00033e71: ror byte ptr [edi], 0x88; cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x699f27d], cl; call dword ptr [esi - 1]; 
0x000e0f85: ror byte ptr [edi], 0x88; ret 0xb; 
0x0013e6e2: ror byte ptr [edi], 0x88; ret 0xfffe; 
0x000e7e8a: ror byte ptr [edi], 0x89; ret 0x25; 
0x0017a7c9: ror byte ptr [edi], 0x89; ret; 
0x00129a98: ror byte ptr [edi], 0x8c; push ecx; mov ah, 0xef; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x00030be1: ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x0004491c: ror byte ptr [edi], 0x94; ret 0x3c83; 
0x00106484: ror byte ptr [edi], 0x94; ret 0x3f8b; 
0x00132407: ror byte ptr [edi], 0x94; ret 0x4483; 
0x00171b5c: ror byte ptr [edi], 0x94; ret 0xc031; 
0x0003cddd: ror byte ptr [edi], 0x94; ret; 
0x00107f54: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0005278c: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x001633d8: ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x001751b5: ror byte ptr [edi], 0x95; ret 0x4de9; 
0x001a9f91: ror byte ptr [edi], 0x95; ret 0xc209; 
0x0016ae5a: ror byte ptr [edi], 0x95; ret 0xc483; 
0x00084efa: ror byte ptr [edi], 0x95; ret 0xd089; 
0x0003a20e: ror byte ptr [edi], 0x95; ret; 
0x0016c591: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0016a902: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0016ba59: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0011fd83: ror byte ptr [edi], 0x9e; ret 0xff85; 
0x0005daac: ror byte ptr [edi], 0x9f; ret; 
0x00054100: ror byte ptr [edi], 0xad; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0009a140: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009a24f: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0003be47: ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x0011f3e6: ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0xc; ret; 
0x00156397: ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x00168774: ror byte ptr [edi], 0xb6; shr bl, 0x8f; nop; nop; nop; ret; 
0x000423bc: ror byte ptr [edi], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xe9; mov eax, edx; ret; 
0x0004245d: ror byte ptr [edi], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xf1; mov eax, edx; ret; 
0x00146d62: ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000fb9d9: ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x0016d39b: ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x0011fa66: ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0010abdb: ror byte ptr [edi], 1; dec edi; ret 0xdce9; 
0x00165a4a: ror byte ptr [edi], 1; dec esp; ret 0xec83; 
0x0010aabd: ror byte ptr [edi], 1; dec esp; ret 0xfae9; 
0x000c9245: ror byte ptr [edi], 1; dec esp; ret; 
0x00042083: ror byte ptr [edi], 1; inc ebp; ret; 
0x00049676: ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x00130164: ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x000a3dbe: ror byte ptr [edi], 1; inc edi; ret 0x508d; 
0x000a1c5e: ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x0013c38e: ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x000791d6: ror byte ptr [edi], 1; inc edx; ret 0x789; 
0x0013bea2: ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x0013bd4a: ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000c48fd: ror byte ptr [edi], 1; inc edx; ret 0xd9f7; 
0x0013bd58: ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000a5994: ror byte ptr [edi], 1; inc edx; ret 0xea89; 
0x00166126: ror byte ptr [edi], 1; mov bh, 0x80; push -0x35; stc; jmp dword ptr [esi - 0x77]; 
0x000426bd: ror byte ptr [edi], 1; mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000398db: ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x398c0; ret; 
0x0004260b: ror byte ptr [edi], 1; mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004249c: ror byte ptr [edi], 1; mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0005e4e6: ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000ab6e1: ror byte ptr [edi], 1; test byte ptr [ebx - 0x75000000], dh; pop ebp; rol byte ptr [ecx], 1; ret; 
0x000bea80: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000f7af5: ror byte ptr [edi], 1; test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebx - 0x15637b]; inc dword ptr [ebx - 0x7f72f714]; add bl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x0013076b: ror byte ptr [edi], 1; xchg edx, eax; ret; 
0x000e0c68: ror byte ptr [edi], cl; dec ecx; ret 0x5c89; 
0x000e3136: ror byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x0006646f: ror byte ptr [edi], cl; dec ecx; ret 0xe883; 
0x00069300: ror byte ptr [edi], cl; inc ebp; ret 0x8589; 
0x00072e19: ror byte ptr [edi], cl; inc esp; ret; 
0x00028225: ror byte ptr [edi], cl; mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0004905d: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0008f48f: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x00130351: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x001373d5: ror byte ptr [edi], cl; sahf; ret 0xd108; 
0x00168975: ror byte ptr [edi], cl; test byte ptr [eax + eax + 0x54890000], al; and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0002f067: ror byte ptr [edi], cl; test byte ptr [eax - 0x7d000000], dh; ret; 
0x000a139a: ror byte ptr [edi], cl; test byte ptr [edi - 0x72fffffd], dl; pop edx; or dh, dh; ret; 
0x001a20e7: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x0012167a: ror byte ptr [edi], cl; test byte ptr [esi - 0x7c000002], bh; in al, dx; or byte ptr [ebp - 0x6c1a67a], cl; call dword ptr [eax - 1]; 
0x000ff38c: ror byte ptr [edi], cl; test ch, dl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x001a9aea: ror byte ptr [edi], cl; test dword ptr [ecx + eax + 0x3c890000], eax; sbb dword ptr [ecx - 0x7cfbe684], ecx; ret; 
0x0004d608: ror byte ptr [edi], cl; xchg ebp, eax; ret 0x950f; 
0x00049b4b: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00044dc0: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc220; 
0x000fbdf8: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd009; 
0x00109cf3: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd021; 
0x001521ac: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x00141722: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xed85; 
0x00082403: ror byte ptr [edi], cl; xchg ebp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x001a4aae: ror byte ptr [edx], 0x5f; ret; 
0x00082546: ror byte ptr [esi - 7], cl; call dword ptr [eax - 0x18]; 
0x001a4ac2: ror byte ptr [esi], 0x5f; ret; 
0x0013cc91: ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0013cd32: ror byte ptr [esi], 0x85; sal byte ptr [edx + esi + 0x39], cl; ret 0x1f72; 
0x000d40e1: ror cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000557b3: ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x000d34ad: ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x00057d03: ror cl, 0xff; call dword ptr [edi + 0x50]; 
0x000d38f4: ror cl, 0xff; call dword ptr [edi + 0x6a]; 
0x00058125: ror cl, 0xff; call dword ptr [esi + 0x56]; 
0x000d594c: ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x00058106: ror cl, 0xff; call dword ptr [esi - 0x18]; 
0x000d5972: ror cl, 0xff; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x000d5b71: ror cl, 0xff; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x000d5c05: ror cl, 0xff; dec dword ptr [ebp - 0x677e37a]; call dword ptr [eax - 0x73]; 
0x000d3ff5: ror cl, 0xff; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x000be1e8: ror dword ptr [0x300107e], 0xc; xchg ecx, eax; jmp ecx; 
0x000b6c22: ror dword ptr [eax + eax], 0x81; rcr dword ptr [ebx + 0x30010f0], 0xc; xchg ecx, eax; jmp ecx; 
0x000b6b5e: ror dword ptr [eax + eax], 0x81; rcr dword ptr [edi - 0xf], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6b3e: ror dword ptr [eax + eax], 0x81; sar dword ptr [edi - 0xf], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001ad97d: ror dword ptr [eax], 0; add byte ptr [ecx + 0x74891134], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000b8529: ror dword ptr [eax], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000e492d: ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000baee8: ror dword ptr [ebp + 0x30010b0], 0xc; xchg ecx, eax; jmp ecx; 
0x0008d92f: ror dword ptr [ebp + 0x40000184], 1; add byte ptr [eax], al; ret; 
0x00073dea: ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4f773], cl; call dword ptr [eax + 0x53]; 
0x001a3467: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x0018fa41: ror dword ptr [ebp + 4], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000258db: ror dword ptr [ebp - 0x1876e1c0], 0x89; ret 0x25; 
0x00025843: ror dword ptr [ebp - 0x1976e1c0], 0x89; ret 0x25; 
0x001a479a: ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x1a47b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0018df54: ror dword ptr [ebp - 1], 0xff; add ebx, 0x46638; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00085915: ror dword ptr [ebx + 0x190c2454], cl; ret 0x157d; 
0x000cc0c5: ror dword ptr [ebx + 0x982484], 0; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c5705: ror dword ptr [ebx + 0x982484], 0; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x00064efe: ror dword ptr [ebx + 0xf20244c], cl; mov dh, 0x54; add ah, al; mov eax, dword ptr [esp + 0x18]; add eax, dword ptr [ecx + edx*4 - 0x73014]; jmp eax; 
0x00166123: ror dword ptr [ebx - 0x48f02fbb], 0x80; push -0x35; stc; jmp dword ptr [esi - 0x77]; 
0x0004112f: ror dword ptr [ecx + 0x10ebc111], cl; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00129aa5: ror dword ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000705f3: ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x000d8190: ror dword ptr [ecx + 0x4e1c1d3], 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0007a9c8: ror dword ptr [ecx + 0x9488], 1; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00113073: ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x0013034d: ror dword ptr [ecx + 0xfd231d3], 0xa4; ret; 
0x0010961d: ror dword ptr [ecx + eax*8 - 0x17], 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00072eb1: ror dword ptr [ecx - 0x50363], cl; dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x0003b541: ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003b8d2: ror dword ptr [ecx - 0x74f7dbac], 0x44; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003bbda: ror dword ptr [ecx - 0x74fbdbac], 0x44; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00052bec: ror dword ptr [ecx - 0x76180810], 1; ret; 
0x000de083: ror dword ptr [ecx - 0x76b3db8c], cl; test ecx, 0xa40f02e1; ret; 
0x00184cff: ror dword ptr [ecx - 0x76ebdbac], 1; ret 0xca29; 
0x00081de6: ror dword ptr [ecx - 0x7c357630], 0xc4; adc byte ptr [ecx], ah; ret 0xfa83; 
0x000e26fa: ror dword ptr [ecx - 0x7ea7db8c], cl; ret; 
0x0018e344: ror dword ptr [ecx - 1], 1; inc dword ptr [ecx + 0x46248c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003beca: ror dword ptr [ecx], 0x89; dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x00097ddd: ror dword ptr [ecx], 1; ror dword ptr [edi], 0x88; ret; 
0x000b8192: ror dword ptr [edi + 0x30010dc], 0xc; xchg ecx, eax; jmp ecx; 
0x001a5509: ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x00097ddf: ror dword ptr [edi], 0x88; ret; 
0x00149a06: ror dword ptr [edi], 0xb7; pop ecx; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000bf073: ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x0010e086: ror dword ptr [edi], 1; xchg ebx, eax; ret 0xb60f; 
0x00081d83: ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x000f868d: ror dword ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00040113: ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x001372fd: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00024fd9: ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013a8ec: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013a9bd: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e818: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00025066: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00151abd: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x0015173f: ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x0013732c: ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0003ebdf: ror eax, 9; xor eax, dword ptr gs:[0x18]; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3ecb0; call eax; 
0x000b82d8: ror ecx, 0xdb; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000dc0bf: ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xdc0d0; mov eax, edx; ret; 
0x000b7872: ror edi, 0xe4; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009ca22: sahf; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ebx*4], ebx; stc; call dword ptr [eax - 0x18]; 
0x0009a211: sahf; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0011c5e0: sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x000b518e: sahf; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000992b5: sahf; clc; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x0009f678: sahf; ja 0x9f694; add byte ptr [ebx - 0x77], dl; ret; 
0x000de9d3: sahf; jecxz 0xde9d5; dec dword ptr [ecx - 0x572f0828]; sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x0009be31: sahf; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0015ea3e: sahf; movsb byte ptr es:[edi], byte ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x000b8e89: sahf; or al, 0; add ecx, 0x10d0a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e76: sahf; or al, 0; add ecx, 0x10d0b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8e5a: sahf; or al, 0; add ecx, 0x10d0d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013665e: sahf; or dword ptr [eax], eax; add byte ptr [ecx - 0x11b43], cl; dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x0018947e: sahf; psubb mm7, mm7; add esp, 0x2c; ret; 
0x00082408: sahf; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x001843ca: sahf; push 0xf000001; xchg esp, eax; ret 0xd008; 
0x000fd94e: sahf; ret 0x5420; 
0x001373d7: sahf; ret 0xd108; 
0x0010192a: sahf; ret 0xd201; 
0x000dcb8d: sahf; ret 0xd329; 
0x000d86ec: sahf; ret 0xf883; 
0x0011fd85: sahf; ret 0xff85; 
0x0009f264: sahf; sbb al, 0x3c; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009cf68: sahf; sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00128dde: sahf; scasd eax, dword ptr es:[edi]; lock dec dword ptr [ebp - 0x64a677d]; call dword ptr [eax - 0x73]; 
0x000a03ff: sahf; stc; call dword ptr [eax - 0x18]; 
0x0015e33e: sahf; stosd dword ptr es:[edi], eax; std; jmp dword ptr [esi - 0x70]; 
0x000a482f: sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x000b6c82: sal al, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0003bd59: sal al, 0x89; ret; 
0x00092d47: sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x000428d5: sal bh, 0xd2; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0011f3e9: sal bh, 0xd8; add esp, 0xc; ret; 
0x000529d2: sal bh, 0xd8; pop esi; pop edi; ret; 
0x0012a56d: sal bh, 0xd8; ret; 
0x0003d5c5: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x66c3; 
0x0010815b: sal bh, 1; jmp dword ptr [esi - 0x70]; 
0x001382e7: sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x0008e743: sal bl, 0xa5; pop esi; pop edi; ret; 
0x0004254c: sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x00042929: sal bl, 0xf; mov esp, 0x74c985c1; push es; pop ebx; ret; 
0x00042995: sal bl, 0xf; mov esp, 0xbad285c2; and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x0004262c: sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000428d7: sal bl, cl; bsf eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x00042565: sal bl, cl; bsf edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x0012c582: sal byte ptr [eax + eax*2 - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x649d779], cl; call dword ptr [eax + 0x55]; 
0x00076c35: sal byte ptr [eax + ebp - 0x75], 0x85; call 0x8a076c39; sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x00026fa9: sal byte ptr [eax + ebp*8 - 0x73], 0x86; in al, dx; jg 0x26faa; call dword ptr [eax - 0x73]; 
0x0008ea95: sal byte ptr [eax + ebx - 0x7d], 0xf8; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00152498: sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6abcf7f], cl; call dword ptr [eax + 0x52]; 
0x00129bf5: sal byte ptr [eax + ecx + 0x5b], cl; setg al; pop esi; pop edi; ret; 
0x0014b108: sal byte ptr [eax + ecx - 0x7c], cl; ror byte ptr [edi], 0x85; ret 2; 
0x0005f7b5: sal byte ptr [eax + ecx*2 - 0x7d], 0xec; add al, 0x6a; add eax, 0x34838d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x000fa715: sal byte ptr [eax + edi*2 - 0x7d], 0xec; or byte ptr [ebp - 0x6a7e07d], cl; call dword ptr [eax + 0x55]; 
0x0008ae25: sal byte ptr [eax + edx + 0x39], 0xd0; jne 0x8ae20; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x00169555: sal byte ptr [eax + edx*4 - 0x75], 0x43; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x000e49ed: sal byte ptr [eax + esi - 0x7d], 0xec; or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x0017d15d: sal byte ptr [eax + esi - 0x7d], 0xec; or byte ptr [ebp - 0x689754a], cl; call dword ptr [esi + 0x53]; 
0x000430e8: sal byte ptr [eax + esi*2 - 0x75], 0x3c; and al, 0x8d; inc edi; inc byte ptr [ebx - 0x6bf00220]; ret 0xff83; 
0x000e4b73: sal byte ptr [eax + esi*4 - 0x7d], 0xf8; fidiv dword ptr [ebp + 0x35]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000ad963: sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000badf9: sal byte ptr [eax], 0xe8; sub eax, 0x81000c7f; sal dword ptr [ecx + esi*4 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0016ae7d: sal byte ptr [ebp + 0x10], 0x31; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x0003be1d: sal byte ptr [ebp + 0x10], 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00042875: sal byte ptr [ebp + 0x10], cl; bsr ebx, ebx; xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x0008d04a: sal byte ptr [ebp + 0x13], cl; xend; xor eax, eax; add esp, 0xc; ret; 
0x00172114: sal byte ptr [ebp + 0x19], cl; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x172137; add esp, 0x1c; ret; 
0x00169078: sal byte ptr [ebp + 0x1d], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0008e97e: sal byte ptr [ebp + 0x1f], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x001829f1: sal byte ptr [ebp + 0x22], 0xb8; add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00120a97: sal byte ptr [ebp + 0x26], 0x8b; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00120567: sal byte ptr [ebp + 0x26], 0x8b; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c477: sal byte ptr [ebp + 0x26], 0x8b; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00110fb7: sal byte ptr [ebp + 0x26], 0x8b; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x00111207: sal byte ptr [ebp + 0x26], 0x8b; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00110a11: sal byte ptr [ebp + 0x27], 0x5b; mov eax, ecx; pop esi; pop edi; ret; 
0x00035dc9: sal byte ptr [ebp + 0x2a], 0x83; ret; 
0x00108f32: sal byte ptr [ebp + 0x2b], 0x8b; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00108c42: sal byte ptr [ebp + 0x2b], 0x8b; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00127065: sal byte ptr [ebp + 0x30], 0x8b; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00126fc5: sal byte ptr [ebp + 0x30], 0x8b; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00108cd5: sal byte ptr [ebp + 0x30], 0x8b; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x001577cb: sal byte ptr [ebp + 0x32], 0x83; in al, dx; or byte ptr [ebp - 0x6aec979], cl; call dword ptr [eax + 0x53]; 
0x00108e6a: sal byte ptr [ebp + 0x33], 0x8b; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00108dba: sal byte ptr [ebp + 0x33], 0x8b; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00169247: sal byte ptr [ebp + 0x36], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000b13a1: sal byte ptr [ebp + 0x38], 0x83; ret; 
0x00128fb5: sal byte ptr [ebp + 0x38], 0x8b; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000bf590: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x00126e1f: sal byte ptr [ebp + 0x3e], 0xb8; rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00126d4f: sal byte ptr [ebp + 0x3e], 0xb8; rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0011c647: sal byte ptr [ebp + 0x40], 0x8b; dec esp; and al, 0x54; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x000a4459: sal byte ptr [ebp + 0x44], 0x80; mov esi, 0x3c24; add byte ptr [ebx + ebp - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ab997a], cl; call dword ptr [ebx + 0x50]; 
0x00127e73: sal byte ptr [ebp + 0x4a], 0x83; in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x001a9ff1: sal byte ptr [ebp + 0x4c], 0x8b; inc ebp; mov al, 0x8b; push ebp; les ecx, ptr [ecx]; ret 0xfa09; 
0x000c3a5b: sal byte ptr [ebp + 0x57], cl; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016fa28: sal byte ptr [ebp + 0x5d], 0x83; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x000ffad1: sal byte ptr [ebp + 0x7c], 0x89; clc; pop ebx; pop esi; pop edi; ret; 
0x001110ab: sal byte ptr [ebp + 0xa], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00096189: sal byte ptr [ebp + 0xc], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x00169f18: sal byte ptr [ebp + 0xd], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000dcaf8: sal byte ptr [ebp + 0xd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x001a479f: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00173aae: sal byte ptr [ebp + 0xf], 0xc7; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003cd97: sal byte ptr [ebp + 2], cl; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x00128971: sal byte ptr [ebp + 4], cl; ret; 
0x001818d7: sal byte ptr [ebp + 6], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00181be6: sal byte ptr [ebp + 7], cl; add esp, 8; pop ebx; ret; 
0x0003c135: sal byte ptr [ebp + 8], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0017650d: sal byte ptr [ebp + 8], cl; add esp, 0xc; ret; 
0x0012894d: sal byte ptr [ebp + 8], cl; ret; 
0x00168704: sal byte ptr [ebp + 9], 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00146bdc: sal byte ptr [ebp + 9], 0x5b; pop esi; pop edi; ret; 
0x0016c704: sal byte ptr [ebp + 9], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00060fc4: sal byte ptr [ebp + 9], 0x83; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0003c3c4: sal byte ptr [ebp + 9], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0014d484: sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x00034a7a: sal byte ptr [ebp + eax - 0x80], 0x38; add byte ptr [ebp + 0xe], dh; mov eax, edx; add esp, 0xc; ret; 
0x0016c7d0: sal byte ptr [ebp + ebp - 0x7d], 0xec; add al, 0x83; ret; 
0x00033b82: sal byte ptr [ebp + ebp - 0x7d], 0xf8; dec dword ptr [edi]; inc esp; ret; 
0x0017394c: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc33437d], cl; call dword ptr [eax - 0x73]; 
0x0016e1fc: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc8a637d], cl; call dword ptr [eax - 0x73]; 
0x000f7a9c: sal byte ptr [ebp + ebx - 0x75], 0x85; pushfd; ljmp 0x8d08:0xec83ffff; add byte ptr [edx], 0x58; stc; call dword ptr [eax + 0x53]; 
0x0009c0e9: sal byte ptr [ebp + ebx*8 - 0x7d], 0xf8; add al, 0x74; fmul dword ptr [ebp - 0x666c379]; call dword ptr [eax - 0x73]; 
0x0008e568: sal byte ptr [ebp + ecx + 0x31], 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x0008cc38: sal byte ptr [ebp + ecx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00182fa0: sal byte ptr [ebp + ecx - 0x77], 0xf8; pop ebx; pop esi; pop edi; ret; 
0x00168df2: sal byte ptr [ebp + ecx - 0x7d], 0xec; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x000eda44: sal byte ptr [ebp + ecx*8 + 0x5b], cl; ret; 
0x0016f3c8: sal byte ptr [ebp + edi - 0x7d], 0xec; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00042420: sal byte ptr [ebp + edx + 0xf], cl; mov ebp, 0x1ff083c2; add eax, 1; pop ebx; ret; 
0x00181fc8: sal byte ptr [ebp + edx*2 - 0x80], 0xfa; das; ja 0x24a04; mov eax, dword ptr [ebp - 0x38]; add eax, dword ptr [eax + edx*4 - 0x6c854]; jmp eax; 
0x0009ae4e: sal byte ptr [ebp - 0x11], 0x89; inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x000d6d2e: sal byte ptr [ebp - 0x11], cl; mov eax, ecx; pop ebx; pop esi; ret; 
0x00135b25: sal byte ptr [ebp - 0x14], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00150531: sal byte ptr [ebp - 0x14], cl; mov ebx, dword ptr [esp + 0xc]; movzx eax, byte ptr [edi]; mov ecx, dword ptr [ebx + eax*4 - 0x6e594]; add ecx, ebx; jmp ecx; 
0x00139572: sal byte ptr [ebp - 0x15], cl; call 0x137ae0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0015cf25: sal byte ptr [ebp - 0x18], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00146c26: sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x00173848: sal byte ptr [ebp - 0x1b], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x001110c7: sal byte ptr [ebp - 0x1c], 0x83; in al, dx; or al, 0x8d; xchg byte ptr [eax - 0x4e], ch; stc; call dword ptr [eax - 0x18]; 
0x000398e0: sal byte ptr [ebp - 0x23], cl; ret; 
0x00128301: sal byte ptr [ebp - 0x24], 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000345d9: sal byte ptr [ebp - 0x24], 0x89; ret; 
0x001209a6: sal byte ptr [ebp - 0x29], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00120a07: sal byte ptr [ebp - 0x2a], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x0017c516: sal byte ptr [ebp - 0x39], 0x89; ret 0x838b; 
0x000b7759: sal byte ptr [ebp - 0x3e7efff4], 1; jae 0xb7747; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001207fc: sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6a5706a], cl; call dword ptr [edx - 0x77]; 
0x000d073c: sal byte ptr [ebp - 0x42], 0x83; ret; 
0x00027f15: sal byte ptr [ebp - 0x48], 0x83; in al, dx; or al, 0x8d; test dword ptr [eax + 0x39], edi; stc; call dword ptr [edi - 1]; 
0x0015cb1d: sal byte ptr [ebp - 0x50], 0x83; in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax + 0x55]; 
0x00127ea4: sal byte ptr [ebp - 0x58], 0x83; in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x00098ce6: sal byte ptr [ebp - 0x59], 0xe9; ret 0xfffe; 
0x0012081b: sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6a56d6a], cl; call dword ptr [edx - 0x77]; 
0x000f7ab9: sal byte ptr [ebp - 0x6c], 0x83; in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000c41f0: sal byte ptr [ebp - 0x77], 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x000c3410: sal byte ptr [ebp - 0x77], 0xd8; pop ebx; pop esi; pop edi; ret; 
0x0012083a: sal byte ptr [ebp - 0x7f], 0x8d; xchg esi, eax; xchg ebp, eax; pop edx; stc; call dword ptr [eax + 0x50]; 
0x0008ae29: sal byte ptr [ebp - 0xc], 1; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0009b51b: sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x000d707b: sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x0007f2eb: sal byte ptr [ebp - 0xe], cl; ret; 
0x00133ef6: sal byte ptr [ebp - 9], 0x83; ret 0x8b18; 
0x0013cc94: sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00137144: sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x137140; mov eax, dword ptr [eax + 0x18]; ret; 
0x00123f8a: sal byte ptr [ebx + eax - 0x77], cl; inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0018b4d2: sal byte ptr [ebx + ebp*4 - 0x7d], 0xec; or byte ptr [ebx - 0x72e7dbbc], cl; xor byte ptr [esi], 0x5a; stc; call dword ptr [eax + 0x53]; 
0x00100122: sal byte ptr [ebx + ebx - 0x7d], 1; ret; 
0x0016baab: sal byte ptr [ebx + ebx*8 - 0x7d], 0xec; add al, 0x83; ret; 
0x00087222: sal byte ptr [ebx + ecx + 0x5b], 0x5e; pop edi; ret; 
0x00107390: sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0017298a: sal byte ptr [ebx + ecx - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x00059d26: sal byte ptr [ebx + edx - 0x39], 0; das; jbe 0x59cb9; ret 0x40c7; 
0x0008bbd2: sal byte ptr [ebx + edx - 0x77], 0x4c; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00168c59: sal byte ptr [ebx + edx - 0x7d], 0xec; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0002708b: sal byte ptr [ebx + edx - 0x7d], 0xec; or byte ptr [ebp - 0x210fd36d], cl; call dword ptr [edx + 0x50]; 
0x00082a66: sal byte ptr [ebx + esi*2 - 0x7d], 0xec; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0016c721: sal byte ptr [ebx - 0x7d], 0xec; or byte ptr [ebp - 0xc1eb379], cl; call dword ptr [eax - 0x73]; 
0x00121425: sal byte ptr [ecx + eax - 0x3d], 0x83; in al, dx; or al, 0x8d; sbb byte ptr [esp + esi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00129c81: sal byte ptr [ecx + ecx + 0x5e], 0x5b; jl 0x24ef0; ret; 
0x0014d18e: sal byte ptr [ecx + ecx + 0xf], 0x9f; ret; 
0x00042750: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xe8; mov eax, edx; ret; 
0x000427f0: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xf0; mov eax, edx; ret; 
0x000423d5: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x001708b8: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x0015cbe4: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x00169a08: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x00172a04: sal byte ptr [ecx + ecx - 0x7d], 1; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00086ca5: sal byte ptr [ecx + ecx*4 - 0x7d], 0xec; or byte ptr [ebx - 0x72f3dba4], cl; add dword ptr [ecx], 0x4f; stc; call dword ptr [eax - 0x75]; 
0x0008dffc: sal byte ptr [ecx + edi + 0x31], cl; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00099044: sal byte ptr [ecx + edi - 0x73], 0x45; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0005fc23: sal byte ptr [ecx + edi - 0x7d], 0xec; add al, 0x6a; add eax, 0x34838d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x000f7924: sal byte ptr [ecx + edi - 0x7d], 0xec; or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x00098a3c: sal byte ptr [ecx + edx + 0x31], 0xc0; add esp, 8; pop ebx; ret; 
0x000a955c: sal byte ptr [ecx + edx + 0x39], 0xc8; jne 0xa9550; mov eax, edx; pop ebx; ret; 
0x0017fabc: sal byte ptr [ecx + edx - 0x77], 0x54; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0015d472: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x180100; mov dword ptr [esp], ebp; call edi; 
0x0015d661: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x180100; mov dword ptr [esp], ebp; call esi; 
0x0015d810: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x53; call 0x180100; mov dword ptr [esp], ebp; call ebx; 
0x0002fba4: sal byte ptr [ecx + edx - 0x7d], 0xf8; add esi, dword ptr [esp + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x00172b04: sal byte ptr [ecx + edx - 0x7d], 1; les eax, ptr [eax + 0x90]; pop ebx; pop esi; ret; 
0x00172b94: sal byte ptr [ecx + edx - 0x7d], 1; les eax, ptr [eax + 0x94]; pop ebx; pop esi; ret; 
0x0008f48d: sal byte ptr [ecx], 1; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x001382e5: sal byte ptr [ecx], 1; sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x0008c9bd: sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x0003d72d: sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x0004206f: sal byte ptr [ecx], cl; fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0012a9c6: sal byte ptr [edi + ebp - 0x75], cl; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00033286: sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x67bd37b], cl; call dword ptr [eax + 0x56]; 
0x0008bcbe: sal byte ptr [edi + ecx - 0x77], 0x4c; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x00148d3d: sal byte ptr [edi + edi - 0x7d], 0xec; add al, 0x89; ret; 
0x000d6e96: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0007ab4e: sal byte ptr [edi + edx - 0x7d], 0xec; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0009eb46: sal byte ptr [edi + esi*4 + 0x39], cl; ret 0xb374; 
0x0017f937: sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x00123f91: sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0014989d: sal byte ptr [edx + eax*2 - 0x7d], 0xec; or al, 0x89; ret; 
0x0005ace3: sal byte ptr [edx + ebp - 0x75], 0x5d; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0012b253: sal byte ptr [edx + ebx - 0x75], 0x74; and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0016bada: sal byte ptr [edx + ebx - 0x7d], 0xec; add al, 0x83; ret; 
0x0016e30d: sal byte ptr [edx + ebx - 0x7d], 0xec; or al, 0x83; ret 0x5208; 
0x000e4b47: sal byte ptr [edx + ebx - 0x7d], 0xec; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x00042547: sal byte ptr [edx + ecx + 0xf], 0xb6; sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x000425e8: sal byte ptr [edx + ecx + 0xf], 0xb7; sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x0008cb53: sal byte ptr [edx + ecx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0007c4a3: sal byte ptr [edx + ecx - 0x77], 0xf8; pop ebx; pop esi; pop edi; ret; 
0x00033aac: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 4; call edx; 
0x0016c6b3: sal byte ptr [edx + ecx - 0x7d], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00146043: sal byte ptr [edx + ecx - 0x7d], cl; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x001524db: sal byte ptr [edx + edi - 0x73], 0xb2; nop; ret; 
0x0016ae43: sal byte ptr [edx + edi - 0x7d], 0xec; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0009623c: sal byte ptr [edx + edx - 0x7d], 0xec; or al, 0xff; jae 0x96249; call dword ptr [ebx]; 
0x0013cd35: sal byte ptr [edx + esi + 0x39], cl; ret 0x1f72; 
0x0008ec13: sal byte ptr [edx + esi - 0x75], cl; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0009e0f3: sal byte ptr [edx + esi*2 - 0x75], 0x4c; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0014c077: sal byte ptr [edx + esi*2 - 0x7d], cl; ret 0x8901; 
0x0012c5a0: sal byte ptr [edx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x649ef79], cl; call dword ptr [eax + 0x55]; 
0x0004282a: sal byte ptr [esi + eax + 0xf], cl; mov ebp, 0x1ff083c2; ret; 
0x00026054: sal byte ptr [esi + ebp*8 - 0x73], cl; nop; in al, dx; jg 0x26055; call dword ptr [edx - 0x73]; 
0x001452c7: sal byte ptr [esi + ebx*2 + 0x38], cl; ret 0x5a75; 
0x00120ed7: sal byte ptr [esi + ecx + 0x39], cl; sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00124e77: sal byte ptr [esi + ecx + 0x5b], 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0010737b: sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000bf447: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x00174056: sal byte ptr [esi + esi - 0x7d], 0xec; or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0016874e: sal byte ptr [esi + esi*4 - 0x7d], 0xec; or byte ptr [ebp - 0xc1eb379], cl; call dword ptr [eax - 0x73]; 
0x000fa81a: sal byte ptr [esi - 0x7d], 0xec; or byte ptr [ebp - 0x6b0bf7d], cl; call dword ptr [eax + 0x55]; 
0x000a93b8: sal byte ptr [esp + eax + 0x39], 0xd8; jne 0xa93b0; mov eax, edx; pop ebx; ret; 
0x000c00ad: sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00128949: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x128958; ret; 
0x0012896d: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x128978; ret; 
0x00142436: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x89; ret; 
0x000e4b11: sal byte ptr [esp + ebp - 0x7d], 0xec; or byte ptr [esi + 0x53], dl; call eax; 
0x00135fe1: sal byte ptr [esp + ebx + 0x50], 0x8d; adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax + 0x6a]; 
0x001a5261: sal byte ptr [esp + ecx - 0x58], 1; jne 0x1a5280; lea eax, [ecx + 4]; ret; 
0x0008d5a1: sal byte ptr [esp + edi - 0x48], 0xf0; add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089f77: sal byte ptr [esp + edx - 0x39], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x000961c9: sal byte ptr [esp + edx - 0x7d], cl; cli; add dword ptr [ebp + 0x1f], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000dbed9: sal byte ptr [esp + esi*2 - 0x75], 0x5c; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x001699e5: sal byte ptr [esp - 0x7d], 0xec; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00135fb1: sal byte ptr [esp - 0x7d], 0xec; or byte ptr [ebx - 1], dl; jae 0x135feb; call eax; 
0x000b59cc: sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x000a6e8d: sal dh, cl; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009d48e: sal dh, cl; rol dword ptr [eax + 0x75], 0x24; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0013c429: sal dword ptr [eax + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x000be180: sal dword ptr [ebp + 0x7e], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c258b: sal dword ptr [ebp + 0xc], 1; ret; 
0x00046b73: sal dword ptr [ebp - 0x16], 0x83; ret 0x8b01; 
0x00054e2a: sal dword ptr [ebp - 0xd], 0x8b; push ebp; or al, 0xf7; ret 0; 
0x00120edb: sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0009bbc9: sal dword ptr [ebp - 8], cl; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000be2c2: sal dword ptr [ebx + 0x300107d], 0xc; cdq; jmp ecx; 
0x0014b7b7: sal dword ptr [ebx + 0x3f], 0x39; ret; 
0x0013cd58: sal dword ptr [ebx + 0xf], 0x5b; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0009b514: sal dword ptr [ebx + ebp*8 - 0x75], cl; inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x000b775e: sal dword ptr [ebx - 0x1a], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000a7c89: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x000bae01: sal dword ptr [ecx + esi*4 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0003b85a: sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x0013034f: sal dword ptr [ecx], cl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x000b8e7a: sal dword ptr [edi + 0x30010d0], 0xc; cdq; jmp ecx; 
0x001500b2: sal dword ptr [edi + 0x5fb6db6d], 0x5d; ret; 
0x000baec3: sal dword ptr [edx + 0x30010b0], 0xc; xchg ecx, eax; jmp ecx; 
0x0012b6fb: sal dword ptr [edx - 0x75], 0x5c; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0007fe79: sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000be1c3: sal dword ptr [edx], 0x7e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000506bb: sal dword ptr [esi], 0xfe; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax - 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x00090f01: sal dword ptr [esp + eax], 0; call dword ptr gs:[0x10]; 
0x000bae80: sal ebp, 0xb0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bfdd9: sal ebx, 0xa4; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00124581: sal ebx, 0xff; add esp, 0x10; add esp, 0xc; ret; 
0x00124552: sal ebx, 0xff; add esp, 0x1c; ret; 
0x000bfefa: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00108d70: sal ecx, 0xff; ret; 
0x00092193: salc; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x6c], ebp; stc; call dword ptr [eax - 0x18]; 
0x001a5156: salc; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x00040ebe: salc; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x0018f83e: salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00029638: salc; add eax, dword ptr [eax]; add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x00127e7e: salc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00046457: salc; and esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x00046464: salc; and esi, ecx; mov eax, esi; pop esi; pop edi; ret; 
0x0006d618: salc; clc; dec dword ptr [ebp + 0x64450184]; jecxz 0x6d621; jmp eax; 
0x00026b04: salc; cmp al, 0x89; ret; 
0x0018c4c5: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019119f: salc; inc edx; clc; mov eax, edx; pop ebx; ret; 
0x0018c535: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018f24f: salc; inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0008f141: salc; jae 0x8f180; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0008c13b: salc; jmp esi; 
0x00160e2c: salc; jno 0x160e28; call dword ptr [eax - 0x18]; 
0x00093e84: salc; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000bfde0: salc; mov eax, dword ptr [esp + 4]; ret; 
0x000bfe60: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000bfe36: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00120a09: salc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0010f71a: salc; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x0007626e: salc; ret; 
0x000a48b1: salc; sub esp, 0xc; push eax; call edx; 
0x0012f618: sar ah, 0xff; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00065827: sar al, cl; inc dword ptr [ecx]; stc; jmp ecx; 
0x0019fcbb: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0006c7ec: sar bh, 1; dec dword ptr [ebx - 0x58f7b]; dec dword ptr [ebx + 0xa4b8]; add byte ptr [ebx - 0x5cf7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00126136: sar bh, 1; je 0x12615e; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x00025eec: sar bh, cl; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001831e4: sar byte ptr [0x593], 1; ja 0x1833e0; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x001848b7: sar byte ptr [0x593], 1; ja 0x1848d0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0007a469: sar byte ptr [0x593], 1; ja 0x7a560; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007d191: sar byte ptr [0x593], 1; ja 0x7d231; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007f607: sar byte ptr [0x593], 1; ja 0x7f640; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007fda9: sar byte ptr [0x593], 1; ja 0x7fde0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00085d2b: sar byte ptr [0x593], 1; ja 0x85d58; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0008687e: sar byte ptr [0x593], 1; ja 0x869b0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00086a14: sar byte ptr [0x593], 1; ja 0x86a60; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00089949: sar byte ptr [0x593], 1; ja 0x899b0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000899f7: sar byte ptr [0x593], 1; ja 0x89a20; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008a1bc: sar byte ptr [0x593], 1; ja 0x8a200; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000dc0d4: sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x001280f7: sar byte ptr [eax + 0x16], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x00109f14: sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001210c0: sar byte ptr [eax + 0x2c], 0x83; in al, dx; add al, 0x89; ret; 
0x000fd3a0: sar byte ptr [eax + 0x2d], 0x8b; push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x0008839f: sar byte ptr [eax + 0x2e], 0x29; ret; 
0x00083f9d: sar byte ptr [eax + 0x30], 1; ret; 
0x00060d37: sar byte ptr [eax + 0x36], 0x83; in al, dx; or byte ptr [ebp - 0x6bd527a], cl; call dword ptr [eax + 0x53]; 
0x00144ef6: sar byte ptr [eax + 0x37], 0x83; in al, dx; add al, 0x89; ret; 
0x00060e1a: sar byte ptr [eax + 0x3b], 0x83; in al, dx; or byte ptr [ebp - 0x6bd527a], cl; call dword ptr [eax + 0x53]; 
0x0013afac: sar byte ptr [eax + 0x6d], 0x89; ret; 
0x000920ee: sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007bb65: sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0007e42b: sar byte ptr [eax + 0xb], 0x83; ret 0x8304; 
0x00150f31: sar byte ptr [eax + 0xc], 0x83; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0012cf21: sar byte ptr [eax + 0xc], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00098060: sar byte ptr [eax + 0xd], 0x89; xor ah, 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x00185470: sar byte ptr [eax + 0xd], 0x8b; push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e5de2: sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x000958c4: sar byte ptr [eax + 0xf0], cl; mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009d113: sar byte ptr [eax + 1], cl; call 0x9d080; mov dword ptr [esp], esi; call ebx; 
0x000c18a3: sar byte ptr [eax + eax], 1; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00170a97: sar byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017d471: sar byte ptr [eax], 0xf; inc esp; ret; 
0x00172b3a: sar byte ptr [eax], cl; bnd jmp dword ptr [ebp - 0x75]; 
0x000ac42b: sar byte ptr [eax], cl; pop ecx; add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x000eb3b7: sar byte ptr [eax], cl; ret; 
0x000be2a6: sar byte ptr [ebp + 0x10], 1; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00023268: sar byte ptr [ebx + 1], cl; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x001a50a4: sar byte ptr [ebx], 0x4a; cld; jne 0x1a50b0; pop ebx; ret; 
0x0008c9bf: sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x00082406: sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x001843c8: sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0xd008; 
0x00101958: sar byte ptr [ebx], 0xb4; and al, 4; add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x0009d28c: sar byte ptr [ebx], 1; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00079f53: sar byte ptr [ebx], 1; mov cl, 0x68; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00079f5e: sar byte ptr [ebx], 1; mov cl, 0x98; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00079f48: sar byte ptr [ebx], 1; mov cl, 0xe8; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x000e4b61: sar byte ptr [ecx + 0x64], cl; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00124618: sar byte ptr [ecx + 3], 0xc6; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0009368e: sar byte ptr [ecx + 7], cl; xor esi, esi; call dword ptr gs:[0x10]; 
0x001563b8: sar byte ptr [ecx], 0xd1; setne al; ret; 
0x000426e8: sar byte ptr [ecx], 1; ret 0x920f; 
0x000426d9: sar byte ptr [ecx], 1; ret 0x9e0f; 
0x000e059a: sar byte ptr [ecx], 1; ret; 
0x000c48fb: sar byte ptr [ecx], 1; ror byte ptr [edi], 1; inc edx; ret 0xd9f7; 
0x000be219: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x182d2d; add ecx, 0x107e51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8279: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x182d2d; add ecx, 0x10dc1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c39: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x182d2d; add ecx, 0x10f0fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be256: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x182d2d; add ecx, 0x107e14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82b6: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x182d2d; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c76: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x182d2d; add ecx, 0x10f0c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be26d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x182d2d; add ecx, 0x107dfd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c8d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x182d2d; add ecx, 0x10f0a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007720f: sar byte ptr [ecx], cl; ret 0xe75; 
0x000498e2: sar byte ptr [edi], cl; stc; call dword ptr [eax - 0x18]; 
0x00042960: sar byte ptr [edx + 0x10], cl; cmove eax, edx; ret; 
0x00096213: sar byte ptr [edx + 0x200], 0xf; inc esp; ret 0x118b; 
0x000428dd: sar byte ptr [edx + 0x20], cl; cmove eax, edx; ret; 
0x000428bf: sar byte ptr [edx + 8], cl; cmove eax, edx; ret; 
0x000a63ea: sar byte ptr [edx - 1], 0x5b; cmove eax, edx; add eax, 1; ret; 
0x0008e24c: sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x0017a6a3: sar byte ptr [esi + 0x4a], 1; ret; 
0x00140cf2: sar byte ptr [esi + 5], 0x80; cmp ebp, dword ptr [esi]; je 0x140d00; add esp, 8; pop ebx; ret; 
0x00091a7c: sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x00109f7c: sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x000463b6: sar ch, 1; jmp dword ptr [esi - 0x70]; 
0x00046176: sar ch, cl; jmp dword ptr [esi - 0x70]; 
0x000c65b4: sar cl, 1; call dword ptr [eax + 0x53]; 
0x000c6236: sar cl, 1; call dword ptr [eax + 0x56]; 
0x0011fd8e: sar cl, cl; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00196c6f: sar dh, 0xff; add ebx, 0x3e51e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00109e3f: sar dh, 0xff; call dword ptr [ebx - 0x18]; 
0x000832aa: sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00046d42: sar dh, 1; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x00195c69: sar dh, 1; inc dword ptr [ecx + 0x3f424c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195cb6: sar dh, 1; inc dword ptr [ecx + 0x3f497c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00195a5b: sar dh, cl; inc dword ptr [ecx + 0x3f472c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00072200: sar dl, 0xff; dec dword ptr [ecx - 0x4f74b]; call dword ptr [esi - 1]; 
0x00128fc9: sar dword ptr [0xfffff000], 0x77; pop es; mov eax, ecx; pop ebx; ret; 
0x0003c3f7: sar dword ptr [0xfffff001], cl; jae 0x24ef0; ret; 
0x0008fbd1: sar dword ptr [eax + 0xf0], 1; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00042073: sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000b6cc5: sar dword ptr [eax + esi*8 + 0x10], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8266: sar dword ptr [ebx + 0x30010db], 0xc; xchg ecx, eax; jmp ecx; 
0x000e4ff9: sar dword ptr [ecx - 6], cl; dec dword ptr [ebx - 0x76abdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000b8322: sar dword ptr [edi - 0x25], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6b42: sar dword ptr [edi - 0xf], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6d02: sar dword ptr [edi], 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be13b: sar dword ptr [edx + 0x300107e], 0xc; xchg ecx, eax; jmp ecx; 
0x000bae3b: sar dword ptr [edx], 0xb1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8367: sar dword ptr [edx], 0xdb; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000399aa: sar dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x0009604a: sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009608a: sar eax, 0x1e; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011b553: sar eax, 0x1f; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003bc0b: sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0003b916: sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00189551: sar eax, 0x1f; ret; 
0x0003b5a7: sar eax, 0x1f; sub ecx, edx; not eax; and eax, ecx; ret; 
0x0008cb9d: sar eax, 1; and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008d4e5: sar eax, 1; and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0008e6cb: sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f8a4d: sar eax, 1; pop edi; pop ebp; ret; 
0x0008e70b: sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0007e49b: sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x00080525: sar eax, 2; ret; 
0x000bf340: sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x00137bc9: sar eax, 5; add esp, 0xc; ret; 
0x00182db9: sar eax, 5; and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00182d5a: sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x00182d89: sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x000be278: sar ebp, 0x7d; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c44: sar ebp, 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82a6: sar ebx, 0xdb; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007fe8a: sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0003cc0f: sar ebx, 5; rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0003cbaf: sar ebx, 5; shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x000781cb: sar ecx, 0xff; inc dword ptr [ebx + 0x57530cc4]; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00120207: sar ecx, 1; call dword ptr [eax - 0x18]; 
0x0006e475: sar ecx, 1; inc dword ptr [ebx - 0x71f0fa05]; ret 0xfff2; 
0x0004d693: sar ecx, 1; jmp dword ptr [ebp - 0x39]; 
0x00126451: sar ecx, 1; jmp dword ptr [ecx]; 
0x00199c55: sar ecx, 1; jmp dword ptr [esi + 0xf]; 
0x0003cc65: sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0019fbfb: sar edi, 0xff; jmp dword ptr [esi + 0xf]; 
0x0009b026: sar edi, 1; inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x000c09d5: sar edi, 1; loope 0xc0a07; lea esi, [esi]; mov eax, dword ptr [edx + 0x108]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0016e319: sar edi, cl; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0003b91b: sar edx, 0x1e; and eax, edx; ret; 
0x0011befa: sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0007ff1b: sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x001484ab: sar esi, 0xff; call dword ptr [eax - 0x48]; call ptr [ebx + 0x5e]; ret; 
0x0009bafa: sar esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x0016bd09: sar esp, 1; jmp dword ptr [esi - 0x70]; 
0x0013e62a: sbb ah, 0x3c; stc; call dword ptr [eax + 0x55]; 
0x0013f11c: sbb ah, 0x3c; stc; call dword ptr [eax + 0x56]; 
0x00137780: sbb ah, 0x3c; stc; call dword ptr [eax - 0x73]; 
0x000a9c53: sbb ah, 0x52; idiv bh; and ch, 2; lea edx, [edx - 0x1776d4]; cmove eax, edx; ret; 
0x00120531: sbb ah, 0xb3; stc; call dword ptr [eax - 0x73]; 
0x000c0a47: sbb ah, 1; add byte ptr [eax], al; ret; 
0x0009884e: sbb ah, dh; call dword ptr [eax - 0x73]; 
0x001401f2: sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x0002aae8: sbb al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x72cbdbbc], cl; inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x0019ccae: sbb al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c21e2: sbb al, 0; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x00072e36: sbb al, 0; add byte ptr [ecx], al; ret; 
0x00026f79: sbb al, 0x24; call edi; 
0x0002602a: sbb al, 0x24; call esi; 
0x0003bd10: sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0003bcc1: sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000d7cce: sbb al, 0x24; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003ba90: sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x0008f5b1: sbb al, 0x24; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f57d: sbb al, 0x24; mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0014d8f7: sbb al, 0x24; mov ebx, edi; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x000261a1: sbb al, 0x24; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000903d4: sbb al, 0x24; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0002684b: sbb al, 0x24; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x000fbe1b: sbb al, 0x24; movzx eax, al; add ebx, dword ptr [ebx + eax*4 - 0x6f8bc]; jmp ebx; 
0x00182d1a: sbb al, 0x24; ret; 
0x00060a11: sbb al, 0x24; sub esp, 8; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0013200a: sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x000641b6: sbb al, 0x29; ret 0xb8; 
0x00131bec: sbb al, 0x29; ret 0xca39; 
0x0006d746: sbb al, 0x29; ret; 
0x001567d2: sbb al, 0x31; dec dword ptr [ebx + 0x392c244c]; ret; 
0x0018370f: sbb al, 0x31; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0010f847: sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x10f7d4; ret; 
0x000251bd: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000917b9: sbb al, 0x31; ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eba77: sbb al, 0x31; shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x000d6bf2: sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0014c15f: sbb al, 0x39; ret 0x1674; 
0x000f907b: sbb al, 0x39; ret 0x4e0f; 
0x000e5241: sbb al, 0x39; ret 0x8d0f; 
0x0016cef5: sbb al, 0x39; ret 0x930f; 
0x0006161a: sbb al, 0x39; ret; 
0x0009f265: sbb al, 0x3c; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000be80d: sbb al, 0x45; or al, 0; add ecx, 0x107863; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00042223: sbb al, 0x50; call 0x1a5bd0; add esp, 0x18; pop ebx; ret; 
0x0005fcfe: sbb al, 0x50; call 0x7b510; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0012449b: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x10; add esp, 0xc; ret; 
0x000a98f7: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0xbfec0; add esp, 0x18; pop ebx; ret; 
0x00169066: sbb al, 0x52; lea edx, [esi - 0xcdb44]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x0016918f: sbb al, 0x52; lea edx, [esi - 0xcdb44]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x00173548: sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0016ae4f: sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016ae99: sbb al, 0x53; call dword ptr [eax]; 
0x0017347c: sbb al, 0x53; call eax; 
0x001688d7: sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00098fb0: sbb al, 0x5b; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0007e45e: sbb al, 0x5b; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x00030539: sbb al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00171bc4: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0009d4ab: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; ret; 
0x00038280: sbb al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00033369: sbb al, 0x5b; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0007c9f0: sbb al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x0002518e: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000ad34c: sbb al, 0x5b; pop esi; ret; 
0x0008878b: sbb al, 0x5b; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0007e499: sbb al, 0x5b; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x000a6524: sbb al, 0x5e; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000b8c1a: sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0008cb02: sbb al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x0008cbc2: sbb al, 0x65; mov dword ptr [0x7c], edx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8cbd8; ret; 
0x0008cae9: sbb al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00174efa: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x174f08; add esp, 0x2c; ret; 
0x00085b7a: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x85b98; add esp, 0x28; pop ebx; ret; 
0x000d8f16: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0xd8f25; add esp, 0x28; pop ebx; ret; 
0x00108c5f: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x108caa; add esp, 0x28; pop ebx; ret; 
0x00108cf2: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x108d42; add esp, 0x28; pop ebx; ret; 
0x00108f4f: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x108f9a; add esp, 0x28; pop ebx; ret; 
0x00126fe2: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x127032; add esp, 0x28; pop ebx; ret; 
0x00127082: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1270d2; add esp, 0x28; pop ebx; ret; 
0x0012ca68: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12ca92; add esp, 0x28; pop ebx; ret; 
0x0012dd28: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12dd52; add esp, 0x28; pop ebx; ret; 
0x001387cd: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x0013996d: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x001499ce: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1499df; movzx eax, ax; add esp, 0x2c; ret; 
0x0014df5e: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x14df6d; add esp, 0x28; pop ebx; ret; 
0x00168e93: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x168ea2; add esp, 0x28; pop ebx; ret; 
0x00171d46: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x171d5f; add esp, 0x28; pop ebx; ret; 
0x00171de6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x171dff; add esp, 0x28; pop ebx; ret; 
0x001800b5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1800c4; add esp, 0x28; pop ebx; ret; 
0x0018b9e3: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0003c9a8: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x3c9ec; add esp, 0x28; pop ebx; ret; 
0x00040232: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x000527e2: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x00090985: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x00095381: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x95390; add esp, 0x28; pop ebx; ret; 
0x0009541f: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9542e; add esp, 0x28; pop ebx; ret; 
0x000966b5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b15: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x00097041: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x00097491: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x0009a41c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a688: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9a6b7; add esp, 0x2c; ret; 
0x0009c55e: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9c56d; add esp, 0x28; pop ebx; ret; 
0x0009dab6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9dac5; add esp, 0x28; pop ebx; ret; 
0x000d7b72: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xd7b8f; add esp, 0x28; pop ebx; ret; 
0x000d917b: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xd91c2; add esp, 0x28; pop ebx; ret; 
0x000e48de: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xe491a; add esp, 0x28; pop ebx; ret; 
0x000e4acc: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xe4adb; add esp, 0x28; pop ebx; ret; 
0x0013563a: sbb al, 0x66; stc; call dword ptr [eax + 0x50]; 
0x00137329: sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x00033158: sbb al, 0x73; adc ecx, dword ptr [ebx + 0x5b208354]; mov eax, edx; ret; 
0x0015348c: sbb al, 0x77; int1; call dword ptr [eax - 0x73]; 
0x000a9ca2: sbb al, 0x7a; call 0xc24eaca8; ret; 
0x00161ecc: sbb al, 0x7c; int1; call dword ptr [eax - 0x73]; 
0x00182d8d: sbb al, 0x82; xor eax, eax; pop ebx; ret; 
0x00162aeb: sbb al, 0x83; clc; dec dword ptr [edi]; test byte ptr [esi + edi*8 - 1], bh; call dword ptr [eax - 0x73]; 
0x0013693e: sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x00040927: sbb al, 0x83; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x0014ab8b: sbb al, 0x83; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x000dc347: sbb al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00175466: sbb al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x00029e57: sbb al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0011330e: sbb al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x001320c0: sbb al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002b085: sbb al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0012a61d: sbb al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0011b701: sbb al, 0x83; les esi, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0008c292: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000d95d1: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00078543: sbb al, 0x83; ljmp 0xc483:0x4518901; adc al, 0x5b; pop esi; ret; 
0x00157117: sbb al, 0x83; ret 0x8301; 
0x001587f2: sbb al, 0x83; ret 0x8501; 
0x001248e3: sbb al, 0x83; ret 0x8801; 
0x0013c85e: sbb al, 0x83; ret 0x8802; 
0x0002a2de: sbb al, 0x83; ret; 
0x000fb7e9: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x000fb969: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x000aa35f: sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x001563d0: sbb al, 0x83; ror byte ptr [eax], 0x50; call 0xbfaa0; add esp, 0x1c; ret; 
0x00031ad2: sbb al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x0008b57b: sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x001479e7: sbb al, 0x85; ror byte ptr [edi], 0x85; clc; add byte ptr [eax], al; add byte ptr [eax - 0x162676ed], cl; ret 0xfffb; 
0x00063d09: sbb al, 0x85; ror byte ptr [edi], 0x85; ret 3; 
0x00044dbe: sbb al, 0x85; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc220; 
0x001708b6: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00168674: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x00169a06: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x000dbed7: sbb al, 0x85; sal byte ptr [esp + esi*2 - 0x75], 0x5c; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0013a701: sbb al, 0x86; add al, 0; add eax, 0xfc70f; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x00046d28: sbb al, 0x88; stc; call dword ptr [eax + 0x68]; 
0x00049820: sbb al, 0x88; stc; call dword ptr [eax - 0x73]; 
0x0009e3c8: sbb al, 0x89; add al, 0x24; call esi; 
0x00034ba0: sbb al, 0x89; call 0x5d62aa02; ret; 
0x0003d8d2: sbb al, 0x89; call 0x5d633734; ret; 
0x0007e30c: sbb al, 0x89; call 0x5d67416e; ret; 
0x00096768: sbb al, 0x89; call 0x5d68c5ca; ret; 
0x000970f5: sbb al, 0x89; call 0x5d68cf57; ret; 
0x00097840: sbb al, 0x89; call 0x5d68d6a2; ret; 
0x0009f50b: sbb al, 0x89; call 0x5d69536d; ret; 
0x0009f58e: sbb al, 0x89; call 0x5d6953f0; ret; 
0x000a22f1: sbb al, 0x89; call 0x5d698153; ret; 
0x0010b45b: sbb al, 0x89; call 0x5d7012bd; ret; 
0x0014f930: sbb al, 0x89; call 0x5d745792; ret; 
0x00151974: sbb al, 0x89; call 0x5d7477d6; ret; 
0x001640d0: sbb al, 0x89; call 0x5d759f32; ret; 
0x00166de0: sbb al, 0x89; call 0x5d75cc42; ret; 
0x001677e0: sbb al, 0x89; call 0x5d75d642; ret; 
0x00167a70: sbb al, 0x89; call 0x5d75d8d2; ret; 
0x00185349: sbb al, 0x89; call 0x5d77b1ab; ret; 
0x000e523e: sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000380ac: sbb al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000a9749: sbb al, 0x89; inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0003009a: sbb al, 0x89; lds ecx, ptr [ecx + 0xbe8243c]; mov es, word ptr [edi]; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00035a39: sbb al, 0x89; loope 0x359c6; ret; 
0x00032b3e: sbb al, 0x89; out 0x89, al; ret 0x25; 
0x00132f05: sbb al, 0x89; out 0x89, al; ret; 
0x000f9f67: sbb al, 0x89; pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038a1a: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000351f7: sbb al, 0x89; ret 0x25; 
0x000807d3: sbb al, 0x89; ret 0x4489; 
0x001799cc: sbb al, 0x89; ret 0x448b; 
0x001356f3: sbb al, 0x89; ret 0x572b; 
0x000a6c5b: sbb al, 0x89; ret 0x98eb; 
0x0002bac7: sbb al, 0x89; ret 0xb60f; 
0x0009d1e7: sbb al, 0x89; ret 0xc031; 
0x00106b2b: sbb al, 0x89; ret 0xc085; 
0x0005934d: sbb al, 0x89; ret 0xc801; 
0x0007f386: sbb al, 0x89; ret 0xc883; 
0x001353ad: sbb al, 0x89; ret 0xc985; 
0x001076e8: sbb al, 0x89; ret 0xeac0; 
0x000620a2: sbb al, 0x89; ret; 
0x00143492: sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0003d616: sbb al, 0x89; xlatb; xor edx, edx; mov ecx, edi; mov eax, esi; call dword ptr gs:[0x10]; 
0x000e7091: sbb al, 0x89; xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000bfade: sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0018c04c: sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000a94db: sbb al, 0x8b; jl 0xa9503; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x0018da46: sbb al, 0x8b; jmp ebx; 
0x000e7bbb: sbb al, 0x8b; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001271f7: sbb al, 0x8b; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0014bb6f: sbb al, 0x8b; push edx; or byte ptr [ecx], bh; ret 0x460f; 
0x000dbd4f: sbb al, 0x8b; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4ef: sbb al, 0x8b; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00112350: sbb al, 0x8b; test byte ptr [eax + edx], ah; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00121e61: sbb al, 0x8b; xchg byte ptr [eax - 0x7affffbb], dl; ror byte ptr [edi], 0x84; ret; 
0x00159ab1: sbb al, 0x8d; adc byte ptr [eax - 0x5f], 0; add byte ptr [eax - 0x18], dl; ret 0xf33a; 
0x0015cb26: sbb al, 0x8d; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax + 0x55]; 
0x000c20a0: sbb al, 0x8d; add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x0005ad33: sbb al, 0x8d; mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x0009433d: sbb al, 0x8d; or esp, 0xffffff96; stc; call dword ptr [eax - 0x73]; 
0x0009f088: sbb al, 0x8d; push ebx; or dh, dh; ret 0xf0f; 
0x0016ae36: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0016ae71: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000cb0f6: sbb al, 0x8d; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x000d88ce: sbb al, 0x8d; test byte ptr [esp + eax], ah; add dword ptr [eax], eax; add byte ptr [ecx + 0x50342444], cl; mov eax, dword ptr [esp + 0x78]; call eax; 
0x0003f476: sbb al, 0x8d; test esp, ebx; cmp al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00159ad4: sbb al, 0x8d; xchg byte ptr [edi + 0x6f], ah; stc; call dword ptr [eax - 0x18]; 
0x000c412c: sbb al, 0x8d; xchg dword ptr [eax], eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c44bb: sbb al, 0x8d; xchg dword ptr [eax], edx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c1d64: sbb al, 0x8d; xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000f8723: sbb al, 0x8e; je 0xf8738; pop ebx; pop esi; ret; 
0x00077f3d: sbb al, 0x8f; stc; call dword ptr [eax - 0x73]; 
0x00081245: sbb al, 0x93; stc; call dword ptr [eax - 0x73]; 
0x00095f8c: sbb al, 0x97; stc; call dword ptr [eax - 0x18]; 
0x0009c103: sbb al, 0x99; stc; call dword ptr [eax - 0x18]; 
0x00039e60: sbb al, 0xa8; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x000a03ea: sbb al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x000c79ff: sbb al, 0xad; stc; call dword ptr [eax - 0x73]; 
0x0012142e: sbb al, 0xb4; stc; call dword ptr [eax - 0x73]; 
0x0012aa79: sbb al, 0xb8; mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00134e43: sbb al, 0xb8; stc; call dword ptr [edx + 0x50]; 
0x0012a81c: sbb al, 0xb8; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00139e07: sbb al, 0xba; stc; call dword ptr [eax - 0x73]; 
0x0018daab: sbb al, 0xbb; jmp ebx; 
0x0013cb27: sbb al, 0xbb; stc; call dword ptr [eax - 0x73]; 
0x0014a17a: sbb al, 0xbf; stc; call dword ptr [eax - 0x18]; 
0x00189550: sbb al, 0xc1; clc; pop ds; ret; 
0x0011bef9: sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0014d421: sbb al, 0xc1; stc; call dword ptr [eax - 0x73]; 
0x0015730e: sbb al, 0xc4; stc; call dword ptr [eax - 0x18]; 
0x00132629: sbb al, 0xc6; add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00132615: sbb al, 0xc6; add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000e492f: sbb al, 0xdd; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001388ca: sbb al, 0xde; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00034501: sbb al, 0xe8; adc al, 0; add eax, 0x20290f; mov eax, dword ptr [eax + 0x94]; add eax, dword ptr gs:[0]; ret; 
0x0012b938: sbb al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00033109: sbb al, 0xe8; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003ff57: sbb al, 0xe8; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a9936: sbb al, 0xe8; add al, 0x6b; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0009a878: sbb al, 0xe8; add bh, byte ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x00106b20: sbb al, 0xe8; add dh, 0xf1; inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x00124855: sbb al, 0xe8; add eax, 0x83000007; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000a99e6: sbb al, 0xe8; and al, 0x65; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00139a07: sbb al, 0xe8; and dword ptr [ebx - 8], 0xffffffff; add esp, 0x18; pop ebx; ret; 
0x0013c5b2: sbb al, 0xe8; call 0x8413b424; les ebx, ptr [eax]; pop ebx; ret; 
0x0012444e: sbb al, 0xe8; cld; ret 0xfff3; 
0x0005a4a0: sbb al, 0xe8; cli; scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00139050: sbb al, 0xe8; cmp ch, byte ptr [ebp - 8]; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000c4b01: sbb al, 0xe8; cmp dword ptr [ecx], ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008459d: sbb al, 0xe8; cmp eax, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x0009ff79: sbb al, 0xe8; inc ecx; push 0xc4830008; adc byte ptr [ebx + 0x974fff8], al; add esp, 0xc; ret; 
0x0010cf5b: sbb al, 0xe8; jmp edx; 
0x000463e1: sbb al, 0xe8; jns 0x463ee; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003d94a: sbb al, 0xe8; jo 0x3d941; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00059fc0: sbb al, 0xe8; jp 0x59fdb; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00061090: sbb al, 0xe8; jp 0x610d3; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00065320: sbb al, 0xe8; jp 0x65324; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000715a0: sbb al, 0xe8; jp 0x715a4; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00106dfb: sbb al, 0xe8; lahf; ret; 
0x000cac40: sbb al, 0xe8; lcall 0x1cc4, 0x83ffffd9; ret; 
0x00106dd1: sbb al, 0xe8; leave; ret; 
0x0005a2b0: sbb al, 0xe8; ljmp 0x1cc4:0x830000b0; ret; 
0x0004cb70: sbb al, 0xe8; ljmp 0x1cc4:0x83ffffd6; ret; 
0x000a989a: sbb al, 0xe8; lock add dword ptr fs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x000a99ba: sbb al, 0xe8; mov al, 0x3f; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000a5f18: sbb al, 0xe8; mov byte ptr [0x8300019f], al; les ebx, ptr [eax]; pop ebx; ret; 
0x001200b8: sbb al, 0xe8; mov byte ptr [0x83fffffe], al; les ebx, ptr [eax]; pop ebx; ret; 
0x0011eb10: sbb al, 0xe8; mov dl, byte ptr [eax + eax]; add esp, 0x1c; ret; 
0x0009a0f7: sbb al, 0xe8; mov dword ptr [0x66ffffff], eax; nop; nop; mov eax, dword ptr gs:[8]; ret; 
0x000c7e4f: sbb al, 0xe8; mov eax, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a98fc: sbb al, 0xe8; mov esi, 0x83000165; les ebx, ptr [eax]; pop ebx; ret; 
0x0003d92a: sbb al, 0xe8; nop; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009f3aa: sbb al, 0xe8; nop; cmp eax, 0xc483fff8; or al, 0x8d; xchg byte ptr [eax + edi*2 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x00111b6e: sbb al, 0xe8; or al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c4b2f: sbb al, 0xe8; or ecx, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a98cc: sbb al, 0xe8; out dx, al; add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x00042262: sbb al, 0xe8; push 0x83001639; les ebx, ptr [eax]; pop ebx; ret; 
0x0012e510: sbb al, 0xe8; push 5; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012452c: sbb al, 0xe8; push ds; ret 0xfff3; 
0x001244f3: sbb al, 0xe8; push edi; ret 0xfff3; 
0x00150594: sbb al, 0xe8; push es; cdq; bnd jmp dword ptr [ebp - 0x39]; 
0x0009c588: sbb al, 0xe8; ret 0xfff0; 
0x00088047: sbb al, 0xe8; ret; 
0x00049a8f: sbb al, 0xe8; retf; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000cff41: sbb al, 0xe8; sbb dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001631f6: sbb al, 0xe8; sbb eax, 0x810001fb; ret; 
0x0004d3bf: sbb al, 0xe8; sbb ecx, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009be9b: sbb al, 0xe8; scasd eax, dword ptr es:[edi]; idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x00049a61: sbb al, 0xe8; stc; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001372cd: sbb al, 0xe8; std; retf 0xfff4; add esp, 0x1c; ret; 
0x0012454f: sbb al, 0xe8; sti; sal ebx, 0xff; add esp, 0x1c; ret; 
0x001244a0: sbb al, 0xe8; stosb byte ptr es:[edi], al; ret 0xfff3; 
0x0011ebef: sbb al, 0xe8; stosd dword ptr es:[edi], eax; push ebx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011b7c2: sbb al, 0xe8; sub byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d70b5: sbb al, 0xe8; test dword ptr [ebx - 0x3b7c0001], ebp; adc al, 0x5b; pop esi; ret; 
0x00060746: sbb al, 0xe8; xor al, 0xb1; or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x00182e28: sbb al, 0xe8; xor byte ptr [esi - 0x3b7c0015], 0x1c; ret; 
0x0011ec65: sbb al, 0xe8; xor eax, 0x83000053; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000f9c21: sbb al, 0xeb; and dword ptr [ebp + 0xf002674], ecx; xchg esp, eax; ret; 
0x000a6d7a: sbb al, 0xee; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0010158e: sbb al, 0xf6; ret 0xf08; 
0x000c2136: sbb al, 0xf7; dec dword ptr [ebx - 0x72e3dbac]; add byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x73]; 
0x00107f12: sbb al, 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000f7873: sbb al, 0xf; inc esp; ret 0x4c89; 
0x001483f8: sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0012a56a: sbb al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x0016c597: sbb al, 0xf; mov dh, 0xc0; ret; 
0x001489bc: sbb al, 0xf; mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5d8]; add edi, ecx; jmp edi; 
0x001488b7: sbb al, 0xf; mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x001487ee: sbb al, 0xf; mov dh, 0xd2; mov edi, dword ptr [ecx + edx*4 - 0x6e5fc]; add edi, ecx; jmp edi; 
0x000d6bf5: sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000b716d: sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000b8810: sbb al, 0xf; test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0014bc8d: sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x00053029: sbb al, 0xf; xchg edx, eax; ret 0x1e89; 
0x00052f39: sbb al, 0xf; xchg edx, eax; ret 0xe89; 
0x0014f17c: sbb al, 0xff; aaa; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001910fe: sbb al, 0xff; inc dword ptr [ecx + 0x4370fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191065: sbb al, 0xff; inc dword ptr [ecx + 0x437a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001549e9: sbb al, 0xff; je 0x154a11; xor byte ptr [ebp + 0x50482444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0004cb6c: sbb al, 0xff; je 0x4cb94; sbb al, 0xe8; ljmp 0x1cc4:0x83ffffd6; ret; 
0x0005a2ac: sbb al, 0xff; je 0x5a2d4; sbb al, 0xe8; ljmp 0x1cc4:0x830000b0; ret; 
0x000cac3c: sbb al, 0xff; je 0xcac64; sbb al, 0xe8; lcall 0x1cc4, 0x83ffffd9; ret; 
0x000882fe: sbb al, 0xff; jo 0x8833a; call 0x11b5e0; add esp, 0x18; pop ebx; ret; 
0x0016f2e3: sbb al, 0xff; mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x000379bd: sbb al, 0xff; xor al, ch; jnp 0x37a3f; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008e212: sbb al, 0xff; xor al, ch; xchg byte ptr [edi - 7], cl; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0006f8bd: sbb al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0010b1cc: sbb al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a4810: sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x00129c01: sbb al, 1; add byte ptr [eax], al; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0010b186: sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000c0a37: sbb al, 1; add byte ptr [eax], al; ret; 
0x00184faf: sbb al, 1; ret 0x4689; 
0x00126100: sbb al, 3; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000b0dc0: sbb al, 3; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000e24ea: sbb al, 3; test byte ptr [eax - 0x70488], cl; jmp eax; 
0x00192de4: sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00033d30: sbb al, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0014ca2c: sbb al, al; stc; call dword ptr [eax - 0x18]; 
0x0017eea2: sbb al, bh; inc edx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x1102454], cl; ret 0xcdb8; 
0x0019300b: sbb al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00092d32: sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001259e5: sbb al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00092cd1: sbb al, byte ptr [eax]; add byte ptr [ebp + 0xa], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x00092f8f: sbb al, byte ptr [eax]; add byte ptr [ebp + 0xc], dh; xor eax, eax; pop ebx; ret; 
0x000602db: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x357f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0008dcdd: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0008b1e4: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00024ba1: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008b29d: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0019cefe: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00055de9: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000d3ff0: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x00057f8d: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; call dword ptr [eax - 1]; 
0x000575eb: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x362773]; call dword ptr [eax - 1]; 
0x0008b1f3: sbb al, byte ptr [eax]; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x000322f3: sbb al, byte ptr [eax]; add dh, dh; ret 0xf03; 
0x000929a8: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008b158: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0008ccd9: sbb al, byte ptr [eax]; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8cce8; ret; 
0x00093b08: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008cc58: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008cc78: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc98: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008ccb8: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00093ae8: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00093ac8: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x0010df05: sbb al, byte ptr [ebp - 0x157bf025]; add byte ptr [eax], al; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x000e4b49: sbb al, byte ptr [ebx + 0x548d08ec]; and al, 0xc; push edx; push ebx; call eax; 
0x00122a15: sbb al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000db599: sbb al, byte ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x00171ca1: sbb al, byte ptr [ebx + 0x5f5b74c4]; ret; 
0x0012a01e: sbb al, byte ptr [ebx + eax*4]; ret; 
0x00068906: sbb al, byte ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0018fa35: sbb al, byte ptr [ecx]; retf 0xc801; call 0x182d19; add ebx, 0x44dd1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018da35: sbb al, byte ptr [ecx]; retf 0xc801; call 0x182d19; add ebx, 0x46b51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b0ac2: sbb al, byte ptr [esi]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0010dab1: sbb al, ch; int1; push esi; int1; dec dword ptr [ecx - 0x76ebdbbc]; ret 0xc483; 
0x001692c2: sbb bh, ah; cld; jmp dword ptr [esi - 0x70]; 
0x00109f9d: sbb bh, bh; jbe 0x109fa9; call dword ptr [eax + 0xc]; 
0x0010ad5a: sbb bh, bh; je 0x10ad82; sbb byte ptr [edx - 1], ch; call 0x10ae60; add esp, 0x1c; ret; 
0x0011b1db: sbb bh, bh; je 0x11b203; sbb byte ptr [edx - 0x64], ch; call 0x111700; add esp, 0x1c; ret; 
0x0011b6ab: sbb bh, bh; je 0x11b6d3; sbb byte ptr [edx - 0x64], ch; call 0x112200; add esp, 0x1c; ret; 
0x0011ca48: sbb bh, bh; je 0x11ca70; sbb byte ptr [edx - 0x64], ch; call 0x112200; add esp, 0x1c; ret; 
0x0011fa60: sbb bh, bh; je 0x11fa88; sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x00166243: sbb bh, bh; je 0x16626b; sbb byte ptr [esi - 0x18], dl; ret 0xfebc; 
0x0008b577: sbb bh, bh; je 0x8b59f; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0009a874: sbb bh, bh; je 0x9a89c; sbb al, 0xe8; add bh, byte ptr [ebx - 1]; jmp dword ptr [esi - 0x70]; 
0x000c13a1: sbb bh, bh; je 0xc13c9; sbb byte ptr [edx], ch; call 0xc18c0; add esp, 0x1c; ret; 
0x000d7d0c: sbb bh, bh; jo 0xd7d14; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x000d7d59: sbb bh, bh; jo 0xd7d61; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x000d7dac: sbb bh, bh; jo 0xd7db4; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x000d7df9: sbb bh, bh; jo 0xd7e01; push dword ptr [eax]; call 0xda4f0; add esp, 0x1c; ret; 
0x0018012a: sbb bh, bh; nop; jl 0x180132; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001a0c85: sbb bh, byte ptr [eax + 1]; jg 0x1a0c90; neg eax; ret; 
0x000c3d05: sbb bh, byte ptr [ecx]; ret; 
0x00026fc1: sbb bh, byte ptr [ecx]; stc; call dword ptr [eax - 0x18]; 
0x00024d60: sbb bh, byte ptr [edx + 1]; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x001487f6: sbb bh, cl; inc dword ptr [ecx]; iretd; jmp edi; 
0x0008254d: sbb bl, bh; dec dword ptr [ebp - 0x66ccf7a]; call dword ptr [eax - 0x73]; 
0x000ce462: sbb bl, byte ptr [ecx - 0xa]; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000b8bcc: sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0013ca7d: sbb bl, ch; ret 0x5755; 
0x0013d123: sbb byte ptr [0xffffff], ah; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0009db96: sbb byte ptr [eax + 0x103], bh; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e4d2e: sbb byte ptr [eax + 0x108], bh; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0011b831: sbb byte ptr [eax + 0x129], bh; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0003e96a: sbb byte ptr [eax + 0x50], dl; call 0x3e9d0; add esp, 0x1c; ret; 
0x00040361: sbb byte ptr [eax + 0x50], dl; call 0x3fe90; add esp, 0x10; add esp, 0xc; ret; 
0x000400b1: sbb byte ptr [eax + 0x50], dl; call 0x403d0; add esp, 0x10; add esp, 0xc; ret; 
0x00078274: sbb byte ptr [eax + 0x57], dl; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0012c9aa: sbb byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0011eb06: sbb byte ptr [eax + 0x68], dl; adc byte ptr [eax + eax], dl; push dword ptr [esp + 0x1c]; call 0x123fa0; add esp, 0x1c; ret; 
0x0012e605: sbb byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x00093e78: sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000654a2: sbb byte ptr [eax + 1], 0; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x001a0ff7: sbb byte ptr [eax + 1], bh; ja 0x1a1001; neg eax; ret; 
0x000f7570: sbb byte ptr [eax + 1], bh; ret; 
0x0013b406: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0013b406: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0011f5c7: sbb byte ptr [eax + 6], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000344cb: sbb byte ptr [eax + eax + 0x3650000], 5; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00081c84: sbb byte ptr [eax + eax], al; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00193204: sbb byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00059fa6: sbb byte ptr [eax + eax], cl; add esp, 0x1c; ret; 
0x00085cea: sbb byte ptr [eax - 0x18], dl; fistp qword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016a8e4: sbb byte ptr [eax - 0x7cffffdd], 0xec; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0014ca2b: sbb byte ptr [eax], 0xc0; stc; call dword ptr [eax - 0x18]; 
0x00041226: sbb byte ptr [eax], al; add byte ptr [eax - 0x18], dl; push ecx; ret; 
0x00169533: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00165ba1: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e6042: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012ece6: sbb byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00137303: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x00024fdf: sbb byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0013a8f2: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013a9c3: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e81e: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0018b927: sbb byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0002506c: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x00151ac3: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x00151745: sbb byte ptr [eax], al; add byte ptr [eax], al; push eax; call edx; 
0x00137332: sbb byte ptr [eax], al; add byte ptr [eax], al; push esi; call eax; 
0x00024ac7: sbb byte ptr [eax], al; add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x0003ebe5: sbb byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3ecb0; call eax; 
0x00168658: sbb byte ptr [eax], al; add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x00066781: sbb byte ptr [eax], al; add byte ptr [ebx - 0x7bf0f708], al; ret 0x18; 
0x00124820: sbb byte ptr [eax], dl; add byte ptr [eax], al; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x0006068c: sbb byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; ret; 
0x0005a72c: sbb byte ptr [ebp + 0x23], dh; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x001417fb: sbb byte ptr [ebp + 0x24448bc0], al; adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x0014c990: sbb byte ptr [ebp + 0x4df080], cl; add byte ptr [eax - 0x18], dl; ret; 
0x00146bda: sbb byte ptr [ebp + 0x5b0975c0], al; pop esi; pop edi; ret; 
0x000a5e6e: sbb byte ptr [ebp + 0x5b1475db], al; pop esi; pop edi; ret; 
0x000b8ba7: sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000b8bc9: sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b8c17: sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x00134924: sbb byte ptr [ebp + 0x63840fc9], al; or byte ptr [eax], al; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x0014f409: sbb byte ptr [ebp + 0x6a], dl; add byte ptr [edi + 0x53], dl; call edx; 
0x0007f822: sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000a6f83: sbb byte ptr [ebp + ebp - 0x1a7f000a], 2; lea edx, [edx - 0x177754]; cmove eax, edx; ret; 
0x0003c383: sbb byte ptr [ebp - 0x1fac137d], cl; dec dword ptr [edi]; inc esp; ret 0xefe9; 
0x0014581b: sbb byte ptr [ebp - 0x47378a25], al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000c1391: sbb byte ptr [ebp - 0x476d7240], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0013e369: sbb byte ptr [ebp - 0x6443b79], cl; call dword ptr [eax - 0x73]; 
0x0013e8b8: sbb byte ptr [ebp - 0x6445f7f], cl; dec dword ptr [ebp - 0x67bcb67]; call dword ptr [eax + 0x53]; 
0x0013e7c7: sbb byte ptr [ebp - 0x6448b80], cl; call dword ptr [eax + 0x53]; 
0x0013e73a: sbb byte ptr [ebp - 0x644b37a], cl; call dword ptr [eax - 0x73]; 
0x0013e5c8: sbb byte ptr [ebp - 0x644d379], cl; call dword ptr [eax - 0x73]; 
0x00110dc4: sbb byte ptr [ebp - 0x64da37e], cl; call dword ptr [eax - 0x73]; 
0x0009a08e: sbb byte ptr [ebp - 0x667d780], cl; call dword ptr [eax - 0x18]; 
0x0008dc92: sbb byte ptr [ebp - 0x66c5b80], cl; call dword ptr [eax - 0x18]; 
0x0009be61: sbb byte ptr [ebp - 0x66c5b80], cl; call dword ptr [eax - 0x18]; ret 0xfe93; 
0x00061b13: sbb byte ptr [ebp - 0x6725f7a], cl; call dword ptr [eax - 0x73]; 
0x000712b3: sbb byte ptr [ebp - 0x6728b80], cl; call dword ptr [eax - 0x18]; 
0x0004c8c9: sbb byte ptr [ebp - 0x677bf79], cl; call dword ptr [eax - 0x73]; 
0x00049567: sbb byte ptr [ebp - 0x677d779], cl; call dword ptr [eax - 0x73]; 
0x0004981d: sbb byte ptr [ebp - 0x677e379], cl; call dword ptr [eax - 0x73]; 
0x0003d5de: sbb byte ptr [ebp - 0x67a5b80], cl; call dword ptr [eax - 0x18]; 
0x00063e85: sbb byte ptr [ebp - 0x67f1fb5], cl; pop edx; jbe 0x64824; mov edi, eax; jmp edx; 
0x0002507a: sbb byte ptr [ebp - 0x680a380], cl; call dword ptr [eax - 0x18]; 
0x0017d240: sbb byte ptr [ebp - 0x6893b80], cl; call dword ptr [eax - 0x18]; 
0x00167f5c: sbb byte ptr [ebp - 0x68c6880], cl; call dword ptr [eax - 0x18]; 
0x001679fc: sbb byte ptr [ebp - 0x68c7480], cl; call dword ptr [eax - 0x18]; 
0x0016776c: sbb byte ptr [ebp - 0x68c8180], cl; call dword ptr [eax - 0x18]; 
0x001673bc: sbb byte ptr [ebp - 0x68c8f80], cl; call dword ptr [eax - 0x18]; 
0x00166d6c: sbb byte ptr [ebp - 0x68c9b80], cl; call dword ptr [eax - 0x18]; 
0x00166a1c: sbb byte ptr [ebp - 0x68caa80], cl; call dword ptr [eax - 0x18]; 
0x001663cc: sbb byte ptr [ebp - 0x68cb880], cl; call dword ptr [eax - 0x18]; 
0x0016405c: sbb byte ptr [ebp - 0x68d6a80], cl; call dword ptr [eax - 0x18]; 
0x0015a31b: sbb byte ptr [ebp - 0x6902c80], cl; call dword ptr [eax - 1]; 
0x0015973c: sbb byte ptr [ebp - 0x6903d80], cl; call dword ptr [eax - 1]; 
0x0015980b: sbb byte ptr [ebp - 0x6904e80], cl; call dword ptr [eax - 1]; 
0x00159b6f: sbb byte ptr [ebp - 0x6905f7a], cl; call dword ptr [eax - 1]; 
0x00154621: sbb byte ptr [ebp - 0x6912879], cl; call dword ptr [eax + 0x55]; 
0x0013e917: sbb byte ptr [ebp - 0x696717f], cl; call dword ptr [eax - 0x73]; 
0x0013e607: sbb byte ptr [ebp - 0x6969180], cl; call dword ptr [eax + 0x6a]; 
0x0002479f: sbb byte ptr [ebp - 0x6969f80], cl; call dword ptr [eax - 1]; 
0x0013e849: sbb byte ptr [ebp - 0x696b77d], cl; dec dword ptr [ebp - 0x67bcb75]; call dword ptr [eax - 0x77]; 
0x0013e1b2: sbb byte ptr [ebp - 0x696c980], cl; call dword ptr [eax + 0x6a]; 
0x0013e95a: sbb byte ptr [ebp - 0x696e779], cl; call dword ptr [eax - 0x73]; 
0x0013e69d: sbb byte ptr [ebp - 0x696fe80], cl; call dword ptr [eax + 0x6a]; 
0x0013e676: sbb byte ptr [ebp - 0x6971080], cl; call dword ptr [eax + 0x6a]; 
0x00138eee: sbb byte ptr [ebp - 0x6985c80], cl; call dword ptr [eax - 0x18]; 
0x00137aee: sbb byte ptr [ebp - 0x6988d80], cl; call dword ptr [eax - 0x18]; 
0x000247d0: sbb byte ptr [ebp - 0x699f27d], cl; call dword ptr [eax + 0x6a]; 
0x0018b4db: sbb byte ptr [ebp - 0x6a5c980], cl; call dword ptr [eax + 0x53]; 
0x0010f717: sbb byte ptr [ebp - 0x6a62980], cl; call dword ptr [eax - 0x18]; 
0x0013e40d: sbb byte ptr [ebp - 0x6a66680], cl; call dword ptr [eax + 0x6a]; 
0x0010ed5a: sbb byte ptr [ebp - 0x6a6cb80], cl; call dword ptr [eax - 0x18]; 
0x0010ed5a: sbb byte ptr [ebp - 0x6a6cb80], cl; call dword ptr [eax - 0x18]; jns 0x10ed73; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000ed47a: sbb byte ptr [ebp - 0x6a91680], cl; call dword ptr [eax - 0x18]; 
0x0015020e: sbb byte ptr [ebp - 0x6a9d980], cl; call dword ptr [eax - 0x18]; 
0x0013e628: sbb byte ptr [ebp - 0x6c32380], cl; call dword ptr [eax + 0x55]; 
0x0007ef16: sbb byte ptr [ebp - 0x6ff7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0005265a: sbb byte ptr [ebp - 0x75], ah; xor eax, 0x14; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0003a253: sbb byte ptr [ebp - 0x769a8b40], al; ret 0xa4eb; 
0x0012da11: sbb byte ptr [ebp - 0x76efdbbc], cl; inc esp; and al, 0x24; mov eax, 0x66; mov dword ptr [esp + 0x20], edi; call dword ptr gs:[0x10]; 
0x00133ef4: sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x001457e3: sbb byte ptr [ebp - 0x7cc78b25], al; rol byte ptr [ecx], 1; ret; 
0x00087259: sbb byte ptr [ebp - 0x7cf58a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00047eee: sbb byte ptr [ebp - 0x7d368], cl; dec dword ptr [ebp - 0x6c07c80]; call dword ptr [ebx + 0x6a]; 
0x000475cb: sbb byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x00176183: sbb byte ptr [ebp - 0x95377], cl; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0003feac: sbb byte ptr [ebx + 0x10890253], cl; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008ea97: sbb byte ptr [ebx + 0x16ba01f8], al; add byte ptr [eax], al; add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x0012ac2d: sbb byte ptr [ebx + 0x1d74fffe], al; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0010888f: sbb byte ptr [ebx + 0x3910245c], cl; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00035980: sbb byte ptr [ebx + 0x3e], 0xf9; call dword ptr [eax - 0x18]; 
0x0002fc07: sbb byte ptr [ebx + 0x418901e8], al; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003cedf: sbb byte ptr [ebx + 0x4247c], al; je 0x3cf00; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x0014c370: sbb byte ptr [ebx + 0x478910c4], al; adc al, 0x89; ret 0xc985; 
0x00090c76: sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000e523b: sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x0003fe70: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x0004007d: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x0004032d: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b0: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x000be61a: sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bb194: sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0013c9ac: sbb byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000dcc46: sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0016940e: sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0011f159: sbb byte ptr [ebx + 0x5e5b54c4], al; ret; 
0x0002863e: sbb byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x000a71ba: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003ba29: sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00182ece: sbb byte ptr [ebx + 0x74ff04ec], al; and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0003bfbf: sbb byte ptr [ebx + 0x788b0470], cl; or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x00031ad1: sbb byte ptr [ebx + eax*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00120e81: sbb byte ptr [ebx + eax], 0; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00120f09: sbb byte ptr [ebx + eax], 0; pop ebx; ret; 
0x00081244: sbb byte ptr [ebx + edx*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00134efc: sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x65f3978d; stc; call dword ptr [edx + 0x50]; 
0x0005ae4b: sbb byte ptr [ebx - 0x14f3dbac], cl; mov bh, 0x8d; xchg dword ptr [eax - 0x76], esi; stc; call dword ptr [eax - 0x73]; 
0x000d40d8: sbb byte ptr [ebx - 0x1f3efb14], al; add cl, byte ptr [ebx - 0x363f63]; call dword ptr [eax + 0x6a]; 
0x000576d8: sbb byte ptr [ebx - 0x1f3efb14], al; add cl, byte ptr [ebx - 0x364763]; call dword ptr [eax + 0x6a]; 
0x0016a667: sbb byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16a678; sub esp, 0xc; push esi; call eax; 
0x0003be22: sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00129a86: sbb byte ptr [ebx - 0x47d7db84], cl; js 0x129a8e; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0012aa75: sbb byte ptr [ebx - 0x47e3dbac], cl; mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0012a818: sbb byte ptr [ebx - 0x47e3dbac], cl; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f94fc: sbb byte ptr [ebx - 0x49f0f314], al; ret; 
0x00060b44: sbb byte ptr [ebx - 0x49f0fe10], al; ror byte ptr [ebp + 0x429c0384], 0xf9; call dword ptr [eax + 0x6a]; 
0x00074139: sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x00072ed9: sbb byte ptr [ebx - 0x5037b], cl; inc dword ptr [ecx]; ret; 
0x0016d618: sbb byte ptr [ebx - 0x57cf7a2], cl; emms; lsl eax, word ptr [eax + edx*4 - 0x6ccd4]; jmp eax; 
0x0009e065: sbb byte ptr [ebx - 0x749bdbb4], cl; je 0x9e091; or byte ptr [eax + 0x199], bh; call dword ptr gs:[0x10]; 
0x00132003: sbb byte ptr [ebx - 0x74adef3c], al; inc esi; sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x001444d1: sbb byte ptr [ebx - 0x74d3dba4], cl; jl 0x1444fd; xor byte ptr [ebx - 0x18], dl; inc eax; ret 0xfff7; 
0x000e7bb7: sbb byte ptr [ebx - 0x74e3dbac], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011c905: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012c155: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012c235: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001226c5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00123ff5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00120605: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012bd95: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0012673e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001118fe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011b27e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012c32e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012bfae: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012c02e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012bdce: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c18e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012bfee: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bebe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012c1fe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012acfe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x001270ee: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001241be: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0012069e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0002cbcd: sbb byte ptr [ebx - 0x76f3db84], cl; cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x000e092b: sbb byte ptr [ebx - 0x78f0f902], al; call dword ptr [edx]; 
0x00028a84: sbb byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00029084: sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00064793: sbb byte ptr [ebx], al; add al, 0x97; mov edi, ecx; jmp eax; 
0x0003183a: sbb byte ptr [ebx], al; inc ecx; adc al, 0x39; ret 0x4d0f; 
0x0006d08e: sbb byte ptr [ebx], al; test byte ptr [eax - 0x72954], dl; jmp eax; 
0x0006179e: sbb byte ptr [ebx], al; test byte ptr [eax - 0x73134], dl; jmp eax; 
0x00063814: sbb byte ptr [ebx], al; test byte ptr [ecx - 0x72e94], dl; jmp eax; 
0x00064f0b: sbb byte ptr [ebx], al; test byte ptr [ecx - 0x73014], dl; jmp eax; 
0x0006400d: sbb byte ptr [ebx], al; test byte ptr [esi - 0x72f14], dl; jmp eax; 
0x0004239c: sbb byte ptr [ecx + 0x10b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0016b859: sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0004230a: sbb byte ptr [ecx + 0x20b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x00129c72: sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x000aa3b1: sbb byte ptr [ecx + 0x245489f0], cl; adc byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x0011bef3: sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0002cb73: sbb byte ptr [ecx + 0x29008bea], cl; ret 0xfa83; 
0x00131efb: sbb byte ptr [ecx + 0x29c529da], cl; ret 0x6c01; 
0x000a9833: sbb byte ptr [ecx + 0x3428d02], cl; pop ebx; pop esi; ret; 
0x000a45b8: sbb byte ptr [ecx + 0x3892073], cl; push eax; call ecx; 
0x000a8119: sbb byte ptr [ecx + 0x3910246c], cl; ret 0x2e74; 
0x000ed042: sbb byte ptr [ecx + 0x3e], 0xf9; call dword ptr [eax - 0x75]; 
0x0004236e: sbb byte ptr [ecx + 0x40b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0008c145: sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000dd821: sbb byte ptr [ecx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x0008c50d: sbb byte ptr [ecx + 0x57], dl; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000a9773: sbb byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000c4559: sbb byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x000a047d: sbb byte ptr [ecx + 0x68fff951], 0x2f; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add al, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x000a03f1: sbb byte ptr [ecx + 0x68fff951], 0x3e; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and ah, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x000a0414: sbb byte ptr [ecx + 0x68fff951], 0x40; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub byte ptr [edi + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0018cf23: sbb byte ptr [ecx + 0x85c8b1a], cl; cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000422dc: sbb byte ptr [ecx + 0x8b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x000985de: sbb byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009e496: sbb byte ptr [ecx + 0xb4c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0018ec7a: sbb byte ptr [ecx + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a9433: sbb byte ptr [ecx + ebx - 0x7d], dh; ret 0xf01; 
0x0014de95: sbb byte ptr [ecx + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00135f9c: sbb byte ptr [ecx + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x00088043: sbb byte ptr [ecx - 0x17e3dbac], cl; ret; 
0x0007de72: sbb byte ptr [ecx - 0x18], dl; ja 0x7de92; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000893eb: sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0012052b: sbb byte ptr [ecx - 0x723ca428], cl; sbb ah, 0xb3; stc; call dword ptr [eax - 0x73]; 
0x001122ea: sbb byte ptr [ecx - 0x74540c10], cl; test byte ptr [eax + ebx], ah; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000aa6f8: sbb byte ptr [ecx - 0x76287608], cl; ret 0x3990; 
0x000e5234: sbb byte ptr [ecx - 0x76efdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x0003854b: sbb byte ptr [ecx - 0x7c327611], cl; in al, dx; or al, 0x83; ret; 
0x000403ff: sbb byte ptr [ecx - 0x7c3fcefe], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x0014c2e9: sbb byte ptr [ecx - 0x7cff6abc], cl; ret 0x3b01; 
0x00177863: sbb byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013e95d: sbb byte ptr [ecx - 7], ch; call dword ptr [eax - 0x73]; 
0x000a33a1: sbb byte ptr [ecx], ah; retf 0x488d; jmp dword ptr [ecx]; 
0x0009d6f8: sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009d6a2: sbb byte ptr [ecx], al; add byte ptr [eax], al; mov ecx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x001458c6: sbb byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x00024b3c: sbb byte ptr [ecx], al; add byte ptr [eax], al; test edx, edx; je 0x24b45; ret; 
0x00105e1b: sbb byte ptr [ecx], al; ret 0x44c7; 
0x00105eb4: sbb byte ptr [ecx], al; ret 0x7c80; 
0x0004e13f: sbb byte ptr [ecx], al; ret 0xd389; 
0x0019f237: sbb byte ptr [ecx], al; retf 0xc801; call 0x182d19; add ebx, 0x3600f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d6bd7: sbb byte ptr [ecx], bh; dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000923ee: sbb byte ptr [ecx], bh; iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001020f8: sbb byte ptr [ecx], bh; ret 0x4c0f; 
0x00050f4d: sbb byte ptr [ecx], bh; ret 0x6674; 
0x000c9734: sbb byte ptr [ecx], bh; ret 0x840f; 
0x0002911f: sbb byte ptr [ecx], bh; ret; 
0x0011fa64: sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x00130162: sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x00126134: sbb byte ptr [ecx], bh; sar bh, 1; je 0x12615e; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x000d6fff: sbb byte ptr [ecx], bh; sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x000fb136: sbb byte ptr [ecx], ch; ret 0x5c8d; 
0x0012de2a: sbb byte ptr [ecx], cl; ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x12de3e; add esp, 0x7c; ret; 
0x0005ddb0: sbb byte ptr [ecx], dh; rol byte ptr [ebx + 0xf41087e], cl; xchg esp, eax; ret 0x6a52; 
0x000a89eb: sbb byte ptr [ecx], dh; rol byte ptr [ecx], cl; ret; 
0x000a872b: sbb byte ptr [ecx], dh; ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x000398d9: sbb byte ptr [ecx], dh; ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x398c0; ret; 
0x000a8357: sbb byte ptr [ecx], dh; shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x000b74c7: sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00077f3c: sbb byte ptr [edi + ecx*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0018f0fd: sbb byte ptr [edi + edi*8], bh; inc dword ptr [ecx + 0x4548fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001910fd: sbb byte ptr [edi + edi*8], bl; inc dword ptr [ecx + 0x4370fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009e3be: sbb byte ptr [edi - 0x18], dl; fisttp dword ptr [ebp - 8]; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x0012613a: sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x0013d0f0: sbb byte ptr [edi], cl; mov bh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x000a94df: sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000de9dc: sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000a6893: sbb byte ptr [edi], cl; test byte ptr [ecx - 0x7cffffff], ah; ret 0xe901; 
0x000d6bda: sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x00113077: sbb byte ptr [edi], cl; xchg ebp, eax; ret; 
0x001782b1: sbb byte ptr [edi], cl; xchg esp, eax; ret; 
0x00111f74: sbb byte ptr [edx + 0x50], dl; call 0x112200; add esp, 0x10; add esp, 0xc; ret; 
0x00167942: sbb byte ptr [edx + 0xa], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00163ca2: sbb byte ptr [edx + 1], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00163fa2: sbb byte ptr [edx + 2], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00165032: sbb byte ptr [edx + 3], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00166302: sbb byte ptr [edx + 4], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00166962: sbb byte ptr [edx + 5], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00166cb2: sbb byte ptr [edx + 6], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00167ea2: sbb byte ptr [edx + 7], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00167302: sbb byte ptr [edx + 8], ch; call 0x150e60; add esp, 0x1c; ret; 
0x001676b2: sbb byte ptr [edx + 9], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00156b53: sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x0011b1df: sbb byte ptr [edx - 0x64], ch; call 0x111700; add esp, 0x1c; ret; 
0x0011b68b: sbb byte ptr [edx - 0x64], ch; call 0x112030; add esp, 0x18; pop ebx; ret; 
0x0011b6af: sbb byte ptr [edx - 0x64], ch; call 0x112200; add esp, 0x1c; ret; 
0x001417d8: sbb byte ptr [edx - 0x77], dl; ret 0xe889; 
0x0013d424: sbb byte ptr [edx - 0x77], dl; ret 0xeac1; 
0x0010ad5e: sbb byte ptr [edx - 1], ch; call 0x10ae60; add esp, 0x1c; ret; 
0x0010ad38: sbb byte ptr [edx - 1], ch; call 0x10b230; add esp, 0x1c; ret; 
0x001292d6: sbb byte ptr [edx], ch; call 0x129520; add esp, 0x1c; ret; 
0x00163852: sbb byte ptr [edx], ch; call 0x150e60; add esp, 0x1c; ret; 
0x00034b38: sbb byte ptr [edx], ch; call 0x34af0; add esp, 0x1c; ret; 
0x0003ccb2: sbb byte ptr [edx], ch; call 0x3c5a0; add esp, 0x1c; ret; 
0x000c13a5: sbb byte ptr [edx], ch; call 0xc18c0; add esp, 0x1c; ret; 
0x000e48a6: sbb byte ptr [edx], ch; call 0xe4970; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0003e277: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x3e3d0; add esp, 0x1c; ret; 
0x00124448: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x60750; add esp, 0x1c; ret; 
0x000953b2: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x94a30; add esp, 0x18; pop ebx; ret; 
0x0009cfa6: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x9d570; add esp, 0x1c; ret; 
0x000a6392: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0xbfec0; add esp, 0x18; pop ebx; ret; 
0x00049946: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x46d60; add esp, 0x1c; ret; 
0x00050876: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4dce0; add esp, 0x1c; ret; 
0x000c7d06: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc5440; add esp, 0x1c; ret; 
0x000ce596: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcbde0; add esp, 0x1c; ret; 
0x0011a6db: sbb byte ptr [edx], ch; push eax; call 0x11d620; add esp, 0x10; add esp, 0xc; ret; 
0x000b83e4: sbb byte ptr [edx], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008c3ae: sbb byte ptr [esi + 0x57], dl; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001901fa: sbb byte ptr [esi + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a6523: sbb byte ptr [esi + ebx*2], 0xf5; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0016eb84: sbb byte ptr [esi - 0x15], al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00166247: sbb byte ptr [esi - 0x18], dl; ret 0xfebc; 
0x000a9853: sbb byte ptr [esi - 0x77], ah; pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x00102228: sbb byte ptr [esi - 0x7f], ah; loope 0x10222c; add esi, esi; ret; 
0x0012142d: sbb byte ptr [esp + esi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0010b15c: sbb ch, 2; add byte ptr [ebp - 0x18], dl; ret; 
0x00033aa3: sbb ch, ah; idiv edi; dec dword ptr [ecx - 0x2d7a3f88]; je 0x33ab9; mov dword ptr [esp + 4], eax; call edx; 
0x0009f398: sbb ch, al; mov byte ptr [0x83fff83d], al; les ecx, ptr [ecx*4 - 0x1987c37a]; call dword ptr [eax + 0x57]; 
0x000b710c: sbb cl, byte ptr [ebp - 0x7af0e581]; ljmp 0x5b5e:0x5f000005; ret; 
0x0006ebef: sbb cl, byte ptr [ebx + 0x1572914]; ret; 
0x00164967: sbb cl, byte ptr [ebx + 0x39682444]; ret 0x840f; 
0x001470c1: sbb cl, byte ptr [ebx + 0x39702444]; ret 0x840f; 
0x001737c5: sbb cl, byte ptr [ebx + 0x650c2444]; sub eax, dword ptr [0x14]; jne 0x173804; add esp, 0x1c; ret; 
0x000d6ffd: sbb cl, byte ptr [ebx + 0x741a3918]; aam 0xf; lahf; ret; 
0x0010ee35: sbb cl, byte ptr [ebx + 0xf0c2474]; mov dh, 0xd2; mov ecx, dword ptr [esi + edx*4 - 0x6ec98]; add ecx, esi; jmp ecx; 
0x0012b255: sbb cl, byte ptr [ebx - 0x47bbdb8c]; lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x0015888d: sbb cl, byte ptr [ebx - 0x72efdb84]; xchg edi, eax; lodsb al, byte ptr [esi]; cmc; int1; call dword ptr [edx + 0x6a]; 
0x0018cf25: sbb cl, byte ptr [ebx - 0x7603f7a4]; pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x00097ee9: sbb cl, byte ptr [ebx - 0x76ebdb84]; ret 0xc389; 
0x0012a01b: sbb cl, byte ptr [ecx - 0x7cfbe584]; ret; 
0x00144b4e: sbb cl, byte ptr [edi]; inc edx; ret 0xb60f; 
0x000b710f: sbb cl, byte ptr [edi]; test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b6d28: sbb dh, al; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000d7001: sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x0017bc08: sbb dh, cl; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0011df61: sbb dh, dh; ret 0x7540; 
0x001a5207: sbb dh, dh; ret 0xf0f; 
0x0018b7c2: sbb dl, bh; cli; jmp dword ptr [esi - 0x70]; 
0x0010ac78: sbb dl, byte ptr [eax - 0x73]; cmp ebx, 0x58; stc; call dword ptr [eax - 0x18]; 
0x0002747b: sbb dl, byte ptr [ecx]; add byte ptr [ebp - 0x67ffb79], cl; call dword ptr [eax - 0x73]; 
0x001739d2: sbb dl, byte ptr [ecx]; in al, dx; call dword ptr [eax - 0x73]; 
0x00108372: sbb dword ptr [eax + 0x17247c], eax; jne 0x108420; call ecx; 
0x0015f88b: sbb dword ptr [eax + 0x71], -7; call dword ptr [eax - 0x18]; 
0x001930a4: sbb dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016105b: sbb dword ptr [eax - 0x5c], 0; add byte ptr [eax - 0x73], dl; sbb esp, 0x7a; int1; call dword ptr [eax - 0x73]; 
0x00085b8d: sbb dword ptr [eax - 0x6d], -7; call dword ptr [eax - 0x18]; 
0x0010ac4f: sbb dword ptr [eax - 0x73], edx; or ecx, 0x58; stc; call dword ptr [eax - 0x18]; 
0x00049809: sbb dword ptr [eax - 7], eax; call dword ptr [eax - 0x18]; 
0x000fa706: sbb dword ptr [eax - 7], ebx; call dword ptr [eax + 0x55]; 
0x00103640: sbb dword ptr [eax - 7], ebx; call dword ptr [eax - 0x77]; 
0x000cff43: sbb dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00068d13: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0009d288: sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x0009e5e9: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9e600; ret; 
0x0009e679: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9e690; ret; 
0x0009e629: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9e640; ret; 
0x0009b528: sbb dword ptr [eax], eax; mov ecx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3ba4]; test eax, eax; jne 0x9b547; ret; 
0x0009e5c8: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x358], edx; ret; 
0x0009e5a8: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x35c], edx; ret; 
0x0009e578: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x34c], edx; ret; 
0x0009e528: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x350], edx; ret; 
0x0009e4c8: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x354], edx; ret; 
0x0009e4f8: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x378], 1; mov dword ptr [eax + 0x370], edx; ret; 
0x0009e658: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x394], edx; ret; 
0x0009e558: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3c34], edx; ret; 
0x0009cf69: sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009d57f: sbb dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b85e3: sbb dword ptr [eax], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00024b8d: sbb dword ptr [ebp - 0x1b130370], ecx; jmp dword ptr [ebp + 0x33]; 
0x00130e7c: sbb dword ptr [ebp - 0x76f08a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00130ee7: sbb dword ptr [ebp - 0x76f38a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001310d2: sbb dword ptr [ebp - 0x76f68a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0007ecbd: sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0010916d: sbb dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0008f229: sbb dword ptr [ebx + 0x5e5b24c4], eax; ret; 
0x000a5a67: sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00172116: sbb dword ptr [ebx + 0x650c2454], ecx; sub edx, dword ptr [0x14]; jne 0x172137; add esp, 0x1c; ret; 
0x001202d4: sbb dword ptr [ebx + 0x69], -7; call dword ptr [eax + 0x6a]; 
0x0011ff91: sbb dword ptr [ebx + 0x69], -7; call dword ptr [eax - 1]; 
0x0005f881: sbb dword ptr [ebx + 0x69], -7; call dword ptr [ebp + 0x50]; 
0x00055046: sbb dword ptr [ebx + eax*4], eax; ret; 
0x0005fb9b: sbb dword ptr [ebx], 0x42; stc; call dword ptr [esi + 0x6a]; 
0x0015badb: sbb dword ptr [ebx], 0xc483fff3; adc byte ptr [ebp - 0x77], ah; pop ebx; pop esi; pop edi; ret; 
0x001513fa: sbb dword ptr [ebx], eax; add byte ptr [ecx + 0xe5a17c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0015134b: sbb dword ptr [ebx], eax; add byte ptr [ecx + 0xe5ac6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x001201b5: sbb dword ptr [ecx + 0x3e], -7; call dword ptr [eax + 0x6a]; 
0x00059dc9: sbb dword ptr [ecx + 0x434c4], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x001722c3: sbb dword ptr [ecx + 0x75], -7; call dword ptr [eax + 0x6a]; 
0x0008426a: sbb dword ptr [ecx + 0xa0c4], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a9bd4: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6b86c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a7b14: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bb8c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9e04: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bf6c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00138904: sbb dword ptr [ecx + eax - 0x72ff0000], 0xf5587c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a6e44: sbb dword ptr [ecx + eax - 0x72ff0000], 0xf5588c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0014d420: sbb dword ptr [ecx + eax*8], -7; call dword ptr [eax - 0x73]; 
0x001a9af3: sbb dword ptr [ecx - 0x7cfbe684], ecx; ret; 
0x00055043: sbb dword ptr [ecx - 0x7cfbe68c], ecx; ret; 
0x0015ecc5: sbb dword ptr [ecx - 7], esi; call dword ptr [eax - 0x18]; 
0x000fa705: sbb dword ptr [ecx], 0x58; stc; call dword ptr [eax + 0x55]; 
0x0015ecc4: sbb dword ptr [ecx], 0x71; stc; call dword ptr [eax - 0x18]; 
0x0009d2d5: sbb dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ad999: sbb dword ptr [ecx], ebp; ret; 
0x0008f952: sbb dword ptr [ecx], esi; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00096bc7: sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000254c7: sbb dword ptr [ecx], esp; add byte ptr [ebx + 0xa480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000b8baa: sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0005f92f: sbb dword ptr [edi + 0xe], esi; mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x0014b796: sbb dword ptr [edi + edi*4], -7; call dword ptr [eax - 0x18]; 
0x0015348b: sbb dword ptr [edi + esi*2], -0xf; call dword ptr [eax - 0x73]; 
0x000fa71c: sbb dword ptr [edi], 0x58; stc; call dword ptr [eax + 0x55]; 
0x00151463: sbb dword ptr [edi], 0x6e; stc; call dword ptr [eax - 0x73]; 
0x0015bb3b: sbb dword ptr [edi], 0x70; stc; call dword ptr [eax - 0x18]; 
0x001427f9: sbb dword ptr [edi], ecx; inc ebx; ret 0xc589; 
0x000b877d: sbb dword ptr [edi], ecx; test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d7dd3: sbb dword ptr [edi], esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001a3db3: sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000a418f: sbb dword ptr [esi], 0x54; stc; call dword ptr [eax - 0x18]; 
0x000b87e3: sbb dword ptr [esi], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0015730d: sbb dword ptr [esp + eax*8], -7; call dword ptr [eax - 0x18]; 
0x00161ecb: sbb dword ptr [esp + edi*2], -0xf; call dword ptr [eax - 0x73]; 
0x0016f7ca: sbb eax, -0x39; stc; call dword ptr [eax - 0x73]; 
0x001573d1: sbb eax, -0x3c; stc; call dword ptr [eax - 0x18]; 
0x0015733c: sbb eax, -0x3d; stc; call dword ptr [eax - 0x18]; 
0x0005abde: sbb eax, -0x77; stc; call dword ptr [eax - 0x73]; 
0x0016e327: sbb eax, -1; add esp, 0xc; ret; 
0x000bdb50: sbb eax, -1; mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b55d5: sbb eax, -1; pop ebx; ret; 
0x000b4e66: sbb eax, -1; pop edi; pop ebx; ret; 
0x000bfd6d: sbb eax, -1; pop esi; pop ebx; ret; 
0x00118609: sbb eax, 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001175ca: sbb eax, 0; pop ebx; pop esi; ret; 
0x00121aaa: sbb eax, 0x14; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000603c9: sbb eax, 0x26b85300; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000b8285: sbb eax, 0x30010dc; or al, 0x99; jmp ecx; 
0x000b7197: sbb eax, 0x562850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0014bfd2: sbb eax, 0x5b04c483; pop esi; ret; 
0x001762cb: sbb eax, 0x5b10c483; pop esi; pop edi; ret; 
0x0015ce62: sbb eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000b883a: sbb eax, 0x5bf850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b6ddf: sbb eax, 0x5f000009; pop esi; pop ebx; ret; 
0x0015e50b: sbb eax, 0x70; stc; call dword ptr [eax - 0x18]; 
0x001631f8: sbb eax, 0x810001fb; ret; 
0x001320f8: sbb eax, 0x8100050c; ret; 
0x000c34f8: sbb eax, 0x81000bf8; ret; 
0x0007f9f8: sbb eax, 0x81001033; ret; 
0x00199bf8: sbb eax, 0x81fffe91; ret; 
0x001469ce: sbb eax, 0x83000001; in al, dx; or al, 0xff; je 0x1469fc; xor al, ch; ret 0xedc7; 
0x000421d2: sbb eax, 0x83d1bd0f; pop ds; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00079266: sbb eax, 0x83fffffd; jmp dword ptr [eax]; 
0x0007a3e0: sbb eax, 0x83ffffff; in al, dx; or al, 0x31; call dword ptr [ebp - 0x18]; 
0x00096f1e: sbb eax, 0x83ffffff; in al, dx; or al, 0x8d; xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; jmp edx; 
0x0004190f: sbb eax, 0x83ffffff; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0006905b: sbb eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0011b032: sbb eax, 0x8908ec83; ret; 
0x00139de2: sbb eax, 0x8920c483; fcomp dword ptr [ebx + 0x5e]; pop edi; ret 4; 
0x00026b02: sbb eax, 0x893cd66b; ret; 
0x0014a67f: sbb eax, 0x89fffffb; mov byte ptr [ebx - 0x7af0fe08], 0x5b; or eax, dword ptr [eax]; add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x00085ecd: sbb eax, 0x89ffffff; ret; 
0x0010dcb6: sbb eax, 0x8b056a56; jl 0x10dce1; adc byte ptr [ebp - 0x6a68079], cl; call dword ptr [eax - 0x73]; 
0x0016907a: sbb eax, 0x8b0cec83; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00098edf: sbb eax, 0xb881f180; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00190fae: sbb eax, 0xc381ffff; pop edi; cmp byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017b8b0: sbb eax, 0xc483fff1; adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x00195c62: sbb eax, 0xc801ca01; call 0x182d19; add ebx, 0x3f424; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191a42: sbb eax, 0xc801ca01; call 0x182d19; add ebx, 0x43044; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00176ad0: sbb eax, 0xe8ffffff; pop es; and al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x00165017: sbb eax, 0xec83000d; adc al, 0x8d; xor bl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x000b8837: sbb eax, 0xf1d7f8d; test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x00192eab: sbb eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e71b7: sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004fc3c: sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0004e917: sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x0004f60b: sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x000dce43: sbb eax, dword ptr [eax]; add byte ptr [esi - 0x7f], ah; out 4, al; add al, 0x66; cmp esi, 0x840f0400; ret; 
0x0012eaf6: sbb eax, dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x0011d866: sbb eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x00174bf6: sbb eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x00145714: sbb eax, dword ptr [ebx + 0x773901c6]; or al, 0x7f; ret; 
0x001a2374: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x00174e9c: sbb eax, dword ptr [ebx - 0x95fb14]; push ebp; push esi; call edi; 
0x000e6fe4: sbb eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x001a35c1: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x001ae315: sbb eax, dword ptr [ecx]; ret 0xe283; 
0x0005fb9c: sbb eax, dword ptr [edx - 7]; call dword ptr [esi + 0x6a]; 
0x00085d3c: sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005fd08: sbb eax, eax; add esp, 0x1c; ret; 
0x0018bc32: sbb eax, eax; add esp, 0x2c; ret; 
0x000257a5: sbb eax, eax; add esp, 0xc; ret; 
0x000603ab: sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00052a53: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00171c15: sbb eax, eax; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x171c37; add esp, 0x1c; ret; 
0x000529d1: sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0009adb6: sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0013005d: sbb eax, eax; ret; 
0x000bfabd: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x000bfd6b: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x00068dd0: sbb ebx, 0xec83ffff; or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x000e6f94: sbb ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000b8bfa: sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000f87eb: sbb ebx, ebp; ret; 
0x0004271d: sbb ebx, edx; pop ebx; setb al; ret; 
0x0012f417: sbb ecx, dword ptr [ebp - 0x6d47f6ec]; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x000b713a: sbb ecx, dword ptr [ebp - 0x7af0e481]; mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x0009e063: sbb ecx, dword ptr [ebx + 0x244c8b18]; mov esi, dword ptr fs:[esp + 8]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x00065afb: sbb ecx, dword ptr [ebx - 0x5af7b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x00059349: sbb ecx, dword ptr [ebx - 0x76e3db8c]; ret 0xc801; 
0x0004d3c1: sbb ecx, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b713d: sbb ecx, dword ptr [edi]; test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x000f7ab1: sbb ecx, dword ptr [edx - 0x3b7c0004]; adc byte ptr [ebp - 0x7c6b8a40], al; in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x001175c8: sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0009de97: sbb edi, dword ptr [eax + 0x106]; call dword ptr gs:[0x10]; 
0x0009ddea: sbb edi, dword ptr [eax + 0x107]; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0009defa: sbb edi, dword ptr [eax + 0x198]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0019111c: sbb edi, edi; inc dword ptr [ecx + 0x436f1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000d700c: sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x00077e83: sbb edx, dword ptr [eax - 0x73]; xchg al, dh; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x00151f8a: sbb edx, dword ptr [eax - 0x73]; xchg byte ptr [ebx + eax*8], ah; stc; call dword ptr [eax - 0x18]; 
0x0016298d: sbb edx, dword ptr [eax - 0x73]; xchg dword ptr [ebx + 0x72], ebp; stc; call dword ptr [eax + 0x6a]; 
0x0005ac61: sbb edx, dword ptr [eax - 0x73]; xchg eax, esi; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0003b948: sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x0013ccd8: sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x0016571c: sbb esi, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0015badc: sbb esi, ebx; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x000a9091: sbb esi, edx; cld; jmp dword ptr [esi - 0x70]; 
0x0014e78e: sbb esp, -0x3f; stc; call dword ptr [eax - 0x73]; 
0x00161e22: sbb esp, -0x4f; bnd call dword ptr [eax - 0x18]; 
0x0015f722: sbb esp, -0x76; bnd call dword ptr [eax - 0x18]; 
0x0003e3b3: sbb esp, -0x7b; stc; call dword ptr [eax - 0x73]; 
0x0010b804: sbb esp, 0x3c; stc; call dword ptr [eax - 0x18]; 
0x0015261b: sbb esp, 0x75; int1; call dword ptr [eax - 0x73]; 
0x00161062: sbb esp, 0x7a; int1; call dword ptr [eax - 0x73]; 
0x00028ccc: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x72f7dbac], cl; inc ebx; add al, 0x39; ret 0x9173; 
0x0003c299: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c340: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001a47fe: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0005a4a3: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00027438: scasb al, byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x39], bl; stc; call dword ptr [eax - 0x18]; 
0x0005d249: scasb al, byte ptr es:[edi]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x41], ch; stc; call dword ptr [eax - 0x18]; 
0x00127500: scasb al, byte ptr es:[edi]; arpl cx, di; call dword ptr [ebx + 0x57]; 
0x0012766a: scasb al, byte ptr es:[edi]; arpl cx, di; call dword ptr [edi + 0x50]; 
0x00196a67: scasb al, byte ptr es:[edi]; clc; call 0x182d19; add ebx, 0x3e622; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a57: scasb al, byte ptr es:[edi]; clc; call 0x182d19; add ebx, 0x3f472; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a87: scasb al, byte ptr es:[edi]; clc; call 0x182d19; add ebx, 0x40282; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938b1: scasb al, byte ptr es:[edi]; clc; call 0x182d19; add ebx, 0x411d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191751: scasb al, byte ptr es:[edi]; clc; call 0x182d19; add ebx, 0x430b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f7b1: scasb al, byte ptr es:[edi]; clc; call 0x182d19; add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cc2b: scasb al, byte ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x000be17b: scasb al, byte ptr es:[edi]; dec ebx; or al, 0; add ecx, 0x107e75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0014d64e: scasb al, byte ptr es:[edi]; hlt; dec dword ptr [ebp - 0xe9c537d]; call dword ptr [esi + 0x50]; 
0x000bae7b: scasb al, byte ptr es:[edi]; jle 0xbae8a; add byte ptr [ecx + 0x10b0f5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0015daed: scasb al, byte ptr es:[edi]; mov al, 0x70; stc; call dword ptr [ebp - 0x73]; 
0x001727a1: scasb al, byte ptr es:[edi]; pop esp; in eax, 0xf3; dec dword ptr [ebp - 0xcdb434a]; call dword ptr [ebp - 0x73]; 
0x0015f12e: scasb al, byte ptr es:[edi]; popfd; std; jmp dword ptr [esi - 0x70]; 
0x000dbd05: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000db34a: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00058ee4: scasb al, byte ptr es:[edi]; std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x00058e9a: scasb al, byte ptr es:[edi]; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x00050bc1: scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x0012d17d: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx + 0x548b240c], cl; and al, 4; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00090ef2: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov esi, 8; add ecx, 0x474; call dword ptr gs:[0x10]; 
0x0009b985: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbb4], cl; retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x000920f0: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0014b394: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x0005a3b4: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a8ddb: scasd eax, dword ptr es:[edi]; clc; jmp dword ptr [esi - 0x70]; 
0x00190e63: scasd eax, dword ptr es:[edi]; cmp dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001922e3: scasd eax, dword ptr es:[edi]; daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b8173: scasd eax, dword ptr es:[edi]; fcom qword ptr [eax]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009be9d: scasd eax, dword ptr es:[edi]; idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x00152674: scasd eax, dword ptr es:[edi]; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x0014ff6b: scasd eax, dword ptr es:[edi]; insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x53]; 
0x0016e289: scasd eax, dword ptr es:[edi]; je 0x16e285; call dword ptr [eax - 0x73]; 
0x00040f2b: scasd eax, dword ptr es:[edi]; lds eax, ptr [ecx]; fcom dword ptr [eax - 0x75]; inc esp; and al, 0x28; call eax; 
0x00128ddf: scasd eax, dword ptr es:[edi]; lock dec dword ptr [ebp - 0x64a677d]; call dword ptr [eax - 0x73]; 
0x00041016: scasd eax, dword ptr es:[edi]; mov byte ptr [ecx], 0xf8; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000a6f09: scasd eax, dword ptr es:[edi]; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x0018e3e3: scasd eax, dword ptr es:[edi]; popal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009f672: scasd eax, dword ptr es:[edi]; push cs; add byte ptr [ecx + 0x19779ec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00024f66: scasd eax, dword ptr es:[edi]; push ds; and dword ptr [eax], eax; lea eax, [eax - 0x680b4]; ret; 
0x00040a7c: scasd eax, dword ptr es:[edi]; ret 0x5750; 
0x00039ea2: scasd eax, dword ptr es:[edi]; ret 0x7c8b; 
0x0004092c: scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x000c26e9: scasd eax, dword ptr es:[edi]; ret 0x948b; 
0x0008174f: scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x0007560d: scasd eax, dword ptr es:[edi]; ret 0xffff; 
0x00041007: scasd eax, dword ptr es:[edi]; ret; 
0x00192de3: scasd eax, dword ptr es:[edi]; sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000529d0: scasd eax, dword ptr es:[edi]; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x000e8aad: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000e8574: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00058e06: scasd eax, dword ptr es:[edi]; std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x00058e2b: scasd eax, dword ptr es:[edi]; std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x0015dfb6: scasd eax, dword ptr es:[edi]; std; jmp dword ptr [esi - 0x70]; 
0x00128e16: scasw ax, word ptr es:[edi]; lock dec dword ptr [ebp - 0x64a677d]; call dword ptr [eax - 0x73]; 
0x0008c9c4: setae al; ret; 
0x000426eb: setb al; ret; 
0x000dc0da: setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00131003: setb dl; mov eax, edx; pop ebx; pop esi; ret; 
0x00034307: setbe al; ret; 
0x00107f55: sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0009a263: sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x0005278d: sete al; add esp, 0xc; movzx eax, al; ret; 
0x001524b0: sete al; add esp, 0xc; ret; 
0x0009a24d: sete al; movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x0011f3e4: sete al; movzx eax, al; neg eax; add esp, 0xc; ret; 
0x00092378: sete al; movzx eax, al; ret; 
0x0009a13e: sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x00149a35: sete al; pop ebx; movzx eax, al; ret; 
0x0003cda0: sete al; ret; 
0x00182ea5: sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x00129bf9: setg al; pop esi; pop edi; ret; 
0x00109648: setg dl; shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x000426dc: setle al; ret; 
0x0012a565: setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0016c592: setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0012a5a6: setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000f9ff9: setne al; add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x0016ba5a: setne al; add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x00087279: setne al; add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x0016a903: setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0016baf1: setne al; movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x001222d7: setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x00156395: setne al; movzx eax, al; neg eax; ret; 
0x0008cfee: setne al; movzx eax, al; pop ebx; ret; 
0x0003cc6b: setne al; movzx eax, al; ret; 
0x00124edf: setne al; pop edi; movzx eax, al; ret; 
0x0012284f: setne al; pop esi; pop edi; movzx eax, al; ret; 
0x000f7f0f: setne al; ret; 
0x00098ae1: setne al; shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00096597: setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0016ae5b: setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00084efb: setne dl; mov eax, edx; ret; 
0x00196a66: sfence; call 0x182d19; add ebx, 0x3e622; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a56: sfence; call 0x182d19; add ebx, 0x3f472; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a86: sfence; call 0x182d19; add ebx, 0x40282; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938b0: sfence; call 0x182d19; add ebx, 0x411d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00191750: sfence; call 0x182d19; add ebx, 0x430b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f7b0: sfence; call 0x182d19; add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a5bff: shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x000ad956: shl byte ptr [eax], 0x5f; pop esi; ret; 
0x0013f4f1: shl byte ptr [ebx], 0x89; loope 0x13f47f; ret 0x25; 
0x00137141: shl byte ptr [ecx + edi], 0xd0; jae 0x137150; cmp dword ptr [eax + 4], ecx; jne 0x137140; mov eax, dword ptr [eax + 0x18]; ret; 
0x0014cfca: shl byte ptr [ecx - 0x13], cl; jmp dword ptr [ebp - 0x77]; 
0x0015e44c: shl byte ptr [edx - 0x72b00000], 0x83; cld; js 0x15e447; call dword ptr [eax - 0x73]; 
0x0015e4fe: shl byte ptr [edx - 0x72b00000], 0x83; cld; js 0x15e4f9; call dword ptr [eax - 0x73]; 
0x0015e5cc: shl byte ptr [edx - 0x72b00000], 0x83; cld; js 0x15e5c7; call dword ptr [eax - 0x73]; 
0x00149a0c: shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x0018c0f3: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0019ec91: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000bf036: shl byte ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0019fb6c: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0004295d: shl byte ptr [esi - 0x7b], 0xd2; mov edx, 0x10; cmove eax, edx; ret; 
0x000b8e8d: shl dword ptr [eax + edx*8 + 0xc030010], 0x99; jmp ecx; 
0x000be812: shl dword ptr [ebx + 0x78], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6b1d: shl dword ptr [ecx + esi*8 + 0xc030010], 0x91; jmp ecx; 
0x001a3ff5: shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x1a3c20; xor eax, eax; ret; 
0x000a2ee2: shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000bf1b5: shl dword ptr [ecx], 1; retf 0xd285; je 0xbf190; bsr ecx, edx; add eax, ecx; ret; 
0x000bf03e: shl dword ptr [esi + 0xf], 0xd7; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001a3ff1: shl dword ptr [esi + 0xf], 0xd7; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x1a3c20; xor eax, eax; ret; 
0x0019f335: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0019fcf6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0019f320: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0019fcdc: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0019f30b: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0019f2f6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0019fcc2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x0019f3c2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019fc1c: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000bec75: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0019facc: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b82c1: shl eax, 0xdb; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001087d9: shl eax, 2; push eax; call 0x231a8; add esp, 0x18; pop ebx; ret; 
0x0013cffd: shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x000954da: shl eax, 4; pop edi; pop ebp; ret; 
0x00181f42: shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x00098ae4: shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0005f724: shl eax, 8; and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0003cbb2: shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00041ffc: shl eax, cl; ret; 
0x0003cc63: shl eax, cl; sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0005315f: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x00182d87: shl ebx, cl; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00146050: shl ecx, 4; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0009659a: shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0013d145: shl edx, 0x10; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0009615f: shl edx, 0x1c; and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0005445c: shl edx, 0x1f; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00054493: shl edx, 0x1f; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0013cdae: shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x0013d16b: shl edx, 8; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00155efa: shr ah, cl; jmp dword ptr [ebp - 0x77]; 
0x000b829f: shr al, 0x88; stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10dbfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6c5f: shr al, 0xc8; ror byte ptr [eax + eax], 0x81; rcr ebx, 0xf0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001669f7: shr al, 0xe3; and al, 0xfd; dec dword ptr [ebp + 0x1ce80076]; ret; 
0x000be23f: shr al, 0xe8; dec edx; or al, 0; add ecx, 0x107e2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0005a959: shr al, 1; mov eax, dword ptr [0xb8fffffd]; add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00084f27: shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00084f47: shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00085c37: shr al, 4; and eax, 1; ret; 
0x00085c47: shr al, 5; and eax, 1; ret; 
0x001371c4: shr al, 6; and eax, 1; pop ebx; ret; 
0x0018b6c6: shr al, cl; adc al, 0xd8; cli; jmp dword ptr [esi - 0x70]; 
0x000bae16: shr al, cl; adc dword ptr [edi + 0xc], edi; add byte ptr [ecx + 0x10b158c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000be116: shr al, cl; adc dword ptr [esp + ecx], ecx; add ecx, 0x107ed8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b16: shr al, cl; adc edx, eax; or al, 0; add ecx, 0x10f1a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000be134: shr al, cl; dec ebx; or al, 0; add ecx, 0x107eba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae34: shr al, cl; jle 0xbae45; add byte ptr [ecx + 0x10b13ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b8146: shr al, cl; loope 0xb80f5; or al, 0; add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b816b: shr al, cl; mov esp, 0x81000cab; shr dword ptr [edi + 0x30010dc], 0xc; xchg ecx, eax; jmp ecx; 
0x00168777: shr bl, 0x8f; nop; nop; nop; ret; 
0x000a8359: shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x0011d761: shr bl, cl; ret; 
0x0009e8bc: shr byte ptr [eax + 8], 1; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00101ad8: shr byte ptr [eax - 0x577bf0fa], 1; adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00168576: shr byte ptr [eax], 0xff; jo 0x16858f; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x001a5c79: shr byte ptr [ecx - 0x40], 1; add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x000bee92: shr byte ptr [ecx], 0xc2; jbe 0xbeed0; add eax, edi; pop edi; ret; 
0x000beea5: shr byte ptr [ecx], 0xc2; jbe 0xbeed0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000beeb5: shr byte ptr [ecx], 0xc2; jbe 0xbeed0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000beec5: shr byte ptr [ecx], 0xc2; jbe 0xbeed0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x00049679: shr byte ptr [ecx], 1; ret 0x8d52; 
0x00130167: shr byte ptr [ecx], 1; ret 0xe801; 
0x000a61bb: shr byte ptr [ecx], 1; ret 0xf001; 
0x0006a419: shr byte ptr [ecx], 1; ret; 
0x00072718: shr byte ptr [ecx], cl; fdivr dword ptr [ecx]; ret 0x8f0f; 
0x0018c243: shr byte ptr [edx - 1], cl; inc dword ptr [ecx + 0x47ec9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0012c51d: shr byte ptr [edx], 0x8d; xchg esp, esp; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x001488b1: shr ch, 0xff; mov ecx, dword ptr [esp + 0x1c]; movzx edx, dl; mov edi, dword ptr [ecx + edx*4 - 0x6e5ec]; add edi, ecx; jmp edi; 
0x000ac881: shr cl, 1; ret 0xffeb; 
0x0018ff54: shr dword ptr [0xc381ffff], 0xb8; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b6c98: shr dword ptr [ecx + 0x30010f0], 0xc; cdq; jmp ecx; 
0x000a7480: shr dword ptr [ecx], cl; ret; 
0x000b8172: shr dword ptr [edi + 0x30010dc], 0xc; xchg ecx, eax; jmp ecx; 
0x00028dbb: shr dword ptr [edi + 0x7c8b0000], 0x24; cmp al, 0x8d; xchg esp, ebp; jnp 0x28dc1; call dword ptr [eax + 0x68]; 
0x0015a31e: shr dword ptr [edi - 7], cl; call dword ptr [eax - 1]; 
0x000be246: shr dword ptr [edi], 0x7e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8f72: shr dword ptr [edi], 0xcf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be307: shr dword ptr [esi + 0x7d], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00093c02: shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001a5c0b: shr eax, 0x18; ret; 
0x0010964b: shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x0009606a: shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003abba: shr eax, 0x1f; pop edi; ret; 
0x0003a917: shr eax, 0x1f; ret; 
0x0003b60c: shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x0008ccf4: shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1ac8], eax; ret; 
0x0016f9df: shr eax, 0xfb; xchg esp, eax; cld; jmp dword ptr [esi - 0x70]; 
0x0008f3ff: shr eax, 1; je 0x8f419; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008f94f: shr eax, 1; je 0x8f96c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00098a8a: shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0013cfd3: shr eax, 1; ret; 
0x00052968: shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x52930; jmp eax; 
0x0008f6fc: shr eax, 3; je 0x8f730; mov eax, edi; call dword ptr gs:[0x10]; 
0x0013c5db: shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0009e60f: shr eax, 4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x001a5bfb: shr eax, 4; add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0013d3d0: shr eax, 8; and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0012abed: shr eax, cl; and eax, 3; ret; 
0x000420e8: shr eax, cl; ret; 
0x00041132: shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00035dc1: shr ebx, cl; adc ecx, dword ptr [ebp - 0x7affd98c]; sal byte ptr [ebp + 0x2a], 0x83; ret; 
0x0005412f: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0003b60f: shr ecx, 0x10; or eax, ecx; ret; 
0x00079264: shr ecx, 1; sbb eax, 0x83fffffd; jmp dword ptr [eax]; 
0x00109697: shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000a2194: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop ebx; pop esi; pop edi; ret; 
0x0010961f: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000be206: shr edi, 0x7d; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0013d3d9: shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0013d0ee: shr edx, 0x18; movzx eax, ax; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x000398d7: shr edx, 0x18; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x398c0; ret; 
0x0015eb9b: shr edx, 0xf2; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x0017702a: shr edx, 0xff; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00042152: shr edx, cl; test cl, 0x20; je 0x4215d; mov eax, edx; xor edx, edx; ret; 
0x0012437b: shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0011f900: shufps xmm0, xmmword ptr [eax], 0; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00077286: sidt [ecx - 0x4fb73]; call dword ptr [eax + 0x50]; 
0x00076ca5: sidt [ecx - 0x51373]; call dword ptr [eax + 0x50]; 
0x000929a3: sldt word ptr [0x1a446f]; mov eax, dword ptr [eax + 0x3af4]; ret; 
0x0008ccb3: sldt word ptr [0x1aa15f]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008cc93: sldt word ptr [0x1aa17f]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008cc73: sldt word ptr [0x1aa19f]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008cc53: sldt word ptr [0x1aa1bf]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008b153: sldt word ptr [0x1abcbf]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x00146da1: sldt word ptr [eax]; add byte ptr [ebx + 0xc8b10c4], al; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x00110f2d: sldt word ptr [eax]; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0014db47: sldt word ptr [eax]; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x00124357: sldt word ptr [eax]; and eax, 0xfffff000; or eax, edx; ret; 
0x001a32a4: sldt word ptr [eax]; jne 0x1a30a0; xor eax, eax; pop edi; ret; 
0x00137aea: sldt word ptr [ebx - 0x7f72e714]; jb 0x137b5a; stc; call dword ptr [eax - 0x18]; 
0x0008ccd3: sldt word ptr [ecx + 0x1aa13fc2]; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8cce8; ret; 
0x0008618a: sldt word ptr [ecx + 0x1b0c88c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0007e428: stc; add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x0007225b: stc; add bh, byte ptr [ecx]; fnstenv [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x000d19fd: stc; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x000c07d1: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x001a7e3e: stc; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x9584; 
0x001a047d: stc; add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0019ed49: stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00156c2d: stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00040864: stc; add dword ptr [ebp + eax - 0x18], esi; ret; 
0x00128eb9: stc; add dword ptr [edi + 0x2b], edi; add esp, 8; pop ebx; ret; 
0x0003e641: stc; add dword ptr [edi + 0x74], edi; sub esp, 8; push 0; push edx; call eax; 
0x0016f8a7: stc; add dword ptr [edi], ecx; test byte ptr [ecx - 0x7d000000], bl; rcr byte ptr [ebx], 0x89; loope 0x16f83e; ret 0x25; 
0x0008defb: stc; add eax, 0x84e8b00; mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000e7227: stc; add eax, 0xb2870f; add byte ptr [eax], al; mov eax, dword ptr [esi + ecx*4 - 0x700b0]; add eax, esi; jmp eax; 
0x0010976e: stc; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010961b: stc; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0016a5ae: stc; add esi, dword ptr [esi + 0xe]; mov eax, 2; pop ebx; pop esi; ret; 
0x0003d5ab: stc; and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00120841: stc; call dword ptr [eax + 0x50]; 
0x00142838: stc; call dword ptr [eax + 0x51]; 
0x000234c8: stc; call dword ptr [eax + 0x52]; 
0x00039798: stc; call dword ptr [eax + 0x53]; 
0x000a9f1f: stc; call dword ptr [eax + 0x55]; 
0x00030003: stc; call dword ptr [eax + 0x56]; 
0x00056aad: stc; call dword ptr [eax + 0x57]; 
0x0002871d: stc; call dword ptr [eax + 0x68]; 
0x000247d5: stc; call dword ptr [eax + 0x6a]; 
0x00173ecb: stc; call dword ptr [eax + 0x6a]; add al, ch; fild dword ptr [esi - 0x10]; inc dword ptr [ebx - 0x17aaeb3c]; ret 0xeaf2; 
0x0013e5e4: stc; call dword ptr [eax + 0x6a]; add al, ch; ret 0xf39f; 
0x00167e91: stc; call dword ptr [eax + 0x6a]; pop es; call 0x150d90; add esp, 0x1c; ret; 
0x00166ca1: stc; call dword ptr [eax + 0x6a]; push es; call 0x150d90; add esp, 0x1c; ret; 
0x00103939: stc; call dword ptr [eax - 0x17]; 
0x000247fc: stc; call dword ptr [eax - 0x18]; 
0x0014e841: stc; call dword ptr [eax - 0x18]; aaa; push ebp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0010fba4: stc; call dword ptr [eax - 0x18]; aam 0x41; bnd jmp dword ptr [esi - 0x70]; 
0x00094566: stc; call dword ptr [eax - 0x18]; adc bh, al; stc; jmp dword ptr [esi - 0x70]; 
0x000c1880: stc; call dword ptr [eax - 0x18]; clc; and al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x0010ac7e: stc; call dword ptr [eax - 0x18]; cli; nop; bnd jmp dword ptr [esi - 0x70]; 
0x00121440: stc; call dword ptr [eax - 0x18]; cmp byte ptr [ecx], ch; int1; jmp dword ptr [esi - 0x70]; 
0x001854ef: stc; call dword ptr [eax - 0x18]; cmp ebp, edi; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x000c7b2d: stc; call dword ptr [eax - 0x18]; dec ebx; ret 0xfff6; 
0x00150a8b: stc; call dword ptr [eax - 0x18]; in eax, dx; xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x00077a37: stc; call dword ptr [eax - 0x18]; inc ecx; ret; 
0x0014e701: stc; call dword ptr [eax - 0x18]; ja 0x14e75d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014ec01: stc; call dword ptr [eax - 0x18]; ja 0x14ec58; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00096f29: stc; call dword ptr [eax - 0x18]; jmp edx; 
0x0010ed5f: stc; call dword ptr [eax - 0x18]; jns 0x10ed73; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0014eac1: stc; call dword ptr [eax - 0x18]; mov bh, 0x52; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e5c1: stc; call dword ptr [eax - 0x18]; mov bh, 0x57; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0008b4c6: stc; call dword ptr [eax - 0x18]; mov dl, 0x88; cli; jmp dword ptr [esi - 0x70]; 
0x0014e481: stc; call dword ptr [eax - 0x18]; neg dword ptr [eax - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0014e981: stc; call dword ptr [eax - 0x18]; not dword ptr [ebx - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0011bd89: stc; call dword ptr [eax - 0x18]; pop ds; ret; 
0x00077a1b: stc; call dword ptr [eax - 0x18]; pop ebp; ret; 
0x0009481d: stc; call dword ptr [eax - 0x18]; pop ebx; cmc; stc; jmp dword ptr [esi - 0x70]; 
0x00146071: stc; call dword ptr [eax - 0x18]; pop es; fucomp st(6); jmp dword ptr [esi - 0x70]; 
0x0014e661: stc; call dword ptr [eax - 0x18]; pop ss; push edi; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014eb61: stc; call dword ptr [eax - 0x18]; pop ss; push edx; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014dad1: stc; call dword ptr [eax - 0x18]; push edi; ja 0x14dacb; jmp dword ptr [esi - 0x70]; 
0x0014e521: stc; call dword ptr [eax - 0x18]; push edi; pop eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014ea21: stc; call dword ptr [eax - 0x18]; push edi; push ebx; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00122206: stc; call dword ptr [eax - 0x18]; ret 0xf588; 
0x00099db6: stc; call dword ptr [eax - 0x18]; ret 0xf99f; 
0x0009be66: stc; call dword ptr [eax - 0x18]; ret 0xfe93; 
0x000c20b5: stc; call dword ptr [eax - 0x18]; ret; 
0x00093aad: stc; call dword ptr [eax - 0x18]; retf; add bh, dl; jmp dword ptr [esi - 0x70]; 
0x00098f2f: stc; call dword ptr [eax - 0x18]; stc; ret 0xfffe; 
0x000a903e: stc; call dword ptr [eax - 0x18]; stosb byte ptr es:[edi], al; mov edx, 0x2c89fff8; and al, 0x89; ret; 
0x00094ff6: stc; call dword ptr [eax - 0x18]; sub ch, 0xf9; jmp dword ptr [esi - 0x70]; 
0x000779e3: stc; call dword ptr [eax - 0x18]; xchg ebp, eax; ret; 
0x0014e8e1: stc; call dword ptr [eax - 0x18]; xchg edi, eax; push esp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014e7a1: stc; call dword ptr [eax - 0x18]; xlatb; push ebp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00059fa1: stc; call dword ptr [eax - 0x18]; xlatb; sbb byte ptr [eax + eax], cl; add esp, 0x1c; ret; 
0x0005a1a1: stc; call dword ptr [eax - 0x18]; xlatb; wait; std; jmp dword ptr [esi - 0x70]; 
0x0014d846: stc; call dword ptr [eax - 0x18]; xor ah, byte ptr [ebp - 0x12]; jmp dword ptr [esi - 0x70]; 
0x00120544: stc; call dword ptr [eax - 0x18]; xor al, 0x38; int1; jmp dword ptr [esi - 0x70]; 
0x00122355: stc; call dword ptr [eax - 0x39]; 
0x0002569f: stc; call dword ptr [eax - 0x73]; 
0x001221ff: stc; call dword ptr [eax - 0x73]; or ebx, 0x5a; stc; call dword ptr [eax - 0x18]; ret 0xf588; 
0x00086cb3: stc; call dword ptr [eax - 0x75]; 
0x000ed390: stc; call dword ptr [eax - 0x77]; 
0x000247a4: stc; call dword ptr [eax - 1]; 
0x0005f884: stc; call dword ptr [ebp + 0x50]; 
0x0005fc3f: stc; call dword ptr [ebp + 0x56]; 
0x0009597e: stc; call dword ptr [ebp + 0x57]; 
0x0016ea1f: stc; call dword ptr [ebp + 0x6a]; 
0x0015daf0: stc; call dword ptr [ebp - 0x73]; 
0x0013274c: stc; call dword ptr [ebp - 1]; 
0x0003f28d: stc; call dword ptr [ebx + 0x50]; 
0x00127502: stc; call dword ptr [ebx + 0x57]; 
0x00047ef9: stc; call dword ptr [ebx + 0x6a]; 
0x00146640: stc; call dword ptr [ebx - 0x18]; 
0x001501ab: stc; call dword ptr [ebx - 0x73]; 
0x0005f94a: stc; call dword ptr [ecx + 0x50]; 
0x00122d38: stc; call dword ptr [ecx + 0x51]; 
0x0008bda8: stc; call dword ptr [ecx + 0x52]; 
0x00107c42: stc; call dword ptr [ecx + 0x6a]; 
0x00154fd3: stc; call dword ptr [ecx - 0x17]; 
0x0013a7c6: stc; call dword ptr [ecx - 0x77]; 
0x001603e2: stc; call dword ptr [ecx - 1]; 
0x0012766c: stc; call dword ptr [edi + 0x50]; 
0x00172080: stc; call dword ptr [edi + 0x52]; 
0x0017d10e: stc; call dword ptr [edi + 0x53]; 
0x00140c1f: stc; call dword ptr [edi + 0x55]; 
0x0016fe2a: stc; call dword ptr [edi + 0x56]; 
0x000248a0: stc; call dword ptr [edi + 0x57]; 
0x0005240d: stc; call dword ptr [edi + 0x6a]; 
0x001278cf: stc; call dword ptr [edi - 0x7f]; 
0x00027f1f: stc; call dword ptr [edi - 1]; 
0x00027a8f: stc; call dword ptr [edx + 0x50]; 
0x000fad37: stc; call dword ptr [edx + 0x52]; 
0x0016ab9e: stc; call dword ptr [edx + 0x6a]; 
0x0013ec51: stc; call dword ptr [edx - 0x46]; 
0x0002605b: stc; call dword ptr [edx - 0x73]; 
0x00038237: stc; call dword ptr [edx - 0x77]; 
0x00106264: stc; call dword ptr [edx - 1]; 
0x00033dc9: stc; call dword ptr [esi + 0x50]; 
0x00060c73: stc; call dword ptr [esi + 0x52]; 
0x0002343a: stc; call dword ptr [esi + 0x53]; 
0x0017c789: stc; call dword ptr [esi + 0x57]; 
0x00056a79: stc; call dword ptr [esi + 0x6a]; 
0x00033e7c: stc; call dword ptr [esi - 1]; 
0x0009bc31: stc; call dword ptr gs:[0x10]; 
0x0013df8e: stc; cli; jmp dword ptr [esi - 0x3f]; 
0x0012d036: stc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000e7256: stc; das; ja 0xe75d0; mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x0008c3c8: stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x0010fcb3: stc; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0010841b: stc; dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x000a35f7: stc; dec dword ptr [ebp - 0x6575779]; call dword ptr [eax - 0x73]; 
0x000a3b76: stc; dec dword ptr [ebp - 0x657977d]; call dword ptr [eax - 0x73]; 
0x0009b460: stc; dec dword ptr [ebp - 0x6672f7b]; call dword ptr [eax + 0x68]; 
0x0013e8bd: stc; dec dword ptr [ebp - 0x67bcb67]; call dword ptr [eax + 0x53]; 
0x0013e84e: stc; dec dword ptr [ebp - 0x67bcb75]; call dword ptr [eax - 0x77]; 
0x0013a7c0: stc; dec dword ptr [ebp - 0x697d57a]; call dword ptr [ecx - 0x77]; 
0x0010363c: stc; dec dword ptr [ebp - 0x6a7e671]; call dword ptr [eax - 0x77]; 
0x000f79f7: stc; dec dword ptr [ebp - 0x6a81e80]; call dword ptr [ebx + 0x50]; 
0x00103933: stc; dec dword ptr [ebp - 0x6b0bf71]; call dword ptr [eax - 0x17]; 
0x0003f9c9: stc; dec dword ptr [ebp - 0x6c0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00126271: stc; dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x000a0406: stc; dec dword ptr [ebx - 0x72ebdbac]; sbb al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x0009c9d5: stc; dec dword ptr [ebx - 0x78727783]; pushfd; cdq; stc; call dword ptr [eax + 0x68]; 
0x000f828b: stc; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012361b: stc; dec dword ptr [ecx + 0x2c938d16]; jle 0x12361a; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0003f747: stc; dec dword ptr [ecx - 0x14d3dbbc]; mov ebx, 0x3cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0005f264: stc; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x00027e91: stc; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + eax*4], edi; stc; jmp dword ptr [esi - 0x77]; 
0x0003f6f4: stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003f3df: stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x0003f9cf: stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003f49a: stc; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003f2d6: stc; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x00121f3a: stc; dec dword ptr [ecx - 0x7972af0d]; retf; pop edx; stc; call dword ptr [eax - 0x18]; 
0x00039a84: stc; dec dword ptr [edi]; inc ebp; call 0x2b276; jmp dword ptr [esi - 0x70]; 
0x001191ea: stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x00154efd: stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0011fd8f: stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00091df3: stc; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00059d23: stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x59cb9; ret 0x40c7; 
0x000f82ad: stc; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000ec553: stc; inc dword ptr [ebx - 0x17a8f314]; ret 0x644; 
0x0008c16e: stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0008e218: stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x000852f2: stc; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0006e476: stc; inc dword ptr [ebx - 0x71f0fa05]; ret 0xfff2; 
0x0008be0f: stc; inc dword ptr [ebx - 0x72aff314]; add dword ptr [edi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x0008bd9e: stc; inc dword ptr [ebx - 0x72aff314]; or dword ptr [esi], 0x4f; stc; call dword ptr [ecx + 0x52]; 
0x000a4542: stc; inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [ecx + ebp*2], -7; call dword ptr [eax + 0x6a]; 
0x000399a3: stc; inc dword ptr [ebx - 0x7c72f314]; sar dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x0009450b: stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0010ee42: stc; inc dword ptr [ecx]; int1; jmp ecx; 
0x001487f7: stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x00106836: stc; inc dword ptr [ecx]; retf; jmp ebx; 
0x000f8057: stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x000ec67a: stc; inc dword ptr [ecx]; xlatb; jmp edi; 
0x001a0c5d: stc; inc esi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00078823: stc; ja 0x78850; movzx ecx, cl; mov edi, dword ptr [ebp + ecx*4 - 0x71b54]; add edi, ebp; jmp edi; 
0x0004d694: stc; jmp dword ptr [ebp - 0x39]; 
0x00032786: stc; jmp dword ptr [ebp - 0x75]; 
0x00120055: stc; jmp dword ptr [ebp - 0x77]; 
0x00126452: stc; jmp dword ptr [ecx]; 
0x00199c56: stc; jmp dword ptr [esi + 0xf]; 
0x000846e6: stc; jmp dword ptr [esi - 0x70]; 
0x00027e9b: stc; jmp dword ptr [esi - 0x77]; 
0x0006582b: stc; jmp ecx; 
0x00107f13: stc; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0003d61c: stc; mov eax, esi; call dword ptr gs:[0x10]; 
0x000930c0: stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0018c0d4: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000a971d: stc; or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x71208]; jmp eax; 
0x000a97dd: stc; or byte ptr [edi + 0x2a], dh; add eax, dword ptr [eax + ecx*4 - 0x711e4]; jmp eax; 
0x000674a7: stc; or dh, byte ptr [edx + ebx*8 - 0x7d]; mov ebp, 0xfffffa6c; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0011dbf4: stc; or dword ptr [eax + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000c3e31: stc; pop edi; cmovg eax, edx; ret; 
0x001a31a2: stc; pop edi; ret; 
0x00063e8a: stc; pop edx; jbe 0x64824; mov edi, eax; jmp edx; 
0x0006f6e5: stc; pop edx; jbe 0x705e3; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00049a63: stc; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c08fe: stc; pop esi; ret; 
0x00179fc3: stc; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00098f33: stc; ret 0xfffe; 
0x00138a50: stc; sti; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x001a2371: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000dc0c3: stc; sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xdc0d0; mov eax, edx; ret; 
0x0019d836: std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00198732: std; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x001a068a: std; add al, 0x76; ret; 
0x0005d0f2: std; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ecx*4 - 7], ebx; call dword ptr [eax - 0x18]; 
0x001a4989: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x00080587: std; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001a2adf: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001785bc: std; add dword ptr [edi], ecx; test ah, bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf00003], al; ret; 
0x0019922d: std; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0015d884: std; call dword ptr [eax + 0x50]; 
0x0005f7c8: std; call dword ptr [eax - 0x73]; 
0x0005f827: std; call dword ptr [ebp + 0x50]; 
0x0010a1e3: std; call dword ptr [ecx + 0x6a]; 
0x0015f6de: std; call dword ptr [edi + 0x31]; 
0x001691b5: std; cld; jmp dword ptr [esi - 0x70]; 
0x001669fb: std; dec dword ptr [ebp + 0x1ce80076]; ret; 
0x0005a750: std; dec dword ptr [ebp - 0x676837a]; call dword ptr [eax - 0x73]; 
0x00058e07: std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x00058e2c: std; dec dword ptr [ebx - 0x36474b]; dec dword ptr [ebp - 0x6778f7a]; call dword ptr [eax - 0x73]; 
0x00055705: std; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0005d233: std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x6747f7a]; call dword ptr [eax - 0x73]; 
0x0005d175: std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x6747f7d]; call dword ptr [eax - 0x73]; 
0x0005d101: std; dec dword ptr [ebx - 0x8b6b]; dec dword ptr [ebp - 0x6747f7e]; call dword ptr [eax - 0x73]; 
0x0003b789: std; fstp st(1); ret; 
0x0005af9e: std; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0005ad0e: std; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000ece79: std; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x000be279: std; jge 0xbe28c; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0013ded7: std; jmp dword ptr [ebp - 0x39]; 
0x00045f47: std; jmp dword ptr [esi - 0x70]; 
0x000b6c45: std; lock adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0018c0d8: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191323: std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0019f4c5: std; mov eax, 0; jne 0x19fd86; pop ebx; ret; 
0x001a259b: std; mov eax, 0; jne 0x1a2670; pop ebx; ret; 
0x00092e20: std; or byte ptr [ebp + ecx*4 - 0x15], dh; ret 0x8d2e; 
0x000b83ff: std; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00090ad8: std; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001854f4: std; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x000ea404: std; pop ds; ja 0xea7bf; mov eax, dword ptr [ebx + ebp*4 - 0x6fe68]; add eax, ebx; jmp eax; 
0x001a31d2: std; pop edi; ret; 
0x0011197f: std; ret 0; 
0x001372cf: std; retf 0xfff4; add esp, 0x1c; ret; 
0x00072ac8: sti; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0013b62a: sti; adc al, 0xf; xchg esp, eax; ret; 
0x0002ebb2: sti; add al, 0xf; xchg dword ptr [eax + 0x9000000], esp; ret; 
0x0018c155: sti; add byte ptr [eax], al; add al, ch; mov ebx, 0x81ffff6b; ret; 
0x000374b3: sti; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ce06], al; ret 0; 
0x0010df85: sti; add cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x000302a8: sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x0010df0f: sti; add dword ptr [edi], ecx; xchg ebp, eax; ret; 
0x0013c625: sti; add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x000d4a68: sti; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc139; 
0x00048caf: sti; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc639; 
0x00065d05: sti; and byte ptr [edi + 0x24], dh; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72c7c]; jmp eax; 
0x0014d8fa: sti; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x0017b49e: sti; call dword ptr [ebp + 0x57]; 
0x0017a3be: sti; call dword ptr [ebp - 0x77]; 
0x000910f2: sti; call dword ptr gs:[0x10]; 
0x00191b57: sti; das; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018293b: sti; dec dword ptr [ebp + 0x448b0076]; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x000eda73: sti; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0017e9b0: sti; dec dword ptr [ebp - 0x634df7a]; call dword ptr [eax - 0x73]; 
0x0008254e: sti; dec dword ptr [ebp - 0x66ccf7a]; call dword ptr [eax - 0x73]; 
0x000779e9: sti; dec dword ptr [ebp - 0x682b37a]; call dword ptr [eax - 0x73]; 
0x0018370a: sti; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0017adf1: sti; dec dword ptr [ebx - 0xef43]; dec dword ptr [ebp - 0x6355b79]; call dword ptr [eax - 0x73]; 
0x000a506c: sti; dec dword ptr [ecx - 0x4517dbe4]; add esi, edi; jmp dword ptr [esi - 0x70]; 
0x0017ded1: sti; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x000e4f22: sti; fimul dword ptr [edi]; inc esp; ret 0x548b; 
0x000b82a7: sti; fist dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000a48c8: sti; idiv edi; pop ebx; pop esi; pop edi; ret; 
0x00138a51: sti; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000a4ba3: sti; inc dword ptr [ebx - 0x17aceb3c]; add byte ptr [esi], 0xfe; jmp dword ptr [esi - 0x70]; 
0x001088b7: sti; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x0018da57: sti; insb byte ptr es:[edi], dx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cff1: sti; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x001a09de: sti; int1; jmp dword ptr [esi - 0x70]; 
0x00079393: sti; ja 0x793c0; mov edi, dword ptr [ebp + ebx*4 - 0x71910]; add edi, ebp; jmp edi; 
0x001396e1: sti; jecxz 0x1396e3; jmp dword ptr [esi - 0x70]; 
0x00077d70: sti; jmp dword ptr [esi - 0x70]; 
0x0018c094: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008ee30: sti; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0018f1b8: sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911b8: sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00085f29: sti; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00095181: sti; mov ecx, 7; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x000345d1: sti; mov esi, 0xc4830008; adc byte ptr [ebp - 0x76238a40], al; ret; 
0x0018f207: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911f7: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000f9fc6: sti; or dh, byte ptr [ecx + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0007647e: sti; or eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x0010ac7c: sti; pop eax; stc; call dword ptr [eax - 0x18]; 
0x001a31c2: sti; pop edi; ret; 
0x00147987: sti; push dword ptr [eax + esi - 0x75]; test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000d1b57: sti; push dword ptr [esi + eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00072370: sti; push ebx; ja 0x72463; mov eax, dword ptr [ebp - 0x500]; add eax, dword ptr [eax + ebx*4 - 0x722c8]; jmp eax; 
0x00052829: sti; push es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00108bf1: sti; ret 0xfff1; 
0x00124551: sti; sal ebx, 0xff; add esp, 0x1c; ret; 
0x0014bc8c: sti; sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x0013a556: sti; stc; call dword ptr [eax - 0x18]; 
0x0009a961: sti; test edi, edi; jmp dword ptr [esi - 0x70]; 
0x0016f9e1: sti; xchg esp, eax; cld; jmp dword ptr [esi - 0x70]; 
0x0009697c: sti; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008eab7: sti; xor eax, eax; ret; 
0x0009443d: sti; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x000e4b35: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000fabc1: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0005a5b2: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0014fe4d: stosb byte ptr es:[edi], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x0019c102: stosb byte ptr es:[edi], al; bnd call dword ptr ss:[ebx - 0x18]; or eax, 0x81fffe6c; ret; 
0x0010bfcb: stosb byte ptr es:[edi], al; cmp cl, bh; call dword ptr [eax + 0x6a]; 
0x00194e6b: stosb byte ptr es:[edi], al; fdivp st(6); inc dword ptr [ecx + 0x40061c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001392e2: stosb byte ptr es:[edi], al; hlt; jmp dword ptr [esi - 0x70]; 
0x00138432: stosb byte ptr es:[edi], al; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00132882: stosb byte ptr es:[edi], al; je 0x13287c; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x000bfefc: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000a9042: stosb byte ptr es:[edi], al; mov edx, 0x2c89fff8; and al, 0x89; ret; 
0x000b831e: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10db7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8301: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10db9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8262: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10dbbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b82d4: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10dbc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82bd: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10dbe0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b82a2: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10dbfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8280: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10dc1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00122c76: stosb byte ptr es:[edi], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xor dword ptr [esi - 7], ebx; call dword ptr [eax + 0x55]; 
0x000d5943: stosb byte ptr es:[edi], al; out 0xff, eax; inc dword ptr [ebx - 0x6274fb14]; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x000f03a7: stosb byte ptr es:[edi], al; push edi; stc; call dword ptr [eax - 0x18]; 
0x001244a2: stosb byte ptr es:[edi], al; ret 0xfff3; 
0x000f4472: stosb byte ptr es:[edi], al; ret 0xfffc; 
0x000d01cb: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x000a8dc2: stosb byte ptr es:[edi], al; stc; call dword ptr [edx - 0x73]; 
0x000b827f: stosb byte ptr es:[edi], al; stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10dc1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008c542: stosb byte ptr es:[edi], al; test edx, edi; call dword ptr [eax + 0x6a]; 
0x00185451: stosd dword ptr es:[edi], eax; aaa; clc; jmp dword ptr [esi - 0x70]; 
0x00082a14: stosd dword ptr es:[edi], eax; adc al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00112ff1: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x00083bc9: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000399a0: stosd dword ptr es:[edi], eax; add byte ptr [esi - 7], dl; inc dword ptr [ebx - 0x7c72f314]; sar dword ptr [esi], 1; stc; call dword ptr [eax - 0x18]; 
0x000a9f25: stosd dword ptr es:[edi], eax; clc; call dword ptr [esi + 0x50]; 
0x0018cf4b: stosd dword ptr es:[edi], eax; cli; jmp dword ptr [esi - 0x70]; 
0x0005f261: stosd dword ptr es:[edi], eax; cmp dword ptr [edi], -7; dec dword ptr [ecx - 0x197cdbc4]; and dh, dh; ret 0xf50; 
0x0003004a: stosd dword ptr es:[edi], eax; cmp edi, ecx; call dword ptr [eax + 0x56]; 
0x0019bf52: stosd dword ptr es:[edi], eax; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x85474]; sub eax, ecx; pop ebx; ret; 
0x0019e766: stosd dword ptr es:[edi], eax; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0019bf59: stosd dword ptr es:[edi], eax; idiv edi; sub eax, ecx; pop ebx; ret; 
0x000f0521: stosd dword ptr es:[edi], eax; ja 0xf051f; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00199c83: stosd dword ptr es:[edi], eax; lodsb al, byte ptr [esi]; sar ecx, 1; jmp dword ptr [esi + 0xf]; 
0x0017bf65: stosd dword ptr es:[edi], eax; mov dh, 0x76; stc; call dword ptr [ebp + 0x56]; 
0x000bfef8: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00199c5b: stosd dword ptr es:[edi], eax; mov ecx, ss; stc; jmp dword ptr [esi + 0xf]; 
0x0014daa4: stosd dword ptr es:[edi], eax; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00122e9c: stosd dword ptr es:[edi], eax; or al, 0; add byte ptr [ebp - 0x69d557d], cl; call dword ptr [ecx + 0x51]; 
0x000b818e: stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10dc8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b816e: stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10dcaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b8149: stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10dcd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00122d30: stosd dword ptr es:[edi], eax; or al, byte ptr [eax]; add byte ptr [ebp - 0x6a03e7d], cl; call dword ptr [ecx + 0x51]; 
0x0010a864: stosd dword ptr es:[edi], eax; pop eax; stc; call dword ptr [eax - 0x18]; 
0x000a2198: stosd dword ptr es:[edi], eax; pop ebx; pop esi; pop edi; ret; 
0x00109623: stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0011ebf1: stosd dword ptr es:[edi], eax; push ebx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005ab6b: stosd dword ptr es:[edi], eax; ret 0x1d; 
0x00196a6a: stosd dword ptr es:[edi], eax; ret 0xfffe; 
0x000c1720: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x000c20b4: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; ret; 
0x000c1710: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000aae5e: stosd dword ptr es:[edi], eax; stc; call dword ptr [edx - 0x73]; 
0x0015e33f: stosd dword ptr es:[edi], eax; std; jmp dword ptr [esi - 0x70]; 
0x000a9f1c: stosd dword ptr es:[edi], eax; xor al, 0x84; stc; call dword ptr [eax + 0x55]; 
0x0013a708: str word ptr [ebx + 0xc480]; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00049a21: str word ptr [ecx]; ret 0x9d74; 
0x000c7de1: str word ptr [ecx]; ret 0x9e74; 
0x00077dfb: sub ah, 0x8e; stc; call dword ptr [eax - 0x73]; 
0x000a9dc7: sub ah, 0x9b; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a9f97: sub ah, 0x9c; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a6f47: sub ah, 0xc7; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1765a4]; cmove eax, edx; ret; 
0x001590a3: sub ah, 0xfe; int1; call dword ptr [eax + 0x6a]; 
0x00067dea: sub ah, 0xff; jmp dword ptr [esi - 0x70]; 
0x000c0a87: sub ah, 1; add byte ptr [eax], al; ret; 
0x000a8ee2: sub ah, byte ptr [edx - 0x3b7c0009]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00174b7a: sub ah, dh; ljmp 0x89c1:0x89fa89ff; ret; 
0x00142219: sub al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0009dde9: sub al, 0x1b; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x00071044: sub al, 0x20; add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x44c7; 
0x000544e0: sub al, 0x24; add esp, 0x1c; ret; 
0x0009bc44: sub al, 0x24; call 0x231a0; mov dword ptr [esp], esi; call edi; 
0x0015d81d: sub al, 0x24; call ebx; 
0x0015d47f: sub al, 0x24; call edi; 
0x00025ea1: sub al, 0x24; call esi; 
0x00182d2a: sub al, 0x24; ret; 
0x00183bb8: sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x0008543b: sub al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x001567d8: sub al, 0x39; ret; 
0x00107379: sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00097e2f: sub al, 0x3b; add byte ptr [eax], al; push eax; call 0x8e510; add esp, 0x1c; ret; 
0x0004975a: sub al, 0x40; stc; call dword ptr [eax - 0x18]; 
0x0013e9a9: sub al, 0x50; push dword ptr [esp + 0x2c]; call 0x13df10; add esp, 0x2c; ret; 
0x0009875a: sub al, 0x52; call 0x92d50; add esp, 0x20; add esp, 0xc; ret; 
0x0008c73e: sub al, 0x52; push ecx; push edi; call eax; 
0x0008825c: sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x001727b0: sub al, 0x55; push esi; push 3; push edi; call dword ptr [eax]; 
0x0016f5e6: sub al, 0x58; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0006049b: sub al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0008bd33: sub al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x00023524: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001388a4: sub al, 0x61; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0011d59a: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x11d5a9; add esp, 0x38; pop ebx; ret; 
0x0011d60a: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x11d619; add esp, 0x38; pop ebx; ret; 
0x00120c3f: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x120c4e; add esp, 0x38; pop ebx; ret; 
0x00128b0d: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x128b1b; add esp, 0x3c; ret; 
0x0009a1ae: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x9a1ff; add esp, 0x38; pop ebx; ret; 
0x0009e016: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x9e025; add esp, 0x38; pop ebx; ret; 
0x000d7c40: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xd7c4f; add esp, 0x38; pop ebx; ret; 
0x000d94ef: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xd9510; add esp, 0x38; pop ebx; ret; 
0x001408a8: sub al, 0x66; cmp ebx, 0x950f0308; ret; 
0x0014859d: sub al, 0x6a; add byte ptr [ebp - 0x18], dl; retf 0xfff8; dec dword ptr [ecx - 0x7693dbbc]; ret; 
0x0010a1dd: sub al, 0x6a; jg 0x10a1c9; mov ecx, edi; std; call dword ptr [ecx + 0x6a]; 
0x0012ba97: sub al, 0x6a; pushfd; call 0x11b810; add esp, 0x20; add esp, 0xc; ret; 
0x001a2372: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000d6c45: sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x0002dfeb: sub al, 0x7a; stc; call dword ptr [eax + 0x68]; 
0x0002de7a: sub al, 0x7a; stc; call dword ptr [eax - 0x73]; 
0x00029ea8: sub al, 0x7b; stc; call dword ptr [eax - 0x73]; 
0x000d7a78: sub al, 0x7e; stc; call dword ptr [eax + 0x56]; 
0x0017f23c: sub al, 0x7f; stc; call dword ptr [eax - 0x73]; 
0x000c5710: sub al, 0x81; ret 0; 
0x001210c2: sub al, 0x83; in al, dx; add al, 0x89; ret; 
0x000e4b13: sub al, 0x83; in al, dx; or byte ptr [esi + 0x53], dl; call eax; 
0x0008a12b: sub al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002925b: sub al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002f60d: sub al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000e6100: sub al, 0x83; les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0017f9b6: sub al, 0x83; les esi, ptr [eax]; pop ebx; pop esi; pop edi; jmp eax; 
0x0019ed93: sub al, 0x83; ret 0x7e10; 
0x0013c93b: sub al, 0x83; ret 0x8902; 
0x00102ce2: sub al, 0x83; ret; 
0x0016e122: sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x000305db: sub al, 0x84; stc; call dword ptr [eax + 0x56]; 
0x000a6fcd: sub al, 0x88; call 0xc24e7fd3; ret; 
0x00038706: sub al, 0x89; call 0x5d62e568; ret; 
0x000e4c74: sub al, 0x89; call 0x5d6daad6; ret; 
0x000ed236: sub al, 0x89; call 0x5d6e3098; ret; 
0x00107506: sub al, 0x89; call 0x5d6fd368; ret; 
0x0010b60f: sub al, 0x89; call 0x5d701471; ret; 
0x0010b72d: sub al, 0x89; call 0x5d70158f; ret; 
0x000a9c5d: sub al, 0x89; call 0xc24eac63; ret; 
0x0003cfbd: sub al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000aa35b: sub al, 0x89; je 0xaa383; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x0016aef8: sub al, 0x89; pop eax; xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000d8f8c: sub al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0003f6f9: sub al, 0x89; ret 0x4489; 
0x0015c847: sub al, 0x89; ret 0x7eb; 
0x0003f3e4: sub al, 0x89; ret 0xc189; 
0x000a00a0: sub al, 0x89; ret; 
0x0003421a: sub al, 0x8b; add al, 0x90; ret; 
0x0016e309: sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x0011e9e5: sub al, 0x8b; je 0x11ea0d; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00122b19: sub al, 0x8b; jl 0x122b41; xor byte ptr [ebp - 0x6a3367d], cl; call dword ptr [eax + 0x55]; 
0x001444d5: sub al, 0x8b; jl 0x1444fd; xor byte ptr [ebx - 0x18], dl; inc eax; ret 0xfff7; 
0x000342ab: sub al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x00042dcc: sub al, 0x8b; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add cl, dl; call 0x21060e5d; ret 0xb60f; 
0x001259db: sub al, 0x8d; inc ebx; inc dword ptr [ebx + 0x2c7602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00178805: sub al, 0x8d; inc esi; adc byte ptr [ecx], al; ret; 
0x00061b29: sub al, 0x8d; stc; call dword ptr [eax - 0x18]; 
0x001618fe: sub al, 0x8d; test al, 0x1f; jb 0x1618fd; call dword ptr [ebp - 0x73]; 
0x00169350: sub al, 0x8d; test al, 0xbc; and al, 0xf3; jmp dword ptr [ebp - 0x75]; 
0x00161456: sub al, 0x8d; test al, 0xf; jb 0x161455; call dword ptr [ebp - 0x73]; 
0x00048669: sub al, 0x8d; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x00047949: sub al, 0x8d; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004bafa: sub al, 0x8d; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x7de9; 
0x0004ae35: sub al, 0x8d; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x000ce2c0: sub al, 0x8d; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x001302a4: sub al, 0x92; out dx, eax; call dword ptr [eax + 0x6a]; 
0x000a8e72: sub al, 0x96; call 0xc24e9e78; ret; 
0x00093a8c: sub al, 0x96; stc; call dword ptr [eax - 0x18]; 
0x000a0421: sub al, 0x9f; stc; call dword ptr [eax - 0x18]; 
0x0015d02c: sub al, 0xa2; add byte ptr [eax], al; push edx; call eax; 
0x00168e47: sub al, 0xa6; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0016eb33: sub al, 0xa7; mov dword ptr [0x9066fffc], eax; nop; nop; nop; ret; 
0x001a5203: sub al, 0xa8; pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x1a52a0; lea eax, [ecx + 4]; ret; 
0x0009e0fd: sub al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001259e3: sub al, 0xb8; sbb al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011243d: sub al, 0xb8; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00152573: sub al, 0xb9; int1; call dword ptr [eax - 0x18]; 
0x0013e5cb: sub al, 0xbb; stc; call dword ptr [eax - 0x73]; 
0x0014c92e: sub al, 0xbf; stc; call dword ptr [eax - 0x18]; 
0x000b6cfd: sub al, 0xc0; or al, 0; add ecx, 0x10f03f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0014d831: sub al, 0xc1; stc; call dword ptr [eax - 0x73]; 
0x00153374: sub al, 0xc2; int1; call dword ptr [eax - 1]; 
0x0009dcf2: sub al, 0xc7; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017622a: sub al, 0xca; stc; call dword ptr [eax - 0x73]; 
0x00085770: sub al, 0xda; stc; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x000a6dca: sub al, 0xde; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0011b7e6: sub al, 0xe8; and al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00060538: sub al, 0xe8; cmp byte ptr [edx + eax], 0; add esp, 0x2c; ret; 
0x00051327: sub al, 0xe8; jae 0x5132b; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cade7: sub al, 0xe8; jae 0xcadeb; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ce6d7: sub al, 0xe8; jae 0xce6db; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cef97: sub al, 0xe8; jae 0xcef9b; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cf647: sub al, 0xe8; jae 0xcf64b; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000dff25: sub al, 0xe8; lds esp, ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00034b04: sub al, 0xe8; mov dh, 0xc; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0015cb42: sub al, 0xe8; mov eax, 0x89000235; xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000c1e32: sub al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00183043: sub al, 0xe8; out 0xe8, eax; clc; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [ecx + edi*4 - 0x77]; ret 0xe283; 
0x001894ac: sub al, 0xe8; outsb dx, byte ptr [esi]; psubb mm7, mm7; add esp, 0x2c; ret; 
0x00140ce8: sub al, 0xe8; ret 0x41; 
0x00118248: sub al, 0xe8; ret 0x47; 
0x001064e0: sub al, 0xe8; ret 0xf1cc; 
0x0018be18: sub al, 0xe8; ret 0xfd41; 
0x0018947c: sub al, 0xe8; sahf; psubb mm7, mm7; add esp, 0x2c; ret; 
0x00092d30: sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0009d564: sub al, 0xe8; test byte ptr [eax + eax], 0; add esp, 0x2c; ret; 
0x00094315: sub al, 0xe8; test dword ptr [eax - 0x3b7c0001], edx; adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0xe283; 
0x00060566: sub al, 0xe8; xor al, 0xce; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0003f74c: sub al, 0xeb; mov ebx, 0x3cdc858d; stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0009e3a9: sub al, 0xed; clc; jmp dword ptr [ebp - 1]; 
0x00169db0: sub al, 0xf1; cld; jmp dword ptr [esi - 0x70]; 
0x00029fd7: sub al, 0xf6; ret 0x7501; 
0x0002b517: sub al, 0xf6; ret 0xf08; 
0x0006249f: sub al, 0xf; mov dh, 0x94; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0012a5ab: sub al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x00107f5a: sub al, 0xf; mov dh, 0xc0; ret; 
0x0011a93f: sub al, 0xf; xchg ebp, eax; ret 0xf131; 
0x00146492: sub al, 0xf; xchg ebp, eax; ret; 
0x0002ff79: sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x001900a5: sub al, 0xff; inc dword ptr [ecx + 0x44768c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00117c61: sub al, 0xff; ja 0x117c71; call dword ptr [edi + 0x24]; 
0x00117e85: sub al, 0xff; ja 0x117e95; call dword ptr [edi + 0x24]; 
0x00117fa4: sub al, 0xff; ja 0x117fb4; call dword ptr [edi + 0x24]; 
0x00118cd1: sub al, 0xff; ja 0x118ce1; call dword ptr [edi + 0x24]; 
0x00118ef5: sub al, 0xff; ja 0x118f05; call dword ptr [edi + 0x24]; 
0x00119014: sub al, 0xff; ja 0x119024; call dword ptr [edi + 0x24]; 
0x00119d71: sub al, 0xff; ja 0x119d81; call dword ptr [edi + 0x24]; 
0x00119f95: sub al, 0xff; ja 0x119fa5; call dword ptr [edi + 0x24]; 
0x0011a0b4: sub al, 0xff; ja 0x11a0c4; call dword ptr [edi + 0x24]; 
0x00140ce0: sub al, 0xff; je 0x140d08; sub al, 0xff; je 0x140d0c; sub al, 0xe8; ret 0x41; 
0x00140ce4: sub al, 0xff; je 0x140d0c; sub al, 0xe8; ret 0x41; 
0x0018be10: sub al, 0xff; je 0x18be38; sub al, 0xff; je 0x18be3c; sub al, 0xe8; ret 0xfd41; 
0x0018be14: sub al, 0xff; je 0x18be3c; sub al, 0xe8; ret 0xfd41; 
0x00060534: sub al, 0xff; je 0x6055c; sub al, 0xe8; cmp byte ptr [edx + eax], 0; add esp, 0x2c; ret; 
0x0008c423: sub al, 0xff; je 0x8c44b; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0009d560: sub al, 0xff; je 0x9d588; sub al, 0xe8; test byte ptr [eax + eax], 0; add esp, 0x2c; ret; 
0x0011243f: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a81e: sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000c0a77: sub al, 1; add byte ptr [eax], al; ret; 
0x0016b1c5: sub al, 1; ret 0x5689; 
0x000865a7: sub al, 1; ret 0xe852; 
0x00063022: sub al, 1; ret; 
0x00090f15: sub al, 2; add byte ptr [eax], al; mov eax, dword ptr [ecx + 0x228]; push edx; call eax; 
0x00191e2b: sub al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00034562: sub al, 5; add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x000d8838: sub al, 9; add byte ptr [eax - 0x76bbdbac], cl; ret; 
0x00192024: sub al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00074129: sub al, byte ptr [eax]; add byte ptr [ebx - 0x5177b], cl; call ecx; 
0x0017c20c: sub al, byte ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0008d486: sub al, byte ptr [ebx - 0x7872f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0009fcb5: sub al, byte ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x000a97e0: sub al, byte ptr [ebx]; test byte ptr [eax - 0x711e4], cl; jmp eax; 
0x00111908: sub al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006ced8: sub al, ch; ret 0xfb62; 
0x0005f6a7: sub al, ch; ret; 
0x0013e678: sub bh, 0x68; stc; call dword ptr [eax + 0x6a]; 
0x00190495: sub bh, bh; inc dword ptr [ecx + 0x44378c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019028e: sub bh, bh; inc dword ptr [ecx + 0x4457fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011b7fe: sub bh, bh; je 0x11b826; sub byte ptr [edx - 0x64], ch; call 0x11b810; add esp, 0x2c; ret; 
0x0003610c: sub bh, bh; je 0x36134; sub byte ptr [edx], ch; call 0x360b0; add esp, 0x2c; ret; 
0x000d8a6e: sub bh, bh; je 0xd8a96; xor al, 0x8b; inc esp; and al, 0x78; call eax; 
0x00168577: sub bh, bh; jo 0x16858f; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0003f28b: sub bh, byte ptr [edi]; stc; call dword ptr [ebx + 0x50]; 
0x0016af44: sub bl, 0xff; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010d437: sub bl, byte ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x00195d6a: sub bl, dh; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ffed: sub byte ptr [0xc381ffff], ch; pop ds; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012ab4a: sub byte ptr [eax + 0x156], bh; call dword ptr gs:[0x10]; 
0x0003fcda: sub byte ptr [eax + 0x163], bh; call dword ptr gs:[0x10]; 
0x0016a1ce: sub byte ptr [eax + 0x57], dl; call dword ptr [ecx + 0x18]; 
0x0012d93d: sub byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x00129a8a: sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x001250da: sub byte ptr [eax + 0x90], bh; call dword ptr gs:[0x10]; 
0x0012667a: sub byte ptr [eax + 0x91], bh; call dword ptr gs:[0x10]; 
0x0012919a: sub byte ptr [eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x0011be7a: sub byte ptr [eax + 0xa8], bh; call dword ptr gs:[0x10]; 
0x001119d2: sub byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0008f84d: sub byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0011c84a: sub byte ptr [eax + 3], bh; call dword ptr gs:[0x10]; 
0x0011d8ea: sub byte ptr [eax + 4], bh; call dword ptr gs:[0x10]; 
0x0019224b: sub byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a2832: sub byte ptr [eax + eax], bh; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00182b91: sub byte ptr [eax + edi - 7], 0xff; jmp edx; 
0x00059141: sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax + 0x6a]; 
0x000379ae: sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 0x75]; 
0x000cb0f8: sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0008c135: sub byte ptr [eax - 0x17], 0xf8; inc dword ptr [ecx]; salc; jmp esi; 
0x000d1aa5: sub byte ptr [eax - 0x73], dl; inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x00179b45: sub byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebp*4 - 0x72b00000], ecx; xchg dword ptr [esi], edi; jae 0x179b4c; call dword ptr [eax + 0x6a]; 
0x0017ff0c: sub byte ptr [eax - 0x73], dl; xchg dword ptr [esi + ecx*4 - 0xc], ebp; call dword ptr [eax - 0x73]; 
0x00165df2: sub byte ptr [eax - 0x7d], dl; rcr byte ptr [eax], 0x50; call 0x165bb0; add esp, 0x2c; ret; 
0x00054106: sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0005acf5: sub byte ptr [eax], 0x8a; stc; call dword ptr [eax - 0x73]; 
0x0009a090: sub byte ptr [eax], 0x98; stc; call dword ptr [eax - 0x18]; 
0x000a1492: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x418d4451], cl; cmp byte ptr [ecx + 0x39142444], cl; ret 0x840f; 
0x0008af5d: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00089455: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0011b7c4: sub byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011c93d: sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e8edc: sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a21df: sub byte ptr [ebp + 0x5b8775db], al; pop esi; pop edi; ret; 
0x000d6c3a: sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x000c1e11: sub byte ptr [ebp + 0x708a8bc0], al; add dword ptr [eax], eax; add byte ptr [ebp + 0x3ce892], cl; add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x0018f06a: sub byte ptr [ebp + 4], dl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002babb: sub byte ptr [ebp - 0x2e7af00a], al; or byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x0017f216: sub byte ptr [ebp - 0x634fb79], cl; call dword ptr [eax - 0x73]; 
0x001776e4: sub byte ptr [ebp - 0x6358f79], cl; call dword ptr [eax - 0x73]; 
0x001656c0: sub byte ptr [ebp - 0x63a2379], cl; call dword ptr [eax - 0x73]; 
0x0011afd3: sub byte ptr [ebp - 0x64d1379], cl; call dword ptr [eax - 0x73]; 
0x00093527: sub byte ptr [ebp - 0x66c5b80], cl; call dword ptr [eax - 0x18]; 
0x000505c6: sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x00050659: sub byte ptr [ebp - 0x677e379], cl; call dword ptr [eax - 0x73]; 
0x0017f239: sub byte ptr [ebp - 0x680d379], cl; call dword ptr [eax - 0x73]; 
0x0002930b: sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax + 0x68]; 
0x000291a3: sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax - 0x73]; 
0x00167ec0: sub byte ptr [ebp - 0x68c6880], cl; jmp dword ptr [ebp - 0x75]; 
0x00167960: sub byte ptr [ebp - 0x68c7480], cl; jmp dword ptr [ebp - 0x75]; 
0x001676d0: sub byte ptr [ebp - 0x68c8180], cl; jmp dword ptr [ebp - 0x75]; 
0x00167320: sub byte ptr [ebp - 0x68c8f80], cl; jmp dword ptr [ebp - 0x75]; 
0x00166cd0: sub byte ptr [ebp - 0x68c9b80], cl; jmp dword ptr [ebp - 0x75]; 
0x00166980: sub byte ptr [ebp - 0x68caa80], cl; jmp dword ptr [ebp - 0x75]; 
0x00163fc0: sub byte ptr [ebp - 0x68d6a80], cl; jmp dword ptr [ebp - 0x75]; 
0x00163cc0: sub byte ptr [ebp - 0x68d7680], cl; jmp dword ptr [ebp - 0x75]; 
0x0015e022: sub byte ptr [ebp - 0x68f4052], cl; call dword ptr [ebp - 0x73]; 
0x0015daeb: sub byte ptr [ebp - 0x68f4f52], cl; call dword ptr [ebp - 0x73]; 
0x00142ae0: sub byte ptr [ebp - 0x695d97d], cl; call dword ptr [eax + 0x68]; 
0x0003edfb: sub byte ptr [ebp - 0x6c0f37d], cl; call dword ptr [eax - 0x18]; 
0x0003f6ef: sub byte ptr [ebp - 0x6c3237b], cl; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003f3da: sub byte ptr [ebp - 0x6c3237b], cl; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x000dbffa: sub byte ptr [ebp - 0x72ae8b0a], al; push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0015ece7: sub byte ptr [ebp - 0x77], ah; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000cece5: sub byte ptr [ebp - 0x7d368], cl; call dword ptr [ebx - 1]; 
0x0004eec2: sub byte ptr [ebp - 0x7d368], cl; dec dword ptr [ebp - 0x6c07c80]; call dword ptr [ebx + 0x6a]; 
0x0004e59b: sub byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x000ce9c2: sub byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 1]; 
0x0018dfed: sub byte ptr [ebp - 1], cl; inc dword ptr [ecx + 0x4659fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011dbf2: sub byte ptr [ebx + 0x307409f9], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0016fd14: sub byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x00173001: sub byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x0013289b: sub byte ptr [ebx + 0x53500cc4], al; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0012275a: sub byte ptr [ebx + 0x548b20c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x0016dc73: sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a3d48: sub byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00028c4d: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x00128b09: sub byte ptr [ebx + 0x652c2454], cl; sub edx, dword ptr [0x14]; jne 0x128b1b; add esp, 0x3c; ret; 
0x000be201: sub byte ptr [ebx + 0xc], cl; add byte ptr [ecx + 0x107defc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00174e9a: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00174e9a: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0009b4bc: sub byte ptr [ebx + edi + 0x48890000], 0xc; ret; 
0x000a9cd3: sub byte ptr [ebx + edx - 0x1a7f000a], 2; lea edx, [edx - 0x189834]; cmove eax, edx; ret; 
0x000373da: sub byte ptr [ebx - 0x1fe0008], al; jmp esi; 
0x00041ed7: sub byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x001259d7: sub byte ptr [ebx - 0x72d3db8c], cl; inc ebx; inc dword ptr [ebx + 0x2c7602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000dd8b3: sub byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [edx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x000dd81b: sub byte ptr [ebx - 0x72dbdbbc], cl; sbb byte ptr [ecx + 0x56], 0xf9; call dword ptr [eax + 0x53]; 
0x00122b15: sub byte ptr [ebx - 0x74d3db8c], cl; jl 0x122b41; xor byte ptr [ebp - 0x6a3367d], cl; call dword ptr [eax + 0x55]; 
0x000aa357: sub byte ptr [ebx - 0x76d3dbac], cl; je 0xaa383; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000e998b: sub byte ptr [ebx - 0x76d7dbb4], cl; ret 0xf983; 
0x00104749: sub byte ptr [ebx - 0x76f3db84], cl; ret 0xf889; 
0x0017fa5f: sub byte ptr [ebx - 0x7aebdbac], cl; sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x00036b1b: sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x0013c937: sub byte ptr [ebx - 0x7cd3db8c], cl; ret 0x8902; 
0x00132e03: sub byte ptr [ebx - 0xaff33c], al; je 0x132e2f; or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x00103b8a: sub byte ptr [ebx], al; test byte ptr [eax - 0x6f640], bl; jmp eax; 
0x0002c38b: sub byte ptr [ebx], bh; stc; call dword ptr [eax - 0x18]; 
0x0015c841: sub byte ptr [ecx + 0x247c8bf8], cl; sub al, 0x89; ret 0x7eb; 
0x00037246: sub byte ptr [ecx + 0x39f329cb], cl; ret; 
0x00127d2f: sub byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00171969: sub byte ptr [ecx + 0x6a], dl; add al, 0x50; call dword ptr [edx + 0x14]; 
0x0017a2e8: sub byte ptr [ecx + 0xf10245c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x0010cedc: sub byte ptr [ecx + ebp - 0x7d], dh; ret 0xf01; 
0x00148bb0: sub byte ptr [ecx - 0x4436b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0012d7d2: sub byte ptr [ecx - 0x44fbdba4], cl; adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012d5c2: sub byte ptr [ecx - 0x44fbdba4], cl; adc dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00172ffd: sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000f97b0: sub byte ptr [ecx - 0x76ebdbbc], cl; ret 0x478b; 
0x0014c3f3: sub byte ptr [ecx - 0x7ccbdbbc], cl; les ecx, ptr [ecx + ecx*4]; call 0x44248d86; ret 0x148b; 
0x001357e9: sub byte ptr [ecx], 0x66; stc; call dword ptr [eax - 0x75]; 
0x001388a3: sub byte ptr [ecx], 0xf5; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0006f62a: sub byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0011b78e: sub byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a35e4: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0003cd6c: sub byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x000a4727: sub byte ptr [ecx], al; je 0xa47e8; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000a48ae: sub byte ptr [ecx], al; jne 0xa4888; sub esp, 0xc; push eax; call edx; 
0x000801c4: sub byte ptr [ecx], al; ret 0xe852; 
0x000d6c37: sub byte ptr [ecx], bh; dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x00047a2a: sub byte ptr [ecx], bh; ret 0x840f; 
0x00144ffd: sub byte ptr [ecx], bh; ret 0xab7e; 
0x0019316a: sub byte ptr [ecx], bl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d835c: sub byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x0018ba8a: sub byte ptr [ecx], cl; rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0012dba7: sub byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000d6c77: sub byte ptr [edi + 0x5e], bl; ret; 
0x00136f85: sub byte ptr [edi + 0x66], 0xf9; call dword ptr [eax - 0x75]; 
0x00165e76: sub byte ptr [edi + 0x72], 0xf9; call dword ptr [eax + 0x57]; 
0x001639fa: sub byte ptr [edi + 0x72], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x000a0420: sub byte ptr [edi + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000dc0c4: sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xdc0d0; mov eax, edx; ret; 
0x00092e3c: sub byte ptr [edi + edi*4], 0xe5; call dword ptr [eax - 0x73]; 
0x00024f23: sub byte ptr [edi + esi*2 - 7], 0xff; push eax; push 1; call 0x11d890; add esp, 0x1c; ret; 
0x00128dfa: sub byte ptr [edi - 0x7c720010], 0x98; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x00155483: sub byte ptr [edi - 7], ch; call dword ptr [eax - 0x18]; 
0x001555f9: sub byte ptr [edi - 7], ch; call dword ptr [eax - 0x73]; 
0x001a37dc: sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0010587b: sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00059344: sub byte ptr [edi], cl; mov esi, 0x8b1b244c; je 0x59371; sbb al, 0x89; ret 0xc801; 
0x0017a2fb: sub byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00087abf: sub byte ptr [edx + 0x56], dl; call dword ptr [eax + 0x48]; 
0x001905ea: sub byte ptr [edx + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153373: sub byte ptr [edx + eax*8], 0xf1; call dword ptr [eax - 1]; 
0x0015d47a: sub byte ptr [edx + eax], 0; mov dword ptr [esp], ebp; call edi; 
0x000a8e97: sub byte ptr [edx + ebx*4 - 0xa], 0xff; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x001302a3: sub byte ptr [edx + edx*4], 0xef; call dword ptr [eax + 0x6a]; 
0x0016e0c4: sub byte ptr [edx - 0x14], ch; call dword ptr [eax - 0x73]; 
0x00166129: sub byte ptr [edx - 0x35], 0xf9; jmp dword ptr [esi - 0x77]; 
0x0011b802: sub byte ptr [edx - 0x64], ch; call 0x11b810; add esp, 0x2c; ret; 
0x000825ed: sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x00060560: sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x7d3a0; add esp, 0x2c; ret; 
0x00090f1b: sub byte ptr [edx], al; add byte ptr [eax], al; push edx; call eax; 
0x001489c3: sub byte ptr [edx], bl; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x00036110: sub byte ptr [edx], ch; call 0x360b0; add esp, 0x2c; ret; 
0x000986a8: sub byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x92d50; add esp, 0x2c; ret; 
0x00028fad: sub byte ptr [edx], ch; push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00120541: sub byte ptr [esi + 0x5a], 0xf9; call dword ptr [eax - 0x18]; 
0x00111d78: sub byte ptr [esi + 0x5f], bl; ret; 
0x0013e609: sub byte ptr [esi + 0x69], 0xf9; call dword ptr [eax + 0x6a]; 
0x0008b15b: sub byte ptr [esi + ecx], 0; ret; 
0x000db3bf: sub byte ptr [esi - 7], dl; call dword ptr [eax - 0x18]; 
0x0019266a: sub byte ptr [esp + eax], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00094ffa: sub ch, 0xf9; jmp dword ptr [esi - 0x70]; 
0x00193f95: sub ch, 0xfe; inc dword ptr [ecx + 0x40d77c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001691b4: sub ch, bh; cld; jmp dword ptr [esi - 0x70]; 
0x0013a7c4: sub ch, byte ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x000e9526: sub cl, 0x56; stc; call dword ptr [eax - 0x18]; 
0x0015f6b0: sub cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0005ace5: sub cl, byte ptr [ebx + 0x458b045d]; or byte ptr [ecx], bh; ret; 
0x0010c8ff: sub cl, byte ptr [ebx - 0x45b7b]; jmp dword ptr [ebp - 0x7d]; 
0x000a1ed8: sub cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x000ce2b7: sub cl, ch; inc ebx; idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000f7c0b: sub dh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x00024956: sub dh, 0x73; stc; call dword ptr [eax - 0x18]; 
0x00075470: sub dh, 0xff; dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ebx + 0xa488]; add byte ptr [ebx - 0x5077b], cl; jmp dword ptr [ebp - 0x77]; 
0x000a45b4: sub dh, bh; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0015bc11: sub dh, byte ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x000f756a: sub dh, byte ptr [esp + eax + 0x3c]; aas; jne 0xf7589; mov eax, 1; ret; 
0x000a47b4: sub dh, dh; ret 0x7502; 
0x00040d97: sub dh, dh; ret 0x7503; 
0x0002fe6b: sub dword ptr [eax + 0x3b], -7; call dword ptr [eax - 0x18]; 
0x0016b5ae: sub dword ptr [eax + 0x66], -7; call dword ptr [eax + 0x6a]; 
0x00173ec8: sub dword ptr [eax + 0x66], -7; call dword ptr [eax + 0x6a]; add al, ch; fild dword ptr [esi - 0x10]; inc dword ptr [ebx - 0x17aaeb3c]; ret 0xeaf2; 
0x0008c20d: sub dword ptr [eax + 1], 0x43890000; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017c7db: sub dword ptr [eax + eax], eax; add byte ptr [ebx - 0x4c72f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x001920eb: sub dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013d05a: sub dword ptr [eax + edi*8], -1; call dword ptr [eax + 0x6a]; 
0x0014c446: sub dword ptr [eax - 0x40], -7; call dword ptr [eax - 0x73]; 
0x000a3b5a: sub dword ptr [eax - 0x58], -7; call dword ptr [eax - 0x73]; 
0x0013fbd1: sub dword ptr [eax - 0xc], 1; je 0x13fbe0; add esp, 4; pop ebx; pop esi; ret; 
0x00152614: sub dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; sbb esp, 0x75; int1; call dword ptr [eax - 0x73]; 
0x00090f1a: sub dword ptr [eax], 0x52000002; call eax; 
0x00155482: sub dword ptr [eax], 0x6f; stc; call dword ptr [eax - 0x18]; 
0x001555f8: sub dword ptr [eax], 0x6f; stc; call dword ptr [eax - 0x73]; 
0x00190494: sub dword ptr [eax], 0xc381ffff; js 0x1904df; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001112c7: sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013cb82: sub dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000344e7: sub dword ptr [eax], esp; add byte ptr [ebx + 0x1d080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00034507: sub dword ptr [eax], esp; add byte ptr [ebx + 0x9480], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000344c7: sub dword ptr [eax], esp; add byte ptr [ebx + 0x9c80], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x001829dc: sub dword ptr [eax], esp; ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x0014d434: sub dword ptr [ebp - 7], ebp; call dword ptr [eax - 0x18]; 
0x0016ffce: sub dword ptr [ebp - 7], esi; call dword ptr [edi + 0x50]; 
0x0007bf3f: sub dword ptr [ebx + 0x515604ec], eax; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007e635: sub dword ptr [ebx + 0x525604ec], eax; push ebx; call dword ptr [ebp + 0x1c]; 
0x000f9fc9: sub dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0017183b: sub dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0011eea8: sub dword ptr [ebx + 0x5e5b20c4], eax; pop edi; ret; 
0x000987bc: sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x00079396: sub dword ptr [ebx - 0x190f6244], ecx; clc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x000607ee: sub dword ptr [ebx - 7], eax; call dword ptr [eax + 0x53]; 
0x000fab98: sub dword ptr [ebx], 0x58; stc; call dword ptr [eax + 0x55]; 
0x000e7e14: sub dword ptr [ecx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x0011ff83: sub dword ptr [ecx + eax - 0x4c750000], -4; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x0014d830: sub dword ptr [ecx + eax*8], -7; call dword ptr [eax - 0x73]; 
0x00152572: sub dword ptr [ecx + edi*4], -0xf; call dword ptr [eax - 0x18]; 
0x0009a0cf: sub dword ptr [ecx + esi], -0x1a; call dword ptr [ecx + 0x50]; 
0x0009936b: sub dword ptr [ecx], -0x1a; call dword ptr [eax - 1]; 
0x0014d433: sub dword ptr [ecx], 0x6d; stc; call dword ptr [eax - 0x18]; 
0x0011b833: sub dword ptr [ecx], eax; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00070b48: sub dword ptr [ecx], eax; ret 0x598d; 
0x00079305: sub dword ptr [edi + 0x10], esi; mov edi, dword ptr [ebp + eax*4 - 0x719b8]; add edi, ebp; jmp edi; 
0x00078775: sub dword ptr [edi + 0x38], esi; movzx edx, dl; mov edi, dword ptr [ebp + edx*4 - 0x71bfc]; add edi, ebp; jmp edi; 
0x00122c2d: sub dword ptr [edi + 0x5d], -7; call dword ptr [eax + 0x55]; 
0x0005fad2: sub dword ptr [edi + 0x63], -7; call dword ptr [eax + 0x6a]; 
0x00166f55: sub dword ptr [edi + 0x72], -7; call dword ptr [eax + 0x55]; 
0x0006ebf2: sub dword ptr [edi + 1], edx; ret; 
0x001a03bc: sub dword ptr [edi - 0x7cfffffe], -0x13; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x00161ed2: sub dword ptr [edi], 0x72; stc; call dword ptr [eax - 0x18]; 
0x00162048: sub dword ptr [edi], 0x72; stc; call dword ptr [eax - 0x73]; 
0x00078826: sub dword ptr [edi], ecx; mov dh, 0xc9; mov edi, dword ptr [ebp + ecx*4 - 0x71b54]; add edi, ebp; jmp edi; 
0x0015053d: sub dword ptr [edx + ebx - 7], -1; add ecx, ebx; jmp ecx; 
0x00176229: sub dword ptr [edx + ecx*8], -7; call dword ptr [eax - 0x73]; 
0x000b8300: sub dword ptr [edx - 0x3e7efff4], ebp; pushfd; fist dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0011af1a: sub dword ptr [edx - 3], -1; call dword ptr [esi + 0x56]; 
0x0015bc10: sub dword ptr [edx], 0x70; stc; call dword ptr [eax - 0x18]; 
0x000a309d: sub dword ptr [esi + 0x53], -7; call dword ptr [eax - 0x18]; 
0x0002fec0: sub dword ptr [esi + ecx*4], -0x21; call dword ptr [eax - 1]; 
0x001357ea: sub dword ptr [esi - 7], esp; call dword ptr [eax - 0x75]; 
0x00122e21: sub dword ptr [esi], 0x61; stc; call dword ptr [eax + 0x55]; 
0x000d01b6: sub eax, -0x53; stc; call dword ptr [eax - 0x73]; 
0x00172a8a: sub eax, -0x80; pop ebx; pop esi; ret; 
0x000beb1b: sub eax, 0x10; pop edi; ret; 
0x00112243: sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0011eb3a: sub eax, 0x20245c8b; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012ab0a: sub eax, 0x20245c8b; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fc9a: sub eax, 0x20245c8b; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012509a: sub eax, 0x20245c8b; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012663a: sub eax, 0x20245c8b; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012915a: sub eax, 0x20245c8b; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011be3a: sub eax, 0x20245c8b; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011c80a: sub eax, 0x20245c8b; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d8aa: sub eax, 0x20245c8b; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00079300: sub eax, 0x20; cmp eax, 0x29; ja 0x79318; mov edi, dword ptr [ebp + eax*4 - 0x719b8]; add edi, ebp; jmp edi; 
0x00101389: sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x000fd3a2: sub eax, 0x3908568b; ret 0x267e; 
0x00166110: sub eax, 0x558bfffd; mov eax, 0x8910c483; ret; 
0x00127e62: sub eax, 0x5704ec83; push 1; push ebx; call esi; 
0x00145722: sub eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x0013affd: sub eax, 0x5b4cc483; pop esi; pop edi; pop ebp; ret; 
0x00111ff6: sub eax, 0x5b74c483; pop esi; ret; 
0x000e79ec: sub eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x0015cce8: sub eax, 0x81000260; ret; 
0x0015a4e8: sub eax, 0x81000288; ret; 
0x000f75e8: sub eax, 0x810008b7; ret; 
0x000badfc: sub eax, 0x81000c7f; sal dword ptr [ecx + esi*4 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000871e8: sub eax, 0x81000fbb; ret; 
0x0007ffe8: sub eax, 0x8100102d; ret; 
0x0007dae8: sub eax, 0x81001052; ret; 
0x0003bee8: sub eax, 0x8100146e; ret; 
0x001a02e8: sub eax, 0x81fffe2a; ret; 
0x0019fde8: sub eax, 0x81fffe2f; ret; 
0x001848e8: sub eax, 0x81ffffe4; ret; 
0x00138ee8: sub eax, 0x83000fdf; in al, dx; sbb byte ptr [ebp - 0x6985c80], cl; call dword ptr [eax - 0x18]; 
0x00137ae8: sub eax, 0x83000ff3; in al, dx; sbb byte ptr [ebp - 0x6988d80], cl; call dword ptr [eax - 0x18]; 
0x0016c7d2: sub eax, 0x8304ec83; ret; 
0x001527c2: sub eax, 0x833e8965; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0017b92f: sub eax, 0x83fff11d; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x000e6caf: sub eax, 0x89000522; ret; 
0x001136ef: sub eax, 0x89fffff1; ret; 
0x00140802: sub eax, 0x89fffffe; ret 0xf883; 
0x0011f64d: sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0007073b: sub eax, 0x8bfffff2; inc edx; add al, 0x83; ret 0x8304; 
0x0009fd92: sub eax, 0x8d04ec83; test dword ptr [eax + 0x52], ecx; stc; call dword ptr [eax + 0x53]; 
0x0014584c: sub eax, 0x8feb0974; lea esi, [esi]; xor eax, eax; ret; 
0x000984e1: sub eax, 0x90c481; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0005027b: sub eax, 0xba000002; pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x0018ff55: sub eax, 0xc381ffff; mov eax, 0x3000448; sbb al, 0x8b; jmp ebx; 
0x0018ffee: sub eax, 0xc381ffff; pop ds; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f0444: sub eax, 0xc483fff3; adc cl, ch; ret; 
0x000303f1: sub eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x000a6f85: sub eax, 0xe580fff6; add cl, byte ptr [ebp - 0x1777536e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a6fc5: sub eax, 0xe580fff6; add cl, byte ptr [ebp - 0x1777d36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0017e9c0: sub eax, 0xe5868d50; jbe 0x17e9c0; call dword ptr [eax - 0x18]; 
0x0007abaa: sub eax, 0xff04ec83; je 0x7abd5; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00033b84: sub eax, 0xffff883; inc esp; ret; 
0x00146f5d: sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013c5de: sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000889d4: sub eax, 1; mov dword ptr [ebx + 0x1a78], eax; add esp, 8; pop ebx; ret; 
0x0002fc08: sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0007bfbc: sub eax, 1; mov dword ptr [edx + 0x1a44], eax; ret; 
0x00085bdc: sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x0008b27c: sub eax, 1; mov dword ptr [edx + 0x1a78], eax; ret; 
0x00059f54: sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x00052a58: sub eax, 1; ret; 
0x0009e60c: sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x0009a144: sub eax, 2; add esp, 0xc; ret; 
0x0005f92a: sub eax, 4; cmp eax, 0x19; ja 0x5f940; mov edx, dword ptr [ebx + eax*4 - 0x735b8]; add edx, ebx; jmp edx; 
0x0012014f: sub eax, dword ptr [0x14]; jne 0x12015f; add esp, 0x418; pop ebx; ret; 
0x00151872: sub eax, dword ptr [0x14]; jne 0x15187e; add esp, 0x1c; ret; 
0x00173012: sub eax, dword ptr [0x14]; jne 0x17301e; add esp, 0x4c; ret; 
0x00173082: sub eax, dword ptr [0x14]; jne 0x17308e; add esp, 0x4c; ret; 
0x001730f2: sub eax, dword ptr [0x14]; jne 0x1730fe; add esp, 0x4c; ret; 
0x00173155: sub eax, dword ptr [0x14]; jne 0x173161; add esp, 0x4c; ret; 
0x001731b5: sub eax, dword ptr [0x14]; jne 0x1731c1; add esp, 0x4c; ret; 
0x00173222: sub eax, dword ptr [0x14]; jne 0x17322e; add esp, 0x4c; ret; 
0x001732a2: sub eax, dword ptr [0x14]; jne 0x1732ae; add esp, 0x4c; ret; 
0x00173783: sub eax, dword ptr [0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x001737cb: sub eax, dword ptr [0x14]; jne 0x173804; add esp, 0x1c; ret; 
0x00174efc: sub eax, dword ptr [0x14]; jne 0x174f08; add esp, 0x2c; ret; 
0x0003a8c3: sub eax, dword ptr [0x14]; jne 0x3a8d3; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bdb2: sub eax, dword ptr [0x14]; jne 0x3bdbf; add esp, 0x18; pop ebx; ret; 
0x0003e8a6: sub eax, dword ptr [0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b9: sub eax, dword ptr [0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x0005e80f: sub eax, dword ptr [0x14]; jne 0x5e82e; add esp, 0x78; pop ebx; ret; 
0x00085b7c: sub eax, dword ptr [0x14]; jne 0x85b98; add esp, 0x28; pop ebx; ret; 
0x0003c4a1: sub eax, dword ptr [0x5c8b0005]; and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00191ec4: sub eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010ac92: sub eax, dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013ac71: sub eax, dword ptr [ebp - 0x3b7c0012]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008c93c: sub eax, dword ptr [ebx + 0x138b04ec]; push esi; push eax; push ecx; call edx; 
0x001202ba: sub eax, dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0016f3ff: sub eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00034d7d: sub eax, dword ptr [ebx + 4]; add esp, 4; pop ebx; pop esi; ret; 
0x001324b4: sub eax, dword ptr [ebx + 4]; pop ebx; pop esi; pop edi; ret; 
0x000d902b: sub eax, dword ptr [ebx - 0x3776df3c]; pop ebx; pop esi; pop edi; ret; 
0x000a4464: sub eax, dword ptr [ebx - 0x7972f714]; push sp; stc; call dword ptr [ebx + 0x50]; 
0x00076ea4: sub eax, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x00085003: sub eax, dword ptr [edx + 0x10]; ret; 
0x00084ec1: sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00084ed3: sub eax, dword ptr [edx + 0x1c]; ret; 
0x0008b80f: sub eax, dword ptr [edx + 0xc]; ret; 
0x00084ff1: sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0008ae4b: sub eax, dword ptr [edx + 8]; ret; 
0x00080522: sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00030f8a: sub eax, dword ptr [edx]; ret; 
0x0016b0bb: sub eax, dword ptr [esi + 0xc]; add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x000c07d6: sub eax, dword ptr [esp + 4]; ret; 
0x0012014e: sub eax, dword ptr gs:[0x14]; jne 0x12015f; add esp, 0x418; pop ebx; ret; 
0x00151871: sub eax, dword ptr gs:[0x14]; jne 0x15187e; add esp, 0x1c; ret; 
0x00173011: sub eax, dword ptr gs:[0x14]; jne 0x17301e; add esp, 0x4c; ret; 
0x00173081: sub eax, dword ptr gs:[0x14]; jne 0x17308e; add esp, 0x4c; ret; 
0x001730f1: sub eax, dword ptr gs:[0x14]; jne 0x1730fe; add esp, 0x4c; ret; 
0x00173154: sub eax, dword ptr gs:[0x14]; jne 0x173161; add esp, 0x4c; ret; 
0x001731b4: sub eax, dword ptr gs:[0x14]; jne 0x1731c1; add esp, 0x4c; ret; 
0x00173221: sub eax, dword ptr gs:[0x14]; jne 0x17322e; add esp, 0x4c; ret; 
0x001732a1: sub eax, dword ptr gs:[0x14]; jne 0x1732ae; add esp, 0x4c; ret; 
0x00173782: sub eax, dword ptr gs:[0x14]; jne 0x17378f; add esp, 0x1c; ret; 
0x001737ca: sub eax, dword ptr gs:[0x14]; jne 0x173804; add esp, 0x1c; ret; 
0x00174efb: sub eax, dword ptr gs:[0x14]; jne 0x174f08; add esp, 0x2c; ret; 
0x0003a8c2: sub eax, dword ptr gs:[0x14]; jne 0x3a8d3; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bdb1: sub eax, dword ptr gs:[0x14]; jne 0x3bdbf; add esp, 0x18; pop ebx; ret; 
0x0003e8a5: sub eax, dword ptr gs:[0x14]; jne 0x3e8b2; add esp, 0x1c; ret; 
0x0003e9b8: sub eax, dword ptr gs:[0x14]; jne 0x3e9c5; add esp, 0x1c; ret; 
0x0005e80e: sub eax, dword ptr gs:[0x14]; jne 0x5e82e; add esp, 0x78; pop ebx; ret; 
0x00085b7b: sub eax, dword ptr gs:[0x14]; jne 0x85b98; add esp, 0x28; pop ebx; ret; 
0x001a09a5: sub eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00140d31: sub eax, ebx; add esp, 8; pop ebx; ret; 
0x000c315b: sub eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016b0a9: sub eax, ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0019e769: sub eax, ecx; pop ebp; pop ebx; ret; 
0x001998a5: sub eax, ecx; pop ebp; ret; 
0x0019bf5c: sub eax, ecx; pop ebx; ret; 
0x00193b64: sub eax, ecx; pop edi; call 0x182d19; add ebx, 0x410e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c6a: sub eax, ecx; pop esi; call 0x182d19; add ebx, 0x3e51e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a063f: sub eax, ecx; pop esi; pop edi; pop ebp; pop ebx; ret; 
0x0019f0c1: sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x001a00db: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x0019edcd: sub eax, ecx; pop esi; pop edi; ret; 
0x001980f8: sub eax, ecx; ret; 
0x000ad937: sub eax, edi; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x0008878e: sub eax, edi; pop edi; pop ebp; ret; 
0x00086246: sub eax, edx; cdq; push edx; push eax; push ebx; call dword ptr [esi + 0x40]; 
0x001848b6: sub eax, edx; cmp eax, 0x593; ja 0x1848d0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0007a468: sub eax, edx; cmp eax, 0x593; ja 0x7a560; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007d190: sub eax, edx; cmp eax, 0x593; ja 0x7d231; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007f606: sub eax, edx; cmp eax, 0x593; ja 0x7f640; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00085d2a: sub eax, edx; cmp eax, 0x593; ja 0x85d58; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0008687d: sub eax, edx; cmp eax, 0x593; ja 0x869b0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00086a13: sub eax, edx; cmp eax, 0x593; ja 0x86a60; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00089948: sub eax, edx; cmp eax, 0x593; ja 0x899b0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000899f6: sub eax, edx; cmp eax, 0x593; ja 0x89a20; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00083924: sub eax, edx; mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008e77e: sub eax, edx; mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001a2119: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00080dd0: sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x000421df: sub eax, edx; ret; 
0x0003bc2f: sub eax, edx; shr eax, 0x1f; ret; 
0x00081ce8: sub eax, edx; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x00140610: sub ebp, esi; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x000b8166: sub ebx, 0x10; bsf edx, edx; call 0x182d2d; add ecx, 0x10dcaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b0b4a: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b138a: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xb10e1; pop ebx; ret; 
0x000b12a2: sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xb10e1; pop ebx; ret; 
0x000b12c0: sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xb10e1; pop ebx; ret; 
0x000b0b10: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b12e0: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xb10e1; pop ebx; ret; 
0x000b0ed4: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1304: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xb10e1; pop ebx; ret; 
0x000b0f04: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1334: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xb10e1; pop ebx; ret; 
0x000b0f34: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1364: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb10e1; pop ebx; ret; 
0x000b5835: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb5531; pop ebx; ret; 
0x000b0d96: sub ebx, 1; lea ecx, [edx + 1]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1176: sub ebx, 1; lea ecx, [edx + 1]; jne 0xb10e1; pop ebx; ret; 
0x000b1198: sub ebx, 2; lea ecx, [edx + 2]; jne 0xb10e1; pop ebx; ret; 
0x000b0dde: sub ebx, 3; lea ecx, [edx + 3]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b11be: sub ebx, 3; lea ecx, [edx + 3]; jne 0xb10e1; pop ebx; ret; 
0x000b11d6: sub ebx, 4; lea ecx, [edx + 4]; jne 0xb10e1; pop ebx; ret; 
0x000b0dfc: sub ebx, 5; lea ecx, [edx + 5]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b11fc: sub ebx, 5; lea ecx, [edx + 5]; jne 0xb10e1; pop ebx; ret; 
0x000b0e1e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b121e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xb10e1; pop ebx; ret; 
0x000b0e3c: sub ebx, 7; lea ecx, [edx + 7]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b123c: sub ebx, 7; lea ecx, [edx + 7]; jne 0xb10e1; pop ebx; ret; 
0x000b125a: sub ebx, 8; lea ecx, [edx + 8]; jne 0xb10e1; pop ebx; ret; 
0x000b56eb: sub ebx, 8; lea ecx, [edx + 8]; jne 0xb5531; pop ebx; ret; 
0x000b0e60: sub ebx, 9; lea ecx, [edx + 9]; jne 0xb10e0; pop edi; pop ebx; ret; 
0x000b1280: sub ebx, 9; lea ecx, [edx + 9]; jne 0xb10e1; pop ebx; ret; 
0x00072e35: sub ebx, dword ptr [eax + eax]; add byte ptr [ecx], al; ret; 
0x000fab99: sub ebx, dword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000be2d8: sub ebx, ecx; add esi, ecx; call 0x182d2d; add ecx, 0x107d93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2b8: sub ebx, ecx; add esi, ecx; call 0x182d2d; add ecx, 0x107db3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8318: sub ebx, ecx; add esi, ecx; call 0x182d2d; add ecx, 0x10db7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cf8: sub ebx, ecx; add esi, ecx; call 0x182d2d; add ecx, 0x10f03f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6cd8: sub ebx, ecx; add esi, ecx; call 0x182d2d; add ecx, 0x10f05f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008a2a8: sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0007fe88: sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x00109694: sub ecx, -0x80; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000e8814: sub ecx, 0x56; stc; call dword ptr [eax - 0x18]; 
0x0013a386: sub ecx, 0x67; stc; call dword ptr [eax + 0x6a]; 
0x000531a5: sub ecx, 1; jae 0x531a0; mov eax, edx; pop ebx; pop esi; ret; 
0x0005a165: sub ecx, 1; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x00082c74: sub ecx, 1; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0004200e: sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00041fee: sub ecx, 1; mov eax, 2; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x000420bf: sub ecx, 1; mov eax, 2; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0005a180: sub ecx, 1; xor edx, edx; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x000a3e6d: sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x000254a7: sub ecx, dword ptr [0x14]; jne 0x254b3; add esp, 0x1c; ret; 
0x000d8f18: sub ecx, dword ptr [0x14]; jne 0xd8f25; add esp, 0x28; pop ebx; ret; 
0x00108f34: sub ecx, dword ptr [ebx - 0x47cfdba4]; aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f8344: sub ecx, dword ptr [ebx - 0x74cfdba4]; dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84e4: sub ecx, dword ptr [ebx - 0x74cfdba4]; dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0018423f: sub ecx, dword ptr [ebx]; add byte ptr [ebx - 0x77], dl; ret; 
0x0016b0a6: sub ecx, dword ptr [esi + 0x2c]; sub eax, ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000254a6: sub ecx, dword ptr gs:[0x14]; jne 0x254b3; add esp, 0x1c; ret; 
0x000d8f17: sub ecx, dword ptr gs:[0x14]; jne 0xd8f25; add esp, 0x28; pop ebx; ret; 
0x0016b1aa: sub ecx, eax; push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00087d21: sub ecx, eax; sub esp, 4; push ecx; push eax; push esi; call edx; 
0x0003b859: sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003fb7d: sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0010976d: sub ecx, edi; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010961a: sub ecx, edi; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0008d92e: sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0003b5aa: sub ecx, edx; not eax; and eax, ecx; ret; 
0x0003b60a: sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x00121445: sub ecx, esi; jmp dword ptr [esi - 0x70]; 
0x000be974: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x001a486b: sub edi, 0x10; jb 0x1a4930; lea eax, [eax + 0xf]; pop edi; ret; 
0x000da284: sub edi, 0x55; stc; call dword ptr [eax + 0x56]; 
0x001a48e0: sub edi, 0xa; jb 0x1a4930; lea eax, [eax + 9]; pop edi; ret; 
0x001a48f0: sub edi, 0xb; jb 0x1a4930; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a4900: sub edi, 0xd; jb 0x1a4930; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a4910: sub edi, 0xe; jb 0x1a4930; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a4920: sub edi, 0xf; jb 0x1a4930; lea eax, [eax + 0xe]; pop edi; ret; 
0x001a4880: sub edi, 2; jb 0x1a4930; lea eax, [eax + 1]; pop edi; ret; 
0x001a4890: sub edi, 3; jb 0x1a4930; lea eax, [eax + 2]; pop edi; ret; 
0x001a47d8: sub edi, 4; jb 0x1a4930; lea eax, [eax + 3]; pop edi; ret; 
0x001a48a0: sub edi, 5; jb 0x1a4930; lea eax, [eax + 4]; pop edi; ret; 
0x001a48b0: sub edi, 6; jb 0x1a4930; lea eax, [eax + 5]; pop edi; ret; 
0x001a48c0: sub edi, 7; jb 0x1a4930; lea eax, [eax + 6]; pop edi; ret; 
0x001a480b: sub edi, 8; jb 0x1a4930; lea eax, [eax + 7]; pop edi; ret; 
0x001a48d0: sub edi, 9; jb 0x1a4930; lea eax, [eax + 8]; pop edi; ret; 
0x001903de: sub edi, edi; inc dword ptr [ecx + 0x4442fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190345: sub edi, edi; inc dword ptr [ecx + 0x444c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001901f5: sub edi, edi; inc dword ptr [ecx + 0x44618c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019013e: sub edi, edi; inc dword ptr [ecx + 0x446cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00118d23: sub edi, edi; je 0x118d4b; cmp al, 0xe8; or ebp, 0xfffffffc; jmp dword ptr [ebp - 0x77]; 
0x00119dc3: sub edi, edi; je 0x119deb; cmp al, 0xe8; jecxz 0x119d87; cld; jmp dword ptr [ebp - 0x77]; 
0x0008126b: sub edi, edx; jmp dword ptr [esi - 0x70]; 
0x00101ad6: sub edi, esi; shr byte ptr [eax - 0x577bf0fa], 1; adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x001762eb: sub edi, esp; jmp dword ptr [esi - 0x70]; 
0x000bf183: sub edx, 0x10; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x30]; ret; 
0x001a383b: sub edx, 0x10; jb 0x1a3910; lea eax, [edi + 0xf]; pop edi; ret; 
0x000bf173: sub edx, 0x20; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x20]; ret; 
0x000bf163: sub edx, 0x30; add edx, eax; jl 0xbf190; lea eax, [ecx + eax + 0x10]; ret; 
0x000bf153: sub edx, 0x40; add edx, eax; jl 0xbf190; add eax, ecx; ret; 
0x0003a90f: sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x001a38c0: sub edx, 0xa; jb 0x1a3910; lea eax, [edi + 9]; pop edi; ret; 
0x001a38d0: sub edx, 0xb; jb 0x1a3910; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a3812: sub edx, 0xc; jb 0x1a3910; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a38e0: sub edx, 0xd; jb 0x1a3910; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a38f0: sub edx, 0xe; jb 0x1a3910; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a3900: sub edx, 0xf; jb 0x1a3910; lea eax, [edi + 0xe]; pop edi; ret; 
0x00078544: sub edx, 1; mov dword ptr [ecx + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x001a3860: sub edx, 2; jb 0x1a3910; lea eax, [edi + 1]; pop edi; ret; 
0x001a3870: sub edx, 3; jb 0x1a3910; lea eax, [edi + 2]; pop edi; ret; 
0x001a37a7: sub edx, 4; jb 0x1a3910; lea eax, [edi + 3]; pop edi; ret; 
0x001a3880: sub edx, 5; jb 0x1a3910; lea eax, [edi + 4]; pop edi; ret; 
0x001a3890: sub edx, 6; jb 0x1a3910; lea eax, [edi + 5]; pop edi; ret; 
0x001a38a0: sub edx, 7; jb 0x1a3910; lea eax, [edi + 6]; pop edi; ret; 
0x001a37d8: sub edx, 8; jb 0x1a3910; lea eax, [edi + 7]; pop edi; ret; 
0x000ad345: sub edx, 8; jne 0xad310; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x001a38b0: sub edx, 9; jb 0x1a3910; lea eax, [edi + 8]; pop edi; ret; 
0x00108c61: sub edx, dword ptr [0x14]; jne 0x108caa; add esp, 0x28; pop ebx; ret; 
0x00108cf4: sub edx, dword ptr [0x14]; jne 0x108d42; add esp, 0x28; pop ebx; ret; 
0x00108f51: sub edx, dword ptr [0x14]; jne 0x108f9a; add esp, 0x28; pop ebx; ret; 
0x0010adad: sub edx, dword ptr [0x14]; jne 0x10ae5b; add esp, 0x68; pop ebx; ret; 
0x0010fe26: sub edx, dword ptr [0x14]; jne 0x10fe46; add esp, 0x78; pop ebx; ret; 
0x0011b1b8: sub edx, dword ptr [0x14]; jne 0x11b1c7; movzx eax, al; add esp, 0x4c; ret; 
0x0011d59c: sub edx, dword ptr [0x14]; jne 0x11d5a9; add esp, 0x38; pop ebx; ret; 
0x0011d60c: sub edx, dword ptr [0x14]; jne 0x11d619; add esp, 0x38; pop ebx; ret; 
0x0011eae0: sub edx, dword ptr [0x14]; jne 0x11eaf3; add esp, 0x1c; ret; 
0x00120c41: sub edx, dword ptr [0x14]; jne 0x120c4e; add esp, 0x38; pop ebx; ret; 
0x00121060: sub edx, dword ptr [0x14]; jne 0x12106c; add esp, 0x1c; ret; 
0x00121adb: sub edx, dword ptr [0x14]; jne 0x121aff; add esp, 0x1018; pop ebx; ret; 
0x00122763: sub edx, dword ptr [0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x00126fe4: sub edx, dword ptr [0x14]; jne 0x127032; add esp, 0x28; pop ebx; ret; 
0x00127084: sub edx, dword ptr [0x14]; jne 0x1270d2; add esp, 0x28; pop ebx; ret; 
0x00128b0f: sub edx, dword ptr [0x14]; jne 0x128b1b; add esp, 0x3c; ret; 
0x00128f86: sub edx, dword ptr [0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0012ca6a: sub edx, dword ptr [0x14]; jne 0x12ca92; add esp, 0x28; pop ebx; ret; 
0x0012cb8f: sub edx, dword ptr [0x14]; jne 0x12cbb2; add esp, 0x18; pop ebx; ret; 
0x0012cc0f: sub edx, dword ptr [0x14]; jne 0x12cc32; add esp, 0x18; pop ebx; ret; 
0x0012ceca: sub edx, dword ptr [0x14]; jne 0x12cef2; add esp, 0x18; pop ebx; ret; 
0x0012db2a: sub edx, dword ptr [0x14]; jne 0x12db52; add esp, 0x18; pop ebx; ret; 
0x0012dc31: sub edx, dword ptr [0x14]; jne 0x12dc3d; add esp, 0x1c; ret; 
0x0012dc9f: sub edx, dword ptr [0x14]; jne 0x12dcc2; add esp, 0x18; pop ebx; ret; 
0x0012dd2a: sub edx, dword ptr [0x14]; jne 0x12dd52; add esp, 0x28; pop ebx; ret; 
0x0012de32: sub edx, dword ptr [0x14]; jne 0x12de3e; add esp, 0x7c; ret; 
0x001387cf: sub edx, dword ptr [0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x0013996f: sub edx, dword ptr [0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x00143a2c: sub edx, dword ptr [0x14]; jne 0x143a44; add esp, 0x18; pop ebx; ret; 
0x00143a74: sub edx, dword ptr [0x14]; jne 0x143a80; add esp, 0x1c; ret; 
0x00143ac3: sub edx, dword ptr [0x14]; jne 0x143acf; add esp, 0x1c; ret; 
0x001458bc: sub edx, dword ptr [0x14]; jne 0x145904; add esp, 0x118; pop ebx; ret; 
0x0014595c: sub edx, dword ptr [0x14]; jne 0x1459c0; add esp, 0x118; pop ebx; ret; 
0x00145a1c: sub edx, dword ptr [0x14]; jne 0x145a6b; add esp, 0x118; pop ebx; ret; 
0x00145abc: sub edx, dword ptr [0x14]; jne 0x145aed; add esp, 0x11c; ret; 
0x00145fbd: sub edx, dword ptr [0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x001499d0: sub edx, dword ptr [0x14]; jne 0x1499df; movzx eax, ax; add esp, 0x2c; ret; 
0x0014df60: sub edx, dword ptr [0x14]; jne 0x14df6d; add esp, 0x28; pop ebx; ret; 
0x00168e95: sub edx, dword ptr [0x14]; jne 0x168ea2; add esp, 0x28; pop ebx; ret; 
0x0016ebb3: sub edx, dword ptr [0x14]; jne 0x16ec2b; add esp, 0x18; pop ebx; ret; 
0x00171c1c: sub edx, dword ptr [0x14]; jne 0x171c37; add esp, 0x1c; ret; 
0x00171d48: sub edx, dword ptr [0x14]; jne 0x171d5f; add esp, 0x28; pop ebx; ret; 
0x00171de8: sub edx, dword ptr [0x14]; jne 0x171dff; add esp, 0x28; pop ebx; ret; 
0x0017211c: sub edx, dword ptr [0x14]; jne 0x172137; add esp, 0x1c; ret; 
0x0017219f: sub edx, dword ptr [0x14]; jne 0x1721b7; add esp, 0x18; pop ebx; ret; 
0x00172fa2: sub edx, dword ptr [0x14]; jne 0x172fae; add esp, 0x4c; ret; 
0x00174f8e: sub edx, dword ptr [0x14]; jne 0x174ff9; add esp, 0x18; pop ebx; ret; 
0x0017506e: sub edx, dword ptr [0x14]; jne 0x1750d9; add esp, 0x18; pop ebx; ret; 
0x00175325: sub edx, dword ptr [0x14]; jne 0x175364; add esp, 0x18; pop ebx; ret; 
0x001753b5: sub edx, dword ptr [0x14]; jne 0x1753f4; add esp, 0x18; pop ebx; ret; 
0x0017545f: sub edx, dword ptr [0x14]; jne 0x175483; add esp, 0x18; pop ebx; ret; 
0x001754e7: sub edx, dword ptr [0x14]; jne 0x17551f; add esp, 0x18; pop ebx; ret; 
0x0017557b: sub edx, dword ptr [0x14]; jne 0x1755c4; add esp, 0x18; pop ebx; ret; 
0x00175d65: sub edx, dword ptr [0x14]; jne 0x175da4; add esp, 0x18; pop ebx; ret; 
0x00175df5: sub edx, dword ptr [0x14]; jne 0x175e34; add esp, 0x18; pop ebx; ret; 
0x00175e85: sub edx, dword ptr [0x14]; jne 0x175ec4; add esp, 0x18; pop ebx; ret; 
0x00175f15: sub edx, dword ptr [0x14]; jne 0x175f54; add esp, 0x18; pop ebx; ret; 
0x0017657c: sub edx, dword ptr [0x14]; jne 0x17658b; movzx eax, al; add esp, 0x1c; ret; 
0x001765cc: sub edx, dword ptr [0x14]; jne 0x1765db; movzx eax, al; add esp, 0x1c; ret; 
0x00176626: sub edx, dword ptr [0x14]; jne 0x176633; add esp, 0x18; pop ebx; ret; 
0x001766c6: sub edx, dword ptr [0x14]; jne 0x1766d3; add esp, 0x18; pop ebx; ret; 
0x0017b791: sub edx, dword ptr [0x14]; jne 0x17b7c4; add esp, 0x18; pop ebx; ret; 
0x0017d2c4: sub edx, dword ptr [0x14]; jne 0x17d2e1; add esp, 0x18; pop ebx; ret; 
0x0017d33e: sub edx, dword ptr [0x14]; jne 0x17d359; add esp, 0x18; pop ebx; ret; 
0x001800b7: sub edx, dword ptr [0x14]; jne 0x1800c4; add esp, 0x28; pop ebx; ret; 
0x0018292b: sub edx, dword ptr [0x14]; jne 0x182938; add esp, 0x18; pop ebx; ret; 
0x00185693: sub edx, dword ptr [0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x0018b69e: sub edx, dword ptr [0x14]; jne 0x18b6c7; add esp, 0x18; pop ebx; ret; 
0x0018b9e5: sub edx, dword ptr [0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0003c805: sub edx, dword ptr [0x14]; jne 0x3c81f; add esp, 0x98; pop ebx; ret; 
0x0003c9aa: sub edx, dword ptr [0x14]; jne 0x3c9ec; add esp, 0x28; pop ebx; ret; 
0x0003cd62: sub edx, dword ptr [0x14]; jne 0x3cd72; add esp, 0x128; pop ebx; ret; 
0x0003d2ed: sub edx, dword ptr [0x14]; jne 0x3d307; add esp, 0x98; pop ebx; ret; 
0x0003d35d: sub edx, dword ptr [0x14]; jne 0x3d377; add esp, 0x98; pop ebx; ret; 
0x0003d3d6: sub edx, dword ptr [0x14]; jne 0x3d3e5; add esp, 0x9c; ret; 
0x0003d854: sub edx, dword ptr [0x14]; jne 0x3d860; add esp, 0x1c; ret; 
0x0003fe79: sub edx, dword ptr [0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x00040086: sub edx, dword ptr [0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x00040234: sub edx, dword ptr [0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x00040336: sub edx, dword ptr [0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b9: sub edx, dword ptr [0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x00041357: sub edx, dword ptr [0x14]; jne 0x41394; add esp, 0x18; pop ebx; ret; 
0x000527e4: sub edx, dword ptr [0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x0005a002: sub edx, dword ptr [0x14]; jne 0x5a017; add esp, 0x1c; ret; 
0x00060682: sub edx, dword ptr [0x14]; jne 0x60692; add esp, 0x1018; pop ebx; ret; 
0x00060701: sub edx, dword ptr [0x14]; jne 0x6070e; add esp, 0x78; pop ebx; ret; 
0x00090987: sub edx, dword ptr [0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x00095383: sub edx, dword ptr [0x14]; jne 0x95390; add esp, 0x28; pop ebx; ret; 
0x00095421: sub edx, dword ptr [0x14]; jne 0x9542e; add esp, 0x28; pop ebx; ret; 
0x000966b7: sub edx, dword ptr [0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b17: sub edx, dword ptr [0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x00097043: sub edx, dword ptr [0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x00097493: sub edx, dword ptr [0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x0009a1b0: sub edx, dword ptr [0x14]; jne 0x9a1ff; add esp, 0x38; pop ebx; ret; 
0x0009a41e: sub edx, dword ptr [0x14]; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a68a: sub edx, dword ptr [0x14]; jne 0x9a6b7; add esp, 0x2c; ret; 
0x0009a8ca: sub edx, dword ptr [0x14]; jne 0x9a8f7; add esp, 0x18; pop ebx; ret; 
0x0009c560: sub edx, dword ptr [0x14]; jne 0x9c56d; add esp, 0x28; pop ebx; ret; 
0x0009dab8: sub edx, dword ptr [0x14]; jne 0x9dac5; add esp, 0x28; pop ebx; ret; 
0x0009e018: sub edx, dword ptr [0x14]; jne 0x9e025; add esp, 0x38; pop ebx; ret; 
0x000c35e7: sub edx, dword ptr [0x14]; jne 0xc3614; add esp, 0x18; pop ebx; ret; 
0x000d7b74: sub edx, dword ptr [0x14]; jne 0xd7b8f; add esp, 0x28; pop ebx; ret; 
0x000d7bf8: sub edx, dword ptr [0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000d7c42: sub edx, dword ptr [0x14]; jne 0xd7c4f; add esp, 0x38; pop ebx; ret; 
0x000d7ca4: sub edx, dword ptr [0x14]; jne 0xd7cb1; add esp, 0x48; pop ebx; ret; 
0x000d917d: sub edx, dword ptr [0x14]; jne 0xd91c2; add esp, 0x28; pop ebx; ret; 
0x000d94f1: sub edx, dword ptr [0x14]; jne 0xd9510; add esp, 0x38; pop ebx; ret; 
0x000e232c: sub edx, dword ptr [0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47ac: sub edx, dword ptr [0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x000e48e0: sub edx, dword ptr [0x14]; jne 0xe491a; add esp, 0x28; pop ebx; ret; 
0x000e4ace: sub edx, dword ptr [0x14]; jne 0xe4adb; add esp, 0x28; pop ebx; ret; 
0x000e58a4: sub edx, dword ptr [0x14]; jne 0xe58b4; add esp, 0xe8; pop ebx; ret; 
0x000e5916: sub edx, dword ptr [0x14]; jne 0xe5926; add esp, 0xe8; pop ebx; ret; 
0x000e59ba: sub edx, dword ptr [0x14]; jne 0xe59ca; add esp, 0xe8; pop ebx; ret; 
0x000ec8d9: sub edx, dword ptr [0x14]; jne 0xec8ef; add esp, 0x1c; ret; 
0x000edbe6: sub edx, dword ptr [0x14]; jne 0xedc06; add esp, 0x78; pop ebx; ret; 
0x000f0696: sub edx, dword ptr [0x14]; jne 0xf06b6; add esp, 0x78; pop ebx; ret; 
0x000f1466: sub edx, dword ptr [0x14]; jne 0xf1486; add esp, 0x78; pop ebx; ret; 
0x000f3f06: sub edx, dword ptr [0x14]; jne 0xf3f26; add esp, 0x78; pop ebx; ret; 
0x000f4ce6: sub edx, dword ptr [0x14]; jne 0xf4d06; add esp, 0x78; pop ebx; ret; 
0x0008ae64: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0008ae70: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0007ff18: sub edx, dword ptr [ebx + 8]; sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0016f7c1: sub edx, dword ptr [ebx - 0x14]; inc dword ptr [ebx - 0x72afef3c]; sbb eax, -0x39; stc; call dword ptr [eax - 0x73]; 
0x00108c60: sub edx, dword ptr gs:[0x14]; jne 0x108caa; add esp, 0x28; pop ebx; ret; 
0x00108cf3: sub edx, dword ptr gs:[0x14]; jne 0x108d42; add esp, 0x28; pop ebx; ret; 
0x00108f50: sub edx, dword ptr gs:[0x14]; jne 0x108f9a; add esp, 0x28; pop ebx; ret; 
0x0010adac: sub edx, dword ptr gs:[0x14]; jne 0x10ae5b; add esp, 0x68; pop ebx; ret; 
0x0010fe25: sub edx, dword ptr gs:[0x14]; jne 0x10fe46; add esp, 0x78; pop ebx; ret; 
0x0011b1b7: sub edx, dword ptr gs:[0x14]; jne 0x11b1c7; movzx eax, al; add esp, 0x4c; ret; 
0x0011d59b: sub edx, dword ptr gs:[0x14]; jne 0x11d5a9; add esp, 0x38; pop ebx; ret; 
0x0011d60b: sub edx, dword ptr gs:[0x14]; jne 0x11d619; add esp, 0x38; pop ebx; ret; 
0x0011eadf: sub edx, dword ptr gs:[0x14]; jne 0x11eaf3; add esp, 0x1c; ret; 
0x00120c40: sub edx, dword ptr gs:[0x14]; jne 0x120c4e; add esp, 0x38; pop ebx; ret; 
0x0012105f: sub edx, dword ptr gs:[0x14]; jne 0x12106c; add esp, 0x1c; ret; 
0x00121ada: sub edx, dword ptr gs:[0x14]; jne 0x121aff; add esp, 0x1018; pop ebx; ret; 
0x00122762: sub edx, dword ptr gs:[0x14]; jne 0x12276f; add esp, 0x1c; ret; 
0x00126fe3: sub edx, dword ptr gs:[0x14]; jne 0x127032; add esp, 0x28; pop ebx; ret; 
0x00127083: sub edx, dword ptr gs:[0x14]; jne 0x1270d2; add esp, 0x28; pop ebx; ret; 
0x00128b0e: sub edx, dword ptr gs:[0x14]; jne 0x128b1b; add esp, 0x3c; ret; 
0x00128f85: sub edx, dword ptr gs:[0x14]; jne 0x128f92; add esp, 0x1c; ret; 
0x0012ca69: sub edx, dword ptr gs:[0x14]; jne 0x12ca92; add esp, 0x28; pop ebx; ret; 
0x0012cb8e: sub edx, dword ptr gs:[0x14]; jne 0x12cbb2; add esp, 0x18; pop ebx; ret; 
0x0012cc0e: sub edx, dword ptr gs:[0x14]; jne 0x12cc32; add esp, 0x18; pop ebx; ret; 
0x0012cec9: sub edx, dword ptr gs:[0x14]; jne 0x12cef2; add esp, 0x18; pop ebx; ret; 
0x0012db29: sub edx, dword ptr gs:[0x14]; jne 0x12db52; add esp, 0x18; pop ebx; ret; 
0x0012dc30: sub edx, dword ptr gs:[0x14]; jne 0x12dc3d; add esp, 0x1c; ret; 
0x0012dc9e: sub edx, dword ptr gs:[0x14]; jne 0x12dcc2; add esp, 0x18; pop ebx; ret; 
0x0012dd29: sub edx, dword ptr gs:[0x14]; jne 0x12dd52; add esp, 0x28; pop ebx; ret; 
0x0012de31: sub edx, dword ptr gs:[0x14]; jne 0x12de3e; add esp, 0x7c; ret; 
0x001387ce: sub edx, dword ptr gs:[0x14]; jne 0x1387e5; add esp, 0x2c; ret; 
0x0013996e: sub edx, dword ptr gs:[0x14]; jne 0x139985; add esp, 0x2c; ret; 
0x00143a2b: sub edx, dword ptr gs:[0x14]; jne 0x143a44; add esp, 0x18; pop ebx; ret; 
0x00143a73: sub edx, dword ptr gs:[0x14]; jne 0x143a80; add esp, 0x1c; ret; 
0x00143ac2: sub edx, dword ptr gs:[0x14]; jne 0x143acf; add esp, 0x1c; ret; 
0x001458bb: sub edx, dword ptr gs:[0x14]; jne 0x145904; add esp, 0x118; pop ebx; ret; 
0x0014595b: sub edx, dword ptr gs:[0x14]; jne 0x1459c0; add esp, 0x118; pop ebx; ret; 
0x00145a1b: sub edx, dword ptr gs:[0x14]; jne 0x145a6b; add esp, 0x118; pop ebx; ret; 
0x00145abb: sub edx, dword ptr gs:[0x14]; jne 0x145aed; add esp, 0x11c; ret; 
0x00145fbc: sub edx, dword ptr gs:[0x14]; jne 0x146004; add esp, 0x1c; ret; 
0x001499cf: sub edx, dword ptr gs:[0x14]; jne 0x1499df; movzx eax, ax; add esp, 0x2c; ret; 
0x0014df5f: sub edx, dword ptr gs:[0x14]; jne 0x14df6d; add esp, 0x28; pop ebx; ret; 
0x00168e94: sub edx, dword ptr gs:[0x14]; jne 0x168ea2; add esp, 0x28; pop ebx; ret; 
0x0016ebb2: sub edx, dword ptr gs:[0x14]; jne 0x16ec2b; add esp, 0x18; pop ebx; ret; 
0x00171c1b: sub edx, dword ptr gs:[0x14]; jne 0x171c37; add esp, 0x1c; ret; 
0x00171d47: sub edx, dword ptr gs:[0x14]; jne 0x171d5f; add esp, 0x28; pop ebx; ret; 
0x00171de7: sub edx, dword ptr gs:[0x14]; jne 0x171dff; add esp, 0x28; pop ebx; ret; 
0x0017211b: sub edx, dword ptr gs:[0x14]; jne 0x172137; add esp, 0x1c; ret; 
0x0017219e: sub edx, dword ptr gs:[0x14]; jne 0x1721b7; add esp, 0x18; pop ebx; ret; 
0x00172fa1: sub edx, dword ptr gs:[0x14]; jne 0x172fae; add esp, 0x4c; ret; 
0x00174f8d: sub edx, dword ptr gs:[0x14]; jne 0x174ff9; add esp, 0x18; pop ebx; ret; 
0x0017506d: sub edx, dword ptr gs:[0x14]; jne 0x1750d9; add esp, 0x18; pop ebx; ret; 
0x00175324: sub edx, dword ptr gs:[0x14]; jne 0x175364; add esp, 0x18; pop ebx; ret; 
0x001753b4: sub edx, dword ptr gs:[0x14]; jne 0x1753f4; add esp, 0x18; pop ebx; ret; 
0x0017545e: sub edx, dword ptr gs:[0x14]; jne 0x175483; add esp, 0x18; pop ebx; ret; 
0x001754e6: sub edx, dword ptr gs:[0x14]; jne 0x17551f; add esp, 0x18; pop ebx; ret; 
0x0017557a: sub edx, dword ptr gs:[0x14]; jne 0x1755c4; add esp, 0x18; pop ebx; ret; 
0x00175d64: sub edx, dword ptr gs:[0x14]; jne 0x175da4; add esp, 0x18; pop ebx; ret; 
0x00175df4: sub edx, dword ptr gs:[0x14]; jne 0x175e34; add esp, 0x18; pop ebx; ret; 
0x00175e84: sub edx, dword ptr gs:[0x14]; jne 0x175ec4; add esp, 0x18; pop ebx; ret; 
0x00175f14: sub edx, dword ptr gs:[0x14]; jne 0x175f54; add esp, 0x18; pop ebx; ret; 
0x0017657b: sub edx, dword ptr gs:[0x14]; jne 0x17658b; movzx eax, al; add esp, 0x1c; ret; 
0x001765cb: sub edx, dword ptr gs:[0x14]; jne 0x1765db; movzx eax, al; add esp, 0x1c; ret; 
0x00176625: sub edx, dword ptr gs:[0x14]; jne 0x176633; add esp, 0x18; pop ebx; ret; 
0x001766c5: sub edx, dword ptr gs:[0x14]; jne 0x1766d3; add esp, 0x18; pop ebx; ret; 
0x0017b790: sub edx, dword ptr gs:[0x14]; jne 0x17b7c4; add esp, 0x18; pop ebx; ret; 
0x0017d2c3: sub edx, dword ptr gs:[0x14]; jne 0x17d2e1; add esp, 0x18; pop ebx; ret; 
0x0017d33d: sub edx, dword ptr gs:[0x14]; jne 0x17d359; add esp, 0x18; pop ebx; ret; 
0x001800b6: sub edx, dword ptr gs:[0x14]; jne 0x1800c4; add esp, 0x28; pop ebx; ret; 
0x0018292a: sub edx, dword ptr gs:[0x14]; jne 0x182938; add esp, 0x18; pop ebx; ret; 
0x00185692: sub edx, dword ptr gs:[0x14]; jne 0x18569f; add esp, 0x1c; ret; 
0x0018b69d: sub edx, dword ptr gs:[0x14]; jne 0x18b6c7; add esp, 0x18; pop ebx; ret; 
0x0018b9e4: sub edx, dword ptr gs:[0x14]; jne 0x18b9f1; add esp, 0x2c; ret; 
0x0003c804: sub edx, dword ptr gs:[0x14]; jne 0x3c81f; add esp, 0x98; pop ebx; ret; 
0x0003c9a9: sub edx, dword ptr gs:[0x14]; jne 0x3c9ec; add esp, 0x28; pop ebx; ret; 
0x0003cd61: sub edx, dword ptr gs:[0x14]; jne 0x3cd72; add esp, 0x128; pop ebx; ret; 
0x0003d2ec: sub edx, dword ptr gs:[0x14]; jne 0x3d307; add esp, 0x98; pop ebx; ret; 
0x0003d35c: sub edx, dword ptr gs:[0x14]; jne 0x3d377; add esp, 0x98; pop ebx; ret; 
0x0003d3d5: sub edx, dword ptr gs:[0x14]; jne 0x3d3e5; add esp, 0x9c; ret; 
0x0003d853: sub edx, dword ptr gs:[0x14]; jne 0x3d860; add esp, 0x1c; ret; 
0x0003fe78: sub edx, dword ptr gs:[0x14]; jne 0x3fe85; add esp, 0x1c; ret; 
0x00040085: sub edx, dword ptr gs:[0x14]; jne 0x40092; add esp, 0x1c; ret; 
0x00040233: sub edx, dword ptr gs:[0x14]; jne 0x40240; add esp, 0x2c; ret; 
0x00040335: sub edx, dword ptr gs:[0x14]; jne 0x40342; add esp, 0x1c; ret; 
0x000403b8: sub edx, dword ptr gs:[0x14]; jne 0x403c5; add esp, 0x1c; ret; 
0x00041356: sub edx, dword ptr gs:[0x14]; jne 0x41394; add esp, 0x18; pop ebx; ret; 
0x000527e3: sub edx, dword ptr gs:[0x14]; jne 0x527f0; add esp, 0x2c; ret; 
0x0005a001: sub edx, dword ptr gs:[0x14]; jne 0x5a017; add esp, 0x1c; ret; 
0x00060681: sub edx, dword ptr gs:[0x14]; jne 0x60692; add esp, 0x1018; pop ebx; ret; 
0x00060700: sub edx, dword ptr gs:[0x14]; jne 0x6070e; add esp, 0x78; pop ebx; ret; 
0x00090986: sub edx, dword ptr gs:[0x14]; jne 0x90993; add esp, 0x2c; ret; 
0x00095382: sub edx, dword ptr gs:[0x14]; jne 0x95390; add esp, 0x28; pop ebx; ret; 
0x00095420: sub edx, dword ptr gs:[0x14]; jne 0x9542e; add esp, 0x28; pop ebx; ret; 
0x000966b6: sub edx, dword ptr gs:[0x14]; jne 0x966c3; add esp, 0x2c; ret; 
0x00096b16: sub edx, dword ptr gs:[0x14]; jne 0x96b23; add esp, 0x2c; ret; 
0x00097042: sub edx, dword ptr gs:[0x14]; jne 0x9704f; add esp, 0x2c; ret; 
0x00097492: sub edx, dword ptr gs:[0x14]; jne 0x9749f; add esp, 0x2c; ret; 
0x0009a1af: sub edx, dword ptr gs:[0x14]; jne 0x9a1ff; add esp, 0x38; pop ebx; ret; 
0x0009a41d: sub edx, dword ptr gs:[0x14]; jne 0x9a447; add esp, 0x2c; ret; 
0x0009a689: sub edx, dword ptr gs:[0x14]; jne 0x9a6b7; add esp, 0x2c; ret; 
0x0009a8c9: sub edx, dword ptr gs:[0x14]; jne 0x9a8f7; add esp, 0x18; pop ebx; ret; 
0x0009c55f: sub edx, dword ptr gs:[0x14]; jne 0x9c56d; add esp, 0x28; pop ebx; ret; 
0x0009dab7: sub edx, dword ptr gs:[0x14]; jne 0x9dac5; add esp, 0x28; pop ebx; ret; 
0x0009e017: sub edx, dword ptr gs:[0x14]; jne 0x9e025; add esp, 0x38; pop ebx; ret; 
0x000c35e6: sub edx, dword ptr gs:[0x14]; jne 0xc3614; add esp, 0x18; pop ebx; ret; 
0x000d7b73: sub edx, dword ptr gs:[0x14]; jne 0xd7b8f; add esp, 0x28; pop ebx; ret; 
0x000d7bf7: sub edx, dword ptr gs:[0x14]; jne 0xd7c04; add esp, 0x1c; ret; 
0x000d7c41: sub edx, dword ptr gs:[0x14]; jne 0xd7c4f; add esp, 0x38; pop ebx; ret; 
0x000d7ca3: sub edx, dword ptr gs:[0x14]; jne 0xd7cb1; add esp, 0x48; pop ebx; ret; 
0x000d917c: sub edx, dword ptr gs:[0x14]; jne 0xd91c2; add esp, 0x28; pop ebx; ret; 
0x000d94f0: sub edx, dword ptr gs:[0x14]; jne 0xd9510; add esp, 0x38; pop ebx; ret; 
0x000e232b: sub edx, dword ptr gs:[0x14]; jne 0xe2338; add esp, 0x1c; ret; 
0x000e47ab: sub edx, dword ptr gs:[0x14]; jne 0xe47b8; add esp, 0x1c; ret; 
0x000e48df: sub edx, dword ptr gs:[0x14]; jne 0xe491a; add esp, 0x28; pop ebx; ret; 
0x000e4acd: sub edx, dword ptr gs:[0x14]; jne 0xe4adb; add esp, 0x28; pop ebx; ret; 
0x000e58a3: sub edx, dword ptr gs:[0x14]; jne 0xe58b4; add esp, 0xe8; pop ebx; ret; 
0x000e5915: sub edx, dword ptr gs:[0x14]; jne 0xe5926; add esp, 0xe8; pop ebx; ret; 
0x000e59b9: sub edx, dword ptr gs:[0x14]; jne 0xe59ca; add esp, 0xe8; pop ebx; ret; 
0x000ec8d8: sub edx, dword ptr gs:[0x14]; jne 0xec8ef; add esp, 0x1c; ret; 
0x000edbe5: sub edx, dword ptr gs:[0x14]; jne 0xedc06; add esp, 0x78; pop ebx; ret; 
0x000f0695: sub edx, dword ptr gs:[0x14]; jne 0xf06b6; add esp, 0x78; pop ebx; ret; 
0x000f1465: sub edx, dword ptr gs:[0x14]; jne 0xf1486; add esp, 0x78; pop ebx; ret; 
0x000f3f05: sub edx, dword ptr gs:[0x14]; jne 0xf3f26; add esp, 0x78; pop ebx; ret; 
0x000f4ce5: sub edx, dword ptr gs:[0x14]; jne 0xf4d06; add esp, 0x78; pop ebx; ret; 
0x000bee93: sub edx, eax; jbe 0xbeed0; add eax, edi; pop edi; ret; 
0x000beea6: sub edx, eax; jbe 0xbeed0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000beeb6: sub edx, eax; jbe 0xbeed0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000beec6: sub edx, eax; jbe 0xbeed0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bf343: sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x00175f97: sub edx, eax; mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x000873f0: sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0016b68e: sub edx, eax; push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00052966: sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x52930; jmp eax; 
0x0011f41d: sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000be178: sub edx, ecx; call 0x182d2d; add ecx, 0x107e75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bae78: sub edx, ecx; call 0x182d2d; add ecx, 0x10b0f5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b818a: sub edx, ecx; call 0x182d2d; add ecx, 0x10dc8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6b5a: sub edx, ecx; call 0x182d2d; add ecx, 0x10f15f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00089ced: sub edx, ecx; cmp edx, 0x593; ja 0x89da0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x000bebbc: sub edx, ecx; jbe 0xbebf0; add eax, ecx; ret; 
0x0014bdc3: sub esi, 0x6b; stc; call dword ptr [eax - 0x73]; 
0x001327c6: sub esi, 1; jae 0x1327a0; add esp, 4; pop ebx; pop esi; ret; 
0x0016af70: sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00052964: sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x52930; jmp eax; 
0x001a5b34: sub esi, ebx; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00099846: sub esi, esp; call dword ptr [ebx + 0x50]; 
0x001686d6: sub esp, -0x5b; add byte ptr [eax], al; pop ebx; ret; 
0x0009d300: sub esp, -0x80; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00108d80: sub esp, 0x14; push 0; push 0; call 0x108d50; add esp, 0x1c; ret; 
0x0003e240: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x3d9e0; add esp, 0x1c; ret; 
0x0003d900: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x463f0; add esp, 0x1c; ret; 
0x00145760: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x145690; add esp, 0x1c; ret; 
0x00095fa0: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x95e60; add esp, 0x1c; ret; 
0x0013e9c0: sub esp, 0x14; push 2; push dword ptr [esp + 0x1c]; call 0x13dd70; add esp, 0x1c; ret; 
0x00183a5c: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x183190; add esp, 0x18; pop ebx; ret; 
0x0004223c: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x1a5bd0; add esp, 0x18; pop ebx; ret; 
0x0010885c: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x000839cc: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x79ea0; add esp, 0x18; pop ebx; ret; 
0x001247fc: sub esp, 0x14; push dword ptr [esp + 0x20]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x00097e2a: sub esp, 0x18; lea eax, [eax + 0x3b2c]; push eax; call 0x8e510; add esp, 0x1c; ret; 
0x001227ba: sub esp, 0x18; lea eax, [eax + 0x45b0]; push eax; call 0x1228c0; add esp, 0x1c; ret; 
0x0008b2b0: sub esp, 0x18; lea eax, [edx + 0x1a74]; push eax; call 0x8d660; add esp, 0x1c; ret; 
0x00163850: sub esp, 0x18; push 0; call 0x150e60; add esp, 0x1c; ret; 
0x0003ccb0: sub esp, 0x18; push 0; call 0x3c5a0; add esp, 0x1c; ret; 
0x00167940: sub esp, 0x18; push 0xa; call 0x150e60; add esp, 0x1c; ret; 
0x00163ca0: sub esp, 0x18; push 1; call 0x150e60; add esp, 0x1c; ret; 
0x00163fa0: sub esp, 0x18; push 2; call 0x150e60; add esp, 0x1c; ret; 
0x00165030: sub esp, 0x18; push 3; call 0x150e60; add esp, 0x1c; ret; 
0x00166300: sub esp, 0x18; push 4; call 0x150e60; add esp, 0x1c; ret; 
0x00166960: sub esp, 0x18; push 5; call 0x150e60; add esp, 0x1c; ret; 
0x00166cb0: sub esp, 0x18; push 6; call 0x150e60; add esp, 0x1c; ret; 
0x00167ea0: sub esp, 0x18; push 7; call 0x150e60; add esp, 0x1c; ret; 
0x00167300: sub esp, 0x18; push 8; call 0x150e60; add esp, 0x1c; ret; 
0x001676b0: sub esp, 0x18; push 9; call 0x150e60; add esp, 0x1c; ret; 
0x00085ce8: sub esp, 0x18; push eax; call 0x896d0; add esp, 0x1c; ret; 
0x0007de70: sub esp, 0x18; push ecx; call 0x7f9f0; add esp, 0x1c; ret; 
0x00025628: sub esp, 0x1fff791; iretd; jmp edi; 
0x0009e3a0: sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x712d4]; call dword ptr gs:[0x10]; 
0x00161069: sub esp, 0x71; stc; call dword ptr [eax - 0x18]; 
0x001611dd: sub esp, 0x71; stc; call dword ptr [eax - 0x73]; 
0x0008d9e4: sub esp, 0xc; add ebx, 8; add esi, 8; push eax; call ecx; 
0x0015137b: sub esp, 0xc; lea eax, [ebx + 4]; push eax; call edi; 
0x00108468: sub esp, 0xc; lea eax, [edi + 0x3fac]; push eax; call 0x8d660; call dword ptr [esi]; 
0x00170c26: sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x00170156: sub esp, 0xc; lea edx, [ebx + 0x4c]; push edx; call eax; 
0x0016d5b9: sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0016e19a: sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0007f805: sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0016d99d: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00170df6: sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x000e6bc0: sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000ee1f0: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000ee539: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5dc]; call dword ptr [eax + 0x18]; 
0x000f52f0: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f5639: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5ec]; call dword ptr [eax + 0x18]; 
0x001688ea: sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016a896: sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00174059: sub esp, 0xc; mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00169578: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016907b: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x001735a0: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00173490: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x001727da: sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x001721eb: sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00168c5c: sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0009a002: sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x001718ce: sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x001713e6: sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00168df5: sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000e68f6: sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x0008e178: sub esp, 0xc; push 0; call 0x8d730; add esp, 0x1c; ret; 
0x001700b4: sub esp, 0xc; push dword ptr [eax + 0x98]; call 0x231a0; add esp, 0x18; pop ebx; ret; 
0x000243f8: sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000ee5d0: sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000f56d0: sub esp, 0xc; push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x0008f144: sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00127f89: sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000a4830: sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0015d475: sub esp, 0xc; push eax; call 0x180100; mov dword ptr [esp], ebp; call edi; 
0x0015d664: sub esp, 0xc; push eax; call 0x180100; mov dword ptr [esp], ebp; call esi; 
0x00168980: sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x00171ae0: sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a48b2: sub esp, 0xc; push eax; call edx; 
0x001708a4: sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0016aa6e: sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x001708bb: sub esp, 0xc; push ebp; call eax; 
0x0016f73e: sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x001547dd: sub esp, 0xc; push ebx; call 0x180100; add esp, 0x10; mov eax, ebx; call eax; 
0x0015d813: sub esp, 0xc; push ebx; call 0x180100; mov dword ptr [esp], ebp; call ebx; 
0x0002f331: sub esp, 0xc; push ebx; call 0x180100; mov dword ptr [esp], esi; call ebx; 
0x0016955b: sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0008688a: sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0007f60f: sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00085d33: sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00026197: sub esp, 0xc; push ecx; call 0x180100; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00026f6f: sub esp, 0xc; push edi; call 0x180100; mov dword ptr [esp], ebx; call edi; 
0x00169a0b: sub esp, 0xc; push edi; call eax; 
0x001699e8: sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00026841: sub esp, 0xc; push edx; call 0x180100; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00025e94: sub esp, 0xc; push esi; call 0x180100; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00026020: sub esp, 0xc; push esi; call 0x180100; mov dword ptr [esp], ebx; call esi; 
0x00168b12: sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00084975: sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00089cfb: sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0007a475: sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007d19d: sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00184776: sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x00089951: sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x001848bf: sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000a47e8: sub esp, 0xc; push esi; call eax; 
0x00129c92: sub esp, 0xc; push esi; call edx; 
0x00129c92: sub esp, 0xc; push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0016f3cb: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0003e815: sub esp, 0xc; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000e47c0: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe47d0; add esp, 0xc; ret; 
0x000e4890: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe48a0; add esp, 0xc; ret; 
0x00137242: sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0003bd0c: sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0008c93d: sub esp, 4; mov edx, dword ptr [ebx]; push esi; push eax; push ecx; call edx; 
0x001893b7: sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00174e9d: sub esp, 4; push -1; push ebp; push esi; call edi; 
0x0008ac39: sub esp, 4; push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0007bec0: sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007d0a6: sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0018032f: sub esp, 4; push dword ptr [ebx]; push dword ptr [esi]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00132ae2: sub esp, 4; push dword ptr [esp + 0x1c]; push 0; push 0x2000004; call eax; 
0x00182ecf: sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0007abab: sub esp, 4; push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000408db: sub esp, 4; push dword ptr [esp + 8]; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00024dcb: sub esp, 4; push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008869c: sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00081cea: sub esp, 4; push eax; push edx; push esi; call ecx; 
0x000861cc: sub esp, 4; push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007ce70: sub esp, 4; push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007ab51: sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00077fb1: sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00127ea7: sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x00087d23: sub esp, 4; push ecx; push eax; push esi; call edx; 
0x00127e4f: sub esp, 4; push edi; push 0; push ebx; call esi; 
0x00127e63: sub esp, 4; push edi; push 1; push ebx; call esi; 
0x00127e76: sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0007e208: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007ae91: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00088908: sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0007c7ae: sub esp, 4; push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00085f8a: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0007e2f7: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024e80: sub esp, 4; push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000860fa: sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007bf40: sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007e636: sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000873ed: sub esp, 4; sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0016ee40: sub esp, 8; add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x001282f2: sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x001226ac: sub esp, 8; call 0x122300; mov dword ptr [ebx + 0x45a0], eax; add esp, 8; pop ebx; ret; 
0x0003ba8c: sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x00086315: sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008190c: sub esp, 8; lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00079d8f: sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008661f: sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00168a03: sub esp, 8; lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x000e49f0: sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x00089ab9: sub esp, 8; lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x000edbf8: sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00171ec5: sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00087ab9: sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00184d14: sub esp, 8; lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000e4b4a: sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000f4cf8: sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001283b2: sub esp, 8; mov dword ptr [ebp - 0x30], edx; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x001694a8: sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x001727c6: sub esp, 8; mov dword ptr [ecx], 0xe; add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x0016d845: sub esp, 8; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x001688a0: sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0017037d: sub esp, 8; mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0016d825: sub esp, 8; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0016ed5b: sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016ae46: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016ae90: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0016eda0: sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00173340: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0017353f: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0016a32f: sub esp, 8; mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0016a239: sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0016a2eb: sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0017572a: sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x00168a1f: sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x00170dc7: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x001688bb: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0016a2be: sub esp, 8; mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00080fe2: sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008750a: sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0016a8e9: sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0003e645: sub esp, 8; push 0; push edx; call eax; 
0x00079f08: sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x001688d1: sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00060a13: sub esp, 8; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000ee410: sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f5510: sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x000a4888: sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00110c84: sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00173588: sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x00135fb4: sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0007fdb1: sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000a4822: sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0003eb20: sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x0017f863: sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0017f8ea: sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000a472f: sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0008a1c4: sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000e4b14: sub esp, 8; push esi; push ebx; call eax; 
0x001765dd: sub esp, edi; call dword ptr [ebx - 0x7d]; 
0x001764e9: sub esp, edi; jmp dword ptr [esi - 0x70]; 
0x00085f89: sub sp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00087509: sub sp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0010d810: syscall; 
0x000b86ed: sysret; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a3132: test ah, 0x20; jne 0x1a31d0; lea eax, [edi - 4]; pop edi; ret; 
0x001a3cb2: test ah, 0x20; jne 0x1a3d50; lea eax, [ecx + 0xc]; ret; 
0x001a3ef2: test ah, 0x20; jne 0x1a3fa0; add edx, 0xc; jl 0x1a3fd0; lea eax, [ecx + 0xc]; ret; 
0x001a42f9: test ah, 0x20; jne 0x1a43b0; test ah, 0x40; jne 0x1a43c0; lea eax, [edx + 0xf]; ret; 
0x001a2c76: test ah, 0x40; jne 0x1a2d60; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a3632: test ah, 0x40; jne 0x1a3770; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a4302: test ah, 0x40; jne 0x1a43c0; lea eax, [edx + 0xf]; ret; 
0x001a54c0: test ah, 0xf0; jne 0x1a54e0; lea eax, [edi - 8]; pop edi; ret; 
0x001a5234: test ah, 0xf; jne 0x1a5250; test dh, 0xf; jne 0x1a52a0; lea eax, [ecx + 0xc]; ret; 
0x001a5270: test ah, 1; jne 0x1a5290; lea eax, [ecx + 0xc]; ret; 
0x0003bb52: test ah, 2; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003b4c0: test ah, 2; je 0x3b4c7; fchs; ret; 
0x0003b840: test ah, 2; je 0x3b847; fchs; ret; 
0x001a3109: test ah, 2; jne 0x1a31a0; lea eax, [edi - 8]; pop edi; ret; 
0x001a3c89: test ah, 2; jne 0x1a3d20; lea eax, [ecx + 8]; ret; 
0x001a3ec8: test ah, 2; jne 0x1a3f70; add edx, 8; jl 0x1a3fd0; lea eax, [ecx + 8]; ret; 
0x001a42d0: test ah, 2; jne 0x1a4380; test ah, 4; jne 0x1a4390; lea eax, [edx + 0xb]; ret; 
0x001a3609: test ah, 4; jne 0x1a3740; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a42d9: test ah, 4; jne 0x1a4390; lea eax, [edx + 0xb]; ret; 
0x00072abf: test ah, al; adc dword ptr [eax], eax; add byte ptr [ebp - 0x47bf040], al; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0017bf77: test ah, al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; cdq; jbe 0x17bf7d; call dword ptr [edx - 0x77]; 
0x00122eb5: test ah, bh; or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d017d], cl; call dword ptr [edx + 0x52]; 
0x001785bf: test ah, bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf00003], al; ret; 
0x0007a6af: test ah, cl; add byte ptr [eax], al; add byte ptr [ebx + 0x7d8be045], cl; in al, 0x89; ret; 
0x001a0480: test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001784b2: test al, 0; add byte ptr [eax - 0x73], dl; cmp eax, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00176b31: test al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x73], ch; stc; call dword ptr [eax + 0x6a]; 
0x00179b4a: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edi; jae 0x179b4c; call dword ptr [eax + 0x6a]; 
0x00179fbb: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edi; jae 0x179fbd; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00177890: test al, 0; add byte ptr [eax - 0x73], dl; xchg eax, edi; jb 0x177892; call dword ptr [eax + 0x6a]; 
0x001a3e94: test al, 0; add byte ptr [eax], al; add edx, 4; jl 0x1a3fd0; lea eax, [ecx + 4]; ret; 
0x0011be7c: test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a42b4: test al, 0; add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0011be44: test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0016d80e: test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0017b7fa: test al, 0; add byte ptr [ebx + 0x267f01f8], al; add esp, 8; pop ebx; ret; 
0x00024899: test al, 0x11; add byte ptr [ebp - 0x699f27d], cl; call dword ptr [edi + 0x57]; 
0x00192bea: test al, 0x1e; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00161900: test al, 0x1f; jb 0x1618fd; call dword ptr [ebp - 0x73]; 
0x001a30e0: test al, 0x20; jne 0x1a3170; lea eax, [edi - 0xc]; pop edi; ret; 
0x001a3c60: test al, 0x20; jne 0x1a3cf0; lea eax, [ecx + 4]; ret; 
0x001a3e90: test al, 0x20; jne 0x1a3f40; add edx, 4; jl 0x1a3fd0; lea eax, [ecx + 4]; ret; 
0x001a42a8: test al, 0x20; jne 0x1a4350; test al, 0x40; jne 0x1a4360; lea eax, [edx + 7]; ret; 
0x001920ea: test al, 0x29; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019106a: test al, 0x37; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009ae2e: test al, 0x3b; add byte ptr [eax], al; ret; 
0x0014f1f4: test al, 0x3f; in eax, dx; jmp dword ptr [ebp - 0x77]; 
0x001a2c24: test al, 0x40; jne 0x1a2cf0; lea eax, [edi + 7]; pop edi; ret; 
0x001a35e0: test al, 0x40; jne 0x1a3710; lea eax, [edi + 7]; pop edi; ret; 
0x001a3c58: test al, 0x40; jne 0x1a3d00; test al, 0x20; jne 0x1a3cf0; lea eax, [ecx + 4]; ret; 
0x001a42b0: test al, 0x40; jne 0x1a4360; lea eax, [edx + 7]; ret; 
0x00091f21: test al, 0x40; jne 0x91706; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00183a9e: test al, 0x42; stc; call dword ptr [eax + 0x6a]; 
0x0012644f: test al, 0x4c; sar ecx, 1; jmp dword ptr [ecx]; 
0x0016a2e4: test al, 0x5a; cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0018e5ea: test al, 0x5f; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007d971: test al, 0x61; cli; jmp dword ptr [esi - 0x70]; 
0x0014fedb: test al, 0x6d; stc; call dword ptr [eax + 0x53]; 
0x0017d9a4: test al, 0x76; stc; call dword ptr [eax - 0x18]; 
0x0017d10c: test al, 0x76; stc; call dword ptr [edi + 0x53]; 
0x0017bf4b: test al, 0x76; stc; call dword ptr [edi + 0x56]; 
0x0017c787: test al, 0x76; stc; call dword ptr [esi + 0x57]; 
0x00127ea6: test al, 0x83; in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x00173647: test al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0005b91a: test al, 0x83; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0012a871: test al, 0x84; add eax, 0x9fc28100; lds edx, ptr [eax]; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x0007f824: test al, 0x88; add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0005a748: test al, 0x88; stc; call dword ptr [eax - 0x18]; 
0x000d172f: test al, 0x89; ret 0x458b; 
0x001aad58: test al, 0x89; ret; 
0x0005d1b7: test al, 0x8a; stc; call dword ptr [eax - 0x18]; 
0x0009baf4: test al, 0x9c; cmp eax, dword ptr [eax]; add cl, ch; sar esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x000a3b8d: test al, 0xa7; stc; call dword ptr [eax - 0x18]; 
0x000a35dc: test al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x000d0208: test al, 0xad; stc; call dword ptr [eax - 0x18]; 
0x00169352: test al, 0xbc; and al, 0xf3; jmp dword ptr [ebp - 0x75]; 
0x001a87b1: test al, 0xc7; inc ebp; test byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd189; 
0x001ae951: test al, 0xc7; test dword ptr [edi + edi*8 - 1], edi; inc dword ptr [ebx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x45c7; 
0x0005e692: test al, 0xd; add byte ptr [ebp - 0x674477d], cl; call dword ptr [eax - 0x73]; 
0x00071a75: test al, 0xda; clc; inc dword ptr [ecx]; int1; jmp ecx; 
0x001379d7: test al, 0xe8; ret; 
0x00035b93: test al, 0xe9; ret; 
0x00039e61: test al, 0xe; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0013442b: test al, 0xf0; jmp dword ptr [esi - 0x70]; 
0x001a53f5: test al, 0xf0; jne 0x1a54b0; lea eax, [edi - 0x10]; pop edi; ret; 
0x000a3240: test al, 0xf9; call dword ptr [eax + 0x68]; 
0x000a3df2: test al, 0xf9; call dword ptr [eax - 0x18]; 
0x0009e8de: test al, 0xf9; call dword ptr [eax - 0x73]; 
0x00161458: test al, 0xf; jb 0x161455; call dword ptr [ebp - 0x73]; 
0x001a515a: test al, 0xf; jne 0x1a5220; test dl, 0xf; jne 0x1a52a0; lea eax, [ecx + 4]; ret; 
0x0018d26b: test al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x0017e62d: test al, 0xfb; call dword ptr [ebp + 0x57]; 
0x0012c163: test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009631b: test al, 1; je 0x96360; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x001a5264: test al, 1; jne 0x1a5280; lea eax, [ecx + 4]; ret; 
0x000975b4: test al, 1; jne 0x97586; mov eax, 0x10; pop ebx; ret; 
0x001a30bb: test al, 2; jne 0x1a3140; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a3adb: test al, 2; jne 0x1a3cc0; mov eax, ecx; ret; 
0x001a3de9: test al, 2; jne 0x1a3f10; add edx, 0; jl 0x1a3fd0; mov eax, ecx; ret; 
0x001a4285: test al, 2; jne 0x1a4320; test al, 4; jne 0x1a4330; lea eax, [edx + 3]; ret; 
0x001a35bd: test al, 4; jne 0x1a36e0; lea eax, [edi + 3]; pop edi; ret; 
0x001a3ad3: test al, 4; jne 0x1a3cd0; test al, 2; jne 0x1a3cc0; mov eax, ecx; ret; 
0x001a428d: test al, 4; jne 0x1a4330; lea eax, [edx + 3]; ret; 
0x00093072: test al, 5; add byte ptr [ebx + 0x548b684f], cl; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000930b8: test al, 5; add byte ptr [ebx - 0x76f3dbac], cl; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x001a5260: test al, al; je 0x1a5270; test al, 1; jne 0x1a5280; lea eax, [ecx + 4]; ret; 
0x00098a3b: test al, al; je 0x98a50; xor eax, eax; add esp, 8; pop ebx; ret; 
0x001829f0: test al, al; jne 0x182a16; mov eax, 4; add esp, 0xc; ret; 
0x000c04e0: test al, al; jne 0xc04d8; xor eax, eax; ret; 
0x000f7590: test al, al; jne 0xf755d; xor eax, eax; ret; 
0x000374ee: test al, bh; inc dword ptr [ecx]; cli; jmp edx; 
0x0009c8d8: test al, ch; ret 0xff96; 
0x0007ae23: test al, dl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0004ffeb: test bh, ch; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00087a54: test bh, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x000b1c44: test bh, dl; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00062177: test bh, dl; or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x000a5c88: test bl, ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x000fb7a8: test bl, ah; add dword ptr [eax], eax; add byte ptr [ebx + 0x48b9f14], cl; and al, 0x29; ret 0x5689; 
0x00072ac7: test bl, bh; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x000374b2: test bl, bh; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ce06], al; ret 0; 
0x0007647d: test bl, bh; or eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x000828f8: test bl, dh; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0007d9b8: test bl, dl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00073b46: test byte ptr [0x83000001], al; ret 0x8904; 
0x001469cd: test byte ptr [0x83000001], bl; in al, dx; or al, 0xff; je 0x1469fc; xor al, ch; ret 0xedc7; 
0x0007a3df: test byte ptr [0x83ffffff], bl; in al, dx; or al, 0x31; call dword ptr [ebp - 0x18]; 
0x00096f1d: test byte ptr [0x83ffffff], bl; in al, dx; or al, 0x8d; xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; jmp edx; 
0x00143164: test byte ptr [0x89000001], ah; ret 0xe283; 
0x000dc3c6: test byte ptr [0x89000002], dl; ret; 
0x0012a872: test byte ptr [0x9fc28100], al; lds edx, ptr [eax]; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x0005027a: test byte ptr [0xba000002], ch; pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x0012ece1: test byte ptr [eax + 0x18bb01ce], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000342ad: test byte ptr [eax + 0x200], dl; ret; 
0x000766c0: test byte ptr [eax + 0x2bffffe4], dh; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000835ab: test byte ptr [eax + 0x39000000], ch; ret; 
0x00168977: test byte ptr [eax + eax + 0x54890000], al; and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0019f031: test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000bff40: test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x0004866b: test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x20e9; 
0x0004794b: test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0010bab8: test byte ptr [eax + eax*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0009d566: test byte ptr [eax + eax], 0; add esp, 0x2c; ret; 
0x001a4a31: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x001025dd: test byte ptr [eax + ebp*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x000cd783: test byte ptr [eax + ebp*4], ah; add byte ptr [eax], al; add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000ce142: test byte ptr [eax + ebp*4], ah; add byte ptr [eax], al; add cl, ch; ret; 
0x0011b01a: test byte ptr [eax + ebp*8], ah; add byte ptr [eax], al; add byte ptr [ebp - 0x6a5da7a], cl; call dword ptr [eax - 0x18]; 
0x0006cf01: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x000cc0c7: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c5707: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x001122f0: test byte ptr [eax + ebx], ah; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x001682bf: test byte ptr [eax + ecx*4], ah; add al, 0; add byte ptr [ebp - 0x68d6a7d], cl; call dword ptr [eax - 0x18]; 
0x0014aeb6: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0003d24b: test byte ptr [eax + edi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004f5bf: test byte ptr [eax + edi*4], ah; add byte ptr [eax], al; add cl, ch; push es; idiv bh; call dword ptr [eax + 0x6a]; 
0x00122de5: test byte ptr [eax + edx - 0x7c730000], al; out 0x60, eax; stc; call dword ptr [ecx + 0x51]; 
0x00061611: test byte ptr [eax + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x0005d7cd: test byte ptr [eax + edx*8], ah; add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x00112352: test byte ptr [eax + edx], ah; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00122b67: test byte ptr [eax - 0x137d0000], dl; or byte ptr [ebp - 0x6a4427d], cl; call dword ptr [eax + 0x55]; 
0x0010a2ec: test byte ptr [eax - 0x16000005], ah; ret; 
0x001a49e1: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00181fd8: test byte ptr [eax - 0x6c854], dl; jmp eax; 
0x00170ae4: test byte ptr [eax - 0x6c8d0], dl; jmp eax; 
0x001701b0: test byte ptr [eax - 0x6c910], dl; jmp eax; 
0x0016d622: test byte ptr [eax - 0x6ccd4], dl; jmp eax; 
0x0010e312: test byte ptr [eax - 0x6ede0], dh; jmp eax; 
0x0010d5e8: test byte ptr [eax - 0x6ef60], dh; jmp eax; 
0x0010d409: test byte ptr [eax - 0x6f098], dh; jmp eax; 
0x00103b8c: test byte ptr [eax - 0x6f640], bl; jmp eax; 
0x000fbe43: test byte ptr [eax - 0x6f760], dl; jmp eax; 
0x000fbd65: test byte ptr [eax - 0x6f994], dl; jmp eax; 
0x000e24ec: test byte ptr [eax - 0x70488], cl; jmp eax; 
0x000ad2ea: test byte ptr [eax - 0x71194], cl; jmp eax; 
0x000a97e2: test byte ptr [eax - 0x711e4], cl; jmp eax; 
0x000a9722: test byte ptr [eax - 0x71208], cl; jmp eax; 
0x0007237f: test byte ptr [eax - 0x722c8], bl; jmp eax; 
0x0007235b: test byte ptr [eax - 0x72418], bl; jmp eax; 
0x00071deb: test byte ptr [eax - 0x7249c], bl; jmp eax; 
0x0006d090: test byte ptr [eax - 0x72954], dl; jmp eax; 
0x00066383: test byte ptr [eax - 0x72aa8], bl; jmp eax; 
0x000662a6: test byte ptr [eax - 0x72bf8], bl; jmp eax; 
0x00065d13: test byte ptr [eax - 0x72c7c], bl; jmp eax; 
0x000617a0: test byte ptr [eax - 0x73134], dl; jmp eax; 
0x0002a620: test byte ptr [eax - 0x74fffffe], dl; jl 0x2a64c; cmp byte ptr [ebp - 0x6851379], cl; call dword ptr [eax - 0x73]; 
0x0008861d: test byte ptr [eax - 0x75000000], bh; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0010bab2: test byte ptr [eax - 0x75000000], bl; test byte ptr [eax + eax*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0002c204: test byte ptr [eax - 0x75000000], dl; je 0x2c230; and byte ptr [ebx - 0x76dbdb84], cl; ret 0xf229; 
0x00093cd1: test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x00169653: test byte ptr [eax - 0x77000000], bl; ret; 
0x00122bd3: test byte ptr [eax - 0x7cfffffa], ch; in al, dx; or byte ptr [ebp - 0x6a3397d], cl; call dword ptr [eax + 0x55]; 
0x000da76b: test byte ptr [eax - 0x7cfffffd], al; in al, dx; or byte ptr [ebp - 0x6a9db7d], cl; call dword ptr [eax + 0x56]; 
0x00154635: test byte ptr [eax - 0x7cfffffe], cl; in al, dx; or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x6913a80], cl; call dword ptr [eax + 0x55]; 
0x0015707b: test byte ptr [eax - 0x7d000000], al; ret 0x8301; 
0x0012c533: test byte ptr [eax - 0x7d000000], cl; in al, dx; add al, 0x89; ret; 
0x0013ae5a: test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x0002f069: test byte ptr [eax - 0x7d000000], dh; ret; 
0x00101adc: test byte ptr [eax - 0x9fffff0], ch; ret 0xf02; 
0x0010a4ea: test byte ptr [eax - 7], bl; call dword ptr [eax - 0x18]; 
0x00088db4: test byte ptr [eax], 0x80; jne 0x88dc0; ret; 
0x0007efe2: test byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x001a73b0: test byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [ebx - 0x177ce010]; or al, 0x89; ret 0xe283; 
0x000ed8b7: test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a672: test byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00168978: test byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0012a6ab: test byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012e5f9: test byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 3; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000684fa: test byte ptr [eax], cl; xor al, byte ptr [eax]; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x000344ae: test byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x000c74b2: test byte ptr [ebp + 0x31000003], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0011f893: test byte ptr [ebp + 0x39000000], al; ret; 
0x0017ff08: test byte ptr [ebp + 0x50282444], -0x73; xchg dword ptr [esi + ecx*4 - 0xc], ebp; call dword ptr [eax - 0x73]; 
0x001054c3: test byte ptr [ebp + 0xf000001], bh; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0009efc5: test byte ptr [ebp - 0x1d170007], bl; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0016ad92: test byte ptr [ebp - 0x68b8b7d], cl; call dword ptr [edx + 0x6a]; 
0x00094726: test byte ptr [ebp - 0x72000002], dh; xchg al, ch; xchg esi, eax; stc; call dword ptr [eax + 0x68]; 
0x00136934: test byte ptr [ebp - 0x74000002], bh; inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x00069d46: test byte ptr [ebp - 0x74fffff0], ah; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x000389bd: test byte ptr [ebp - 0x77000000], ch; ret 0xab8b; 
0x0013bc13: test byte ptr [ebp - 0x7cfffff9], ah; rol byte ptr [ecx], 0x83; ret 0x3904; 
0x00122bee: test byte ptr [ebp - 0x7cfffffb], ch; in al, dx; or byte ptr [ebp - 0x6a2f87d], cl; call dword ptr [eax + 0x55]; 
0x00108546: test byte ptr [ebp - 0x7d000000], dh; ret; 
0x000de9de: test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000a48ac: test byte ptr [ebx + 0x28], 1; jne 0xa4888; sub esp, 0xc; push eax; call edx; 
0x00183f28: test byte ptr [ebx + 0x39000000], bh; ret; 
0x00083bc8: test byte ptr [ebx + 0x39000000], ch; ret; 
0x0004af11: test byte ptr [ebx + 0x39282444], cl; ret 0x840f; 
0x0008d928: test byte ptr [ebx + 0x5e5b0c43], 0x29; ror dword ptr [ebp + 0x40000184], 1; add byte ptr [eax], al; ret; 
0x0008d672: test byte ptr [ebx + 0x650c245c], -1; adc eax, 0x10; pop ebx; pop esi; ret; 
0x000bea00: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0017c7b7: test byte ptr [ebx + eax - 0x137d0000], bh; or byte ptr [ebp - 0x6896675], cl; call dword ptr [ecx - 0x77]; 
0x0016a5c5: test byte ptr [ebx - 0x138], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0010dc8a: test byte ptr [ebx - 0x6eea0], dh; add eax, ebx; jmp eax; 
0x0010a912: test byte ptr [ebx - 0x6f150], ch; add eax, ebx; jmp eax; 
0x0010a8ee: test byte ptr [ebx - 0x6f248], dl; add eax, ebx; jmp eax; 
0x0010a729: test byte ptr [ebx - 0x6f390], dl; add eax, ebx; jmp eax; 
0x000ea40d: test byte ptr [ebx - 0x6fe68], ch; add eax, ebx; jmp eax; 
0x00095839: test byte ptr [ebx - 0x72000003], ah; xchg dword ptr [eax], eax; xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x00122d2f: test byte ptr [ebx - 0x72fffff6], ch; add ecx, 0x5f; stc; call dword ptr [ecx + 0x51]; 
0x001a6784: test byte ptr [ebx - 0x743e76c6], 0x5a; add al, 0x83; ret 0xd304; 
0x0017b05b: test byte ptr [ebx - 0x74c7dba4], cl; inc esi; or byte ptr [ecx], al; ret; 
0x00068d11: test byte ptr [ebx - 0x74ffffe7], bh; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x001715a0: test byte ptr [ebx - 0x75000000], bl; inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0008d3f0: test byte ptr [ebx - 0x75000000], ch; dec esp; and al, 0xc; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x000ab6e3: test byte ptr [ebx - 0x75000000], dh; pop ebp; rol byte ptr [ecx], 1; ret; 
0x00122cc6: test byte ptr [ebx - 0x7cfffff7], dh; in al, dx; or byte ptr [ebp - 0x6a1337d], cl; call dword ptr [eax + 0x55]; 
0x0019f03a: test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0008f311: test byte ptr [ebx - 0x7ffbdbb4], -0xf; add edi, 0x89744; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000337ed: test byte ptr [ebx - 0x814], dh; test eax, eax; je 0x337f9; call eax; 
0x0019e763: test byte ptr [ebx - 0x85474], al; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0019bf56: test byte ptr [ebx - 0x85474], al; sub eax, ecx; pop ebx; ret; 
0x001ae386: test byte ptr [ebx - 0xa343], cl; call ebx; 
0x0017bee1: test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0017f6d8: test byte ptr [ebx], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x00027aae: test byte ptr [ebx], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x0016fea3: test byte ptr [ebx], al; lodsb al, byte ptr [esi]; xor edi, ecx; call dword ptr [eax + 0x52]; 
0x00060b4c: test byte ptr [ebx], al; pushfd; inc edx; stc; call dword ptr [eax + 0x6a]; 
0x001ad5b8: test byte ptr [ebx], al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [ecx]; 
0x00065903: test byte ptr [ebx], bh; add al, 0; add byte ptr [ecx], bh; ret; 
0x0002fd16: test byte ptr [ebx], bh; stc; call dword ptr [eax - 1]; 
0x00122dff: test byte ptr [ebx], bl; adc byte ptr [eax], al; add byte ptr [ebp - 0x69ef47d], cl; call dword ptr [edx + 0x52]; 
0x00072e34: test byte ptr [ebx], ch; sbb al, 0; add byte ptr [ecx], al; ret; 
0x00183b68: test byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00183d38: test byte ptr [ebx], dh; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0006db91: test byte ptr [ebx], dl; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x000a6e43: test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa774]; cmovne eax, edx; ret; 
0x00138903: test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa784]; cmovne eax, edx; ret; 
0x000c33cc: test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000a6f4c: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1765a4]; cmove eax, edx; ret; 
0x000a6f0c: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x176634]; cmove eax, edx; ret; 
0x000a8e6c: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1769d4]; cmove eax, edx; ret; 
0x000a7adc: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x176f04]; cmove eax, edx; ret; 
0x000a9c9c: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1785e4]; cmove eax, edx; ret; 
0x000a9d1c: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1894a4]; cmove eax, edx; ret; 
0x000a8e9c: test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a9d9c: test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00094993: test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00132461: test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00036d24: test byte ptr [ecx - 0x1fe0008], al; jmp esi; 
0x0006d615: test byte ptr [ecx - 0x72934], al; lea eax, [ecx + eax - 0x1c9bbb]; jmp eax; 
0x00063816: test byte ptr [ecx - 0x72e94], dl; jmp eax; 
0x00064f0d: test byte ptr [ecx - 0x73014], dl; jmp eax; 
0x0018c0b1: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001822e6: test byte ptr [ecx - 0x76ffffff], al; ret 0x808b; 
0x001808ca: test byte ptr [ecx - 0x77000000], al; ret 0xe283; 
0x0013b69a: test byte ptr [ecx - 0x7cfffffd], ah; ret; 
0x001368ca: test byte ptr [ecx - 0x7cfffffe], dh; in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x000a6895: test byte ptr [ecx - 0x7cffffff], ah; ret 0xe901; 
0x000a68ad: test byte ptr [ecx - 0x7cffffff], bl; ret 0xe901; 
0x001583c2: test byte ptr [ecx - 0x7d000000], al; ret 0x8014; 
0x000a472a: test byte ptr [ecx - 0x7d000000], bh; in al, dx; or byte ptr [esi - 1], dl; jae 0xa475a; call eax; 
0x0016f8aa: test byte ptr [ecx - 0x7d000000], bl; rcr byte ptr [ebx], 0x89; loope 0x16f83e; ret 0x25; 
0x0009fe6a: test byte ptr [ecx - 0x7d000000], ch; in al, dx; add al, 0x8d; or dword ptr [eax + 0x52], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x00136953: test byte ptr [ecx - 0x837b], cl; call dword ptr [esi + 0x6a]; 
0x000a6ed7: test byte ptr [ecx - 0xd14], dl; ret; 
0x000a6eb7: test byte ptr [ecx - 0xe34], dl; ret; 
0x0009e8f0: test byte ptr [ecx - 7], dl; call dword ptr [eax - 0x18]; 
0x0008f527: test byte ptr [ecx], 0xc3; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001a9a9a: test byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x458b; 
0x001a24e8: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x0006d61c: test byte ptr [ecx], al; inc ebp; jecxz 0x6d621; jmp eax; 
0x0017c7da: test byte ptr [ecx], ch; add al, 0; add byte ptr [ebx - 0x4c72f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x57]; 
0x00168558: test byte ptr [ecx], cl; std; jmp dword ptr [esi - 0x70]; 
0x000b1c9a: test byte ptr [ecx], dl; idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00151b97: test byte ptr [edi + 0x652f0000], cl; je 0x151c02; mov byte ptr [ebx + 0x8f88], 0; mov dword ptr [ebx + 0x8f78], 0; call esi; 
0x00103b82: test byte ptr [edi + 0xe], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x28]; add eax, dword ptr [eax + ebx*4 - 0x6f640]; jmp eax; 
0x000a139c: test byte ptr [edi - 0x72fffffd], dl; pop edx; or dh, dh; ret; 
0x00135cdc: test byte ptr [edi - 0x74ffffff], al; push esi; or al, 0xf6; ret 0xf04; 
0x00184aac: test byte ptr [edi - 0x75000000], bl; outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x000a09e3: test byte ptr [edi - 0x77000000], al; ret; 
0x001013e4: test byte ptr [edi - 0x77000000], bh; ret 0xe2c1; 
0x000301c7: test byte ptr [edi - 0x7cffffff], dh; rol byte ptr [ecx], 0x83; ret; 
0x0017d13c: test byte ptr [edi - 0x7d000000], bl; in al, dx; or byte ptr [ebp - 0x689666a], cl; call dword ptr [edx - 0x77]; 
0x0003978c: test byte ptr [edi - 0x7d000000], ch; in al, dx; or byte ptr [ebp - 0x6c1407b], cl; call dword ptr [eax + 0x53]; 
0x0002fd0c: test byte ptr [edi - 0x7d000000], cl; in al, dx; or byte ptr [ebp - 0x6c47b7d], cl; call dword ptr [eax - 1]; 
0x0019ed4c: test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0017bf5c: test byte ptr [edi - 0x7d000000], dh; in al, dx; or byte ptr [ebp - 0x6894955], cl; call dword ptr [ebp + 0x56]; 
0x001abc04: test byte ptr [edi - 0x900000d], ah; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [eax]; 
0x0014b393: test byte ptr [edi - 0xa000000], ch; ret 0xf08; 
0x001a2183: test byte ptr [edi], -0x4a; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00103a78: test byte ptr [edi], -0x6c; ret 0xd008; 
0x00035b6f: test byte ptr [edi], -0x78; xor eax, 0x8bffffff; inc ebp; mov esp, 0xe9ac4589; ret 0xfffd; 
0x00057a9b: test byte ptr [edi], -0x7b; insd dword ptr es:[edi], dx; add al, 0; add byte ptr [ebx - 0x36677b], al; jmp eax; 
0x001aeef2: test byte ptr [edi], -0x7b; lahf; add byte ptr [eax], al; add byte ptr [ecx + 0x7c891a3c], cl; sbb al, byte ptr [ebx + eax*4]; ret; 
0x000a3967: test byte ptr [edi], -0x7b; ret 1; 
0x000f9d83: test byte ptr [edi], -0x7c; mov edx, 0x89000000; ret; 
0x00122c40: test byte ptr [edi], 0; add byte ptr [ebx - 0x7c72f714], al; mov bl, 0x5d; stc; call dword ptr [eax + 0x55]; 
0x000b8606: test byte ptr [edi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009166f: test byte ptr [edi], 0x49; ret; 
0x0002d455: test byte ptr [edi], ah; add al, byte ptr [eax]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x00069715: test byte ptr [edi], ah; and eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x850f; 
0x0017089c: test byte ptr [edi], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000b1ca4: test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ca5eb: test byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00128b6c: test byte ptr [edi], ch; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cmc; arpl cx, di; call dword ptr [eax + 0x56]; 
0x0014fe4c: test byte ptr [edx + 0x39000001], ch; ret 0x840f; 
0x0007b559: test byte ptr [edx + 0x39000001], dl; ret; 
0x0009232e: test byte ptr [edx + 0x80], 0x10; jne 0x92340; xor eax, eax; add esp, 0xc; ret; 
0x00069059: test byte ptr [edx - 0x74ffffe3], dl; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x000f9d85: test byte ptr [edx - 0x77000000], bh; ret; 
0x00180881: test byte ptr [edx - 0x77000000], ch; ret 0xe283; 
0x0014bcf8: test byte ptr [edx - 0x7c000002], bl; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d5942: test byte ptr [edx - 0x7c000019], ch; in al, dx; add al, 0x8b; popfd; ror cl, 0xff; call dword ptr [esi + 0x6a]; 
0x00122c75: test byte ptr [edx - 0x7cfffff8], ch; in al, dx; or byte ptr [ebp - 0x6a1ce7d], cl; call dword ptr [eax + 0x55]; 
0x00122c24: test byte ptr [edx - 0x7cfffff9], bl; in al, dx; or byte ptr [ebp - 0x6a2907d], cl; call dword ptr [eax + 0x55]; 
0x00170df1: test byte ptr [edx - 0x7cfffffc], cl; in al, dx; or al, 0x8b; inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x000305d1: test byte ptr [edx - 0x7cffffff], dl; in al, dx; or byte ptr [ebp - 0x67bd379], cl; call dword ptr [eax + 0x56]; 
0x000bff1d: test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x001a20e9: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x000b0de6: test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x000a317e: test byte ptr [edx], 0; add dh, dh; ret; 
0x0005a949: test byte ptr [edx], 0x20; je 0x5a958; add esp, 0xc; ret; 
0x00077c19: test byte ptr [edx], 0x20; je 0x77c28; add esp, 0xc; ret; 
0x001a87b4: test byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd189; 
0x00111f78: test byte ptr [edx], al; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0007e149: test byte ptr [edx], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00090a58: test byte ptr [edx], cl; add byte ptr [esi - 0x70], ah; nop; nop; xor eax, eax; ret; 
0x0007e6bd: test byte ptr [esi + 0x39000000], bh; ret; 
0x001aee2e: test byte ptr [esi + edi*8 - 1], ah; jmp dword ptr [esi - 0x7b]; 
0x00162af0: test byte ptr [esi + edi*8 - 1], bh; call dword ptr [eax - 0x73]; 
0x0010aab2: test byte ptr [esi - 0x45ffffff], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xfae9; 
0x000e725f: test byte ptr [esi - 0x70098], cl; add eax, esi; jmp eax; 
0x000e7230: test byte ptr [esi - 0x700b0], cl; add eax, esi; jmp eax; 
0x0006400f: test byte ptr [esi - 0x72f14], dl; jmp eax; 
0x00158301: test byte ptr [esi - 0x74ffffea], bl; jl 0x15832d; or al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x00091b2d: test byte ptr [esi - 0x74fffffd], bh; je 0x91b59; add al, 0x89; ret; 
0x0017562d: test byte ptr [esi - 0x77000000], bl; ret; 
0x0012167c: test byte ptr [esi - 0x7c000002], bh; in al, dx; or byte ptr [ebp - 0x6c1a67a], cl; call dword ptr [eax - 1]; 
0x0016392d: test byte ptr [esi - 0x7d000000], al; in al, dx; or al, 0x8d; test dword ptr [edx + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x000eb243: test byte ptr [esi - 0x7d000000], al; ret 0x8901; 
0x0006f6e9: test byte ptr [esi], 0; add byte ptr [ebx - 0x76b3dbb4], cl; dec esp; and al, 4; jmp eax; 
0x0008a127: test byte ptr [esi], 0x80; jne 0x8a158; add esp, 4; pop ebx; pop esi; ret; 
0x0007f800: test byte ptr [esi], 2; jne 0x7f868; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00068868: test byte ptr [esi], ah; adc al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x00122b9d: test byte ptr [esi], ah; add eax, 0xec830000; or byte ptr [ebp - 0x6a3b57d], cl; call dword ptr [eax + 0x55]; 
0x00122c90: test byte ptr [esi], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; pop si; stc; call dword ptr [eax + 0x55]; 
0x00068b72: test byte ptr [esi], ch; cmp eax, dword ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x001657fd: test byte ptr [esi], dh; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; cmp dword ptr [ebx - 7], esi; call dword ptr [eax - 0x18]; 
0x0014bdbc: test byte ptr [esp + eax*4], ah; add byte ptr [eax], al; add byte ptr [ebp - 0x694117d], cl; call dword ptr [eax - 0x73]; 
0x000d88d0: test byte ptr [esp + eax], ah; add dword ptr [eax], eax; add byte ptr [ecx + 0x50342444], cl; mov eax, dword ptr [esp + 0x78]; call eax; 
0x001099c5: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000c6bdc: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x000990b6: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00054dcd: test byte ptr [esp + ecx*4], ah; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0004e914: test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x448b; 
0x0004f608: test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x45e9; 
0x0014798c: test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00112268: test byte ptr [esp + edx], ah; add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x0009bf2a: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004bafc: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x7de9; 
0x0004ae37: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0016483d: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00042dce: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add cl, dl; call 0x21060e5d; ret 0xb60f; 
0x000cd55c: test byte ptr [esp], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0015a385: test byte ptr [esp], ah; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x3c]; call ecx; 
0x00198194: test ch, 0x40; jne 0x198160; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001011b5: test ch, al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001a4988: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x001609f6: test ch, bh; jmp dword ptr [esi - 0x70]; 
0x00074127: test ch, bl; sub al, byte ptr [eax]; add byte ptr [ebx - 0x5177b], cl; call ecx; 
0x001ab4c5: test ch, ch; add dword ptr [eax], eax; add byte ptr [ebx - 0x8b73], al; call dword ptr [eax]; 
0x0006e0b7: test ch, ch; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x0002fcee: test ch, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; jle 0x2fd35; stc; call dword ptr [edx + 0x50]; 
0x0006b29d: test ch, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e76b], cl; dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x000b1c4e: test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ff38e: test ch, dl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x00042154: test cl, 0x20; je 0x4215d; mov eax, edx; xor edx, edx; ret; 
0x001980eb: test cl, 0x40; jne 0x198160; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0009d48f: test cl, 0x40; jne 0x9d4b8; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x000a315a: test cl, al; add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0014e50f: test cl, al; stc; call dword ptr [eax - 0x73]; 
0x0013e8c2: test cl, bh; call dword ptr [eax + 0x53]; 
0x000a9f1e: test cl, bh; call dword ptr [eax + 0x55]; 
0x000305dc: test cl, bh; call dword ptr [eax + 0x56]; 
0x00033fe8: test cl, bh; call dword ptr [eax - 0x18]; 
0x000a903d: test cl, bh; call dword ptr [eax - 0x18]; stosb byte ptr es:[edi], al; mov edx, 0x2c89fff8; and al, 0x89; ret; 
0x0013e853: test cl, bh; call dword ptr [eax - 0x77]; 
0x00038236: test cl, bh; call dword ptr [edx - 0x77]; 
0x00033dc8: test cl, bh; call dword ptr [esi + 0x50]; 
0x000bea82: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x001ab838: test cl, ch; cmc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0010fc50: test cl, cl; jne 0x10fc33; xor eax, eax; pop ebx; ret; 
0x000eda10: test cl, cl; jne 0xed9f3; xor eax, eax; pop ebx; ret; 
0x000f04c0: test cl, cl; jne 0xf04a3; xor eax, eax; pop ebx; ret; 
0x000f1290: test cl, cl; jne 0xf1273; xor eax, eax; pop ebx; ret; 
0x000f3d30: test cl, cl; jne 0xf3d13; xor eax, eax; pop ebx; ret; 
0x000f4b10: test cl, cl; jne 0xf4af3; xor eax, eax; pop ebx; ret; 
0x0017bf9a: test cl, dl; add byte ptr [eax], al; add byte ptr [ebx - 0x4472f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [edi + 0x56]; 
0x001328ba: test cl, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x001a2945: test dh, 0x20; jne 0x1a2990; test dh, 0x40; jne 0x1a2994; add eax, 0xf; ret; 
0x001a294a: test dh, 0x40; jne 0x1a2994; add eax, 0xf; ret; 
0x001a2b97: test dh, 0x40; jne 0x1a2d70; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a4732: test dh, 0x40; jne 0x1a4ac1; add eax, 0xf; pop edi; ret; 
0x001a5239: test dh, 0xf; jne 0x1a52a0; lea eax, [ecx + 0xc]; ret; 
0x001a292c: test dh, 2; jne 0x1a2980; test dh, 4; jne 0x1a2984; add eax, 0xb; ret; 
0x001a2931: test dh, 4; jne 0x1a2984; add eax, 0xb; ret; 
0x001a2bdd: test dh, 4; jne 0x1a2d70; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a4709: test dh, 4; jne 0x1a4aad; add eax, 0xb; pop edi; ret; 
0x001a49ce: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001634e2: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x000d4ae4: test dh, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x001a5155: test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001a2905: test dl, 0x20; jne 0x1a2970; test dl, 0x40; jne 0x1a2974; add eax, 7; ret; 
0x001a290a: test dl, 0x40; jne 0x1a2974; add eax, 7; ret; 
0x001a2af4: test dl, 0x40; jne 0x1a2d70; lea eax, [edi + 7]; pop edi; ret; 
0x001a46e2: test dl, 0x40; jne 0x1a4a99; add eax, 7; pop edi; ret; 
0x001a5162: test dl, 0xf; jne 0x1a52a0; lea eax, [ecx + 4]; ret; 
0x001a28e6: test dl, 2; jne 0x1a2960; test dl, 4; jne 0x1a2964; add eax, 3; ret; 
0x001a28eb: test dl, 4; jne 0x1a2964; add eax, 3; ret; 
0x001a2b3a: test dl, 4; jne 0x1a2d70; lea eax, [edi + 3]; pop edi; ret; 
0x001a46bc: test dl, 4; jne 0x1a4a85; add eax, 3; pop edi; ret; 
0x0007060e: test dl, ah; or dword ptr [eax], eax; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x0014ebef: test dl, al; stc; call dword ptr [eax - 0x73]; 
0x0007b282: test dl, bh; jmp dword ptr [esi - 0x70]; 
0x000846e4: test dl, bh; stc; jmp dword ptr [esi - 0x70]; 
0x00050bd1: test dl, bl; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0010df09: test dl, ch; add byte ptr [eax], al; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x00073c8b: test dl, cl; add al, byte ptr [eax]; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0010fc83: test dl, dl; je 0x10fc54; pop ebx; ret; 
0x000d6e95: test dl, dl; je 0xd6eb0; mov cl, dl; and cl, 0xf; je 0xd6ec0; ret; 
0x000eda43: test dl, dl; je 0xeda14; pop ebx; ret; 
0x000f04f3: test dl, dl; je 0xf04c4; pop ebx; ret; 
0x000f12c3: test dl, dl; je 0xf1294; pop ebx; ret; 
0x000f3d63: test dl, dl; je 0xf3d34; pop ebx; ret; 
0x000f4b43: test dl, dl; je 0xf4b14; pop ebx; ret; 
0x000398df: test dl, dl; jne 0x398c0; ret; 
0x000a6082: test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x000428be: test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x00028224: test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0006dbe3: test dl, dl; or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret; 
0x000b12c7: test dword ptr [0x5bfffffe], edx; ret; 
0x000b119f: test dword ptr [0x5bffffff], edi; ret; 
0x000bfb4d: test dword ptr [0x5e000002], eax; xor eax, eax; pop ebx; ret; 
0x000b6dde: test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x001aba49: test dword ptr [0x89fffff5], eax; ret; 
0x001a9c94: test dword ptr [0x89fffff7], eax; ret; 
0x00140801: test dword ptr [0x89fffffe], ebp; ret 0xf883; 
0x001aa585: test dword ptr [0x8bfffffd], esp; dec ebp; mov esp, 0x830fca39; ret; 
0x000b5a26: test dword ptr [0xe9fffff5], esp; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b1556: test dword ptr [0xe9fffff6], eax; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000b1536: test dword ptr [0xe9fffff6], esp; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0010abfe: test dword ptr [0xf7fffffd], edi; ret 0x67; 
0x000eed91: test dword ptr [eax + 0x1fffffb], eax; ret; 
0x00027f1c: test dword ptr [eax + 0x39], edi; stc; call dword ptr [edi - 1]; 
0x000672e9: test dword ptr [eax + 0x39fffffb], edi; ret; 
0x0009fd97: test dword ptr [eax + 0x52], ecx; stc; call dword ptr [eax + 0x53]; 
0x000b0f3b: test dword ptr [eax + 0x5f000001], esp; pop ebx; ret; 
0x000b0e43: test dword ptr [eax + 0x5f000002], ebx; pop ebx; ret; 
0x000bf06b: test dword ptr [eax + 0x66000000], esi; pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x00175a4d: test dword ptr [eax + 0x66], ebp; stc; call dword ptr [eax + 0x6a]; 
0x0013d5c4: test dword ptr [eax + 0x6afff968], esp; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0016f40a: test dword ptr [eax + 0x6afff9c7], esi; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x000b839b: test dword ptr [eax + 0xa], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0019fb31: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000b6dbb: test dword ptr [eax + 9], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0019f431: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001a2c1f: test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1a2cf0; lea eax, [edi + 7]; pop edi; ret; 
0x000d6bf7: test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0015d4f7: test dword ptr [eax + eax - 0x137d0000], ecx; or byte ptr [ebx - 0x72efdbbc], cl; adc byte ptr [ebx + 0x70], 0xf9; call dword ptr [eax - 1]; 
0x001804b7: test dword ptr [eax + eax - 0x3b7d0000], ebp; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00027e98: test dword ptr [eax + eax*4], edi; stc; jmp dword ptr [esi - 0x77]; 
0x00167697: test dword ptr [eax + eax], 0x8d14ec83; cmp byte ptr [esi + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x000b6e3f: test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000b6e87: test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00077397: test dword ptr [eax - 0x17000005], ebp; pop ds; mov byte ptr [0x28e9ffff], al; in al, 0xff; dec dword ptr [ebx - 0x5037b]; call dword ptr [ecx + 0x51]; 
0x0006bc73: test dword ptr [eax - 0x17000005], ebp; ret; 
0x0007930a: test dword ptr [eax - 0x1a], ecx; clc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x00094317: test dword ptr [eax - 0x3b7c0001], edx; adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0xe283; 
0x001a42ab: test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1a4360; lea eax, [edx + 7]; ret; 
0x001a42b3: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x001a30e3: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x0006886e: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x00068d17: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00068b78: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x000673e7: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x0006700e: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x0006737c: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0010d420: test dword ptr [eax - 0x74ffffef], edx; jl 0x10d44c; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax + 0x68]; 
0x000eef86: test dword ptr [eax - 0x76000005], ecx; ret 0xe329; 
0x0006735f: test dword ptr [eax - 0x76000005], edi; lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00068845: test dword ptr [eax - 0x76000005], edi; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x000d4744: test dword ptr [eax - 0x76000037], esi; ret 0x1ae9; 
0x000d3418: test dword ptr [eax - 0x76000037], esi; ret 0x8b90; 
0x001a3abb: test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x0006970d: test dword ptr [eax - 0x7a000006], edx; fisttp dword ptr [edi]; test byte ptr [edi], ah; and eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x850f; 
0x00067354: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x29; ret; 
0x0006bc0e: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x00169a72: test dword ptr [eax - 0x7cfffffe], edi; ret; 
0x00152a3b: test dword ptr [eax - 0x7d000000], ebp; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0010f493: test dword ptr [eax - 0x7d000000], ebp; ret 0x8d01; 
0x001a3e93: test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x0019ed43: test dword ptr [eax - 0x7d000000], ebp; stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0009df32: test dword ptr [eax - 0x7d000000], ecx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012b52a: test dword ptr [eax - 0x7d000000], edx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015db3b: test dword ptr [eax - 0x7d000000], esi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0016df3b: test dword ptr [eax - 0x7d000000], esi; in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x000fa0d3: test dword ptr [eax - 0xa000000], ecx; ret 0x7420; 
0x00049b45: test dword ptr [eax], 0x85660000; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x000b0edb: test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000d0d0e: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x0009f458: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000d1271: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000d007e: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x001116b7: test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001538cb: test dword ptr [eax], eax; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000d4a5c: test dword ptr [eax], eax; in eax, 0xff; dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x001614a3: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00028c6f: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; jnp 0x28c76; call dword ptr [eax - 0x73]; 
0x001a4570: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x000db3be: test dword ptr [eax], ebp; push esi; stc; call dword ptr [eax - 0x18]; 
0x0015a7e3: test dword ptr [eax], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000b83e3: test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ef90b: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x00153e33: test dword ptr [eax], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0013eb5d: test dword ptr [ebp + 0x40], ecx; stc; call dword ptr [eax - 0x77]; 
0x001a0eee: test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0019fbdc: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0019f9fc: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0019f4cc: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x000bfbc1: test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000b8446: test dword ptr [ebp + 0x5f000009], esi; pop esi; pop ebx; ret; 
0x000a5404: test dword ptr [ebp + 0x6afff954], ecx; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x0019f826: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000b716f: test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000b713f: test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x0014cff7: test dword ptr [ebp - 0x12], ebp; dec dword ptr [ebp - 0x63f3f7a]; call dword ptr [eax - 0x73]; 
0x000b59c6: test dword ptr [ebp - 0x1600000b], eax; sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x001a2ad6: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a3c36: test dword ptr [ebp - 0x58000000], edx; add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001a3e66: test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001a3136: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x0010d023: test dword ptr [ebp - 0x74ffffeb], ecx; jl 0x10d04f; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax - 0x73]; 
0x0015a18f: test dword ptr [ebp - 0x74fffffe], ebx; je 0x15a1bb; adc byte ptr [ebp - 0x63acb7a], cl; call dword ptr [eax - 0x73]; 
0x0002919b: test dword ptr [ebp - 0x74ffffff], ebx; jl 0x291c7; sub byte ptr [ebp - 0x6845379], cl; call dword ptr [eax - 0x73]; 
0x0008fcb6: test dword ptr [ebp - 0x77000000], ebp; ret 0xca83; 
0x001a3be6: test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x001473b6: test dword ptr [ebp - 0x7c000003], esp; ret; 
0x00169111: test dword ptr [ebp - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a3e6e: test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001a3ef6: test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x0013311a: test dword ptr [ebp - 7], esp; call dword ptr [eax - 1]; 
0x001a30be: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a3c3e: test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000b8658: test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000d6b50: test dword ptr [ebx + 1], ecx; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x001a2af8: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0019f5f8: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x000b8688: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b6da0: test dword ptr [ebx + 9], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b0dbf: test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000c1ad4: test dword ptr [ebx + ebp*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x00094a72: test dword ptr [ebx + ebp*8], eax; clc; dec dword ptr [ebp - 0x15fef3a1]; jmp edx; 
0x00143494: test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014348b: test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0012f61d: test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000eea49: test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0012f5db: test dword ptr [ebx + edi*8 - 1], ecx; call ecx; 
0x001274f2: test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x000ee9e8: test dword ptr [ebx + edi*8 - 1], edi; inc dword ptr [ecx]; ret; 
0x000f001b: test dword ptr [ebx + edi*8 - 1], esp; dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x0013f4bd: test dword ptr [ebx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x5f]; 
0x000a48c6: test dword ptr [ebx + edi*8 - 9], esp; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000d70b7: test dword ptr [ebx - 0x3b7c0001], ebp; adc al, 0x5b; pop esi; ret; 
0x00091b66: test dword ptr [ebx - 0x72000005], ebx; lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x0010719b: test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x001a470d: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x00171a57: test dword ptr [ebx - 0x7f000000], ebx; les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x000b5298: test dword ptr [ebx - 0x7ffffffe], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00101ae5: test dword ptr [ebx - 0x9fffff1], esi; ret 0xf04; 
0x001a46ae: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x00094e1a: test dword ptr [ebx], 0xbf0f0000; inc edi; adc al, 0x29; ret; 
0x0019f9fd: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000b84f8: test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b1410: test dword ptr [ebx], ebp; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b1430: test dword ptr [ebx], ecx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b83c0: test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0017eb42: test dword ptr [ecx + 0x5b000000], ebp; pop esi; pop edi; ret; 
0x0019f700: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x000b133b: test dword ptr [ecx + 0x5bfffffd], esp; ret; 
0x000b1243: test dword ptr [ecx + 0x5bfffffe], ebx; ret; 
0x000d6c12: test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000b6e62: test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x00175a30: test dword ptr [ecx + 0x6afff974], eax; add eax, 0x34858d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x001a0e62: test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x001a3b8a: test dword ptr [ecx + 2], esi; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b6f92: test dword ptr [ecx + 7], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b8482: test dword ptr [ecx + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a9aec: test dword ptr [ecx + eax + 0x3c890000], eax; sbb dword ptr [ecx - 0x7cfbe684], ecx; ret; 
0x00145db7: test dword ptr [ecx + eax - 0x137d0000], eax; or al, 0x8d; adc dword ptr [ebx], 0x6b; stc; call dword ptr [eax - 0x18]; 
0x000d6b97: test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000c143c: test dword ptr [ecx + eax], edx; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000d6b67: test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000d36ce: test dword ptr [ecx + ecx*8 + 0x468dffff], ecx; dec dword ptr [edi]; dec edi; ret 0x48d; 
0x00055eca: test dword ptr [ecx + ecx*8 - 1], ebp; dec dword ptr [ebx - 0x36977b]; dec dword ptr [ebx - 0x366f63]; dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x0010d5ff: test dword ptr [ecx - 0x74fffff1], esi; jl 0x10d62b; or byte ptr [ebp - 0x64e1379], cl; call dword ptr [eax + 0x68]; 
0x0019d830: test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x001a47ca: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x0006973d: test dword ptr [ecx], 0x83d689d2; in al, dx; or byte ptr [ebx - 0x58f63], cl; call dword ptr [esi + 0x50]; 
0x00121d90: test dword ptr [ecx], 0x8901558d; ret; 
0x000607ed: test dword ptr [ecx], ebp; inc ebx; stc; call dword ptr [eax + 0x53]; 
0x000b85e2: test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0003f67e: test dword ptr [ecx], edx; add dword ptr [eax], eax; add byte ptr [ecx - 0x76e7dbbc], cl; ret; 
0x000b84ca: test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0013d51c: test dword ptr [edi + 0x39], esp; stc; call dword ptr [eax + 0x53]; 
0x001463b9: test dword ptr [edi + 0x39], esp; stc; call dword ptr [eax + 0x57]; 
0x00146fac: test dword ptr [edi + 0x39], esp; stc; call dword ptr [eax - 0x73]; 
0x00147441: test dword ptr [edi + 0x3e], edx; stc; call dword ptr [eax + 0x52]; 
0x00147483: test dword ptr [edi + 0x3e], edx; stc; call dword ptr [eax + 0x53]; 
0x0005240a: test dword ptr [edi + 0x40], ecx; stc; call dword ptr [edi + 0x6a]; 
0x000b1225: test dword ptr [edi + 0x5bfffffe], esi; ret; 
0x000d6bdc: test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000b886c: test dword ptr [edi + 0x5f000005], ecx; pop esi; pop ebx; ret; 
0x000b883c: test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x000b855c: test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000b8464: test dword ptr [edi + 0x5f000009], edx; pop esi; pop ebx; ret; 
0x000b889c: test dword ptr [edi + 5], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b858c: test dword ptr [edi + 8], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b6f6f: test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x0019f675: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000250dd: test dword ptr [edi + edi*2 - 7], ebx; call dword ptr [eax - 0x18]; 
0x0013029d: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x106dd380]; call dword ptr [eax + 0x6a]; 
0x00178017: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx - 0x8f63]; dec dword ptr [ebx - 0x2abb7700]; les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x001403b1: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0003237c: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [eax + 0x57]; 
0x001ad239: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [ebx]; 
0x0017a5e0: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [ecx + 0x6a]; 
0x0005c0d1: test dword ptr [edi + edi*8 - 1], ebp; dec dword ptr [ebx - 0x77cefc0]; xor byte ptr [eax + ecx - 0x7b], dh; dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x0017a581: test dword ptr [edi + edi*8 - 1], ebx; call dword ptr [eax + 0x6a]; 
0x000acc65: test dword ptr [edi + edi*8 - 1], ebx; inc dword ptr [ebx + 0x440ffff8]; ret; 
0x00025d1b: test dword ptr [edi + edi*8 - 1], ebx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0016fa92: test dword ptr [edi + edi*8 - 1], ecx; call dword ptr [eax + 0x56]; 
0x0016acbe: test dword ptr [edi + edi*8 - 1], ecx; call dword ptr [esi - 0x73]; 
0x0017a3d8: test dword ptr [edi + edi*8 - 1], ecx; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x0013fe78: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax + 0x6a]; 
0x0013668f: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [ebx + 0x6a]; 
0x00136955: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [esi + 0x6a]; 
0x001ae953: test dword ptr [edi + edi*8 - 1], edi; inc dword ptr [ebx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x45c7; 
0x0017a553: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000f7af7: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebx - 0x15637b]; inc dword ptr [ebx - 0x7f72f714]; add bl, byte ptr [eax - 7]; call dword ptr [eax - 1]; 
0x0010a611: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x001a718c: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [ebx]; 
0x001ad5ba: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [ecx]; 
0x0016fa8c: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x001ac391: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ecx]; ret; 
0x001abc0a: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [eax]; 
0x0016fbf4: test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax + 0x6a]; 
0x0005ce99: test dword ptr [edi + edi*8 - 1], esp; dec dword ptr [ebx + 0x4589b055]; mov eax, 0xfff89ee9; call dword ptr [eax + 0x52]; 
0x0013fc86: test dword ptr [edi + edi*8 - 1], esp; dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x0015fd34: test dword ptr [edi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x39]; 
0x0010a4da: test dword ptr [edi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000e4f5c: test dword ptr [edi - 0x48000000], edx; or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012d17c: test dword ptr [edi - 0x75000000], ebp; or al, 0x24; mov edx, dword ptr [esp + 4]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0010091e: test dword ptr [edi - 0x7cfffffb], ebx; ret; 
0x0012129d: test dword ptr [edi - 0x7d000000], ebp; in al, dx; or al, 0x89; ret; 
0x0011b328: test dword ptr [edi - 0x7d000000], ebx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a3ecc: test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x000b538c: test dword ptr [edi - 0x7fffffff], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00109e7a: test dword ptr [edi - 0x9fffffd], esp; ret 0xf02; 
0x001a47f4: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x001a2114: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0018f251: test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x00095db1: test dword ptr [edi], 0xfffdb184; inc dword ptr [ebx - 0x7872f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x000965b7: test dword ptr [edi], 0xfffeea84; inc dword ptr [ebx - 0x7872f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0008ddb9: test dword ptr [edi], 0xfffef884; inc dword ptr [ebx - 0x7872f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x00096f1b: test dword ptr [edi], 0xffff1d84; inc dword ptr [ebx - 0x7872f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x00096cfb: test dword ptr [edi], 0xffff2484; inc dword ptr [ebx - 0x7872f314]; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0002986a: test dword ptr [edi], eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000b88cc: test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000d6b7c: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000e920c: test dword ptr [edi], edi; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000b85bc: test dword ptr [edi], edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008efb0: test dword ptr [edi], esp; add dword ptr [eax], eax; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000b5204: test dword ptr [edi], esp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001583b9: test dword ptr [edx + 0x39000000], ecx; inc edx; add al, 0xf; test byte ptr [ecx - 0x7d000000], al; ret 0x8014; 
0x00095273: test dword ptr [edx + 0x50], esi; stc; call dword ptr [eax - 0x18]; 
0x000bfccc: test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000b0b51: test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000b7079: test dword ptr [edx + 0x5f000006], eax; pop esi; pop ebx; ret; 
0x000b7049: test dword ptr [edx + 0x5f000006], esi; pop esi; pop ebx; ret; 
0x000b6f49: test dword ptr [edx + 0x5f000007], esi; pop esi; pop ebx; ret; 
0x000b6d59: test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x001a3da9: test dword ptr [edx + 1], esp; add byte ptr [eax], al; add edx, 0; jl 0x1a3fd0; mov eax, ecx; ret; 
0x000b0e89: test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b7199: test dword ptr [edx + 5], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b0e67: test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000b0eb7: test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000f79eb: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6903f68], cl; dec dword ptr [ebp - 0x6a81e80]; call dword ptr [ebx + 0x50]; 
0x000f7aa0: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6a7fd80], cl; call dword ptr [eax + 0x53]; 
0x000f7afd: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6a7fd80], cl; call dword ptr [eax - 1]; 
0x000f7c01: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebx - 0x73], dl; sub dh, 0x57; stc; call dword ptr [eax - 0x18]; 
0x00090a57: test dword ptr [edx + ecx + 0x66906600], eax; nop; nop; xor eax, eax; ret; 
0x00175a46: test dword ptr [edx + ecx*8], edx; stc; call dword ptr [eax - 0x73]; 
0x0013a545: test dword ptr [edx + edi*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000edfc6: test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x0006731d: test dword ptr [edx + edi*8 - 1], ebp; call dword ptr [eax - 1]; 
0x0006b1f1: test dword ptr [edx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x75]; 
0x000f5804: test dword ptr [edx + edi*8 - 1], edx; call dword ptr [eax - 0x75]; 
0x000691b8: test dword ptr [edx + edi*8 - 1], esi; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x00066feb: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x00163936: test dword ptr [edx + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0002dfbd: test dword ptr [edx - 0x74000002], esi; jl 0x2dfe9; cmp byte ptr [ebp - 0x685d379], cl; call dword ptr [eax - 0x73]; 
0x000df3ba: test dword ptr [edx - 0x7600000f], edx; ret 0xe283; 
0x00096ca9: test dword ptr [edx - 0x77000000], ebx; ret 0xf283; 
0x00096ec9: test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x000e4b34: test dword ptr [edx - 0x7d000000], ebp; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0010adb4: test dword ptr [edx - 0x7d000000], esp; les ebp, ptr [eax + 0x5b]; ret; 
0x00175117: test dword ptr [edx - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000320c9: test dword ptr [edx - 0x9000003], eax; ret 0xf03; 
0x001a46dd: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x000fabc0: test dword ptr [edx - 0xa000000], ebp; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x00031da9: test dword ptr [edx - 0xa000000], esp; ret 0x7503; 
0x0011098d: test dword ptr [edx], eax; add byte ptr [ebx - 0x5ab6b], cl; dec dword ptr [ebp - 0x64def7e]; call dword ptr [eax + 0x68]; 
0x000b71f9: test dword ptr [edx], eax; add eax, 0x5e5f0000; pop ebx; ret; 
0x0003f28a: test dword ptr [edx], ebp; aas; stc; call dword ptr [ebx + 0x50]; 
0x000df125: test dword ptr [edx], ebx; out 0xff, eax; call dword ptr [ebp + 0x55]; 
0x000b0ac1: test dword ptr [edx], ebx; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0009b457: test dword ptr [edx], ecx; push ecx; stc; call dword ptr [eax - 0x18]; 
0x000b6ee9: test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b71c9: test dword ptr [edx], esi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b0e25: test dword ptr [esi + 0x5f000002], esi; pop ebx; ret; 
0x00146398: test dword ptr [esi + 0x6b], edx; stc; call dword ptr [eax - 0x18]; 
0x000b0a7d: test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b6ea5: test dword ptr [esi + 8], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b6d7d: test dword ptr [esi + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b84a5: test dword ptr [esi + 9], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b877f: test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0013df87: test dword ptr [esi - 0x17fffffa], edi; dec edi; stc; cli; jmp dword ptr [esi - 0x3f]; 
0x001a2ac5: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001a310d: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x00105410: test dword ptr [esi - 0x74000008], ebx; mov esp, 0x9024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x001a4736: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x001a46e6: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x0010b098: test dword ptr [esi - 0x7d000000], edi; les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x000b5696: test dword ptr [esi - 0x7f000002], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000b518d: test dword ptr [esi - 0x7ffffffd], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x001a46d4: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x001a47fd: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x001a515d: test dword ptr [esi - 0xa000000], edi; ret 0xf0f; 
0x000a227d: test dword ptr [esi], eax; add dword ptr [eax], eax; add dh, dh; ret; 
0x0005e00d: test dword ptr [esi], eax; add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf40; 
0x001a2b2d: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x000b0d9d: test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b6ec5: test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001493c6: test dword ptr [esi], esp; add al, byte ptr [eax]; add dh, dh; ret; 
0x0003328d: test dword ptr [esp + eax*4], ebp; stc; call dword ptr [eax + 0x56]; 
0x000a540d: test dword ptr [esp + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x0004de68: test dword ptr [esp + edx], ecx; add byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0004295e: test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x000b6c99: test eax, 0x30010f0; or al, 0x99; jmp ecx; 
0x0017eb43: test eax, 0x5b000000; pop esi; pop edi; ret; 
0x0015cd6c: test eax, 0x8100025f; ret; 
0x0009fe6b: test eax, 0x83000000; in al, dx; add al, 0x8d; or dword ptr [eax + 0x52], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x0019d831: test eax, 0x8300000e; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x001087b3: test eax, 0x83fff84e; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0006bc0a: test eax, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x00139910: test eax, 0x8d2efff8; je 0x13993d; add al, ch; ret; 
0x00146afb: test eax, 0xbeb4838d; stc; call dword ptr [eax - 0x73]; 
0x000b8363: test eax, 0xc181000c; cmp bl, bl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b833e: test eax, 0xc181000c; pop edi; fist dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00171fb2: test eax, 0xec83fff7; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0013d2e8: test eax, 0xffff34e9; jmp dword ptr [esi - 0x70]; 
0x00121b43: test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x00120f28: test eax, eax; cmove eax, edx; ret; 
0x0004256d: test eax, eax; cmovne eax, edx; ret; 
0x0011f41f: test eax, eax; cmovns eax, edx; ret; 
0x001322f8: test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x00108603: test eax, eax; je 0x10854b; call eax; 
0x001086a3: test eax, eax; je 0x10859a; call eax; 
0x00120281: test eax, eax; je 0x1202c8; call eax; 
0x001203a5: test eax, eax; je 0x120448; call eax; 
0x00121424: test eax, eax; je 0x121429; ret; 
0x00121b28: test eax, eax; je 0x121b30; add esp, 0xc; ret; 
0x00121b68: test eax, eax; je 0x121b70; add esp, 0xc; ret; 
0x00123f90: test eax, eax; je 0x123f96; mov dword ptr [eax], edx; ret; 
0x00128948: test eax, eax; je 0x128950; test edx, edx; jne 0x128958; ret; 
0x0012896c: test eax, eax; je 0x128974; test edx, edx; jne 0x128978; ret; 
0x00129c80: test eax, eax; je 0x129c8d; pop esi; pop ebx; jl 0x24ef0; ret; 
0x0012b252: test eax, eax; je 0x12b270; mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x00135fb0: test eax, eax; je 0x135fd8; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0013865f: test eax, eax; je 0x138670; add esp, 8; pop ebx; ret; 
0x0014ba26: test eax, eax; je 0x14ba30; add esp, 0x18; pop ebx; ret; 
0x0014d483: test eax, eax; je 0x14d48c; cmp dword ptr [eax + 8], edx; jne 0x14d480; ret; 
0x0015cbe3: test eax, eax; je 0x15cbf0; sub esp, 0xc; push esi; call eax; 
0x0015cf43: test eax, eax; je 0x15cf50; sub esp, 0xc; push esi; call eax; 
0x00168675: test eax, eax; je 0x168682; sub esp, 0xc; push esi; call eax; 
0x00168b28: test eax, eax; je 0x168b35; sub esp, 0xc; push esi; call eax; 
0x00168c58: test eax, eax; je 0x168c6f; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00168df1: test eax, eax; je 0x168e02; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00168e35: test eax, eax; je 0x168e40; add esp, 8; pop ebx; ret; 
0x00169554: test eax, eax; je 0x1694e8; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001699e4: test eax, eax; je 0x16998c; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00169a07: test eax, eax; je 0x169a14; sub esp, 0xc; push edi; call eax; 
0x00169c12: test eax, eax; je 0x169ade; sub esp, 0xc; push esi; call eax; 
0x00169d13: test eax, eax; je 0x169d20; sub esp, 0xc; push esi; call eax; 
0x0016a66b: test eax, eax; je 0x16a678; sub esp, 0xc; push esi; call eax; 
0x0016a892: test eax, eax; je 0x16a8b8; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0016aa66: test eax, eax; je 0x16ab6b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0016d5b5: test eax, eax; je 0x16d5c8; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0016df59: test eax, eax; je 0x16df66; sub esp, 0xc; push esi; call eax; 
0x0016df32: test eax, eax; je 0x16e078; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016e196: test eax, eax; je 0x16e1a6; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0016f3e6: test eax, eax; je 0x16f3f3; sub esp, 0xc; push esi; call eax; 
0x0016f3c7: test eax, eax; je 0x16f408; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0016f59d: test eax, eax; je 0x16f5aa; sub esp, 0xc; push edi; call eax; 
0x001708b7: test eax, eax; je 0x1708c4; sub esp, 0xc; push ebp; call eax; 
0x00170899: test eax, eax; je 0x1709a8; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00170c22: test eax, eax; je 0x170c32; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x00170dee: test eax, eax; je 0x171280; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x0017159d: test eax, eax; je 0x171640; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00172989: test eax, eax; je 0x172998; add esp, 4; pop ebx; pop esi; ret; 
0x001738e6: test eax, eax; je 0x1738f6; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00173fcf: test eax, eax; je 0x173fdf; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00174055: test eax, eax; je 0x17408f; sub esp, 0xc; mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0017fabb: test eax, eax; je 0x17fad0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0016f736: test eax, eax; je 0x24979; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x000337f3: test eax, eax; je 0x337f9; call eax; 
0x0003cb0f: test eax, eax; je 0x3cb23; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000418e5: test eax, eax; je 0x418f0; add esp, 8; pop ebx; ret; 
0x00042195: test eax, eax; je 0x4219f; bsr eax, eax; add eax, 1; ret; 
0x000421a4: test eax, eax; je 0x421ae; bsr eax, eax; add eax, 1; ret; 
0x000421b4: test eax, eax; je 0x421be; bsr eax, eax; add eax, 1; ret; 
0x00042205: test eax, eax; je 0x4220f; bsr eax, eax; add eax, 1; ret; 
0x000423d4: test eax, eax; je 0x423e1; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x000423f4: test eax, eax; je 0x42401; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x0004267c: test eax, eax; je 0x42690; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00059f50: test eax, eax; je 0x59f60; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x0007ac04: test eax, eax; je 0x7ac18; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007bfb8: test eax, eax; je 0x7bfd0; sub eax, 1; mov dword ptr [edx + 0x1a44], eax; ret; 
0x00085bd8: test eax, eax; je 0x85bf0; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x00087221: test eax, eax; je 0x87230; pop ebx; pop esi; pop edi; ret; 
0x00089f76: test eax, eax; je 0x89f8e; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008b278: test eax, eax; je 0x8b290; sub eax, 1; mov dword ptr [edx + 0x1a78], eax; ret; 
0x0008bcbd: test eax, eax; je 0x8bcd0; mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0009623b: test eax, eax; je 0x96251; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0009e0f2: test eax, eax; je 0x9e168; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000bf446: test eax, eax; je 0xbf460; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000dbed8: test eax, eax; je 0xdbf50; mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000e4b10: test eax, eax; je 0xe4b40; sub esp, 8; push esi; push ebx; call eax; 
0x000e5486: test eax, eax; je 0xe5498; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x00129a97: test eax, eax; jl 0x24ef0; je 0x129aa2; ret; 
0x00108c41: test eax, eax; jne 0x108c70; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00108cd4: test eax, eax; jne 0x108d08; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00108db9: test eax, eax; jne 0x108df0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00108e69: test eax, eax; jne 0x108ea0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00108f31: test eax, eax; jne 0x108f60; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00110fb6: test eax, eax; jne 0x110fe0; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001110aa: test eax, eax; jne 0x1110b8; add esp, 4; pop ebx; pop esi; ret; 
0x00111206: test eax, eax; jne 0x111230; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011c646: test eax, eax; jne 0x11c68a; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; call dword ptr gs:[0x10]; 
0x00120566: test eax, eax; jne 0x120590; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00120a96: test eax, eax; jne 0x120ac0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00124887: test eax, eax; jne 0x124848; add esp, 0xc; ret; 
0x00126d4e: test eax, eax; jne 0x126d90; mov eax, 0xd2; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00126e1e: test eax, eax; jne 0x126e60; mov eax, 0xd0; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00126fc4: test eax, eax; jne 0x126ff8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00127064: test eax, eax; jne 0x127098; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00127f85: test eax, eax; jne 0x127fa8; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x00128fb4: test eax, eax; jne 0x128ff0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00135b24: test eax, eax; jne 0x135b14; add esp, 4; pop ebx; pop esi; ret; 
0x001371e7: test eax, eax; jne 0x1371f8; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x137200; ret; 
0x0013c757: test eax, eax; jne 0x13c770; mov eax, ebx; pop ebx; ret; 
0x00146bdb: test eax, eax; jne 0x146be8; pop ebx; pop esi; pop edi; ret; 
0x00146c25: test eax, eax; jne 0x146c10; pop ebx; pop esi; pop edi; ret; 
0x0014ca5a: test eax, eax; jne 0x14ca68; add esp, 4; pop ebx; pop esi; ret; 
0x0014d474: test eax, eax; jne 0x14d487; ret; 
0x0015cf24: test eax, eax; jne 0x15cf10; add esp, 4; pop ebx; pop esi; ret; 
0x00169077: test eax, eax; jne 0x169098; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00169246: test eax, eax; jne 0x169280; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00169f17: test eax, eax; jne 0x169f28; add esp, 4; pop ebx; pop esi; ret; 
0x00173847: test eax, eax; jne 0x173830; add esp, 8; pop ebx; ret; 
0x0017eb3f: test eax, eax; jne 0x17ebf0; pop ebx; pop esi; pop edi; ret; 
0x001818d6: test eax, eax; jne 0x1818e0; add esp, 4; pop ebx; pop esi; ret; 
0x001a36b0: test eax, eax; jne 0x1a3780; xor eax, eax; pop edi; ret; 
0x001a3ff8: test eax, eax; jne 0x1a3c20; xor eax, eax; ret; 
0x001a3b48: test eax, eax; jne 0x1a3d80; xor eax, eax; ret; 
0x001a3b87: test eax, eax; jne 0x1a3e00; xor eax, eax; ret; 
0x00024b29: test eax, eax; jne 0x24b20; ret; 
0x0003c134: test eax, eax; jne 0x3c140; add esp, 8; pop ebx; ret; 
0x0003c3c3: test eax, eax; jne 0x3c3d0; add esp, 8; pop ebx; ret; 
0x0003c476: test eax, eax; jne 0x3c4a0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00059f35: test eax, eax; jne 0x59f54; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x00060fc3: test eax, eax; jne 0x60fd0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0007bf9c: test eax, eax; jne 0x7bfbc; mov dword ptr [edx + 0x1a48], 0; mov dword ptr [edx + 0x1a40], 0; ret; 
0x00082739: test eax, eax; jne 0x82750; mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x00089eda: test eax, eax; jne 0x89ed0; ret; 
0x0008ae0d: test eax, eax; jne 0x8ae28; ret; 
0x0008cbcd: test eax, eax; jne 0x8cbd8; ret; 
0x0009b51a: test eax, eax; jne 0x9b510; pop ebx; ret; 
0x0009b534: test eax, eax; jne 0x9b547; ret; 
0x000a485b: test eax, eax; jne 0xa4850; xor eax, eax; ret; 
0x000a4909: test eax, eax; jne 0xa4900; mov eax, ecx; ret; 
0x000a6064: test eax, eax; jne 0xa6073; ret; 
0x000bee42: test eax, eax; jne 0xbeea0; xor eax, eax; pop edi; ret; 
0x000bee08: test eax, eax; jne 0xbeec0; xor eax, eax; pop edi; ret; 
0x000bf0d8: test eax, eax; jne 0xbf150; xor eax, eax; ret; 
0x000bf107: test eax, eax; jne 0xbf170; xor eax, eax; ret; 
0x000bf58f: test eax, eax; jne 0xbf5d0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000d7051: test eax, eax; jne 0xd7048; xor edx, edx; mov eax, edx; ret; 
0x000f7813: test eax, eax; jne 0xf7820; add esp, 8; pop ebx; ret; 
0x000f8265: test eax, eax; jne 0xf8288; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0012cf20: test eax, eax; js 0x12cf30; add esp, 8; pop ebx; ret; 
0x0018546f: test eax, eax; js 0x185480; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00082f28: test eax, eax; js 0x82f30; ret; 
0x0009805f: test eax, eax; js 0x98070; mov dword ptr [edx + 0x3af4], eax; xor eax, eax; ret; 
0x00107f53: test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0005278b: test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x001524ae: test eax, eax; sete al; add esp, 0xc; ret; 
0x0016c590: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0016a901: test eax, eax; setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0016ae59: test eax, eax; setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00084ef9: test eax, eax; setne dl; mov eax, edx; ret; 
0x000ad693: test eax, ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x000b0e03: test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x001479eb: test eax, edi; add byte ptr [eax], al; add byte ptr [eax - 0x162676ed], cl; ret 0xfffb; 
0x000375d3: test eax, edi; inc dword ptr [ecx]; cli; jmp edx; 
0x000b6e03: test eax, edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b0f0b: test eax, edx; add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x0009b444: test eax, edx; cwde; stc; call dword ptr [eax + 0x68]; 
0x0009b471: test eax, edx; cwde; stc; call dword ptr [eax - 0x73]; 
0x000c1af5: test eax, esp; push esp; stc; call dword ptr [eax - 0x18]; 
0x0014a646: test ebp, eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x000a47f3: test ebp, ebp; jne 0xa4745; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x0010a84d: test ebp, ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x64e5f7d], cl; call dword ptr [eax - 0x73]; 
0x00080586: test ebp, edi; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001a2ade: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0019922c: test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000b83fe: test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015710f: test ebp, edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3db8c], cl; ret 0x8301; 
0x000b5236: test ebp, esi; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000bf046: test ebp, esi; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00159b41: test ebx, ebp; or byte ptr [eax], al; add byte ptr [ebx - 0x72efdb84], cl; xchg dword ptr [ebp + eax*8 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0017f85f: test ebx, ebx; je 0x17f888; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0017f8e6: test ebx, ebx; je 0x17f910; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000425b5: test ebx, ebx; je 0x425d0; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000429ea: test ebx, ebx; je 0x429f0; pop ebx; ret; 
0x00132166: test ebx, ebx; jne 0x132170; add esp, 4; pop ebx; pop esi; ret; 
0x0014581c: test ebx, ebx; jne 0x1457e8; mov eax, 1; pop ebx; ret; 
0x00182e8e: test ebx, ebx; jne 0x182ea0; add esp, 8; pop ebx; ret; 
0x001846da: test ebx, ebx; jne 0x1846e8; add esp, 8; pop ebx; ret; 
0x0003e845: test ebx, ebx; jne 0x3e810; pop ebx; pop esi; pop edi; ret; 
0x0008725a: test ebx, ebx; jne 0x87268; add esp, 8; pop ebx; ret; 
0x000a21e0: test ebx, ebx; jne 0xa216b; pop ebx; pop esi; pop edi; ret; 
0x000a5e6f: test ebx, ebx; jne 0xa5e87; pop ebx; pop esi; pop edi; ret; 
0x0009de90: test ebx, ebx; jns 0x9de98; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009ddb6: test ebx, ebx; js 0x9dde8; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000e8116: test ebx, ebx; js 0xe8170; mov eax, 0x166; lea ecx, [ebp - 0x6c324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000e81bf: test ebx, ebx; push esi; stc; call dword ptr [eax - 0x18]; 
0x0013a555: test ebx, edi; stc; call dword ptr [eax - 0x18]; 
0x000b8528: test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00122352: test ebx, esp; pop edx; stc; call dword ptr [eax - 0x39]; 
0x000de089: test ecx, 0xa40f02e1; ret; 
0x000bf8eb: test ecx, 0xff0000; je 0xbf8f4; inc eax; pop edi; ret; 
0x001ad97c: test ecx, eax; or byte ptr [eax], al; add byte ptr [ecx + 0x74891134], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000d6bb2: test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b4f42: test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x000b8812: test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0010836f: test ecx, ecx; je 0x10838c; cmp byte ptr [esp + 0x17], 0; jne 0x108420; call ecx; 
0x00123f72: test ecx, ecx; je 0x123f79; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x00132e38: test ecx, ecx; je 0x132e40; xor eax, eax; pop ebx; ret; 
0x001371ed: test ecx, ecx; je 0x137200; ret; 
0x0004292e: test ecx, ecx; je 0x42938; pop ebx; ret; 
0x0008416d: test ecx, ecx; je 0x84174; mov byte ptr [edx], 0; pop ebx; ret; 
0x000bf3fd: test ecx, ecx; je 0xbf410; bsf ecx, ecx; add eax, ecx; ret; 
0x00130e7d: test ecx, ecx; jne 0x130e90; mov eax, edx; pop ebx; pop esi; ret; 
0x00130ee8: test ecx, ecx; jne 0x130ef8; mov eax, edx; pop ebx; pop esi; ret; 
0x001310d3: test ecx, ecx; jne 0x1310e0; mov eax, edx; pop ebx; pop esi; ret; 
0x001316e8: test ecx, ecx; jne 0x1316f8; mov eax, edx; pop ebx; pop esi; ret; 
0x00131748: test ecx, ecx; jne 0x131758; mov eax, edx; pop ebx; pop esi; ret; 
0x00131923: test ecx, ecx; jne 0x131930; mov eax, edx; pop ebx; pop esi; ret; 
0x0016a0e3: test ecx, ecx; jne 0x16a108; mov dword ptr [eax], 0; pop ebx; ret; 
0x001818aa: test ecx, ecx; jne 0x1818b0; ret; 
0x0009e835: test ecx, ecx; jne 0x9e840; add esp, 8; pop ebx; ret; 
0x000d6f8e: test ecx, ecx; jne 0xd6f70; add eax, 1; ret; 
0x000d6f68: test ecx, ecx; jne 0xd6f8a; ret; 
0x0011e678: test ecx, ecx; js 0x11e684; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000f8224: test ecx, ecx; js 0xf8230; ret; 
0x000d19fc: test ecx, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0003d5e2: test ecx, edi; call dword ptr [eax - 0x18]; 
0x0003e3b5: test ecx, edi; call dword ptr [eax - 0x73]; 
0x0003e47f: test ecx, edi; call dword ptr [edx - 0x73]; 
0x00037a66: test ecx, edi; jmp dword ptr [esi - 0x77]; 
0x0002babf: test ecx, edx; or byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x000b5264: test edi, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000397a8: test edi, eax; stc; call dword ptr [eax + 0x53]; 
0x000eeb09: test edi, ecx; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f5bf9: test edi, ecx; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000b535c: test edi, ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000a3df7: test edi, edi; clc; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax - 0x58], esp; stc; call dword ptr [eax - 0x73]; 
0x001a4050: test edi, edi; je 0x1a40b0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00060483: test edi, edi; je 0x604a8; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000bf210: test edi, edi; je 0xbf270; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0009a962: test edi, edi; jmp dword ptr [esi - 0x70]; 
0x001382ba: test edi, edi; jne 0x1382c8; pop ebx; pop esi; pop edi; ret; 
0x000a48c3: test edi, edi; jne 0x2442f; pop ebx; pop esi; pop edi; ret; 
0x0003640d: test edi, edi; jne 0x363e0; pop ebx; pop esi; pop edi; ret; 
0x000d4f3e: test edi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000ee42f: test edx, eax; add al, byte ptr [eax]; add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x000b7111: test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000bf4c1: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x0019fde1: test edx, ebx; clc; int1; call dword ptr [ebx - 0x18]; 
0x0019fde1: test edx, ebx; clc; int1; call dword ptr [ebx - 0x18]; sub eax, 0x81fffe2f; ret; 
0x000b6e21: test edx, ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b8421: test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001a02e1: test edx, ecx; hlt; int1; call dword ptr [ebx - 0x18]; 
0x001a02e1: test edx, ecx; hlt; int1; call dword ptr [ebx - 0x18]; sub eax, 0x81fffe2a; ret; 
0x00199bf1: test edx, ecx; pop edx; bnd call dword ptr [ebx - 0x18]; 
0x00199bf1: test edx, ecx; pop edx; bnd call dword ptr [ebx - 0x18]; sbb eax, 0x81fffe91; ret; 
0x0008c543: test edx, edi; call dword ptr [eax + 0x6a]; 
0x0007b0fd: test edx, edi; call dword ptr [ebp - 0x77]; 
0x000b7229: test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0012a9c5: test edx, edx; je 0x12a9f8; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00146042: test edx, edx; je 0x146050; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00168974: test edx, edx; je 0x168a00; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0016c6b2: test edx, edx; je 0x16c6c0; add esp, 4; pop ebx; pop esi; ret; 
0x0016c772: test edx, edx; je 0x16c780; add esp, 4; pop ebx; pop esi; ret; 
0x0016c832: test edx, edx; je 0x16c840; add esp, 4; pop ebx; pop esi; ret; 
0x001721e7: test edx, edx; je 0x1721fa; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x001a0adb: test edx, edx; je 0x1a0ac0; add eax, ecx; pop ebx; pop esi; ret; 
0x00024b40: test edx, edx; je 0x24b45; ret; 
0x00033517: test edx, edx; je 0x3351d; call edx; 
0x00033aab: test edx, edx; je 0x33ab9; mov dword ptr [esp + 4], eax; call edx; 
0x00042829: test edx, edx; je 0x42833; bsr eax, edx; xor eax, 0x1f; ret; 
0x00042849: test edx, edx; je 0x42853; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008cb52: test edx, edx; je 0x8cb60; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008cc37: test edx, edx; je 0x8cc48; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008dffb: test edx, edx; je 0x8e038; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008ec12: test edx, edx; je 0x8ec48; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000bf1b8: test edx, edx; je 0xbf190; bsr ecx, edx; add eax, ecx; ret; 
0x0012894c: test edx, edx; jne 0x128958; ret; 
0x00128970: test edx, edx; jne 0x128978; ret; 
0x0017650c: test edx, edx; jne 0x176518; add esp, 0xc; ret; 
0x0017664c: test edx, edx; jne 0x176658; add esp, 0xc; ret; 
0x00181be5: test edx, edx; jne 0x181bf0; add esp, 8; pop ebx; ret; 
0x001a479e: test edx, edx; jne 0x1a47b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0007f2ea: test edx, edx; jne 0x7f2e0; ret; 
0x0008910a: test edx, edx; jne 0x89100; ret; 
0x0008d049: test edx, edx; jne 0x8d060; xend; xor eax, eax; add esp, 0xc; ret; 
0x0008e97d: test edx, edx; jne 0x8e9a0; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00096188: test edx, edx; jne 0x96198; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000b6d19: test edx, edx; jne 0xb6c8b; call 0x182d2d; add ecx, 0x10f01a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b8359: test edx, edx; jne 0xb82cb; call 0x182d2d; add ecx, 0x10db3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be2f9: test edx, edx; jne 0xbe26b; call 0x182d2d; add ecx, 0x107d6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c259a: test edx, edx; jne 0xc2590; ret; 
0x000d6d2d: test edx, edx; jne 0xd6d20; mov eax, ecx; pop ebx; pop esi; ret; 
0x000d707a: test edx, edx; jne 0xd7070; mov eax, ecx; pop ebx; ret; 
0x000dcaf7: test edx, edx; jne 0xdcb08; add esp, 4; pop ebx; pop esi; ret; 
0x000e4b60: test edx, edx; jns 0xe4bc8; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0008e24b: test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0004295f: test edx, edx; mov edx, 0x10; cmove eax, edx; ret; 
0x000428dc: test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0003cd9e: test edx, edx; sete al; ret; 
0x001076e0: test edx, esi; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0015f5b5: test edx, esi; call dword ptr [eax - 1]; 
0x00097989: test edx, esp; add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x00076bc0: test edx, esp; mov bl, 0xff; inc dword ptr [ebx - 0x51b73]; inc dword ptr [ecx + ecx*4]; ret; 
0x000bed6d: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0013ac72: test esi, ebp; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000754cd: test esi, ebp; ret; 
0x001a2acd: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00040ebd: test esi, edx; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x00029637: test esi, edx; add eax, dword ptr [eax]; add byte ptr [ebx - 0x74f3db94], cl; inc ebp; add dh, dh; ret; 
0x000b0de5: test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0011064c: test esi, esi; je 0x110667; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x0009aecf: test esi, esi; je 0x9af20; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x000dbffb: test esi, esi; je 0xdc050; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ee40c: test esi, esi; je 0xee427; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f0ebc: test esi, esi; je 0xf0ed7; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f1c8c: test esi, esi; je 0xf1ca7; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f472c: test esi, esi; je 0xf4747; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f550c: test esi, esi; je 0xf5527; sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x0015a51b: test esi, esi; jne 0x15a500; pop ebx; pop esi; pop edi; ret; 
0x00025f5d: test esi, esi; jne 0x25f44; add esp, 4; pop ebx; pop esi; ret; 
0x0003fabc: test esi, esi; jne 0x3faa4; add esp, 4; pop ebx; pop esi; ret; 
0x0008a917: test esi, esi; jne 0x8a900; add esp, 4; pop ebx; pop esi; ret; 
0x000b0b17: test esp, eax; add eax, 0x5b5f0000; ret; 
0x001a46b7: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x00109e71: test esp, ebp; add eax, dword ptr [eax]; add dh, dh; ret 0xf80; 
0x0019ff1f: test esp, ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x0003f9c6: test esp, ebx; cmp al, 0xf9; dec dword ptr [ebp - 0x6c0de6b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003f6f1: test esp, ebx; cmp al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003f3dc: test esp, ebx; cmp al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x0003f497: test esp, ebx; cmp al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xc5e9; 
0x0003f2d3: test esp, ebx; cmp al, 0xf9; dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x0009884c: test esp, ebx; sbb ah, dh; call dword ptr [eax - 0x73]; 
0x0003f03d: test esp, ecx; jg 0x3f021; call dword ptr [eax - 0x73]; 
0x001a5303: test esp, edi; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001a2aef: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000d6bc7: test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000dac83: test esp, esi; inc dword ptr [ebx - 0x7c76ef3c]; push 0x8900003e; ret 0xc085; 
0x0004254d: tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000428ba: tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x0004295a: tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x0004292a: tzcnt eax, ecx; test ecx, ecx; je 0x42938; pop ebx; ret; 
0x000428d8: tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x000429f0: tzcnt ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x00042566: tzcnt edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x00191d5d: ud0; inc dword ptr [ecx + 0x42df0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00172cd9: ud1; ret; 
0x000243f0: ud2; cmp dword ptr [ebp - 0x30], 0; je 0x24413; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0003b40a: verr word ptr [esi - 0x70]; nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x001715a1: wait; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00171a58: wait; add byte ptr [eax], al; add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a639b: wait; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00127952: wait; arpl cx, di; call dword ptr [edi + 0x50]; 
0x000a416f: wait; dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0017df21: wait; fcos; jmp dword ptr [esi - 0x70]; 
0x0010117a: wait; idiv bh; jmp dword ptr [esi - 0x70]; 
0x000a9dc9: wait; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x00110b0e: wait; in eax, dx; call dword ptr [eax + 0x56]; 
0x0004cae1: wait; jb 0x4cae2; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x000e2286: wait; jecxz 0xe2288; call dword ptr [eax + 0x57]; 
0x000b6c27: wait; lock adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0019fe65: wait; lodsb al, byte ptr [esi]; sar ecx, 1; jmp dword ptr [esi + 0xf]; 
0x000ffb71: wait; mov dword ptr [0xf889ffff], eax; pop ebx; pop esi; pop edi; ret; 
0x0019fe45: wait; mov ecx, ss; stc; jmp dword ptr [esi + 0xf]; 
0x00139441: wait; out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x0009d287: wait; sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3bd0], 0; ret; 
0x0009ed2e: wait; stc; call dword ptr [eax + 0x6a]; 
0x00126270: wait; stc; dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x0005a1a6: wait; std; jmp dword ptr [esi - 0x70]; 
0x001305d6: xchg ah, ah; mov dh, 0xf9; call dword ptr [eax - 0x18]; 
0x0009f348: xchg ah, bl; jbe 0x9f332; call dword ptr [eax + 0x57]; 
0x0005a79b: xchg ah, bl; mov cl, bh; call dword ptr [eax - 0x18]; 
0x0008f0f5: xchg ah, bl; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x00026fad: xchg ah, ch; jg 0x26faa; call dword ptr [eax - 0x73]; 
0x0009f37e: xchg ah, cl; ja 0x9f368; call dword ptr [eax + 0x57]; 
0x0002b6a2: xchg ah, cl; jp 0x2b69f; call dword ptr [eax - 0x73]; 
0x000d5977: xchg ah, dh; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000a24c1: xchg ah, dh; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000921a8: xchg al, ah; xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x0005ab3a: xchg al, al; mov ecx, edi; call dword ptr [eax - 0x73]; 
0x0010ec09: xchg al, bh; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x000d598a: xchg al, bh; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x0009472c: xchg al, ch; xchg esi, eax; stc; call dword ptr [eax + 0x68]; 
0x00094755: xchg al, ch; xchg esi, eax; stc; call dword ptr [eax + 0x6a]; 
0x00094807: xchg al, ch; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00077e86: xchg al, dh; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x00150753: xchg al, dh; ret 0xfff9; 
0x0019d83c: xchg bh, bh; adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00127a88: xchg bl, al; arpl cx, di; call dword ptr [eax + 0x68]; 
0x0014cff0: xchg bl, bh; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00121f40: xchg bl, cl; pop edx; stc; call dword ptr [eax - 0x18]; 
0x0006f796: xchg byte ptr [0x4c890000], cl; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00096107: xchg byte ptr [eax + 0x39000002], dh; ret; 
0x000838e1: xchg byte ptr [eax + eax - 0xf770000], ah; pop ebx; pop esi; pop edi; ret; 
0x0018377c: xchg byte ptr [eax + eax*2 - 7], dl; call dword ptr [eax - 0x73]; 
0x00058eb7: xchg byte ptr [eax + eax*2], ch; stc; call dword ptr [eax - 0x18]; 
0x0002742b: xchg byte ptr [eax + eax*4], al; stc; call dword ptr [eax - 0x73]; 
0x0013a702: xchg byte ptr [eax + eax], al; add eax, 0xfc70f; mov eax, dword ptr [eax + 0xc4]; add eax, dword ptr gs:[0]; ret; 
0x00171e75: xchg byte ptr [eax + ebx*2 - 0xd], bh; call dword ptr [eax - 0x48]; 
0x00058deb: xchg byte ptr [eax + ecx*4], bl; stc; call dword ptr [eax - 0x73]; 
0x0005aa36: xchg byte ptr [eax + ecx*8 - 0xdfe0008], bl; jmp edx; 
0x0009f3b4: xchg byte ptr [eax + edi*2 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x000c685e: xchg byte ptr [eax - 0x18], dl; jnp 0xc683b; clc; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x00151f7d: xchg byte ptr [eax - 0x3d], bl; stc; call dword ptr [eax - 0x73]; 
0x0011bd26: xchg byte ptr [eax - 0x4d], ch; stc; call dword ptr [eax - 0x18]; 
0x001110ce: xchg byte ptr [eax - 0x4e], ch; stc; call dword ptr [eax - 0x18]; 
0x0009fbfe: xchg byte ptr [eax - 0x57], al; stc; call dword ptr [eax - 0x73]; 
0x00095f7b: xchg byte ptr [eax - 0x69], al; stc; call dword ptr [eax - 0x73]; 
0x0005a763: xchg byte ptr [eax - 0x77], cl; stc; call dword ptr [eax - 0x18]; 
0x00058e35: xchg byte ptr [eax - 0x78], dh; stc; call dword ptr [eax - 0x73]; 
0x00121e63: xchg byte ptr [eax - 0x7affffbb], dl; ror byte ptr [edi], 0x84; ret; 
0x0008d881: xchg byte ptr [eax], ah; or dword ptr [eax], eax; add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x6072; 
0x0008d887: xchg byte ptr [eax], ah; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x6072; 
0x0017e9b3: xchg byte ptr [eax], ah; retf; stc; call dword ptr [eax - 0x73]; 
0x0012bc8b: xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002b6bd: xchg byte ptr [eax], al; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0015f68d: xchg byte ptr [eax], bh; jno 0x15f68a; call dword ptr [eax + 0x6a]; 
0x000a249e: xchg byte ptr [eax], bh; push ebx; stc; call dword ptr [eax - 0x18]; 
0x0002c38a: xchg byte ptr [eax], ch; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0009ed2c: xchg byte ptr [eax], cl; wait; stc; call dword ptr [eax + 0x6a]; 
0x00082535: xchg byte ptr [eax], dh; xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x000c23b7: xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0005a77f: xchg byte ptr [eax], dl; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x000930a0: xchg byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00094738: xchg byte ptr [ebp + 0x50], bl; stc; call dword ptr [eax - 0x73]; 
0x0009391e: xchg byte ptr [ebp + 0x50], dl; stc; call dword ptr [eax - 0x73]; 
0x000dfe59: xchg byte ptr [ebp + 0x56], dh; stc; call dword ptr [eax - 0x18]; 
0x0009efc4: xchg byte ptr [ebp + ebx*4 - 0x1d170007], al; idiv bh; jmp dword ptr [esi - 0x70]; 
0x000779d0: xchg byte ptr [ebp + edi*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x001423fe: xchg byte ptr [ebp + edi*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x00157e2a: xchg byte ptr [ebp + esi*8 - 0xf], ch; call dword ptr [eax + 0x6a]; 
0x0014085e: xchg byte ptr [ebp - 0x75000000], bl; add dword ptr [ebx - 0x79f0f008], eax; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x0014fe93: xchg byte ptr [ebp - 7], ch; call dword ptr [eax + 0x56]; 
0x000d0d15: xchg byte ptr [ebx + 0x39043944], cl; ret 0x8f0f; 
0x0002743e: xchg byte ptr [ebx + 0x39], bl; stc; call dword ptr [eax - 0x18]; 
0x00151f8d: xchg byte ptr [ebx + eax*8], ah; stc; call dword ptr [eax - 0x18]; 
0x000c23c7: xchg byte ptr [ebx + ebp*4], cl; stc; call dword ptr [eax - 0x18]; 
0x000299f4: xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x00029874: xchg byte ptr [ebx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x0013e73c: xchg byte ptr [ebx + edi*4 - 7], cl; call dword ptr [eax - 0x73]; 
0x0013cb26: xchg byte ptr [ebx + edi*4], bl; stc; call dword ptr [eax - 0x73]; 
0x0011bd86: xchg byte ptr [ebx + esi*4 - 0x17af0007], ah; pop ds; ret; 
0x0014dac9: xchg byte ptr [ebx - 0x7872f314], al; movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x001a4737: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x00058e6d: xchg byte ptr [ebx], al; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00076ea3: xchg byte ptr [ebx], ch; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x00121685: xchg byte ptr [ecx + 0x3e], bl; stc; call dword ptr [eax - 1]; 
0x0005d24f: xchg byte ptr [ecx + 0x41], ch; stc; call dword ptr [eax - 0x18]; 
0x0010ec1c: xchg byte ptr [ecx + 0x59], al; stc; call dword ptr [eax - 0x18]; 
0x00176b36: xchg byte ptr [ecx + 0x73], ch; stc; call dword ptr [eax + 0x6a]; 
0x0017a92c: xchg byte ptr [ecx + 0x76], ah; stc; call dword ptr [eax - 0x18]; 
0x0002b649: xchg byte ptr [ecx + eax*4 - 7], ah; call dword ptr [eax - 0x18]; 
0x00174253: xchg byte ptr [ecx + ebp*2], dl; stc; call dword ptr [eax + 0x6a]; 
0x0005a737: xchg byte ptr [ecx + ecx*4 - 7], bh; call dword ptr [eax - 0x73]; 
0x0009fa8e: xchg byte ptr [ecx + ecx], cl; add byte ptr [ecx], bh; ret; 
0x0016ffcd: xchg byte ptr [ecx], ch; jne 0x16ffca; call dword ptr [edi + 0x50]; 
0x000fd7a9: xchg byte ptr [ecx], ch; ret 0x1be; 
0x00127753: xchg byte ptr [ecx], cl; dec edi; stc; call dword ptr [eax + 0x6a]; 
0x00142411: xchg byte ptr [ecx], cl; push -7; call dword ptr [eax - 0x18]; 
0x0009fc11: xchg byte ptr [ecx], dl; push edx; stc; call dword ptr [eax - 0x18]; 
0x001502ac: xchg byte ptr [edi + 0x39], ah; stc; call dword ptr [eax + 0x53]; 
0x00183783: xchg byte ptr [edi + 0x40], cl; stc; call dword ptr [eax - 0x18]; 
0x00159ad6: xchg byte ptr [edi + 0x6f], ah; stc; call dword ptr [eax - 0x18]; 
0x000921bb: xchg byte ptr [edi + ecx*2 - 7], bh; call dword ptr [eax - 0x18]; 
0x00077e76: xchg byte ptr [edi + ecx*4], al; stc; call dword ptr [eax - 0x73]; 
0x00024fe9: xchg byte ptr [edi + edi*2 - 7], bl; call dword ptr [eax - 0x18]; 
0x0014a166: xchg byte ptr [edi + edi*4 - 7], al; call dword ptr [eax - 0x73]; 
0x0014a179: xchg byte ptr [edi + edi*4], bl; stc; call dword ptr [eax - 0x18]; 
0x00095f8b: xchg byte ptr [edi + edx*4], bl; stc; call dword ptr [eax - 0x18]; 
0x0009f336: xchg byte ptr [edi + esi*2 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x001305c6: xchg byte ptr [edi + esi*4 - 7], cl; call dword ptr [eax - 0x73]; 
0x001a03c5: xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0019ef3e: xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x0008e216: xchg byte ptr [edi - 7], cl; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x000ee746: xchg byte ptr [edi - 7], dl; call dword ptr [eax - 0x73]; 
0x00076e9c: xchg byte ptr [edi], al; inc ebx; stc; call dword ptr [eax - 0x73]; 
0x0019cefc: xchg byte ptr [edi], bh; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0019e61c: xchg byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0019c80c: xchg byte ptr [edi], ch; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0009fba4: xchg byte ptr [edi], ch; push edx; stc; call dword ptr [eax - 0x18]; 
0x0019df2c: xchg byte ptr [edi], cl; or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00140869: xchg byte ptr [edx + 0x39000000], dl; ret 0x820f; 
0x00093771: xchg byte ptr [edx + 0x50], dh; stc; call dword ptr [eax - 0x18]; 
0x0002c37e: xchg byte ptr [edx + 0x68fff93a], bh; add byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ch; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0016909c: xchg byte ptr [edx + 0x6afff973], bh; add eax, 0x34868d50; test cl, bh; call dword ptr [eax - 0x18]; 
0x00155b2d: xchg byte ptr [edx + 0x6f], dl; stc; call dword ptr [eax + 0x6a]; 
0x000299ae: xchg byte ptr [edx + eax*4 - 7], dh; call dword ptr [eax - 0x73]; 
0x0002b5f0: xchg byte ptr [edx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x000299c1: xchg byte ptr [edx], al; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00026fc0: xchg byte ptr [edx], bl; cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x0014d00f: xchg byte ptr [edx], cl; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0002746e: xchg byte ptr [esi + 0x39], cl; stc; call dword ptr [eax - 0x18]; 
0x00121483: xchg byte ptr [esi + 0x40], bl; stc; call dword ptr [eax - 0x18]; 
0x000a4469: xchg byte ptr [esi + 0x54], ah; stc; call dword ptr [ebx + 0x50]; 
0x00136e21: xchg byte ptr [esi + 0x66], bl; stc; call dword ptr [ebx + 0x50]; 
0x00058e48: xchg byte ptr [esi + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00077a18: xchg byte ptr [esi + ecx*4 - 7], bl; call dword ptr [eax - 0x18]; 
0x00077a18: xchg byte ptr [esi + ecx*4 - 7], bl; call dword ptr [eax - 0x18]; pop ebp; ret; 
0x00136e08: xchg byte ptr [esi + edi*2 - 7], cl; call dword ptr [eax - 0x75]; 
0x000f8717: xchg byte ptr [esi + edx - 0x77], bh; ret 0xd139; 
0x0006f795: xchg byte ptr [esi - 0x76fffff3], al; dec esp; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0011f794: xchg byte ptr [esi], ah; push esi; stc; call dword ptr [eax - 0x18]; 
0x0005083d: xchg byte ptr [esi], cl; add byte ptr [ebx - 0x72d7db84], cl; xchg dword ptr [eax - 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x00033fe6: xchg byte ptr [esp + eax*4], dh; stc; call dword ptr [eax - 0x18]; 
0x0017e9c3: xchg ch, ah; jbe 0x17e9c0; call dword ptr [eax - 0x18]; 
0x0016087f: xchg ch, bh; jmp dword ptr [esi - 0x70]; 
0x00181cd8: xchg ch, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x00139ff4: xchg cl, ah; stc; call dword ptr [eax - 0x18]; 
0x0003e7b6: xchg cl, bh; call dword ptr [eax - 0x18]; 
0x000c7b2c: xchg cl, bh; call dword ptr [eax - 0x18]; dec ebx; ret 0xfff6; 
0x000404af: xchg cl, bh; call dword ptr [eax - 0x73]; 
0x00150743: xchg cl, bh; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00029a07: xchg dh, cl; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x0006f6e8: xchg dh, dh; push cs; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0012786e: xchg dl, ah; arpl cx, di; call dword ptr [eax + 0x57]; 
0x0002998e: xchg dl, ah; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00150766: xchg dl, bh; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0007afa5: xchg dl, bh; jmp dword ptr [esi - 0x70]; 
0x0011b03e: xchg dl, dh; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00058f75: xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x00082545: xchg dl, dl; dec esi; stc; call dword ptr [eax - 0x18]; 
0x00170ade: xchg dword ptr [0x3000001], ecx; test byte ptr [eax - 0x6c8d0], dl; jmp eax; 
0x0007073a: xchg dword ptr [0x8bfffff2], ebp; inc edx; add al, 0x83; ret 0x8304; 
0x0009c502: xchg dword ptr [eax + 0x51], ecx; stc; call dword ptr [eax - 0x18]; 
0x00174e27: xchg dword ptr [eax + 0x66], ebp; stc; call dword ptr [eax + 0x6a]; 
0x0002ebb5: xchg dword ptr [eax + 0x9000000], esp; ret; 
0x00095e02: xchg dword ptr [eax + 0xf0], edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00079f03: xchg dword ptr [eax + 2], ebp; add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007d198: xchg dword ptr [eax + eax - 0x137d0000], edx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x00049759: xchg dword ptr [eax + eax*2], ebp; stc; call dword ptr [eax - 0x18]; 
0x0004dcb5: xchg dword ptr [eax + eax*2], esi; stc; call dword ptr [eax - 0x73]; 
0x0002747f: xchg dword ptr [eax + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x00179b48: xchg dword ptr [eax + ebp*4 - 0x72b00000], ecx; xchg dword ptr [esi], edi; jae 0x179b4c; call dword ptr [eax + 0x6a]; 
0x00179fb9: xchg dword ptr [eax + ebp*4 - 0x72b00000], ecx; xchg dword ptr [esi], edi; jae 0x179fbd; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x000a3df0: xchg dword ptr [eax + ebp*4], edi; stc; call dword ptr [eax - 0x18]; 
0x00046d27: xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax + 0x68]; 
0x0004981f: xchg dword ptr [eax + ecx*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c8f64: xchg dword ptr [eax + edx*8 - 7], esi; call dword ptr [eax + 0x56]; 
0x00048947: xchg dword ptr [eax - 0x18], edx; xchg edx, eax; mov bh, 0; add byte ptr [ebx - 0x76efdbb4], cl; ret 0x1b8; 
0x001776e6: xchg dword ptr [eax - 0x36], esi; stc; call dword ptr [eax - 0x73]; 
0x00134247: xchg dword ptr [eax - 0x49], ebx; stc; call dword ptr [eax - 0x18]; 
0x0012c56e: xchg dword ptr [eax - 0x4a], eax; stc; call dword ptr [eax + 0x55]; 
0x001875d1: xchg dword ptr [eax - 0x50], edi; stc; call dword ptr [eax - 0x73]; 
0x000f0393: xchg dword ptr [eax - 0x50], esi; stc; call dword ptr [eax - 0x73]; 
0x000a29ff: xchg dword ptr [eax - 0x57], edx; stc; call dword ptr [eax - 0x73]; 
0x000a263f: xchg dword ptr [eax - 0x58], edi; stc; call dword ptr [eax - 0x73]; 
0x000a3ddd: xchg dword ptr [eax - 0x58], esp; stc; call dword ptr [eax - 0x73]; 
0x000a3251: xchg dword ptr [eax - 0x59], ecx; stc; call dword ptr [eax - 0x18]; 
0x000a2a12: xchg dword ptr [eax - 0x5b], esi; stc; call dword ptr [eax - 0x18]; 
0x0009c4ef: xchg dword ptr [eax - 0x67], ebx; stc; call dword ptr [eax - 0x73]; 
0x0009c02c: xchg dword ptr [eax - 0x67], edx; stc; call dword ptr [eax - 0x73]; 
0x0009c9cc: xchg dword ptr [eax - 0x67], esi; stc; call dword ptr [eax - 0x18]; 
0x0009ace0: xchg dword ptr [eax - 0x68], ecx; stc; call dword ptr [eax - 0x18]; 
0x0009accd: xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x00092199: xchg dword ptr [eax - 0x6c], ebp; stc; call dword ptr [eax - 0x18]; 
0x0005ae63: xchg dword ptr [eax - 0x76], eax; stc; call dword ptr [eax - 0x18]; 
0x0005ae53: xchg dword ptr [eax - 0x76], esi; stc; call dword ptr [eax - 0x73]; 
0x0004c8cb: xchg dword ptr [eax - 0x78], eax; stc; call dword ptr [eax - 0x73]; 
0x000505c8: xchg dword ptr [eax - 0x78], ebx; stc; call dword ptr [eax - 0x73]; 
0x00058d06: xchg dword ptr [eax - 0x78], esi; stc; call dword ptr [eax - 0x73]; 
0x000404ad: xchg dword ptr [eax - 0x7a], ecx; stc; call dword ptr [eax - 0x73]; 
0x000dd85b: xchg dword ptr [eax - 0x7c00000a], edx; ret; 
0x00182a81: xchg dword ptr [eax - 0x7c0015e1], ecx; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0002a99b: xchg dword ptr [eax - 0x7e], ebx; stc; call dword ptr [eax - 0x73]; 
0x001a48a5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001a3f45: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001a3885: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x00093e7f: xchg dword ptr [eax], eax; add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0002b60b: xchg dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0002b651: xchg dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; jp 0x2b656; call dword ptr [eax + 0x68]; 
0x0002b674: xchg dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ecx; jp 0x2b679; call dword ptr [eax + 0x68]; 
0x0002b62e: xchg dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [edx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x000c412e: xchg dword ptr [eax], eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000a3e13: xchg dword ptr [eax], eax; test al, 0xf9; call dword ptr [eax - 0x18]; 
0x0009583f: xchg dword ptr [eax], eax; xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x000373d9: xchg dword ptr [eax], ebp; cmp eax, -1; add esi, edi; jmp esi; 
0x00049569: xchg dword ptr [eax], ebp; mov cl, bh; call dword ptr [eax - 0x73]; 
0x0012c589: xchg dword ptr [eax], ebp; mov dh, 0xf9; call dword ptr [eax + 0x55]; 
0x000a2652: xchg dword ptr [eax], ebp; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0017f271: xchg dword ptr [eax], edi; ja 0x17f26e; call dword ptr [eax - 0x18]; 
0x000ed65d: xchg dword ptr [eax], edi; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0009107c: xchg dword ptr [eax], edi; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x00150d69: xchg dword ptr [eax], edx; cmp edx, 1; jg 0x150d78; ret; 
0x000c44bd: xchg dword ptr [eax], edx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0005ac54: xchg dword ptr [eax], edx; mov bh, cl; call dword ptr [eax - 0x73]; 
0x0012c5a7: xchg dword ptr [eax], edx; mov dh, 0xf9; call dword ptr [eax + 0x55]; 
0x000375d1: xchg dword ptr [eax], esp; test eax, edi; inc dword ptr [ecx]; cli; jmp edx; 
0x0010d040: xchg dword ptr [ebp + 0x59], ecx; stc; call dword ptr [eax - 0x18]; 
0x00159b4b: xchg dword ptr [ebp + eax*8 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000ce2c2: xchg dword ptr [ebp + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000c4530: xchg dword ptr [ebp + edx*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x001578e6: xchg dword ptr [ebp + esi*8 - 0xf], ebp; call dword ptr [eax + 0x6a]; 
0x000e4dd6: xchg dword ptr [ebp - 0x73000000], ecx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00061796: xchg dword ptr [ebp - 0x74fffffe], ebp; inc esp; and al, 0x18; add eax, dword ptr [eax + edx*4 - 0x73134]; jmp eax; 
0x000d18e7: xchg dword ptr [ebp - 0x76e68137], eax; pop ebp; aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x00089cf6: xchg dword ptr [ebp - 0x7d000000], esp; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0013200f: xchg dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x00132749: xchg dword ptr [ebp - 7], edi; call dword ptr [ebp - 1]; 
0x000c5dc3: xchg dword ptr [ebx + 0x39102444], ecx; ret 0x840f; 
0x000c9730: xchg dword ptr [ebx + 0x39182444], ecx; ret 0x840f; 
0x000497e5: xchg dword ptr [ebx + 0x3f], esi; stc; call dword ptr [eax - 0x18]; 
0x00090d24: xchg dword ptr [ebx + 0x4f], edi; stc; call dword ptr [eax - 0x18]; 
0x000a1eb4: xchg dword ptr [ebx + 0x51], edi; stc; call dword ptr [eax - 0x73]; 
0x0010d43d: xchg dword ptr [ebx + 0x59], esp; stc; call dword ptr [eax - 0x18]; 
0x000a21e3: xchg dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00139e0d: xchg dword ptr [ebx + 0x6afff967], edi; and dword ptr [eax - 0x73], edx; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x001577bb: xchg dword ptr [ebx + 0x6f], edi; stc; call dword ptr [eax + 0x55]; 
0x00162990: xchg dword ptr [ebx + 0x72], ebp; stc; call dword ptr [eax + 0x6a]; 
0x00046ce2: xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x00046b62: xchg dword ptr [ebx + eax*4], eax; ret; 
0x000c1d76: xchg dword ptr [ebx + ebp*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0005d0f8: xchg dword ptr [ebx + ecx*4 - 7], ebx; call dword ptr [eax - 0x18]; 
0x0017f218: xchg dword ptr [ebx + ecx*8], eax; stc; call dword ptr [eax - 0x73]; 
0x00029ea7: xchg dword ptr [ebx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0013e5ca: xchg dword ptr [ebx + edi*4], ebp; stc; call dword ptr [eax - 0x73]; 
0x00096f26: xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; jmp edx; 
0x00098f2c: xchg dword ptr [ebx + edx*4 - 0x17af0007], esp; stc; ret 0xfffe; 
0x00084530: xchg dword ptr [ebx + edx*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0013c933: xchg dword ptr [ebx - 0x74d7db84], ecx; je 0x13c95f; sub al, 0x83; ret 0x8902; 
0x000ea407: xchg dword ptr [ebx - 0x74fffffd], esi; test byte ptr [ebx - 0x6fe68], ch; add eax, ebx; jmp eax; 
0x00049855: xchg dword ptr [ebx], eax; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0016571b: xchg dword ptr [ebx], ebx; jae 0x165718; call dword ptr [eax - 0x18]; 
0x0009c9c5: xchg dword ptr [ecx + 0x51], esp; stc; call dword ptr [eax - 0x73]; 
0x0010e777: xchg dword ptr [ecx + 0x59], eax; stc; call dword ptr [eax - 0x18]; 
0x00087ec4: xchg dword ptr [ecx + 0x6a000001], edi; add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0006106b: xchg dword ptr [ecx + 0x6afff942], esi; and eax, 0xcb878d50; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0017ae0d: xchg dword ptr [ecx + 0x76], esp; stc; call dword ptr [eax - 0x18]; 
0x000a50f5: xchg dword ptr [ecx + 0xd], ecx; add al, ch; ret 0xd49; 
0x00036d23: xchg dword ptr [ecx + eax*4 - 0x1fe0008], eax; jmp esi; 
0x0002aa5d: xchg dword ptr [ecx + eax*4 - 7], esp; call dword ptr [eax - 0x18]; 
0x0002a9d1: xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002a9f4: xchg dword ptr [ecx + eax*4], edi; stc; call dword ptr [eax - 0x18]; 
0x000a1ea8: xchg dword ptr [ecx + ebp*4], ecx; stc; call dword ptr [eax + 0x68]; 
0x000a1e7e: xchg dword ptr [ecx + ebp*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0010e6bd: xchg dword ptr [ecx + ebx*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0009c102: xchg dword ptr [ecx + ebx*4], ebx; stc; call dword ptr [eax - 0x18]; 
0x0009c0f2: xchg dword ptr [ecx + ebx*4], edi; stc; call dword ptr [eax - 0x73]; 
0x000a3160: xchg dword ptr [ecx + ecx], ecx; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0002eb39: xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x00031205: xchg dword ptr [ecx - 0x21], ebp; call dword ptr [eax + 0x6a]; 
0x001abd18: xchg dword ptr [ecx - 0x7638762f], ecx; ret 0xc183; 
0x00168755: xchg dword ptr [ecx - 0xd], ecx; call dword ptr [eax - 0x73]; 
0x00153d55: xchg dword ptr [ecx - 2], edx; jmp dword ptr [esi - 0x70]; 
0x0009e6ba: xchg dword ptr [ecx], ebx; add byte ptr [ebx - 0x72afeb14], al; adc byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0009e628: xchg dword ptr [ecx], ebx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x9e640; ret; 
0x0009e678: xchg dword ptr [ecx], ebx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x00049808: xchg dword ptr [ecx], ebx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000e24e2: xchg dword ptr [ecx], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x31c2444], cl; test byte ptr [eax - 0x70488], cl; jmp eax; 
0x000921dd: xchg dword ptr [ecx], ecx; push eax; stc; call dword ptr [eax - 0x18]; 
0x00073b42: xchg dword ptr [ecx], edi; or cl, byte ptr [edi]; test byte ptr [0x83000001], al; ret 0x8904; 
0x00073acd: xchg dword ptr [ecx], edi; or dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x000c1de9: xchg dword ptr [ecx], edx; push ebp; stc; call dword ptr [eax - 0x18]; 
0x00066374: xchg dword ptr [edi + 0x13], edi; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x590]; movzx ebx, bl; add eax, dword ptr [eax + ebx*4 - 0x72aa8]; jmp eax; 
0x00108422: xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x0010dcbf: xchg dword ptr [edi + 0x59], edi; stc; call dword ptr [eax - 0x73]; 
0x00036db8: xchg dword ptr [edi + 0xf000005], ebp; mov dh, 0xc0; mov esi, dword ptr [edi + eax*4 - 0x77e28]; add esi, edi; jmp esi; 
0x00182b87: xchg dword ptr [edi + 0xfffea1e], eax; mov dh, 0xc0; add edx, dword ptr [edx + eax*4 - 0x6c794]; jmp edx; 
0x00049878: xchg dword ptr [edi + eax*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x00092257: xchg dword ptr [edi + ecx*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x00108423: xchg dword ptr [edi + edi - 0x77d0000], ebp; add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x0017f23b: xchg dword ptr [edi + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x000fbe37: xchg dword ptr [edi + edi*8 - 1], esp; dec dword ptr [ebx - 0x49f0dbfc]; rol byte ptr [ebx], cl; test byte ptr [eax - 0x6f760], dl; jmp eax; 
0x001342b0: xchg dword ptr [edi + esi*4 - 7], edi; call dword ptr [eax - 0x18]; 
0x000f804d: xchg dword ptr [edi - 0x74ffffff], ecx; mov word ptr [edi - 0x6fa20], es; add ecx, edi; jmp ecx; 
0x00087ab4: xchg dword ptr [edi - 0x7cfffffb], esp; in al, dx; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0007c944: xchg dword ptr [edi - 6], ebp; jmp dword ptr [esi - 0x70]; 
0x0008ac9a: xchg dword ptr [edi], eax; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x000a35f5: xchg dword ptr [edi], eax; stc; dec dword ptr [ebp - 0x6575779]; call dword ptr [eax - 0x73]; 
0x00175f55: xchg dword ptr [edi], ebp; cld; jmp dword ptr [esi - 0x70]; 
0x00027492: xchg dword ptr [edi], edi; cmp ecx, edi; call dword ptr [eax - 0x18]; 
0x00047f24: xchg dword ptr [edi], edi; stc; call dword ptr [eax + 0x56]; 
0x00056aab: xchg dword ptr [edi], edi; stc; call dword ptr [eax + 0x57]; 
0x0003ebe9: xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3ecb0; call eax; 
0x0012f773: xchg dword ptr [edi], edx; stc; call dword ptr [eax + 0x6a]; 
0x00080fdd: xchg dword ptr [edi], esi; add al, byte ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008b29a: xchg dword ptr [edx + 0x1a74], eax; cmp eax, 1; jg 0x8b2b0; ret; 
0x00046d3a: xchg dword ptr [edx + 0x3f], esp; stc; call dword ptr [eax - 0x18]; 
0x00090d1d: xchg dword ptr [edx + 0x4f], ebp; stc; call dword ptr [eax - 0x73]; 
0x000e7259: xchg dword ptr [edx + 3], esi; add byte ptr [eax], al; mov eax, dword ptr [esi + ecx*4 - 0x70098]; add eax, esi; jmp eax; 
0x0002b5bf: xchg dword ptr [edx + eax*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0008dc60: xchg dword ptr [edx + eax], edx; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008c971: xchg dword ptr [edx + ebx*2 - 0x1b], ecx; call dword ptr [eax - 0x18]; 
0x001776f6: xchg dword ptr [edx + ecx*8], edi; stc; call dword ptr [eax - 0x18]; 
0x0002d7ab: xchg dword ptr [edx + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0002d45f: xchg dword ptr [edx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002dfea: xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002de79: xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00139e06: xchg dword ptr [edx + edi*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x0018b1d1: xchg dword ptr [edx + esi*4], esp; stc; call dword ptr [eax - 0x73]; 
0x000e722a: xchg dword ptr [edx - 0x75000000], esi; test byte ptr [esi - 0x700b0], cl; add eax, esi; jmp eax; 
0x000638bc: xchg dword ptr [edx - 0x76000008], esi; ret 0xc083; 
0x0010d436: xchg dword ptr [edx], ebp; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x0017f2a2: xchg dword ptr [edx], esp; ja 0x17f29f; call dword ptr [eax - 0x18]; 
0x000ed590: xchg dword ptr [esi + 0x57], esp; stc; call dword ptr [eax - 0x73]; 
0x00136f39: xchg dword ptr [esi + 0x66], esp; stc; call dword ptr [eax - 1]; 
0x001629fe: xchg dword ptr [esi + 0x72], esp; stc; call dword ptr [eax + 0x6a]; 
0x000498be: xchg dword ptr [esi + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x00071ddf: xchg dword ptr [esi + eax], esi; add byte ptr [ebx - 0x4ff7b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x7249c], bl; jmp eax; 
0x0017ff0f: xchg dword ptr [esi + ecx*4 - 0xc], ebp; call dword ptr [eax - 0x73]; 
0x00136f10: xchg dword ptr [esi + edi*2 - 7], ecx; call dword ptr [eax - 0x75]; 
0x000d7a77: xchg dword ptr [esi + edi*2], ebp; stc; call dword ptr [eax + 0x56]; 
0x00182b88: xchg dword ptr [esi], ebx; ljmp 0x9403:0xc0b60fff; sub byte ptr [eax + edi - 7], 0xff; jmp edx; 
0x000fb911: xchg dword ptr [esi], ecx; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x00046d33: xchg dword ptr [esi], edi; inc eax; stc; call dword ptr [eax - 0x73]; 
0x00179b4f: xchg dword ptr [esi], edi; jae 0x179b4c; call dword ptr [eax + 0x6a]; 
0x00179fc0: xchg dword ptr [esi], edi; jae 0x179fbd; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00103639: xchg dword ptr [esi], edi; pop eax; stc; dec dword ptr [ebp - 0x6a7e671]; call dword ptr [eax - 0x77]; 
0x000a2d74: xchg dword ptr [esi], edi; stc; call dword ptr [eax - 0x18]; 
0x001577d2: xchg dword ptr [esi], esi; push ecx; stc; call dword ptr [eax + 0x53]; 
0x000305da: xchg dword ptr [esp + eax*4], ebp; stc; call dword ptr [eax + 0x56]; 
0x000ecea7: xchg dword ptr [esp + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x000374ec: xchg dword ptr [esp + eax*4], esp; clc; inc dword ptr [ecx]; cli; jmp edx; 
0x00087c33: xchg dword ptr [esp + eax], esp; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ecx + 0x40]; 
0x0011afe5: xchg eax, eax; mov dl, 0xf9; call dword ptr [eax - 0x18]; 
0x00154c3a: xchg eax, eax; ret; 
0x0004979f: xchg eax, eax; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x00090d11: xchg eax, eax; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x000c41b1: xchg eax, ebx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000a2a98: xchg eax, ebx; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00177895: xchg eax, edi; jb 0x177892; call dword ptr [eax + 0x6a]; 
0x0010e764: xchg eax, edi; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00154c4a: xchg eax, edi; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0012f108: xchg eax, edi; stc; call dword ptr [eax - 0x18]; 
0x0004957c: xchg eax, edi; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x00037479: xchg eax, edx; cmp eax, -1; add edx, edi; jmp edx; 
0x0010e57b: xchg eax, edx; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00091ddf: xchg eax, edx; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x00092142: xchg eax, edx; xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x001831eb: xchg eax, esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0005ac64: xchg eax, esi; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x00094a6b: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x14fb7a6c], cl; clc; dec dword ptr [ebp - 0x15fef3a1]; jmp edx; 
0x0007ce6b: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; jne 0x7ce5b; push esi; call dword ptr [eax + 0x2c]; 
0x000f8054: xchg eax, esp; add eax, 0xf901fff9; jmp ecx; 
0x000c1dc9: xchg eax, esp; push esp; stc; call dword ptr [eax - 0x18]; 
0x00092186: xchg eax, esp; xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x0007877d: xchg ebp, eax; add al, 0xe4; clc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x001a2ad7: xchg ebp, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0006f131: xchg ebp, eax; add byte ptr [ecx], al; ret; 
0x0003f9cc: xchg ebp, eax; and dword ptr [edi], edi; stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0010a86b: xchg ebp, eax; bnd jmp dword ptr [esi - 0x70]; 
0x000be194: xchg ebp, eax; dec ebx; or al, 0; add ecx, 0x107e5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0006f371: xchg ebp, eax; dec esp; fdivr st(0); inc dword ptr [ecx]; ret; 
0x0006fb71: xchg ebp, eax; dec esp; xlatb; clc; inc dword ptr [ecx]; ret; 
0x000ea7db: xchg ebp, eax; hlt; jmp dword ptr [esi - 0x70]; 
0x0016b5a2: xchg ebp, eax; in al, dx; call dword ptr [eax - 0x73]; 
0x00096bc5: xchg ebp, eax; inc ebx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0005e6a7: xchg ebp, eax; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x0016c8d1: xchg ebp, eax; jae 0x16c8cd; call dword ptr [eax - 1]; 
0x0005f773: xchg ebp, eax; jae 0x5f76f; call dword ptr [eax + 0x68]; 
0x00163f8f: xchg ebp, eax; jb 0x163f8b; call dword ptr [eax + 0x6a]; 
0x00163fc3: xchg ebp, eax; jb 0x163fbf; jmp dword ptr [ebp - 0x75]; 
0x0016405f: xchg ebp, eax; jb 0x16405b; call dword ptr [eax - 0x18]; 
0x001682c7: xchg ebp, eax; jb 0x1682c3; call dword ptr [eax - 0x18]; 
0x0016fa18: xchg ebp, eax; je 0x16fa15; call dword ptr [eax + 0x53]; 
0x001718ed: xchg ebp, eax; je 0x1718ea; call dword ptr [eax - 0x73]; 
0x000bae94: xchg ebp, eax; jle 0xbaea3; add byte ptr [ecx + 0x10b0dcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000793fb: xchg ebp, eax; lodsb al, byte ptr [esi]; out 0xf8, eax; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0006af75: xchg ebp, eax; mov bh, 0xff; dec dword ptr [ebx - 0x5cf7b]; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x77]; 
0x0006c407: xchg ebp, eax; mov eax, 0x39fffffb; ret 0x2074; 
0x00069018: xchg ebp, eax; mov eax, 0x39fffffb; ret 0x840f; 
0x00068874: xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x00068d1d: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00068b7e: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x000673ed: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x00067014: xchg ebp, eax; mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x00067382: xchg ebp, eax; mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0015a1ad: xchg ebp, eax; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0012083f: xchg ebp, eax; pop edx; stc; call dword ptr [eax + 0x50]; 
0x0006b13f: xchg ebp, eax; push 0x89fffffa; ret 0x858b; 
0x00122850: xchg ebp, eax; rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x001633da: xchg ebp, eax; ret 0x3a3c; 
0x00089f30: xchg ebp, eax; ret 0x40c7; 
0x0006124b: xchg ebp, eax; ret 0x448b; 
0x00132d3f: xchg ebp, eax; ret 0x44c7; 
0x001751b7: xchg ebp, eax; ret 0x4de9; 
0x00156cf1: xchg ebp, eax; ret 0x548d; 
0x000c554c: xchg ebp, eax; ret 0x6eb; 
0x00132c02: xchg ebp, eax; ret 0x8b52; 
0x0004d60a: xchg ebp, eax; ret 0x950f; 
0x000d4b95: xchg ebp, eax; ret 0x9d8b; 
0x00049b4d: xchg ebp, eax; ret 0xb60f; 
0x00141803: xchg ebp, eax; ret 0xc085; 
0x000c55c2: xchg ebp, eax; ret 0xc208; 
0x00101939: xchg ebp, eax; ret 0xc209; 
0x00044dc2: xchg ebp, eax; ret 0xc220; 
0x000976e6: xchg ebp, eax; ret 0xc231; 
0x000d86ae: xchg ebp, eax; ret 0xc238; 
0x00085022: xchg ebp, eax; ret 0xc283; 
0x0016ae5c: xchg ebp, eax; ret 0xc483; 
0x0003f122: xchg ebp, eax; ret 0xca21; 
0x000ee293: xchg ebp, eax; ret 0xd001; 
0x000fbdfa: xchg ebp, eax; ret 0xd009; 
0x00109cf5: xchg ebp, eax; ret 0xd021; 
0x00084efc: xchg ebp, eax; ret 0xd089; 
0x0015831a: xchg ebp, eax; ret 0xd120; 
0x001461da: xchg ebp, eax; ret 0xd184; 
0x000fba96: xchg ebp, eax; ret 0xd201; 
0x0014649a: xchg ebp, eax; ret 0xd384; 
0x0005457d: xchg ebp, eax; ret 0xd689; 
0x000473a7: xchg ebp, eax; ret 0xd789; 
0x0008ec85: xchg ebp, eax; ret 0xe2c1; 
0x000a22cb: xchg ebp, eax; ret 0xe383; 
0x001401b6: xchg ebp, eax; ret 0xe8c0; 
0x00046850: xchg ebp, eax; ret 0xea81; 
0x00049df9: xchg ebp, eax; ret 0xea83; 
0x00141724: xchg ebp, eax; ret 0xed85; 
0x0011a941: xchg ebp, eax; ret 0xf131; 
0x001633e1: xchg ebp, eax; ret 0xf389; 
0x0003a210: xchg ebp, eax; ret; 
0x00107d45: xchg ebp, eax; rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x000f9ffa: xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0012a5a7: xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012a566: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0016c593: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0008727a: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x0016a904: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x00132184: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0016ba5b: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x000668e0: xchg ebp, eax; rol byte ptr [ebx - 0x59343], 0xff; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x00098ae2: xchg ebp, eax; rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00096598: xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00054dd4: xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x00156396: xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x00082405: xchg ebp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0x9e3b; 
0x000935bf: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00094565: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; adc bh, al; stc; jmp dword ptr [esi - 0x70]; 
0x00093aac: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; retf; add bh, dl; jmp dword ptr [esi - 0x70]; 
0x00094ff5: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; sub ch, 0xf9; jmp dword ptr [esi - 0x70]; 
0x0005a787: xchg ebp, eax; std; dec dword ptr [ebp - 0x676837a]; call dword ptr [eax - 0x73]; 
0x0014060f: xchg ebp, eax; sub ebp, esi; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x0018b2b5: xchg ebp, ecx; clc; jmp dword ptr [esi - 0x70]; 
0x0006d086: xchg ebp, edx; add eax, dword ptr [eax]; add byte ptr [ebx + 0x3182444], cl; test byte ptr [eax - 0x72954], dl; jmp eax; 
0x001513a0: xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000b5299: xchg ebx, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000fd990: xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0x7540; 
0x000fdaec: xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x000c2128: xchg ebx, eax; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; or byte ptr [ebx + ebp*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0002b643: xchg ebx, eax; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + eax*4 - 7], ah; call dword ptr [eax - 0x18]; 
0x0002aa57: xchg ebx, eax; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + eax*4 - 7], esp; call dword ptr [eax - 0x18]; 
0x001848b9: xchg ebx, eax; add eax, 0x11770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000899f9: xchg ebx, eax; add eax, 0x21770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00085d2d: xchg ebx, eax; add eax, 0x25770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007fdab: xchg ebx, eax; add eax, 0x2f770000; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0007f609: xchg ebx, eax; add eax, 0x31770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008a1be: xchg ebx, eax; add eax, 0x3c770000; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x00086a16: xchg ebx, eax; add eax, 0x44770000; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008994b: xchg ebx, eax; add eax, 0x5f770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00087504: xchg ebx, eax; add eax, 0x66770000; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x001831e6: xchg ebx, eax; add eax, 0x870f0000; lock add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x001261c7: xchg ebx, eax; arpl cx, di; call dword ptr [eax - 1]; 
0x0017bf80: xchg ebx, eax; cdq; jbe 0x17bf7d; call dword ptr [edx - 0x77]; 
0x0007a1b5: xchg ebx, eax; cli; jmp dword ptr [esi - 0x70]; 
0x00060c70: xchg ebx, eax; inc eax; stc; call dword ptr [esi + 0x52]; 
0x000be2e3: xchg ebx, eax; jge 0xbe2f6; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001184d2: xchg ebx, eax; jl 0x1184dc; out dx, al; call dword ptr [edx - 0x73]; 
0x0002fcf7: xchg ebx, eax; jle 0x2fd35; stc; call dword ptr [edx + 0x50]; 
0x000c0ca1: xchg ebx, eax; mov al, byte ptr [0xf00003c]; inc esp; ret 0x288b; 
0x00168e09: xchg ebx, eax; mov dword ptr [0xc483ffeb], eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00123451: xchg ebx, eax; mov word ptr [edi + 0x408bfff6], cs; je 0x1233e3; push esi; add al, 0x89; ret 0xeac1; 
0x0015cf7a: xchg ebx, eax; pop eax; mov byte ptr [0x850f0000], al; ret; 
0x0015cbd4: xchg ebx, eax; push ebx; jo 0x15cbd1; call dword ptr [edx + 0x50]; 
0x0015cf34: xchg ebx, eax; push ebx; jo 0x15cf31; call dword ptr [edx + 0x50]; 
0x0015d014: xchg ebx, eax; push ebx; jo 0x15d011; call dword ptr [edx + 0x50]; 
0x0010e088: xchg ebx, eax; ret 0xb60f; 
0x00089879: xchg ebx, eax; ret 0xffff; 
0x000e6c79: xchg ebx, eax; ret; 
0x00085b8f: xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x001854ee: xchg ebx, eax; stc; call dword ptr [eax - 0x18]; cmp ebp, edi; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00096f28: xchg ebx, eax; stc; call dword ptr [eax - 0x18]; jmp edx; 
0x0014dad0: xchg ebx, eax; stc; call dword ptr [eax - 0x18]; push edi; ja 0x14dacb; jmp dword ptr [esi - 0x70]; 
0x0009be65: xchg ebx, eax; stc; call dword ptr [eax - 0x18]; ret 0xfe93; 
0x00098f2e: xchg ebx, eax; stc; call dword ptr [eax - 0x18]; stc; ret 0xfffe; 
0x0008022a: xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x0015fb46: xchg ebx, eax; std; jmp dword ptr [esi - 0x70]; 
0x0015d02b: xchg ebx, eax; sub al, 0xa2; add byte ptr [eax], al; push edx; call eax; 
0x00072373: xchg ebx, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff7b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x722c8], bl; jmp eax; 
0x0018b355: xchg ebx, ebx; cli; jmp dword ptr [esi - 0x70]; 
0x00061074: xchg ebx, ecx; inc edx; stc; call dword ptr [eax - 0x18]; 
0x000851be: xchg ebx, esi; dec esi; stc; call dword ptr [eax + 0x56]; 
0x0017f24e: xchg ebx, esi; jbe 0x17f24b; call dword ptr [eax - 0x18]; 
0x00106833: xchg ecx, eax; aam 9; stc; inc dword ptr [ecx]; retf; jmp ebx; 
0x000497c3: xchg ecx, eax; aas; stc; call dword ptr [eax - 0x18]; 
0x001488bd: xchg ecx, eax; adc al, 0x1a; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x00193c81: xchg ecx, eax; adc byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00026f75: xchg ecx, eax; adc eax, 0x241c8900; call edi; 
0x001716cb: xchg ecx, eax; adc eax, dword ptr [eax]; add byte ptr [ecx - 0x7e7c723b], cl; je 0x1716cf; call dword ptr [ecx + 0x6a]; 
0x000a1c76: xchg ecx, eax; add al, 0; add byte ptr [ebx - 0x14efdb94], cl; jnp 0x59952cce; add al, 0xf6; ret; 
0x001487f4: xchg ecx, eax; add al, 0x1a; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x00192a84: xchg ecx, eax; add bh, bh; inc dword ptr [ecx + 0x42008c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00106311: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x39782444], cl; ret 0x4f0f; 
0x00190884: xchg ecx, eax; and al, 0xff; inc dword ptr [ecx + 0x43f88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00031aeb: xchg ecx, eax; and al, byte ptr [eax]; add byte ptr [ebx - 0x1d36b], cl; dec dword ptr [ebp - 0x67ce37e]; call dword ptr [eax - 0x73]; 
0x0003aa0b: xchg ecx, eax; call dword ptr [esi]; 
0x0013758b: xchg ecx, eax; clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x0002562a: xchg ecx, eax; idiv edi; add edi, ecx; jmp edi; 
0x000b6b24: xchg ecx, eax; jmp ecx; 
0x000f7dd8: xchg ecx, eax; jne 0xf7e40; ret; 
0x00058feb: xchg ecx, eax; lodsd eax, dword ptr [esi]; std; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x6778f79]; call dword ptr [eax - 0x73]; 
0x0007a9d3: xchg ecx, eax; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0005b00e: xchg ecx, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00181f3d: xchg ecx, eax; or byte ptr [ecx], al; add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x00191f84: xchg ecx, eax; or eax, 0xc381ffff; or byte ptr [ebx], ch; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00130519: xchg ecx, eax; out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x00122bc2: xchg ecx, eax; pop esp; stc; call dword ptr [eax + 0x55]; 
0x000d9b15: xchg ecx, eax; push ebp; stc; call dword ptr [eax + 0x53]; 
0x00090f14: xchg ecx, eax; sub al, 2; add byte ptr [eax], al; mov eax, dword ptr [ecx + 0x228]; push edx; call eax; 
0x001489c2: xchg ecx, eax; sub byte ptr [edx], bl; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x00024aea: xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000e82d4: xchg ecx, ebp; push esi; stc; call dword ptr [eax - 0x18]; 
0x0004957e: xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x00091df2: xchg ecx, edi; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000e4f5d: xchg edi, eax; add byte ptr [eax], al; add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0018426c: xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x000e4f03: xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x76abdbb4], cl; cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00027a8c: xchg edi, eax; cmp ecx, edi; call dword ptr [edx + 0x50]; 
0x00154efa: xchg edi, eax; fdivr qword ptr [ecx + edi*8]; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00195cbb: xchg edi, eax; hlt; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000dec15: xchg edi, eax; in al, 0xff; push esi; ret; 
0x00162245: xchg edi, eax; insb byte ptr es:[edi], dx; std; jmp dword ptr [esi - 0x70]; 
0x00167e8f: xchg edi, eax; jae 0x167e8b; call dword ptr [eax + 0x6a]; 
0x00167ec3: xchg edi, eax; jae 0x167ebf; jmp dword ptr [ebp - 0x75]; 
0x00167f5f: xchg edi, eax; jae 0x167f5b; call dword ptr [eax - 0x18]; 
0x00158893: xchg edi, eax; lodsb al, byte ptr [esi]; cmc; int1; call dword ptr [edx + 0x6a]; 
0x00064796: xchg edi, eax; mov edi, ecx; jmp eax; 
0x000bfe9e: xchg edi, eax; mov esi, edx; ret; 
0x0008f31b: xchg edi, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000b8465: xchg edi, eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014e8e5: xchg edi, eax; push esp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014bc8f: xchg edi, eax; ret 0xd008; 
0x000e977c: xchg edi, eax; ret 0xda08; 
0x00129e4e: xchg edi, eax; ret 0xf883; 
0x00163425: xchg edi, eax; ret 0xfff5; 
0x00116e05: xchg edi, eax; ret; 
0x00095f8d: xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00099db5: xchg edi, eax; stc; call dword ptr [eax - 0x18]; ret 0xf99f; 
0x00095841: xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x00134f06: xchg edi, eax; stc; call dword ptr [edx + 0x50]; 
0x0012d035: xchg edi, eax; stc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0015fb45: xchg edi, eax; xchg ebx, eax; std; jmp dword ptr [esi - 0x70]; 
0x0007ae8c: xchg edi, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x7aea0; push esi; call dword ptr [ebx + 0x1c]; 
0x000921ff: xchg edi, ebx; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000a1ebb: xchg edi, ebx; push edx; stc; call dword ptr [eax - 0x18]; 
0x0009461c: xchg edi, edi; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000404bd: xchg edi, edi; stc; call dword ptr [eax - 0x18]; 
0x00154623: xchg edi, edx; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x00049b44: xchg edi, esi; add byte ptr [eax], al; add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x0012f41c: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x0014086a: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x0012f55e: xchg edx, eax; add byte ptr [eax], al; add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x0017fcb3: xchg edx, eax; add byte ptr [ebx], 0; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x000bff1e: xchg edx, eax; add dword ptr [eax], eax; add bh, dh; ret 3; 
0x000305d2: xchg edx, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; sub al, 0x84; stc; call dword ptr [eax + 0x56]; 
0x0007b55a: xchg edx, eax; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000c1e1b: xchg edx, eax; call 0xf0c1e5d; inc esp; ret 0xff65; 
0x000c9e89: xchg edx, eax; clc; call dword ptr [esi + 0x53]; 
0x0016fc40: xchg edx, eax; cld; jmp dword ptr [esi - 0x70]; 
0x000a7ae1: xchg edx, eax; cld; nop; call 0xc24e8ae8; ret; 
0x00138829: xchg edx, eax; cmp al, 0xce; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0007ab1a: xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000234c6: xchg edx, eax; inc eax; stc; call dword ptr [eax + 0x52]; 
0x000a9bdb: xchg edx, eax; insb byte ptr es:[edi], dx; mov eax, 0x450ffff6; ret 0x66c3; 
0x000a9e0b: xchg edx, eax; insb byte ptr es:[edi], dx; mov edi, 0x450ffff6; ret 0x66c3; 
0x0013890b: xchg edx, eax; jl 0x138966; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a460b: xchg edx, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x90]; call dword ptr [eax]; 
0x000d1c2c: xchg edx, eax; lodsb al, byte ptr [esi]; add edx, ebp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a6f8c: xchg edx, eax; lodsb al, byte ptr [esi]; mov al, ch; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a6e8b: xchg edx, eax; lodsb al, byte ptr [esi]; sal dh, cl; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0004894a: xchg edx, eax; mov bh, 0; add byte ptr [ebx - 0x76efdbb4], cl; ret 0x1b8; 
0x000c1395: xchg edx, eax; mov eax, 0xf00003c; inc esp; ret 0xff50; 
0x000a7cbc: xchg edx, eax; mov esp, 0xfffe896; inc esp; ret 0x66c3; 
0x000a64fc: xchg edx, eax; mov word ptr [eax + ebp*8 - 0x3dbbf001], cs; ret; 
0x000a6e4b: xchg edx, eax; mov word ptr [eax - 0xb], ds; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0016d53d: xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00024efe: xchg edx, eax; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; add bh, byte ptr [eax - 1]; ret; 
0x000a6e0b: xchg edx, eax; or al, 0xcb; idiv bh; cmovne eax, edx; ret; 
0x00138879: xchg edx, eax; or al, 0xee; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001302a5: xchg edx, eax; out dx, eax; call dword ptr [eax + 0x6a]; 
0x00120823: xchg edx, eax; pop edx; stc; call dword ptr [edx - 0x77]; 
0x000a9d21: xchg edx, eax; pop esp; imul esp, edi, -1; cmove eax, edx; ret; 
0x001082ca: xchg edx, eax; push ebx; clc; jmp dword ptr [esi - 0x70]; 
0x0015d460: xchg edx, eax; push ebx; jo 0x15d45d; call dword ptr [edx + 0x50]; 
0x000a9c1c: xchg edx, eax; pushfd; mov eax, ebp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0005302b: xchg edx, eax; ret 0x1e89; 
0x000c766b: xchg edx, eax; ret 0x7439; 
0x00053375: xchg edx, eax; ret 0x789; 
0x001a099a: xchg edx, eax; ret 0xb60f; 
0x000dc0db: xchg edx, eax; ret 0xc281; 
0x00131004: xchg edx, eax; ret 0xd089; 
0x0016d121: xchg edx, eax; ret 0xd689; 
0x00052f3b: xchg edx, eax; ret 0xe89; 
0x000fc95a: xchg edx, eax; ret 0xffff; 
0x000534bb: xchg edx, eax; ret; 
0x000c18a2: xchg edx, eax; sar byte ptr [eax + eax], 1; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000a9ca1: xchg edx, eax; sbb al, 0x7a; call 0xc24eaca8; ret; 
0x001388c9: xchg edx, eax; sbb al, 0xde; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a6d79: xchg edx, eax; sbb al, 0xee; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0006905a: xchg edx, eax; sbb eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0007be51: xchg edx, eax; stc; jmp dword ptr [ebp - 0x75]; 
0x0005ab52: xchg edx, eax; std; jmp dword ptr [esi - 0x70]; 
0x0018cf4a: xchg edx, eax; stosd dword ptr es:[edi], eax; cli; jmp dword ptr [esi - 0x70]; 
0x000a6fcc: xchg edx, eax; sub al, 0x88; call 0xc24e7fd3; ret; 
0x000a9c5c: xchg edx, eax; sub al, 0x89; call 0xc24eac63; ret; 
0x000a8e71: xchg edx, eax; sub al, 0x96; call 0xc24e9e78; ret; 
0x000a6dc9: xchg edx, eax; sub al, 0xde; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000e68f5: xchg edx, eax; sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x0013758a: xchg edx, eax; xchg ecx, eax; clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x00097089: xchg edx, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6574; 
0x000498e1: xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00028db4: xchg edx, esp; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00159b5e: xchg edx, esp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000539c9: xchg esi, eax; add al, 0x83; ret 0x8501; 
0x000539c2: xchg esi, eax; add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000fbe15: xchg esi, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x49f0dbe4], cl; rol byte ptr [ebx], 0x9c; add dword ptr [edi + eax - 7], -1; jmp ebx; 
0x000e4928: xchg esi, eax; add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00055a26: xchg esi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00090cca: xchg esi, eax; and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000a8e93: xchg esi, eax; call 0x6c8b1c98; lcall 0x1076, 0x41f6fff6; cmove eax, edx; ret; 
0x000a7cbe: xchg esi, eax; call 0xc24e8cc3; ret; 
0x000a8e73: xchg esi, eax; call 0xc24e9e78; ret; 
0x0017d145: xchg esi, eax; cdq; jbe 0x17d142; call dword ptr [edx - 0x77]; 
0x0013ec4e: xchg esi, eax; dec ebp; inc eax; stc; call dword ptr [edx - 0x46]; 
0x00081258: xchg esi, eax; dec esi; stc; call dword ptr [eax - 0x18]; 
0x001563d7: xchg esi, eax; idiv bh; add esp, 0x1c; ret; 
0x00031d97: xchg esi, eax; idiv edi; add ecx, ebx; jmp ecx; 
0x00106261: xchg esi, eax; inc eax; pop eax; stc; call dword ptr [edx - 1]; 
0x000be160: xchg esi, eax; jle 0xbe173; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012f611: xchg esi, eax; lock add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000d1c76: xchg esi, eax; loope 0xd1c77; jmp dword ptr [esi - 0x70]; 
0x0017d746: xchg esi, eax; mov bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x001207e4: xchg esi, eax; mov dword ptr [edx - 7], ebx; call dword ptr [edx - 0x77]; 
0x00169069: xchg esi, eax; mov esp, 0x52fff324; push 1; push ebx; call dword ptr [eax]; 
0x00169192: xchg esi, eax; mov esp, 0x52fff324; push 2; push ebx; call dword ptr [eax]; 
0x00082ad1: xchg esi, eax; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x001a544d: xchg esi, eax; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0010ee3f: xchg esi, eax; push 0x1fff913; int1; jmp ecx; 
0x000c7ccb: xchg esi, eax; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000ee74d: xchg esi, eax; push edi; stc; call dword ptr [eax - 0x18]; 
0x00038993: xchg esi, eax; ret 0xb60f; 
0x000dea3f: xchg esi, eax; ret 0xc931; 
0x0013c628: xchg esi, eax; ret 0xd008; 
0x000302ab: xchg esi, eax; ret; 
0x000b6c93: xchg esi, eax; ror byte ptr [eax + eax], 0x81; shr dword ptr [ecx + 0x30010f0], 0xc; cdq; jmp ecx; 
0x00134e42: xchg esi, eax; sbb al, 0xb8; stc; call dword ptr [edx + 0x50]; 
0x00093914: xchg esi, eax; stc; call dword ptr [eax + 0x68]; 
0x00093953: xchg esi, eax; stc; call dword ptr [eax + 0x6a]; 
0x00093a6e: xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x000935ac: xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0005a74f: xchg esi, eax; std; dec dword ptr [ebp - 0x676837a]; call dword ptr [eax - 0x73]; 
0x00071a74: xchg esi, eax; test al, 0xda; clc; inc dword ptr [ecx]; int1; jmp ecx; 
0x0012083e: xchg esi, eax; xchg ebp, eax; pop edx; stc; call dword ptr [eax + 0x50]; 
0x00120822: xchg esi, eax; xchg edx, eax; pop edx; stc; call dword ptr [edx - 0x77]; 
0x0004977c: xchg esi, ebp; aas; stc; call dword ptr [eax - 0x18]; 
0x0008496d: xchg esi, ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x00028dd7: xchg esi, ecx; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x0015072a: xchg esi, edi; dec dword ptr [ecx - 0x2b7f723a]; ret 0xfff9; 
0x001656f8: xchg esi, edi; jb 0x1656f5; call dword ptr [eax - 0x18]; 
0x0005aa2f: xchg esi, esi; mov bh, ah; dec dword ptr [ebx - 0x3763796c]; clc; inc dword ptr [ecx]; bnd jmp edx; 
0x000a1e91: xchg esi, esi; push edx; stc; call dword ptr [eax - 0x18]; 
0x0011d978: xchg esp, eax; adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003450c: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00024aeb: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x00081a37: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x0013d2db: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x548d9804], cl; add ch, byte ptr [ecx - 0xcb17]; jmp dword ptr [esi - 0x70]; 
0x00099128: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0008efb7: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003c6fa: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x001114d3: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a787: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00099e40: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0010c6e8: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x46b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0007a9cb: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007d199: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x00087c24: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx - 0x7e20d631], cl; call dword ptr [ebx + 0xf000005]; 
0x0014798e: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000bff41: xchg esp, eax; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x00151f78: xchg esp, eax; add dword ptr [eax], eax; add byte ptr [ebp - 0x63ca77a], cl; call dword ptr [eax - 0x73]; 
0x00170daf: xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x000624a2: xchg esp, eax; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0010afed: xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; mov ebx, dword ptr [esp + 0x80]; call dword ptr gs:[0x10]; 
0x001115d1: xchg esp, eax; and al, 0x98; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x00111798: xchg esp, eax; and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x0011173d: xchg esp, eax; and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; call dword ptr gs:[0x10]; 
0x0016a8df: xchg esp, eax; and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00040e10: xchg esp, eax; and edi, esi; dec dword ptr [ebx - 0x76dfdbb4]; ret; 
0x0016f9e2: xchg esp, eax; cld; jmp dword ptr [esi - 0x70]; 
0x00092177: xchg esp, eax; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000be095: xchg esp, eax; dec esp; or al, 0; add ecx, 0x107f5b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012fcc1: xchg esp, eax; inc edi; add byte ptr [eax], al; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x0014c9e8: xchg esp, eax; jae 0x14c9d9; dec dword ptr [ebx - 0x72f3dbac]; adc byte ptr [eax - 0x40], 0xf9; call dword ptr [eax + 0x68]; 
0x000256ad: xchg esp, eax; jg 0x256a9; call dword ptr [eax - 0x18]; 
0x001603e0: xchg esp, eax; jno 0x1603dc; call dword ptr [ecx - 1]; 
0x00117fe4: xchg esp, eax; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x0003c097: xchg esp, eax; mov ebp, esp; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x000a20f0: xchg esp, eax; push edx; stc; call dword ptr [eax - 0x18]; 
0x00182ea6: xchg esp, eax; ret 0x1389; 
0x00134d31: xchg esp, eax; ret 0x2d3c; 
0x0003019b: xchg esp, eax; ret 0x3a3c; 
0x0004491e: xchg esp, eax; ret 0x3c83; 
0x00106486: xchg esp, eax; ret 0x3f8b; 
0x00132409: xchg esp, eax; ret 0x4483; 
0x00157ff5: xchg esp, eax; ret 0x4489; 
0x001328c2: xchg esp, eax; ret 0x448b; 
0x00044857: xchg esp, eax; ret 0x44c7; 
0x00117e09: xchg esp, eax; ret 0x478b; 
0x0005a06c: xchg esp, eax; ret 0x48b; 
0x00031d17: xchg esp, eax; ret 0x4c89; 
0x0011aa59: xchg esp, eax; ret 0x540a; 
0x0014406b: xchg esp, eax; ret 0x5484; 
0x00030964: xchg esp, eax; ret 0x5f3c; 
0x0005ddb8: xchg esp, eax; ret 0x6a52; 
0x000639a6: xchg esp, eax; ret 0x748b; 
0x00044eaa: xchg esp, eax; ret 0x7c83; 
0x000fcef6: xchg esp, eax; ret 0x87eb; 
0x001a7e42: xchg esp, eax; ret 0x9584; 
0x00117f82: xchg esp, eax; ret 0x98e9; 
0x0008240e: xchg esp, eax; ret 0x9e3b; 
0x001472b6: xchg esp, eax; ret 0xa3c; 
0x0008f657: xchg esp, eax; ret 0xb60f; 
0x00171b5e: xchg esp, eax; ret 0xc031; 
0x00148f04: xchg esp, eax; ret 0xc083; 
0x00156054: xchg esp, eax; ret 0xc084; 
0x000d4a6b: xchg esp, eax; ret 0xc139; 
0x000c70c5: xchg esp, eax; ret 0xc339; 
0x0018ba86: xchg esp, eax; ret 0xc483; 
0x00063c3c: xchg esp, eax; ret 0xc629; 
0x00048cb2: xchg esp, eax; ret 0xc639; 
0x0008fd97: xchg esp, eax; ret 0xc689; 
0x000a94e6: xchg esp, eax; ret 0xc739; 
0x00046f30: xchg esp, eax; ret 0xc8b; 
0x0002ff7b: xchg esp, eax; ret 0xca08; 
0x000fce5d: xchg esp, eax; ret 0xca83; 
0x00079f66: xchg esp, eax; ret 0xd008; 
0x00079f45: xchg esp, eax; ret 0xd009; 
0x00109b81: xchg esp, eax; ret 0xd021; 
0x000e9771: xchg esp, eax; ret 0xd309; 
0x000d881d: xchg esp, eax; ret 0xd338; 
0x0016375c: xchg esp, eax; ret 0xd4e9; 
0x000fce97: xchg esp, eax; ret 0xe6eb; 
0x0004fc43: xchg esp, eax; ret 0xeb39; 
0x0003c09e: xchg esp, eax; ret 0xec83; 
0x000c5614: xchg esp, eax; ret 0xf883; 
0x00055acb: xchg esp, eax; ret 0xf980; 
0x00117f1e: xchg esp, eax; ret 0xfce9; 
0x000430f5: xchg esp, eax; ret 0xff83; 
0x00154488: xchg esp, eax; ret 0xfff6; 
0x000302a0: xchg esp, eax; ret; 
0x001337ae: xchg esp, eax; rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x00107f56: xchg esp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0009a264: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x0005278e: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0009a13f: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009a24e: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0003be46: xchg esp, eax; ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x0011f3e5: xchg esp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0xc; ret; 
0x001843c7: xchg esp, eax; sar byte ptr [ebx], 0x9e; push 0xf000001; xchg esp, eax; ret 0xd008; 
0x00090d13: xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x0009107e: xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x0009119d: xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x0003866b: xchg esp, eax; stc; call dword ptr [eax - 1]; 
0x00090dcf: xchg esp, eax; stc; call dword ptr [edx + 0x50]; 
0x000c1d66: xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00182b90: xchg esp, eax; sub byte ptr [eax + edi - 7], 0xff; jmp edx; 
0x00094a71: xchg esp, eax; test dword ptr [ebx + ebp*8], eax; clc; dec dword ptr [ebp - 0x15fef3a1]; jmp edx; 
0x0005aa35: xchg esp, eax; xchg byte ptr [eax + ecx*8 - 0xdfe0008], bl; jmp edx; 
0x000375d0: xchg esp, eax; xchg dword ptr [eax], esp; test eax, edi; inc dword ptr [ecx]; cli; jmp edx; 
0x000374eb: xchg esp, eax; xchg dword ptr [esp + eax*4], esp; clc; inc dword ptr [ecx]; cli; jmp edx; 
0x00037478: xchg esp, eax; xchg eax, edx; cmp eax, -1; add edx, edi; jmp edx; 
0x00028c79: xchg esp, ebp; jnp 0x28c76; call dword ptr [eax - 0x73]; 
0x00028da1: xchg esp, ebp; jnp 0x28d9e; call dword ptr [eax - 0x73]; 
0x00028dc4: xchg esp, ebp; jnp 0x28dc1; call dword ptr [eax + 0x68]; 
0x00028de7: xchg esp, ebp; jnp 0x28de4; call dword ptr [eax + 0x68]; 
0x00028df9: xchg esp, ebp; jnp 0x28df6; call dword ptr [eax - 0x73]; 
0x0002e00d: xchg esp, ebp; jns 0x2e00a; call dword ptr [eax - 0x73]; 
0x0002e030: xchg esp, ebp; jns 0x2e02d; call dword ptr [eax - 0x73]; 
0x0002e090: xchg esp, ebp; jns 0x2e08d; call dword ptr [eax - 0x73]; 
0x0002a62a: xchg esp, ebp; jp 0x2a627; call dword ptr [eax - 0x73]; 
0x0002a8ba: xchg esp, ebp; jp 0x2a8b7; call dword ptr [eax - 0x73]; 
0x0002a943: xchg esp, ebp; jp 0x2a940; call dword ptr [eax - 0x73]; 
0x0002a966: xchg esp, ebp; jp 0x2a963; call dword ptr [eax + 0x68]; 
0x0002a989: xchg esp, ebp; jp 0x2a986; call dword ptr [eax + 0x68]; 
0x0010d42a: xchg esp, ebp; mov cl, 0xf9; call dword ptr [eax + 0x68]; 
0x0010d02d: xchg esp, ebp; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0011afd5: xchg esp, ebp; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x00130517: xchg esp, ebp; xchg ecx, eax; out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x000391af: xchg esp, ebx; add al, byte ptr [eax]; add byte ptr [ebx + 0xf04244c], cl; mov dh, 0xc0; add ecx, dword ptr [ecx + eax*4 - 0x779fc]; jmp ecx; 
0x00111819: xchg esp, ebx; cmp al, 0xf9; call dword ptr [eax + 0x55]; 
0x00103930: xchg esp, ebx; cmp al, 0xf9; dec dword ptr [ebp - 0x6b0bf71]; call dword ptr [eax - 0x17]; 
0x0010fb57: xchg esp, ebx; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00099844: xchg esp, ebx; sub esi, esp; call dword ptr [ebx + 0x50]; 
0x00030e68: xchg esp, ecx; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0002af7d: xchg esp, ecx; jp 0x2af7a; call dword ptr [eax - 0x73]; 
0x0002b0aa: xchg esp, ecx; jp 0x2b0a7; call dword ptr [eax - 0x73]; 
0x0002b659: xchg esp, ecx; jp 0x2b656; call dword ptr [eax + 0x68]; 
0x0002b67c: xchg esp, ecx; jp 0x2b679; call dword ptr [eax + 0x68]; 
0x00134224: xchg esp, ecx; stc; call dword ptr [eax - 0x18]; 
0x00088697: xchg esp, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0009c03c: xchg esp, edi; cwde; stc; call dword ptr [eax - 0x18]; 
0x0009f4db: xchg esp, edi; push ecx; stc; call dword ptr [eax + 0x53]; 
0x000373a5: xchg esp, edx; cmp al, 0xff; add esi, edi; jmp esi; 
0x00084540: xchg esp, edx; pop eax; stc; call dword ptr [eax - 0x18]; 
0x0009b5ad: xchg esp, esp; cwde; stc; call dword ptr [eax - 0x73]; 
0x0012c521: xchg esp, esp; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0008d04d: xend; xor eax, eax; add esp, 0xc; ret; 
0x001a5c77: xgetbv; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00194cbb: xlatb; add al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000d39e8: xlatb; add bh, dh; out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x0012b1c7: xlatb; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000d78ae: xlatb; add byte ptr [ecx], bh; ret; 
0x00087a55: xlatb; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x0006f30d: xlatb; clc; inc dword ptr [ecx]; ret; 
0x0011301b: xlatb; cli; jmp dword ptr [esi + 3]; 
0x0018b7c3: xlatb; cli; jmp dword ptr [esi - 0x70]; 
0x0006f6e3: xlatb; cmp ecx, 0x5a; jbe 0x705e3; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000b1c45: xlatb; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00161705: xlatb; ja 0x161705; jmp dword ptr [esi - 0x70]; 
0x0008ed13: xlatb; jae 0x8ece0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000ec67d: xlatb; jmp edi; 
0x000bf4bc: xlatb; les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001a3a85: xlatb; les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bf041: xlatb; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00160605: xlatb; mov ch, bh; jmp dword ptr [esi - 0x70]; 
0x000dc0d7: xlatb; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00062178: xlatb; or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x00154624: xlatb; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x00153610: xlatb; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x001209a8: xlatb; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0014e7a5: xlatb; push ebp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001a3572: xlatb; ret 0x498d; 
0x000bec78: xlatb; ret 0xc085; 
0x000adc32: xlatb; ret; 
0x001a539c: xlatb; retf 0xf66; xlatb; ret; 
0x000bf56f: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x001a3b46: xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bee40: xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000bf105: xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000bf0d6: xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x001a3b85: xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x001a36ae: xlatb; rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000bee06: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x001a4799: xlatb; ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x1a47b0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000bf072: xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00059fa5: xlatb; sbb byte ptr [eax + eax], cl; add esp, 0x1c; ret; 
0x0015134a: xlatb; sbb dword ptr [ebx], eax; add byte ptr [ecx + 0xe5ac6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x001a3ff4: xlatb; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x1a3c20; xor eax, eax; ret; 
0x0017b7c6: xlatb; sti; jmp dword ptr [esi - 0x70]; 
0x00024898: xlatb; test al, 0x11; add byte ptr [ebp - 0x699f27d], cl; call dword ptr [edi + 0x57]; 
0x0005a1a5: xlatb; wait; std; jmp dword ptr [esi - 0x70]; 
0x0003d618: xlatb; xor edx, edx; mov ecx, edi; mov eax, esi; call dword ptr gs:[0x10]; 
0x000929ab: xor ah, 0x3a; add byte ptr [eax], al; ret; 
0x00098064: xor ah, 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x0005c6d7: xor ah, 0x8f; clc; call dword ptr [eax + 0x56]; 
0x000ec899: xor ah, 0xff; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003ce8b: xor ah, 1; add byte ptr [eax], al; ret; 
0x00070537: xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0006f3c7: xor ah, al; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72734]; add ecx, eax; jmp ecx; 
0x0006016b: xor ah, bh; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0014d84a: xor ah, byte ptr [ebp - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0009a0c5: xor ah, dh; jmp dword ptr [ebp - 0x5d]; 
0x0008d186: xor al, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dbac], cl; ret; 
0x0012b95d: xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00149922: xor al, 0; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x000fa1d7: xor al, 0x24; call 0x231a0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00168660: xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0002f33b: xor al, 0x24; call ebx; 
0x0009bc4c: xor al, 0x24; call edi; 
0x0015cb49: xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0015d5ad: xor al, 0x24; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001546dd: xor al, 0x24; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00182d26: xor al, 0x24; ret; 
0x00137343: xor al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00104c09: xor al, 0x29; ret 0x448b; 
0x0016b443: xor al, 0x29; ret 0xfa01; 
0x00120548: xor al, 0x38; int1; jmp dword ptr [esi - 0x70]; 
0x000d6c72: xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00142827: xor al, 0x39; ret 0x470f; 
0x0004e9f2: xor al, 0x39; ret 0x840f; 
0x0009e562: xor al, 0x3c; add byte ptr [eax], al; ret; 
0x0004dcb6: xor al, 0x40; stc; call dword ptr [eax - 0x73]; 
0x0005fbb5: xor al, 0x42; stc; call dword ptr [esi + 0x6a]; 
0x001a0d22: xor al, 0x46; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008c3c6: xor al, 0x4f; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x000825f2: xor al, 0x50; call ebx; 
0x000d88d9: xor al, 0x50; mov eax, dword ptr [esp + 0x78]; call eax; 
0x000d1aaa: xor al, 0x50; push dword ptr [esi + 8]; call ebx; 
0x000c1c42: xor al, 0x50; push ebp; call esi; 
0x000c4317: xor al, 0x51; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c1c39: xor al, 0x52; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x00139275: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x7ee10; add esp, 0x2c; ret; 
0x00138e85: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x841c0; add esp, 0x2c; ret; 
0x001696bb: xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0010b9f6: xor al, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0010ed5d: xor al, 0x59; stc; call dword ptr [eax - 0x18]; jns 0x10ed73; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0011e2f3: xor al, 0x5b; pop esi; pop edi; ret; 
0x00040048: xor al, 0x5b; pop esi; ret 4; 
0x00110b3f: xor al, 0x5b; pop esi; ret; 
0x00121803: xor al, 0x74; ret 0x4c8b; 
0x0012490d: xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x0011e911: xor al, 0x75; ret 0xb60f; 
0x000d6c75: xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000cc0d0: xor al, 0x81; ret 0; 
0x000d8853: xor al, 0x81; ret; 
0x000401d4: xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00025403: xor al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0014c3f7: xor al, 0x83; les ecx, ptr [ecx + ecx*4]; call 0x44248d86; ret 0x148b; 
0x0017b9ff: xor al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000989df: xor al, 0x83; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00178e76: xor al, 0x83; ret 0x5204; 
0x00088563: xor al, 0x83; ret 0x8901; 
0x0002d1a3: xor al, 0x83; ret 0xc704; 
0x0003fdbb: xor al, 0x83; ret; 
0x0018527f: xor al, 0x83; rol byte ptr [ecx], 0x89; ret 0x850f; 
0x0013e8c1: xor al, 0x84; stc; call dword ptr [eax + 0x53]; 
0x000a9f1d: xor al, 0x84; stc; call dword ptr [eax + 0x55]; 
0x00033fe7: xor al, 0x84; stc; call dword ptr [eax - 0x18]; 
0x0013e852: xor al, 0x84; stc; call dword ptr [eax - 0x77]; 
0x0007bb63: xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0011bc6c: xor al, 0x89; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012deb9: xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001254fc: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125d9c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f837c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f851c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0011de4c: xor al, 0x89; push eax; inc eax; pop ebx; pop esi; ret; 
0x0016aefb: xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0007d1a3: xor al, 0x89; ret 0xc483; 
0x00147f00: xor al, 0x89; ret 0xcac1; 
0x000607e9: xor al, 0x89; ret; 
0x0011b607: xor al, 0x8b; dec esp; and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000d8a72: xor al, 0x8b; inc esp; and al, 0x78; call eax; 
0x000dbd53: xor al, 0x8b; pop esp; and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012b4f3: xor al, 0x8b; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e4995: xor al, 0x8b; pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00041a17: xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x00172f91: xor al, 0x8b; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0011a901: xor al, 0x8d; and byte ptr [esi], 0x56; stc; call dword ptr [eax - 0x18]; 
0x0002aaf0: xor al, 0x8d; inc ebp; and byte ptr [ecx - 0x9c7dbbc], cl; ret 0x7501; 
0x000814ce: xor al, 0x8d; inc edx; add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x0012cd2e: xor al, 0x8d; inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0018b8b1: xor al, 0x8d; jl 0x18b8d9; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000a418d: xor al, 0x8d; sbb dword ptr [esi], 0x54; stc; call dword ptr [eax - 0x18]; 
0x00103637: xor al, 0x8d; xchg dword ptr [esi], edi; pop eax; stc; dec dword ptr [ebp - 0x6a7e671]; call dword ptr [eax - 0x77]; 
0x00027a8a: xor al, 0x8d; xchg edi, eax; cmp ecx, edi; call dword ptr [edx + 0x50]; 
0x0010392e: xor al, 0x8d; xchg esp, ebx; cmp al, 0xf9; dec dword ptr [ebp - 0x6b0bf71]; call dword ptr [eax - 0x17]; 
0x0011a8c7: xor al, 0x8d; xor dl, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00078114: xor al, 0x8f; stc; call dword ptr [eax - 0x73]; 
0x0009379a: xor al, 0x95; stc; call dword ptr [eax - 0x18]; 
0x00094564: xor al, 0x95; stc; call dword ptr [eax - 0x18]; adc bh, al; stc; jmp dword ptr [esi - 0x70]; 
0x000ca9e4: xor al, 0xad; stc; call dword ptr [eax - 0x73]; 
0x00060748: xor al, 0xb1; or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x0012a473: xor al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012b9c3: xor al, 0xb8; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012b423: xor al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f834c: xor al, 0xb8; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84ec: xor al, 0xb8; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0010b184: xor al, 0xb8; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0015a19a: xor al, 0xc5; stc; call dword ptr [eax - 0x73]; 
0x0016e0cb: xor al, 0xc7; stc; call dword ptr [eax - 0x73]; 
0x00060568: xor al, 0xce; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0012cf8e: xor al, 0xe8; cmp al, 0xfa; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012d85e: xor al, 0xe8; insb byte ptr es:[edi], dx; int1; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0012d64e: xor al, 0xe8; jl 0x12d645; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0015e2a8: xor al, 0xe8; ret 0xfeec; 
0x001011d7: xor al, 0xe8; ret; 
0x0012d033: xor al, 0xe8; xchg edi, eax; stc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x001716e4: xor al, 0xec; call dword ptr [eax - 0x73]; 
0x0015096a: xor al, 0xee; dec dword ptr [ebp - 0x17acff8a]; mov dword ptr [0x81000323], eax; ret; 
0x00065b04: xor al, 0xf6; inc eax; jmp dword ptr [eax]; 
0x0013c977: xor al, 0xf8; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x0003445a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0003443a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0003441a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0003439a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x000343da: xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0003433a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000343ba: xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0003437a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0003427a: xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x0003435a: xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x000343fa: xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0003431a: xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x00155a6f: xor al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x001549f6: xor al, 0xff; je 0x154a1e; inc eax; call esi; 
0x000c442e: xor al, 0xff; je 0xc4456; inc eax; push ebp; call esi; 
0x000e24c8: xor al, 1; add byte ptr [eax], al; add bl, ch; ret; 
0x0006f9ea: xor al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0006fd2c: xor al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret 0x8c0f; 
0x0003cf04: xor al, 1; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000d6b68: xor al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0003ceab: xor al, 1; add byte ptr [eax], al; ret; 
0x00059dcc: xor al, 4; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x001176a8: xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000d5d4c: xor al, ah; cmc; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6520b7f]; call dword ptr [eax - 0x73]; 
0x0012437f: xor al, al; or eax, ecx; ret; 
0x000b71ca: xor al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x0011f8d9: xor al, byte ptr [eax - 0x76d00088]; ret 0x1b75; 
0x000684fc: xor al, byte ptr [eax]; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x00077d23: xor al, byte ptr [ebx + 0x1b804c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000e7093: xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x001246e7: xor al, byte ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0002561c: xor al, byte ptr [ebx + 0x757708f8]; mov ecx, dword ptr [esp + 4]; mov edi, dword ptr [ecx + eax*4 - 0x86e14]; add edi, ecx; jmp edi; 
0x001577cd: xor al, byte ptr [ebx - 0x7872f714]; push ecx; stc; call dword ptr [eax + 0x53]; 
0x0011179f: xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7db1: xor al, ch; cmp dword ptr [edi], esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d7d11: xor al, ch; fldenv [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d7dfe: xor al, ch; in al, dx; add byte ptr es:[eax], al; add esp, 0x1c; ret; 
0x000379bf: xor al, ch; jnp 0x37a3f; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d7d5e: xor al, ch; mov word ptr [edi], fs; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005a5af: xor al, ch; pop ebx; stosb byte ptr es:[edi], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001469d8: xor al, ch; ret 0xedc7; 
0x0016c8f7: xor al, ch; ret; 
0x000badfa: xor al, ch; sub eax, 0x81000c7f; sal dword ptr [ecx + esi*4 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e214: xor al, ch; xchg byte ptr [edi - 7], cl; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x000b151c: xor bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0006e136: xor bh, al; add dh, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x0014fe63: xor bh, al; inc esp; ret 4; 
0x000c19a5: xor bh, bh; aaa; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0012a5a0: xor bh, bh; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0018fc48: xor bh, bh; inc dword ptr [ecx + 0x44bc5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018fa3c: xor bh, bh; inc dword ptr [ecx + 0x44dd1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018faa1: xor bh, bh; inc dword ptr [ecx + 0x44eecc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0018fa52: xor bh, bh; inc dword ptr [ecx + 0x44f7bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00025c6a: xor bh, bh; jae 0x25c72; call edi; 
0x0008c595: xor bh, bh; je 0x8c5bd; cmp al, 0x51; call eax; 
0x000be781: xor bh, bh; mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000f7dcd: xor bh, byte ptr [eax + 0xff]; cmp edx, 0x9123683e; jne 0xf7e40; ret; 
0x0013cd37: xor bh, byte ptr [ecx]; ret 0x1f72; 
0x000a044a: xor bh, byte ptr [ecx]; stc; dec dword ptr [ebx - 0x72ebdbac]; sbb al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x000be1c4: xor bh, byte ptr [esi + 0x10]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0016501e: xor bl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x0003b740: xor bl, bl; cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0002e04a: xor bl, byte ptr [ebp]; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00170172: xor bl, ch; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0012fc72: xor byte ptr [0x719f0500], al; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x108]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0011b8b8: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011b9ae: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x000985b2: xor byte ptr [eax + 0x14f], bh; call dword ptr gs:[0x10]; 
0x0011ee7c: xor byte ptr [eax + 0x154], bh; xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012cc8e: xor byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0012cdb4: xor byte ptr [eax + 0x66], bh; mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], edi; call dword ptr gs:[0x10]; 
0x001672ee: xor byte ptr [eax + 0x73], 0xf9; call dword ptr [eax + 0x6a]; 
0x001673be: xor byte ptr [eax + 0x73], 0xf9; call dword ptr [eax - 0x18]; 
0x00167322: xor byte ptr [eax + 0x73], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x0012706b: xor byte ptr [eax + 0xcb], bh; call dword ptr gs:[0x10]; 
0x00126fcb: xor byte ptr [eax + 0xcc], bh; call dword ptr gs:[0x10]; 
0x00108cdb: xor byte ptr [eax + 0xce], bh; call dword ptr gs:[0x10]; 
0x00108e70: xor byte ptr [eax + 0xd0], bh; call dword ptr gs:[0x10]; 
0x00108dc0: xor byte ptr [eax + 0xd2], bh; call dword ptr gs:[0x10]; 
0x00108f38: xor byte ptr [eax + 0xd5], bh; call dword ptr gs:[0x10]; 
0x00108c48: xor byte ptr [eax + 0xd6], bh; call dword ptr gs:[0x10]; 
0x00111bd7: xor byte ptr [eax + 0xdd], bh; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003292b: xor byte ptr [eax + 1], 0; add byte ptr [ebp - 0x75], ah; add byte ptr [ebx + 0x54408b00], cl; ret; 
0x000cfe86: xor byte ptr [eax + 1], 0; add byte ptr [ecx], dh; jmp dword ptr [ebp - 0x75]; 
0x00049799: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, eax; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0019175b: xor byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005c0db: xor byte ptr [eax + ecx - 0x7b], dh; dec dword ptr [edi]; pop dword ptr [edi - 0x9fffff8]; ret 0xf40; 
0x001523a4: xor byte ptr [eax - 0x3d], 0xf9; call dword ptr [eax - 0x18]; 
0x000a7751: xor byte ptr [eax - 0x73], dl; inc esp; or eax, 0xe8555000; ret 0xf7b8; 
0x0003f287: xor byte ptr [eax - 0x73], dl; test dword ptr [edx], ebp; aas; stc; call dword ptr [ebx + 0x50]; 
0x000a6596: xor byte ptr [eax - 1], 0x2a; cmp ecx, eax; jne 0xa6590; mov eax, edx; pop ebx; ret; 
0x00172627: xor byte ptr [eax], al; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0008254c: xor byte ptr [eax], bl; sti; dec dword ptr [ebp - 0x66ccf7a]; call dword ptr [eax - 0x73]; 
0x000be780: xor byte ptr [eax], dh; dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0008a129: xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d6c60: xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x0002a73a: xor byte ptr [ebp + 0x4b840fc0], al; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x001549ed: xor byte ptr [ebp + 0x50482444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0007abb1: xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0010a601: xor byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000b8ee0: xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x00157ce0: xor byte ptr [ebp + 0x6f], 0xf9; call dword ptr [eax + 0x55]; 
0x00154a4d: xor byte ptr [ebp - 0x10], 0x39; ret; 
0x000900fc: xor byte ptr [ebp - 0x1a702380], cl; call dword ptr [eax - 0x73]; 
0x00033e6f: xor byte ptr [ebp - 0x5877f040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x699f27d], cl; call dword ptr [esi - 1]; 
0x0009057d: xor byte ptr [ebp - 0x66c5b80], cl; call dword ptr [eax - 0x18]; 
0x0015f68b: xor byte ptr [ebp - 0x68ec77a], cl; call dword ptr [eax + 0x6a]; 
0x00120452: xor byte ptr [ebp - 0x690aa7d], cl; call dword ptr [eax + 0x6a]; 
0x00155b2b: xor byte ptr [ebp - 0x690ad7a], cl; call dword ptr [eax + 0x6a]; 
0x001202d2: xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax + 0x6a]; 
0x0011ff8f: xor byte ptr [ebp - 0x696a47d], cl; call dword ptr [eax - 1]; 
0x00122b1d: xor byte ptr [ebp - 0x6a3367d], cl; call dword ptr [eax + 0x55]; 
0x0004eef5: xor byte ptr [ebp - 0x6c07880], cl; call dword ptr [eax + 0x56]; 
0x00024eb1: xor byte ptr [ebp - 0x6c7317d], cl; call dword ptr [eax - 1]; 
0x00024ece: xor byte ptr [ebp - 0x6c74b7d], cl; call dword ptr [eax - 1]; 
0x0004e944: xor byte ptr [ebp - 0x700b7c7c], cl; clc; call dword ptr [eax + 0x52]; 
0x000479de: xor byte ptr [ebp - 0x700b7e7c], cl; clc; call dword ptr [eax - 1]; 
0x000daec9: xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x00079391: xor byte ptr [ebx + 0x29772efb], al; mov edi, dword ptr [ebp + ebx*4 - 0x71910]; add edi, ebp; jmp edi; 
0x000badf7: xor byte ptr [ebx + 0x2de830c0], al; jg 0xbae0b; add byte ptr [ecx + 0x10b174c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00173f62: xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x0016b1ca: xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x000be336: xor byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000baf01: xor byte ptr [ebx + 0x5e082444], cl; ret; 
0x0007fed1: xor byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0002820f: xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0002554e: xor byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0012d47c: xor byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0003b6a6: xor byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00133f49: xor byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0017f9b9: xor byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x00090dc7: xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e49ef: xor byte ptr [ebx + 0x6c8d08ec], al; and al, 0xc; push ebp; push ebx; call eax; 
0x0013cd2a: xor byte ptr [ebx + 0x84c8d17], cl; or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [edx + esi + 0x39], cl; ret 0x1f72; 
0x000b7867: xor byte ptr [ebx + esi*8 - 0x43170001], 0xb4; or al, 0; add ecx, 0x10e4cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001444d9: xor byte ptr [ebx - 0x18], dl; inc eax; ret 0xfff7; 
0x0008c958: xor byte ptr [ebx - 0x2776df3c], al; pop ebx; pop esi; pop edi; ret; 
0x0008ae09: xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8ae28; ret; 
0x0012a46f: xor byte ptr [ebx - 0x47cbdbb4], cl; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012b9bf: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012b41f: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f8348: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f84e8: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0010b180: xor byte ptr [ebx - 0x47cbdbb4], cl; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011dbf7: xor byte ptr [ebx - 0x47dfdba4], cl; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017d15f: xor byte ptr [ebx - 0x4972f714], al; mov dh, byte ptr [esi - 7]; call dword ptr [esi + 0x53]; 
0x0003898b: xor byte ptr [ebx - 0x57cfe3f], al; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0018b8ad: xor byte ptr [ebx - 0x72cbdbac], cl; jl 0x18b8d9; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0011bc68: xor byte ptr [ebx - 0x76cbdbb4], cl; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001254f8: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00125d98: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f8378: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f8518: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x001257c9: xor byte ptr [ebx - 0x76dbdbbc], cl; ret; 
0x0006492a: xor byte ptr [ebx - 0x78f0f607], al; ret; 
0x00070735: xor byte ptr [ebx - 0x78f0f608], al; sub eax, 0x8bfffff2; inc edx; add al, 0x83; ret 0x8304; 
0x0014fe47: xor byte ptr [ebx - 0x7bf00006], al; stosb byte ptr es:[edi], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x000ff502: xor byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8904; 
0x000379b9: xor byte ptr [ebx - 0xe3dbbc], cl; xor al, ch; jnp 0x37a3f; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x0014606f: xor byte ptr [ebx - 7], ch; call dword ptr [eax - 0x18]; 
0x0014606f: xor byte ptr [ebx - 7], ch; call dword ptr [eax - 0x18]; pop es; fucomp st(6); jmp dword ptr [esi - 0x70]; 
0x0011fa2c: xor byte ptr [ebx], al; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011b8fd: xor byte ptr [ecx + 0x244489ea], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0011b9ed: xor byte ptr [ecx + 0x244489fa], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0014c3ed: xor byte ptr [ecx + 0x24448bc1], cl; sub byte ptr [ecx - 0x7ccbdbbc], cl; les ecx, ptr [ecx + ecx*4]; call 0x44248d86; ret 0x148b; 
0x0015e2a2: xor byte ptr [ecx + 0x2474ff10], cl; xor al, 0xe8; ret 0xfeec; 
0x0007fecc: xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0010b8ec: xor byte ptr [ecx + 0x35cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00157fe8: xor byte ptr [ecx + 0x44830c78], cl; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0012d4ff: xor byte ptr [ecx + 0x448b2404], cl; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00136b2e: xor byte ptr [ecx + 0x4d89847d], cl; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x0017fa7e: xor byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0017840c: xor byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x001463b5: xor byte ptr [ecx + 0x67858dc7], cl; cmp ecx, edi; call dword ptr [eax + 0x57]; 
0x0011eca0: xor byte ptr [ecx + 0xba0850], cl; add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x0010ed5c: xor byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0010ed5c: xor byte ptr [ecx + ebx*2], 0xf9; call dword ptr [eax - 0x18]; jns 0x10ed73; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00036793: xor byte ptr [ecx - 0x1fe0008], al; jmp esi; 
0x00111c10: xor byte ptr [ecx - 0x7615760f], cl; inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000c63a3: xor byte ptr [ecx - 0x76227612], cl; ret; 
0x00182d8e: xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x000961ad: xor byte ptr [ecx], 0xc0; ret; 
0x0006f12a: xor byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0011d02e: xor byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000bf165: xor byte ptr [ecx], al; ret 0x267c; 
0x0007f23d: xor byte ptr [ecx], al; ret; 
0x000d6c5d: xor byte ptr [ecx], bh; dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x00164e43: xor byte ptr [ecx], bh; ret 0x1074; 
0x0018179b: xor byte ptr [ecx], bh; ret 0x820f; 
0x0012767f: xor byte ptr [ecx], bh; ret 0x840f; 
0x0011ab06: xor byte ptr [ecx], bh; ret 0xc389; 
0x0007c82f: xor byte ptr [ecx], bh; ret; 
0x0010738e: xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0013be9e: xor byte ptr [ecx], ch; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x0013bd42: xor byte ptr [ecx], ch; fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00176fd4: xor byte ptr [ecx], ch; ret 0x5356; 
0x000a9af6: xor byte ptr [ecx], ch; ret; 
0x001309ca: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x00131322: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f608]; ret; 
0x0011e93d: xor byte ptr [ecx], dh; ret 0xe281; 
0x000b77e0: xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad964: xor byte ptr [edi + 0x5e], bl; ret; 
0x00078113: xor byte ptr [edi + ecx*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00078aa3: xor byte ptr [edi], cl; mov dh, 0x57; add ecx, ebp; ret; 
0x000beec2: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b13e6: xor byte ptr [edi], cl; mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000c7669: xor byte ptr [edi], cl; xchg edx, eax; ret 0x7439; 
0x000668e8: xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0008c65d: xor byte ptr [edx + 0x51], dl; call eax; 
0x00137af0: xor byte ptr [edx + 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x0008b26b: xor byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008b29b: xor byte ptr [edx + ebx], 0; cmp eax, 1; jg 0x8b2b0; ret; 
0x0008b2b4: xor byte ptr [edx + ebx], 0; push eax; call 0x8d660; add esp, 0x1c; ret; 
0x00172d63: xor byte ptr [edx + ecx - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0018d269: xor byte ptr [edx - 0x58], 0xfa; jmp dword ptr [esi - 0x70]; 
0x001a3b4c: xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00046405: xor byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x46d60; add esp, 0x1c; ret; 
0x000cb515: xor byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcbde0; add esp, 0x1c; ret; 
0x000c40c4: xor byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0019f331: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x001a356f: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x000bed8b: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001840f1: xor byte ptr [esi - 0x18], dl; clc; mov ch, bh; jmp dword ptr [ecx]; 
0x00182e2a: xor byte ptr [esi - 0x3b7c0015], 0x1c; ret; 
0x001438ac: xor byte ptr [esi - 1], dl; call dword ptr [ebp + 0x57]; 
0x0018b4dd: xor byte ptr [esi], 0x5a; stc; call dword ptr [eax + 0x53]; 
0x0013e1b4: xor byte ptr [esi], 0x69; stc; call dword ptr [eax + 0x6a]; 
0x00033eed: xor byte ptr [esi], bh; stc; call dword ptr [eax - 1]; 
0x00143788: xor byte ptr [esp + eax*4], 0xf9; call dword ptr [eax - 0x18]; 
0x001a3816: xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0013ded6: xor ch, bh; jmp dword ptr [ebp - 0x39]; 
0x0009f557: xor ch, byte ptr [ecx]; ret 0x850f; 
0x000bf256: xor ch, ch; add eax, ecx; pop edi; ret; 
0x00150a90: xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x00031b5d: xor cl, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00117eea: xor cl, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0008d624: xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008d6a6: xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d6a6: xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0008f316: xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0008ee3b: xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0008fc40: xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00095e00: xor cl, 0x87; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00126441: xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x000bfad4: xor cl, byte ptr [eax + eax]; add ebx, 0x106621; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000a9812: xor cl, byte ptr [ebp + 0x5e5b0142]; ret; 
0x000ad091: xor cl, byte ptr [ebp - 0x157c07a8]; add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x0012a8e5: xor cl, byte ptr [ebp - 0x47f3dbb4]; les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012bb65: xor cl, byte ptr [ebp - 0x47f3dbb4]; ret; 
0x00134682: xor cl, byte ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x664a808d; stc; call dword ptr [eax - 0x75]; 
0x0008ec15: xor cl, byte ptr [ebx - 0x776f3b5]; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000a9762: xor cl, byte ptr [ecx + 0x242c6d0]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000e4701: xor cl, ch; das; idiv edi; call dword ptr [eax + 0x55]; 
0x000ca3d2: xor cl, ch; pop esp; idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000bd953: xor cl, cl; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000b5a0c: xor dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0006016a: xor dh, byte ptr [eax]; cld; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0015074a: xor dh, byte ptr [esi]; out dx, al; dec dword ptr [ebx - 0x72f3db8c]; xchg al, dh; ret 0xfff9; 
0x000fc57a: xor dh, dh; ret 0x7404; 
0x00113882: xor dl, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00090d2c: xor dl, bh; dec dword ptr [ebx - 0x72fbdb84]; xchg eax, eax; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x0013d443: xor dl, dh; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000c7b1e: xor dword ptr [eax + eax*2], 0x9068fff9; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; adc dword ptr [esi + eax*4 - 7], 0x4be850ff; ret 0xfff6; 
0x00191a99: xor dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0016d829: xor dword ptr [eax - 0x1000000], 0x74; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0016d807: xor dword ptr [eax - 0x1000000], 0xffffffb3; test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x000ece3a: xor dword ptr [eax - 0x51], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00139e60: xor dword ptr [eax - 0x73], edx; adc al, 0xb9; stc; call dword ptr [eax - 0x18]; 
0x000fb88b: xor dword ptr [eax - 4], esp; dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x000faca5: xor dword ptr [eax - 7], ebx; call dword ptr [eax + 0x55]; 
0x00033eec: xor dword ptr [eax], 0x3e; stc; call dword ptr [eax - 1]; 
0x000ea7c0: xor dword ptr [eax], 0xffffffaf; stc; call dword ptr [eax - 0x73]; 
0x0011baec: xor dword ptr [eax], 0xffffffb3; stc; call dword ptr [eax - 0x18]; 
0x00128dd7: xor dword ptr [eax], 0xffffffb5; stc; call dword ptr [eax - 0x18]; 
0x00130d40: xor dword ptr [ebp - 0x76e98b37], eax; ret; 
0x00162e98: xor dword ptr [ebp], 0; add bl, ch; mov dword ptr [0xfd6038e8], eax; jmp dword ptr [esi - 0x70]; 
0x0007eaf3: xor dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0016b324: xor dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x0009968a: xor dword ptr [ebx + 0x5e5b24c4], eax; ret; 
0x0012e8fb: xor dword ptr [ebx + 0x5e5b6cc4], eax; pop edi; pop ebp; ret; 
0x00060a51: xor dword ptr [ebx + 0x5e5b7cc4], eax; pop edi; pop ebp; ret; 
0x000f869c: xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00028656: xor dword ptr [ebx - 0x72c3dba4], ecx; or dword ptr [esp + edi*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000dbce4: xor dword ptr [ebx], 0x56; stc; call dword ptr [eax - 0x18]; 
0x00122ed7: xor dword ptr [ebx], 0x63; stc; call dword ptr [eax + 0x55]; 
0x00033c77: xor dword ptr [ecx + 0x5f5e5b10], ecx; ret; 
0x000ed97a: xor dword ptr [ecx + 0x75], 0xfffffff3; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x00172a11: xor dword ptr [ecx + eax], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0010b9f5: xor dword ptr [ecx + ebx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00175a31: xor dword ptr [ecx + edi*8 - 1], 0x8d50056a; test dword ptr [esp + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x0016b592: xor dword ptr [ecx + edi*8 - 1], 0x8d50056a; xor dword ptr [esp + eax*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000faca4: xor dword ptr [ecx], 0x58; stc; call dword ptr [eax + 0x55]; 
0x00122c7e: xor dword ptr [ecx], 0x5e; stc; call dword ptr [eax + 0x55]; 
0x0015553b: xor dword ptr [ecx], 0x6f; stc; call dword ptr [eax - 0x18]; 
0x0011c913: xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b84cb: xor dword ptr [ecx], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000a13d7: xor dword ptr [ecx], edi; ret 0x840f; 
0x0016e0ca: xor dword ptr [edi + eax*8], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0007fc07: xor dword ptr [edi + edi*8 - 1], 0xffffffff; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x001920e4: xor dword ptr [edi + edi*8], ecx; inc dword ptr [ecx + 0x429a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e5e4: xor dword ptr [edi - 1], eax; inc dword ptr [ecx + 0x45fa8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015553c: xor dword ptr [edi - 7], ebp; call dword ptr [eax - 0x18]; 
0x000fadb5: xor dword ptr [edi], 0x58; stc; call dword ptr [eax + 0x55]; 
0x00094502: xor dword ptr [edx + 0x50], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000999e9: xor dword ptr [edx + eax - 0x3b7d0000], 0x18; pop ebx; ret; 
0x0005fbb4: xor dword ptr [edx + eax*2], 0xfffffff9; call dword ptr [esi + 0x6a]; 
0x00094563: xor dword ptr [edx*4 - 0x17af0007], 0x12; clc; stc; jmp dword ptr [esi - 0x70]; 
0x0007e462: xor dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x0019ef35: xor dword ptr [esi - 0x7cffffff], 0xffffffed; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x00122c7f: xor dword ptr [esi - 7], ebx; call dword ptr [eax + 0x55]; 
0x0005d191: xor dword ptr [esi], 0x41; stc; call dword ptr [eax - 0x18]; 
0x000d5d77: xor dword ptr [esi], eax; add byte ptr [ebx - 0x363f4b], cl; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x0005f7bf: xor dword ptr [esp + eax*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00173ebb: xor dword ptr [esp + ebp*8], ecx; call dword ptr [eax - 0x73]; 
0x0005265d: xor eax, 0x14; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00042426: xor eax, 0x1f; add eax, 1; pop ebx; ret; 
0x000423db: xor eax, 0x1f; add eax, 1; ret; 
0x000424a0: xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000427f6: xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000423c0: xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x00042756: xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042461: xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00042771: xor eax, 0x1f; ret; 
0x000bf33d: xor eax, 0x1f; sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x0005bc25: xor eax, 0x20c0950f; ret; 
0x0006f931: xor eax, 0x246c8be0; inc eax; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00191c5d: xor eax, 0x300042e; sbb al, 0x8b; jmp ebx; 
0x0011b9aa: xor eax, 0x30244c8b; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011bc2a: xor eax, 0x30245c8b; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003d728: xor eax, 0x31000001; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x0015cb45: xor eax, 0x34890002; and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x000e4b7a: xor eax, 0x4244c8d; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000fbd5b: xor eax, 0x48b4277; and al, 0xf; mov dh, 0xd2; add eax, dword ptr [eax + edx*4 - 0x6f994]; jmp eax; 
0x0004135e: xor eax, 0x5b18c483; ret; 
0x001247ac: xor eax, 0x5b20c483; pop esi; pop edi; ret; 
0x00135a52: xor eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x0004d02e: xor eax, 0x7fffffff; ret; 
0x0011ec67: xor eax, 0x83000053; les edx, ptr [eax]; add esp, 0xc; ret; 
0x00060327: xor eax, 0x830002d3; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00090267: xor eax, 0x890008f3; ret; 
0x00099029: xor eax, 0x8908ec83; ret; 
0x001438bb: xor eax, 0x8953000f; ret; 
0x00050747: xor eax, 0x8bfffe36; jl 0x50772; sub byte ptr [ebp - 0x677a779], cl; call dword ptr [eax - 0x73]; 
0x00035b72: xor eax, 0x8bffffff; inc ebp; mov esp, 0xe9ac4589; ret 0xfffd; 
0x0011c64f: xor eax, 0xbf000001; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018f7b5: xor eax, 0xc381ffff; fmul dword ptr [ebp + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007a0a4: xor eax, 0xc4830001; adc cl, ch; cmp esi, -1; call dword ptr [eax - 0x76f3137d]; ret; 
0x0006ef98: xor eax, 0xc4830005; or al, 0x89; ret; 
0x0017fc09: xor eax, 0xc483ffea; sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0013c7e7: xor eax, 0xc483fff8; adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x00140a05: xor eax, 0xc483fffe; adc byte ptr [ebp - 0x7277f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x0002fc6f: xor eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x0003a20b: xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x000408da: xor eax, 0xff04ec83; je 0x40905; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00149a68: xor eax, 1; pop ebx; ret; 
0x00084f2d: xor eax, 1; ret; 
0x00137301: xor eax, dword ptr [0x18]; call eax; 
0x00024fdd: xor eax, dword ptr [0x18]; jmp eax; 
0x0013a8f0: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013a9c1: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e81c: xor eax, dword ptr [0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002506a: xor eax, dword ptr [0x18]; pop edi; pop ebp; jmp eax; 
0x00151ac1: xor eax, dword ptr [0x18]; pop edi; pop ebp; ret; 
0x00151743: xor eax, dword ptr [0x18]; push eax; call edx; 
0x00137330: xor eax, dword ptr [0x18]; push esi; call eax; 
0x0003ebe3: xor eax, dword ptr [0x18]; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3ecb0; call eax; 
0x0011f507: xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003851c: xor eax, dword ptr [eax]; add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x00137e08: xor eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0005ada0: xor eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x001a5bf0: xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x001115d8: xor eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a5bf6: xor eax, dword ptr [ecx]; ret 0xd089; 
0x00137300: xor eax, dword ptr gs:[0x18]; call eax; 
0x00024fdc: xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013a8ef: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013a9c0: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e81b: xor eax, dword ptr gs:[0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00025069: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00151ac0: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x00151742: xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x0013732f: xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0003ebe2: xor eax, dword ptr gs:[0x18]; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3ecb0; call eax; 
0x0011fe79: xor eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003ea33: xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008d050: xor eax, eax; add esp, 0xc; ret; 
0x00039bae: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003feb2: xor eax, eax; add esp, 8; pop ebx; ret; 
0x000f8720: xor eax, eax; cmp dword ptr [esi + ecx*4], ebx; je 0xf8738; pop ebx; pop esi; ret; 
0x000e47c3: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe47d0; add esp, 0xc; ret; 
0x000e4893: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe48a0; add esp, 0xc; ret; 
0x00034300: xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x001a50a3: xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x1a50b0; pop ebx; ret; 
0x001563b7: xor eax, eax; cmp ecx, edx; setne al; ret; 
0x000f7f2c: xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000f7f07: xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000a6eaf: xor eax, eax; cmp edx, 0x40; ja 0xa6ebd; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a6ecf: xor eax, eax; cmp edx, 0x40; ja 0xa6edd; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000f7f70: xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x0008c9be: xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x00149a0b: xor eax, eax; cmp word ptr [edx + 2], bx; je 0x149a18; pop ebx; ret; 
0x0011e1e4: xor eax, eax; mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x0008528d: xor eax, eax; mov dword ptr [ebx + 4], edx; pop ebx; pop esi; ret; 
0x0007f961: xor eax, eax; mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0008ea7c: xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0009f255: xor eax, eax; mov eax, 0x163; mov byte ptr [esi + 0x3c24], 1; lea ebx, [esi + 0x3c1c]; call dword ptr gs:[0x10]; 
0x0012f0c4: xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x12f0d0; ret; 
0x000d6f64: xor eax, eax; mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd6f8a; ret; 
0x0005a943: xor eax, eax; mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x5a958; add esp, 0xc; ret; 
0x00077c13: xor eax, eax; mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x77c28; add esp, 0xc; ret; 
0x001243d6: xor eax, eax; or eax, esi; pop esi; pop edi; ret; 
0x0019f0d2: xor eax, eax; pop ebp; ret; 
0x0008e865: xor eax, eax; pop ebx; pop edi; ret; 
0x0013735a: xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x000251be: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003e7a2: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0004027e: xor eax, eax; pop ebx; pop esi; ret; 
0x0003be26: xor eax, eax; pop ebx; ret; 
0x001a0651: xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x001a00f0: xor eax, eax; pop edi; pop ebx; ret; 
0x000d6b34: xor eax, eax; pop edi; pop esi; ret; 
0x000be980: xor eax, eax; pop edi; ret; 
0x000a376c: xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x0003fb9a: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00052f70: xor eax, eax; pop esi; pop edi; ret; 
0x0008e742: xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003cb20: xor eax, eax; ret; 
0x0003cd9c: xor eax, eax; test edx, edx; sete al; ret; 
0x00042928: xor eax, eax; tzcnt eax, ecx; test ecx, ecx; je 0x42938; pop ebx; ret; 
0x00042994: xor eax, eax; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x00108420: xor eax, eax; xchg dword ptr [edi + 0x3fac], eax; cmp eax, 1; jg 0x108468; call dword ptr [esi]; 
0x0004113b: xor eax, ebx; pop ebx; ret; 
0x0003b85b: xor eax, ecx; shr eax, 0x1f; ret; 
0x000426e7: xor eax, edx; cmp edx, eax; setb al; ret; 
0x000426d8: xor eax, edx; cmp edx, eax; setle al; ret; 
0x000398da: xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x398c0; ret; 
0x00070dbd: xor eax, esp; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x72834]; add ecx, eax; jmp ecx; 
0x00128b75: xor ebp, 0x63; stc; call dword ptr [eax + 0x56]; 
0x0017abc8: xor ebp, eax; ret 0xfaa5; 
0x00129c8d: xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00061a3c: xor ebp, ecx; ret 0xfffd; 
0x001554d4: xor ebx, 0x10c483ff; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0004287b: xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x00122ce9: xor ebx, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x0016510b: xor ebx, 0x72; stc; call dword ptr [eax - 0x18]; 
0x001717c3: xor ebx, ebp; dec dword ptr [ebx - 0x76f7db8c]; ret; 
0x00150f5b: xor ebx, ebx; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00091f2e: xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000d92b5: xor ebx, ebx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xd92d0; pop ebx; ret; 
0x00121ab6: xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000910b1: xor ebx, ebx; lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00024d66: xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0011ee82: xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c2490: xor ebx, ebx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0011ef45: xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011eef5: xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00137245: xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000f4b72: xor ebx, edi; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000424ed: xor ecx, 0x1f; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000427bf: xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x000420e5: xor ecx, 0x1f; shr eax, cl; ret; 
0x00122e6f: xor ecx, 0x61; stc; call dword ptr [eax + 0x55]; 
0x0008383c: xor ecx, dword ptr [eax]; cli; call dword ptr [edi + 0x56]; 
0x000a2cd8: xor ecx, dword ptr [ebp - 0x6577779]; call dword ptr [eax - 0x73]; 
0x00108e6c: xor ecx, dword ptr [ebx - 0x47cfdba4]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00108dbc: xor ecx, dword ptr [ebx - 0x47cfdba4]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014d8f5: xor ecx, dword ptr [ecx - 0x476dbe4]; call 0x231a0; mov dword ptr [esp], ebp; call esi; 
0x000a9344: xor ecx, dword ptr [ecx - 0x760e7605]; aad 0x83; ret 0x3801; 
0x00034a94: xor ecx, ecx; call 0x34570; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0011bdb5: xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0011bdb5: xor ecx, ecx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11bdd0; pop ebx; ret; 
0x001519bb: xor ecx, ecx; cmp eax, 2; jne 0x1519c8; mov eax, ecx; ret; 
0x00098639: xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000e4925: xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0014baf6: xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x0003fb13: xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0008eb6b: xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00042510: xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x000934c9: xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00122d4f: xor edi, 0x5f; stc; call dword ptr [edx + 0x52]; 
0x0016111b: xor edi, 0x71; stc; call dword ptr [eax - 0x18]; 
0x0018c85f: xor edi, dword ptr [ebx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000a7158: xor edi, dword ptr [ecx]; ret 0x3d73; 
0x00059e34: xor edi, dword ptr [ecx]; ret; 
0x0016fea6: xor edi, ecx; call dword ptr [eax + 0x52]; 
0x0003d730: xor edi, edi; call dword ptr gs:[0x10]; 
0x0018fb42: xor edi, edi; inc dword ptr [ecx + 0x44d8bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016cb28: xor edi, edi; je 0x16cb50; adc byte ptr [ecx + 0x446ce8c7], cl; cli; jmp dword ptr [ebp - 0x77]; 
0x00145aef: xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x0018134b: xor edi, edi; jne 0x18134f; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00180333: xor edi, edi; push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000421d6: xor edx, 0x1f; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x0011dda5: xor edx, 0x20; mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x00050f90: xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x00042769: xor edx, 0xffffffff; je 0x42774; bsr eax, edx; xor eax, 0x1f; ret; 
0x00042789: xor edx, 0xffffffff; je 0x42794; bsr eax, edx; xor eax, 0x1f; ret; 
0x00024ac5: xor edx, dword ptr [0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x000db3bb: xor edx, dword ptr [eax - 0x73]; test dword ptr [eax], ebp; push esi; stc; call dword ptr [eax - 0x18]; 
0x000dbce5: xor edx, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x00024ac4: xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a50], edx; ret; 
0x00150d64: xor edx, edx; add eax, 4; xchg dword ptr [eax], edx; cmp edx, 1; jg 0x150d78; ret; 
0x00135b89: xor edx, edx; add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x0016ae80: xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0008d3fe: xor edx, edx; call dword ptr gs:[0x10]; 
0x0010acad: xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x000dc0d3: xor edx, edx; cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x001382e6: xor edx, edx; div ebx; pop ebx; pop esi; pop edi; ret; 
0x000419d5: xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00092d46: xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0005a183: xor edx, edx; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x00096226: xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x00109f13: xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000920ed: xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009d112: xor edx, edx; mov eax, 1; call 0x9d080; mov dword ptr [esp], esi; call ebx; 
0x00130003: xor edx, edx; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x12fed0; add esp, 4; ret; 
0x0016aed8: xor edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x00085709: xor edx, edx; mov eax, edx; pop ebx; ret; 
0x00093bb4: xor edx, edx; mov eax, edx; ret; 
0x00023267: xor edx, edx; mov ebx, 1; mov esi, 8; mov dword ptr [ebp + 0x137c], 1; call dword ptr gs:[0x10]; 
0x0009368d: xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00109bc1: xor edx, edx; mov ecx, dword ptr [esp]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003d619: xor edx, edx; mov ecx, edi; mov eax, esi; call dword ptr gs:[0x10]; 
0x000917ba: xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00091a7b: xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00109f7b: xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x000a9570: xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00092ce7: xor edx, edx; pop ebx; pop esi; mov eax, edx; ret; 
0x000420a5: xor edx, edx; pop ebx; ret; 
0x0004215b: xor edx, edx; ret; 
0x0003fb7b: xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0009d48d: xor edx, edx; test cl, 0x40; jne 0x9d4b8; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x001322f6: xor edx, edx; test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x00084ef7: xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x00042564: xor edx, edx; tzcnt edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x00091155: xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003d72c: xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x00098934: xor esi, dword ptr [ebp + 9]; xor eax, eax; pop ebx; pop esi; ret; 
0x0014daa2: xor esi, dword ptr [ebp - 0x55]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009be2f: xor esi, dword ptr [ebp - 0x62]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x001a5bee: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x001a5bf4: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x0016befa: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x0016bd5f: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret; 
0x0016befc: xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x0016bd61: xor esi, dword ptr [ecx]; ret; 
0x000942c6: xor esi, dword ptr [edi + eax - 0x77]; ret 0xc3e9; 
0x0008f526: xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0017bee0: xor esi, esi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00094992: xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d5b3: xor esi, esi; call dword ptr gs:[0x10]; 
0x0008f848: xor esi, esi; lea ebx, [edi + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0011ee88: xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000958cf: xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008dfff: xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008ca99: xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008d671: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008d671: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0008fa72: xor esi, esi; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0008fb04: xor esi, esi; mov ebx, ebp; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008f8e3: xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00096979: xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008db5a: xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000940c0: xor esi, esi; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008d44e: xor esi, esi; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008f310: xor esi, esi; mov ecx, dword ptr [esp + 4]; xor cl, 0x81; mov dword ptr [edi + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000963c6: xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ed8d: xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008dd98: xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001854c0: xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008f584: xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fdb0: xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008f672: xor esi, esi; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x0012e155: xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012ece0: xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x000bf6b0: xor esi, esi; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0012ebb7: xor esi, esi; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012e045: xor esi, esi; push ebx; mov ebx, 0xd; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0009627c: xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0008d69b: xor esi, esi; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011ef42: xor esi, esi; push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001a47bc: xor esi, esi; ret 0xf01; 
0x0008d622: xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008fb76: xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0003d72e: xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x0009518a: xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009a0d1: xor esi, esp; call dword ptr [ecx + 0x50]; 
0x00056133: xor esp, 0xffffff8f; clc; call dword ptr [eax + 0x51]; 
0x00047985: xor esp, 0xffffff8f; clc; call dword ptr [eax + 0x52]; 
0x000561b8: xor esp, 0xffffff8f; clc; call dword ptr [eax - 1]; 
0x0014d843: xor esp, 0xffffffc0; stc; call dword ptr [eax - 0x18]; 
0x0014d843: xor esp, 0xffffffc0; stc; call dword ptr [eax - 0x18]; xor ah, byte ptr [ebp - 0x12]; jmp dword ptr [esi - 0x70]; 
0x0014e82e: xor esp, 0xffffffc1; stc; call dword ptr [eax - 0x73]; 
0x0014ce71: xor esp, dword ptr [ebx - 0x13]; dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x00122ed8: xor esp, dword ptr [ebx - 7]; call dword ptr [eax + 0x55]; 
0x001a5b1c: xor esp, dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0006fc43: xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x726b4]; add ecx, eax; jmp ecx; 
0x000d5c49: xor esp, ecx; cmc; dec dword ptr [ebx - 0x363f4b]; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 
0x000d5d76: xor word ptr [esi], ax; add byte ptr [ebx - 0x363f4b], cl; dec dword ptr [ebp - 0x6520b7a]; call dword ptr [eax - 0x73]; 

48169 gadgets found
